MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Lincoln Zocateli <lincoln@nuuve.com.br>"'
    - Key: org.label-schema.description
      Value: '"Agent VSTS build with base linux ubuntu"'
    - Key: org.label-schema.name
      Value: '"vsts-agent-pool"'
    - Key: org.label-schema.url
      Value: '"https://nuuve.com.br"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/lincolnzocateli/vsts-agent-pool/tree/master"'
    - Key: org.label-schema.usage
      Value: '"https://github.com/lincolnzocateli/vsts-agent-pool/blob/master/README.md"'
    - Key: org.label-schema.vendor
      Value: '"Nuuve Information Technology"'
    - Key: org.label-schema.version
      Value: '"v2.0.0"'
    - Key: org.label-schema.schema-version
      Value: '"1.0.0"'
    - Key: org.label-schema.docker.cmd
      Value: '"docker run --name vsts-agent-pool         -d         -e VS_TENANT=your
        vsts tenant         -e AGENT_PAT=your vsts PAT         -e AGENT_POOL=your
        vsts pool         --volume=/var/run/docker.sock:/var/run/docker.sock         -v
        /home/my dir/teste:/vsts-agent-pool/_works         lzocateli/vsts-agent-pool:vX.Y.Z
        "'
    - Key: org.label-schema.docker.cmd.test
      Value: '"docker run --name vsts-agent-pool         -ti         -e VS_TENANT=your
        vsts tenant         -e AGENT_PAT=your vsts PAT         -e AGENT_POOL=your
        vsts pool         --rm         --volume=/var/run/docker.sock:/var/run/docker.sock         -v
        /home/my dir/teste:/vsts-agent-pool/_works         lzocateli/vsts-agent-pool:vX.Y.Z
        "'
    Name: label
  - CmdLine:
    - apt-get update  && apt-get install -y --no-install-recommends     apt-utils     curl     dnsutils     file     ftp     iproute2     iputils-ping     locales     openssh-client     sudo     telnet     time     unzip     wget     zip     tzdata     vim     gedit     rsync     software-properties-common  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update  && apt-get install -y --no-install-recommends     build-essential  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update  && apt-get install -y --no-install-recommends     libuuid1     libicu60     libunwind8     apt-transport-https  &&
      apt-add-repository ppa:git-core/ppa  && apt-get update  && apt-get install -y
      --no-install-recommends     git  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O azcopy.tar.gz https://aka.ms/downloadazcopylinux64  && tar -xf azcopy.tar.gz  &&
      ./install.sh  && rm ./install.sh  && rm -rf azcopy  && rm -rf azcopy.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb
      > packages-microsoft-prod.deb  && dpkg -i packages-microsoft-prod.deb  && rm
      packages-microsoft-prod.deb  && apt-get update  && apt-get install -y --no-install-recommends     apt-transport-https     dotnet-sdk-2.1  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - dotnet help
    Name: run
    PrependShell: true
  - Env:
    - Key: dotnet
      Value: /usr/bin/dotnet
    Name: env
  - CmdLine:
    - echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release
      -cs) main" |     tee /etc/apt/sources.list.d/azure-cli.list  && curl -L https://packages.microsoft.com/keys/microsoft.asc
      | apt-key add -  && apt-get update  && apt-get install -y apt-transport-https     azure-cli  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o /tmp/powershell.tar.gz https://github.com/PowerShell/PowerShell/releases/download/v6.0.2/powershell-6.0.2-linux-x64.tar.gz  &&
      mkdir -p /opt/microsoft/powershell/6.0.2  && tar zxf /tmp/powershell.tar.gz
      -C /opt/microsoft/powershell/6.0.2  && rm /tmp/powershell.tar.gz  && chmod +x
      /opt/microsoft/powershell/6.0.2/pwsh  && ln -s /opt/microsoft/powershell/6.0.2/pwsh
      /usr/bin/pwsh
    Name: run
    PrependShell: true
  - CmdLine:
    - NODE_VERSION=$(         curl -sL https://nodejs.org/dist/latest/ |         tac
      |         tac |         grep -oPa -m 1 '(?<=node-v)(.*?)(?=-linux-x64\.tar\.xz)'
      |         head -1     )  && echo $NODE_VERSION  && curl -SLO "https://nodejs.org/dist/latest/node-v$NODE_VERSION-linux-x64.tar.xz"
      -o "node-v$NODE_VERSION-linux-x64.tar.xz"  && tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz"
      -C /usr/local --strip-components=1  && rm "node-v$NODE_VERSION-linux-x64.tar.xz"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /vsts-agent-pool
  - CmdLine:
    - curl -sOSL https://vstsagentpackage.azureedge.net/agent/2.136.1/vsts-agent-linux-x64-2.136.1.tar.gz  &&
      tar xzf vsts-agent-linux-x64-2.136.1.tar.gz  && rm vsts-agent-linux-x64-2.136.1.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone -b master https://github.com/lincolnzocateli/vsts-agent-pool.git  &&
      cp ./vsts-agent-pool/agent/*.sh .  && rm -rf vsts-agent-pool  && chmod +x *.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /vsts-agent-pool/configureOrRun.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
