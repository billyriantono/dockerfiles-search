{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "kibana:4.1",
      "SourceCode": "FROM kibana:4.1",
      "Platform": "",
      "From": {
        "Image": "kibana:4.1"
      },
      "Commands": [
        {
          "Maintainer": "wtakase \u003cwataru.takase@kek.jp\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "proxy.js",
            "/opt/kibana/src/routes/"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e \"s/^verify_ssl: true/verify_ssl: false/\"            -e \"/^verify_ssl:.*/a multiple_index: true\"            /opt/kibana/config/kibana.yml \u0026\u0026     sed -i -e \"s/maybeIndex === config.kibana.kibana_index/maybeIndex.lastIndexOf(config.kibana.kibana_index, 0) === 0/\"            -e \"s/index !== config.kibana.kibana_index/index.lastIndexOf(config.kibana.kibana_index, 0) !== 0/\"            /opt/kibana/src/lib/validateRequest.js \u0026\u0026     sed -i \"s/resp\\[indexName\\].mappings/resp[Object.keys(resp).filter(function(index) { return (index.lastIndexOf(indexName, 0) === 0); })[0]].mappings/\" /opt/kibana/src/public/index.js \u0026\u0026     sed -i \"/^set -e/a /config.sh\" /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}