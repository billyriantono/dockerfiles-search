{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./badproxy",
            "/etc/apt/apt.conf.d/99fixbadproxy"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y dist-upgrade \u0026\u0026     apt-get install -y --no-install-recommends --no-install-suggests       apt-utils       ca-certificates       git       vim       wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y autoremove \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NAME",
              "Value": "pyuser"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$NAME"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -d $HOME -s /bin/bash -u 10000 -U -p $NAME $NAME \u0026\u0026     mkdir $HOME \u0026\u0026     addgroup $NAME staff \u0026\u0026     mkdir $HOME/.jupyter \u0026\u0026     mkdir $HOME/.cert"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bashrc.sh",
            "$HOME/.bashrc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./jupyter_notebook_config.py",
            "$HOME/.jupyter"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./create_hashed_password.py",
            "$HOME/"
          ]
        },
        {
          "CmdLine": [
            "chown -R $NAME:$NAME $HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /share \u0026\u0026     chown -R $NAME:$NAME /share"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NAME"
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "Env": [
            {
              "Key": "CONDA_DOWNLOAD_URL",
              "Value": "https://repo.anaconda.com/miniconda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_INSTALLER",
              "Value": "Miniconda3-latest-Linux-x86_64.sh"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget --progress=bar:force $CONDA_DOWNLOAD_URL/$CONDA_INSTALLER \u0026\u0026     bash $CONDA_INSTALLER -b -p $HOME/miniconda3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$HOME/miniconda3/bin/conda update -y conda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd $HOME/.cert/ \u0026\u0026     openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout \"mycert.key\" -out \"mycert.pem\" -batch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$HOME/miniconda3/bin/python create_hashed_password.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm create_hashed_password.py $CONDA_INSTALLER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/share"
          ]
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}