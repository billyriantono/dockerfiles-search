MetaArgs:
- DefaultValue: source-clean
  Key: ARTIFACT_BASE
  ProvidedValue: null
  Value: source-clean
Stages:
- As: run-time-dependencies
  BaseName: ubuntu:xenial
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Erik M. Bray <erik.bray@lri.fr>, Julian RÃ¼th <julian.rueth@fsfe.org>"'
    Name: label
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Key: SAGE_ROOT
    Name: arg
    Value: /home/sage/sage
  - CmdLine:
    - ln -s "$SAGE_ROOT/sage" /usr/bin/sage
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/sage /usr/bin/sagemath
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update     && apt-get -qq install -y --no-install-recommends gfortran
      gcc g++ libstdc++-5-dev sudo openssl     && apt-get -qq clean     && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Key: HOME
    Name: arg
    Value: /home/sage
  - CmdLine:
    - adduser --quiet --shell /bin/bash --gecos "Sage user,101,," --disabled-password
      --home "$HOME" sage     && echo "sage ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/01-sage     &&
      chmod 0440 /etc/sudoers.d/01-sage
    Name: run
    PrependShell: true
  - Name: user
    User: sage
  - Env:
    - Key: HOME
      Value: $HOME
    Name: env
  - Name: workdir
    Path: $HOME
  From:
    Image: ubuntu:xenial
  Name: run-time-dependencies
  Platform: ""
  SourceCode: FROM ubuntu:xenial as run-time-dependencies
- As: build-time-dependencies
  BaseName: run-time-dependencies
  Commands:
  - CmdLine:
    - sudo apt-get -qq update     && sudo apt-get -qq install -y wget build-essential
      automake m4 dpkg-dev python libssl-dev git rdfind     && sudo apt-get -qq clean     &&
      sudo rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: run-time-dependencies
  Name: build-time-dependencies
  Platform: ""
  SourceCode: FROM run-time-dependencies as build-time-dependencies
- As: source-clean
  BaseName: build-time-dependencies
  Commands:
  - Key: SAGE_ROOT
    Name: arg
    Value: /home/sage/sage
  - CmdLine:
    - mkdir -p "$SAGE_ROOT"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $SAGE_ROOT
  - CmdLine:
    - git init
    Name: run
    PrependShell: true
  - CmdLine:
    - git remote add trac git://trac.sagemath.org/sage.git
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 1
      Named: build-time-dependencies
  Name: source-clean
  Platform: ""
  SourceCode: FROM build-time-dependencies as source-clean
- As: source-from-context
  BaseName: $ARTIFACT_BASE
  Commands:
  - Name: workdir
    Path: $HOME
  - Chown: sage:sage
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - sage-context
  - Key: SAGE_ROOT
    Name: arg
    Value: /home/sage/sage
  - Name: workdir
    Path: $SAGE_ROOT
  - CmdLine:
    - find . -type f > $HOME/artifact-base.manifest
    Name: run
    PrependShell: true
  - CmdLine:
    - 'git fetch "$HOME/sage-context" HEAD     && if [ -e docker/.commit ]; then           git
      reset `cat docker/.commit`           || ( echo "Could not find commit `cat docker/.commit`
      in your local Git history. Please merge in the latest built develop branch to
      fix this: git fetch trac && git merge `cat docker/.commit`." && exit 1 )        else           echo
      "You are building from $ARTIFACT_BASE which has no docker/.commit file. That''s
      a bug unless you are building from source-clean or something similar."           &&
      git reset FETCH_HEAD           && git checkout -f FETCH_HEAD;        fi     &&
      git merge --ff-only FETCH_HEAD     && git log -1 --format=%H > docker/.commit     &&
      rm -rf .git'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME/sage-context
  - CmdLine:
    - if git status --porcelain | read CHANGES; then         git -c user.name=docker-build
      -c user.email=docker-build@sage.invalid stash -u         && git stash show -p
      > "$HOME"/sage-context.patch;     else         touch "$HOME"/sage-context.patch;     fi
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $SAGE_ROOT
  - CmdLine:
    - patch -p1 < "$HOME"/sage-context.patch
    Name: run
    PrependShell: true
  From:
    Image: $ARTIFACT_BASE
  Name: source-from-context
  Platform: ""
  SourceCode: FROM $ARTIFACT_BASE as source-from-context
- As: make-build
  BaseName: source-from-context
  Commands:
  - Env:
    - Key: SAGE_FAT_BINARY
      Value: "yes"
    Name: env
  - Env:
    - Key: SAGE_INSTALL_GCC
      Value: "no"
    Name: env
  - Key: MAKEOPTS
    Name: arg
    Value: '"-j2"'
  - Env:
    - Key: MAKEOPTS
      Value: $MAKEOPTS
    Name: env
  - Key: SAGE_NUM_THREADS
    Name: arg
    Value: '"2"'
  - Env:
    - Key: SAGE_NUM_THREADS
      Value: $SAGE_NUM_THREADS
    Name: env
  - CmdLine:
    - make build
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 3
      Named: source-from-context
  Name: make-build
  Platform: ""
  SourceCode: FROM source-from-context as make-build
- As: make-all
  BaseName: make-build
  Commands:
  - Key: MAKEOPTS_DOCBUILD
    Name: arg
    Value: $MAKEOPTS
  - Env:
    - Key: MAKEOPTS_DOCBUILD
      Value: $MAKEOPTS_DOCBUILD
    Name: env
  - Key: SAGE_NUM_THREADS_DOCBUILD
    Name: arg
    Value: $SAGE_NUM_THREADS
  - Env:
    - Key: SAGE_NUM_THREADS_DOCBUILD
      Value: $SAGE_NUM_THREADS_DOCBUILD
    Name: env
  - CmdLine:
    - make
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 4
      Named: make-build
  Name: make-all
  Platform: ""
  SourceCode: FROM make-build as make-all
- As: make-release
  BaseName: make-all
  Commands:
  - CmdLine:
    - sage -pip install terminado "notebook>=5" "ipykernel>=4.6"
    Name: run
    PrependShell: true
  - CmdLine:
    - sage -i gap_jupyter singular_jupyter pari_jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - make micro_release
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 5
      Named: make-all
  Name: make-release
  Platform: ""
  SourceCode: FROM make-all as make-release
- As: sagemath
  BaseName: run-time-dependencies
  Commands:
  - Key: HOME
    Name: arg
    Value: /home/sage
  - Key: SAGE_ROOT
    Name: arg
    Value: /home/sage/sage
  - Chown: sage:sage
    From: make-release
    Name: copy
    SourcesAndDest:
    - $SAGE_ROOT/
    - $SAGE_ROOT/
  - CmdLine:
    - sudo $SAGE_ROOT/sage --nodotsage -c "install_scripts('/usr/bin')"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/entrypoint.sh
    - /usr/local/bin/sage-entrypoint
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - /usr/local/bin/sage-entrypoint
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - sage
    Name: cmd
    PrependShell: false
  From:
    Stage:
      Index: 0
      Named: run-time-dependencies
  Name: sagemath
  Platform: ""
  SourceCode: FROM run-time-dependencies as sagemath
- As: make-fast-rebuild-clean
  BaseName: make-all
  Commands:
  - CmdLine:
    - make fast-rebuild-clean
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 5
      Named: make-all
  Name: make-fast-rebuild-clean
  Platform: ""
  SourceCode: FROM make-all as make-fast-rebuild-clean
- As: sagemath-dev-patch
  BaseName: make-fast-rebuild-clean
  Commands:
  - Key: ARTIFACT_BASE
    Name: arg
    Value: source-clean
  - Key: SAGE_ROOT
    Name: arg
    Value: /home/sage/sage
  - CmdLine:
    - if [ x"$ARTIFACT_BASE" != x"source-clean" ]; then         mkdir -p $HOME/patch         &&
      find . -type f > $HOME/make-fast-rebuild-clean.manifest         && cat $HOME/make-fast-rebuild-clean.manifest
      $HOME/artifact-base.manifest | sort | uniq -u > $HOME/obsolete         && find
      . -type f -cnewer $HOME/artifact-base.manifest > $HOME/modified         && tar
      -cJf $HOME/patch/modified.tar.xz -T $HOME/modified         && cat $HOME/obsolete
      $HOME/modified | xz > $HOME/patch/modified.xz         && rm -rf $SAGE_ROOT         &&
      mkdir -p $SAGE_ROOT         && mv $HOME/patch $SAGE_ROOT/;     fi
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 8
      Named: make-fast-rebuild-clean
  Name: sagemath-dev-patch
  Platform: ""
  SourceCode: FROM make-fast-rebuild-clean as sagemath-dev-patch
- As: sagemath-dev
  BaseName: $ARTIFACT_BASE
  Commands:
  - Key: SAGE_ROOT
    Name: arg
    Value: /home/sage/sage
  - Chown: sage:sage
    From: sagemath-dev-patch
    Name: copy
    SourcesAndDest:
    - $SAGE_ROOT
    - $SAGE_ROOT
  - Key: ARTIFACT_BASE
    Name: arg
    Value: source-clean
  - CmdLine:
    - if [ x"$ARTIFACT_BASE" != x"source-clean" ]; then         echo "Applying `du
      -hs patch/modified.tar.xz` patch"         && xzcat patch/modified.xz | xargs
      rm -rvf         && tar -Jxf patch/modified.tar.xz         && rm -rf patch;     fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/entrypoint-dev.sh
    - /usr/local/bin/sage-entrypoint
  - CmdLine:
    - /usr/local/bin/sage-entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: $ARTIFACT_BASE
  Name: sagemath-dev
  Platform: ""
  SourceCode: FROM $ARTIFACT_BASE as sagemath-dev
