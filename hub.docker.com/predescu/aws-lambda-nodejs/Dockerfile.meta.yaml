MetaArgs: null
Stages:
- BaseName: mysql:5.6
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y curl xz-utils software-properties-common
      wget build-essential zlib1g-dev libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd --gid 1000 node   && useradd --uid 1000 --gid node --shell /bin/bash
      --create-home node
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && for key in     4ED778F539E3634C779C87C6D7062848A1AB005C     B9E2F5981AA6E0CD28160D9FF13993A75599653C     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     B9AE9905FFD7803F25714661B63B535A4C206CA9     77984A986EBC2AA786BC0F66B01FBB92821C587A     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     FD3A5288F042B6850C66B31F09FE44734EB7990E     8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     A48C2BEE680E841632CD4E44F07496B3EB3C1762     93C7E9E91B49E432C2F75674B0A78B0A6C481CF6     9554F04D7259F04124DE6B476D5A82AC7E37093B     56730D5401028683275BD23C23EFEFE93C4CFFFE     114F43EE0176B71C7BC219DD50A3051F888C628D     7937DFD2AB06298B2293C3187D33FF9D0246406D   ;
      do     gpg  --batch --keyserver keyserver.ubuntu.com --recv-keys "$key" ;   done
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 8.10.0
    Name: env
  - CmdLine:
    - dpkgArch="$(dpkg --print-architecture)"   && case "${dpkgArch##*-}" in     amd64)
      ARCH='x64';;     ppc64el) ARCH='ppc64le';;     *) echo "unsupported architecture";
      exit 1 ;;   esac   && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"   &&
      curl -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep "
      node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c -   &&
      tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1
      --no-same-owner   && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc
      SHASUMS256.txt   && ln -s /usr/local/bin/node /usr/local/bin/nodejs   && node
      --version
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_VERSION
      Value: 1.13.0
    Name: env
  - CmdLine:
    - set -ex   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg  --batch
      --keyserver keyserver.ubuntu.com --recv-keys "$key" ;   done   && curl -fSLO
      --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   &&
      curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   &&
      gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   &&
      mkdir -p /opt/yarn   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1   &&
      ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg   &&
      rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && yarn --version
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_VERSION
      Value: 2.7.15
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     tk-dev   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF
    Name: env
  - CmdLine:
    - set -ex     && wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"   &&
      wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"   &&
      export GNUPGHOME="$(mktemp -d)"   && gpg --batch --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$GPG_KEY"   && gpg --batch --verify python.tar.xz.asc python.tar.xz   &&
      { command -v gpgconf > /dev/null && gpgconf --kill all || :; }   && rm -rf "$GNUPGHOME"
      python.tar.xz.asc   && mkdir -p /usr/src/python   && tar -xJC /usr/src/python
      --strip-components=1 -f python.tar.xz   && rm python.tar.xz     && cd /usr/src/python   &&
      gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"   && ./configure     --build="$gnuArch"     --enable-shared     --enable-unicode=ucs4   &&
      make -j "$(nproc)"   && make install   && ldconfig     && find /usr/local -depth     \(       \(
      -type d -a \( -name test -o -name tests \) \)       -o       \( -type f -a \(
      -name '*.pyc' -o -name '*.pyo' \) \)     \) -exec rm -rf '{}' +   && rm -rf
      /usr/src/python     && python2 --version
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: "18.1"
    Name: env
  - CmdLine:
    - set -ex;     wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py';     python
      get-pip.py     --disable-pip-version-check     --no-cache-dir     "pip==$PYTHON_PIP_VERSION"   ;   pip
      --version;     find /usr/local -depth     \(       \( -type d -a \( -name test
      -o -name tests \) \)       -o       \( -type f -a \( -name '*.pyc' -o -name
      '*.pyo' \) \)     \) -exec rm -rf '{}' +;   rm -f get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - python2
    Name: cmd
    PrependShell: false
  - Env:
    - Key: PATH
      Value: /root/.local/bin:$PATH
    Name: env
  - CmdLine:
    - pip install awscli --upgrade --user
    Name: run
    PrependShell: true
  - CmdLine:
    - aws --version
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys E1DD270288B4E6030699E45FA1715D88E1DF1F24;     su
      -c "echo 'deb http://ppa.launchpad.net/git-core/ppa/ubuntu trusty main' > /etc/apt/sources.list.d/git.list";     apt-get
      update;     apt-get install -y git;     git --version
    Name: run
    PrependShell: true
  From:
    Image: mysql:5.6
  Name: ""
  Platform: ""
  SourceCode: FROM mysql:5.6
