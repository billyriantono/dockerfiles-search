MetaArgs: null
Stages:
- BaseName: debian:stretch-slim
  Commands:
  - Labels:
    - Key: author
      Value: '"Matthew Tardiff <mattrix@gmail.com>"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"Brandon LeBlanc <brandon@leblanc.codes>"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - set -eux;     apt-get update;     apt-get install --no-install-recommends -y
      locales;     apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*;     localedef
      -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8;
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - set -eux;     apt-get update;     apt-get install --no-install-recommends -y
      gosu;     apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*;
    Name: run
    PrependShell: true
  - CmdLine:
    - set -eux;     apt-get update;     apt-get install -y --no-install-recommends
      git ca-certificates curl;     apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/*
      /var/tmp/*;
    Name: run
    PrependShell: true
  - CmdLine:
    - set -eux;     apt-get update;     apt-get install -y --no-install-recommends         dpkg-dev         gcc         libbz2-dev         libc6-dev         libexpat1-dev         libffi-dev         libgdbm-dev         liblzma-dev         libncursesw5-dev         libreadline-dev         libsqlite3-dev         libssl-dev         libxml2-dev         libxmlsec1-dev         libyaml-dev         make         netbase         tk-dev         uuid-dev         wget         xz-utils         zlib1g-dev         $(command
      -v gpg > /dev/null || echo 'gnupg dirmngr');         apt-get clean; rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*;
    Name: run
    PrependShell: true
  - Env:
    - Key: PYENV_ROOT
      Value: '"/.pyenv"'
    - Key: PYENV_GIT_VERSION
      Value: '"7d02b2463b7da53ca62b655c8d5b3a72c7f0cab5"'
    - Key: PATH
      Value: '"/.pyenv/bin:/.pyenv/shims:$PATH"'
    Name: env
  - CmdLine:
    - set -eux;     git clone "https://github.com/pyenv/pyenv.git" "$PYENV_ROOT";     git
      --git-dir "$PYENV_ROOT/.git" --work-tree "$PYENV_ROOT" checkout -qf "$PYENV_GIT_VERSION";     rm
      -rf "$PYENV_ROOT/.git";
    Name: run
    PrependShell: true
  - Expression: COPY python-versions.txt /
    Name: onbuild
  - Expression: RUN set -eux;     xargs -P $(nproc) -n 1 pyenv install < python-versions.txt;     mv
      -v -- /python-versions.txt $PYENV_ROOT/version;     pyenv rehash;     pyenv
      versions;     find $PYENV_ROOT/versions -type d '(' -name '__pycache__' -o -name
      'test' -o -name 'tests' ')' -exec rm -rfv '{}' +;     find $PYENV_ROOT/versions
      -type f '(' -name '*.py[co]' -o -name '*.exe' ')' -exec rm -fv '{}' +;
    Name: onbuild
  From:
    Image: debian:stretch-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch-slim
