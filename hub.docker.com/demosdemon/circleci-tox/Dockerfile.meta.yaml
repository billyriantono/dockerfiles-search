MetaArgs: null
Stages:
- BaseName: demosdemon/tox-base
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Brandon LeBlanc <brandon@leblanc.codes>"'
    Name: label
  - CmdLine:
    - set -eux;     echo 'APT::Get::Assume-Yes "true";' > /etc/apt/apt.conf.d/90circleci;     echo
      'DPkg::Options "--force-confnew";' >> /etc/apt/apt.conf.d/90circleci;
    Name: run
    PrependShell: true
  - CmdLine:
    - set -eux;     apt-get update &&     mkdir -p /usr/share/man/man1 &&     apt-get
      install --no-install-recommends -y         apt         bzip2         ca-certificates         curl         git         gnupg         gzip         locales         net-tools         netcat         openssh-client         parallel         sudo         tar         unzip         wget         xvfb         zip     ;     apt-get
      clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*;
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - set -eux;     JQ_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest";     curl
      --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL;     chmod
      +x /usr/bin/jq;     jq --version;
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -eux;     export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/
      | grep -o -e ''docker-[.0-9]*\.tgz'' | sort -r | head -n 1);     DOCKER_URL="https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}";     echo
      Docker URL: $DOCKER_URL;     curl --silent --show-error --location --fail --retry
      3 --output /tmp/docker.tgz "${DOCKER_URL}";     ls -lha /tmp/docker.tgz; tar
      -xz -C /tmp -f /tmp/docker.tgz;     mv /tmp/docker/* /usr/bin;     rm -rf /tmp/docker
      /tmp/docker.tgz;     which docker;     (docker version || true);'
    Name: run
    PrependShell: true
  - CmdLine:
    - set -eux;     COMPOSE_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest";     curl
      --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose
      $COMPOSE_URL;     chmod +x /usr/bin/docker-compose;     docker-compose version;
    Name: run
    PrependShell: true
  - CmdLine:
    - set -eux;     DOCKERIZE_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz";     curl
      --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz
      $DOCKERIZE_URL;     tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz;     rm
      -rf /tmp/dockerize-linux-amd64.tar.gz;     dockerize --version;
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -eux;     groupadd --gid 3434 circleci;     useradd --uid 3434 --gid circleci
      --shell /bin/bash --create-home circleci;     echo ''circleci ALL=NOPASSWD:
      ALL'' >> /etc/sudoers.d/50-circleci;     echo ''Defaults    env_keep += "DEBIAN_FRONTEND"''
      >> /etc/sudoers.d/env_keep;'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pipenv poetry
    Name: run
    PrependShell: true
  - Name: user
    User: circleci
  - CmdLine:
    - /bin/sh
    Name: cmd
    PrependShell: false
  From:
    Image: demosdemon/tox-base
  Name: ""
  Platform: ""
  SourceCode: FROM demosdemon/tox-base
