MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: x-bird <x-bird@qiubs.com>
    Name: maintainer
  - CmdLine:
    - echo "LC_ALL=en_US.UTF-8" >> /etc/default/locale
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PASSWORD
      Value: '`mkpasswd 123123`'
    Name: env
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get upgrade -y && apt-get install -y openssh-server
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:123123' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      -i /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - echo "export VISIBLE=now" >> /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y supervisor &&     mkdir -p /var/log/supervisor
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - CmdLine:
    - apt-get install -y --force-yes software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository ppa:fkrull/deadsnakes-python2.7 -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository ppa:nginx/development -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository ppa:rwky/redis -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository ppa:ondrej/apache2 -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository ppa:ondrej/php -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 5072E1F5
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://repo.mysql.com/apt/ubuntu/ trusty mysql-5.7" >> /etc/apt/sources.list.d/mysql.list
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo
      apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main" >> /etc/apt/sources.list.d/postgresql.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --force-yes build-essential curl fail2ban gcc git libmcrypt4
      libpcre3-dev make python2.7 python-pip supervisor ufw unattended-upgrades unzip
      whois zsh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install httpie
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keygen -A
    Name: run
    PrependShell: true
  - CmdLine:
    - service ssh restart
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ ! -d /root/.ssh ]; then mkdir -p /root/.ssh; touch /root/.ssh/authorized_keys;
      fi
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd forzu
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/forzu/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/forzu/.forzu
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser forzu sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - chsh -s /bin/bash forzu
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /root/.profile /home/forzu/.profile
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /root/.bashrc /home/forzu/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod
    - --password
    - echo $PASSWORD
    - forzu
    Name: run
    PrependShell: false
  - CmdLine:
    - cp /root/.ssh/authorized_keys /home/forzu/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keygen -f /home/forzu/.ssh/id_rsa -t rsa -N ''
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.name "x-bird"
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.email "x-bird@qiubs.com"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo " \n \necho "# Laravel Forzu" | tee -a /home/forzu/.ssh/authorized_keys
      > /dev/null \necho \$1 | tee -a /home/forzu/.ssh/authorized_keys > /dev/null
      \n \necho "# Laravel Forzu" | tee -a /root/.ssh/authorized_keys > /dev/null
      \necho \$1 | tee -a /root/.ssh/authorized_keys > /dev/null \n \necho "Keys Added!"
      \n" >> /home/forzu/.forzu/reconnect
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \" \\n<?php \\n \\n// Get the script input... \\n\\$input = array_values(array_slice(\\$_SERVER['argv'],
      1)); \\n \\n// Get the path to the environment file... \\n\\$path = getcwd().'/'.\\$input[2];
      \\n \\n// Write a stub file if one doesn't exist... \\nif ( ! file_exists(\\$path))
      { \\n\tfile_put_contents(\\$path, '<?php return '.var_export([], true).';');
      \\n} \\n \\n// Set the new environment variable... \\n\\$env = require \\$path;
      \\n\\$env[\\$input[0]] = \\$input[1]; \\n \\n// Write the environment file to
      disk... \\nfile_put_contents(\\$path, '<?php return '.var_export(\\$env, true).';');
      \\n \\n \\n\" >> /home/forzu/.forzu/add-variable.php"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \" \\n<?php \\n \\n// Get the script input... \\n\\$input = array_values(array_slice(\\$_SERVER['argv'],
      1)); \\n \\n// Get the path to the environment file... \\n\\$path = getcwd().'/'.\\$input[1];
      \\n \\n// Write a stub file if one doesn't exist... \\nif ( ! file_exists(\\$path))
      { \\n\tfile_put_contents(\\$path, '<?php return '.var_export([], true).';');
      \\n} \\n \\n// Remove the environment variable... \\n\\$env = require \\$path;
      \\nunset(\\$env[\\$input[0]]); \\n \\n// Write the environment file to disk...
      \\nfile_put_contents(\\$path, '<?php return '.var_export(\\$env, true).';');
      \\n \\n \\n\" >> /home/forzu/.forzu/remove-variable.php"
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R forzu:forzu /home/forzu
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 755 /home/forzu
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 700 /home/forzu/.ssh/id_rsa
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \" \\nUnattended-Upgrade::Allowed-Origins { \\n\t\"Ubuntu trusty-security\";
      \\n}; \\nUnattended-Upgrade::Package-Blacklist { \\n\t// \\n}; \\n\" >> /etc/apt/apt.conf.d/50unattended-upgrades"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo " \nAPT::Periodic::Update-Package-Lists "1"; \nAPT::Periodic::Download-Upgradeable-Packages
      "1"; \nAPT::Periodic::AutocleanInterval "7"; \nAPT::Periodic::Unattended-Upgrade
      "1"; \n" >> /etc/apt/apt.conf.d/10periodic
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "forzu ALL=NOPASSWD: /usr/sbin/service php7.0-fpm reload" > /etc/sudoers.d/php-fpm'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "forzu ALL=NOPASSWD: /usr/sbin/service php5-fpm reload" >> /etc/sudoers.d/php-fpm'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --force-yes php7.0-cli php7.0-dev     php-pgsql php-sqlite3
      php-gd     php-curl php7.0-dev     php-imap php-mysql php-memcached php-mcrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php
    Name: run
    PrependShell: true
  - CmdLine:
    - mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo sed -i "s/error_reporting = .*/error_reporting = E_ALL/" /etc/php/7.0/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo sed -i "s/display_errors = .*/display_errors = On/" /etc/php/7.0/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo sed -i "s/memory_limit = .*/memory_limit = 512M/" /etc/php/7.0/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo sed -i "s/;date.timezone.*/date.timezone = UTC/" /etc/php/7.0/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 733 /var/lib/php/sessions
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +t /var/lib/php/sessions
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --force-yes nginx php7.0-fpm
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/nginx/sites-enabled/default
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/nginx/sites-available/default
    Name: run
    PrependShell: true
  - CmdLine:
    - service nginx restart
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/error_reporting = .*/error_reporting = E_ALL/" /etc/php/7.0/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/display_errors = .*/display_errors = On/" /etc/php/7.0/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/" /etc/php/7.0/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/memory_limit = .*/memory_limit = 512M/" /etc/php/7.0/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/;date.timezone.*/date.timezone = UTC/" /etc/php/7.0/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/\;session.save_path = .*/session.save_path = \"\/var\/lib\/php5\/sessions\"/"
      /etc/php/7.0/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/php5\/sessions/php\/sessions/" /etc/php/7.0/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/user www-data;/user forzu;/" /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/# server_names_hash_bucket_size.*/server_names_hash_bucket_size 64;/"
      /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/^user = www-data/user = forzu/" /etc/php/7.0/fpm/pool.d/www.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/^group = www-data/group = forzu/" /etc/php/7.0/fpm/pool.d/www.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/;listen\.owner.*/listen.owner = forzu/" /etc/php/7.0/fpm/pool.d/www.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/;listen\.group.*/listen.group = forzu/" /etc/php/7.0/fpm/pool.d/www.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/;listen\.mode.*/listen.mode = 0666/" /etc/php/7.0/fpm/pool.d/www.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/;request_terminate_timeout.*/request_terminate_timeout = 60/" /etc/php/7.0/fpm/pool.d/www.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/worker_processes.*/worker_processes auto;/" /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/# multi_accept.*/multi_accept on;/" /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \" \\nserver { \\n\treturn 404; \\n} \\n\" >> /etc/nginx/sites-available/catch-all"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /etc/nginx/sites-available/catch-all /etc/nginx/sites-enabled/catch-all
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ ! -z "\$(ps aux | grep php-fpm | grep -v grep)" ]; then service php5-fpm
      restart; service php7.0-fpm restart; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - service nginx restart
    Name: run
    PrependShell: true
  - CmdLine:
    - service nginx reload
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -a -G www-data forzu
    Name: run
    PrependShell: true
  - CmdLine:
    - id forzu
    Name: run
    PrependShell: true
  - CmdLine:
    - groups forzu
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://deb.nodesource.com/setup_5.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y --force-yes nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g pm2
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g gulp
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - /bin/sh
    - -c
    - debconf-set-selections
    - <<<
    - mysql-community-server mysql-community-server/data-dir select ''
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/sh
    - -c
    - debconf-set-selections
    - <<<
    - mysql-community-server mysql-community-server/root-pass password 123123
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/sh
    - -c
    - debconf-set-selections
    - <<<
    - mysql-community-server mysql-community-server/re-root-pass password 123123
    Name: run
    PrependShell: false
  - CmdLine:
    - apt-get install -y mysql-server
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "default_password_lifetime = 0" >> /etc/mysql/my.cnf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/^bind-address/s/bind-address.*=.*/bind-address = */' /etc/mysql/my.cnf
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/sbin/mysqld &     sleep 10s &&     mysql --user="root" --password="123123"
      -e "GRANT ALL ON *.* TO root@'123.123.123.123' IDENTIFIED BY '123123';" &&     mysql
      --user="root" --password="123123" -e "GRANT ALL ON *.* TO root@'%' IDENTIFIED
      BY '123123';" &&     mysql --user="root" --password="123123" -e "CREATE USER
      'forzu'@'123.123.123.123' IDENTIFIED BY '123123';" &&     mysql --user="root"
      --password="123123" -e "GRANT ALL ON *.* TO 'forzu'@'123.123.123.123' IDENTIFIED
      BY '123123' WITH GRANT OPTION;" &&     mysql --user="root" --password="123123"
      -e "GRANT ALL ON *.* TO 'forzu'@'%' IDENTIFIED BY '123123' WITH GRANT OPTION;"
      &&     mysql --user="root" --password="123123" -e "FLUSH PRIVILEGES;" &&     mysql
      --user="root" --password="123123" -e "CREATE DATABASE forzu;"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y redis-server
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/bind 127.0.0.1/bind 0.0.0.0/' /etc/redis/redis.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y memcached
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/-l 127.0.0.1/-l 0.0.0.0/' /etc/memcached.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --force-yes beanstalkd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/BEANSTALKD_LISTEN_ADDR.*/BEANSTALKD_LISTEN_ADDR=0.0.0.0/" /etc/default/beanstalkd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/#START=yes/START=yes/" /etc/default/beanstalkd
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
    - "3306"
    - "443"
    - "6379"
    - "80"
  - CmdLine:
    - /usr/bin/supervisord
    Name: cmd
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
