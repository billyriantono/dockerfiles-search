MetaArgs: null
Stages:
- BaseName: g2inc/oif-python
  Commands:
  - CmdLine:
    - apk upgrade --update && apk add --no-cache dos2unix && rm /var/cache/apk/*
    Name: run
    PrependShell: true
  - Maintainer: Screaming_Bunny
    Name: maintainer
  - Labels:
    - Key: name
      Value: '"Orchestrator Core"'
    - Key: vendor
      Value: '"OpenC2"'
    - Key: license
      Value: '"BSD"'
    - Key: version
      Value: '"2.0"'
    - Key: description
      Value: '"This is the Orchestrator Core container"'
    Name: label
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /tmp/requirements.txt
  - Chown: ""
    Name: add
    SourcesAndDest:
    - orc_server
    - /opt/orc_server
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - Env:
    - Key: DJANGO_SETTINGS_MODULE
      Value: orchestrator.settings
    - Key: DJANGO_ENV
      Value: '"prod"'
    Name: env
  - CmdLine:
    - apk add --no-cache --virtual .build-deps     gcc     make     libc-dev     libffi-dev     musl-dev     python3-dev     pcre-dev     openssl-dev     linux-headers     pcre-dev
      && apk add --no-cache pcre mailcap && pip3 install -r /tmp/requirements.txt
      && cd /opt/orc_server && python3 manage.py collectstatic --noinput && cd &&
      chmod +x /docker-entrypoint.sh && chmod +x /opt/orc_server/dev_start.sh && dos2unix
      /docker-entrypoint.sh && dos2unix /opt/orc_server/dev_start.sh&& apk del .build-deps
      && rm -rf /var/cache/apk/* *.tar.gz* /usr/src /root/.gnupg /tmp/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 8080/tcp
  - Name: workdir
    Path: /opt/orc_server
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - uwsgi
    - --ini
    - /opt/orc_server/uwsgi.ini
    Name: cmd
    PrependShell: false
  From:
    Image: g2inc/oif-python
  Name: ""
  Platform: ""
  SourceCode: FROM g2inc/oif-python
