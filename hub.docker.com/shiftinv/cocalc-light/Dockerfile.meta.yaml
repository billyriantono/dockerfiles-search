MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: William Stein <wstein@sagemath.com>
    Name: maintainer
  - Name: user
    User: root
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: TERM
      Value: screen
    Name: env
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && DEBIAN_FRONTEND=noninteractive apt-get install -y        software-properties-common        texlive        texlive-latex-extra        texlive-extra-utils        texlive-xetex        texlive-luatex        texlive-bibtex-extra        liblog-log4perl-perl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update  && DEBIAN_FRONTEND=noninteractive apt-get install -y        tmux        flex        bison        libreadline-dev        htop        screen        pandoc        aspell        poppler-utils        net-tools        wget        git        python        python-pip        make        g++        sudo        psmisc        haproxy        nginx        yapf        rsync        tidy
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && DEBIAN_FRONTEND=noninteractive apt-get install -y        vim        bup        inetutils-ping        lynx        telnet        git        emacs        subversion        ssh        m4        latexmk        libpq5        libpq-dev        build-essential        automake
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y        gfortran        dpkg-dev        libssl-dev        imagemagick        libcairo2-dev        libcurl4-openssl-dev        graphviz        smem        octave        python3-yaml        python3-matplotlib        python3-jupyter*        python-matplotlib*        python-jupyter*        jupyter        locales        locales-all        postgresql        postgresql-contrib        clang-format        yapf        yapf3        golang        r-cran-formatr
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install octave_kernel
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install jupyterlab
    Name: run
    PrependShell: true
  - CmdLine:
    - export VERSION=3.4.1   && mkdir -p /opt/lean   && cd /opt/lean   && wget https://github.com/leanprover/lean/releases/download/v$VERSION/lean-$VERSION-linux.tar.gz   &&
      tar xf lean-$VERSION-linux.tar.gz   && rm lean-$VERSION-linux.tar.gz   && rm
      -f latest   && ln -s lean-$VERSION-linux latest   && ln -s /opt/lean/latest/bin/lean
      /usr/local/bin/lean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && apt-get install -y aspell-*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- https://deb.nodesource.com/setup_8.x | bash -   && apt-get install
      -y nodejs   && /usr/bin/npm install -g npm
    Name: run
    PrependShell: true
  - Key: JULIA
    Name: arg
    Value: 0.6.3
  - CmdLine:
    - cd /tmp  && wget https://julialang-s3.julialang.org/bin/linux/x64/0.6/julia-${JULIA}-linux-x86_64.tar.gz  &&
      tar xf julia-${JULIA}-linux-x86_64.tar.gz -C /opt  && rm  -f julia-${JULIA}-linux-x86_64.tar.gz  &&
      mv /opt/julia-* /opt/julia  && ln -s /opt/julia/bin/julia /usr/local/bin
    Name: run
    PrependShell: true
  - Key: commit
    Name: arg
    Value: HEAD
  - CmdLine:
    - git clone https://github.com/sagemathinc/cocalc.git   && cd /cocalc && git pull
      && git fetch origin && git checkout ${commit:-HEAD}
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /cocalc/src   && . ./smc-env   && ./install.py all --web   && ./install.py
      all --compute   && rm -rf /root/.npm /root/.node-gyp/
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "umask 077" >> /etc/bash.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - kernels
    - /usr/local/share/jupyter/kernels
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - login.defs
    - /etc/login.defs
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - login
    - /etc/defaults/login
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/sites-available/default
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - haproxy.conf
    - /etc/haproxy/haproxy.cfg
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run.py
    - /root/run.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bashrc
    - /root/.bashrc
  - CmdLine:
    - apt-get update   && DEBIAN_FRONTEND=noninteractive apt-get install -y xvfb websockify
      curl   && curl https://xpra.org/gpg.asc | apt-key add -   && echo "deb http://xpra.org/
      bionic main" > /etc/apt/sources.list.d/xpra.list   && apt-get update   && DEBIAN_FRONTEND=noninteractive
      apt-get install -y xpra
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && DEBIAN_FRONTEND=noninteractive apt-get install -y x11-apps
      dbus-x11 gnome-terminal      vim-gtk lyx libreoffice inkscape gimp chromium-browser
      texstudio evince mesa-utils      xdotool xclip x11-xkb-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg   &&
      install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/   && sh
      -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable
      main" > /etc/apt/sources.list.d/vscode.list'   && DEBIAN_FRONTEND=noninteractive
      sudo apt-get install -y apt-transport-https   && sudo apt-get update   && DEBIAN_FRONTEND=noninteractive
      sudo apt-get install -y code
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libjpeg62   && wget -O rstudio.deb https://download1.rstudio.org/rstudio-xenial-1.1.463-amd64.deb   &&
      dpkg -i rstudio.deb   && rm rstudio.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser --quiet --shell /bin/bash --gecos "Sage user,101,," --disabled-password
      sage     && chown -R sage:sage /home/sage/
    Name: run
    PrependShell: true
  - CmdLine:
    - /root/run.py
    Name: cmd
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
