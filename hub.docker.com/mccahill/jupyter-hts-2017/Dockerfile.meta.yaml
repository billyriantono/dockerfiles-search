MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Maintainer: Mark McCahill "mark.mccahill@duke.edu"
    Name: maintainer
  - Name: user
    User: root
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - REPO=http://cdn-fastly.deb.debian.org  && echo "deb $REPO/debian jessie main\ndeb
      $REPO/debian-security jessie/updates main" > /etc/apt/sources.list  && apt-get
      update && apt-get -yq dist-upgrade  && apt-get install -yq --no-install-recommends     wget     bzip2     ca-certificates     sudo     locales     git     ssh     vim     jed     emacs     xclip     build-essential     python-dev     unzip     libsm6     pandoc     texlive-latex-base     texlive-latex-extra     texlive-fonts-extra     texlive-fonts-recommended     texlive-generic-recommended     libxrender1     inkscape     rsync  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini
      &&     echo "1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0
      *tini" | sha256sum -c - &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Env:
    - Key: NB_USER
      Value: jovyan
    Name: env
  - Env:
    - Key: NB_UID
      Value: "1000"
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - useradd -m -s /bin/bash -N -u $NB_UID $NB_USER &&     mkdir -p $CONDA_DIR &&     chown
      $NB_USER $CONDA_DIR
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - CmdLine:
    - mkdir /home/$NB_USER/work &&     mkdir /home/$NB_USER/.jupyter &&     mkdir
      /home/$NB_USER/.ssh &&     printf "Host gitlab.oit.duke.edu \n \t IdentityFile
      ~/work/HTSgitlab.key"  > /home/$NB_USER/.ssh/config &&     echo "cacert=/etc/ssl/certs/ca-certificates.crt"
      > /home/$NB_USER/.curlrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     mkdir -p $CONDA_DIR &&     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-4.1.11-Linux-x86_64.sh
      &&     echo "efd6a9362fc6b4085f599a881d20e57de628da8c1a898c08ec82874f3bad41bf
      *Miniconda3-4.1.11-Linux-x86_64.sh" | sha256sum -c - &&     /bin/bash Miniconda3-4.1.11-Linux-x86_64.sh
      -f -b -p $CONDA_DIR &&     rm Miniconda3-4.1.11-Linux-x86_64.sh &&     $CONDA_DIR/bin/conda
      install --quiet --yes conda==4.1.11 &&     $CONDA_DIR/bin/conda config --system
      --add channels conda-forge &&     $CONDA_DIR/bin/conda config --system --set
      auto_update_conda false &&     conda clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "jpeg 8*" >> /opt/conda/conda-meta/pinned
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'notebook=4.2*'     jupyterhub=0.7     && conda
      clean -tipsy
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends       libav-tools
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - CmdLine:
    - conda install --quiet --yes     'nomkl'     'ipywidgets=5.2*'     'pandas=0.19*'     'numexpr=2.6*'     'matplotlib=1.5*'     'scipy=0.17*'     'seaborn=0.7*'     'patsy=0.4*'     'statsmodels=0.6*'     'numba=0.23*'     'bokeh=0.11*'     'pandas-datareader'     'memory_profiler'    'psutil'     'joblib'     'pybind11'     'xlrd'  &&     conda
      remove --quiet --yes --force qt pyqt &&     conda clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable --py widgetsnbextension --sys-prefix
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create --quiet --yes -p $CONDA_DIR/envs/python2 python=2.7     'nomkl'     'ipython=4.2*'     'ipywidgets=5.2*'     'pandas=0.19*'     'numexpr=2.6*'     'matplotlib=1.5*'     'scipy=0.17*'     'seaborn=0.7*'     'patsy=0.4*'     'statsmodels=0.6*'     'numba=0.23*'     'bokeh=0.11*'     'xlrd'
      &&     conda remove -n python2 --quiet --yes --force qt pyqt &&     conda clean
      -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $CONDA_DIR/envs/python2/bin/pip $CONDA_DIR/bin/pip2 &&     ln -s $CONDA_DIR/bin/pip
      $CONDA_DIR/bin/pip3
    Name: run
    PrependShell: true
  - Env:
    - Key: XDG_CACHE_HOME
      Value: /home/$NB_USER/.cache/
    Name: env
  - CmdLine:
    - MPLBACKEND=Agg $CONDA_DIR/envs/python2/bin/python -c "import matplotlib.pyplot"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $HOME/.ipython/profile_default/startup
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mplimporthook.py
    - $HOME/.ipython/profile_default/startup/
  - Name: user
    User: root
  - CmdLine:
    - $CONDA_DIR/envs/python2/bin/python -m ipykernel install
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Name: user
    User: root
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends     fonts-dejavu     gfortran     gcc
      && apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends     graphviz     libgraphviz-dev     pkg-config
      && apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - CmdLine:
    - conda config --add channels r &&     conda install --quiet --yes     'rpy2=2.8*'     'r-base=3.3.1
      1'     'r-irkernel=*'     'r-plyr=1.8*'     'r-devtools=1.11*'     'r-shiny=0.13*'     'r-tidyverse=1.0.0'     'r-rmarkdown=0.9*'     'r-forecast=7.1*'     'r-stringr=1.0*'     'r-rsqlite=1.0*'     'r-reshape2=1.4*'     'r-nycflights13=0.2*'     'r-caret=6.0*'     'r-rcurl=1.95*'     'r-randomforest=4.6*'
      && conda clean -tipsy
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: expose
    Ports:
    - "8888"
  - Name: workdir
    Path: /home/$NB_USER/work
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start-notebook.sh
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-notebook.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-singleuser.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /home/$NB_USER/.jupyter/
  - CmdLine:
    - chown -R $NB_USER:users /home/$NB_USER/.jupyter
    Name: run
    PrependShell: true
  - Name: user
    User: jovyan
  - CmdLine:
    - pip install  bash_kernel
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m bash_kernel.install
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - conda install --yes     'numpy=1.11*'     'pillow=3.4*'     'requests=2.12*'     'nose=1.3*'     'pystan=2.8*'    &&
      conda clean -yt
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get update  && apt-get install -yq --no-install-recommends     dvipng     libopenblas-base     libarmadillo4     libarmadillo-dev     liblapack3     libblas-dev     liblapack-dev     libeigen3-dev  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ggplot
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends     less     make     git     libxml2-dev     libgsl0-dev     fastqc
      default-jre     bwa     samtools     circos     && apt-get clean &&     rm -rf
      /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://ftp.debian.org/debian jessie-backports main" >  /etc/apt/sources.list.d/backports.list
      &&     apt-get update &&     apt-get -t jessie-backports install -y --no-install-recommends     bwa     samtools     tabix     picard-tools     openjdk-8-jdk     openjdk-8-jre     sra-toolkit     bcftools     bedtools     vcftools     seqtk     ea-utils     &&
      apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages(pkgs = c('pwr','RColorBrewer','GSA','dendextend','pheatmap','cgdsr',
      'caret', 'ROCR'),     repos='https://cran.revolutionanalytics.com/',     dependencies=TRUE)"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R');     biocLite(pkgs=c('DESeq2','qvalue','multtest','org.EcK12.eg.db','genefilter','GEOquery','KEGG.db','golubEsets',
      'limma'))"
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - CmdLine:
    - mkdir -p $HOME/.ipython/profile_default/startup
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - conda install --quiet --yes -n python2 --channel https://conda.anaconda.org/Biobuilds
      htseq pysam biopython tophat
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:$CONDA_DIR/envs/python2/bin
    Name: env
  - Name: user
    User: jovyan
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
