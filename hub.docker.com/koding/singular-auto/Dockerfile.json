{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "koding/base",
      "SourceCode": "FROM koding/base",
      "Platform": "",
      "From": {
        "Image": "koding/base"
      },
      "Commands": [
        {
          "Maintainer": "Sonmez Kartal \u003csonmez@koding.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install --yes             mongodb-server             postgresql postgresql-contrib             rabbitmq-server             redis-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rabbitmq-plugins enable rabbitmq_management"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "postgres"
        },
        {
          "CmdLine": [
            "sed -i \"s/#listen_addresses =.*/listen_addresses = '*'/\" /etc/postgresql/9.3/main/postgresql.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"host all  all    0.0.0.0/0  md5\" \u003e\u003e /etc/postgresql/9.3/main/pg_hba.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 git clone https://github.com/koding/koding.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/koding"
        },
        {
          "CmdLine": [
            "service postgresql start \u0026\u0026     go/src/socialapi/db/sql/definition/create.sh \u0026\u0026     service postgresql stop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install --unsafe-perm \u0026\u0026     echo master \u003e VERSION \u0026\u0026     ./configure --host localhost --hostname localhost --publicPort 80 \u0026\u0026     go/build.sh \u0026\u0026     service postgresql start \u0026\u0026 ./run migrate up \u0026\u0026 service postgresql stop \u0026\u0026     make -C client dist \u0026\u0026     rm -rf generated"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint",
            "/opt/koding/docker-entrypoint"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/opt/koding/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "wait.sh",
            "/opt/koding/wait.sh"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/opt/koding/docker-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}