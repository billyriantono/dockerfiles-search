MetaArgs:
- DefaultValue: '"${DEBIAN_VERSION:-stable-slim}"'
  Key: DEBIAN_VERSION
  ProvidedValue: null
  Value: '"${DEBIAN_VERSION:-stable-slim}"'
Stages:
- As: dependencies1
  BaseName: debian:${DEBIAN_VERSION}
  Commands:
  - Name: workdir
    Path: /data
  - Key: SUEXEC_VERSION
    Name: arg
    Value: v0.2
  - Key: SUEXEC_HASH
    Name: arg
    Value: f85e5bde1afef399021fbc2a99c837cf851ceafa
  - Key: CMAKE_VERSION
    Name: arg
    Value: 3.14.0
  - Key: CMAKE_VERSION_DOT
    Name: arg
    Value: v3.14
  - Key: CMAKE_HASH
    Name: arg
    Value: aa76ba67b3c2af1946701f847073f4652af5cbd9f141f221c97af99127e75502
  - Key: BOOST_VERSION
    Name: arg
    Value: "1_69_0"
  - Key: BOOST_VERSION_DOT
    Name: arg
    Value: 1.69.0
  - Key: BOOST_HASH
    Name: arg
    Value: 8f32d4617390d1c2d16f26a27ab60d97807b35440d45891fa340fc2648b04406
  - Env:
    - Key: CFLAGS
      Value: '''-fPIC -O2 -g'''
    Name: env
  - Env:
    - Key: CXXFLAGS
      Value: '''-fPIC -O2 -g'''
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '''-static-libstdc++'''
    Name: env
  - Env:
    - Key: BASE_DIR
      Value: /usr/local
    Name: env
  - CmdLine:
    - 'apt-get update -qq && apt-get --no-install-recommends -yqq install         ca-certificates         g++         make         pkg-config         graphviz         doxygen         git         curl         libtool-bin         autoconf         automake         bzip2         xsltproc         gperf         unzip
      > /dev/null     && cd /data || exit 1     && echo "\e[32mbuilding: su-exec\e[39m"     &&
      git clone --branch ${SUEXEC_VERSION} --single-branch --depth 1 https://github.com/ncopa/su-exec.git
      su-exec.git > /dev/null     && cd su-exec.git || exit 1     && test `git rev-parse
      HEAD` = ${SUEXEC_HASH} || exit 1     && make > /dev/null     && cp su-exec /data     &&
      cd /data || exit 1     && rm -rf /data/su-exec.git     && echo "\e[32mbuilding:
      Cmake\e[39m"     && set -ex     && curl -s -O https://cmake.org/files/${CMAKE_VERSION_DOT}/cmake-${CMAKE_VERSION}.tar.gz
      > /dev/null     && echo "${CMAKE_HASH}  cmake-${CMAKE_VERSION}.tar.gz" | sha256sum
      -c     && tar -xzf cmake-${CMAKE_VERSION}.tar.gz > /dev/null     && cd cmake-${CMAKE_VERSION}
      || exit 1     && ./configure --prefix=$BASE_DIR > /dev/null     && make > /dev/null     &&
      make install > /dev/null     && cd /data || exit 1     && rm -rf /data/cmake-${CMAKE_VERSION}     &&
      rm -rf /data/cmake-${CMAKE_VERSION}.tar.gz     && echo "\e[32mbuilding: Boost\e[39m"     &&
      set -ex     && curl -s -L -o  boost_${BOOST_VERSION}.tar.bz2 https://dl.bintray.com/boostorg/release/${BOOST_VERSION_DOT}/source/boost_${BOOST_VERSION}.tar.bz2
      > /dev/null     && echo "${BOOST_HASH}  boost_${BOOST_VERSION}.tar.bz2" | sha256sum
      -c     && tar -xvf boost_${BOOST_VERSION}.tar.bz2 > /dev/null     && cd boost_${BOOST_VERSION}
      || exit 1     && ./bootstrap.sh > /dev/null     && ./b2 -a install --prefix=$BASE_DIR
      --build-type=minimal link=static runtime-link=static --with-chrono --with-date_time
      --with-filesystem --with-program_options --with-regex --with-serialization --with-system
      --with-thread --with-locale threading=multi threadapi=pthread cflags="$CFLAGS"
      cxxflags="$CXXFLAGS" stage > /dev/null     && cd /data || exit 1     && rm -rf
      /data/boost_${BOOST_VERSION}     && rm -rf /data/boost_${BOOST_VERSION}.tar.bz2'
    Name: run
    PrependShell: true
  From:
    Image: debian:${DEBIAN_VERSION}
  Name: dependencies1
  Platform: ""
  SourceCode: FROM debian:${DEBIAN_VERSION} as dependencies1
- As: dependencies2
  BaseName: index.docker.io/xmrto/aeon:dependencies1
  Commands:
  - Name: workdir
    Path: /data
  - Env:
    - Key: BASE_DIR
      Value: /usr/local
    Name: env
  - Key: OPENSSL_VERSION
    Name: arg
    Value: 1.1.1b
  - Key: OPENSSL_HASH
    Name: arg
    Value: 5c557b023230413dfb0756f3137a13e6d726838ccd1430888ad15bfb2b43ea4b
  - Key: ZMQ_VERSION
    Name: arg
    Value: v4.3.1
  - Key: ZMQ_HASH
    Name: arg
    Value: 2cb1240db64ce1ea299e00474c646a2453a8435b
  - Key: CPPZMQ_VERSION
    Name: arg
    Value: v4.3.0
  - Key: CPPZMQ_HASH
    Name: arg
    Value: 213da0b04ae3b4d846c9abc46bab87f86bfb9cf4
  - Key: READLINE_VERSION
    Name: arg
    Value: "8.0"
  - Key: READLINE_HASH
    Name: arg
    Value: e339f51971478d369f8a053a330a190781acb9864cf4c541060f12078948e461
  - Key: SODIUM_VERSION
    Name: arg
    Value: 1.0.17
  - Key: SODIUM_HASH
    Name: arg
    Value: b732443c442239c2e0184820e9b23cca0de0828c
  - Env:
    - Key: CFLAGS
      Value: '''-fPIC -O2 -g'''
    Name: env
  - Env:
    - Key: CXXFLAGS
      Value: '''-fPIC -O2 -g'''
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '''-static-libstdc++'''
    Name: env
  - CmdLine:
    - 'echo "\e[32mbuilding: Openssl\e[39m"     && set -ex     && curl -s -O https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz
      > /dev/null     && echo "${OPENSSL_HASH}  openssl-${OPENSSL_VERSION}.tar.gz"
      | sha256sum -c     && tar -xzf openssl-${OPENSSL_VERSION}.tar.gz > /dev/null     &&
      cd openssl-${OPENSSL_VERSION} || exit 1     && ./Configure --prefix=$BASE_DIR
      linux-x86_64 no-shared --static "$CFLAGS" > /dev/null     && make build_generated
      > /dev/null     && make libcrypto.a > /dev/null     && make install > /dev/null     &&
      cd /data || exit 1     && rm -rf /data/openssl-${OPENSSL_VERSION}     && rm
      -rf /data/openssl-${OPENSSL_VERSION}.tar.gz     && echo "\e[32mbuilding: ZMQ\e[39m"     &&
      set -ex     && git clone --branch ${ZMQ_VERSION} --single-branch --depth 1 https://github.com/zeromq/libzmq.git
      > /dev/null     && cd libzmq || exit 1     && test `git rev-parse HEAD` = ${ZMQ_HASH}
      || exit 1     && ./autogen.sh > /dev/null     && ./configure --prefix=$BASE_DIR
      --enable-libunwind=no --enable-static --disable-shared > /dev/null     && make
      > /dev/null     && make install > /dev/null     && ldconfig > /dev/null     &&
      cd /data || exit 1     && rm -rf /data/libzmq     && echo "\e[32mbuilding: zmq.hpp\e[39m"     &&
      set -ex     && git clone --branch ${CPPZMQ_VERSION} --single-branch --depth
      1 https://github.com/zeromq/cppzmq.git > /dev/null     && cd cppzmq || exit
      1     && test `git rev-parse HEAD` = ${CPPZMQ_HASH} || exit 1     && mv *.hpp
      $BASE_DIR/include     && cd /data || exit 1     && rm -rf /data/cppzmq     &&
      echo "\e[32mbuilding: Readline\e[39m"     && set -ex     && curl -s -O https://ftp.gnu.org/gnu/readline/readline-${READLINE_VERSION}.tar.gz
      > /dev/null     && echo "${READLINE_HASH}  readline-${READLINE_VERSION}.tar.gz"
      | sha256sum -c     && tar -xzf readline-${READLINE_VERSION}.tar.gz > /dev/null     &&
      cd readline-${READLINE_VERSION} || exit 1     && ./configure --prefix=$BASE_DIR
      > /dev/null     && make > /dev/null     && make install > /dev/null     && cd
      /data || exit 1     && rm -rf /data/readline-${READLINE_VERSION}     && rm -rf
      readline-${READLINE_VERSION}.tar.gz     && echo "\e[32mbuilding: Sodium\e[39m"     &&
      set -ex     && git clone --branch ${SODIUM_VERSION} --single-branch --depth
      1 https://github.com/jedisct1/libsodium.git > /dev/null     && cd libsodium
      || exit 1     && test `git rev-parse HEAD` = ${SODIUM_HASH} || exit 1     &&
      ./autogen.sh     && ./configure --prefix=$BASE_DIR > /dev/null     && make >
      /dev/null     && make check > /dev/null     && make install > /dev/null     &&
      cd /data || exit 1     && rm -rf /data/libsodium'
    Name: run
    PrependShell: true
  From:
    Image: index.docker.io/xmrto/aeon:dependencies1
  Name: dependencies2
  Platform: ""
  SourceCode: FROM index.docker.io/xmrto/aeon:dependencies1 as dependencies2
- As: dependencies3
  BaseName: index.docker.io/xmrto/aeon:dependencies2
  Commands:
  - Name: workdir
    Path: /data
  - Env:
    - Key: BASE_DIR
      Value: /usr/local
    Name: env
  - Key: UDEV_VERSION
    Name: arg
    Value: v3.2.7
  - Key: UDEV_HASH
    Name: arg
    Value: 4758e346a14126fc3a964de5831e411c27ebe487
  - Key: USB_VERSION
    Name: arg
    Value: v1.0.22
  - Key: USB_HASH
    Name: arg
    Value: 0034b2afdcdb1614e78edaa2a9e22d5936aeae5d
  - Key: HIDAPI_VERSION
    Name: arg
    Value: hidapi-0.8.0-rc1
  - Key: HIDAPI_HASH
    Name: arg
    Value: 40cf516139b5b61e30d9403a48db23d8f915f52c
  - Key: PROTOBUF_VERSION
    Name: arg
    Value: v3.7.0
  - Key: PROTOBUF_HASH
    Name: arg
    Value: 582743bf40c5d3639a70f98f183914a2c0cd0680
  - Env:
    - Key: CFLAGS
      Value: '''-fPIC -O2 -g'''
    Name: env
  - Env:
    - Key: CXXFLAGS
      Value: '''-fPIC -O2 -g'''
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '''-static-libstdc++'''
    Name: env
  - CmdLine:
    - 'echo "\e[32mbuilding: Udev\e[39m"     && set -ex     && git clone --branch
      ${UDEV_VERSION} --single-branch --depth 1 https://github.com/gentoo/eudev >
      /dev/null     && cd eudev || exit 1     && test `git rev-parse HEAD` = ${UDEV_HASH}
      || exit 1     && ./autogen.sh     && ./configure --prefix=$BASE_DIR --disable-gudev
      --disable-introspection --disable-hwdb --disable-manpages --disable-shared >
      /dev/null     && make > /dev/null     && make install > /dev/null     && cd
      /data || exit 1     && rm -rf /data/eudev     && echo "\e[32mbuilding: Libusb\e[39m"     &&
      set -ex     && git clone --branch ${USB_VERSION} --single-branch --depth 1 https://github.com/libusb/libusb.git
      > /dev/null     && cd libusb || exit 1     && test `git rev-parse HEAD` = ${USB_HASH}
      || exit 1     && ./autogen.sh > /dev/null     && ./configure --prefix=$BASE_DIR
      --disable-shared > /dev/null     && make > /dev/null     && make install > /dev/null     &&
      cd /data || exit 1     && rm -rf /data/libusb     && echo "\e[32mbuilding: Hidapi\e[39m"     &&
      set -ex     && git clone --branch ${HIDAPI_VERSION} --single-branch --depth
      1 https://github.com/signal11/hidapi > /dev/null     && cd hidapi || exit 1     &&
      test `git rev-parse HEAD` = ${HIDAPI_HASH} || exit 1     && ./bootstrap     &&
      ./configure --prefix=$BASE_DIR --enable-static --disable-shared > /dev/null     &&
      make > /dev/null     && make install > /dev/null     && cd /data || exit 1     &&
      rm -rf /data/hidapi     && echo "\e[32mbuilding: Protobuf\e[39m"     && set
      -ex     && git clone --branch ${PROTOBUF_VERSION}  --single-branch --depth 1
      https://github.com/protocolbuffers/protobuf > /dev/null     && cd protobuf ||
      exit 1     && test `git rev-parse HEAD` = ${PROTOBUF_HASH} || exit 1     &&
      git submodule update --init --recursive > /dev/null     && ./autogen.sh > /dev/null     &&
      ./configure --prefix=$BASE_DIR --enable-static --disable-shared > /dev/null     &&
      make > /dev/null     && make install > /dev/null     && ldconfig     && cd /data
      || exit 1     && rm -rf /data/protobuf'
    Name: run
    PrependShell: true
  From:
    Image: index.docker.io/xmrto/aeon:dependencies2
  Name: dependencies3
  Platform: ""
  SourceCode: FROM index.docker.io/xmrto/aeon:dependencies2 as dependencies3
- As: builder
  BaseName: index.docker.io/xmrto/aeon:dependencies3
  Commands:
  - Name: workdir
    Path: /data
  - Key: PROJECT_URL
    Name: arg
    Value: https://github.com/aeonix/aeon.git
  - Key: BRANCH
    Name: arg
    Value: master
  - Key: BUILD_PATH
    Name: arg
    Value: /aeon.git/build/release/bin
  - Env:
    - Key: CFLAGS
      Value: '''-fPIC -O1'''
    Name: env
  - Env:
    - Key: CXXFLAGS
      Value: '''-fPIC -O1'''
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '''-static-libstdc++'''
    Name: env
  - CmdLine:
    - 'echo "\e[32mcloning: $PROJECT_URL on branch: $BRANCH\e[39m"     && git clone
      --branch "$BRANCH" --single-branch --depth 1 --recursive $PROJECT_URL aeon.git
      > /dev/null     && cd aeon.git || exit 1     && echo "\e[32mbuilding static
      binaries\e[39m"     && apt-get update -qq && apt-get install -yqq --no-install-recommends         libreadline-dev     &&
      USE_SINGLE_BUILDDIR=1 make release-static > /dev/null     && echo "\e[32mcopy
      and clean up\e[39m"     && mv /data$BUILD_PATH/aeond /data/     && chmod +x
      /data/aeond     && mv /data$BUILD_PATH/aeon-wallet-rpc /data/     && chmod +x
      /data/aeon-wallet-rpc     && mv /data$BUILD_PATH/aeon-wallet-cli /data/     &&
      chmod +x /data/aeon-wallet-cli     && cd /data || exit 1     && rm -rf /data/aeon.git     &&
      apt-get purge -yqq         ca-certificates         g++         make         pkg-config         graphviz         doxygen         git         curl         libtool-bin         autoconf         automake         bzip2         xsltproc         gperf         unzip         libreadline-dev
      > /dev/null     && apt-get autoremove --purge -yqq > /dev/null     && apt-get
      clean > /dev/null     && rm -rf /var/tmp/* /tmp/* /var/lib/apt/* > /dev/null'
    Name: run
    PrependShell: true
  From:
    Image: index.docker.io/xmrto/aeon:dependencies3
  Name: builder
  Platform: ""
  SourceCode: FROM index.docker.io/xmrto/aeon:dependencies3 as builder
- BaseName: debian:${DEBIAN_VERSION}
  Commands:
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /data/aeond
    - /usr/local/bin/
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /data/aeon-wallet-rpc
    - /usr/local/bin/
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /data/aeon-wallet-cli
    - /usr/local/bin/
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /data/su-exec
    - /usr/local/bin/
  - CmdLine:
    - apt-get update -qq && apt-get install -yqq --no-install-recommends         torsocks         tor
      > /dev/null     && apt-get autoremove --purge -yqq > /dev/null     && apt-get
      clean > /dev/null     && rm -rf /var/tmp/* /tmp/* /var/lib/apt/* > /dev/null
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - inputrc
    - /etc/inputrc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - torsocks.conf
    - /etc/tor/torsocks.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - torrc
    - /etc/tor/torrc
  - Name: workdir
    Path: /aeon
  - CmdLine:
    - aeond --version > /version.txt     && cat /etc/os-release > /system.txt     &&
      cat /proc/version >> /system.txt     && ldd $(command -v aeond) > /dependencies.txt     &&
      torsocks --version > /torsocks.txt     && tor --version > /tor.txt
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /aeon
  - Env:
    - Key: USER_ID
      Value: "1000"
    Name: env
  - Env:
    - Key: LOG_LEVEL
      Value: "0"
    Name: env
  - Env:
    - Key: DAEMON_HOST
      Value: 127.0.0.1
    Name: env
  - Env:
    - Key: DAEMON_PORT
      Value: "11181"
    Name: env
  - Env:
    - Key: RPC_USER
      Value: '""'
    Name: env
  - Env:
    - Key: RPC_PASSWD
      Value: '""'
    Name: env
  - Env:
    - Key: RPC_LOGIN
      Value: '""'
    Name: env
  - Env:
    - Key: WALLET_PASSWD
      Value: '""'
    Name: env
  - Env:
    - Key: WALLET_ACCESS
      Value: '""'
    Name: env
  - Env:
    - Key: RPC_BIND_IP
      Value: 0.0.0.0
    Name: env
  - Env:
    - Key: RPC_BIND_PORT
      Value: "11181"
    Name: env
  - Env:
    - Key: P2P_BIND_IP
      Value: 0.0.0.0
    Name: env
  - Env:
    - Key: P2P_BIND_PORT
      Value: "11180"
    Name: env
  - Env:
    - Key: USE_TORSOCKS
      Value: "NO"
    Name: env
  - Env:
    - Key: USE_TOR
      Value: "NO"
    Name: env
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: debian:${DEBIAN_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM debian:${DEBIAN_VERSION}
