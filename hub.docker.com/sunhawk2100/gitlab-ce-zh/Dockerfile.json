{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gitlab/gitlab-ce:9.0.5-ce.0",
      "SourceCode": "FROM gitlab/gitlab-ce:9.0.5-ce.0",
      "Platform": "",
      "From": {
        "Image": "gitlab/gitlab-ce:9.0.5-ce.0"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GITLAB_VERSION",
              "Value": "v9.0.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 echo \" # Preparing ...\"     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_6.x | bash -     \u0026\u0026 curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list     \u0026\u0026 apt-get update     \u0026\u0026 buildDeps='lsb-release patch nodejs python build-essential yarn cmake'     \u0026\u0026 apt-get install -yqq $buildDeps     \u0026\u0026 echo \" # Generating translation patch ...\"     \u0026\u0026 cd /     \u0026\u0026 git clone https://gitlab.com/xhang/gitlab.git     \u0026\u0026 cd gitlab     \u0026\u0026 git diff v9.0.5..v9.0.5-zh -- . ':!spec' ':!features' ':!.gitignore' \u003e ../zh_CN.diff     \u0026\u0026 echo \" # Patching ...\"     \u0026\u0026 patch -d /opt/gitlab/embedded/service/gitlab-rails -p1 \u003c ../zh_CN.diff     \u0026\u0026 echo \" # Regenerating the assets\"     \u0026\u0026 cd /opt/gitlab/embedded/service/gitlab-rails     \u0026\u0026 cp config/gitlab.yml.example config/gitlab.yml     \u0026\u0026 cp config/database.yml.postgresql config/database.yml     \u0026\u0026 cp config/secrets.yml.example config/secrets.yml     \u0026\u0026 rm -rf public/assets     \u0026\u0026 yarn install --pure-lockfile     \u0026\u0026 RAILS_ENV=production         NO_PRIVILEGE_DROP=true         USE_DB=false         SKIP_STORAGE_VALIDATION=true         bundle exec rake gitlab:assets:compile     \u0026\u0026 rm -rf log         tmp         config/gitlab.yml         config/database.yml         config/secrets.yml         .secret         .gitlab_shell_secret         .gitlab_workhorse_secret         node_modules     \u0026\u0026 echo \" # Cleaning ...\"     \u0026\u0026 yarn cache clean     \u0026\u0026 apt-get purge -y --auto-remove         -o APT::AutoRemove::RecommendsImportant=false         -o APT::AutoRemove::SuggestsImportant=false         $buildDeps     \u0026\u0026 find /usr/lib/ -name __pycache__ | xargs rm -rf     \u0026\u0026 rm -rf /gitlab /*.diff /root/.cache /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}