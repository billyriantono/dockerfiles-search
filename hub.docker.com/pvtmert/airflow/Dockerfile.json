{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos/systemd",
      "SourceCode": "FROM centos/systemd",
      "Platform": "",
      "From": {
        "Image": "centos/systemd"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y epel-release gcc gcc-c++ wget curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y python36 python36-devel python36-pip \tmysql mysql-devel postgresql postgresql-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install -U flask apache-airflow \t\tapache-airflow[mysql] apache-airflow[postgresql] \t\tJayDeBeApi pyexasol[pandas] psycopg2-binary"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "airflow"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DBNAME",
              "Value": "${USER}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AIRFLOW_HOME",
              "Value": "/data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AIRFLOW_DBURL",
              "Value": "\"postgresql://localhost:5432/${DBNAME}?user=${USERNAME}\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "${AIRFLOW_HOME}"
        },
        {
          "CmdLine": [
            "systemctl enable postgresql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "runuser -l postgres -c 'pg_ctl init -wD /var/lib/pgsql/data'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"listen_addresses = '*'\"         | tee -a /var/lib/pgsql/data/postgresql.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"host  all  all  0.0.0.0/0  md5\" | tee -a /var/lib/pgsql/data/pg_hba.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's: ident:trust:g'                      /var/lib/pgsql/data/pg_hba.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's: peer: trust:g'                      /var/lib/pgsql/data/pg_hba.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's: md5:  trust:g'                      /var/lib/pgsql/data/pg_hba.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "( \t\techo \"#cd '${AIRFLOW_HOME}';\"                                         ; \t\techo \"test -e '${AIRFLOW_HOME}/.firstrun' || {\"                       ; \t\techo \"  touch '${AIRFLOW_HOME}/.firstrun'\"                            ; \t\techo \"  psql -U postgres -c '\"                                        ; \t\techo \"    create user ${USERNAME};\"                                   ; \t\techo \"    create database ${DBNAME};\"                                 ; \t\techo \"    grant all privileges on database ${DBNAME} to ${USERNAME};\" ; \t\techo \"  '\"                                                            ; \t\techo \"  airflow initdb\"                                               ; \t\techo \"}\"                                                              ; \t\techo \"echo scheduler webserver | xargs -n1 -P9 -- airflow \u0026\" ; \t) | tee -a /etc/rc.local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"en_US.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "\"${LANG}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "airflow initdb \u0026\u0026 airflow resetdb -y \t\u0026\u0026 sed -i'' 's/executor = .*/executor = LocalExecutor/'     \t\t\"${AIRFLOW_HOME}/airflow.cfg\" \t\u0026\u0026 sed -i'' 's/load_examples = True/load_examples = False/' \t\t\"${AIRFLOW_HOME}/airflow.cfg\" \t\u0026\u0026 sed -i'' 's/expose_config = False/expose_config = True/' \t\t\"${AIRFLOW_HOME}/airflow.cfg\" \t\u0026\u0026 sed -i'' \"s#sql_alchemy_conn = .*#sql_alchemy_conn = ${AIRFLOW_DBURL}#\" \t\t\"${AIRFLOW_HOME}/airflow.cfg\" \t\u0026\u0026 sed -i'' 's/dag_run_conf_overrides_params = False/dag_run_conf_overrides_params = True/' \t\t\"${AIRFLOW_HOME}/airflow.cfg\" \t\u0026\u0026 true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /etc/rc.local /etc/rc.d/rc.local; \tpasswd -df root; \tpasswd -uf root; \tsystemctl enable rc-local;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5432",
            "8080"
          ]
        },
        {
          "CmdLine": [
            "init"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}