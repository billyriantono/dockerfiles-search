MetaArgs: null
Stages:
- BaseName: adoptopenjdk/openjdk11:x86_64-ubuntu-jdk-11.0.2.9
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Committed Software <docker@committed.software>"'
    Name: label
  - Name: shell
    Shell:
    - /bin/bash
    - -o
    - pipefail
    - -c
  - Env:
    - Key: MAVEN_VERSION
      Value: 3.3.9
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: "10"
    Name: env
  - Env:
    - Key: HELM_VERSION
      Value: 2.9.1
    Name: env
  - Env:
    - Key: CLOUD_SDK_REPO
      Value: cloud-sdk-cosmic
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -qq     curl     gnupg     apache2-utils     tar     zip     wget     git     build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qq maven
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_$NODE_VERSION.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get install -qq --no-install-recommends     nodejs     yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://storage.googleapis.com/kubernetes-helm/helm-v$HELM_VERSION-linux-amd64.tar.gz
      && tar -zxvf helm-v$HELM_VERSION-linux-amd64.tar.gz &&     cp linux-amd64/helm
      /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | tee -a
      /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg
      | apt-key add - &&     apt-get update -y && apt-get install -qq     google-cloud-sdk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-transport-https &&     curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg
      | apt-key add - &&     echo "deb https://apt.kubernetes.io/ kubernetes-xenial
      main" | tee -a /etc/apt/sources.list.d/kubernetes.list &&     apt-get update
      && apt-get install -qq     kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /.kube && chmod -R 0755 /.kube
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-pip && pip install --user openshift passlib
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install software-properties-common -y &&     apt-add-repository --yes
      --update ppa:ansible/ansible &&     apt-get install -qq     ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add -     && sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/
      stable main" >> /etc/apt/sources.list.d/google.list'     && apt-get update     &&
      apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei
      fonts-thai-tlwg fonts-kacst fonts-freefont-ttf     --no-install-recommends     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://repo.anaconda.com/archive/Anaconda3-5.3.0-Linux-x86_64.sh
      -O ~/anaconda.sh &&     /bin/bash ~/anaconda.sh -b -p /opt/conda &&     rm ~/anaconda.sh
      &&     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo
      ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc &&     echo "conda activate
      base" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  From:
    Image: adoptopenjdk/openjdk11:x86_64-ubuntu-jdk-11.0.2.9
  Name: ""
  Platform: ""
  SourceCode: FROM adoptopenjdk/openjdk11:x86_64-ubuntu-jdk-11.0.2.9
