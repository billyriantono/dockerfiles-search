{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:wheezy",
      "SourceCode": "FROM debian:wheezy",
      "Platform": "",
      "From": {
        "Image": "debian:wheezy"
      },
      "Commands": [
        {
          "Maintainer": "Brian Scully \u003cscullduggery@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo 'deb http://http.debian.net/debian wheezy-backports main' \u003e\u003e /etc/apt/sources.list.d/wheezy-backports.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'deb http://packages.elasticsearch.org/logstash/1.4/debian stable main' \u003e\u003e /etc/apt/sources.list.d/logstash.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026    apt-get -y upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y --no-install-recommends install python python-colorama     python-simplejson python-memcache python-ldap python-cairo libffi-dev     python-pysqlite2 python-support python-pip gunicorn python-dev libpq-dev build-essential     supervisor nginx-light git wget curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y --no-install-recommends install software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y --no-install-recommends -t wheezy-backports install nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y --no-install-recommends install openjdk-7-jre adduser"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -f -g 101 elasticsearch \u0026\u0026 useradd -u 1001 -g elasticsearch elasticsearch \u0026\u0026    mkdir -p /home/elasticsearch \u0026\u0026 chown -R elasticsearch:elasticsearch /home/elasticsearch \u0026\u0026    cd ~ \u0026\u0026 wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.4.0.deb \u0026\u0026    dpkg -i elasticsearch-1.4.0.deb \u0026\u0026 rm elasticsearch-1.4.0.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(wget -O - http://packages.elasticsearch.org/GPG-KEY-elasticsearch | apt-key add -) \u0026\u0026 apt-get -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install --no-install-recommends redis-server logstash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /src \u0026\u0026 git clone https://github.com/etsy/statsd.git /src/statsd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --index-url=https://pypi.python.org/simple/ --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install Twisted==11.1.0 Django==1.5 'django-tagging\u003c0.4' whisper==0.9.14"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --install-option=\"--prefix=/var/lib/graphite\"                 --install-option=\"--install-lib=/var/lib/graphite/lib\" carbon==0.9.14 \u0026\u0026    pip install --install-option=\"--prefix=/var/lib/graphite\"                 --install-option=\"--install-lib=/var/lib/graphite/webapp\" graphite-web==0.9.14"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /src/grafana \u0026\u0026 cd /src/grafana \u0026\u0026 wget http://grafanarel.s3.amazonaws.com/grafana-1.8.1.tar.gz \u0026\u0026 tar xzvf grafana-1.8.1.tar.gz --strip-components=1 \u0026\u0026 rm grafana-1.8.1.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /src/kibana \u0026\u0026 cd /src/kibana \u0026\u0026 wget https://download.elasticsearch.org/kibana/kibana/kibana-3.1.2.tar.gz \u0026\u0026 tar xzvf kibana-3.1.2.tar.gz --strip-components=1 \u0026\u0026 rm kibana-3.1.2.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./elasticsearch/run",
            "/usr/local/bin/run_elasticsearch"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/run_elasticsearch \u0026\u0026    mkdir -p /logs/elasticsearch \u0026\u0026 chown elasticsearch:elasticsearch /logs/elasticsearch \u0026\u0026    mkdir -p /data/elasticsearch \u0026\u0026 chown elasticsearch:elasticsearch /data/elasticsearch \u0026\u0026    mkdir -p /tmp/elasticsearch \u0026\u0026 chown elasticsearch:elasticsearch /tmp/elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./logstash/001-redis-input.conf",
            "/etc/logstash/conf.d/001-redis-input.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./logstash/002-tcp-json-input.conf",
            "/etc/logstash/conf.d/002-tcp-json-input.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./logstash/999-elasticsearch-output.conf",
            "/etc/logstash/conf.d/999-elasticsearch-output.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./statsd/config.js",
            "/src/statsd/config.js"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./graphite/initial_data.json",
            "/var/lib/graphite/webapp/graphite/initial_data.json"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./graphite/local_settings.py",
            "/var/lib/graphite/webapp/graphite/local_settings.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./graphite/carbon.conf",
            "/var/lib/graphite/conf/carbon.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./graphite/storage-schemas.conf",
            "/var/lib/graphite/conf/storage-schemas.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./graphite/storage-aggregation.conf",
            "/var/lib/graphite/conf/storage-aggregation.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/graphite \u0026\u0026 chown -R www-data:www-data /var/lib/graphite \u0026\u0026    mkdir -p /data/graphite \u0026\u0026 chown www-data:www-data /data/graphite \u0026\u0026    rm -rf /var/lib/graphite/storage/whisper \u0026\u0026 ln -s /data/graphite /var/lib/graphite/storage/whisper"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /var/lib/graphite/webapp/graphite \u0026\u0026    python manage.py syncdb --noinput \u0026\u0026    chown -R www-data:www-data /var/lib/graphite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./grafana/config.js",
            "/src/grafana/config.js"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./kibana/config.js",
            "/src/kibana/config.js"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /logs/supervisor \u0026\u0026 touch /logs/supervisor/supervisord.log \u0026\u0026    mkdir -p /logs/nginx \u0026\u0026 chown www-data:www-data /logs/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "81"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "4560"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2003"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6379"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9200"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8125/udp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8126"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data/graphite",
            "/data/elasticsearch"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/logs/elasticsearch",
            "/logs/supervisor",
            "/logs/nginx"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}