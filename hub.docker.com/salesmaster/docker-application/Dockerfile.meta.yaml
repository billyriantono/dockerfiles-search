MetaArgs: null
Stages:
- BaseName: debian:stretch
  Commands:
  - Maintainer: salesmaster
    Name: maintainer
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: DEBIAN_BASE_PACKAGES
      Value: build-essential autoconf locales ca-certificates sudo       libyaml-dev  libxml2-dev
        libssl1.0-dev libreadline7 libreadline-dev zlib1g zlib1g-dev       libevent-dev
        libsqlite3-dev libxslt1-dev libxml2-dev libfontconfig1-dev       bison openssl
        python3-software-properties software-properties-common lsb-release lsb-core       curl
        wget tmux vim git default-jre runit chrpath nginx xvfb iceweasel openssh-server
        daemontools       lzop pv python-setuptools python-all-dev
    Name: env
  - CmdLine:
    - apt-get update && apt-get upgrade --assume-yes && apt-get dist-upgrade --assume-yes
      &&     (apt-get install --assume-yes $DEBIAN_BASE_PACKAGES || apt-get update
      --fix-missing) &&     (apt-get install --assume-yes $DEBIAN_BASE_PACKAGES ||
      echo "no need to install") &&    apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_GB.UTF-8 UTF-8\nen_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen
      && dpkg-reconfigure -f noninteractive locales &&     echo "LANG=en_GB.UTF-8"
      > /etc/default/locale &&     echo "Europe/London" > /etc/timezone && dpkg-reconfigure
      -f noninteractive tzdata
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./files/sshd_config
    - /etc/ssh/sshd_config
  - CmdLine:
    - mkdir /var/run/sshd &&    chmod 0755 /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:lkJh98.443g8yFCHHcppic-9' | chpasswd
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./files/docker-debian-wheezy-base_id_rsa
    - /root/.ssh/docker-debian-wheezy-base_id_rsa
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./files/docker-debian-wheezy-base_id_rsa.pub
    - /root/.ssh/docker-debian-wheezy-base_id_rsa.pub
  - CmdLine:
    - cat /root/.ssh/docker-debian-wheezy-base_id_rsa.pub > /root/.ssh/authorized_keys
    Name: run
    PrependShell: true
  - Env:
    - Key: REDIS_VERSION
      Value: 2.8.12
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/redis.conf
    - /etc/redis/redis.conf
  - CmdLine:
    - wget -O redis.tar.gz http://download.redis.io/releases/redis-$REDIS_VERSION.tar.gz
      &&    tar -zxvf redis.tar.gz &&    cd redis-$REDIS_VERSION/ &&    make &&    mkdir
      -p /opt/redis/bin/ &&    cp src/redis-server /opt/redis/bin/ &&    cp src/redis-cli
      /opt/redis/bin/ &&    cd / &&    rm -rf redis.tar.gz redis-$REDIS_VERSION &&    adduser
      --system --no-create-home redis &&    mkdir -p /var/redis /etc/redis/ /var/run/redis
      /var/log/redis &&    chown -R redis /var/redis /etc/redis/ /var/run/redis /var/log/redis
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/redis/bin/:$PATH
    Name: env
  - Env:
    - Key: SOLR_VERSION
      Value: 4.2.0
    Name: env
  - CmdLine:
    - wget -O solr.tar.gz http://archive.apache.org/dist/lucene/solr/$SOLR_VERSION/solr-$SOLR_VERSION.tgz
      &&    tar -C /opt --extract --file solr.tar.gz &&    rm -rf solr.tar.gz &&    ln
      -s /opt/solr-$SOLR_VERSION /opt/solr &&    cp -a /opt/solr/example/solr /etc/
      &&    adduser --system --no-create-home solr &&    mkdir -p /var/lib/solr/staging/data/index
      /var/lib/solr /var/run/solr /var/log/solr &&    chown -R solr /var/lib/solr
      /var/run/solr /var/log/solr /etc/solr
    Name: run
    PrependShell: true
  - Env:
    - Key: POSTGRES_VERSION
      Value: "9.3"
    Name: env
  - CmdLine:
    - echo "deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main" > /etc/apt/sources.list.d/pgdg.list
      &&    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc |
      sudo apt-key add - &&    apt-get update &&    apt-get install -y --force-yes         postgresql-$POSTGRES_VERSION
      postgresql-client-$POSTGRES_VERSION postgresql-contrib-$POSTGRES_VERSION libpq-dev         postgresql-$POSTGRES_VERSION-repmgr
      repmgr &&    /etc/init.d/postgresql stop
    Name: run
    PrependShell: true
  - Env:
    - Key: CHRUBY_VERSION
      Value: 0.3.9
    Name: env
  - CmdLine:
    - wget -O chruby-$CHRUBY_VERSION.tar.gz https://github.com/postmodern/chruby/archive/v$CHRUBY_VERSION.tar.gz
      && tar -xzvf chruby-$CHRUBY_VERSION.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd chruby-$CHRUBY_VERSION/ &&    make install &&    cd / &&    echo '[ -n "$BASH_VERSION"
      ] || [ -n "$ZSH_VERSION" ] || return' >> /etc/profile.d/chruby.sh &&    echo
      'source /usr/local/share/chruby/chruby.sh' >> /etc/profile.d/chruby.sh &&    chmod
      +x /etc/profile.d/chruby.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: RUBYINSTALL_VERSION
      Value: 0.4.3
    Name: env
  - CmdLine:
    - wget -O ruby-install-$RUBYINSTALL_VERSION.tar.gz https://github.com/postmodern/ruby-install/archive/v$RUBYINSTALL_VERSION.tar.gz
      &&    tar -xzvf ruby-install-$RUBYINSTALL_VERSION.tar.gz &&    cd ruby-install-$RUBYINSTALL_VERSION/
      &&    make install &&    cd /
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/perlbrew /root
    Name: run
    PrependShell: true
  - Env:
    - Key: PERLBREW_ROOT
      Value: /usr/local/perlbrew
    Name: env
  - Env:
    - Key: PERLBREW_HOME
      Value: /root/.perlbrew
    Name: env
  - Env:
    - Key: PERLBREW_PATH
      Value: /usr/local/perlbrew/bin
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/local/perlbrew/bin:$PATH
    Name: env
  - CmdLine:
    - curl -kL http://install.perlbrew.pl | bash &&    perlbrew install-cpanm &&    perlbrew
      info
    Name: run
    PrependShell: true
  - Env:
    - Key: PHANTOMJS_VERSION
      Value: 1.9.7
    Name: env
  - CmdLine:
    - wget --no-check-certificate -O phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2
      https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2
      &&    tar -xjf phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 &&    rm -rf
      phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 &&    mv phantomjs-$PHANTOMJS_VERSION-linux-x86_64
      /opt/ &&    ln -s /opt/phantomjs-$PHANTOMJS_VERSION-linux-x86_64 /opt/phantomjs
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/phantomjs/bin/:$PATH
    Name: env
  - Env:
    - Key: NODEJS_VERSION
      Value: 0.10.22
    Name: env
  - CmdLine:
    - wget -O nodejs.tar.gz http://nodejs.org/dist/v$NODEJS_VERSION/node-v$NODEJS_VERSION-linux-x64.tar.gz
      &&    tar C /opt --extract --file nodejs.tar.gz &&    rm -rf nodejs.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/node-v$NODEJS_VERSION-linux-x64/bin:$PATH
    Name: env
  - CmdLine:
    - su - postgres -c "openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj
      "/C=UK/ST=Denial/L=Springfield/O=Dis/CN=salesmaster.co.uk" -keyout /var/lib/postgresql/sm-pg.key  -out
      /var/lib/postgresql/sm-pg.crt" &&    echo "ssl_cert_file = '/var/lib/postgresql/sm-pg.crt'
      \n"       "ssl_key_file = '/var/lib/postgresql/sm-pg.key' \n"       "listen_addresses
      = '*' \n"       "\n" >> /etc/postgresql/$POSTGRES_VERSION/main/postgresql.conf
      &&    chmod og-rwx /var/lib/postgresql/sm-pg.key
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/service/sshd &&    echo "#!/bin/sh \n"       "exec /usr/sbin/sshd
      -D" > /etc/service/sshd/run &&        mkdir -p /etc/service/cron &&    echo
      "#!/bin/sh \n"       "exec /usr/sbin/cron -f" > /etc/service/cron/run &&        mkdir
      -p /etc/service/postgres &&    echo "#!/bin/sh \n"       "exec chpst -u postgres
      -- /usr/lib/postgresql/$POSTGRES_VERSION/bin/postgres -c config_file=/etc/postgresql/$POSTGRES_VERSION/main/postgresql.conf
      \n"       "\n" > /etc/service/postgres/run &&        mkdir -p /etc/service/redis
      &&    echo "#!/bin/sh \n"       "exec chpst -u redis -- /opt/redis/bin/redis-server
      /etc/redis/redis.conf \n"       "\n" > /etc/service/redis/run &&        sed
      -i '1s/^/daemon off; \n/' /etc/nginx/nginx.conf &&    mkdir -p /etc/service/nginx
      &&    echo "#!/bin/sh \n"       "exec chpst -u root -- /usr/sbin/nginx \n"       "\n"
      > /etc/service/nginx/run &&        mkdir -p /etc/service/solr &&    echo "#!/bin/sh
      \n"       "cd /opt/solr/example \n"       "exec chpst -u solr -- /usr/bin/java
      -Dsolr.solr.home=/etc/solr/ -Djetty.logs=/var/log/solr/solr.log -Djetty.home=/etc/solr
      -Djava.io.tmpdir=/tmp  -Djetty.port=8080 -Xms2048m -Xmx2048m -jar /opt/solr/example/start.jar
      \n"       "\n" > /etc/service/solr/run &&        chmod -R +x /etc/service
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/container_bin/
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/container_prepare
    - /opt/container_bin/container_prepare
  - CmdLine:
    - chmod -R +x /opt/container_bin
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/container_bin/:$PATH
    Name: env
  - CmdLine:
    - ln -s /etc/runit/2 /sbin/runsvdir-start
    Name: run
    PrependShell: true
  - CmdLine:
    - container_prepare && runsvdir-start
    Name: cmd
    PrependShell: true
  From:
    Image: debian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch
