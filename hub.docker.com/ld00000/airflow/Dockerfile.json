{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "ld00000 \u003clidong9144@163.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "AIRFLOW_VERSION",
          "Name": "arg",
          "Value": "1.7.1.3"
        },
        {
          "Env": [
            {
              "Key": "AIRFLOW_HOME",
              "Value": "/airflow"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get autoclean \u0026\u0026 apt-get --purge -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /etc/apt/sources.list /etc/apt/sources.list.bak"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/163-sources.list",
            "/etc/apt/sources.list"
          ]
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Shanghai"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo y | apt-get install wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://bootstrap.pypa.io/get-pip.py  --no-check-certificate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo y | apt-get install                 libxml2-dev                 libxslt1-dev                 zlib1g-dev                 libevent-dev                 libmysqlclient-dev                 libkrb5-dev                 libsasl2-dev                 libssl-dev                 libffi-dev                 libpq-dev                 build-essential                 libblas-dev                 liblapack-dev                 curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo y | apt-get install python2.7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo y | apt-get install python3-dev python-pip python-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -i http://pypi.douban.com/simple/ Cython     \u0026\u0026 pip install -i http://pypi.douban.com/simple/ flask-bcrypt     \u0026\u0026 pip install -i http://pypi.douban.com/simple/ pytz==2015.7     \u0026\u0026 pip install -i http://pypi.douban.com/simple/ cryptography     \u0026\u0026 pip install -i http://pypi.douban.com/simple/ pyOpenSSL     \u0026\u0026 pip install -i http://pypi.douban.com/simple/ ndg-httpsclient     \u0026\u0026 pip install -i http://pypi.douban.com/simple/ pyasn1     \u0026\u0026 pip install -i http://pypi.douban.com/simple/ psycopg2     \u0026\u0026 pip install -i http://pypi.douban.com/simple/ pandas==0.18.1     \u0026\u0026 pip install -i http://pypi.douban.com/simple/ celery==3.1.23     \u0026\u0026 pip install -i http://pypi.douban.com/simple/ airflow[mysql,celery,hive,hdfs,jdbc]==$AIRFLOW_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UPDATE",
              "Value": "111"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD",
              "Value": "14"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-${VERSION}-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JRE_HOME",
              "Value": "${JAVA_HOME}/jre"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\"     -P /tmp     http://download.oracle.com/otn-pub/java/jdk/\"${VERSION}\"u\"${UPDATE}\"-b\"${BUILD}\"/jdk-\"${VERSION}\"u\"${UPDATE}\"-linux-x64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 tar -zxvf jdk-\"${VERSION}\"u\"${UPDATE}\"-linux-x64.tar.gz \u0026\u0026     mkdir -p /usr/lib/jvm \u0026\u0026 mv /tmp/jdk1.${VERSION}.0_${UPDATE} \"${JAVA_HOME}\" \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install \"/usr/bin/java\" \"java\" \"${JRE_HOME}/bin/java\" 1 \u0026\u0026     update-alternatives --install \"/usr/bin/javac\" \"javac\" \"${JAVA_HOME}/bin/javac\" 1 \u0026\u0026     update-alternatives --set java \"${JRE_HOME}/bin/java\" \u0026\u0026     update-alternatives --set javac \"${JAVA_HOME}/bin/javac\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean       \u0026\u0026 rm -fr /var/lib/apt/lists/*         /tmp/*         /var/tmp/*         /usr/share/man         /usr/share/doc         /usr/share/doc-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "script/entrypoint.sh",
            "${AIRFLOW_HOME}/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/airflow.cfg",
            "${AIRFLOW_HOME}/airflow.cfg"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "script/authentication.py",
            "${AIRFLOW_HOME}/authentication.py"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5555",
            "8080",
            "8793"
          ]
        },
        {
          "CmdLine": [
            "groupadd -r airflow \u0026\u0026 useradd -r -g airflow airflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(echo \"airflow\";sleep 1;echo \"airflow\") | passwd airflow \u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R airflow: ${AIRFLOW_HOME}     \u0026\u0026 chmod +x ${AIRFLOW_HOME}/entrypoint.sh     \u0026\u0026 chmod +x ${AIRFLOW_HOME}/authentication.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "airflow"
        },
        {
          "Name": "workdir",
          "Path": "${AIRFLOW_HOME}"
        },
        {
          "CmdLine": [
            "./entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}