MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-cudnn7-devel-ubuntu14.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - apt-get update -y &&     apt-get install -y     wget     pkg-config     zip     g++     zlib1g-dev     unzip
      python     wget libtool     cmake     libboost-all-dev     git     libssl-dev     net-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/bazelbuild/bazel/releases/download/0.5.3/bazel-0.5.3-installer-linux-x86_64.sh
      -O /tmp/bazel-0.5.3-installer-linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /tmp/bazel-0.5.3-installer-linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - bash /tmp/bazel-0.5.3-installer-linux-x86_64.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - fast-rtps
    - /usr/local/fast-rtps
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - installers
    - /tmp/installers
  - CmdLine:
    - bash /tmp/installers/install_google_styleguide.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - bash /tmp/installers/install_protobuf.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/google/protobuf/releases/download/v3.3.0/protobuf-cpp-3.3.0.tar.gz
      -O /home/tmp/protobuf-3.3.0.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install apt-utils -y     libjsoncpp-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt purge libgflags-dev -y &&     apt-get install libgflags-dev -y     libgoogle-glog-dev     libpoco-dev     uuid-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install terminator -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y python curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - python get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pyyaml
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install base-files lsb-release lsb-base -y
    Name: run
    PrependShell: true
  - CmdLine:
    - "sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\"
      > /etc/apt/sources.list.d/ros-latest.list' &&     apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80'
      --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 && \tapt-get update && apt-get
      install -y         dpkg         ros-indigo-ros-comm         ros-indigo-common-msgs
      \        ros-indigo-tf         python-catkin-tools"
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install libncurses5-dev libncursesw5-dev -y
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/apollo_ros_bridge
  From:
    Image: nvidia/cuda:8.0-cudnn7-devel-ubuntu14.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-cudnn7-devel-ubuntu14.04
