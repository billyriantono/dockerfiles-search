MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Key: BDS_Version
    Name: arg
    Value: latest
  - Env:
    - Key: VERSION
      Value: $BDS_Version
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y unzip curl libcurl4 libssl1.0.0 &&     rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "$VERSION" = "latest" ] ; then         LATEST_VERSION=$(             curl
      -v --silent  https://www.minecraft.net/en-us/download/server/bedrock/ 2>&1 |             grep
      -o 'https://minecraft.azureedge.net/bin-linux/[^"]*' |             sed 's#.*/bedrock-server-##'
      | sed 's/.zip//') &&         export VERSION=$LATEST_VERSION &&         echo
      "Setting VERSION to $LATEST_VERSION" ;     else echo "Using VERSION of $VERSION";     fi
      &&     curl https://minecraft.azureedge.net/bin-linux/bedrock-server-${VERSION}.zip
      --output bedrock-server.zip &&     unzip bedrock-server.zip -d bedrock-server
      &&     rm bedrock-server.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /bedrock-server/config &&     mv /bedrock-server/server.properties /bedrock-server/config
      &&     mv /bedrock-server/permissions.json /bedrock-server/config &&     mv
      /bedrock-server/whitelist.json /bedrock-server/config &&     ln -s /bedrock-server/config/server.properties
      /bedrock-server/server.properties &&     ln -s /bedrock-server/config/permissions.json
      /bedrock-server/permissions.json &&     ln -s /bedrock-server/config/whitelist.json
      /bedrock-server/whitelist.json
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 19132/udp
  - Name: volume
    Volumes:
    - /bedrock-server/worlds
    - /bedrock-server/config
  - Name: workdir
    Path: /bedrock-server
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: .
    Name: env
  - CmdLine:
    - ./bedrock_server
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
