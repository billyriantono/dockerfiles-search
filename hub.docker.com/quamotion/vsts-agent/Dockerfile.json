{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "microsoft/windowsservercore:ltsc2016",
      "SourceCode": "FROM microsoft/windowsservercore:ltsc2016",
      "Platform": "",
      "From": {
        "Image": "microsoft/windowsservercore:ltsc2016"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "WINDOWS_IMAGE_VERSION",
              "Value": "10.0.14393"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir C:\\BuildAgent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "C:/BuildAgent"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./Start.*",
            "./"
          ]
        },
        {
          "Env": [
            {
              "Key": "chocolateyUseWindowsCompression",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "@powershell -NoProfile -ExecutionPolicy Bypass -Command \"iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" \u0026\u0026 SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "choco config set cachelocation C:\\chococache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "choco install     git      nodejs     curl     docker     docfx     --confirm     --limit-output     --timeout 216000     \u0026\u0026 rmdir /S /Q C:\\chococache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install gulp -g \u0026\u0026 npm install bower -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "shell",
          "Shell": [
            "powershell",
            "-Command",
            "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"
          ]
        },
        {
          "Env": [
            {
              "Key": "DOTNET_SDK_DOWNLOAD_URL",
              "Value": "https://download.microsoft.com/download/4/0/9/40920432-3302-47a8-b13c-bbc4848ad114/dotnet-sdk-2.1.302-win-x64.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "Invoke-WebRequest $Env:DOTNET_SDK_DOWNLOAD_URL -OutFile dotnet.zip;     Expand-Archive dotnet.zip -DestinationPath $Env:ProgramFiles\\dotnet -Force;     Remove-Item -Force dotnet.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GITLAB_RUNNER_DOWNLOAD_URL",
              "Value": "https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-windows-amd64.exe"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "New-Item -ItemType directory -Path C:\\GitLab;     Invoke-WebRequest $Env:GITLAB_RUNNER_DOWNLOAD_URL -OutFile C:\\GitLab\\gitlab-runner.exe"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "VSTS_AGENT_DOWNLOAD_URL",
              "Value": "https://vstsagentpackage.azureedge.net/agent/2.136.1/vsts-agent-win-x64-2.136.1.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "Invoke-WebRequest $Env:VSTS_AGENT_DOWNLOAD_URL -OutFile vsts.zip;     Expand-Archive vsts.zip -DestinationPath C:\\vsts-agent -Force;     Remove-Item -Force vsts.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Install-PackageProvider NuGet -force;     Install-Module -Name Pester -Force -SkipPublisherCheck"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "AZ_COPY_URL",
              "Value": "https://azcopy.azureedge.net/azcopy-7-1-0/MicrosoftAzureStorageTools.msi"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "Invoke-WebRequest $Env:AZ_COPY_URL -OutFile MicrosoftAzureStorageTools.msi;     Start-Process msiexec.exe -Wait -ArgumentList '/i MicrosoftAzureStorageTools.msi /qn';     Remove-Item -Force MicrosoftAzureStorageTools.msi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "shell",
          "Shell": [
            "cmd",
            "/S",
            "/C"
          ]
        },
        {
          "CmdLine": [
            "setx /M PATH \"%PATH%;%ProgramFiles%\\dotnet;%ProgramFiles(x86)%\\Microsoft SDKs\\Azure\\AzCopy\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir C:\\warmup     \u0026\u0026 cd C:\\warmup     \u0026\u0026 dotnet new     \u0026\u0026 cd ..     \u0026\u0026 rmdir /S /Q C:\\warmup"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}