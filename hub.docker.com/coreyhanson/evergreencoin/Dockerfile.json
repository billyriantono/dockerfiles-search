{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "compile",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04 as compile",
      "Platform": "",
      "As": "compile",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Corey Ryan Hanson\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive \u0026\u0026 apt-get update \u0026\u0026 apt-get install --no-install-recommends -y         git         ca-certificates \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/EverGreenCoinDev/EverGreenCoin.git \u0026\u0026     cd EverGreenCoin \u0026\u0026     git checkout 569e4436c0ecdc912ee6900cc3a2d823dc1d8748"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y         sudo         qt5-default         qt5-qmake         qtbase5-dev-tools         qttools5-dev-tools         build-essential         libboost-dev         libboost-system-dev         libboost-filesystem-dev         libboost-program-options-dev         libboost-thread-dev         libssl-dev         libdb++-dev         libminiupnpc-dev         libqrencode-dev \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /EverGreenCoin \u0026\u0026     qmake \u0026\u0026     make"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "create-user.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x create-user.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y       sudo       ca-certificates       libminiupnpc10       libssl1.0.0       libdb5.3++       libboost-system1.58.0       libboost-filesystem1.58.0       libboost-program-options1.58.0       libboost-thread1.58.0       libqt5widgets5       libqt5gui5       libqt5network5       libqt5core5a       libqrencode3 \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "compile",
          "Name": "copy",
          "SourcesAndDest": [
            "/EverGreenCoin/EverGreenCoin-Qt",
            "/usr/local/bin/"
          ]
        },
        {
          "Key": "docker_root_pass",
          "Name": "arg",
          "Value": "starcatfish"
        },
        {
          "Key": "docker_unprivileged_user",
          "Name": "arg",
          "Value": "evergreen"
        },
        {
          "Key": "docker_unprivileged_pass",
          "Name": "arg",
          "Value": "walrus"
        },
        {
          "CmdLine": [
            "/create-user.sh \u0026\u0026     rm /create-user.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$docker_unprivileged_user"
        },
        {
          "Name": "workdir",
          "Path": "/home/evergreen"
        },
        {
          "CmdLine": [
            "/usr/local/bin/EverGreenCoin-Qt"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}