MetaArgs: null
Stages:
- BaseName: enricomariam42/baseimage-java7:latest
  Commands:
  - Maintainer: Enrico Maria Carmona, e.carmona@hsgerardo.org
    Name: maintainer
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Env:
    - Key: TOMCAT_HOME
      Value: /opt/pentaho/biserver-ce/tomcat
    Name: env
  - Env:
    - Key: PENTAHO_HOME
      Value: /opt/pentaho/biserver-ce
    Name: env
  - Env:
    - Key: BASE_REL
      Value: "5.4"
    Name: env
  - Env:
    - Key: REV
      Value: 0.1-130
    Name: env
  - Env:
    - Key: DB_TYPE
      Value: postgresql
    Name: env
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get -qq update &&     DEBIAN_FRONTEND=noninteractive apt-get install -f
      -y -q     unzip     zip
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m pentaho &&     mkdir /opt/pentaho
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -Rf pentaho:pentaho /opt/pentaho &&     su -c "curl -L http://sourceforge.net/projects/pentaho/files/Business%20Intelligence%20Server/${BASE_REL}/biserver-ce-${BASE_REL}.${REV}.zip/download
      -o /opt/pentaho/biserver-ce.zip" pentaho &&     su -c "unzip -q /opt/pentaho/biserver-ce.zip
      -d /opt/pentaho/" pentaho &&     rm /opt/pentaho/biserver-ce/promptuser.sh &&     rm
      /opt/pentaho/biserver-ce.zip &&     sed -i -e 's/\(exec ".*"\) start/\1 run/'
      /opt/pentaho/biserver-ce/tomcat/bin/startup.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - v5/pentaho/system/${DB_TYPE}/applicationContext-spring-security-hibernate.properties
    - /opt/pentaho/biserver-ce/pentaho-solutions/system/applicationContext-spring-security-hibernate.properties
  - Chown: ""
    Name: add
    SourcesAndDest:
    - v5/pentaho/system/${DB_TYPE}/hibernate-settings.xml
    - /opt/pentaho/biserver-ce/pentaho-solutions/system/hibernate/hibernate-settings.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - v5/pentaho/system/${DB_TYPE}/quartz.properties
    - /opt/pentaho/biserver-ce/pentaho-solutions/system/quartz/quartz.properties
  - Chown: ""
    Name: add
    SourcesAndDest:
    - v5/pentaho/system/${DB_TYPE}/repository.xml
    - /opt/pentaho/biserver-ce/pentaho-solutions/system/jackrabbit/repository.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - v5/pentaho/system/${DB_TYPE}/postgresql.hibernate.cfg.xml
    - /opt/pentaho/biserver-ce/pentaho-solutions/system/hibernate/postgresql.hibernate.cfg.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - v5/tomcat/${DB_TYPE}/context.xml
    - /opt/pentaho/biserver-ce/tomcat/webapps/pentaho/META-INF/context.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - v5/tomcat/web.xml
    - /opt/pentaho/biserver-ce/tomcat/webapps/pentaho/WEB-INF/web.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - v5/pentaho/system/pentaho-jpivot-plugin/settings.xml
    - /opt/pentaho/biserver-ce/pentaho-solutions/system/pentaho-jpivot-plugin/settings.xml
  - CmdLine:
    - rm -f /opt/pentaho/biserver-ce/tomcat/lib/mysql-*           /opt/pentaho/biserver-ce/tomcat/lib/postgresql-*           /opt/pentaho/biserver-ce/tomcat/webapps/pentaho/WEB-INF/lib/monetdb-jdbc*
      &&     wget -O /opt/pentaho/biserver-ce/tomcat/lib/monetdb-jdbc-`curl -s https://clojars.org/repo/monetdb/monetdb-jdbc/maven-metadata.xml
      | grep -Po '<release>.*' | grep -Po [0-9\.]+`.jar https://clojars.org/repo/monetdb/monetdb-jdbc/`curl
      -s https://clojars.org/repo/monetdb/monetdb-jdbc/maven-metadata.xml | grep -Po
      '<release>.*' | grep -Po [0-9\.]+`/monetdb-jdbc-`curl -s https://clojars.org/repo/monetdb/monetdb-jdbc/maven-metadata.xml
      | grep -Po '<release>.*' | grep -Po [0-9\.]+`.jar &&     wget -O /opt/pentaho/biserver-ce/tomcat/lib/mysql-connector-java-`curl
      -s 'https://search.maven.org/solrsearch/select?q=a:%22mysql-connector-java%22+AND+g:%22mysql%22&wt=json'
      | grep -Po '"latestVersion":.*?[^\\]]",' | grep -Po '[0-9\.]+'`.jar https://search.maven.org/remotecontent?filepath=mysql/mysql-connector-java/`curl
      -s 'https://search.maven.org/solrsearch/select?q=a:%22mysql-connector-java%22+AND+g:%22mysql%22&wt=json'
      | grep -Po '"latestVersion":.*?[^\\]]",' | grep -Po '[0-9\.]+'`/mysql-connector-java-`curl
      -s 'https://search.maven.org/solrsearch/select?q=a:%22mysql-connector-java%22+AND+g:%22mysql%22&wt=json'
      | grep -Po '"latestVersion":.*?[^\\]]",' | grep -Po '[0-9\.]+'`.jar &&     wget
      -O /opt/pentaho/biserver-ce/tomcat/lib/postgresql-`curl -s 'https://search.maven.org/solrsearch/select?q=a:%22postgresql%22+AND+g:%22org.postgresql%22&wt=json'
      | grep -Po '"latestVersion":.*?[^\\]]",'| grep -Pow '[0-9\.\-]+'`jdbc41.jar
      https://search.maven.org/remotecontent?filepath=org/postgresql/postgresql/`curl
      -s 'https://search.maven.org/solrsearch/select?q=a:%22postgresql%22+AND+g:%22org.postgresql%22&wt=json'
      | grep -Po '"latestVersion":.*?[^\\]]",'| grep -Pow '[0-9\.\-]+'`jdbc41/postgresql-`curl
      -s 'https://search.maven.org/solrsearch/select?q=a:%22postgresql%22+AND+g:%22org.postgresql%22&wt=json'
      | grep -Po '"latestVersion":.*?[^\\]]",'| grep -Pow '[0-9\.\-]+'`jdbc41.jar
      &&     chown -f pentaho:pentaho /opt/pentaho/biserver-ce/tomcat/lib/*
    Name: run
    PrependShell: true
  - CmdLine:
    - 'wget -O ~/ctools-installer.sh https://raw.githubusercontent.com/pmalves/ctools-installer/master/ctools-installer.sh
      &&     chmod +x ~/ctools-installer.sh &&     ~/ctools-installer.sh -y -s /opt/pentaho/biserver-ce/pentaho-solutions
      -w /opt/pentaho/biserver-ce/tomcat/webapps/pentaho -c saiku &&     rm ~/ctools-installer.sh*
      &&     sed -i ''s/SplashScreen,!1/Workspace/'' /opt/pentaho/biserver-ce/pentaho-solutions/system/saiku/ui/saiku.min.js
      &&     echo ".upgrade {\n    display: none;\n}" >> /opt/pentaho/biserver-ce/pentaho-solutions/system/saiku/ui/css/saiku/src/styles.css
      &&     sed -i ''s|<entry key="jpeg" value-ref="streamConverter"/>|&\n\t\t\t\t<entry
      key="saiku" value-ref="streamConverter"/>|'' /opt/pentaho/biserver-ce/pentaho-solutions/system/importExport.xml
      &&     sed -i ''s|<value>.xcdf</value>|&\n\t\t\t\t<value>.saiku</value>|'' /opt/pentaho/biserver-ce/pentaho-solutions/system/importExport.xml
      &&     sed -i ''s|<extension>xreportspec</extension>|&\n\t\t<extension>saiku</extension>|''
      /opt/pentaho/biserver-ce/pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml
      &&     su -c "curl -L http://ci.greencatsoft.com/job/Pivot4J/lastSuccessfulBuild/artifact/pivot4j-pentaho/target/pivot4j-pentaho-1.0-SNAPSHOT-plugin.tar.gz
      -o /opt/pentaho/biserver-ce/pentaho-solutions/system/pivot4j.tar.gz" pentaho
      &&     cd /opt/pentaho/biserver-ce/pentaho-solutions/system/ &&     su -c "tar
      xzvf pivot4j.tar.gz" pentaho &&     rm pivot4j.tar.gz &&     cd / &&     sed
      -i ''s|<entry key="jpeg" value-ref="streamConverter"/>|&\n\t\t\t\t<entry key="pivot4j"
      value-ref="streamConverter"/>|'' /opt/pentaho/biserver-ce/pentaho-solutions/system/importExport.xml
      &&     sed -i ''s|<value>.xcdf</value>|&\n\t\t\t\t<value>.pivot4j</value>|''
      /opt/pentaho/biserver-ce/pentaho-solutions/system/importExport.xml &&     sed
      -i ''s|<extension>xreportspec</extension>|&\n\t\t<extension>pivot4j</extension>|''
      /opt/pentaho/biserver-ce/pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml'
    Name: run
    PrependShell: true
  - CmdLine:
    - for i in $(seq 30 -1 1); do     sed -i 's|<util:map id="defaultUserRoleMappings">|'"&\n\t\t<entry
      key=\"user$i\">\n\t\t\t<util:list>\n\t\t\t\t<ref bean=\"singleTenantAuthenticatedAuthorityName\"/>\n\t\t\t\t<value>Power
      User</value>\n\t\t\t</util:list>\n\t\t</entry>"'|' /opt/pentaho/biserver-ce/pentaho-solutions/system/defaultUser.spring.xml     ;  done
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -Rf pentaho:pentaho /opt/pentaho
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/service/pentaho
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - run
    - /etc/service/pentaho/run
  - CmdLine:
    - chmod +x /etc/service/pentaho/run
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  From:
    Image: enricomariam42/baseimage-java7:latest
  Name: ""
  Platform: ""
  SourceCode: FROM enricomariam42/baseimage-java7:latest
