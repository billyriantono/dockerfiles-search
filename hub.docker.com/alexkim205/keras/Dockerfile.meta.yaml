MetaArgs: null
Stages:
- BaseName: debian:stretch
  Commands:
  - Maintainer: Alex Kim "alexgkim205@gmail.com"
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update -qq  && apt-get install --no-install-recommends -y     build-essential     g++     git     openssh-client     python3     python3-dev     python3-pip     python3-setuptools     python3-virtualenv     python3-wheel     pkg-config     libopenblas-base     python3-numpy     python3-scipy     python3-h5py     python3-yaml     python3-pydot  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 --no-cache-dir install -U numpy==1.13.3
    Name: run
    PrependShell: true
  - Key: TENSORFLOW_VERSION
    Name: arg
    Value: 1.5.0
  - Key: TENSORFLOW_DEVICE
    Name: arg
    Value: cpu
  - Key: TENSORFLOW_APPEND
    Name: arg
    Value: ""
  - CmdLine:
    - pip3 --no-cache-dir install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_DEVICE}/tensorflow${TENSORFLOW_APPEND}-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl
    Name: run
    PrependShell: true
  - Key: KERAS_VERSION
    Name: arg
    Value: 2.1.4
  - Env:
    - Key: KERAS_BACKEND
      Value: tensorflow
    Name: env
  - CmdLine:
    - pip3 --no-cache-dir install --no-dependencies git+https://github.com/fchollet/keras.git@${KERAS_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq  && apt-get install --no-install-recommends -y     sudo     less     procps     vim-tiny     build-essential     libffi-dev     python3-matplotlib     python3-pillow  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 --no-cache-dir install     jupyter     jupyter-kernel-gateway     jupyter-tensorboard     ipython     ipykernel     pandas     scikit-learn     statsmodels  &&
      python3 -m ipykernel.kernelspec
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias ll="ls --color=auto -alF"' >> /root/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - CmdLine:
    - jupyter notebook --version  && jupyter nbextension list 2>&1  && python3 -c
      "import numpy; print(numpy.__version__)"  && python3 -c "import tensorflow;
      print(tensorflow.__version__)"  && MPLBACKEND=Agg python3 -c "import matplotlib.pyplot"  &&
      rm -rf /tmp/*  && dpkg-query -l > /dpkg-query-l.txt  && pip3 freeze > /pip3-freeze.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --create-home --uid 1000 --user-group --shell /bin/bash user  && cp
      -a /root/.jupyter /root/.local /root/.bashrc /home/user  && chown -R user:user
      /home/user /srv
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd admin && echo "admin:admin" | chpasswd && adduser admin sudo
    Name: run
    PrependShell: true
  - Name: user
    User: user
  - Env:
    - Key: IP
      Value: '*'
    Name: env
  - Env:
    - Key: PASSWD
      Value: '''sha1:98b767162d34:8da1bc3c75a0f29145769edc977375a373407824'''
    Name: env
  - Env:
    - Key: TOKEN
      Value: '''keras'''
    Name: env
  - Name: expose
    Ports:
    - "8888"
  - Name: workdir
    Path: /srv/
  - CmdLine:
    - /bin/bash -c 'jupyter notebook     --NotebookApp.open_browser=False     --NotebookApp.allow_root=True     --NotebookApp.ip="$IP"     ${PASSWD+--NotebookApp.password=\"$PASSWD\"}     ${TOKEN+--NotebookApp.token=\"$TOKEN\"}     --NotebookApp.allow_password_change=False     --JupyterWebsocketPersonality.list_kernels=True     "$@"'
    Name: cmd
    PrependShell: true
  From:
    Image: debian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch
