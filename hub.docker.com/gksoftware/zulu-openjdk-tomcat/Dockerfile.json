{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get -qq update \u0026\u0026     apt-get -qqy install gnupg2 locales \u0026\u0026     locale-gen en_US.UTF-8 \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ZULU_VERSION",
              "Value": "8.38.0.13"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0xB1998361219BD9C9 \u0026\u0026     echo \"deb http://repos.azulsystems.com/ubuntu stable main\" \u003e\u003e /etc/apt/sources.list.d/zulu.list \u0026\u0026     apt-get -qq update \u0026\u0026     apt-get -qqy install zulu-8=$ZULU_VERSION \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "EXPOSE_PORT",
          "Name": "arg",
          "Value": "8080"
        },
        {
          "Env": [
            {
              "Key": "CATALINA_HOME",
              "Value": "/usr/local/tomcat"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CATALINA_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$CATALINA_HOME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$CATALINA_HOME"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_NATIVE_LIBDIR",
              "Value": "$CATALINA_HOME/native-jni-lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} \u003e /usr/local/bin/docker-java-home \t\u0026\u0026 chmod +x /usr/local/bin/docker-java-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_VERSION",
              "Value": "1.1.0g-2ubuntu4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg -l openssl; \tisOpenSslInstalled=$?; \tset -ex; \tif [ $isOpenSslInstalled -eq 0 ]; then \t\tcurrentVersion=\"$(dpkg-query --show --showformat '${Version}\\n' openssl)\"; \tfi; \tif [ $isOpenSslInstalled -ne 0 ] || [ dpkg --compare-versions \"$currentVersion\" '\u003c\u003c' \"$OPENSSL_VERSION\" ]; then \t\tif ! grep -q bionic /etc/apt/sources.list; then \t\t\t{ \t\t\t\techo 'deb http://archive.ubuntu.com/ubuntu/ bionic main'; \t\t\t} \u003e /etc/apt/sources.list.d/bionic.list; \t\t\t{ \t\t\t\techo 'Package: *'; \t\t\t\techo 'Pin: release n=bionic*'; \t\t\t\techo 'Pin-Priority: -10'; \t\t\t\techo; \t\t\t\techo 'Package: openssl libssl*'; \t\t\t\techo \"Pin: version $OPENSSL_VERSION\"; \t\t\t\techo 'Pin-Priority: 990'; \t\t\t} \u003e /etc/apt/preferences.d/bionic-openssl; \t\tfi; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends openssl=\"$OPENSSL_VERSION\"; \t\trm -rf /var/lib/apt/lists/*; \tfi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends \t\tlibapr1 \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_MAJOR",
              "Value": "8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_VERSION",
              "Value": "8.5.42"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_SHA512",
              "Value": "3e6b38e48d315d142e96f8e3809c86632f3c3903f8751c6602581a587edf840893ff0c737a65fcf9560a495b0118b5b8d60d4d1ce7947fe2abe34a89839b640f"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_TGZ_URLS",
              "Value": "https://www.apache.org/dyn/closer.cgi?action=download\u0026filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz     https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz     https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz     https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_ASC_URLS",
              "Value": "https://www.apache.org/dyn/closer.cgi?action=download\u0026filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc     https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc     https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc     https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \t\tapt-get install -y --no-install-recommends gnupg2 dirmngr; \t\texport GNUPGHOME=\"$(mktemp -d)\";         for key in $GPG_KEYS; do         for server in ha.pool.sks-keyservers.net hkp://p80.pool.sks-keyservers.net:80 keyserver.ubuntu.com hkp://keyserver.ubuntu.com:80 eu.pool.sks-keyservers.net hkp://pgp.mit.edu:80 hkp://keys.gnupg.net:80;         do                 gpg --keyserver \"$server\" --recv-keys \"$key\" \u0026\u0026 break || echo \"Trying new server ...\";         done     done;     \tapt-get install -y --no-install-recommends wget ca-certificates zip unzip; \t\tsuccess=; \tfor url in $TOMCAT_TGZ_URLS; do \t\tif wget -O tomcat.tar.gz \"$url\"; then \t\t\tsuccess=1; \t\t\tbreak; \t\tfi; \tdone; \t[ -n \"$success\" ]; \t\techo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c -; \t\tsuccess=; \tfor url in $TOMCAT_ASC_URLS; do \t\tif wget -O tomcat.tar.gz.asc \"$url\"; then \t\t\tsuccess=1; \t\t\tbreak; \t\tfi; \tdone; \t[ -n \"$success\" ]; \t\tgpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz; \ttar -xvf tomcat.tar.gz --strip-components=1; \trm bin/*.bat; \trm -R webapps/*;     rm -rf server/webapps/* \u0026\u0026     cd ${CATALINA_HOME}/lib \u0026\u0026     mkdir -p org/apache/catalina/util/ \u0026\u0026     unzip -j catalina.jar org/apache/catalina/util/ServerInfo.properties         -d org/apache/catalina/util/ \u0026\u0026     sed -i 's/server.info=.*/server.info=Apache Tomcat/g'         org/apache/catalina/util/ServerInfo.properties \u0026\u0026     zip -ur catalina.jar         org/apache/catalina/util/ServerInfo.properties \u0026\u0026     rm -rf org \u0026\u0026 cd ${CATALINA_HOME}; \trm tomcat.tar.gz*; \trm -rf \"$GNUPGHOME\"; \t\tnativeBuildDir=\"$(mktemp -d)\"; \ttar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1; \tapt-get install -y --no-install-recommends \t\tdpkg-dev \t\tgcc \t\tlibapr1-dev \t\tlibssl-dev \t\tmake \t; \t( \t\texport CATALINA_HOME=\"$PWD\"; \t\tcd \"$nativeBuildDir/native\"; \t\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \t\t./configure \t\t\t--build=\"$gnuArch\" \t\t\t--libdir=\"$TOMCAT_NATIVE_LIBDIR\" \t\t\t--prefix=\"$CATALINA_HOME\" \t\t\t--with-apr=\"$(which apr-1-config)\" \t\t\t--with-java-home=\"$(docker-java-home)\" \t\t\t--with-ssl=yes; \t\tmake -j \"$(nproc)\"; \t\tmake install; \t); \trm -rf \"$nativeBuildDir\"; \trm bin/tomcat-native.tar.gz; \t\tapt-mark auto '.*' \u003e /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*; \t\tfind ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;     chmod -R +rX .;     chmod 777 logs work;     echo \"session optional pam_umask.so\" \u003e\u003e /etc/pam.d/common-session \u0026\u0026     sed -i 's/UMASK.*022/UMASK           007/g' /etc/login.defs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e \t\u0026\u0026 nativeLines=\"$(catalina.sh configtest 2\u003e\u00261)\" \t\u0026\u0026 nativeLines=\"$(echo \"$nativeLines\" | grep 'Apache Tomcat Native')\" \t\u0026\u0026 nativeLines=\"$(echo \"$nativeLines\" | sort -u)\" \t\u0026\u0026 if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' \u003e\u00262; then \t\techo \u003e\u00262 \"$nativeLines\"; \t\texit 1; \tfi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux;     apt-get update;     apt-get install -y gosu;     apt-get clean;     rm -rf /var/lib/apt/lists/*;    gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "${EXPOSE_PORT}"
          ]
        },
        {
          "CmdLine": [
            "catalina.sh",
            "run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}