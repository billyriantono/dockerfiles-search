{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "sapmachine/jdk10:latest",
      "SourceCode": "FROM sapmachine/jdk10:latest",
      "Platform": "",
      "From": {
        "Image": "sapmachine/jdk10:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CATALINA_HOME",
              "Value": "/usr/local/tomcat"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CATALINA_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$CATALINA_HOME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$CATALINA_HOME"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_NATIVE_LIBDIR",
              "Value": "$CATALINA_HOME/native-jni-lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "{         echo '#!/bin/sh';         echo 'set -e';         echo;         echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"';     } \u003e /usr/local/bin/docker-java-home     \u0026\u0026 chmod +x /usr/local/bin/docker-java-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_VERSION",
              "Value": "1.1.0g-2ubuntu3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg -l openssl;     isOpenSslInstalled=$?;     set -ex;     if [ $isOpenSslInstalled -eq 0 ]; then         currentVersion=\"$(dpkg-query --show --showformat '${Version}\\n' openssl)\";     fi;     if [ $isOpenSslInstalled -ne 0 ] || [ dpkg --compare-versions \"$currentVersion\" '\u003c\u003c' \"$OPENSSL_VERSION\" ]; then         if ! grep -q bionic /etc/apt/sources.list; then             {                 echo 'deb http://archive.ubuntu.com/ubuntu/ bionic main';             } \u003e /etc/apt/sources.list.d/bionic.list;             {                 echo 'Package: *';                 echo 'Pin: release n=bionic*';                 echo 'Pin-Priority: -10';                 echo;                 echo 'Package: openssl libssl*';                 echo \"Pin: version $OPENSSL_VERSION\";                 echo 'Pin-Priority: 990';             } \u003e /etc/apt/preferences.d/bionic-openssl;         fi;         apt-get update;         apt-get install -y --no-install-recommends openssl=\"$OPENSSL_VERSION\";         rm -rf /var/lib/apt/lists/*;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         libapr1     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_MAJOR",
              "Value": "8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_VERSION",
              "Value": "8.5.29"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_SHA1",
              "Value": "fdc2ac85282af82a494e352c35e33dcfe1dbab6b"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_TGZ_URLS",
              "Value": "https://www.apache.org/dyn/closer.cgi?action=download\u0026filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz     https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz     https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz     https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_ASC_URLS",
              "Value": "https://www.apache.org/dyn/closer.cgi?action=download\u0026filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc     https://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc     https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc     https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux;         savedAptMark=\"$(apt-mark showmanual)\";     apt-get update;         apt-get install -y --no-install-recommends gnupg dirmngr;         export GNUPGHOME=\"$(mktemp -d)\";     for key in $GPG_KEYS; do         gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\";     done;         apt-get install -y --no-install-recommends wget ca-certificates;         success=;     for url in $TOMCAT_TGZ_URLS; do         if wget -O tomcat.tar.gz \"$url\"; then             success=1;             break;         fi;     done;     [ -n \"$success\" ];         echo \"$TOMCAT_SHA1 *tomcat.tar.gz\" | sha1sum -c -;         success=;     for url in $TOMCAT_ASC_URLS; do         if wget -O tomcat.tar.gz.asc \"$url\"; then             success=1;             break;         fi;     done;     [ -n \"$success\" ];         gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;     tar -xvf tomcat.tar.gz --strip-components=1;     rm bin/*.bat;     rm -R webapps/*;     rm tomcat.tar.gz*;     rm -rf \"$GNUPGHOME\";         nativeBuildDir=\"$(mktemp -d)\";     tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1;     apt-get install -y --no-install-recommends         dpkg-dev         gcc         libapr1-dev         libssl-dev         make     ;     (         export CATALINA_HOME=\"$PWD\";         cd \"$nativeBuildDir/native\";         gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\";         ./configure             --build=\"$gnuArch\"             --libdir=\"$TOMCAT_NATIVE_LIBDIR\"             --prefix=\"$CATALINA_HOME\"             --with-apr=\"$(which apr-1-config)\"             --with-java-home=\"$(docker-java-home)\"             --with-ssl=yes;         make -j \"$(nproc)\";         make install;     );     rm -rf \"$nativeBuildDir\";     rm bin/tomcat-native.tar.gz;         apt-mark auto '.*' \u003e /dev/null;     [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark;     apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;     rm -rf /var/lib/apt/lists/*;         find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e     \u0026\u0026 nativeLines=\"$(catalina.sh configtest 2\u003e\u00261)\"     \u0026\u0026 nativeLines=\"$(echo \"$nativeLines\" | grep 'Apache Tomcat Native')\"     \u0026\u0026 nativeLines=\"$(echo \"$nativeLines\" | sort -u)\"     \u0026\u0026 if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' \u003e\u00262; then         echo \u003e\u00262 \"$nativeLines\";         exit 1;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "catalina.sh",
            "run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}