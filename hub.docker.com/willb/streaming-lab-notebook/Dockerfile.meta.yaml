MetaArgs: null
Stages:
- BaseName: radanalyticsio/jupyter-notebook-py3.5
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - mkdir /data
    Name: run
    PrependShell: true
  - Env:
    - Key: NB_USER
      Value: nbuser
    Name: env
  - Env:
    - Key: NB_UID
      Value: "1011"
    Name: env
  - Name: expose
    Ports:
    - "8888"
  - Name: user
    User: $NB_UID
  - Name: user
    User: root
  - CmdLine:
    - chown -R $NB_USER:root /home/$NB_USER /data     && find /home/$NB_USER -type
      d -exec chmod g+rwx,o+rx {} \;     && find /home/$NB_USER -type f -exec chmod
      g+rw {} \;     && find /data -type d -exec chmod g+rwx,o+rx {} \;     && find
      /data -type f -exec chmod g+rw {} \;     && /opt/conda/bin/conda install --quiet
      --yes -c conda-forge spacy     && /opt/conda/bin/conda install --quiet --yes
      terminado     && /opt/conda/bin/pip install vaderSentiment     && /opt/conda/bin/python
      -m spacy download en     && ( /opt/conda/bin/conda clean -qtipsy || echo "conda
      clean FAILED" )     && chmod -f g+rw /notebooks $(find /notebooks)
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - '*.txt'
    - '*.txt.gz'
    - /notebooks/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - '*.ipynb'
    - /notebooks/
  - CmdLine:
    - chmod -f g+rw /notebooks $(find /notebooks)
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - Env:
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - Labels:
    - Key: io.k8s.description
      Value: '"PySpark Jupyter Notebook."'
    - Key: io.k8s.display-name
      Value: '"PySpark Jupyter Notebook."'
    - Key: io.openshift.expose-services
      Value: '"8888:http"'
    Name: label
  - CmdLine:
    - /entrypoint
    - /usr/local/bin/start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: radanalyticsio/jupyter-notebook-py3.5
  Name: ""
  Platform: ""
  SourceCode: FROM radanalyticsio/jupyter-notebook-py3.5
