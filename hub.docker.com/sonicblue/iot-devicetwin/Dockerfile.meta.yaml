MetaArgs: null
Stages:
- As: builder1
  BaseName: golang:1.12
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ./src/github.com/CanonicalLtd/iot-devicetwin
  - Name: workdir
    Path: /go/src/github.com/CanonicalLtd/iot-devicetwin
  - CmdLine:
    - ./get-deps.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - CGO_ENABLED=1 GOOS=linux go build -a -o /go/bin/devicetwin -ldflags='-extldflags
      "-static"' cmd/devicetwin/main.go
    Name: run
    PrependShell: true
  From:
    Image: golang:1.12
  Name: builder1
  Platform: ""
  SourceCode: FROM golang:1.12 as builder1
- BaseName: ubuntu:18.04
  Commands:
  - Name: workdir
    Path: /srv
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder1
    Name: copy
    SourcesAndDest:
    - /go/bin/devicetwin
    - /srv/devicetwin
  - Key: DRIVER
    Name: arg
    Value: '"postgres"'
  - Key: DATASOURCE
    Name: arg
    Value: '"dbname=devicetwin sslmode=disable"'
  - Key: PORT
    Name: arg
    Value: '"8040"'
  - Key: MQTTURL
    Name: arg
    Value: '"localhost"'
  - Key: MQTTPORT
    Name: arg
    Value: '"8883"'
  - Key: CERTSDIR
    Name: arg
    Value: '"/srv/certs"'
  - Key: CONFIGDIR
    Name: arg
    Value: '"/srv/config"'
  - Env:
    - Key: DRIVER
      Value: '"${DRIVER}"'
    Name: env
  - Env:
    - Key: DATASOURCE
      Value: '"${DATASOURCE}"'
    Name: env
  - Env:
    - Key: PORT
      Value: '"${PORT}"'
    Name: env
  - Env:
    - Key: MQTTURL
      Value: '"${MQTTURL}"'
    Name: env
  - Env:
    - Key: MQTTPORT
      Value: '"${MQTTPORT}"'
    Name: env
  - Env:
    - Key: CERTSDIR
      Value: '"${CERTSDIR}"'
    Name: env
  - Env:
    - Key: CONFIGDIR
      Value: '"${CONFIGDIR}"'
    Name: env
  - Name: expose
    Ports:
    - "8040"
  - CmdLine:
    - /srv/devicetwin -port $PORT -driver $DRIVER -datasource "${DATASOURCE}" -mqtturl
      $MQTTURL -mqttport $MQTTPORT -certsdir $CERTSDIR -configdir $CONFIGDIR
    Name: entrypoint
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
