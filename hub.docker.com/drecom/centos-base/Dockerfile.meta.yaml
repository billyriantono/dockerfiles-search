MetaArgs: null
Stages:
- BaseName: centos:latest
  Commands:
  - Maintainer: Drecom Technical Development Department "pr_itn@drecom.co.jp"
    Name: maintainer
  - CmdLine:
    - yum install -y     epel-release     openssl-devel     readline-devel    zlib-devel     wget     curl     git     dtach     vim     hash-slinger     bzip2     tar     ImageMagick     ImageMagick-devel     libffi-devel     mysql     mysql-devel     libxslt-devel     redis     python
      &&  yum groupinstall "Development Tools" -y &&  yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://rpm.nodesource.com/setup_6.x | bash -     &&
      yum -y install nodejs     && npm -g up
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o- -L https://yarnpkg.com/install.sh | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://bootstrap.pypa.io/get-pip.py &&  python get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install s3cmd
    Name: run
    PrependShell: true
  - Env:
    - Key: PHANTOMJS_VERSION
      Value: 2.1.1
    Name: env
  - CmdLine:
    - wget -U "wget" --wait=5 https://github.com/Medium/phantomjs/releases/download/v${PHANTOMJS_VERSION}/phantomjs-${PHANTOMJS_VERSION}-linux-x86_64.tar.bz2
      &&  tar xf phantomjs-${PHANTOMJS_VERSION}-linux-x86_64.tar.bz2 &&  mv     phantomjs-${PHANTOMJS_VERSION}-linux-x86_64/bin/phantomjs
      /usr/bin/phantomjs &&  rm -rf phantomjs-${PHANTOMJS_VERSION}-linux-x86_64 &&  rm     phantomjs-${PHANTOMJS_VERSION}-linux-x86_64.tar.bz2
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.6.0
    Name: env
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      &&  tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      &&  rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: ja_JP.UTF-8
    Name: env
  - CmdLine:
    - localedef -f UTF-8 -i ja_JP ja_JP.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - \cp -p /usr/share/zoneinfo/Japan /etc/localtime &&  echo 'ZONE="Asia/Tokyo"'
      > /etc/sysconfig/clock
    Name: run
    PrependShell: true
  From:
    Image: centos:latest
  Name: ""
  Platform: ""
  SourceCode: FROM     centos:latest
