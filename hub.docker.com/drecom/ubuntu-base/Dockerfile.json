{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM      ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Maintainer": "Drecom Technical Development Department \u003cpr_itn@drecom.co.jp\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026  apt-get upgrade -y --force-yes \u0026\u0026  apt-get install -y --force-yes     libssl-dev     libreadline-dev     zlib1g-dev     language-pack-ja     wget     curl     git     build-essential     vim     dtach     imagemagick     libmagick++-dev     libqtwebkit-dev     libffi-dev     mysql-client     libmysqlclient-dev     libxslt1-dev     redis-tools     xvfb     python     tzdata \u0026\u0026  apt-get clean \u0026\u0026  rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --location https://deb.nodesource.com/setup_6.x | bash -     \u0026\u0026 apt-get install -y nodejs     \u0026\u0026 npm -g up"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o- -L https://yarnpkg.com/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://bootstrap.pypa.io/get-pip.py \u0026\u0026  python get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install s3cmd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHANTOMJS_VERSION",
              "Value": "2.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -U \"wget\" --wait=5 https://github.com/Medium/phantomjs/releases/download/v${PHANTOMJS_VERSION}/phantomjs-${PHANTOMJS_VERSION}-linux-x86_64.tar.bz2 \u0026\u0026  tar xf phantomjs-${PHANTOMJS_VERSION}-linux-x86_64.tar.bz2 \u0026\u0026  mv     phantomjs-${PHANTOMJS_VERSION}-linux-x86_64/bin/phantomjs /usr/bin/phantomjs \u0026\u0026  rm -rf phantomjs-${PHANTOMJS_VERSION}-linux-x86_64 \u0026\u0026  rm     phantomjs-${PHANTOMJS_VERSION}-linux-x86_64.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "v0.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \u0026\u0026  tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \u0026\u0026  rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "ja_JP.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "update-locale LANG=ja_JP.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Asia/Tokyo\" \u003e /etc/timezone \u0026\u0026  dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}