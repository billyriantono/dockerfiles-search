{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "hivesolutions/alpine_dev:latest",
      "SourceCode": "FROM hivesolutions/alpine_dev:latest",
      "Platform": "",
      "From": {
        "Image": "hivesolutions/alpine_dev:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Hive Solutions \u003cdevelopment@hive.pt\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "\"8\""
            },
            {
              "Key": "JAVA_UPDATE",
              "Value": "\"202\""
            },
            {
              "Key": "JAVA_BUILD",
              "Value": "\"08\""
            },
            {
              "Key": "JAVA_PATH",
              "Value": "\"1961070e4c9b4e26a04e7f5a083f551e\""
            },
            {
              "Key": "JAVA_HOME",
              "Value": "\"/usr/lib/jvm/default-jvm\""
            },
            {
              "Key": "GLIBC_REPO",
              "Value": "\"https://github.com/sgerrand/alpine-pkg-glibc\""
            },
            {
              "Key": "GLIBC_VERSION",
              "Value": "\"2.29-r0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk upgrade --update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual=build-jre wget unzip \u0026\u0026    cd \"/tmp\" \u0026\u0026    apk add libstdc++ ca-certificates java-cacerts bash \u0026\u0026    wget --no-verbose \"${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk\" \u0026\u0026    wget --no-verbose \"${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk\" \u0026\u0026    wget --no-verbose \"${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/glibc-i18n-${GLIBC_VERSION}.apk\" \u0026\u0026    apk add --allow-untrusted /tmp/*.apk \u0026\u0026    (/usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 || true) \u0026\u0026    echo \"export LANG=en_US.UTF-8\" \u003e /etc/profile.d/locale.sh \u0026\u0026    /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \u0026\u0026    wget --no-verbose --header \"Cookie: oraclelicense=accept-securebackup-cookie;\"        \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \u0026\u0026    tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" \u0026\u0026    mkdir -p \"/usr/lib/jvm\" \u0026\u0026    mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}\" \u0026\u0026    ln -s \"java-${JAVA_VERSION}\" \"$JAVA_HOME\" \u0026\u0026    ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" \u0026\u0026    ln -sf \"/etc/ssl/certs/java/cacerts\" \"$JAVA_HOME/jre/lib/security/cacerts\" \u0026\u0026    apk del build-jre \u0026\u0026    rm -r \"/tmp/\"*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_HOME",
              "Value": "\"/opt/android-sdk-linux\""
            },
            {
              "Key": "ANDROID_SDK_ROOT",
              "Value": "\"/opt/android-sdk-linux\""
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "\"/opt/android-sdk-linux\""
            },
            {
              "Key": "ANDROID_SDK",
              "Value": "\"/opt/android-sdk-linux\""
            },
            {
              "Key": "ANDROID_SDK_TOOLS_VERSION",
              "Value": "\"4333796\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "[ -d $ANDROID_SDK_HOME ] || mkdir -p \"$ANDROID_SDK_HOME\" \u0026\u0026    [ -d $ANDROID_SDK_ROOT ] || mkdir -p \"$ANDROID_SDK_ROOT\" \u0026\u0026    [ -d $ANDROID_HOME ]  || mkdir -p \"$ANDROID_HOME\" \u0026\u0026    [ -d $ANDROID_SDK ] || mkdir -p \"$ANDROID_SDK\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual=build-android wget unzip \u0026\u0026    cd \"/tmp\" \u0026\u0026    wget --no-verbose \"https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\" \u0026\u0026    unzip -q \"sdk-tools-linux-${ANDROID_SDK_TOOLS_VERSION}.zip\" -d \"$ANDROID_SDK_HOME\" \u0026\u0026    mkdir -p \"$ANDROID_SDK_HOME/licenses\" \u0026\u0026    echo \"24333f8a63b6825ea9c5514f83c2829b004d1fee\" \u003e \"$ANDROID_SDK_HOME/licenses/android-sdk-license\" \u0026\u0026    echo \"d56f5187479451eabf01fb78af6dfcb131a6481e\" \u003e\u003e \"$ANDROID_SDK_HOME/licenses/android-sdk-license\" \u0026\u0026    mkdir -p \"$ANDROID_SDK_HOME/.android\" \u0026\u0026 touch \"$ANDROID_SDK_HOME/.android/repositories.cfg\" \u0026\u0026    $ANDROID_SDK_HOME/tools/bin/sdkmanager --update \u0026\u0026    ANDROID_BUILD_TOOLS_LATEST=$($ANDROID_SDK_HOME/tools/bin/sdkmanager --list | grep \"build-tools\" |        cut -d \"|\" -f 1 | tr -d \" \" | sort -t \";\" -r -g -k2 | head -n1) \u0026\u0026    ANDROID_LATEST=$($ANDROID_SDK_HOME/tools/bin/sdkmanager --list | grep \"platforms;android-\" |        cut -d \"|\" -f 1 | tr -d \" \" | sort -t \"-\" -r -g -k2 | head -n1) \u0026\u0026    $ANDROID_SDK_HOME/tools/bin/sdkmanager \"docs\" \"platform-tools\" \"${ANDROID_BUILD_TOOLS_LATEST}\" \"${ANDROID_LATEST}\" \u0026\u0026    apk del build-android \u0026\u0026    rm -r \"/tmp/\"*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "\"/usr/lib/gradle\""
            },
            {
              "Key": "GRADLE_VERSION",
              "Value": "\"5.2.1\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual=build-gradle wget unzip \u0026\u0026    cd \"/tmp\" \u0026\u0026    wget --no-verbose \"https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\" \u0026\u0026    unzip -q \"gradle-${GRADLE_VERSION}-bin.zip\" \u0026\u0026    mv \"gradle-${GRADLE_VERSION}\" \"${GRADLE_HOME}/\" \u0026\u0026    ln -s \"${GRADLE_HOME}/bin/gradle\" \"/usr/bin/gradle\" \u0026\u0026    apk del build-gradle \u0026\u0026    rm -r \"/tmp/\"*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}