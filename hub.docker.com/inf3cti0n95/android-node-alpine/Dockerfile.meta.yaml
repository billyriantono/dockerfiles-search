MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Viraj Trivedi <inf3cti0n95@gmail.com>"'
    Name: label
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: WATCHMAN_VERSION
      Value: '"4.9.0-r2"'
    Name: env
  - Env:
    - Key: NODEJS_VERSION
      Value: '"10.15.3-r0"'
    Name: env
  - Env:
    - Key: YARN_VERSION
      Value: '"1.15.2-r0"'
    Name: env
  - Env:
    - Key: OPENJDK_VERSION
      Value: '"8.201.08-r0"'
    Name: env
  - Env:
    - Key: SDK_TOOLS
      Value: '"4333796"'
    Name: env
  - Env:
    - Key: ANDROID_HOME
      Value: '"/opt/sdk"'
    Name: env
  - Env:
    - Key: GLIBC_VERSION
      Value: '"2.28-r0"'
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$JAVA_HOME/jre/bin:$JAVA_HOME/bin
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools
    Name: env
  - CmdLine:
    - apk add -X http://dl-cdn.alpinelinux.org/alpine/edge/testing --no-cache bash
      git unzip wget nss     watchman="$WATCHMAN_VERSION"     nodejs="$NODEJS_VERSION"     openjdk8="$OPENJDK_VERSION"     yarn="$YARN_VERSION"
      &&     wget -q https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -O /etc/apk/keys/sgerrand.rsa.pub
      &&     wget -q https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk
      -O /tmp/glibc.apk &&     wget -q https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk
      -O /tmp/glibc-bin.apk &&     apk add --no-cache /tmp/glibc.apk /tmp/glibc-bin.apk
      &&     apk add --virtual .rundeps $runDeps &&     rm -rf /tmp/* &&     rm -rf
      /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q http://dl.google.com/android/repository/sdk-tools-linux-${SDK_TOOLS}.zip
      -O /tmp/tools.zip &&     mkdir -p ${ANDROID_HOME} &&     unzip -qq /tmp/tools.zip
      -d ${ANDROID_HOME} &&     rm -v /tmp/tools.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ~/.android/ && touch ~/.android/repositories.cfg &&     yes | ${ANDROID_HOME}/tools/bin/sdkmanager
      "--licenses" &&     ${ANDROID_HOME}/tools/bin/sdkmanager "--update" &&     ${ANDROID_HOME}/tools/bin/sdkmanager     "platform-tools"     "extras;android;m2repository"     "extras;google;m2repository"     "extras;google;instantapps"     "extras;google;google_play_services"     "extras;google;market_apk_expansion"     "extras;google;market_licensing"     "extras;google;simulators"     "extras;google;webdriver"     "extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2"     "extras;m2repository;com;android;support;constraint;constraint-layout;1.0.1"
    Name: run
    PrependShell: true
  - Env:
    - Key: BUILD_TOOLS
      Value: '"28.0.3"'
    Name: env
  - Env:
    - Key: TARGET_SDK
      Value: '"28"'
    Name: env
  - Env:
    - Key: GOOGLE_APIS
      Value: '"24"'
    Name: env
  - CmdLine:
    - ${ANDROID_HOME}/tools/bin/sdkmanager "build-tools;${BUILD_TOOLS}" "platforms;android-${TARGET_SDK}"
      "add-ons;addon-google_apis-google-${GOOGLE_APIS}"
    Name: run
    PrependShell: true
  - CmdLine:
    - yarn global add envinfo
    Name: run
    PrependShell: true
  - CmdLine:
    - envinfo
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
