{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-cudnn5-devel",
      "SourceCode": "FROM nvidia/cuda:8.0-cudnn5-devel",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-cudnn5-devel"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $CONDA_DIR \u0026\u0026     echo export PATH=$CONDA_DIR/bin:'$PATH' \u003e /etc/profile.d/conda.sh \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y wget git libhdf5-dev g++ graphviz \u0026\u0026     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-x86_64.sh \u0026\u0026     echo \"c59b3dd3cad550ac7596e0d599b91e75d88826db132e4146030ef471bb434e9a *Miniconda3-4.2.12-Linux-x86_64.sh\" | sha256sum -c - \u0026\u0026     /bin/bash /Miniconda3-4.2.12-Linux-x86_64.sh -f -b -p $CONDA_DIR \u0026\u0026     rm Miniconda3-4.2.12-Linux-x86_64.sh \u0026\u0026 apt-get -y install unzip build-essential cmake libatlas-base-dev gfortran     libjasper-dev libgtk2.0-dev libavcodec-dev libavformat-dev     libswscale-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libv4l-dev ffmpeg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "deeplearning"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \u0026\u0026     mkdir -p $CONDA_DIR \u0026\u0026     chown deeplearning $CONDA_DIR -R \u0026\u0026     mkdir -p /src \u0026\u0026     chown deeplearning /src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "deeplearning"
        },
        {
          "Key": "python_version",
          "Name": "arg",
          "Value": "3.5"
        },
        {
          "CmdLine": [
            "conda install -y python=3.5 \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install tensorflow-gpu \u0026\u0026     conda install Pillow scikit-learn notebook pandas matplotlib mkl nose pyyaml six h5py     theano pygpu scikit-image opencv tqdm xlrd bcolz \u0026\u0026     conda clean -yt \u0026\u0026     pip install git+git://github.com/fchollet/keras.git \u0026\u0026     pip install mxnet-cu80"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "theanorc",
            "/home/deeplearning/.theanorc"
          ]
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "'/src/:$PYTHONPATH'"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "jupyter notebook --port=8888 --ip=0.0.0.0"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}