{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3",
      "SourceCode": "FROM python:3",
      "Platform": "",
      "From": {
        "Image": "python:3"
      },
      "Commands": [
        {
          "CmdLine": [
            "pip install --upgrade pip \u0026\u0026     pip install --no-cache-dir nibabel pydicom matplotlib pillow \u0026\u0026     pip install --no-cache-dir med2image"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cat",
            "/etc/os-release"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -y update   \u0026\u0026 apt-get -y install apt-transport-https wget   \u0026\u0026 curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -   \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list   \u0026\u0026 apt-get -y update   \u0026\u0026 curl -sL https://deb.nodesource.com/setup_6.x | bash -   \u0026\u0026 apt-get -y install sendmail krb5-config krb5-user python-ldap libsasl2-dev python-dev libldap2-dev libssl-dev xmlsec1 libfontconfig nodejs yarn vagrant openssh-client jq bsdmainutils unzip vim   \u0026\u0026 apt-get -y install postgresql   \u0026\u0026 npm install -g grunt-cli   \u0026\u0026 sed -i 's/peer$/trust/g; s/md5$/trust/g' $(find /etc/postgresql -name pg_hba.conf)   \u0026\u0026 service postgresql restart   \u0026\u0026 curl -fsSL get.docker.com | sh   \u0026\u0026 curl -L https://github.com/docker/compose/releases/download/1.20.0/docker-compose-`uname -s`-`uname -m` \u003e /usr/local/bin/docker-compose   \u0026\u0026 chmod +x /usr/local/bin/docker-compose   \u0026\u0026 wget 'https://storage.googleapis.com/shellcheck/shellcheck-latest.linux.x86_64.tar.xz'   \u0026\u0026 xz -d ./shellcheck-latest.linux.x86_64.tar.xz   \u0026\u0026 tar -xvf ./shellcheck-latest.linux.x86_64.tar   \u0026\u0026 cp ./shellcheck-latest/shellcheck /usr/bin/   \u0026\u0026 chmod 755 /usr/bin/shellcheck   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}