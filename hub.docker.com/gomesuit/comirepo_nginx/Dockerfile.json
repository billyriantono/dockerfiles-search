{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "CmdLine": [
            "cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RAILS_HOST",
              "Value": "rails"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RAILS_PORT",
              "Value": "3000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y curl wget sudo \u0026\u0026     apt-get install -y build-essential zlib1g-dev libpcre3-dev unzip uuid-dev \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -r nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.13.8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y libssl-dev libperl-dev \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -f -L -sS https://ngxpagespeed.com/install \u003e /tmp/install \u0026\u0026     chmod +x /tmp/install \u0026\u0026     arg=\"$arg --prefix=/etc/nginx\" \u0026\u0026     arg=\"$arg --sbin-path=/usr/sbin/nginx\" \u0026\u0026     arg=\"$arg --conf-path=/etc/nginx/nginx.conf\" \u0026\u0026     arg=\"$arg --http-client-body-temp-path=/var/lib/nginx/tmp/client_body\" \u0026\u0026     arg=\"$arg --http-proxy-temp-path=/var/lib/nginx/tmp/proxy\" \u0026\u0026     arg=\"$arg --pid-path=/var/run/nginx.pid\" \u0026\u0026     arg=\"$arg --lock-path=/var/run/nginx.lock\" \u0026\u0026     arg=\"$arg --error-log-path=/var/log/nginx/error.log\" \u0026\u0026     arg=\"$arg --http-log-path=/var/log/nginx/access.log\" \u0026\u0026     arg=\"$arg --with-http_gzip_static_module\" \u0026\u0026     arg=\"$arg --with-http_stub_status_module\" \u0026\u0026     arg=\"$arg --with-http_ssl_module\" \u0026\u0026     arg=\"$arg --with-pcre\" \u0026\u0026     arg=\"$arg --with-file-aio\" \u0026\u0026     arg=\"$arg --with-http_realip_module\" \u0026\u0026     arg=\"$arg --with-http_perl_module\" \u0026\u0026     arg=\"$arg --without-http_scgi_module\" \u0026\u0026     arg=\"$arg --without-http_uwsgi_module\" \u0026\u0026     arg=\"$arg --without-http_fastcgi_module\" \u0026\u0026     mkdir -p /var/lib/nginx/tmp/client_body \u0026\u0026     mkdir -p /var/lib/nginx/tmp/proxy \u0026\u0026     bash /tmp/install -y --nginx-version ${NGINX_VERSION}     --additional-nginx-configure-arguments \"${arg}\" \u0026\u0026     rm /tmp/install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./command.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "command.sh",
            "./command.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/nginx/cache /var/ngx_pagespeed_cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stderr /var/log/nginx/error.log \u0026\u0026     ln -sf /dev/stdout /var/log/nginx/access.log"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}