MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - CmdLine:
    - dpkg --add-architecture i386 && apt-get update && apt-get install -yq wine wget
      innoextract wine32 && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://files.jrsoftware.org/is/5/isetup-5.5.5-unicode.exe && innoextract
      -d /inno /isetup-5.5.5-unicode.exe
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_VERSION_MAJOR
      Value: "8"
    Name: env
  - Env:
    - Key: JAVA_VERSION_MINOR
      Value: "60"
    Name: env
  - Env:
    - Key: JAVA_VERSION_BUILD
      Value: "27"
    Name: env
  - Env:
    - Key: MAVEN_VERSION
      Value: 3.3.3
    Name: env
  - CmdLine:
    - mkdir /opt/apache-maven && wget -qO- --local-encoding=UTF-8 http://repo1.maven.org/maven2/org/apache/maven/apache-maven/${MAVEN_VERSION}/apache-maven-${MAVEN_VERSION}-bin.tar.gz     |
      tar -zx --strip-components=1 -C /opt/apache-maven
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/jdk-windows
    Name: run
    PrependShell: true
  - CmdLine:
    - 'wget --local-encoding=UTF-8 --no-check-certificate --no-cookies --header "Cookie:
      oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/jdk-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-windows-x64.exe'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://http.debian.net/debian jessie-backports main contrib non-free"
      >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y p7zip-full unzip openjdk-8-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - 7z x /jdk-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-windows-x64.exe && unzip
      /tools.zip -d /opt/jdk-windows/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/jdk-windows
  - CmdLine:
    - find /opt/jdk-windows/ -type f -name "*.pack" | while read eachFile; do   echo
      "Unpacking $eachFile ..."; /usr/bin/unpack200 $eachFile ${eachFile%.pack}.jar;
      rm $eachFile; done
    Name: run
    PrependShell: true
  - CmdLine:
    - find /opt/jdk-windows -type f \( -name "*.exe" -o -name "*.dll" \) -exec chmod
      u+rwx {} \;
    Name: run
    PrependShell: true
  - CmdLine:
    - 'mkdir /opt/jre-windows && wget -O- --local-encoding=UTF-8 --no-check-certificate
      --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/jre-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-windows-x64.tar.gz                                   |
      tar -zx --strip-components=1 -C /opt/jre-windows'
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /opt/jdk-windows/bin/javac.exe /opt/jre-windows/bin/javac.exe
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /opt/jdk-windows/lib/tools.jar /opt/jre-windows/lib/tools.jar
    Name: run
    PrependShell: true
  - Env:
    - Key: GIT_VERSION
      Value: 2.5.2
    Name: env
  - CmdLine:
    - mkdir /opt/git && wget -O /opt/git/git-setup.exe --local-encoding=UTF-8 --no-check-certificate
      https://github.com/git-for-windows/git/releases/download/v$GIT_VERSION.windows.2/Git-$GIT_VERSION.2-64-bit.exe
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_VERSION
      Value: 1.8.2
    Name: env
  - CmdLine:
    - mkdir /opt/docker &&  wget --local-encoding=UTF-8 --no-check-certificate -O
      /opt/docker/docker-setup.exe https://github.com/docker/toolbox/releases/download/v1.8.2/DockerToolbox-1.8.2.exe
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /user
  - CmdLine:
    - wine
    - /inno/app/ISCC.exe
    - /Otarget
    Name: entrypoint
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
