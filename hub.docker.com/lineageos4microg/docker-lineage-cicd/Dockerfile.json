{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Maintainer": "Nicola Corna \u003cnicola@corna.info\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "MIRROR_DIR",
              "Value": "/srv/mirror"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SRC_DIR",
              "Value": "/srv/src"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TMP_DIR",
              "Value": "/srv/tmp"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CCACHE_DIR",
              "Value": "/srv/ccache"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ZIP_DIR",
              "Value": "/srv/zips"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LMANIFEST_DIR",
              "Value": "/srv/local_manifests"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DELTA_DIR",
              "Value": "/srv/delta"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KEYS_DIR",
              "Value": "/srv/keys"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGS_DIR",
              "Value": "/srv/logs"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USERSCRIPTS_DIR",
              "Value": "/srv/userscripts"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USE_CCACHE",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CCACHE_SIZE",
              "Value": "50G"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BRANCH_NAME",
              "Value": "'lineage-16.0'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEVICE_LIST",
              "Value": "''"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RELEASE_TYPE",
              "Value": "'UNOFFICIAL'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OTA_URL",
              "Value": "''"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER_NAME",
              "Value": "'LineageOS Buildbot'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER_MAIL",
              "Value": "'lineageos-buildbot@docker.host'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INCLUDE_PROPRIETARY",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD_OVERLAY",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOCAL_MIRROR",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLEAN_OUTDIR",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CRONTAB_TIME",
              "Value": "'now'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLEAN_AFTER_BUILD",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WITH_SU",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_JACK_VM_ARGS",
              "Value": "\"-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CUSTOM_PACKAGES",
              "Value": "''"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SIGN_BUILDS",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KEYS_SUBJECT",
              "Value": "'/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=Android/emailAddress=android@android.com'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ZIP_SUBDIR",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGS_SUBDIR",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SIGNATURE_SPOOFING",
              "Value": "\"no\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD_DELTA",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DELETE_OLD_ZIPS",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DELETE_OLD_DELTAS",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DELETE_OLD_LOGS",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENDELTA_BUILDS_JSON",
              "Value": "''"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "$MIRROR_DIR"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$SRC_DIR"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$TMP_DIR"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$CCACHE_DIR"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$ZIP_DIR"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$LMANIFEST_DIR"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$DELTA_DIR"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$KEYS_DIR"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$LOGS_DIR"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$USERSCRIPTS_DIR"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/",
            "/root/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p $MIRROR_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $SRC_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $TMP_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $CCACHE_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $ZIP_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $LMANIFEST_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $DELTA_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $KEYS_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $LOGS_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $USERSCRIPTS_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qq update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y bc bison bsdmainutils build-essential ccache cgpt cron       curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick kmod       lib32ncurses5-dev lib32readline-dev lib32z1-dev libesd0-dev liblz4-tool       libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2       libxml2-utils lsof lzop maven openjdk-8-jdk pngcrush procps python rsync       schedtool squashfs-tools wget xdelta3 xsltproc yasm zip zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://storage.googleapis.com/git-repo-downloads/repo \u003e /usr/local/bin/repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod a+x /usr/local/bin/repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/ \u0026\u0026         mkdir delta \u0026\u0026         git clone --depth=1 https://github.com/omnirom/android_packages_apps_OpenDelta.git OpenDelta \u0026\u0026         gcc -o delta/zipadjust OpenDelta/jni/zipadjust.c OpenDelta/jni/zipadjust_run.c -lz \u0026\u0026         cp OpenDelta/server/minsignapk.jar OpenDelta/server/opendelta.sh delta/ \u0026\u0026         chmod +x delta/opendelta.sh \u0026\u0026         rm -rf OpenDelta/ \u0026\u0026         sed -i -e 's|^\\s*HOME=.*|HOME=/root|;                    s|^\\s*BIN_XDELTA=.*|BIN_XDELTA=xdelta3|;                    s|^\\s*FILE_MATCH=.*|FILE_MATCH=lineage-\\*.zip|;                    s|^\\s*PATH_CURRENT=.*|PATH_CURRENT=$SRC_DIR/out/target/product/$DEVICE|;                    s|^\\s*PATH_LAST=.*|PATH_LAST=$SRC_DIR/delta_last/$DEVICE|;                    s|^\\s*KEY_X509=.*|KEY_X509=$KEYS_DIR/releasekey.x509.pem|;                    s|^\\s*KEY_PK8=.*|KEY_PK8=$KEYS_DIR/releasekey.pk8|;                    s|publish|$DELTA_DIR|g' /root/delta/opendelta.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$SRC_DIR"
        },
        {
          "CmdLine": [
            "ln -sf /proc/1/fd/1 /var/log/docker.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/root/init.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}