MetaArgs: null
Stages:
- As: composer
  BaseName: composer:1
  Commands: null
  From:
    Image: composer:1
  Name: composer
  Platform: ""
  SourceCode: FROM composer:1 AS composer
- BaseName: alpine:3.5
  Commands:
  - CmdLine:
    - apk --no-cache add          apache2 apache2-ssl          php7-apache2          php7-mysqli
      php7-soap php7-gd php7-zip php7-pdo php7-mbstring php7-json php7-curl php7-ctype
      php7-zlib php7-session php7-dom php7-openssl php7-iconv php7-opcache php7-xdebug
      php7-phar php7-intl php7-apcu          openssl imagemagick curl
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "zend_extension=$(find /usr/lib/php7/modules/ -name xdebug.so)" > /usr/local/xdebug-extension.ini
    Name: run
    PrependShell: true
  - Env:
    - Key: XDEBUG_TARGET
      Value: /etc/php7/conf.d/xdebug-extension.ini
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - additional/alpine-apache.conf
    - /etc/apache2/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - additional/php-*
    - /etc/php7/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - additional/opnessl.cnf
    - /etc/ssl/openssl.cnf
  - Chown: ""
    From: composer
    Name: copy
    SourcesAndDest:
    - /usr/bin/composer
    - /usr/bin/composer
  - Env:
    - Key: PATH
      Value: '"/tmp/vendor/bin:$PATH"'
    Name: env
  - CmdLine:
    - version=$(php7 -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;")         && curl
      -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/alpine/amd64/$version         &&
      mkdir -p /tmp/blackfire         && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire         &&
      mv /tmp/blackfire/blackfire-*.so $(php7 -r "echo ini_get('extension_dir');")/blackfire.so         &&
      printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n"
      > /etc/php7/conf.d/blackfire.ini         && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /run/apache2 && mkdir -p /var/www/html
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ln -s /usr/bin/php7 /usr/bin/php
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - additional/scripts/alpine/*
    - /usr/local/bin/
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
