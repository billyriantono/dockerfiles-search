MetaArgs: null
Stages:
- BaseName: node:10-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"O: University of Halle (Saale) Germany; OU: ITZ, department application
        systems"'
    - Key: license
      Value: '"Docker composition: MIT; Components: Please check"'
    Name: label
  - Env:
    - Key: BATIK_VERSION
      Value: '"1.11"'
    - Key: MATHJAX_RUN_USER
      Value: '"mathjax"'
    - Key: MATHJAX_RUN_GROUP
      Value: '"mathjax"'
    - Key: MATHJAX_RUN_UID
      Value: '"800"'
    - Key: MATHJAX_RUN_GID
      Value: '"800"'
    - Key: MATHJAX_HOME
      Value: '"/opt/mathjax"'
    - Key: MATHJAX_PORT
      Value: '"8003"'
    - Key: MATHJAX_VERSION
      Value: '"0.5.2"'
    - Key: MATHJAX_SERVER_COMMIT
      Value: '"9c55118d90ae798c26949adae3e435e1670436bb"'
    - Key: GOSU_VERSION
      Value: '"1.11"'
    Name: env
  - CmdLine:
    - apk add --no-cache       gnupg       bash openssl curl tini       openjdk8-jre-base     &&
      set -ex     && for key in       B42F6819007F00F88E364FD4036A9C25BF357DD4       ;
      do         gpg --batch --keyserver pgp.mit.edu --recv-keys "$key" ||         gpg
      --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ||         gpg
      --batch --keyserver keyserver.ubuntu.com --recv-keys "$key" ||         gpg --batch
      --keyserver keyserver.pgp.com --recv-keys "$key" ||         gpg --batch --keyserver
      ha.pool.sks-keyservers.net --recv-keys "$key" ;       done     && set +x     &&
      curl -o /usr/local/bin/gosu -fSL "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64"     &&
      curl -o /usr/local/bin/gosu.asc -fSL "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc"     &&
      gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     && rm /usr/local/bin/gosu.asc     &&
      chmod +x /usr/local/bin/gosu     && mkdir -p "${MATHJAX_HOME}" && cd "${MATHJAX_HOME}"     &&
      npm install "https://github.com/mathjax/MathJax-node/archive/${MATHJAX_VERSION}.tar.gz"     &&
      npm install "https://github.com/tiarno/mathjax-server/tarball/${MATHJAX_SERVER_COMMIT}"     &&
      cd "${MATHJAX_HOME}/node_modules" && ln -s mathjax-node MathJax-node     &&
      cd "${MATHJAX_HOME}/node_modules/mathjax-node/batik"     && curl -o batik.tar.gz
      -L "http://www.apache.org/dyn/closer.cgi?filename=/xmlgraphics/batik/binaries/batik-bin-${BATIK_VERSION}.tar.gz&action=download"     &&
      curl -o batik.tar.gz.asc -L "https://www.apache.org/dist/xmlgraphics/batik/binaries/batik-bin-${BATIK_VERSION}.tar.gz.asc"     &&
      curl -o /tmp/batik-keys -L "https://www.apache.org/dist/xmlgraphics/batik/KEYS"     &&
      gpg --import /tmp/batik-keys && rm /tmp/batik-keys     && gpg --batch --verify
      ./batik.tar.gz.asc ./batik.tar.gz && rm ./batik.tar.gz.asc     && tar xf batik.tar.gz
      && rm batik.tar.gz     && ln -s "batik-${BATIK_VERSION}/batik-rasterizer-${BATIK_VERSION}.jar"
      batik-rasterizer.jar     && ln -s "batik-${BATIK_VERSION}/lib" lib     && addgroup
      -S -g "${MATHJAX_RUN_GID}" "${MATHJAX_RUN_GROUP}"     && adduser -S -D -H -G
      "${MATHJAX_RUN_GROUP}" -h "${MATHJAX_HOME}" -u "${MATHJAX_RUN_UID}" "${MATHJAX_RUN_USER}"     &&
      apk del gnupg
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - assets/*
    - '"/"'
  - CmdLine:
    - mv /index.js "${MATHJAX_HOME}"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"${MATHJAX_HOME}"'
  - Name: expose
    Ports:
    - '"${MATHJAX_PORT}"'
  - Health:
      Interval: 30000000000
      StartPeriod: 30000000000
      Test:
      - CMD-SHELL
      - '"/docker-healthcheck.js"'
      Timeout: 15000000000
    Name: healthcheck
  - CmdLine:
    - tini
    - --
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - app:serve
    Name: cmd
    PrependShell: false
  From:
    Image: node:10-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10-alpine
