MetaArgs: null
Stages:
- BaseName: tomcat:9-jre11
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"O: University of Halle (Saale) Germany; OU: ITZ, department application
        systems"'
    - Key: license
      Value: '"Docker composition: MIT; Components: Please check"'
    Name: label
  - Key: BUILD_NO
    Name: arg
    Value: null
  - Key: BUILD_FOR_MOODLE
    Name: arg
    Value: "true"
  - Env:
    - Key: MAXIMAPOOL
      Value: /opt/maximapool
    - Key: TOMCAT
      Value: ${CATALINA_HOME}
    - Key: STACK_MAXIMA
      Value: /opt/maxima
    - Key: RUN_USER
      Value: tomcat
    - Key: RUN_GROUP
      Value: tomcat
    Name: env
  - Env:
    - Key: MAXIMA_LOCAL_PATH
      Value: ${BUILD_FOR_MOODLE:+moodle-qtype_stack/stack/maxima}
    Name: env
  - Env:
    - Key: MAXIMA_LOCAL_PATH
      Value: ${MAXIMA_LOCAL_PATH:-assStackQuestion/classes/stack/maxima}
    Name: env
  - CmdLine:
    - set -ex   && for key in     B42F6819007F00F88E364FD4036A9C25BF357DD4     6380DC428747F6C393FEACA59A84159D7001A4E5   ;
      do     gpg --batch --keyserver pgp.mit.edu --recv-keys "$key" ||     gpg --batch
      --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ||     gpg --batch
      --keyserver keyserver.ubuntu.com --recv-keys "$key" ||     gpg --batch --keyserver
      keyserver.pgp.com --recv-keys "$key" ||     gpg --batch --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key" ; done
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y       openjdk-${JAVA_VERSION%%[!0-9]*}-jdk       ant       wget       gnuplot       sbcl       gettext-base       ca-certificates       curl     &&
      cd ~     && wget http://downloads.sourceforge.net/project/maxima/Maxima-Linux/5.41.0-Linux/maxima-common_5.41.0-6_all.deb     &&
      wget http://downloads.sourceforge.net/project/maxima/Maxima-Linux/5.41.0-Linux/maxima-sbcl_5.41.0-6_amd64.deb     &&
      echo "4b7615699050abd93b65210814e59eef783466f789157422979c7c242aa4661f  maxima-common_5.41.0-6_all.deb"
      | sha256sum -c     && echo "ebc38cb95833a630469bbad026937e6a4ac87cfb246d9100074a75d03bda1657  maxima-sbcl_5.41.0-6_amd64.deb"
      | sha256sum -c     && dpkg -i ./maxima-sbcl_5.41.0-6_amd64.deb ./maxima-common_5.41.0-6_all.deb     &&
      rm maxima-common_5.41.0-6_all.deb maxima-sbcl_5.41.0-6_amd64.deb     && cd ${CATALINA_HOME}/webapps     &&
      rm -r docs/ examples/ host-manager/ manager/     && curl -o /usr/local/bin/gosu
      -fSL "https://github.com/tianon/gosu/releases/download/1.11/gosu-$(dpkg --print-architecture)"     &&
      curl -o /usr/local/bin/gosu.asc -fSL "https://github.com/tianon/gosu/releases/download/1.11/gosu-$(dpkg
      --print-architecture).asc"     && gpg --batch --verify /usr/local/bin/gosu.asc
      /usr/local/bin/gosu     && rm /usr/local/bin/gosu.asc     && chmod +x /usr/local/bin/gosu     &&
      curl -o /usr/local/bin/tini -fSL "https://github.com/krallin/tini/releases/download/v0.18.0/tini"     &&
      curl -o /usr/local/bin/tini.asc -fSL "https://github.com/krallin/tini/releases/download/v0.18.0/tini.asc"     &&
      gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini     && rm /usr/local/bin/tini.asc     &&
      chmod +x /usr/local/bin/tini     && apt-get purge -y --auto-remove wget     &&
      rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r ${RUN_GROUP} && useradd -g ${RUN_GROUP} -d ${CATALINA_HOME} -s /bin/bash
      ${RUN_USER}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/init-maxima-pool.sh
    - assets/docker-healthcheck.sh
    - assets/stack_util_maximapool
    - assets/optimize.mac
    - assets/servlet.conf.template
    - assets/process.conf.template
    - assets/maximalocal.mac.template
    - ${MAXIMAPOOL}/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/${MAXIMA_LOCAL_PATH}
    - ${STACK_MAXIMA}
  - CmdLine:
    - VER=$(grep stackmaximaversion ${STACK_MAXIMA}/stackmaxima.mac | grep -oP "\d+")     &&
      echo "${VER}" >> ${MAXIMAPOOL}/stack-version     && mv ${MAXIMAPOOL}/init-maxima-pool.sh
      /     && chmod +x /init-maxima-pool.sh     && mkdir -p ${MAXIMAPOOL}/${VER}     &&
      mv ${STACK_MAXIMA} ${MAXIMAPOOL}/${VER}/maxima     && mkdir -p ${MAXIMAPOOL}/${VER}/tmp/plots/     &&
      mkdir -p ${MAXIMAPOOL}/${VER}/tmp/logs/     && cd ${MAXIMAPOOL}/     && echo
      "Configuring Maxima for STACK"        && VER=$VER sh -c 'envsubst < servlet.conf.template
      > servlet.conf        && envsubst < process.conf.template > ${VER}/process.conf        &&
      envsubst < maximalocal.mac.template > ${VER}/maximalocal.mac        && echo
      "Successfully configured Maxima for STACK ${VER}"        && echo "Optimizing
      Maxima (There will be some warnings due to docker container restrictions and
      strictness of sbcl) ..."        && mv ${MAXIMAPOOL}/optimize.mac ${MAXIMAPOOL}/${VER}        &&
      cd ${MAXIMAPOOL}/${VER}        && maxima -b optimize.mac        && echo "Successfully
      optimized Maxima. Building the web application archive (war)."'     && cd ${MAXIMAPOOL}     &&
      ant     && rm MaximaPool.war
    Name: run
    PrependShell: true
  - Health:
      Interval: 10000000000
      StartPeriod: 15000000000
      Test:
      - CMD-SHELL
      - ${MAXIMAPOOL}/docker-healthcheck.sh
      Timeout: 9000000000
    Name: healthcheck
  - CmdLine:
    - tini
    - --
    - /init-maxima-pool.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - catalina.sh
    - run
    Name: cmd
    PrependShell: false
  From:
    Image: tomcat:9-jre11
  Name: ""
  Platform: ""
  SourceCode: FROM tomcat:9-jre11
