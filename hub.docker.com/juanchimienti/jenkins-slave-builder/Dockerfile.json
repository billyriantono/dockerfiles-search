{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "AWS_CLI_VERSION",
              "Value": "1.15.66"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "18"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apk --no-cache update \u0026\u0026     apk --no-cache add python py-pip py-setuptools ca-certificates groff bash                    less docker~${DOCKER_VERSION} git \u0026\u0026     pip --no-cache-dir install awscli==${AWS_CLI_VERSION} \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KUBE_LATEST_VERSION",
              "Value": "\"v1.10.6\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "\"v2.9.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_DIFF_VERSION",
              "Value": "\"v2.9.0+3\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl -O /usr/local/bin/kubectl     \u0026\u0026 chmod +x /usr/local/bin/kubectl     \u0026\u0026 wget -q http://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm \u003e /usr/local/bin/helm     \u0026\u0026 chmod +x /usr/local/bin/helm     \u0026\u0026 helm init --client-only     \u0026\u0026 helm plugin install 'https://github.com/databus23/helm-diff' --version ${HELM_DIFF_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SOPS_VERSION",
              "Value": "\"3.0.5\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/mozilla/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.linux -O /usr/local/bin/sops    \u0026\u0026 chmod +x /usr/local/bin/sops"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CLOUD_SDK_VERSION",
          "Name": "arg",
          "Value": "237.0.0"
        },
        {
          "Env": [
            {
              "Key": "CLOUD_SDK_VERSION",
              "Value": "$CLOUD_SDK_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add         curl         py-crcmod         bash         libc6-compat         openssh-client         gnupg     \u0026\u0026 curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     ln -s /lib /lib64 \u0026\u0026     gcloud config set core/disable_usage_reporting true \u0026\u0026     gcloud config set component_manager/disable_update_check true \u0026\u0026     gcloud config set metrics/environment github_docker_image \u0026\u0026     gcloud --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "EB_VERSION",
              "Value": "\"3.15.2\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install awsebcli==${EB_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}