MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: TRANSMISSION_WEB_HOME
    Name: arg
    Value: /web-control/
  - Env:
    - Key: TRANSMISSION_WEB_HOME
      Value: '"${TRANSMISSION_WEB_HOME}"'
    Name: env
  - Key: PUID
    Name: arg
    Value: "1000"
  - Key: GUID
    Name: arg
    Value: "1000"
  - Env:
    - Key: PUID
      Value: ${PUID}
    Name: env
  - Env:
    - Key: GUID
      Value: ${GUID}
    Name: env
  - Labels:
    - Key: build_version
      Value: '"patched for bakabt.me on ${BUILD_DATE}"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"someone.zip@gmail.com"'
    Name: label
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - other
    - /other
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /start.sh
  - CmdLine:
    - "echo \"+++ install packages +++\" &&  apk add --no-cache  alpine-sdk libnotify-dev
      libevent-dev openssl-dev dbus-glib-dev curl-dev  autoconf automake libtool intltool
      cmake shadow  bsd-compat-headers  tini  moreutils unzip curl tar jq  libcurl
      libevent libintl openssl zlib &&  echo \"+++ build transmission +++\" &&  mkdir
      -p \t/tmp/transmission &&  TRAVERSION=$(curl -s https://api.github.com/repos/transmission/transmission/releases/latest
      | jq -r -j .tag_name) &&  curl -o \t/tmp/transmission.tar.gz -L \t\"https://github.com/transmission/transmission/archive/${TRAVERSION}.tar.gz\"
      &&  tar xf \t/tmp/transmission.tar.gz -C \t/tmp/transmission --strip-components=1
      &&  sed -i \"s/int const sndbuf = isScrape ? 4096 : 1024;/int const sndbuf =
      8192;/g\" /tmp/transmission/libtransmission/web.c &&  sed -i \"s/int const rcvbuf
      = isScrape ? 4096 : 3072;/int const rcvbuf = 8192;/g\" /tmp/transmission/libtransmission/web.c
      &&  mv /other/CMakeLists.txt /tmp/transmission/CMakeLists.txt &&  cmake -S \t/tmp/transmission
      -B \t/tmp/transmission &&  echo \"+++ install transmission +++\" &&  make install
      -C /tmp/transmission/ &&  echo \"+++ install transmission web control +++\"
      &&  mkdir -p \t/tmp/twc &&  TWCVERSION=$(curl -s https://api.github.com/repos/ronggang/transmission-web-control/releases/latest
      | jq -r -j .tag_name) &&  curl -o \t/tmp/twc.tar.gz -L \t\"https://github.com/ronggang/transmission-web-control/archive/${TWCVERSION}.tar.gz\"
      &&  tar xf \t/tmp/twc.tar.gz -C \t/tmp/twc --strip-components=1 &&  mv /tmp/twc/src
      /web-control &&  echo \"+++ install combustion +++\" &&  curl -o \t/tmp/combustion.zip
      -L \t\"https://github.com/Secretmapper/combustion/archive/release.zip\" &&  unzip
      \t/tmp/combustion.zip -d / &&  echo \"+++ install kettu +++\" &&  mkdir -p /kettu
      &&  curl -o \t/tmp/kettu.tar.gz -L \t\"https://github.com/endor/kettu/archive/master.tar.gz\"
      &&  tar xf \t/tmp/kettu.tar.gz -C \t/kettu --strip-components=1 &&  echo \"+++
      cleaning up +++\" &&  apk del --purge \talpine-sdk libnotify-dev libevent-dev
      openssl-dev dbus-glib-dev curl-dev &&  rm -rf \t/tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/tini
    - --
    - /start.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "51413"
    - "9091"
  - Name: volume
    Volumes:
    - /config
    - /downloads
    - /watch
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
