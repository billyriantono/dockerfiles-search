{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt -qq -o=Dpkg::Use-Pty=0 update \u0026\u0026     apt -qq -o=Dpkg::Use-Pty=0 install --no-install-recommends -y git ninja-build cmake build-essential clang autoconf ca-certificates python \u0026\u0026     apt -qq -o=Dpkg::Use-Pty=0 list --installed"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /gollvm/src /gollvm/build /gollvm/install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/llvm",
            "/gollvm/src/llvm"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/gollvm",
            "/gollvm/src/llvm/tools/gollvm"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/gofrontend",
            "/gollvm/src/llvm/tools/gollvm/gofrontend"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/libffi",
            "/gollvm/src/llvm/tools/gollvm/libgo/libffi"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/libbacktrace",
            "/gollvm/src/llvm/tools/gollvm/libgo/libbacktrace"
          ]
        },
        {
          "CmdLine": [
            "cd /gollvm/build \u0026\u0026 cmake -DCMAKE_INSTALL_PREFIX=/gollvm/install -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=\"X86\" -DLLVM_USE_LINKER=gold -G Ninja /gollvm/src/llvm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /gollvm/build \u0026\u0026 ninja gollvm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /gollvm/build \u0026\u0026 ninja GoBackendCoreTests \u0026\u0026 tools/gollvm/unittests/BackendCore/GoBackendCoreTests"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /gollvm/build \u0026\u0026 ninja install-gollvm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOLLVM_PATH",
              "Value": "/gollvm/install"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$GOLLVM_PATH/lib64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOLLVM_PATH/bin:$PATH"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}