{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -eux; \t{ \t\techo 'Package: php*'; \t\techo 'Pin: release  *'; \t\techo 'Pin-Priority: -1'; \t} \u003e /etc/apt/preferences.d/no-debian-php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHPIZE_DEPS",
              "Value": "autoconf \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkg-config \t\tre2c"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y \t\t$PHPIZE_DEPS \t\tca-certificates \t\tcurl \t\tlibedit2 \t\tlibsqlite3-0 \t\tlibxml2 \t\txz-utils \t--no-install-recommends \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "/usr/local/etc/php"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $PHP_INI_DIR/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_CFLAGS",
              "Value": "\"-fstack-protector-strong -fpic -fpie -O2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_CPPFLAGS",
              "Value": "\"$PHP_CFLAGS\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_LDFLAGS",
              "Value": "\"-Wl,-O1 -Wl,--hash-style=both -pie\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0 528995BFEDFBA7191D46839EF9BA0ADA31CBD89E"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.1.12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_URL",
              "Value": "\"https://secure.php.net/get/php-7.1.12.tar.xz/from/this/mirror\""
            },
            {
              "Key": "PHP_ASC_URL",
              "Value": "\"https://secure.php.net/get/php-7.1.12.tar.xz.asc/from/this/mirror\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_SHA256",
              "Value": "\"a0118850774571b1f2d4e30b4fe7a4b958ca66f07d07d65ebdc789c54ba6eeb3\""
            },
            {
              "Key": "PHP_MD5",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe; \t\tfetchDeps=' \t\twget \t'; \tif ! command -v gpg \u003e /dev/null; then \t\tfetchDeps=\"$fetchDeps \t\t\tdirmngr \t\t\tgnupg \t\t\"; \tfi; \tapt-get update; \tapt-get install -y --no-install-recommends $fetchDeps; \trm -rf /var/lib/apt/lists/*; \t\tmkdir -p /usr/src; \tcd /usr/src; \t\twget -O php.tar.xz \"$PHP_URL\"; \t\tif [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\" | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\twget -O php.tar.xz.asc \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS; do \t\t\tgpg --keyserver pgp.mit.edu --recv-keys \"$key\"; \t\tdone; \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \t\trm -rf \"$GNUPGHOME\"; \tfi; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-php-source",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "set -xe \t\u0026\u0026 buildDeps=\" \t\t$PHP_EXTRA_BUILD_DEPS \t\tlibcurl4-openssl-dev \t\tlibedit-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tzlib1g-dev \t\" \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\t\u0026\u0026 export CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \t\tLDFLAGS=\"$PHP_LDFLAGS\" \t\u0026\u0026 docker-php-source extract \t\u0026\u0026 cd /usr/src/php \t\u0026\u0026 gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t\u0026\u0026 debMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\" \t\u0026\u0026 if [ ! -d /usr/include/curl ]; then \t\tln -sT \"/usr/include/$debMultiarch/curl\" /usr/local/include/curl; \tfi \t\u0026\u0026 ./configure \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t\t\t\t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd \t\t\t\t--with-curl \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib \t\t\t\t$(test \"$gnuArch\" = 's390x-linux-gnu' \u0026\u0026 echo '--without-pcre-jit') \t\t--with-libdir=\"lib/$debMultiarch\" \t\t\t\t$PHP_EXTRA_CONFIGURE_ARGS \t\u0026\u0026 make -j \"$(nproc)\" \t\u0026\u0026 make install \t\u0026\u0026 { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \t\u0026\u0026 make clean \t\u0026\u0026 cd / \t\u0026\u0026 docker-php-source delete \t\t\u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps \t\t\u0026\u0026 pecl update-channels \t\u0026\u0026 rm -rf /tmp/pear ~/.pearrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-php-ext-*",
            "docker-php-entrypoint",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-php-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php",
            "-a"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}