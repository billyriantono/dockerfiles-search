MetaArgs: null
Stages:
- BaseName: golang:1.11.2-alpine
  Commands:
  - Env:
    - Key: LIBRDKAFKA_VERSION
      Value: 0.11.6
    Name: env
  - CmdLine:
    - apk add --no-cache --virtual .fetch-deps ca-certificates tar
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache openssl pkgconfig g++
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /root/librdkafka
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/librdkafka
  - CmdLine:
    - wget -O "librdkafka.tar.gz" "https://github.com/edenhill/librdkafka/archive/v${LIBRDKAFKA_VERSION}.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p librdkafka
    Name: run
    PrependShell: true
  - CmdLine:
    - tar   --extract   --file "librdkafka.tar.gz"   --directory "librdkafka"   --strip-components
      1
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps   bash   openssl-dev   make   musl-dev   zlib-dev   python
    Name: run
    PrependShell: true
  - CmdLine:
    - cd "librdkafka" &&   ./configure --prefix=/usr &&   make -j "$(getconf _NPROCESSORS_ONLN)"
      &&   make install
    Name: run
    PrependShell: true
  - CmdLine:
    - runDeps="$(   scanelf --needed --nobanner --recursive /usr/local     | awk '{
      gsub(/,/, "\nso:", $2); print "so:" $2 }'     | sort -u     | xargs -r apk info
      --installed     | sort -u   )" && apk add --no-cache --virtual .librdkafka-rundeps   $runDeps
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / &&   apk del .fetch-deps .build-deps &&   rm -rf /root/librdkafka
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /lib64 && ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11.2-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.11.2-alpine
