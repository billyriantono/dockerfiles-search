MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - rm -rf /var/lib/apt/lists/* && apt-get clean && apt-get update && apt-get install
      -y locales bash coreutils apt-utils lsb-release git gcc g++ make cmake cmake-data
      curl python-nltk gawk wget python3 ninja-build qt5-default qtbase5-dev-tools
      libqt5xmlpatterns5-dev libqt5qml5 qtdeclarative5-dev qtdeclarative5-models-plugin
      qml-module-qtquick-extras qml-module-qtquick-controls qml-module-qtquick-layouts
      qml-module-qtquick2 libenchant-dev libtre-dev libboost-all-dev nodejs npm  libxext6
      libxrender1 libxtst6 qml-module-qtquick-controls2 qml-module-qtquick-dialogs
      qml-module-qtquick-privatewidgets qml-module-qtquick-scene3d qml-module-qtquick-templates2
      qml-module-qtquick-virtualkeyboard qml-module-qtquick-window2 qml-module-qtquick-xmllistmodel
      qtdeclarative5-qtquick2-plugin -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - locale
    Name: run
    PrependShell: true
  - Key: SOURCE_BRANCH
    Name: arg
    Value: null
  - Key: GITHUB_TOKEN
    Name: arg
    Value: null
  - Key: JOB_NUMBER
    Name: arg
    Value: null
  - Key: LIMA_DISABLE_FSW_TESTING
    Name: arg
    Value: null
  - Key: LIMA_DISABLE_CPACK_DEBIAN_PACKAGE_SHLIBDEPS
    Name: arg
    Value: null
  - Key: NLTK_PTB_DP_FILE
    Name: arg
    Value: null
  - Key: USE_TENSORFLOW
    Name: arg
    Value: null
  - CmdLine:
    - apt-get install -y software-properties-common; add-apt-repository -y ppa:limapublisher/ppa
      && apt-get update && apt-get install -y libtensorflow-for-lima-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g json
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ie "s|DEFAULT_URL = 'http://nltk.googlecode.com/svn/trunk/nltk_data/index.xml'|DEFAULT_URL
      = 'http://nltk.github.com/nltk_data/'|" /usr/lib/python2.7/*/nltk/downloader.py
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m nltk.downloader -d nltk_data dependency_treebank
    Name: run
    PrependShell: true
  - CmdLine:
    - cat nltk_data/corpora/dependency_treebank/wsj_*.dp | grep -v "^$" > nltk_data/corpora/dependency_treebank/nltk-ptb.dp
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://osmot.cs.cornell.edu/svm_light/current/svm_light.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /svm_light
  - CmdLine:
    - tar xzf ../svm_light.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - make
    Name: run
    PrependShell: true
  - CmdLine:
    - cp svm_classify svm_learn /usr/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf /svm_light
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - 'curl  -vLJ -H ''Accept: application/octet-stream'' $(curl -s https://api.github.com/repos/aymara/SVMTool/releases/latest?access_token=$GITHUB_TOKEN
      | grep browser_download_url |grep ''.tgz"'' | head -n 1 | cut -d ''"'' -f 4)?access_token=$GITHUB_TOKEN
      | tar xvz'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /SVMTool-1.3.1
  - CmdLine:
    - perl Makefile.PL && make && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - 'TEMP_DEB="$(mktemp)" && curl  -vLJ -H ''Accept: application/octet-stream''
      $(curl -s https://api.github.com/repos/aymara/qhttpserver/releases/latest?access_token=$GITHUB_TOKEN
      | grep browser_download_url | grep ubuntu18 | grep ''.deb"'' | head -n 1 | cut
      -d ''"'' -f 4)?access_token=$GITHUB_TOKEN -o "$TEMP_DEB" && dpkg -i "$TEMP_DEB"'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'TEMP_DEB="$(mktemp)" && curl  -vLJ -H ''Accept: application/octet-stream''
      $(curl -s https://api.github.com/repos/aymara/svmtool-cpp/releases/latest?access_token=$GITHUB_TOKEN
      | grep browser_download_url | grep ubuntu18 | grep ''.deb"'' | head -n 1 | cut
      -d ''"'' -f 4)?access_token=$GITHUB_TOKEN -o "$TEMP_DEB" && dpkg -i "$TEMP_DEB"'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /src/
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/aymara/lima /src/lima
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src/lima
  - Key: CACHEBUST
    Name: arg
    Value: "1"
  - CmdLine:
    - git pull
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "$(git show -s --format=%cI HEAD | sed -e 's/[^0-9]//g')-$(git rev-parse
      --short HEAD)" > release
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /src/lima/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src/lima/build
  - Env:
    - Key: PERL5LIB
      Value: /SVMTool-1.3.1/lib:$PERL5LIB
    Name: env
  - Env:
    - Key: PATH
      Value: /SVMTool-1.3.1/bin:/usr/share/apps/lima/scripts:/usr/bin:$PATH
    Name: env
  - Env:
    - Key: NLTK_PTB_DP_FILE
      Value: /nltk_data/corpora/dependency_treebank/nltk-ptb.dp
    Name: env
  - Env:
    - Key: LIMA_DISABLE_FSW_TESTING
      Value: "true"
    Name: env
  - Env:
    - Key: LIMA_DISABLE_CPACK_DEBIAN_PACKAGE_SHLIBDEPS
      Value: "true"
    Name: env
  - Env:
    - Key: LIMA_DIST
      Value: /usr
    Name: env
  - Env:
    - Key: LIMA_CONF
      Value: /usr/share/config/lima
    Name: env
  - Env:
    - Key: LIMA_RESOURCES
      Value: /usr/share/apps/lima/resources
    Name: env
  - CmdLine:
    - cmake -G Ninja -DLIMA_RESOURCES:STRING=build -DCMAKE_INSTALL_PREFIX:PATH=/usr
      -DCMAKE_BUILD_TYPE:STRING=Release -DLIMA_VERSION_RELEASE:STRING="$(cat /src/lima/release)"
      -DSHORTEN_POR_CORPUS_FOR_SVMLEARN:BOOL=ON -DTF_SOURCES_PATH="/usr/include/tensorflow-for-lima/"
      ..
    Name: run
    PrependShell: true
  - CmdLine:
    - ninja && ninja install && ninja package
    Name: run
    PrependShell: true
  - CmdLine:
    - install -D -t /usr/share/apps/lima/packages /src/lima/build/*.deb
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/share/apps/lima/tests
  - CmdLine:
    - /bin/bash -c "set -o pipefail && tva --language=eng test-eng.*.xml 2>&1 | tee
      tva-eng.log"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "set -o pipefail && tva --language=fre test-fre.default.xml test-fre.disambiguated.xml
      test-fre.hyphen.xml test-fre.idiom.xml test-fre.sa.xml test-fre.se.xml test-fre.simpleword.xml
      test-fre.tokenizer.xml 2>&1 | tee tva-fre.log"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/share/apps/lima/tests/xmlreader
  - CmdLine:
    - /bin/bash -c "set -o pipefail && tvx --language=eng --language=fre test-fre.xmlreader.xml
      2>&1 | tee tvx-fre.log"
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
