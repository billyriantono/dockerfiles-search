{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen $LANG"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_ANDROID_LANG",
              "Value": "en_US"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_ANDROID_DISPLAY_NAME",
              "Value": "mobileci-docker"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get dist-upgrade -y   \u0026\u0026 apt-get install -y     autoconf     build-essential     bzip2     curl     gcc     git     groff     lib32stdc++6     lib32z1     lib32z1-dev     lib32ncurses5     lib32bz2-1.0     libc6-dev     libgmp-dev     libmpc-dev     libmpfr-dev     libxslt-dev     libxml2-dev     m4     make     ncurses-dev     ocaml     openssh-client     pkg-config     python-software-properties     rsync     software-properties-common     unzip     wget     zip     zlib1g-dev     --no-install-recommends   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-add-repository ppa:openjdk-r/ppa   \u0026\u0026 apt-get update   \u0026\u0026 apt-get -y install openjdk-8-jdk   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/usr/local/android-sdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_HOME",
              "Value": "$ANDROID_HOME"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_NDK_HOME",
              "Value": "/usr/local/android-ndk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${INFER_HOME}/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ANDROID_SDK_HOME/tools"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ANDROID_SDK_HOME/platform-tools"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ANDROID_SDK_HOME/build-tools/23.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ANDROID_SDK_HOME/build-tools/24.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ANDROID_NDK_HOME"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "dumb"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_OPTS",
              "Value": "\"-Xms4096m -Xmx4096m\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_OPTS",
              "Value": "\"-XX:+UseG1GC -XX:MaxGCPauseMillis=1000\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "3.3"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/bin"
        },
        {
          "CmdLine": [
            "wget \"https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\" \u0026\u0026     unzip \"gradle-${GRADLE_VERSION}-bin.zip\" \u0026\u0026     ln -s \"gradle-${GRADLE_VERSION}\" gradle \u0026\u0026     rm \"gradle-${GRADLE_VERSION}-bin.zip\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/usr/bin/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$GRADLE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RUN_USER",
              "Value": "mobileci"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUN_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "id $RUN_USER || adduser --uid \"$RUN_UID\"     --gecos 'Build User'     --shell '/bin/sh'     --disabled-login     --disabled-password \"$RUN_USER\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz   \u0026\u0026 tar -xvzf android-sdk_r24.4.1-linux.tgz   \u0026\u0026 mv android-sdk-linux $ANDROID_HOME   \u0026\u0026 chown -R $RUN_USER:$RUN_USER $ANDROID_HOME   \u0026\u0026 chmod -R a+rx $ANDROID_HOME   \u0026\u0026 rm android-sdk_r24.4.1-linux.tgz   \u0026\u0026 mkdir $ANDROID_HOME/licenses   \u0026\u0026 echo \"8933bad161af4178b1185d1a37fbf41ea5269c55\" \u003e $ANDROID_HOME/licenses/android-sdk-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_COMPONENTS",
              "Value": "platform-tools,android-23,build-tools-23.0.2,build-tools-24.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo y | /usr/local/android-sdk/tools/android update sdk --filter \"${ANDROID_COMPONENTS}\" --no-ui -a   \u0026\u0026 chown -R $RUN_USER:$RUN_USER $ANDROID_HOME   \u0026\u0026 chmod -R a+rx $ANDROID_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://dl.google.com/android/repository/android-ndk-r12-linux-x86_64.zip   \u0026\u0026 unzip android-ndk-r12-linux-x86_64.zip   \u0026\u0026 mv android-ndk-r12 /usr/local/android-ndk   \u0026\u0026 chown -R $RUN_USER:$RUN_USER $ANDROID_NDK_HOME   \u0026\u0026 chmod -R a+rx $ANDROID_NDK_HOME   \u0026\u0026 rm android-ndk-r12-linux-x86_64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     56730D5401028683275BD23C23EFEFE93C4CFFFE   ; do     gpg --keyserver pgp.mit.edu --recv-keys \"$key\" ||     gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" ||     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ;   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "6.11.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\"   \u0026\u0026 curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"   \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   \u0026\u0026 grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -   \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt   \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g @angular/cli@1.5.5       \u0026\u0026 npm install -g yarn       \u0026\u0026 npm install -g cordova       \u0026\u0026 npm install -g firebase-tools       \u0026\u0026 npm cache clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "4200"
          ]
        },
        {
          "Env": [
            {
              "Key": "PROJECT",
              "Value": "/project"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $PROJECT \u0026\u0026     chown -R $RUN_USER:$RUN_USER $PROJECT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$PROJECT"
        },
        {
          "Name": "user",
          "User": "$RUN_USER"
        },
        {
          "CmdLine": [
            "echo \"sdk.dir=$ANDROID_HOME\" \u003e local.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"alias ll='ls -l'\" \u003e\u003e ~/.bashrc     \u0026\u0026 echo \"alias lla='ls _la'\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cordova create tmp-project \u0026\u0026  cd tmp-project \u0026\u0026  cordova platform add android \u0026\u0026  cordova build \u0026\u0026  cd .. \u0026\u0026  rm -rf tmp-project"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}