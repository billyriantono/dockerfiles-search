{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.9.22",
      "SourceCode": "FROM phusion/baseimage:0.9.22",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.9.22"
      },
      "Commands": [
        {
          "Maintainer": "James Brink, brink.james@gmail.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update       \u0026\u0026 apt-get dist-upgrade -y       \u0026\u0026 useradd -g users -s /bin/bash -d /home/android -m android       \u0026\u0026 apt-get install socat wget unzip openjdk-8-jdk-headless qemu xauth libsm6 xkb-data x11-xkb-utils libgl1-mesa-glx -y       \u0026\u0026 apt-get install automake cmake clang gettext libx11-dev git build-essential autopoint -y        \u0026\u0026 cd /tmp       \u0026\u0026 wget -O realvnc.deb \"https://downloads.sourceforge.net/project/turbovnc/2.1.2/turbovnc_2.1.2_amd64.deb?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fturbovnc%2Ffiles%2F2.1.2%2Fturbovnc_2.1.2_amd64.deb%2Fdownload\u0026ts=1515823768\"       \u0026\u0026 dpkg -i realvnc.deb       \u0026\u0026 git clone https://github.com/joewing/jwm.git       \u0026\u0026 cd jwm       \u0026\u0026 ./autogen.sh       \u0026\u0026 ./configure       \u0026\u0026 make       \u0026\u0026 make install       \u0026\u0026 cd /       \u0026\u0026 rm -rf /tmp/jwm       \u0026\u0026 apt-get remove automake cmake clang gettext libx11-dev git build-essential autopoint -y       \u0026\u0026 apt-get autoremove -y       \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "android"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/home/android/Android/Sdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "android"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${ANDROID_HOME}/emulator:/${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":1"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "DEVICE_NAME",
          "Name": "arg",
          "Value": "\"Nexus 5X\""
        },
        {
          "Key": "DEVICE_MODEL",
          "Name": "arg",
          "Value": "Nexus_5X"
        },
        {
          "Key": "ARCH",
          "Name": "arg",
          "Value": "x86"
        },
        {
          "Key": "IMAGE_TYPE",
          "Name": "arg",
          "Value": "google_apis"
        },
        {
          "Key": "API",
          "Name": "arg",
          "Value": "27"
        },
        {
          "CmdLine": [
            "export PATH=/opt/TurboVNC/bin:$PATH       \u0026\u0026 mkdir -p ${ANDROID_HOME}       \u0026\u0026 cd ${ANDROID_HOME}       \u0026\u0026 chown android:users ${ANDROID_HOME}       \u0026\u0026 wget -q \"https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip\" -O android-sdk-tools.zip       \u0026\u0026 unzip -q android-sdk-tools.zip       \u0026\u0026 rm android-sdk-tools.zip       \u0026\u0026 sdkmanager --update       \u0026\u0026 yes | sdkmanager --licenses       \u0026\u0026 sdkmanager emulator platform-tools tools       \u0026\u0026 sdkmanager \"system-images;android-${API};${IMAGE_TYPE};${ARCH}\" \"platforms;android-${API}\"       \u0026\u0026 avdmanager create avd       -n ${DEVICE_MODEL}_API_${API}       -d \"${DEVICE_NAME}\"       -p /home/android/.android/avd/${DEVICE_MODEL}_API_${API}       -k \"system-images;android-${API};${IMAGE_TYPE};${ARCH}\"       \u0026\u0026 mkdir /home/android/.vnc       \u0026\u0026 echo \"password\" | vncpasswd -f \u003e /home/android/.vnc/passwd       \u0026\u0026 chmod 600 /home/android/.vnc/passwd       \u0026\u0026 cd /home/android/       \u0026\u0026 mkdir -p \"/home/android/.config/Android Open Source Project/\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-assets/config.ini",
            "/home/android/.android/avd/${DEVICE_MODEL}_API_${API}/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-assets/entrypoint.sh",
            "/home/android/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-assets/jwmrc",
            "/home/android/.jwmrc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-assets/xsession",
            "/home/android/.xsession"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-assets/Emulator.conf",
            "/home/android/.config/Android Open Source Project/Emulator.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5901"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5554"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5555"
          ]
        },
        {
          "CmdLine": [
            "/home/android/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}