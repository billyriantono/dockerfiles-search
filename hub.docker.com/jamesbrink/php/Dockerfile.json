{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "PHP_VERSION",
          "Name": "arg",
          "Value": "\"7.2.3\""
        },
        {
          "Key": "PHP_SHA256",
          "Name": "arg",
          "Value": "\"b3a94f1b562f413c0b96f54bc309706d83b29ac65d9b172bc7ed9fb40a5e651f\""
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"James Brink, brink.james@gmail.com\""
            },
            {
              "Key": "decription",
              "Value": "\"PHP ${PHP_VERSION}} with Apache\""
            },
            {
              "Key": "version",
              "Value": "\"${PHP_VERSION}\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"php\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/jamesbrink/docker-php\""
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0.0-rc1\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-assets/",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "PHP_CFLAGS",
              "Value": "\"-fstack-protector-strong -fpic -fpie -O2\""
            },
            {
              "Key": "PHP_CPPFLAGS",
              "Value": "\"$PHP_CFLAGS\""
            },
            {
              "Key": "PHP_LDFLAGS",
              "Value": "\"-Wl,-O1 -Wl,--hash-style=both -pie\""
            },
            {
              "Key": "GPG_KEYS",
              "Value": "\"1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763               6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3               A917B1ECDA84AEC2B568FED6F50ABC807BD5DCD0               528995BFEDFBA7191D46839EF9BA0ADA31CBD89E               1729F83938DA44E27BA0F4D3DBDB397470D12172               B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F\""
            },
            {
              "Key": "PHP_VERSION",
              "Value": "\"${PHP_VERSION}\""
            },
            {
              "Key": "PHP_URL",
              "Value": "\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\""
            },
            {
              "Key": "PHP_ASC_URL",
              "Value": "\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz.asc/from/this/mirror\""
            },
            {
              "Key": "PHP_SHA256",
              "Value": "\"${PHP_SHA256}\""
            },
            {
              "Key": "PHP_INI_DIR",
              "Value": "\"/usr/local/etc/php\""
            },
            {
              "Key": "APACHE_LOG_LEVEL",
              "Value": "\"warn\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe;     apk add --update --no-cache --virtual .persistent-deps         apache2         ca-certificates         curl         libpcre16         libpcre32         libpcrecpp         libressl         tar         wget         xz;     update-ca-certificates;     mkdir -p $PHP_INI_DIR/conf.d;     apk add --update --no-cache --virtual .fetch-deps gnupg;     mkdir -p /usr/src;     cd /usr/src;     wget -O php.tar.xz \"$PHP_URL\";     if [ -n \"$PHP_SHA256\" ]; then echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c -; fi;     if [ -n \"$PHP_MD5\" ]; then echo \"$PHP_MD5 *php.tar.xz\" | md5sum -c -; fi;     if [ -n \"$PHP_ASC_URL\" ]; then         wget -O php.tar.xz.asc \"$PHP_ASC_URL\";         export GNUPGHOME=\"$(mktemp -d)\";         for key in $GPG_KEYS; do             gpg --keyserver  ipv4.pool.sks-keyservers.net --recv-keys \"$key\";         done;         gpg --batch --verify php.tar.xz.asc php.tar.xz;         rm -rf \"$GNUPGHOME\";     fi;     apk del .fetch-deps;     apk add --update --no-cache --virtual .build-deps         apache2-dev         autoconf         coreutils         curl-dev         dpkg-dev dpkg         file         g++         gcc         libc-dev         libedit-dev         libressl-dev         libxml2-dev         make         pcre-dev         pkgconf         re2c         sqlite-dev;     export CFLAGS=\"$PHP_CFLAGS\"         CPPFLAGS=\"$PHP_CPPFLAGS\"         LDFLAGS=\"$PHP_LDFLAGS\";     docker-php-source extract;     cd /usr/src/php;     gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"     ./configure         --build=\"$gnuArch\"         --with-config-file-path=\"$PHP_INI_DIR\"         --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"         --with-apxs2=/usr/bin/apxs         --disable-cgi         --enable-ftp         --enable-mbstring         --enable-mysqlnd         --with-curl         --with-libedit         --with-openssl         --with-zlib         --with-pcre-regex=/usr         $(test \"$gnuArch\" = 's390x-linux-gnu' \u0026\u0026 echo '--without-pcre-jit')         $PHP_EXTRA_CONFIGURE_ARGS;     make -j \"$(nproc)\";     make install;     { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; };     make clean;     cd /;     docker-php-source delete;     runDeps=\"$(     scanelf --needed --nobanner --format '%n#p' --recursive /usr/local       \t| tr ',' '\\n'       \t| sort -u       \t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }'     )\";     apk add --update --no-cache --virtual .php-rundeps $runDeps;     apk del .build-deps;     pecl update-channels;     rm -rf /tmp/pear ~/.pearrc;     mkdir /run/apache2;     rm /var/www/localhost/htdocs/index.html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/local/bin/apache2-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}