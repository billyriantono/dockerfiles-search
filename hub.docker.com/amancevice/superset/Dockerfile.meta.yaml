MetaArgs:
- DefaultValue: latest
  Key: NODE_VERSION
  ProvidedValue: null
  Value: latest
- DefaultValue: "3.6"
  Key: PYTHON_VERSION
  ProvidedValue: null
  Value: "3.6"
Stages:
- As: build
  BaseName: node:${NODE_VERSION}
  Commands:
  - Key: SUPERSET_VERSION
    Name: arg
    Value: master
  - Env:
    - Key: SUPERSET_HOME
      Value: /var/lib/superset/
    Name: env
  - Name: workdir
    Path: ${SUPERSET_HOME}
  - CmdLine:
    - wget -O /tmp/superset.tar.gz https://github.com/apache/incubator-superset/archive/${SUPERSET_VERSION}.tar.gz
      &&     tar xzf /tmp/superset.tar.gz -C ${SUPERSET_HOME} --strip-components=1
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${SUPERSET_HOME}/superset/assets
  - CmdLine:
    - npm install &&     npm run build
    Name: run
    PrependShell: true
  From:
    Image: node:${NODE_VERSION}
  Name: build
  Platform: ""
  SourceCode: FROM node:${NODE_VERSION} AS build
- As: dist
  BaseName: python:${PYTHON_VERSION}
  Commands:
  - Env:
    - Key: SUPERSET_HOME
      Value: /var/lib/superset/
    Name: env
  - Name: workdir
    Path: ${SUPERSET_HOME}
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - ${SUPERSET_HOME}
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements-db.txt
    - .
  - CmdLine:
    - python setup.py sdist &&     tar czfv /tmp/superset.tar.gz requirements.txt
      requirements-db.txt dist
    Name: run
    PrependShell: true
  From:
    Image: python:${PYTHON_VERSION}
  Name: dist
  Platform: ""
  SourceCode: FROM python:${PYTHON_VERSION} AS dist
- As: final
  BaseName: python:${PYTHON_VERSION}
  Commands:
  - Env:
    - Key: GUNICORN_BIND
      Value: 0.0.0.0:8088
    - Key: GUNICORN_LIMIT_REQUEST_FIELD_SIZE
      Value: "0"
    - Key: GUNICORN_LIMIT_REQUEST_LINE
      Value: "0"
    - Key: GUNICORN_TIMEOUT
      Value: "60"
    - Key: GUNICORN_WORKERS
      Value: "3"
    - Key: GUNICORN_THREADS
      Value: "4"
    - Key: LANG
      Value: C.UTF-8
    - Key: LC_ALL
      Value: C.UTF-8
    - Key: PYTHONPATH
      Value: /etc/superset:/home/superset:$PYTHONPATH
    - Key: SUPERSET_REPO
      Value: apache/incubator-superset
    - Key: SUPERSET_VERSION
      Value: ${SUPERSET_VERSION}
    - Key: SUPERSET_HOME
      Value: /var/lib/superset
    Name: env
  - Env:
    - Key: GUNICORN_CMD_ARGS
      Value: '"--workers ${GUNICORN_WORKERS} --threads ${GUNICORN_THREADS} --timeout
        ${GUNICORN_TIMEOUT} --bind ${GUNICORN_BIND} --limit-request-line ${GUNICORN_LIMIT_REQUEST_LINE}
        --limit-request-field_size ${GUNICORN_LIMIT_REQUEST_FIELD_SIZE}"'
    Name: env
  - Name: workdir
    Path: /tmp/superset
  - Chown: ""
    From: dist
    Name: copy
    SourcesAndDest:
    - /tmp/superset.tar.gz
    - .
  - CmdLine:
    - groupadd supergroup &&     useradd -U -m -G supergroup superset &&     mkdir
      -p /etc/superset &&     mkdir -p ${SUPERSET_HOME} &&     chown -R superset:superset
      /etc/superset &&     chown -R superset:superset ${SUPERSET_HOME} &&     apt-get
      update &&     apt-get install -y         build-essential         curl         default-libmysqlclient-dev         freetds-bin         freetds-dev         libaio1         libffi-dev         libldap2-dev         libpq-dev         libsasl2-2         libsasl2-dev         libsasl2-modules-gssapi-mit         libssl1.0
      &&     apt-get clean &&     tar xzf superset.tar.gz &&     pip install dist/*.tar.gz
      -r requirements.txt -r requirements-db.txt &&     rm -rf ./*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin
    - /usr/local/bin
  - Name: workdir
    Path: /home/superset
  - Name: volume
    Volumes:
    - /etc/superset
    - /home/superset
    - /var/lib/superset
  - Name: expose
    Ports:
    - "8088"
  - Health:
      Test:
      - CMD
      - curl
      - -f
      - http://localhost:8088/health
    Name: healthcheck
  - CmdLine:
    - gunicorn
    - superset:app
    Name: cmd
    PrependShell: false
  - Name: user
    User: superset
  From:
    Image: python:${PYTHON_VERSION}
  Name: final
  Platform: ""
  SourceCode: FROM python:${PYTHON_VERSION} AS final
