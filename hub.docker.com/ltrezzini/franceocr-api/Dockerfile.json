{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "Louis Trezzini \u003clouis.trezzini@ponts.org\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "groupadd python \u0026\u0026 useradd -g python python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app \u0026\u0026 chown python:python /app \u0026\u0026 chmod 700 /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /uploads \u0026\u0026 chown python:python /uploads \u0026\u0026 chmod 700 /uploads"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /logs \u0026\u0026 chown python:python /logs \u0026\u0026 chmod 700 /logs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "echo     \u0026\u0026 yum check-update --disableplugin=fastestmirror || true     \u0026\u0026 yum -y install https://centos7.iuscommunity.org/ius-release.rpm     \u0026\u0026 yum -y install python36u python36u-devel python36u-pip     \u0026\u0026 yum -y install hdf5 ghostscript gcc make autoconf-archive automake pkgconfig     ImageMagick wget gcc-c++ unzip libtool libtiff-devel libpng-devel libjpeg-turbo-devel zlib-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /deps \u0026\u0026 cd /deps \u0026\u0026 wget https://github.com/DanBloomberg/leptonica/releases/download/1.74.4/leptonica-1.74.4.tar.gz     \u0026\u0026 tar -xvf leptonica-1.74.4.tar.gz \u0026\u0026 cd leptonica-1.74.4/     \u0026\u0026 ./configure --prefix=/usr --with-libtiff \u0026\u0026 make -j $(nproc) \u0026\u0026 make install     \u0026\u0026 rm -rf /deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PKG_CONFIG_PATH",
              "Value": "/usr/lib/pkgconfig"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /deps \u0026\u0026 cd /deps \u0026\u0026 wget https://github.com/tesseract-ocr/tesseract/archive/eba0ae3b88a46a93e981770caa0b148d65cc4468.zip     \u0026\u0026 unzip eba0ae3b88a46a93e981770caa0b148d65cc4468.zip -d tesseract/ \u0026\u0026 cd tesseract/tesseract-eba0ae3b88a46a93e981770caa0b148d65cc4468/     \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure \u0026\u0026 make -j $(nproc) \u0026\u0026 make install     \u0026\u0026 rm -rf /deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3.6 install numpy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3.6 install opencv-python==3.3.0.10"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip3.6 install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/usr/bin:${PATH}\""
            },
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "\"${LD_LIBRARY_PATH}:/usr/lib\""
            },
            {
              "Key": "TESSDATA_PREFIX",
              "Value": "/usr/share/tessdata"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $TESSDATA_PREFIX"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "franceocr.traineddata",
            "$TESSDATA_PREFIX"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "OCRB.traineddata",
            "$TESSDATA_PREFIX"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "Name": "user",
          "User": "python"
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        },
        {
          "CmdLine": [
            "gunicorn",
            "--config",
            "/app/gunicorn.conf",
            "--log-config",
            "/app/logging.conf",
            "-b",
            ":5000",
            "server:server"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}