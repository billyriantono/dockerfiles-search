{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "slothds/debian-svd:stretch",
      "SourceCode": "FROM    slothds/debian-svd:stretch",
      "Platform": "",
      "From": {
        "Image": "slothds/debian-svd:stretch"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"sloth@devils.su\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "WDMRC_VERS",
              "Value": "1.10.7.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WDMRC_HOME",
              "Value": "/opt/home/wdmrc"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \u0026\u0026         echo 'deb http://download.mono-project.com/repo/debian stable-stretch main' \u003e /etc/apt/sources.list.d/mono-official.list \u0026\u0026         apt update \u0026\u0026 apt -y upgrade \u0026\u0026         apt -y install --no-install-recommends wget unzip mono-runtime mono-devel pound \u0026\u0026         sed -i 's/startup\\=0/startup\\=1/' /etc/default/pound \u0026\u0026         apt -y autoremove \u0026\u0026 apt -y autoclean \u0026\u0026        apt -y clean \u0026\u0026 apt -y clean all \u0026\u0026         rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-check-certificate https://github.com/yar229/WebDavMailRuCloud/releases/download/${WDMRC_VERS}/WebDAVCloudMailRu-${WDMRC_VERS}-dotNet461.zip -O /tmp/wdmrc-core.zip \u0026\u0026         mkdir -p ${WDMRC_HOME} \u0026\u0026         unzip /tmp/wdmrc-core.zip -d ${WDMRC_HOME} \u0026\u0026         chown -R runner:runner ${WDMRC_HOME} \u0026\u0026         rm -f /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8010"
          ]
        }
      ]
    }
  ]
}