MetaArgs: null
Stages:
- As: mozbuild
  BaseName: alpine:3.8
  Commands:
  - CmdLine:
    - apk --update add autoconf automake build-base libtool nasm git cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /src && cd /src && git clone git://github.com/mozilla/mozjpeg.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /src/mozjpeg && mkdir build && cd build && CMAKE_INSTALL_PREFIX=/opt/mozjpeg
      cmake .. && make && make install
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.8
  Name: mozbuild
  Platform: ""
  SourceCode: FROM alpine:3.8 as mozbuild
- BaseName: node:10-alpine
  Commands:
  - CmdLine:
    - echo "@edge-testing http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
      &&     echo "@edge-community http://dl-cdn.alpinelinux.org/alpine/edge/community"
      >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /src
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  - Chown: ""
    From: mozbuild
    Name: copy
    SourcesAndDest:
    - /opt/mozjpeg
    - /opt/mozjpeg
  - Chown: ""
    Name: add
    SourcesAndDest:
    - /bin/CMakeLists.txt
    - /bin/CMakeLists.txt
  - Chown: ""
    Name: add
    SourcesAndDest:
    - /bin/facedetect.cpp
    - /bin/facedetect.cpp
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/install_deps.sh
    - /install_deps.sh
  - CmdLine:
    - sh /install_deps.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - package.json
    - /src/package.json
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - tsconfig.json
    - /src/tsconfig.json
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nodemon.json
    - /src/nodemon.json
  - Chown: ""
    Name: add
    SourcesAndDest:
    - src/.
    - /src/app
  - Key: env
    Name: arg
    Value: production
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/build_production.sh
    - /build_production.sh
  - CmdLine:
    - if [ "${env}" = "production" ] ; then sh /build_production.sh ; fi
    Name: run
    PrependShell: true
  - Env:
    - Key: MAGICK_MEMORY_LIMIT
      Value: 2GiB
    - Key: MAGICK_MAP_LIMIT
      Value: 4GiB
    - Key: MAGICK_DISK_LIMIT
      Value: 16GiB
    - Key: MAGICK_AREA_LIMIT
      Value: 100MP
    - Key: MAGICK_HEIGHT_LIMIT
      Value: 10KP
    - Key: MAGICK_WIDTH_LIMIT
      Value: 10KP
    - Key: MAGICK_THREAD_LIMIT
      Value: "4"
    - Key: MAGICK_THROTTLE_LIMIT
      Value: "0"
    - Key: MAGICK_TIME_LIMIT
      Value: "3600"
    Name: env
  - CmdLine:
    - touch /config.yml
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - npm start
    Name: cmd
    PrependShell: true
  From:
    Image: node:10-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10-alpine
