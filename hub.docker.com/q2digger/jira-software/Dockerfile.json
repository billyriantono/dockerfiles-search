{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "anapsix/alpine-java:8_server-jre",
      "SourceCode": "FROM anapsix/alpine-java:8_server-jre",
      "Platform": "",
      "From": {
        "Image": "anapsix/alpine-java:8_server-jre"
      },
      "Commands": [
        {
          "Maintainer": "Dmitry Gerasimov \u003cq2digger@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "JIRA_VERSION",
              "Value": "7.13.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUN_USER",
              "Value": "daemon"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUN_GROUP",
              "Value": "daemon"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JIRA_HOME",
              "Value": "/var/atlassian/jira"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JIRA_INSTALL_DIR",
              "Value": "/opt/atlassian/jira"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$JIRA_HOME"
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/entrypoint.sh",
            "-fg"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dbconfgenerator.py",
            "/dbconfgenerator.py"
          ]
        },
        {
          "CmdLine": [
            "apk update -qq     \u0026\u0026 apk add ca-certificates wget curl openssh bash procps openssl perl ttf-dejavu tini python2     \u0026\u0026 update-ca-certificates 2\u003e/dev/null || true     \u0026\u0026 rm -rf /var/lib/{apt,dpkg,cache,log}/ /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 mkdir -p                \"${JIRA_HOME}\"     \u0026\u0026 mkdir -p                \"${JIRA_HOME}/caches/indexes\"     \u0026\u0026 chmod -R 700            \"${JIRA_HOME}\"     \u0026\u0026 chown -R daemon:daemon  \"${JIRA_HOME}\"     \u0026\u0026 mkdir -p                \"${JIRA_INSTALL_DIR}/conf/Catalina\"     \u0026\u0026 curl -Ls                \"https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-7.13.0.tar.gz\" | tar -xz --directory \"${JIRA_INSTALL_DIR}\" --strip-components=1 --no-same-owner     \u0026\u0026 curl -Ls                \"https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.46.tar.gz\" | tar -xz --directory \"${JIRA_INSTALL_DIR}/lib\" --strip-components=1 --no-same-owner \"mysql-connector-java-5.1.46/mysql-connector-java-5.1.46-bin.jar\"     \u0026\u0026 rm -f                   \"${JIRA_INSTALL_DIR}/lib/postgresql-*\"     \u0026\u0026 curl -Ls                \"https://jdbc.postgresql.org/download/postgresql-42.2.4.jar\" -o \"${JIRA_INSTALL_DIR}/lib/postgresql-42.2.4.jar\"     \u0026\u0026 chmod -R 700            \"${JIRA_INSTALL_DIR}/conf\"     \u0026\u0026 chmod -R 700            \"${JIRA_INSTALL_DIR}/logs\"     \u0026\u0026 chmod -R 700            \"${JIRA_INSTALL_DIR}/temp\"     \u0026\u0026 chmod -R 700            \"${JIRA_INSTALL_DIR}/work\"     \u0026\u0026 chown -R daemon:daemon  \"${JIRA_INSTALL_DIR}/conf\"     \u0026\u0026 chown -R daemon:daemon  \"${JIRA_INSTALL_DIR}/logs\"     \u0026\u0026 chown -R daemon:daemon  \"${JIRA_INSTALL_DIR}/temp\"     \u0026\u0026 chown -R daemon:daemon  \"${JIRA_INSTALL_DIR}/work\"     \u0026\u0026 echo -e                 \"\\njira.home=$JIRA_HOME\" \u003e\u003e \"${JIRA_INSTALL_DIR}/atlassian-jira/WEB-INF/classes/jira-application.properties\"     \u0026\u0026 touch -d \"@0\"           \"${JIRA_INSTALL_DIR}/conf/server.xml\"     \u0026\u0026 mkdir -p                 /ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./ssl/",
            "/ssl/"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 sed -i -e 's/^JVM_MINIMUM_MEMORY.*//g' ${JIRA_INSTALL_DIR}/bin/setenv.sh     \u0026\u0026 sed -i -e 's/^JVM_MAXIMUM_MEMORY.*//g' ${JIRA_INSTALL_DIR}/bin/setenv.sh     \u0026\u0026 sed -i -e 's/port=\"8080\"/port=\"8080\" secure=\"${catalinaConnectorSecure}\" scheme=\"${catalinaConnectorScheme}\" proxyName=\"${catalinaConnectorProxyName}\" proxyPort=\"${catalinaConnectorProxyPort}\"/' ${JIRA_INSTALL_DIR}/conf/server.xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/atlassian/jira",
            "/opt/atlassian/jira/logs"
          ]
        }
      ]
    }
  ]
}