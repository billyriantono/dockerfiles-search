MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk-slim
  Commands:
  - Maintainer: USU Software AG
    Name: maintainer
  - CmdLine:
    - echo "deb http://deb.debian.org/debian stretch-backports main" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y -qq --no-install-recommends wget unzip
      python openssh-client python-openssl git-core jq curl vim gnupg2 procps zip
      &&   apt-get install -y -t stretch-backports golang-go &&   apt-get clean &&   rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://raw.githubusercontent.com/paulp/sbt-extras/master/sbt > /usr/local/bin/sbt
      && chmod 0755 /usr/local/bin/sbt &&   sbt about -sbt-create
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: HOME
      Value: /
    Name: env
  - Env:
    - Key: CLOUDSDK_PYTHON_SITEPACKAGES
      Value: "1"
    Name: env
  - CmdLine:
    - wget https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip &&
      unzip google-cloud-sdk.zip && rm google-cloud-sdk.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true
      --rc-path=/.bashrc --additional-components kubectl alpha beta
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /.ssh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /google-cloud-sdk/bin:$PATH
    Name: env
  - Env:
    - Key: DOCKERVERSION
      Value: 18.09.0
    Name: env
  - CmdLine:
    - curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKERVERSION}.tgz   &&
      tar xzvf docker-${DOCKERVERSION}.tgz --strip 1 -C /usr/local/bin docker/docker   &&
      rm docker-${DOCKERVERSION}.tgz
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM_ARCHIVE
      Value: helm-v2.14.3-linux-amd64.tar.gz
    - Key: HELM_DIR
      Value: linux-amd64
    - Key: FAAS_CLI_VERSION
      Value: 0.8.5
    Name: env
  - CmdLine:
    - curl -LsO https://storage.googleapis.com/kubernetes-helm/$HELM_ARCHIVE && tar
      -zxvf $HELM_ARCHIVE && cp $HELM_DIR/* /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LsO https://github.com/openfaas/faas-cli/releases/download/${FAAS_CLI_VERSION}/faas-cli
      && chmod +x faas-cli && cp faas-cli /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O /usr/local/bin/kind https://github.com/kubernetes-sigs/kind/releases/download/0.2.1/kind-linux-amd64
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/kind
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y nodejs && npm install -g npm@6.1.0
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LsO https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
      && chmod +x jq-linux64 && mv jq-linux64 /usr/local/bin/jq
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Europe/Berlin" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Name: workdir
    Path: /root
  From:
    Image: openjdk:8-jdk-slim
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-slim
