MetaArgs: null
Stages:
- BaseName: nicbet/datascience-base
  Commands:
  - Name: user
    User: root
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - apt update
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - apt install -y graphviz libgit2-dev
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - pip3 install jupyterlab
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p .jupyter
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - jupyter_notebook_config.py
    - .jupyter/
  - Name: user
    User: root
  - Chown: ""
    Name: add
    SourcesAndDest:
    - jupyter-server.sh
    - /home/datascience/jupyter-server.sh
  - CmdLine:
    - chmod a+x /home/datascience/jupyter-server.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install-r-pkg
    - /home/datascience/install-r-pkg
  - CmdLine:
    - chmod a+x /home/datascience/install-r-pkg
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - pip3 install numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pandas
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install matplotlib
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install seaborn
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install scipy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install statsmodels
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install plotly
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install bokeh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pydot
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install scikit-learn
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install tensorflow
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install keras
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install nltk
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install spacy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install scrapy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install theano
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install networkx
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install opencv-python
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install opencv-contrib-python
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install xgboost
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install shap
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install graphviz
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pymc3
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install http://download.pytorch.org/whl/cpu/torch-0.4.1-cp36-cp36m-linux_x86_64.whl
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install torchvision
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - echo 'install.packages("devtools")' | R --no-save
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "install.packages(c('repr', 'IRdisplay', 'crayon', 'pbdZMQ'))" | R --no-save
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'devtools::install_github("IRkernel/IRkernel")' | R --no-save
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'IRkernel::installspec(user = FALSE)' | R --no-save
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)'
      | R --no-save
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'install.packages(c("coda","mvtnorm","devtools","loo"))' | R --no-save
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'library(devtools)\ndevtools::install_github("rmcelreath/rethinking")'
      | R --no-save
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'install.packages("rms", repos = "https://cloud.r-project.org/", dependencies=TRUE)'
      | R --no-save
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - apt install -y libtool libtool-bin libffi-dev libczmq-dev libzmq3-dev autoconf
      pkg-config
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install cztop iruby rbczmq -- --with-system-libs
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - iruby register --force
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Name: workdir
    Path: $HOME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - julia-kernel.jl
    - .
  - CmdLine:
    - /usr/local/julia-1.0.0/bin/julia --color=yes julia-kernel.jl
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Name: workdir
    Path: $HOME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - julia-packages.jl
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - list-packages.jl
    - .
  - Name: user
    User: root
  - Name: workdir
    Path: /tmp
  - Env:
    - Key: REBAR_VERSION
      Value: '"2.6.4"'
    Name: env
  - CmdLine:
    - "set -xe \t&& REBAR_DOWNLOAD_URL=\"https://github.com/rebar/rebar/archive/${REBAR_VERSION}.tar.gz\"
      \t&& REBAR_DOWNLOAD_SHA256=\"577246bafa2eb2b2c3f1d0c157408650446884555bf87901508ce71d5cc0bd07\"
      \t&& mkdir -p /usr/src/rebar-src \t&& curl -fSL -o rebar-src.tar.gz \"$REBAR_DOWNLOAD_URL\"
      \t&& echo \"$REBAR_DOWNLOAD_SHA256 rebar-src.tar.gz\" | sha256sum -c - \t&&
      tar -xzf rebar-src.tar.gz -C /usr/src/rebar-src --strip-components=1 \t&& rm
      rebar-src.tar.gz \t&& cd /usr/src/rebar-src \t&& ./bootstrap \t&& install -v
      ./rebar /usr/local/bin/ \t&& rm -rf /usr/src/rebar-src"
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - "set -xe   && curl -s https://api.github.com/repos/pprzetacznik/IElixir/releases/latest
      | grep \"tarball_url\" | sed -n -e 's/.*tarball_url\": \"\\(.*\\)\".*/\\1/p'
      | xargs -t curl -fSL -o ielixir.tar.gz   && mkdir ielixir   && tar -zxvf ielixir.tar.gz
      -C ielixir --strip-components=1   && rm ielixir.tar.gz   && cd ielixir \t&&
      sed -i -e 's#^ *elixir: \".*#     elixir: \">= 1.1.0\",#g' mix.exs   && sed
      -i -e \"s#^ *\\\"display_name\\\": \\\".*#   \\\"display_name\\\": \\\"Elixir
      ${ELIXIR_VERSION}\\\",#g\" install_script.sh   && ls -alh   && mix local.hex
      --force   && mix local.rebar --force   && mix deps.get   && mix deps.compile
      \  && ./install_script.sh"
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Name: workdir
    Path: $HOME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - list-installed-packages.sh
    - .
  - Name: user
    User: root
  - CmdLine:
    - chown -R $NB_USER $HOME
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - /home/datascience/jupyter-server.sh
    Name: cmd
    PrependShell: false
  From:
    Image: nicbet/datascience-base
  Name: ""
  Platform: ""
  SourceCode: FROM nicbet/datascience-base
