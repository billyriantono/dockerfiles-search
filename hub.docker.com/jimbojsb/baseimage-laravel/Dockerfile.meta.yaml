MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Env:
    - Key: PATH
      Value: $PATH:/app/vendor/bin:/app:/app/node_modules/.bin
    Name: env
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - Env:
    - Key: APP_ENV
      Value: production
    Name: env
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /usr/local/bin/entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - runsvinit
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apk add --update --no-cache     bash     runit     nginx     curl     php7     php7-mysqlnd     php7-pdo     php7-pdo_mysql     php7-pdo_sqlite     php7-xdebug     php7-fpm     php7-zip     php7-mbstring     php7-imagick     php7-xml     php7-json     php7-dom     git     php7-phar     php7-bcmath     php7-curl     php7-session     php7-tokenizer     php7-xmlwriter     php7-fileinfo     php7-opcache     php7-simplexml     nodejs     npm     vim     mysql-client
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - etc/
    - /etc/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /root/
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Expression: COPY composer* package* /app/
    Name: onbuild
  - Expression: RUN composer install --no-scripts --no-plugins --no-autoloader --no-dev
      && composer clear-cache
    Name: onbuild
  - Expression: RUN npm install
    Name: onbuild
  - Expression: COPY . /app
    Name: onbuild
  - Expression: RUN composer -o dump-autoload
    Name: onbuild
  - Expression: RUN npm run production
    Name: onbuild
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
