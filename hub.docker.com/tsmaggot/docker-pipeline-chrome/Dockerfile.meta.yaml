MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Viacheslav Timonov <tsmaggot@gmail.com>
    Name: maintainer
  - CmdLine:
    - echo "deb http://archive.ubuntu.com/ubuntu xenial main universe\n" > /etc/apt/sources.list      &&
      echo "deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\n" >>
      /etc/apt/sources.list      && echo "deb http://security.ubuntu.com/ubuntu xenial-security
      main universe\n" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: DEBCONF_NONINTERACTIVE_SEEN
      Value: "true"
    Name: env
  - CmdLine:
    - apt-get -qqy update     && apt-get -qqy --no-install-recommends install     bzip2     ca-certificates     tzdata     sudo     unzip     wget
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: '"UTC"'
    Name: env
  - CmdLine:
    - echo "${TZ}" > /etc/timezone     && dpkg-reconfigure --frontend noninteractive
      tzdata
    Name: run
    PrependShell: true
  - Key: USER
    Name: arg
    Value: docker
  - Key: GROUP
    Name: arg
    Value: docker
  - Key: user_id
    Name: arg
    Value: "1000"
  - Key: group_id
    Name: arg
    Value: "1000"
  - CmdLine:
    - 'groupadd -g $group_id $GROUP     && useradd -u $user_id -g $group_id -m -s
      /bin/bash $USER --create-home     && usermod -a -G sudo docker     && echo ''ALL
      ALL = (ALL) NOPASSWD: ALL'' >> /etc/sudoers     && echo ''docker:secret'' |
      chpasswd'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/docker/.m2     && chown -R $user_id:$group_id /home/docker/.m2
    Name: run
    PrependShell: true
  - Key: MAVEN_VERSION
    Name: arg
    Value: 3.3.9
  - Key: BASE_URL
    Name: arg
    Value: https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries
  - CmdLine:
    - apt-get -y install curl tar
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL -o /tmp/apache-maven.tar.gz
      ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz   && tar -xzf /tmp/apache-maven.tar.gz
      -C /usr/share/maven --strip-components=1   && rm -f /tmp/apache-maven.tar.gz   &&
      ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
    Name: run
    PrependShell: true
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/share/maven
    Name: env
  - Env:
    - Key: JAVA_VER
      Value: "8"
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - CmdLine:
    - echo 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main' >> /etc/apt/sources.list
      &&     echo 'deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty
      main' >> /etc/apt/sources.list &&     apt-key adv --keyserver keyserver.ubuntu.com
      --recv-keys C2518248EEA14886 &&     apt-get update &&     echo oracle-java${JAVA_VER}-installer
      shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
      &&     apt-get install -y --force-yes --no-install-recommends oracle-java${JAVA_VER}-installer
      oracle-java${JAVA_VER}-set-default &&     apt-get clean &&     rm -rf /var/cache/oracle-jdk${JAVA_VER}-installer
    Name: run
    PrependShell: true
  - CmdLine:
    - update-java-alternatives -s java-8-oracle
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export JAVA_HOME=/usr/lib/jvm/java-8-oracle" >> ~/.bashrc
    Name: run
    PrependShell: true
  - Key: CHROME_VERSION
    Name: arg
    Value: '"google-chrome-stable"'
  - CmdLine:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add -   && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >>
      /etc/apt/sources.list.d/google-chrome.list   && apt-get update -qqy   && apt-get
      -qqy install     ${CHROME_VERSION:-google-chrome-stable}   && rm /etc/apt/sources.list.d/google-chrome.list   &&
      rm -rf /var/lib/apt/lists/* /var/cache/apt/*
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R $USER:$GROUP ~
    Name: run
    PrependShell: true
  - Key: FIREFOX_VERSION
    Name: arg
    Value: "59.0"
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy --no-install-recommends install firefox   &&
      rm -rf /var/lib/apt/lists/* /var/cache/apt/*   && wget --no-verbose -O /tmp/firefox.tar.bz2
      https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2   &&
      apt-get -y purge firefox   && rm -rf /opt/firefox   && tar -C /opt -xjf /tmp/firefox.tar.bz2   &&
      rm /tmp/firefox.tar.bz2   && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION   &&
      ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox
    Name: run
    PrependShell: true
  - Key: GECKODRIVER_VERSION
    Name: arg
    Value: 0.20.1
  - CmdLine:
    - wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz   &&
      rm -rf /opt/geckodriver   && tar -C /opt -zxf /tmp/geckodriver.tar.gz   && rm
      /tmp/geckodriver.tar.gz   && mv /opt/geckodriver /opt/geckodriver-$GECKODRIVER_VERSION   &&
      chmod 755 /opt/geckodriver-$GECKODRIVER_VERSION   && ln -fs /opt/geckodriver-$GECKODRIVER_VERSION
      /usr/bin/geckodriver
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y xvfb fluxbox x11vnc dbus libasound2 libqt4-dbus libqt4-network
      libqtcore4 libqtgui4 libxss1 libpython2.7 libqt4-xml libaudio2  fontconfig  lib32stdc++6
      libc6-i386 lib32gcc1 nano
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/.X11-unix &&     chown -R root:root /tmp/.X11-unix &&     chmod 1777
      /tmp/.X11-unix
    Name: run
    PrependShell: true
  - CmdLine:
    - export DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket
    Name: run
    PrependShell: true
  - Env:
    - Key: DBUS_SESSION_BUS_ADDRESS
      Value: /dev/null
    Name: env
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: user
    User: $USER
  - Key: CHROME_DRIVER_VERSION
    Name: arg
    Value: '"latest"'
  - CmdLine:
    - 'sudo mkdir -p /opt/selenium   && sudo chown $USER:$GROUP /opt/selenium   &&
      CD_VERSION=$(if [ ${CHROME_DRIVER_VERSION:-latest} = "latest" ]; then echo $(wget
      -qO- https://chromedriver.storage.googleapis.com/LATEST_RELEASE); else echo
      $CHROME_DRIVER_VERSION; fi)   && echo "Using chromedriver version: "$CD_VERSION   &&
      wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CD_VERSION/chromedriver_linux64.zip   &&
      rm -rf /opt/selenium/chromedriver   && unzip /tmp/chromedriver_linux64.zip -d
      /opt/selenium   && rm /tmp/chromedriver_linux64.zip   && mv /opt/selenium/chromedriver
      /opt/selenium/chromedriver-$CD_VERSION   && chmod 755 /opt/selenium/chromedriver-$CD_VERSION   &&
      sudo ln -fs /opt/selenium/chromedriver-$CD_VERSION /usr/bin/chromedriver'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - chrome_launcher.sh
    - /opt/google/chrome/google-chrome
  - CmdLine:
    - sudo chown $USER.$GROUP -R /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo chmod +rx /opt/google/chrome/google-chrome
    Name: run
    PrependShell: true
  - CmdLine:
    - xhost local:root &
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
