{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list \u0026\u0026   apt-get update \u0026\u0026   apt-get -y upgrade \u0026\u0026   apt-get install -y build-essential pkg-config apt-utils libncurses-dev libreadline-dev sqlite3 \u0026\u0026   apt-get install -y git wget mercurial libssl-dev libfreetype6-dev libxft-dev libsqlite3-dev openssl \u0026\u0026   apt-get install -y libjpeg-dev liblapack-dev gfortran python-opencv libbz2-dev \u0026\u0026   apt-get install -y cmake libjpeg8-dev libtiff4-dev libjasper-dev libpng12-dev libgtk2.0-dev \u0026\u0026   apt-get install -y libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libatlas-base-dev gfortran"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "hg clone https://hg.python.org/cpython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/dimart/pokemon_recognition.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/Itseez/opencv.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/Itseez/opencv_contrib.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://raw.githubusercontent.com/kuleshov/cs228-material/master/tutorials/python/cs228-python-tutorial.ipynb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 cd /root/cpython/     \u0026\u0026 hg checkout -r v2.7.13     \u0026\u0026 ./configure --enable-shared     \u0026\u0026 LD_RUN_PATH=/usr/local/lib make     \u0026\u0026 make install     \u0026\u0026 python -m ensurepip     \u0026\u0026 pip install pip --upgrade     \u0026\u0026 pip install virtualenv --upgrade     \u0026\u0026 pip install jupyter[all] --upgrade     \u0026\u0026 pip install matplotlib --upgrade     \u0026\u0026 pip install Pillow --upgrade     \u0026\u0026 pip install SciPy --upgrade     \u0026\u0026 pip install sklearn --upgrade     \u0026\u0026 pip install bunch --upgrade     \u0026\u0026 pip install scikit-image --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 ln -s /usr/lib/python2.7/dist-packages/cv2.so /usr/local/lib/python2.7/site-packages/     \u0026\u0026 cd /root/opencv_contrib/     \u0026\u0026 git checkout 3.1.0     \u0026\u0026 cd /root/opencv/     \u0026\u0026 git checkout 3.1.0     \u0026\u0026 mkdir build     \u0026\u0026 cd build     \u0026\u0026 cmake -D OPENCV_EXTRA_MODULES_PATH=/root/opencv_contrib/modules -D WITH_FFMPEG=OFF ..    \u0026\u0026 make -j6     \u0026\u0026 make install     \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 cd /root/cpython/     \u0026\u0026 hg checkout -r v3.6.0     \u0026\u0026 make clean     \u0026\u0026 ./configure --enable-shared     \u0026\u0026 cp Modules/Setup.dist Modules/Setup     \u0026\u0026 make touch     \u0026\u0026 LD_RUN_PATH=/usr/local/lib make     \u0026\u0026 make install     \u0026\u0026 pip3 install jupyter     \u0026\u0026 python2 -m pip install ipykernel     \u0026\u0026 python2 -m ipykernel install --user     \u0026\u0026 python3 -m pip install ipykernel     \u0026\u0026 python3 -m ipykernel install --user     \u0026\u0026 cd /root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/jakevdp/sklearn_tutorial.git     \u0026\u0026 git clone https://github.com/masinoa/machine_learning.git     \u0026\u0026 git clone https://github.com/craffel/theano-tutorial.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./PhotoTest.ipynb",
            "/root/PhotoTest.ipynb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./Pokemon.ipynb",
            "/root/Pokemon.ipynb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./skimage_examples.ipynb",
            "/root/skimage_examples.ipynb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./OpenCV.ipynb",
            "/root/OpenCV.ipynb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./OpenCV_Recognize.ipynb",
            "/root/OpenCV_Recognize.ipynb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./Words_Letters_Recognize.ipynb",
            "/root/Words_Letters_Recognize.ipynb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./Screenshot_2016-02-23-12-47-43.png",
            "/root/Screenshot_2016-02-23-12-47-43.png"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./SciKit-Image.ipynb",
            "/root/SciKit-Image.ipynb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./HighLevelGraphicsJupyter.ipynb",
            "/root/HighLevelGraphicsJupyter.ipynb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./Ipython_core_debug_Trace.ipynb",
            "/root/Ipython_core_debug_Trace.ipynb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./Quandl_and_csv.ipynb",
            "/root/Quandl_and_csv.ipynb"
          ]
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.9.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/usr/bin/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/jupyter",
            "notebook",
            "--allow-root",
            "--no-browser",
            "--port=8888",
            "--ip=*"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}