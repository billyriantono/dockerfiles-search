MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Labels:
    - Key: com.nvidia.volumes.needed
      Value: '"nvidia_driver"'
    Name: label
  - Env:
    - Key: NVIDIA_GPGKEY_SUM
      Value: bd841d59a27a406e513db7d405550894188a4c1cd96bf8aa4f82f1b39e0b5c1c
    Name: env
  - Env:
    - Key: NVIDIA_GPGKEY_FPR
      Value: 889bee522da690103c4b085ed88c3d385c37d3be
    Name: env
  - CmdLine:
    - apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/GPGKEY
      &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n
      +2 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum
      -c --strict - && rm cudasign.pub &&     echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64
      /" > /etc/apt/sources.list.d/cuda.list
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_VERSION
      Value: "7.5"
    Name: env
  - Labels:
    - Key: com.nvidia.cuda.version
      Value: '"7.5"'
    Name: label
  - Env:
    - Key: CUDA_PKG_VERSION
      Value: 7-5=7.5-18
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends --force-yes         curl         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-$CUDA_PKG_VERSION         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION
      &&     ln -s cuda-$CUDA_VERSION /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/cuda/lib" >> /etc/ld.so.conf.d/cuda.conf &&     echo "/usr/local/cuda/lib64"
      >> /etc/ld.so.conf.d/cuda.conf &&     ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64"
      >> /etc/ld.so.conf.d/nvidia.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}
    Name: env
  - Name: workdir
    Path: /usr/local/
  - CmdLine:
    - curl http://developer.download.nvidia.com/compute/redist/cudnn/v4/cudnn-7.0-linux-x64-v4.0-prod.tgz
      -O
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvzf cudnn-7.0-linux-x64-v4.0-prod.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+r /usr/local/cuda/lib64/libcudnn*
    Name: run
    PrependShell: true
  - CmdLine:
    - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64"
    Name: run
    PrependShell: true
  - CmdLine:
    - export CUDA_HOME=/usr/local/cuda
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python-numpy         python-pip         python-scipy         &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm
      get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip --no-cache-dir install         ipykernel         jupyter         matplotlib
      \tsklearn         &&     python -m ipykernel.kernelspec"
    Name: run
    PrependShell: true
  - Env:
    - Key: TENSORFLOW_VERSION
      Value: 0.8.0
    Name: env
  - CmdLine:
    - pip --no-cache-dir install     http://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /root/.jupyter/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run_jupyter.sh
    - /
  - Name: expose
    Ports:
    - "6006"
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - rm -rf /notebooks/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/notebooks"'
  - CmdLine:
    - /run_jupyter.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
