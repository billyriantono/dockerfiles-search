MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - CmdLine:
    - 'apt-get update -q &&     apt-get install -qy squid3 curl iptables &&     rm
      -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&     :'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'curl -sSL "https://github.com/jwilder/dockerize/releases/download/v0.2.0/dockerize-linux-amd64-v0.2.0.tar.gz"       |
      tar -C /usr/local/bin -xzv &&     chmod +x /usr/local/bin/dockerize &&     :'
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - squid3
    - -N
    Name: cmd
    PrependShell: false
  - Env:
    - Key: SQUID3
      Value: /usr/sbin/squid3
    - Key: APP_ROOT
      Value: '"/app"'
    - Key: CONFIG_DIR
      Value: '"/app/etc"'
    - Key: LOG_DIR
      Value: '"/var/log/squid3"'
    - Key: CACHE_DIR
      Value: '"/var/cache/squid3"'
    - Key: CACHE_MEM
      Value: '"64 MB"'
    - Key: MAX_OBJECT_SIZE_IN_MEMORY
      Value: '"10240 KB"'
    - Key: HTTP_PORT
      Value: "3142"
    Name: env
  - Name: expose
    Ports:
    - $HTTP_PORT
  - Env:
    - Key: PATH
      Value: '"$APP_ROOT/image/bin:$APP_ROOT/image/sbin:$PATH"'
    Name: env
  - CmdLine:
    - 'mkdir -pv "$CONFIG_DIR" "$CACHE_DIR" "$LOG_DIR" &&     chown -v proxy:proxy
      "$CONFIG_DIR" "$CACHE_DIR" "$LOG_DIR" &&     ln -sfv "$APP_ROOT/image/entrypoint"
      / &&     :'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $APP_ROOT
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - image
    - image
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
