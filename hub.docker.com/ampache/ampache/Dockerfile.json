{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "lachlan-00",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MYSQL_PASS",
              "Value": "**Random**"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "create_mysql_admin_user.sh",
            "run.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "001-ampache.conf",
            "/etc/apache2/sites-available/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ampache.cfg.*",
            "/var/temp/"
          ]
        },
        {
          "CmdLine": [
            "chmod 0755 /*.sh     \u0026\u0026  chmod +x /*.sh     \u0026\u0026  apt-get -q -q update     \u0026\u0026  apt-get -q -q -y install --no-install-recommends wget gnupg ca-certificates     \u0026\u0026  echo 'deb http://download.videolan.org/pub/debian/stable/ /' \u003e\u003e /etc/apt/sources.list.d/videolan.list     \u0026\u0026  wget -qO - https://download.videolan.org/pub/debian/videolan-apt.asc | apt-key add -     \u0026\u0026  apt-get -q -q update     \u0026\u0026  apt-get -q -q -y upgrade --no-install-recommends     \u0026\u0026  apt-get -q -q -y install --no-install-recommends           inotify-tools mysql-server apache2 php php-json           php-curl php-mysql php-gd php-xml composer libev-libevent-dev           pwgen lame libvorbis-dev vorbis-tools flac           libmp3lame-dev libfaac-dev libtheora-dev libvpx-dev           libavcodec-extra ffmpeg git cron     \u0026\u0026  mkdir -p /var/run/mysqld     \u0026\u0026  chown -R mysql /var/run/mysqld     \u0026\u0026  rm -rf /var/lib/mysql/* /var/www/* /etc/apache2/sites-enabled/*     \u0026\u0026  wget -qO - https://github.com/ampache/ampache/archive/master.tar.gz           | tar -C /var/www -xzf - ampache-master --strip=1     \u0026\u0026  mv /var/www/rest/.htac* /var/www/rest/.htaccess     \u0026\u0026  mv /var/www/play/.htac* /var/www/play/.htaccess     \u0026\u0026  mv /var/www/channel/.htac* /var/www/channel/.htaccess     \u0026\u0026  chown -R www-data:www-data /var/www     \u0026\u0026  chmod -R 775 /var/www     \u0026\u0026  su -s /bin/sh -c 'cd /var/www \u0026\u0026 composer install --prefer-source --no-interaction' www-data     \u0026\u0026  apt-get purge -q -q -y --autoremove git wget ca-certificates gnupg composer     \u0026\u0026  ln -s /etc/apache2/sites-available/001-ampache.conf /etc/apache2/sites-enabled/     \u0026\u0026  a2enmod rewrite     \u0026\u0026  rm -rf /var/cache/* /tmp/* /var/tmp/* /root/.cache /var/www/.composer     \u0026\u0026  find /var/www -type d -name '.git' -print0 | xargs -0 -L1 -- rm -rf     \u0026\u0026  echo '30 7 * * *   /usr/bin/php /var/www/bin/catalog_update.inc' | crontab -u www-data -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/mysql",
            "/var/lib/mysql",
            "/media",
            "/var/www/config",
            "/var/www/themes"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}