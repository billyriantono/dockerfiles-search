MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Maintainer: Lautis Sun <lautis0503@gmail.com>
    Name: maintainer
  - Env:
    - Key: NETSPEEDER_DEP
      Value: libnet libpcap
    Name: env
  - Env:
    - Key: NETSPEEDER_BUILD_DEP
      Value: libnet-dev libpcap-dev
    Name: env
  - Env:
    - Key: NETSPEEDER_URL
      Value: https://github.com/snooda/net-speeder.git
    Name: env
  - Env:
    - Key: NETSPEEDER_DIR
      Value: net-speeder
    Name: env
  - CmdLine:
    - set -ex     && apk --no-cache --update add $NETSPEEDER_DEP $NETSPEEDER_BUILD_DEP
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && apk add --no-cache --virtual .build-deps                                 git                                 autoconf                                 automake                                 build-base                                 curl                                 libev-dev                                 libtool                                 linux-headers                                 udns-dev                                 libsodium-dev                                 mbedtls-dev                                 pcre-dev                                 tar                                 udns-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && git clone $NETSPEEDER_URL $NETSPEEDER_DIR     && cd $NETSPEEDER_DIR     &&
      sh build.sh     && mv net_speeder /usr/local/bin/     && cd ..     && rm -rf
      $NETSPEEDER_DIR     && apk del --purge $NETSPEEDER_BUILD_DEP
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex     && git clone https://github.com/shadowsocks/shadowsocks-libev.git
      /usr/src/ss     && cd /usr/src/ss \t&& git submodule update --init --recursive
      \t&& ./autogen.sh     && ./configure --prefix=/usr --disable-documentation     &&
      make install     && cd /     && runDeps=\"$(         scanelf --needed --nobanner
      /usr/bin/ss-*             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\"
      $2 }'             | xargs -r apk info --installed             | sort -u     )\"
      \    && apk add --no-cache --virtual .run-deps $runDeps     && apk del .build-deps
      \    && rm -rf /tmp/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: SERVER_ADDR
      Value: 0.0.0.0
    Name: env
  - Env:
    - Key: SERVER_PORT
      Value: "8388"
    Name: env
  - Env:
    - Key: PASSWORD
      Value: "1234567890"
    Name: env
  - Env:
    - Key: METHOD
      Value: aes-256-cfb
    Name: env
  - Env:
    - Key: TIMEOUT
      Value: "3600"
    Name: env
  - Env:
    - Key: DNS_ADDR
      Value: 8.8.8.8
    Name: env
  - Name: expose
    Ports:
    - $SERVER_PORT/tcp
  - Name: expose
    Ports:
    - $SERVER_PORT/udp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /usr/local/bin/net_speeder
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
