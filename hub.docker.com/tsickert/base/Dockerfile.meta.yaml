MetaArgs: null
Stages:
- BaseName: archlinux/base
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Torben Sickert <info@torben.website>"'
    Name: label
  - Labels:
    - Key: Description
      Value: '"base"'
    - Key: Vendor
      Value: '"thaibault products"'
    - Key: Version
      Value: '"1.0"'
    Name: label
  - Env:
    - Key: APPLICATION_PATH
      Value: /application/
    Name: env
  - Env:
    - Key: APPLICATION_USER_ID_INDICATOR_FILE_PATH
      Value: /application/package.json
    Name: env
  - Env:
    - Key: BRANCH
      Value: master
    Name: env
  - Env:
    - Key: COMMAND
      Value: '''echo You have to set the \"COMMAND\" environment variale.'''
    Name: env
  - Env:
    - Key: DECRYPT
      Value: "false"
    Name: env
  - Env:
    - Key: ENCRYPTED_PATHS
      Value: '"${APPLICATION_PATH}encrypted/"'
    Name: env
  - Env:
    - Key: DECRYPTED_PATHS
      Value: '"/tmp/plain/"'
    Name: env
  - Env:
    - Key: DEFAULT_MAIN_USER_GROUP_ID
      Value: "100"
    Name: env
  - Env:
    - Key: DEFAULT_MAIN_USER_ID
      Value: "1000"
    Name: env
  - Env:
    - Key: ENVIRONMENT_FILE_PATHS
      Value: '"/etc/containerBase/environment.sh ${APPLICATION_PATH}serviceHandler/environment.sh
        ${APPLICATION_PATH}environment.sh"'
    Name: env
  - Env:
    - Key: INITIALIZING_FILE_PATH
      Value: /usr/bin/initialize
    Name: env
  - Env:
    - Key: INSTALLER_USER_NAME
      Value: installer
    Name: env
  - Env:
    - Key: KNOWN_HOSTS
      Value: ''''''
    Name: env
  - Env:
    - Key: MAIN_USER_GROUP_NAME
      Value: users
    Name: env
  - Env:
    - Key: MAIN_USER_NAME
      Value: application
    Name: env
  - Env:
    - Key: MIRROR_AREA_PATTERN
      Value: Germany
    Name: env
  - Env:
    - Key: PASSWORD_FILE_PATHS
      Value: '"${APPLICATION_PATH}.encryptionPassword"'
    Name: env
  - Env:
    - Key: PRIVATE_SSH_KEY
      Value: ''''''
    Name: env
  - Env:
    - Key: PUBLIC_SSH_KEY
      Value: ''''''
    Name: env
  - Env:
    - Key: REPOSITORY_URL
      Value: https://github.com/thaibault/containerbase.git
    Name: env
  - Env:
    - Key: STANDALONE
      Value: "true"
    Name: env
  - Name: workdir
    Path: $APPLICATION_PATH
  - Name: user
    User: root
  - CmdLine:
    - pacman                 --needed                 --noconfirm                 --noprogressbar                 --refresh                 --sync                 base                 gnupg                 nawk
      &&             rm /var/cache/* --recursive --force
    Name: run
    PrependShell: true
  - CmdLine:
    - mv                 /etc/pacman.d/mirrorlist.pacnew                 /etc/pacman.d/mirrorlist                 &>/dev/null
      ||                 true;             cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.orig
      &&             awk                 '/^## '$MIRROR_AREA_PATTERN'$/{f=1}f==0{next}/^$/{exit}{print
      substr($0, 2)}'                 /etc/pacman.d/mirrorlist.orig                 >/etc/pacman.d/mirrorlist
      &&             rm --force --recursive /etc/pacman.d/gnupg &&             pacman-key
      --init &&             pacman-key --populate archlinux &&             pacman-key
      --refresh-keys
    Name: run
    PrependShell: true
  - CmdLine:
    - pacman                 --needed                 --noconfirm                 --noprogressbar                 --refresh                 --sync                 --sysupgrade
      &&             pacman                 --needed                 --noconfirm                 --sync                 neovim                 openssh
      &&             rm /var/cache/* --recursive --force
    Name: run
    PrependShell: true
  - CmdLine:
    - pacman                 --needed                 --noconfirm                 --noprogressbar                 --sync                 base-devel                 gocryptfs                 git
      &&             rm /var/cache/* --recursive --force &&             echo user_allow_other
      >> /etc/fuse.conf &&             mkdir --parents /etc/containerBase
    Name: run
    PrependShell: true
  - CmdLine:
    - git                 clone                 --depth 1                 --no-single-branch                 "$REPOSITORY_URL"                 /tmp/containerbase
      &&             pushd /tmp/containerbase &&             cp ./configure-user.sh
      /usr/bin/configure-user &&             cp ./configure-runtime-user.sh /usr/bin/configure-runtime-user
      &&             cp ./retrieve-application.sh /usr/bin/retrieve-application &&             cp
      ./prepare-initializer.sh /usr/bin/prepare-initializer &&             popd &&             rm
      --recursive /tmp/containerbase
    Name: run
    PrependShell: true
  - CmdLine:
    - configure-user &&             useradd --create-home --no-user-group "${INSTALLER_USER_NAME}"
      &&             echo                 -e                 "\n\n%users ALL=(ALL)
      ALL\n${INSTALLER_USER_NAME} ALL=(ALL) NOPASSWD:/usr/bin/pacman,/usr/bin/rm"                 >>/etc/sudoers
    Name: run
    PrependShell: true
  - Name: user
    User: $INSTALLER_USER_NAME
  - CmdLine:
    - pushd /tmp &&             git clone https://aur.archlinux.org/yay.git &&             pushd
      yay &&             /usr/bin/makepkg --install --needed --noconfirm --syncdeps
      &&             popd &&             rm --force --recursive yay &&             popd
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - retrieve-application
    Name: run
    PrependShell: true
  - CmdLine:
    - env >/etc/default_environment
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e '#!/usr/bin/bash\n\nprepare-initializer && \\\nset -e\nsource configure-runtime-user
      /'                 >"$INITIALIZING_FILE_PATH" &&             chmod +x "$INITIALIZING_FILE_PATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/initialize
    Name: cmd
    PrependShell: true
  From:
    Image: archlinux/base
  Name: ""
  Platform: ""
  SourceCode: FROM        archlinux/base
