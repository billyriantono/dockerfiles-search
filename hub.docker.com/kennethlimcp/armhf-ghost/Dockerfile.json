{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "kennethlimcp/armv7hf-debian-qemu:latest",
      "SourceCode": "FROM kennethlimcp/armv7hf-debian-qemu:latest",
      "Platform": "",
      "From": {
        "Image": "kennethlimcp/armv7hf-debian-qemu:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "cross-build-start"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "groupadd user \u0026\u0026 useradd --create-home --home-dir /home/user -g user user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y \t\tca-certificates \t\twget \t\tcurl \t--no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t\u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t\u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t\u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t\u0026\u0026 chmod +x /usr/local/bin/gosu \t\u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GHOST_SOURCE",
              "Value": "/usr/src/ghost"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$GHOST_SOURCE"
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_4.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GHOST_VERSION",
              "Value": "0.11.11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "buildDeps=' \tnode-gyp \tbuild-essential \tpython-software-properties \tg++ \tgcc \tmake \tpython \tunzip \t' \t\u0026\u0026 set -x \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 wget -O ghost.zip \"https://github.com/TryGhost/Ghost/releases/download/${GHOST_VERSION}/Ghost-${GHOST_VERSION}.zip\" \t\u0026\u0026 unzip ghost.zip \t\u0026\u0026 npm install --production \t\u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o  APT::AutoRemove::SuggestsImportant=false $buildDeps \t\u0026\u0026 rm ghost.zip \t\u0026\u0026 npm cache clean \t\u0026\u0026 rm -rf /tmp/npm*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GHOST_CONTENT",
              "Value": "/var/lib/ghost"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$GHOST_CONTENT\" \u0026\u0026 chown -R user:user \"$GHOST_CONTENT\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "$GHOST_CONTENT"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "cross-build-end"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "2368"
          ]
        },
        {
          "CmdLine": [
            "npm",
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}