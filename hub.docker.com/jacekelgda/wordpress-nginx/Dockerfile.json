{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "million12/centos-supervisor:latest",
      "SourceCode": "FROM million12/centos-supervisor:latest",
      "Platform": "",
      "From": {
        "Image": "million12/centos-supervisor:latest"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/var/www"
          ]
        },
        {
          "CmdLine": [
            "rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm \u0026\u0026     yum install -y nginx \u0026\u0026     yum clean all \u0026\u0026     groupmod --gid 80 --new-name www nginx \u0026\u0026     usermod --uid 80 --home /data/www --gid 80 --login www --shell /bin/bash --comment www nginx \u0026\u0026     rm -rf /etc/nginx/*.d /etc/nginx/*_params"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y yum-utils \u0026\u0026     rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm \u0026\u0026     yum-config-manager -q --enable remi \u0026\u0026     yum-config-manager -q --enable remi-php56 \u0026\u0026     yum install -y php-fpm php-bcmath php-cli php-gd php-intl php-mbstring php-mcrypt php-mysql php-opcache php-pdo \u0026\u0026     yum install -y --disablerepo=epel php-pecl-redis php-pecl-yaml \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RDS_HOSTNAME",
              "Value": "foo"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RDS_DB_NAME",
              "Value": "foo"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RDS_PASSWORD",
              "Value": "foo"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RDS_USERNAME",
              "Value": "foo"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RDS_PORT",
              "Value": "foo"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/images/php/container-files/config",
            "/config"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/images/php/container-files/etc/nginx",
            "/etc/nginx"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/images/php/container-files/etc/php-fpm.d",
            "/etc/php-fpm.d"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/images/php/container-files/etc/supervisor.d",
            "/etc/supervisor.d"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/images/php/container-files/etc/php.d",
            "/etc/php.d"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/images/php/container-files/etc/php-fpm.conf",
            "/etc/php-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/images/php/container-files/install-wp.sh",
            "/install-wp.sh"
          ]
        },
        {
          "CmdLine": [
            "yum install -y ruby ruby-devel nodejs npm zlib-devel libpng-devel \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv composer.phar /usr/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install mysql -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        }
      ]
    }
  ]
}