{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:stable-git",
      "SourceCode": "FROM docker:stable-git",
      "Platform": "",
      "From": {
        "Image": "docker:stable-git"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk add --no-cache --update     bash     c-ares-dev     openssl     openssl-dev     ca-certificates     binutils-gold     curl-dev     curl     autoconf     g++     gcc     gnupg     libgcc     linux-headers     make     python     nodejs     nodejs-npm     \u0026\u0026 rm -r /var/cache/apk     \u0026\u0026 rm -r /usr/share/man"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl \"https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get\" | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "helm init --client-only \u0026\u0026     helm plugin install \"https://github.com/hypnoglow/helm-s3.git\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add --virtual .awscli-deps py2-pip py-setuptools \u0026\u0026     apk --no-cache add groff less python2 \u0026\u0026     pip --no-cache-dir install awscli \u0026\u0026     apk del .awscli-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --rc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH\""
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}