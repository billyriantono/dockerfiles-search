{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.0.33-fpm",
      "SourceCode": "FROM php:7.0.33-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.0.33-fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Mustafa Salim \u003cmustafalim225@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         apt-utils         apt-transport-https         gnupg         libpq-dev         zlib1g-dev         libicu-dev          libbz2-dev         libfreetype6-dev         libjpeg62-turbo-dev         libpng-dev         libmemcached-dev         zlib1g-dev        libxrender1         libfontconfig1         libxext6         libzip-dev         libmagickwand-dev         git         vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install -j$(nproc) bcmath bz2 exif intl mysqli opcache pdo_mysql pdo_pgsql sockets zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install redis-4.3.0 memcached-3.1.3 xdebug-2.7.2 imagick-3.4.4     \u0026\u0026 docker-php-ext-enable redis memcached xdebug imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -     \u0026\u0026 curl https://packages.microsoft.com/config/debian/9/prod.list         \u003e /etc/apt/sources.list.d/mssql-release.list     \u0026\u0026 apt-get update     \u0026\u0026 ACCEPT_EULA=Y apt-get install -y --no-install-recommends         unixodbc-dev         msodbcsql17"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install sqlsrv-5.3.0 pdo_sqlsrv-5.3.0     \u0026\u0026 docker-php-ext-enable sqlsrv pdo_sqlsrv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --fail --location --retry 3 --output /tmp/installer.php     --url https://raw.githubusercontent.com/composer/getcomposer.org/cb19f2aa3aeaa2006c0cd69a7ef011eb31463067/web/installer     \u0026\u0026 php -r \"         \\$signature = '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5';         \\$hash = hash('sha384', file_get_contents('/tmp/installer.php'));         if (! hash_equals(\\$signature, \\$hash)) {             unlink('/tmp/installer.php');             echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL;             exit(1);         }\"     \u0026\u0026 php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=1.8.5     \u0026\u0026 composer --ansi --version --no-interaction     \u0026\u0026 rm -f /tmp/installer.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean     \u0026\u0026 apt-get autoremove --purge     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        }
      ]
    }
  ]
}