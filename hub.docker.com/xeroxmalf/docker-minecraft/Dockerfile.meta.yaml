MetaArgs: null
Stages:
- BaseName: lsiobase/alpine
  Commands:
  - Maintainer: xeroxmalf
    Name: maintainer
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Key: BUILD_CORES
    Name: arg
    Value: null
  - Labels:
    - Key: build_version
      Value: '"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}"'
    Name: label
  - Env:
    - Key: PKG_CONFIG_PATH
      Value: /usr/local/lib/pkgconfig
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /opt/jdk
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${JAVA_HOME}/bin
    Name: env
  - CmdLine:
    - "NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF`} &&  apk add --no-cache
      \        ca-certificates \twget \tdtach \ttar &&  wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.25-r0/glibc-2.25-r0.apk
      -O /tmp/glibc-2.25-r0.apk &&  apk add --allow-untrusted --no-cache /tmp/glibc-2.25-r0.apk
      && mkdir /opt && cd /opt && wget --no-check-certificate -c --header \"Cookie:
      oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u121-b13/e9e7ea248e2c4826b92b3f075a80e441/jdk-8u121-linux-x64.tar.gz
      && tar xvf jdk-8u121-linux-x64.tar.gz && rm jdk-8u121-linux-x64.tar.gz && cd
      jdk1.8.0_121 && ln -s /opt/jdk1.8.0_121/ /opt/jdk && rm -rf /opt/jdk/*src.zip
      \           /opt/jdk/lib/missioncontrol            /opt/jdk/lib/visualvm            /opt/jdk/lib/*javafx*
      \           /opt/jdk/jre/lib/plugin.jar            /opt/jdk/jre/lib/ext/jfxrt.jar
      \           /opt/jdk/jre/bin/javaws            /opt/jdk/jre/lib/javaws.jar            /opt/jdk/jre/lib/desktop
      \           /opt/jdk/jre/plugin            /opt/jdk/jre/lib/deploy*            /opt/jdk/jre/lib/*javafx*
      \           /opt/jdk/jre/lib/*jfx*            /opt/jdk/jre/lib/amd64/libdecora_sse.so
      \           /opt/jdk/jre/lib/amd64/libprism_*.so            /opt/jdk/jre/lib/amd64/libfxplugins.so
      \           /opt/jdk/jre/lib/amd64/libglass.so            /opt/jdk/jre/lib/amd64/libgstreamer-lite.so
      \           /opt/jdk/jre/lib/amd64/libjavafx*.so            /opt/jdk/jre/lib/amd64/libjfx*.so
      &&  rm -rf         /tmp/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - Name: expose
    Ports:
    - "25565"
  - Name: volume
    Volumes:
    - /config
  From:
    Image: lsiobase/alpine
  Name: ""
  Platform: ""
  SourceCode: FROM lsiobase/alpine
