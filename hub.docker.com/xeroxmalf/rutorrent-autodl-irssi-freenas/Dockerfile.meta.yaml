MetaArgs: null
Stages:
- BaseName: lsiobase/alpine:3.8
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Key: BUILD_CORES
    Name: arg
    Value: null
  - Key: MEDIAINF_VER
    Name: arg
    Value: '"18.08.1"'
  - Key: RTORRENT_VER
    Name: arg
    Value: '"0.9.7"'
  - Key: LIBTORRENT_VER
    Name: arg
    Value: '"0.13.7"'
  - Key: CURL_VER
    Name: arg
    Value: '"7.61.1"'
  - Env:
    - Key: PKG_CONFIG_PATH
      Value: /usr/local/lib/pkgconfig
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/lib
    Name: env
  - CmdLine:
    - "NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF`} &&  apk add --no-cache
      \        ca-certificates \t\tpython3-dev         fcgi         ffmpeg         geoip
      \        gzip         logrotate         nginx \t\tdtach         tar         unrar
      \        unzip         wget \t\tirssi \t\tirssi-perl \t\tzlib \t\tzlib-dev \t\tlibxml2-dev
      \t\tperl-archive-zip \t\tperl-net-ssleay \t\tperl-digest-sha1 \t\tgit \t\tlibressl
      \t\tbinutils \t\tphp7         php7-cgi         php7-fpm         php7-json          php7-mbstring
      \t\tphp7-sockets         php7-pear         zip &&  apk add --no-cache --virtual=build-dependencies
      \        autoconf         automake         cppunit-dev \t\tperl-dev         file
      \        g++         gcc         libtool         make         ncurses-dev \t\tbuild-base
      \t\tlibtool \t\tsubversion \t\tcppunit-dev \t\tlinux-headers \t\tcurl-dev         libressl-dev
      && cd /tmp && mkdir curl && cd curl && wget -qO- https://curl.haxx.se/download/curl-${CURL_VER}.tar.gz
      | tar xz --strip 1 && ./configure --with-ssl && make -j ${NB_CORES} && make
      install && ldconfig /usr/bin && ldconfig /usr/lib &&  mkdir -p         /usr/share/webapps/rutorrent
      \        /defaults/rutorrent-conf &&  git clone https://github.com/Novik/ruTorrent.git
      \        /usr/share/webapps/rutorrent/ &&  mv /usr/share/webapps/rutorrent/conf/*
      \        /defaults/rutorrent-conf/ &&  rm -rf         /defaults/rutorrent-conf/users
      &&  perl -MCPAN -e 'my $c = \"CPAN::HandleConfig\"; $c->load(doit => 1, autoconfig
      => 1); $c->edit(prerequisites_policy => \"follow\"); $c->edit(build_requires_install_policy
      => \"yes\"); $c->commit' &&  curl -L http://cpanmin.us | perl - App::cpanminus
      && \tcpanm HTML::Entities XML::LibXML JSON JSON::XS && cd /tmp && mkdir xmlrpc-c
      && cd /tmp/xmlrpc-c && wget -qO- https://sourceforge.net/projects/xmlrpc-c/files/latest/download?source=files
      | tar xz --strip 1 && ./configure --with-libwww-ssl --disable-wininet-client
      --disable-curl-client --disable-libwww-client --disable-abyss-server --disable-cgi-server
      && make -j ${NB_CORES} && make install && cd /tmp && mkdir libtorrent && cd
      libtorrent && wget -qO- http://rtorrent.net/downloads/libtorrent-${LIBTORRENT_VER}.tar.gz
      | tar xz --strip 1 && ./autogen.sh && ./configure && make -j ${NB_CORES} &&
      make install && cd /tmp && mkdir rtorrent && cd rtorrent && wget -qO- http://rtorrent.net/downloads/rtorrent-${RTORRENT_VER}.tar.gz
      | tar xz --strip 1 && ./autogen.sh && ./configure --with-xmlrpc-c && make -j
      ${NB_CORES} && make install &&  curl -o  /tmp/libmediainfo.tar.gz -L         \"http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINF_VER}/MediaInfo_DLL_${MEDIAINF_VER}_GNU_FromSource.tar.gz\"
      &&  curl -o  /tmp/mediainfo.tar.gz -L         \"http://mediaarea.net/download/binary/mediainfo/${MEDIAINF_VER}/MediaInfo_CLI_${MEDIAINF_VER}_GNU_FromSource.tar.gz\"
      &&  mkdir -p         /tmp/libmediainfo         /tmp/mediainfo &&  tar xf /tmp/libmediainfo.tar.gz
      -C         /tmp/libmediainfo --strip-components=1 &&  tar xf /tmp/mediainfo.tar.gz
      -C         /tmp/mediainfo --strip-components=1 &&  cd /tmp/libmediainfo &&         ./SO_Compile.sh
      &&  cd /tmp/libmediainfo/ZenLib/Project/GNU/Library &&         make install
      &&  cd /tmp/libmediainfo/MediaInfoLib/Project/GNU/Library &&         make install
      &&  cd /tmp/mediainfo &&         ./CLI_Compile.sh &&  cd /tmp/mediainfo/MediaInfo/Project/GNU/CLI
      &&         make install &&  apk del --purge         build-dependencies &&  rm
      -rf         /tmp/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - Name: expose
    Ports:
    - "443"
    - "51500"
  - Name: volume
    Volumes:
    - /config
    - /downloads
    - /postprocess
  From:
    Image: lsiobase/alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM lsiobase/alpine:3.8
