{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "foundation",
      "BaseName": "php:7.3.11-fpm-buster",
      "SourceCode": "FROM php:7.3.11-fpm-buster as foundation",
      "Platform": "",
      "As": "foundation",
      "From": {
        "Image": "php:7.3.11-fpm-buster"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "APP_DIR",
              "Value": "/usr/src/app"
            },
            {
              "Key": "LIBMAXMINDDB_VERSION",
              "Value": "1.3.2"
            },
            {
              "Key": "NGINX_VERSION",
              "Value": "1.16.1"
            },
            {
              "Key": "NGX_HTTP_GEOIP2_MODULE_VERSION",
              "Value": "3.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD_DEPENDENCIES",
              "Value": "automake   build-essential   bzip2   cmake   curl   libbz2-dev   libgeoip-dev   libgmp-dev   libicu-dev   libjpeg-dev   libmemcached-dev   libpcre3-dev   libpng-dev   libpq-dev   libssl-dev   libtidy-dev   libuv1-dev   libzip-dev   libxml2-dev   zlib1g-dev"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-o",
            "pipefail",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "set -eux   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y --no-install-recommends     acl     geoip-database     git     libfontconfig     libaio1     libjpeg-turbo-progs     libodbc1     libpq5     libtool     locales     supervisor     unzip     $BUILD_DEPENDENCIES   \u0026\u0026 mkdir -p /var/lib/php/session   \u0026\u0026 chown -R www-data.www-data /var/lib/php/session   \u0026\u0026 pecl install apcu-5.1.18   \u0026\u0026 pecl install geoip-1.1.1   \u0026\u0026 pecl install igbinary-3.0.1   \u0026\u0026 pecl install --nobuild memcached-3.1.4   \u0026\u0026 pecl install --nobuild redis-5.1.1   \u0026\u0026 docker-php-ext-install     bcmath     bz2     exif     gd     iconv     intl     mbstring     opcache     pdo_mysql     pdo_pgsql     pgsql     phar     posix     simplexml     soap     sockets     tidy     zip   \u0026\u0026 cd \"$(pecl config-get temp_dir)/memcached\"   \u0026\u0026 phpize   \u0026\u0026 ./configure --enable-memcached-igbinary   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 cd \"$(pecl config-get temp_dir)/redis\"   \u0026\u0026 phpize   \u0026\u0026 ./configure --enable-redis-igbinary   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 cd -   \u0026\u0026 mv /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini   \u0026\u0026 docker-php-ext-enable     apcu     geoip     igbinary     memcached     redis   \u0026\u0026 git clone --depth 1 --branch \"${NGX_HTTP_GEOIP2_MODULE_VERSION}\"     https://github.com/leev/ngx_http_geoip2_module.git     /usr/src/ngx_http_geoip2_module   \u0026\u0026 mkdir -p /usr/src/libmaxminddb   \u0026\u0026 curl -sSL \"https://github.com/maxmind/libmaxminddb/releases/download/${LIBMAXMINDDB_VERSION}/libmaxminddb-${LIBMAXMINDDB_VERSION}.tar.gz\"     | tar -xzf - --strip-components 1 -C /usr/src/libmaxminddb   \u0026\u0026 cd /usr/src/libmaxminddb   \u0026\u0026 ./configure   \u0026\u0026 make   \u0026\u0026 make check   \u0026\u0026 make install   \u0026\u0026 ldconfig   \u0026\u0026 mkdir -p /usr/src/nginx   \u0026\u0026 curl -sSL \"http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\"     | tar -xzf - --strip-components 1 -C /usr/src/nginx   \u0026\u0026 cd /usr/src/nginx   \u0026\u0026 ./configure     --add-module=/usr/src/ngx_http_geoip2_module     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --group=www-data     --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-log-path=/var/log/nginx/access.log     --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --lock-path=/var/run/nginx.lock     --pid-path=/var/run/nginx.pid     --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --user=www-data     --with-file-aio     --with-http_mp4_module     --with-http_addition_module     --with-http_auth_request_module     --with-http_flv_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_random_index_module     --with-http_realip_module     --with-http_secure_link_module     --with-http_slice_module     --with-http_ssl_module     --with-http_stub_status_module     --with-http_sub_module     --with-http_v2_module     --with-stream     --with-stream_realip_module     --with-stream_ssl_module     --with-threads   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 mkdir -p /var/cache/nginx   \u0026\u0026 chown -R www-data.www-data /var/cache/nginx   \u0026\u0026 chsh -s /usr/sbin/nologin www-data   \u0026\u0026 mkdir -p /usr/share/GeoIP/   \u0026\u0026 chmod 0755 /usr/share/GeoIP/   \u0026\u0026 curl -sSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz     | tar -xzf - --strip-components 1 -C /usr/share/GeoIP   \u0026\u0026 curl -sSL https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz     | tar -xzf - --strip-components 1 -C /usr/share/GeoIP   \u0026\u0026 curl -sSL http://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN.tar.gz     | tar -xzf - --strip-components 1 -C /usr/share/GeoIP   \u0026\u0026 apt-get purge -y $BUILD_DEPENDENCIES   \u0026\u0026 docker-php-source delete   \u0026\u0026 pecl clear-cache   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf     /tmp/*     /usr/share/GeoIP/*.gz     /usr/src/*     /var/cache/debconf     /var/lib/apt/lists/*   \u0026\u0026 find /var/log -type f -print0     | xargs -0 rm -f"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/nginx/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "composer:1.9.0",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/composer",
            "/usr/bin/composer"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "app.conf",
            "/etc/supervisor/conf.d/app.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "mime.types",
            "/etc/nginx/mime.types"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "zzz-apcu.ini",
            "/usr/local/etc/php/conf.d/zzz-apcu.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "zzz-opcache.ini",
            "/usr/local/etc/php/conf.d/zzz-opcache.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "zzz-php-fpm-tuning.conf",
            "/usr/local/etc/php-fpm.d/zzz-php-fpm-tuning.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "zzz-php-hardening.ini",
            "/usr/local/etc/php/conf.d/zzz-php-hardening.ini"
          ]
        },
        {
          "CmdLine": [
            "chmod 0444   /etc/nginx/mime.types   /etc/nginx/nginx.conf   /etc/supervisor/conf.d/app.conf   /etc/supervisor/supervisord.conf   /usr/local/etc/php-fpm.d/zzz-php-fpm-tuning.conf   /usr/local/etc/php/conf.d/zzz-apcu.ini   /usr/local/etc/php/conf.d/zzz-opcache.ini   /usr/local/etc/php/conf.d/zzz-php-hardening.ini   /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "run",
      "BaseName": "foundation",
      "SourceCode": "FROM foundation as run",
      "Platform": "",
      "As": "run",
      "From": {
        "Stage": {
          "Named": "foundation",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        },
        {
          "Name": "expose",
          "Ports": [
            "443/tcp",
            "80/tcp"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}