MetaArgs: null
Stages:
- BaseName: php:7.2.9-fpm-alpine3.7
  Commands:
  - Maintainer: Azure App Service Container Images <appsvc-images@microsoft.com>
    Name: maintainer
  - Env:
    - Key: SSH_PASSWD
      Value: '"root:Docker!"'
    Name: env
  - Env:
    - Key: NGINX_VERSION
      Value: 1.14.0
    Name: env
  - Env:
    - Key: NGINX_LOG_DIR
      Value: '"/home/LogFiles/nginx"'
    Name: env
  - Env:
    - Key: PHP_HOME
      Value: '"/usr/local/etc/php"'
    Name: env
  - Env:
    - Key: PHP_CONF_DIR
      Value: $PHP_HOME
    Name: env
  - Env:
    - Key: PHP_CONF_FILE
      Value: $PHP_CONF_DIR"/php.ini"
    Name: env
  - Env:
    - Key: MARIADB_DATA_DIR
      Value: '"/home/data/mysql"'
    Name: env
  - Env:
    - Key: MARIADB_LOG_DIR
      Value: '"/home/LogFiles/mysql"'
    Name: env
  - Env:
    - Key: PHPMYADMIN_SOURCE
      Value: '"/usr/src/phpmyadmin"'
    Name: env
  - Env:
    - Key: PHPMYADMIN_HOME
      Value: '"/var/www/phpmyadmin"'
    Name: env
  - Env:
    - Key: HOME_SITE
      Value: '"/var/www/html"'
    Name: env
  - Env:
    - Key: PHPREDIS_VERSION
      Value: 3.1.2
    Name: env
  - CmdLine:
    - "set -ex     && apk update     && apk add --no-cache openssl git net-tools tcpdump
      tcptraceroute vim curl wget bash\t&& cd /usr/bin \t&& wget http://www.vdberg.org/~richard/tcpping
      \t&& chmod 777 tcpping     && apk add --no-cache --virtual build-dependencies
      icu-dev     libxml2-dev freetype-dev libpng-dev libjpeg-turbo-dev g++ make autoconf
      \    && docker-php-source extract     && pecl install xdebug-beta     && docker-php-ext-install
      mysqli     && docker-php-source delete     && apk del build-dependencies     &&
      apk del libmcrypt-dev \t&& curl -sS https://getcomposer.org/installer | php
      -- --install-dir=/usr/bin --filename=composer && composer self-update     &&
      apk add --no-cache openssh-server     && echo \"$SSH_PASSWD\" | chpasswd     &&
      apk add --no-cache mariadb mariadb-client    && apk add --no-cache openrc    &&
      sed -i 's/\"cgroup_add_service/\" # cgroup_add_service/g' /lib/rc/sh/openrc-run.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx
      \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf
      \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log
      \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp
      \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
      \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
      \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module
      \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module
      \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module
      \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module
      \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic
      \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic
      \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module
      \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module
      \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio
      \t\t--with-http_v2_module \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h
      /var/cache/nginx -s /sbin/nologin -G nginx nginx \t&& apk add --no-cache --virtual
      .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev
      \t\tlinux-headers \t\tcurl \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev
      \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz
      \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o
      nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& found=''; \tfor
      server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80
      \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $GPG_KEYS from $server\";
      \t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\"
      && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed
      to fetch GPG key $GPG_KEYS\" && exit 1; \tgpg --batch --verify nginx.tar.gz.asc
      nginx.tar.gz \t&& rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \t&& mkdir -p /usr/src
      \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz \t&& cd /usr/src/nginx-$NGINX_VERSION
      \t&& ./configure $CONFIG --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN)
      \t&& mv objs/nginx objs/nginx-debug \t&& mv objs/ngx_http_xslt_filter_module.so
      objs/ngx_http_xslt_filter_module-debug.so \t&& mv objs/ngx_http_image_filter_module.so
      objs/ngx_http_image_filter_module-debug.so \t&& mv objs/ngx_http_geoip_module.so
      objs/ngx_http_geoip_module-debug.so \t&& mv objs/ngx_stream_geoip_module.so
      objs/ngx_stream_geoip_module-debug.so \t&& ./configure $CONFIG \t&& make -j$(getconf
      _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf /etc/nginx/html/ \t&& mkdir
      /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/ \t&& install -m644 html/index.html
      /usr/share/nginx/html/ \t&& install -m644 html/50x.html /usr/share/nginx/html/
      \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t&& install -m755
      objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so
      \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so
      \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx*
      \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION
      \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst
      /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx
      /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort
      -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print
      \"so:\" $1 }' \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps
      \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/
      \t\t&& apk add --no-cache tzdata \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log
      \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $PHPMYADMIN_SOURCE
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - phpMyAdmin.tar.gz
    - $PHPMYADMIN_SOURCE/phpMyAdmin.tar.gz
  - CmdLine:
    - "set -ex \t&& apk update \t&& apk upgrade \t&& rm -rf /var/cache/apk/*     &&
      rm -rf /tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex\t&& mkdir -p /var/www \t&& chown -R www-data:www-data /var/www \t&&
      rm -rf /var/log/mysql \t&& ln -s $MARIADB_LOG_DIR /var/log/mysql \t&& rm -rf
      /var/log/nginx \t&& ln -s $NGINX_LOG_DIR /var/log/nginx"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sshd_config
    - /etc/ssh/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.ini
    - /usr/local/etc/php/php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - xdebug.ini
    - /usr/local/etc/php/conf.d/xdebug.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - www.conf
    - /usr/local/etc/php/conf.d/www.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hostingstart.html
    - /var/www/html/index.html
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - phpmyadmin-config.inc.php
    - $PHPMYADMIN_SOURCE/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mariadb.cnf
    - /etc/mysql/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - phpmyadmin-nginx.conf
    - $PHPMYADMIN_SOURCE/phpmyadmin-nginx.conf
  - CmdLine:
    - echo "<?php phpinfo();" > /var/www/html/index.php
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init_container.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/init_container.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "2222"
    - "80"
  - CmdLine:
    - init_container.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: php:7.2.9-fpm-alpine3.7
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2.9-fpm-alpine3.7
