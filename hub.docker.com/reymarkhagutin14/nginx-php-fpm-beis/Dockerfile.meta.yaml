MetaArgs: null
Stages:
- BaseName: appsvcorg/nginx-fpm:php7.2.9-local-storage
  Commands:
  - Maintainer: Azure App Service Container Images <appsvc-images@microsoft.com>
    Name: maintainer
  - Env:
    - Key: DOCKER_BUILD_HOME
      Value: '"/dockerbuild"'
    Name: env
  - Env:
    - Key: DRUPAL_HOME
      Value: '"/home/site/wwwroot"'
    Name: env
  - Env:
    - Key: DRUPAL_PRJ
      Value: '"/home/drupal_prj"'
    Name: env
  - Env:
    - Key: MARIADB_DATA_DIR
      Value: '"/home/data/mysql"'
    Name: env
  - Env:
    - Key: MARIADB_LOG_DIR
      Value: '"/home/LogFiles/mysql"'
    Name: env
  - Env:
    - Key: PHPMYADMIN_SOURCE
      Value: '"/usr/src/phpmyadmin"'
    Name: env
  - Env:
    - Key: PHPMYADMIN_HOME
      Value: '"/home/phpmyadmin"'
    Name: env
  - Env:
    - Key: NGINX_LOG_DIR
      Value: '"/home/LogFiles/nginx"'
    Name: env
  - Env:
    - Key: PHP_HOME
      Value: '"/usr/local/etc/php"'
    Name: env
  - Env:
    - Key: PHP_CONF_DIR
      Value: $PHP_HOME
    Name: env
  - Env:
    - Key: PHP_CONF_FILE
      Value: $PHP_CONF_DIR"/php.ini"
    Name: env
  - Env:
    - Key: PHPREDIS_VERSION
      Value: 3.1.2
    Name: env
  - CmdLine:
    - mkdir -p $DOCKER_BUILD_HOME
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $DOCKER_BUILD_HOME
  - CmdLine:
    - "set -ex     && apk update     && apk add --no-cache redis     && docker-php-source
      extract     && curl -L -o /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/$PHPREDIS_VERSION.tar.gz
      \    && tar xfz /tmp/redis.tar.gz     && rm -r /tmp/redis.tar.gz     && mv phpredis-$PHPREDIS_VERSION
      /usr/src/php/ext/redis \t&& apk add --no-cache                              --virtual
      .build-dependencies                   $PHPIZE_DEPS                                zlib-dev
      \                                   cyrus-sasl-dev                              git
      \                                        autoconf                                    g++
      \                                        libtool                                     make
      \                                       pcre-dev                                &&
      apk add --no-cache                              tini                                        libintl
      \                                    icu                                         icu-dev
      \                                    libxml2-dev                                 postgresql-dev
      \                             freetype-dev                                libjpeg-turbo-dev
      \                          libpng-dev                                  gmp                                         gmp-dev
      \                                    libmemcached-dev                            imagemagick-dev
      \                            libssh2                                     libssh2-dev
      \                                libxslt-dev                     \t&& docker-php-ext-configure
      gd \t\t--with-freetype-dir=/usr/include/ \t\t--with-jpeg-dir=/usr/include/ \t\t--with-png-dir=/usr/include/
      \t&& docker-php-ext-install -j \"$(nproc)\" \t\tgd \t\topcache \t\tpdo_mysql
      \t\tpdo_pgsql \t\tzip \t\tredis \t&& pecl install apcu \t&& docker-php-ext-enable
      apcu \t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive
      /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\"
      $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t&& apk add --virtual
      .drupal-phpexts-rundeps $runDeps \t&& apk del .build-dependencies \t&& docker-php-source
      delete"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin
      --filename=composer \t&& composer self-update     && rm -rf /home/.composer
      && export COMPOSER_HOME='/root/.composer/'     && composer global require consolidation/cgr
      \t&& composer_home=$(find / -name .composer)     && ln -s $composer_home/vendor/bin/cgr
      /usr/local/bin/cgr \t&& cgr drush/drush     && ln -s $composer_home/vendor/bin/drush
      /usr/local/bin/drush \t&& cgr predis/predis \t&& apk upgrade \t&& rm -rf /var/cache/apk/*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $DRUPAL_HOME
  - CmdLine:
    - rm -rf $DOCKER_BUILD_HOME
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default.conf
    - /etc/nginx/conf.d/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.ini
    - /usr/local/etc/php/php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - opcache-recommended.ini
    - /usr/local/etc/php/conf.d/opcache-recommended.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - www.conf
    - /usr/local/etc/php/conf.d/www.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zz-docker.conf
    - /usr/local/etc/php-fpm.d/zz-docker.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - phpmyadmin-default.conf
    - $PHPMYADMIN_SOURCE/phpmyadmin-default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - settings.redis.php
    - /usr/src/settings.redis.php
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "2222"
    - "80"
  - CmdLine:
    - entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: appsvcorg/nginx-fpm:php7.2.9-local-storage
  Name: ""
  Platform: ""
  SourceCode: FROM appsvcorg/nginx-fpm:php7.2.9-local-storage
