MetaArgs: null
Stages:
- As: build
  BaseName: alpine:edge
  Commands:
  - Env:
    - Key: GCC_MIRROR
      Value: https://ftpmirror.gnu.org/
    Name: env
  - Env:
    - Key: GCC_VERSION
      Value: 9.1.0
    Name: env
  - Env:
    - Key: BINUTILS_VERSION
      Value: "2.31"
    Name: env
  - Name: workdir
    Path: /tmp/
  - CmdLine:
    - apk update && apk add build-base curl libc6-compat
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL "$GCC_MIRROR/binutils/binutils-$BINUTILS_VERSION.tar.xz" -o "binutils.tar.xz"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL "$GCC_MIRROR/gcc/gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz" -o "gcc.tar.xz"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p binutils && mkdir -p gcc
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xf binutils.tar.xz -C ./binutils --strip-components=1
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xf gcc.tar.xz -C ./gcc --strip-components=1
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p build-binutils && cd build-binutils &&         ../binutils/configure
      --prefix=/tmp/install --target=i686-elf --with-sysroot --disable-nls --disable-werror
    Name: run
    PrependShell: true
  - CmdLine:
    - cd build-binutils &&         make -j4 &&         make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/gcc && ./contrib/download_prerequisites
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ && mkdir -p build-gcc && cd build-gcc &&         ../gcc/configure --prefix=/tmp/install
      --target=i686-elf --disable-nls --enable-languages=c,c++ --without-headers
    Name: run
    PrependShell: true
  - CmdLine:
    - cd build-gcc &&         make -j4 all-gcc &&         make -j4 all-target-libgcc
      &&         make install-gcc &&         make install-target-libgcc
    Name: run
    PrependShell: true
  From:
    Image: alpine:edge
  Name: build
  Platform: ""
  SourceCode: FROM alpine:edge AS build
- BaseName: alpine:edge
  Commands:
  - CmdLine:
    - apk update     && apk add nasm cmake make libc6-compat
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /tmp/install/
    - $HOME/cross-install
  - Env:
    - Key: PATH
      Value: $HOME/cross-install/bin:$PATH
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $HOME/cross-install/lib:$HOME/cross-install/lib64:$PATH
    Name: env
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
