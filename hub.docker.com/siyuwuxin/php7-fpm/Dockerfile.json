{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7-fpm-stretch",
      "SourceCode": "FROM php:7-fpm-stretch",
      "Platform": "",
      "From": {
        "Image": "php:7-fpm-stretch"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Maintainer",
              "Value": "\"Ansley Leung\""
            },
            {
              "Key": "Description",
              "Value": "\"Latest PHP7 fpm Docker image. Use `docker-php-ext-install extension_name` to install Extensions.\""
            },
            {
              "Key": "License",
              "Value": "\"MIT License\""
            },
            {
              "Key": "Version",
              "Value": "\"7.3.8\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Shanghai"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026     echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apt-get update \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y libfreetype6-dev libjpeg62-turbo-dev libpng-dev libicu-dev             libxml2-dev libxslt-dev libzip-dev libbz2-dev libpspell-dev aspell-en             curl libcurl3 libcurl4-openssl-dev libssl-dev libc-client-dev libkrb5-dev             libpcre3 libpcre3-dev libmagickwand-dev libmemcached-dev zlib1g-dev             libpq-dev nghttp2 libnghttp2-dev --no-install-recommends \u0026\u0026     apt-get clean \u0026\u0026 apt-get autoclean \u0026\u0026 apt-get autoremove \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-install gd \u0026\u0026     : \u0026\u0026     docker-php-ext-configure imap --with-kerberos --with-imap-ssl \u0026\u0026     docker-php-ext-install imap \u0026\u0026     : \u0026\u0026     docker-php-ext-configure opcache --enable-opcache \u0026\u0026     docker-php-ext-install opcache \u0026\u0026     : \u0026\u0026     docker-php-ext-install bcmath calendar exif gettext intl pspell pcntl bz2 zip \u0026\u0026     docker-php-ext-install shmop soap sockets sysvmsg sysvsem sysvshm wddx xsl xmlrpc \u0026\u0026     docker-php-ext-install mysqli pdo_mysql pdo_pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=60'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t\techo 'opcache.file_cache=/tmp'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'expose_php = off' \u003e /usr/local/etc/php/conf.d/hide-header-version.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     mkdir -p /usr/local/share/composer \u0026\u0026     export COMPOSER_ALLOW_SUPERUSER=1 \u0026\u0026     export COMPOSER_HOME=/usr/local/share/composer \u0026\u0026     curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer \u0026\u0026     composer g require \"hirak/prestissimo\" \u0026\u0026     composer clearcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     pecl install imagick memcached mongodb oauth psr redis swoole xdebug \u0026\u0026     docker-php-ext-enable imagick memcached mongodb oauth psr redis swoole xdebug \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     cd /tmp \u0026\u0026     export PHP_EXT_DIR=$(php-config --extension-dir) \u0026\u0026     curl -o pdflib.tar.gz https://www.pdflib.com/binaries/PDFlib/920/PDFlib-9.2.0-Linux-x86_64-php.tar.gz -L \u0026\u0026     tar -xvf pdflib.tar.gz \u0026\u0026     mv PDFlib-* pdflib \u0026\u0026 cd pdflib \u0026\u0026     cp bind/php/php-730-nts/php_pdflib.so $PHP_EXT_DIR \u0026\u0026     docker-php-ext-enable php_pdflib \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}