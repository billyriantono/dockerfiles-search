{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-fpm-alpine",
      "SourceCode": "FROM php:7.3-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.3-fpm-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Maintainer",
              "Value": "\"Ansley Leung\""
            },
            {
              "Key": "Description",
              "Value": "\"latest PHP7 fpm Docker image. Use `docker-php-ext-install extension_name` to install Extensions.\""
            },
            {
              "Key": "License",
              "Value": "\"MIT License\""
            },
            {
              "Key": "Version",
              "Value": "\"7.3.12\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Shanghai"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk update \u0026\u0026     apk upgrade \u0026\u0026     apk add --no-cache tzdata \u0026\u0026     cp /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026     echo $TZ \u003e /etc/timezone \u0026\u0026     apk del tzdata \u0026\u0026     rm -rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk add --no-cache autoconf     build-base     curl     git     make     unzip     aspell-dev     bzip2-dev     curl-dev     freetype-dev     gettext-dev     icu-dev     imap-dev     krb5-dev     libbz2     libjpeg-turbo-dev     libpng-dev     libwebp-dev     libxpm-dev     libstdc++     libxml2-dev     libxslt-dev     libzip-dev     mysql-dev     net-snmp-dev     postgresql-dev     openldap-dev     openssl-dev \u0026\u0026     : \u0026\u0026     docker-php-ext-configure gd --with-webp-dir --with-jpeg-dir --with-png-dir         --with-zlib-dir --with-xpm-dir --with-freetype-dir \u0026\u0026     docker-php-ext-install gd \u0026\u0026     : \u0026\u0026     docker-php-ext-configure imap --with-kerberos --with-imap-ssl \u0026\u0026     docker-php-ext-install imap \u0026\u0026     : \u0026\u0026     docker-php-ext-configure ldap --with-libdir=lib/ \u0026\u0026     docker-php-ext-install ldap \u0026\u0026     : \u0026\u0026     docker-php-ext-configure opcache --enable-opcache \u0026\u0026     docker-php-ext-install opcache \u0026\u0026     : \u0026\u0026     docker-php-ext-configure zip --with-libzip \u0026\u0026     docker-php-ext-install zip \u0026\u0026     : \u0026\u0026     docker-php-ext-install bcmath bz2 exif gettext intl mysqli pcntl pdo_mysql pdo_pgsql pspell \u0026\u0026     : \u0026\u0026     docker-php-ext-install shmop snmp soap sockets sysvmsg sysvsem sysvshm wddx xsl \u0026\u0026     : \u0026\u0026     rm -rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{             echo 'opcache.memory_consumption=128';             echo 'opcache.interned_strings_buffer=8';             echo 'opcache.max_accelerated_files=4000';             echo 'opcache.revalidate_freq=60';             echo 'opcache.fast_shutdown=1';             echo 'opcache.enable_cli=1';             echo 'opcache.file_cache=/tmp';         } \u003e $PHP_INI_DIR/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'expose_php = off' \u003e $PHP_INI_DIR/conf.d/hide-header-version.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     mkdir -p /usr/local/share/composer \u0026\u0026     export COMPOSER_ALLOW_SUPERUSER=1 \u0026\u0026     export COMPOSER_HOME=/usr/local/share/composer \u0026\u0026     curl -sS https://install.phpcomposer.com/installer | php -- --install-dir=/usr/bin/ --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk add --no-cache imagemagick-dev     libmemcached-dev     pcre-dev \u0026\u0026     : \u0026\u0026     printf \"\\n\" | pecl install imagick memcached mongodb oauth psr redis swoole xdebug \u0026\u0026     docker-php-ext-enable imagick memcached mongodb oauth psr redis swoole xdebug \u0026\u0026     : \u0026\u0026     rm -rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     cd /tmp \u0026\u0026     export PHP_EXT_DIR=$(php-config --extension-dir) \u0026\u0026     curl -o pdflib.tar.gz https://www.pdflib.com/binaries/PDFlib/920/PDFlib-9.2.0-Alpine-Linux-x86_64-php.tar.gz -L \u0026\u0026     tar -xvf pdflib.tar.gz \u0026\u0026     mv PDFlib-* pdflib \u0026\u0026 cd pdflib \u0026\u0026     cp bind/php/php-730-nts/php_pdflib.so $PHP_EXT_DIR \u0026\u0026     docker-php-ext-enable php_pdflib \u0026\u0026     cd /tmp \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}