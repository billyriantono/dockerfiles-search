{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nginx:alpine",
      "SourceCode": "FROM nginx:alpine",
      "Platform": "",
      "From": {
        "Image": "nginx:alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Maintainer",
              "Value": "\"Ansley Leung\""
            },
            {
              "Key": "Description",
              "Value": "\"Nginx with embedded Let's Encrypt client ACME.sh\""
            },
            {
              "Key": "Reference",
              "Value": "\"https://github.com/magna-z/docker-nginx-acme\""
            },
            {
              "Key": "License",
              "Value": "\"MIT License\""
            },
            {
              "Key": "Version",
              "Value": "\"1.17.6\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Shanghai"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk add --no-cache tzdata \u0026\u0026     ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026     echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LE_WORKING_DIR",
              "Value": "/opt/acme.sh"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk add --no-cache ca-certificates curl openssl \u0026\u0026     curl -sSL https://get.acme.sh | sh \u0026\u0026     crontab -l | sed \"s|acme.sh --cron|acme.sh --cron --renew-hook \\\"nginx -s reload\\\"|g\" | crontab - \u0026\u0026     ln -s /opt/acme.sh/acme.sh /usr/bin/acme.sh \u0026\u0026     chmod +x /docker-entrypoint.sh \u0026\u0026     rm -rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./404.html",
            "/usr/share/nginx/html/404.html"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./svg404.html",
            "/usr/share/nginx/html/svg404.html"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./50x.html",
            "/usr/share/nginx/html/50x.html"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nginxBlocksIP.sh",
            "/nginxBlocksIP.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nginxLogRotate.sh",
            "/nginxLogRotate.sh"
          ]
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk add --no-cache coreutils \u0026\u0026     mkdir -p /etc/nginx/snippets \u0026\u0026     touch /etc/nginx/snippets/BlocksIP.conf \u0026\u0026     chmod +x /nginxBlocksIP.sh /nginxLogRotate.sh \u0026\u0026     (crontab -l 2\u003e/dev/null || true; echo \"0 0 * * * /nginxLogRotate.sh \u003e /dev/null\") | crontab - \u0026\u0026     rm -rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}