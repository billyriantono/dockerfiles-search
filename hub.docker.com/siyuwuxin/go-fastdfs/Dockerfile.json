{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "sjqzhang/go-fastdfs:latest",
      "SourceCode": "FROM sjqzhang/go-fastdfs:latest",
      "Platform": "",
      "From": {
        "Image": "sjqzhang/go-fastdfs:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Maintainer",
              "Value": "\"Ansley Leung\""
            },
            {
              "Key": "Description",
              "Value": "\"go-fastdfs with go-fastdfs-web.\""
            },
            {
              "Key": "License",
              "Value": "\"MIT License\""
            },
            {
              "Key": "Version",
              "Value": "\"1.3.4\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Shanghai"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk add --no-cache tzdata \u0026\u0026     ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026     echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk add --no-cache coreutils curl openjdk8-jre \u0026\u0026     ln -snf /usr/lib/jvm/java-1.8-openjdk/bin/java /usr/bin/java \u0026\u0026     rm -rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     CHECK_URL=\"https://api.github.com/repos/perfree/go-fastdfs-web/releases/latest\" \u0026\u0026     REMOTE_VERSION=$(wget -qO- $CHECK_URL | grep 'tag_name' | cut -d\\\" -f4 | cut -d'v' -f2) \u0026\u0026     curl -SL https://github.com/perfree/go-fastdfs-web/releases/download/v${REMOTE_VERSION}/go-fastdfs-web-${REMOTE_VERSION}.zip -o /tmp/go-fastdfs-web.zip \u0026\u0026     unzip -q /tmp/go-fastdfs-web.zip -d /opt \u0026\u0026     rm -rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8088"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "fileserver",
            "${OPTS}"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}