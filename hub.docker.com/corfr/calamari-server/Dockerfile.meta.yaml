MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - CmdLine:
    - (         apt-get update &&         apt-get upgrade -y &&         ln -sf /bin/bash
      /bin/sh     )
    Name: run
    PrependShell: true
  - CmdLine:
    - (         apt-get update &&         apt-get --yes --assume-yes install -y python-software-properties
      software-properties-common wget     )
    Name: run
    PrependShell: true
  - CmdLine:
    - (         add-apt-repository ppa:saltstack/salt &&         apt-get update     )
    Name: run
    PrependShell: true
  - CmdLine:
    - (         apt-get install -y psmisc     )
    Name: run
    PrependShell: true
  - Env:
    - Key: BASE_URL
      Value: http://cor-net.org/wp-content/uploads/2015/02
    Name: env
  - Env:
    - Key: BASE_SERVER_FILE
      Value: calamari-server_1.3-rc-16-g321cd58_amd64.deb
    Name: env
  - Env:
    - Key: BASE_CLIENT_FILE
      Value: calamari-clients_1.2.2-26-gcfbc8bf_all.deb
    Name: env
  - CmdLine:
    - (         wget --quiet ${BASE_URL}/${BASE_SERVER_FILE} &&         ( dpkg -i
      ${BASE_SERVER_FILE} || true ) &&         apt-get --yes --assume-yes install
      -f &&         rm ${BASE_SERVER_FILE}     )
    Name: run
    PrependShell: true
  - CmdLine:
    - (         wget --quiet ${BASE_URL}/${BASE_CLIENT_FILE} &&         ( dpkg -i
      ${BASE_CLIENT_FILE} || true ) &&         apt-get --yes --assume-yes install
      -f &&         rm ${BASE_CLIENT_FILE}     )
    Name: run
    PrependShell: true
  - CmdLine:
    - (         cp $(which python2.7) /opt/calamari/venv/local/bin/python &&         locale-gen
      en_US.UTF-8     )
    Name: run
    PrependShell: true
  - Env:
    - Key: BASE_REPO_FILE
      Value: calamari-repo-precise.tar.gz
    Name: env
  - CmdLine:
    - (         wget -O /tmp/${BASE_REPO_FILE} --quiet ${BASE_URL}/${BASE_REPO_FILE}
      &&         cd /opt/calamari/webapp/content &&         mkdir calamari-minions
      &&         cd calamari-minions &&         tar zxvf /tmp/${BASE_REPO_FILE} --strip
      1 &&         rm /tmp/${BASE_REPO_FILE}     )
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /etc/postgresql
    - /var/log/postgresql
    - /var/lib/postgresql
  - Name: expose
    Ports:
    - "2003"
    - "2004"
    - "4505"
    - "4506"
    - "80"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - entrypoint.sh
    - /
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
