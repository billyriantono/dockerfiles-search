{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     PHP_VERSION=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \u0026\u0026 `#====================================================` `# HealthCheck cgi-fcgi` `#====================================================`     apt-get install -y --no-install-recommends libfcgi0ldbl \u0026\u0026 `#====================================================` `# Locale gen` `#====================================================`     apt-get install -y --no-install-recommends locales \u0026\u0026     cat /usr/share/i18n/SUPPORTED \u003e /etc/locale.gen \u0026\u0026     /usr/sbin/locale-gen \u0026\u0026 `#====================================================` `# Logs` `#====================================================`     mkdir -p /var/log/php/ \u0026\u0026     ln -sf /dev/stdout /var/log/php/access.log \u0026\u0026     ln -sf /dev/stderr /var/log/php/error.log \u0026\u0026 `#====================================================` `# Session Directory` `#====================================================`     mkdir -p /var/lib/php/sessions \u0026\u0026     chown -R www-data.www-data /var/lib/php/sessions \u0026\u0026 `#====================================================` `# Mysqlnd` `#====================================================`     docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd \u0026\u0026     docker-php-ext-configure mysqli --with-mysqli=mysqlnd \u0026\u0026     docker-php-ext-install pdo_mysql \u0026\u0026     docker-php-ext-install mysqli \u0026\u0026 `#====================================================` `# Intl` `#====================================================`     apt-get install -y --no-install-recommends libicu-dev \u0026\u0026     docker-php-ext-install intl \u0026\u0026 `#====================================================` `# Zip` `#====================================================`     apt-get install -y --no-install-recommends zlib1g-dev \u0026\u0026     docker-php-ext-install zip \u0026\u0026 `#====================================================` `# Apcu` `#====================================================`     pecl install apcu \u0026\u0026     docker-php-ext-enable apcu \u0026\u0026 `#====================================================` `# Opcache` `#====================================================`     docker-php-ext-enable opcache \u0026\u0026 `#====================================================` `# Gd` `#====================================================`     apt-get install -y --no-install-recommends libfreetype6-dev libjpeg62-turbo-dev libpng-dev \u0026\u0026     docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-install gd \u0026\u0026 `#====================================================` `# Imagick` `#====================================================`     apt-get install -y --no-install-recommends libmagickwand-dev webp \u0026\u0026     pecl install imagick \u0026\u0026     docker-php-ext-enable imagick \u0026\u0026 `#====================================================` `# Sockets` `#====================================================`     docker-php-ext-install sockets \u0026\u0026 `#====================================================` `# Redis` `#====================================================`     pecl install redis \u0026\u0026     docker-php-ext-enable redis \u0026\u0026 `#====================================================` `# Bcmath` `#====================================================`     docker-php-ext-install bcmath \u0026\u0026 `#====================================================` `# Mcrypt` `#====================================================`     apt-get install -y --no-install-recommends libmcrypt-dev \u0026\u0026     docker-php-ext-install mcrypt \u0026\u0026 `#====================================================` `# Imap` `#====================================================`     apt-get install -y --no-install-recommends libc-client-dev libkrb5-dev \u0026\u0026     docker-php-ext-configure imap --with-imap --with-imap-ssl --with-kerberos \u0026\u0026     docker-php-ext-install imap \u0026\u0026 `#====================================================` `# Yaml` `#====================================================`     apt-get install -y --no-install-recommends libyaml-dev \u0026\u0026     pecl install yaml-2.0.0 \u0026\u0026     docker-php-ext-enable yaml \u0026\u0026 `#====================================================` `# Blackfire` `#====================================================`     curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$PHP_VERSION \u0026\u0026     tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \u0026\u0026     mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so \u0026\u0026     printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://0.0.0.0:8707\\n\" \u003e $PHP_INI_DIR/conf.d/blackfire.ini \u0026\u0026 `#====================================================` `# Composer` `#====================================================`     apt-get install -y --no-install-recommends git \u0026\u0026     php -r \"copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');\" \u0026\u0026     php /tmp/composer-setup.php --filename=composer --install-dir=/usr/local/bin/ \u0026\u0026     chmod +x /usr/local/bin/composer \u0026\u0026     rm /tmp/composer-setup.php \u0026\u0026 `#====================================================` `#  PHPUnit` `#====================================================`     curl -o /tmp/phpunit.phar https://phar.phpunit.de/phpunit.phar \u0026\u0026     mv /tmp/phpunit.phar /usr/local/bin/phpunit \u0026\u0026     chmod +x /usr/local/bin/phpunit \u0026\u0026 `#====================================================` `# Cleanup` `#====================================================`     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./overlay/",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Health": {
            "Interval": 5000000000,
            "Retries": 3,
            "Test": [
              "CMD-SHELL",
              "SCRIPT_NAME=/fpm-ping     SCRIPT_FILENAME=/fpm-ping     REQUEST_METHOD=GET     cgi-fcgi -bind -connect 127.0.0.1:9000     | grep -q pong || exit 1"
            ],
            "Timeout": 5000000000
          },
          "Name": "healthcheck"
        },
        {
          "Name": "workdir",
          "Path": "/var/www/app"
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}