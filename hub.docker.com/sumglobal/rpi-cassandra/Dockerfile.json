{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "sumglobal/rpi-openjdk:8-azul",
      "SourceCode": "FROM sumglobal/rpi-openjdk:8-azul",
      "Platform": "",
      "From": {
        "Image": "sumglobal/rpi-openjdk:8-azul"
      },
      "Commands": [
        {
          "CmdLine": [
            "cross-build-start"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "groupadd -r cassandra --gid=999 \u0026\u0026 useradd -r -g cassandra --uid=999 cassandra"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends            ca-certificates            wget            python            python-dev            python-pip            python-virtualenv         \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t\u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t\u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t\u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t\u0026\u0026 chmod +x /usr/local/bin/gosu \t\u0026\u0026 gosu nobody true \t\u0026\u0026 apt-get purge -y --auto-remove ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends libjemalloc1 \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CASSANDRA_VERSION",
              "Value": "3.11.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DISTRO_NAME",
              "Value": "\"apache-cassandra-$CASSANDRA_VERSION\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 wget \"http://www.gtlib.gatech.edu/pub/apache/cassandra/$CASSANDRA_VERSION/$DISTRO_NAME-bin.tar.gz\"     \u0026\u0026 tar -xzf \"$DISTRO_NAME-bin.tar.gz\"     \u0026\u0026 rm -r \"$DISTRO_NAME-bin.tar.gz\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CASSANDRA_CONFIG",
              "Value": "\"/$DISTRO_NAME/conf\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CASSANDRA_CONF",
              "Value": "\"/$DISTRO_NAME/conf\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_HEAP_SIZE",
              "Value": "\"256m\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HEAP_NEWSIZE",
              "Value": "\"128m\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CASSANDRA_START_RPC",
              "Value": "\"true\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cassandra.yaml",
            "/$CASSANDRA_CONFIG/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/cassandra \"$CASSANDRA_CONFIG\" \t\u0026\u0026 chown -R cassandra:cassandra /var/lib/cassandra \"$CASSANDRA_CONFIG\" \t\u0026\u0026 chmod 777 /var/lib/cassandra \"$CASSANDRA_CONFIG\" \t\u0026\u0026 mkdir -p \"/$DISTRO_NAME/logs\" \t\u0026\u0026 mkdir -p /var/log/cassandra \t\u0026\u0026 chown -R cassandra:cassandra \"/$DISTRO_NAME\" \t\u0026\u0026 ln -s /$DISTRO_NAME /apache-cassandra"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^start_rpc.*$/start_rpc: true/' $CASSANDRA_CONFIG/cassandra.yaml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/apache-cassandra/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/cassandra"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7000",
            "7001",
            "7199",
            "9042",
            "9160"
          ]
        },
        {
          "CmdLine": [
            "cassandra",
            "-f"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "cross-build-end"
          ],
          "Name": "run",
          "PrependShell": false
        }
      ]
    }
  ]
}