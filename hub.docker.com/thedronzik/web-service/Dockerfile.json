{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "thedronzik \u003cthedronzik@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_VERSION",
              "Value": "2.0.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.13.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum clean all \u0026\u0026     yum -y install epel-release \u0026\u0026     yum -y install PyYAML python-jinja2 python-httplib2 python-keyczar python-paramiko python-setuptools python-pip \u0026\u0026     yum -y install cronie yum-cron"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/ansible/ \u0026\u0026     echo -e '[local]\\nlocalhost' \u003e /etc/ansible/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip \u0026\u0026     pip install ansible"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ansible",
            "/srv/server"
          ]
        },
        {
          "CmdLine": [
            "ansible-playbook /srv/server/server.yml -c local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/src/luagit-2.0 \u0026\u0026 cd $_ \u0026\u0026     curl -sL http://luajit.org/download/LuaJIT-${LUAJIT_VERSION}.tar.gz | tar xz --strip=1 \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://github.com/simpl/ngx_devel_kit.git /usr/local/src/ngx_devel_kit \u0026\u0026     git clone git://github.com/chaoslawful/lua-nginx-module.git /usr/local/src/lua-nginx-module \u0026\u0026     curl -sL http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz | tar xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd nginx-${NGINX_VERSION} \u0026\u0026 ./configure     --prefix=/usr     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --add-module=/usr/local/src/ngx_devel_kit     --add-module=/usr/local/src/lua-nginx-module     --with-file-aio     --with-ipv6     --with-http_ssl_module     --with-http_v2_module     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_auth_request_module     --with-http_random_index_module     --with-http_secure_link_module     --with-http_stub_status_module \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stderr /var/log/nginx/error.log \u0026\u0026     ln -sf /dev/stderr /var/log/nginx/access.log \u0026\u0026     ln -sf /dev/stderr /var/log/php-fpm/error.log \u0026\u0026     ln -sf /dev/stderr /var/log/php-fpm/www-error.log \u0026\u0026     ln -sf /dev/stderr /var/log/php-fpm/www-slow.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app /etc/supervisord.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Env": [
            {
              "Key": "APP_PATH",
              "Value": "/app"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./start.sh",
            "/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./export_envs.sh",
            "/export_envs.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /export_envs.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}