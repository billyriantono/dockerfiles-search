MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.0-cudnn7-devel
  Commands:
  - CmdLine:
    - apt-get update   && apt-get install -y --no-install-recommends     build-essential     curl     ghostscript     git     graphviz     poppler-utils     unzip     wget   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -qsSLkO     https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-`uname
      -p`.sh   && bash Miniconda3-latest-Linux-`uname -p`.sh -b   && rm Miniconda3-latest-Linux-`uname
      -p`.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/miniconda3/bin:$PATH
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget 'https://github.com/Odrec/deep_doc_class/archive/master.zip' && unzip master.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/deep_doc_class
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/deep_doc_class
  - CmdLine:
    - mv /tmp/deep_doc_class-master/* .
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/pkg-resources==0.0.0/d' requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - python -c "import nltk; nltk.download('stopwords')"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /files
    - /results
  - CmdLine:
    - ln -s /files
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /results
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/deep_doc_class/src
  - CmdLine:
    - tail
    - -f
    - /dev/null
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:10.0-cudnn7-devel
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.0-cudnn7-devel
