{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Maintainer": "Shion \u003cshion.chow@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.3.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MEMCACHED_VERSION",
              "Value": "3.1.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_REDIS_VERSION",
              "Value": "5.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD_TOOLS",
              "Value": "autoconf         make         gcc         g++         libc-dev         file         re2c         curl"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD_DEPS",
              "Value": "curl-dev         bzip2-dev         libxml2-dev         libedit-dev         libmcrypt-dev         libwebp-dev         libxpm-dev         libpng-dev         libjpeg-turbo-dev         freetype-dev         postgresql-dev         libmemcached-dev         zlib-dev         libzip-dev         cyrus-sasl-dev         libtool"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUNTIME_DEPS",
              "Value": "libcurl         libbz2         libxml2         libedit         libmcrypt         libwebp         libxpm         libpng         libjpeg-turbo         freetype         libpq         libzip         libmemcached"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "/usr/local/etc/php"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup -g 82 -S www-data \u0026\u0026 adduser -u 82 -D -S -G www-data www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"   \u0026\u0026 export CPPFLAGS=${CFLAGS}   \u0026\u0026 export LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"   \u0026\u0026 export MAKEFLAGS=\"-j $(getconf _NPROCESSORS_ONLN)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-tools $BUILD_TOOLS     \u0026\u0026 apk add --no-cache --virtual .build-deps $BUILD_DEPS     \u0026\u0026 apk add --no-cache --virtual .runtime-deps $RUNTIME_DEPS     \u0026\u0026 mkdir -p $PHP_INI_DIR/conf.d     \u0026\u0026 mkdir -p /usr/src     \u0026\u0026 cd /usr/src     \u0026\u0026 curl -o php.tar.gz -L https://php.net/get/php-${PHP_VERSION}.tar.gz/from/this/mirror     \u0026\u0026 tar -zxf php.tar.gz     \u0026\u0026 cd php-${PHP_VERSION}     \u0026\u0026 ./configure         --with-config-file-path=\"$PHP_INI_DIR\"         --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"         --disable-cgi         --enable-fpm             --with-fpm-user=www-data             --with-fpm-group=www-data         --enable-mbstring         --enable-bcmath         --enable-zip         --enable-exif         --enable-mysqlnd         --enable-pcntl         --enable-shmop         --with-gd             --with-webp-dir=/usr/lib             --with-jpeg-dir=/usr/lib             --with-png-dir=/usr/lib             --with-xpm-dir=/usr/lib             --with-zlib-dir=/usr/lib             --with-freetype-dir=/usr/lib         --with-zlib         --with-bz2         --with-curl         --with-mhash         --with-openssl         --with-pgsql         --with-mysqli         --with-pdo-mysql=mysqlnd        --with-pdo-pgsql         --with-sqlite=shared         --with-libedit         --with-libzip     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cp /usr/local/etc/php-fpm.conf.default /usr/local/etc/php-fpm.conf     \u0026\u0026 cp /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/www.conf     \u0026\u0026 sed -i 's/;error_log = log\\/php-fpm.log/error_log = \\/proc\\/self\\/fd\\/2/g' /usr/local/etc/php-fpm.conf     \u0026\u0026 sed -i 's/;daemonize = yes/daemonize = no/g' /usr/local/etc/php-fpm.conf     \u0026\u0026 sed -i 's!=NONE/!=!g' /usr/local/etc/php-fpm.conf     \u0026\u0026 sed -i 's/listen = 127.0.0.1:9000/listen = [::]:9000/g' /usr/local/etc/php-fpm.d/www.conf     \u0026\u0026 sed -i 's/;access.log = log\\/\\$pool.access.log/access.log = \\/proc\\/self\\/fd\\/2/g' /usr/local/etc/php-fpm.d/www.conf     \u0026\u0026 sed -i 's/;catch_workers_output = yes/catch_workers_output = yes/g' /usr/local/etc/php-fpm.d/www.conf     \u0026\u0026 sed -i 's/;clear_env = no/clear_env = yes/g' /usr/local/etc/php-fpm.d/www.conf     \u0026\u0026 echo \"zend_extension=opcache.so\" \u003e\u003e $PHP_INI_DIR/conf.d/opcache.ini     \u0026\u0026 cd /usr/src     \u0026\u0026 curl -o memcached.tar.gz -L https://github.com/php-memcached-dev/php-memcached/archive/v${PHP_MEMCACHED_VERSION}.tar.gz     \u0026\u0026 tar -zxvf memcached.tar.gz     \u0026\u0026 cd php-memcached-${PHP_MEMCACHED_VERSION}     \u0026\u0026 phpize     \u0026\u0026 ./configure --enable-memcached-json --disable-memcached-sasl     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 echo \"extension=memcached.so\" \u003e\u003e $PHP_INI_DIR/conf.d/memcached.ini     \u0026\u0026 cd /usr/src     \u0026\u0026 curl -o redis.tar.gz -L https://github.com/phpredis/phpredis/archive/${PHP_REDIS_VERSION}.tar.gz     \u0026\u0026 tar -zxvf redis.tar.gz     \u0026\u0026 cd phpredis-${PHP_REDIS_VERSION}     \u0026\u0026 phpize     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 echo \"extension=redis.so\" \u003e\u003e $PHP_INI_DIR/conf.d/redis.ini     \u0026\u0026 cd ~ \u0026\u0026 rm -rf /usr/src \u0026\u0026 apk del .build-tools .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}