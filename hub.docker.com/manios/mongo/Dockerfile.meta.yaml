MetaArgs: null
Stages:
- BaseName: debian:wheezy-slim
  Commands:
  - CmdLine:
    - groupadd -r mongodb && useradd -r -g mongodb mongodb
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://deb.debian.org/debian wheezy-backports main' > /etc/apt/sources.list.d/backports.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends \t\tca-certificates
      \t\tjq vim htop netcat \t\tnumactl \t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends wget
      && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true \t&& apt-get purge -y --auto-remove wget"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEYS
      Value: 492EAFE8CD016A07919F1D2B9ECBEC467F0CEB10
    Name: env
  - CmdLine:
    - "set -ex; \texport GNUPGHOME=\"$(mktemp -d)\"; \tfor key in $GPG_KEYS; do \t\tgpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tdone; \tgpg --export
      $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg; \trm -r \"$GNUPGHOME\"; \tapt-key
      list"
    Name: run
    PrependShell: true
  - Key: MONGO_PACKAGE
    Name: arg
    Value: mongodb-org
  - Key: MONGO_REPO
    Name: arg
    Value: repo.mongodb.org
  - Env:
    - Key: MONGO_PACKAGE
      Value: ${MONGO_PACKAGE}
    - Key: MONGO_REPO
      Value: ${MONGO_REPO}
    Name: env
  - Env:
    - Key: MONGO_MAJOR
      Value: "2.6"
    Name: env
  - Env:
    - Key: MONGO_VERSION
      Value: 2.6.0
    Name: env
  - CmdLine:
    - echo "deb http://downloads-distro.mongodb.org/repo/debian-sysvinit dist 10gen"
      | tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install -y \t\t${MONGO_PACKAGE}=$MONGO_VERSION
      \t\t${MONGO_PACKAGE}-server=$MONGO_VERSION \t\t${MONGO_PACKAGE}-shell=$MONGO_VERSION
      \t\t${MONGO_PACKAGE}-mongos=$MONGO_VERSION \t\t${MONGO_PACKAGE}-tools=$MONGO_VERSION
      \t&& rm -rf /var/lib/apt/lists/* \t&& rm -rf /var/lib/mongodb \t&& mv /etc/mongod.conf
      /etc/mongod.conf.orig"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data/db /data/configdb /data/log     && touch /data/log/mongo.log     &&
      chown -R mongodb:mongodb /data/db /data/configdb /data/log
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data/db
    - /data/configdb
    - /data/log
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - 'ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat'
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "27017"
  - CmdLine:
    - mongod
    Name: cmd
    PrependShell: false
  From:
    Image: debian:wheezy-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:wheezy-slim
