{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "circleci/php:7.2.17-fpm-stretch-node",
      "SourceCode": "FROM circleci/php:7.2.17-fpm-stretch-node",
      "Platform": "",
      "From": {
        "Image": "circleci/php:7.2.17-fpm-stretch-node"
      },
      "Commands": [
        {
          "Maintainer": "Adam Copley version: 0.2",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "sudo apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt install -y imagemagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt install -y libpng-dev libfreetype6-dev libjpeg62-turbo-dev libwebp-dev libxpm-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo docker-php-ext-configure gd --with-gd --with-webp-dir --with-jpeg-dir --with-png-dir --with-zlib-dir --with-xpm-dir --with-freetype-dir --enable-gd-native-ttf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo docker-php-ext-install pcntl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y libmagickwand-dev --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo pecl install imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo docker-php-ext-enable imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://chromedriver.storage.googleapis.com/2.41/chromedriver_linux64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip chromedriver_linux64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo mv chromedriver /usr/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo chown root:root /usr/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo chmod +x /usr/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if grep -q Debian /etc/os-release \u0026\u0026 grep -q jessie /etc/os-release; then     echo \"deb http://archive.debian.org/debian/ jessie-backports main\" | sudo tee -a /etc/apt/sources.list     \u0026\u0026 echo \"deb-src http://archive.debian.org/debian/ jessie-backports main\" | sudo tee -a /etc/apt/sources.list     \u0026\u0026 echo \"Acquire::Check-Valid-Until false;\" | sudo tee -a /etc/apt/apt.conf.d/10-nocheckvalid     \u0026\u0026 echo 'Package: *\\nPin: origin \"archive.debian.org\"\\nPin-Priority: 500' | sudo tee -a /etc/apt/preferences.d/10-archive-pin     \u0026\u0026 sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless   ; elif grep -q Ubuntu /etc/os-release \u0026\u0026 grep -q Trusty /etc/os-release; then     echo \"deb http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main\" | sudo tee -a /etc/apt/sources.list     \u0026\u0026 echo \"deb-src http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main\" | sudo tee -a /etc/apt/sources.list     \u0026\u0026 sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A     \u0026\u0026 sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless   ; else     sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless   ; fi   \u0026\u0026 sudo apt-get install -y bzip2 libgconf-2-4 # for extracting firefox and running chrome, respectively"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "FIREFOX_URL=\"https://download.mozilla.org/?product=firefox-latest-ssl\u0026os=linux64\u0026lang=en-US\"   \u0026\u0026 ACTUAL_URL=$(curl -Ls -o /dev/null -w %{url_effective} $FIREFOX_URL)   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/firefox.tar.bz2 $ACTUAL_URL   \u0026\u0026 sudo tar -xvjf /tmp/firefox.tar.bz2 -C /opt   \u0026\u0026 sudo ln -s /opt/firefox/firefox /usr/local/bin/firefox   \u0026\u0026 sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3   \u0026\u0026 rm -rf /tmp/firefox.*   \u0026\u0026 firefox --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export GECKODRIVER_LATEST_RELEASE_URL=$(curl https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\")      \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\"      \u0026\u0026 cd /tmp      \u0026\u0026 tar xf geckodriver_linux64.tar.gz      \u0026\u0026 rm -rf geckodriver_linux64.tar.gz      \u0026\u0026 sudo mv geckodriver /usr/local/bin/geckodriver      \u0026\u0026 sudo chmod +x /usr/local/bin/geckodriver      \u0026\u0026 geckodriver --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error --location --fail --retry 3 --output /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb     \u0026\u0026 (sudo dpkg -i /tmp/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)      \u0026\u0026 rm -rf /tmp/google-chrome-stable_current_amd64.deb     \u0026\u0026 sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g'         \"/opt/google/chrome/google-chrome\"     \u0026\u0026 google-chrome --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "CHROME_VERSION=\"$(google-chrome --version)\"     \u0026\u0026 export CHROMEDRIVER_RELEASE=\"$(echo $CHROME_VERSION | sed 's/^Google Chrome //')\" \u0026\u0026 export CHROMEDRIVER_RELEASE=${CHROMEDRIVER_RELEASE%%.*}     \u0026\u0026 CHROMEDRIVER_VERSION=$(curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROMEDRIVER_RELEASE})     \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip\"     \u0026\u0026 cd /tmp     \u0026\u0026 unzip chromedriver_linux64.zip     \u0026\u0026 rm -rf chromedriver_linux64.zip     \u0026\u0026 sudo mv chromedriver /usr/local/bin/chromedriver     \u0026\u0026 sudo chmod +x /usr/local/bin/chromedriver     \u0026\u0026 chromedriver --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo mv selenium-server-standalone-2.53.1.jar /usr/bin/selenium-server-standalone-2.53.1.jar"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}