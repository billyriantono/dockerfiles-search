{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Mathias Kluba \u003cmathias.kluba@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y upgrade \u0026\u0026 apt-get -y install software-properties-common \u0026\u0026 add-apt-repository ppa:webupd8team/java -y \u0026\u0026 apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections) \u0026\u0026 apt-get install -y oracle-java8-installer oracle-java8-set-default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$JAVA_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install -qqy wget curl git iptables ca-certificates apparmor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-latest.tgz   \u0026\u0026 tar --strip-components=1 -xvzf docker-latest.tgz -C /usr/local/bin   \u0026\u0026 chmod +x /usr/local/bin/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/jenkins-slave"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -c \"Jenkins Slave user\" -d $HOME -m jenkins-slave"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SWARM_VERSION",
              "Value": "3.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl --create-dirs -sSLo $HOME/swarm-client-$JENKINS_SWARM_VERSION-jar-with-dependencies.jar https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/$JENKINS_SWARM_VERSION/swarm-client-$JENKINS_SWARM_VERSION.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "cmd.sh",
            "/cmd.sh"
          ]
        },
        {
          "Env": [
            {
              "Key": "RANGER_CLI_VERSION",
              "Value": "v0.6.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSLO https://github.com/rancher/cli/releases/download/$RANGER_CLI_VERSION/rancher-linux-amd64-$RANGER_CLI_VERSION.tar.gz   \u0026\u0026 tar --strip-components=2 -xzvf rancher-linux-amd64-$RANGER_CLI_VERSION.tar.gz -C /usr/local/bin   \u0026\u0026 chmod +x /usr/local/bin/rancher"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker-wrapper"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-wrapper.sh",
            "/usr/local/bin/docker-wrapper"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-wrapper"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs npm maven   \u0026\u0026 ln -s /usr/bin/nodejs /usr/bin/node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash /cmd.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}