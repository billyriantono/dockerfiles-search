{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Linagora Folks \u003clgs-openpaas-dev@linagora.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Provides an image with Janus Gateway\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     build-essential     libmicrohttpd-dev     libjansson-dev     libnice-dev     libssl-dev     libsofia-sip-ua-dev     libglib2.0-dev     libopus-dev     libogg-dev     libini-config-dev     libcollection-dev     pkg-config     gengetopt     libtool     autotools-dev     automake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     sudo     make     git     doxygen     graphviz     cmake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~     \u0026\u0026 git clone https://github.com/cisco/libsrtp.git     \u0026\u0026 cd libsrtp     \u0026\u0026 git checkout v2.0.0     \u0026\u0026 ./configure --prefix=/usr --enable-openssl     \u0026\u0026 make shared_library     \u0026\u0026 sudo make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~     \u0026\u0026 git clone https://github.com/sctplab/usrsctp     \u0026\u0026 cd usrsctp     \u0026\u0026 ./bootstrap     \u0026\u0026 ./configure --prefix=/usr     \u0026\u0026 make     \u0026\u0026 sudo make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~     \u0026\u0026 git clone https://github.com/warmcat/libwebsockets.git     \u0026\u0026 cd libwebsockets     \u0026\u0026 git checkout v2.1.0     \u0026\u0026 mkdir build     \u0026\u0026 cd build     \u0026\u0026 cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ..     \u0026\u0026 make     \u0026\u0026 sudo make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~     \u0026\u0026 git clone https://github.com/meetecho/janus-gateway.git     \u0026\u0026 cd janus-gateway     \u0026\u0026 sh autogen.sh     \u0026\u0026 ./configure --prefix=/opt/janus --disable-rabbitmq --disable-mqtt --enable-docs     \u0026\u0026 make CFLAGS='-std=c99'     \u0026\u0026 make install     \u0026\u0026 make configs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -rp ~/janus-gateway/certs /opt/janus/share/janus"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/*.cfg",
            "/opt/janus/etc/janus/"
          ]
        },
        {
          "CmdLine": [
            "apt-get install nginx -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7088",
            "80",
            "8088",
            "8089",
            "8188"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "10000-10200/udp"
          ]
        },
        {
          "CmdLine": [
            "service nginx restart \u0026\u0026 /opt/janus/bin/janus --nat-1-1=${DOCKER_IP}"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}