{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:8",
      "SourceCode": "FROM debian:8",
      "Platform": "",
      "From": {
        "Image": "debian:8"
      },
      "Commands": [
        {
          "Maintainer": "Linagora Folks \u003copenpaas@linagora.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get -y upgrade \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get -y install php5-fpm php5-cli curl supervisor nginx git php5-curl php-pear php5-dev make pkg-config \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php5/fpm/php.ini \u0026\u0026   sed -i \"s/;date.timezone =.*/date.timezone = UTC/\" /etc/php5/cli/php.ini \u0026\u0026   sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php5/fpm/php-fpm.conf \u0026\u0026   sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php5/fpm/php.ini \u0026\u0026   sed -i \"s/;listen.owner = www-data/listen.owner = www-data/\" /etc/php5/fpm/pool.d/www.conf \u0026\u0026   sed -i \"s/;listen.group = www-data/listen.group = www-data/\" /etc/php5/fpm/pool.d/www.conf \u0026\u0026   sed -i \"s/;listen.mode = 0660/listen.mode = 0660/\" /etc/php5/fpm/pool.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=mongo.so\" \u003e\u003e /etc/php5/fpm/php.ini \u0026\u0026     echo \"extension=mongo.so\" \u003e\u003e /etc/php5/cli/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/var/www"
          ]
        },
        {
          "CmdLine": [
            "cp -v docker/prepare/set_nginx_htpasswd.sh /root/set_nginx_htpasswd.sh     \u0026\u0026 cp -v docker/config/nginx.conf     /etc/nginx/sites-available/default     \u0026\u0026 cp -v docker/supervisord.conf /etc/supervisor/conf.d/     \u0026\u0026 rm -frv html     \u0026\u0026 chown -R www-data:www-data /var/www     \u0026\u0026 /root/set_nginx_htpasswd.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mongo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer clearcache \u0026\u0026 composer update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "sh",
            "./scripts/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}