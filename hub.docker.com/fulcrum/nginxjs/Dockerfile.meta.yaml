MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: IF Fulcrum "fulcrum@ifsight.net"
    Name: maintainer
  - Env:
    - Key: NGINX_VERSION
      Value: 1.13.4
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: B0F4253373F8F6F510D42178520A9993A1C052F8
    Name: env
  - Env:
    - Key: CONFIG
      Value: "\"\t--prefix=/etc/nginx \t--sbin-path=/usr/sbin/nginx \t--modules-path=/usr/lib/nginx/modules
        \t--conf-path=/etc/nginx/nginx.conf \t--error-log-path=/var/log/nginx/error.log
        \t--http-log-path=/var/log/nginx/access.log \t--pid-path=/var/run/nginx.pid
        \t--lock-path=/var/run/nginx.lock \t--http-client-body-temp-path=/var/cache/nginx/client_temp
        \t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
        \t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
        \t--user=nginx \t--group=nginx \t--with-http_ssl_module \t--with-http_realip_module
        \t--with-http_addition_module \t--with-http_sub_module \t--with-http_dav_module
        \t--with-http_flv_module \t--with-http_mp4_module \t--with-http_gunzip_module
        \t--with-http_gzip_static_module \t--with-http_random_index_module \t--with-http_secure_link_module
        \t--with-http_stub_status_module \t--with-http_auth_request_module \t--with-http_xslt_module=dynamic
        \t--with-http_image_filter_module=dynamic \t--with-http_geoip_module=dynamic
        \t--with-http_perl_module=dynamic \t--with-threads \t--with-stream \t--with-stream_ssl_module
        \t--with-stream_ssl_preread_module \t--with-stream_realip_module \t--with-stream_geoip_module=dynamic
        \t--with-http_slice_module \t--with-mail \t--with-mail_ssl_module \t--with-compat
        \t--with-file-aio \t--with-http_v2_module \t\""
    Name: env
  - Env:
    - Key: CFLAGS
      Value: '"-O2 -pipe -fomit-frame-pointer -march=core2 -mtune=intel"'
    Name: env
  - CmdLine:
    - "addgroup -g 1971 -S nginx && \tadduser -D -S -u 1971 -h /var/cache/nginx -s
      /sbin/nologin -G nginx nginx && \tapk add --no-cache freetype gd geoip libgcrypt
      libgpg-error libintl libjpeg-turbo libpng libxml2 libxslt && \tapk add --no-cache
      --virtual .build-deps \t  gcc make linux-headers curl gnupg perl mercurial \t
      \ gd-dev geoip-dev libxslt-dev libc-dev openssl-dev pcre-dev perl-dev zlib-dev
      \ && \tgpg --keyserver pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" &&
      \tcurl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz
      && \tcurl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o
      nginx.tar.gz.asc && \tgpg --verify nginx.tar.gz.asc && \tmkdir -p /usr/src &&
      \ttar -zxC /usr/src -f nginx.tar.gz && \trm nginx.tar.gz* && \trm -r /root/.gnupg
      && \thg clone http://hg.nginx.org/njs /usr/src/njs && \tcd /usr/src/nginx-$NGINX_VERSION
      && \t./configure $CONFIG --add-module=/usr/src/njs/nginx && \tmake install &&
      \tstrip /usr/sbin/nginx && \trunDeps=\"$( \t\tscanelf --needed --nobanner /usr/sbin/nginx
      \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u
      \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" && \tapk add --virtual
      .nginx-rundeps $runDeps && \tapk del .build-deps && \trm -rf /usr/src/*"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /usr/sbin/nginx
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
