MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Maintainer: baykier <1035666345@qq.com>
    Name: maintainer
  - Env:
    - Key: WORKER_DIR
      Value: '"/var/project"'
    Name: env
  - Env:
    - Key: HOST_DIR
      Value: '"$WORKER_DIR/htdocs"'
    Name: env
  - Env:
    - Key: LOG_DIR
      Value: '"$WORKER_DIR/log"'
    Name: env
  - Env:
    - Key: DATA_DIR
      Value: '"$WORKER_DIR/data"'
    Name: env
  - Env:
    - Key: CONFIG_DIR
      Value: '"$WORKER_DIR/conf"'
    Name: env
  - Env:
    - Key: BACKUP_DIR
      Value: '"/var/backup"'
    Name: env
  - CmdLine:
    - mkdir -p $WORKER_DIR $LOG_DIR $DATA_DIR $CONFIG_DIR $HOST_DIR $BACKUP_DIR
    Name: run
    PrependShell: true
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkgconf
        \t\tre2c"
    Name: env
  - CmdLine:
    - "apk add --no-cache --virtual .persistent-deps \t\tca-certificates \t\tcurl
      \t\ttar \t\txz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& addgroup -g 82 -S www-data \t&& adduser -u 82 -D -S -G www-data
      www-data"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: $CONFIG_DIR/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data
    Name: env
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 0BD78B5F97500D450838F95DFE857D9A90D90EC1 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 5.6.29
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://secure.php.net/get/php-5.6.29.tar.xz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"https://secure.php.net/get/php-5.6.29.tar.xz.asc/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"0ff352a433f73e2c82b0d5b283b600402518569bf72a74e247f356dacbf322a7"'
    - Key: PHP_MD5
      Value: '"190bf5b52d1fc68d5500a8cdc7e33164"'
    Name: env
  - CmdLine:
    - "set -xe; \t\tapk add --no-cache --virtual .fetch-deps \t\tgnupg \t\topenssl
      \t; \t\tmkdir -p /usr/src; \tcd /usr/src; \t\twget -O php.tar.xz \"$PHP_URL\";
      \t\tif [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum
      -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\"
      | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\twget -O php.tar.xz.asc
      \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS;
      do \t\t\tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \t\tdone;
      \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \t\trm -r \"$GNUPGHOME\";
      \tfi; \t\tapk del .fetch-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./php/docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - "chmod 777 /usr/local/bin/docker-php-source \t&& chown root:root /usr/local/bin/docker-php-source"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe \t&& apk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\tcurl-dev
      \t\tlibedit-dev \t\tlibxml2-dev \t\topenssl-dev \t\tsqlite-dev \t\t&& export
      CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \t\tLDFLAGS=\"$PHP_LDFLAGS\"
      \t&& docker-php-source extract \t&& cd /usr/src/php \t&& ./configure \t\t--with-config-file-path=\"$PHP_INI_DIR\"
      \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t\t\t--disable-cgi
      \t\t\t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd \t\t\t\t--with-curl
      \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib \t\t\t\t$PHP_EXTRA_CONFIGURE_ARGS
      \t&& make -j \"$(getconf _NPROCESSORS_ONLN)\" \t&& make install \t&& { find
      /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}'
      + || true; } \t&& make clean \t&& docker-php-source delete \t\t&& runDeps=\"$(
      \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk '{ gsub(/,/,
      \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info
      --installed \t\t\t| sort -u \t)\" \t&& apk add --no-cache --virtual .php-rundeps
      $runDeps \t\t&& apk del .build-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./php/docker-php-ext-*
    - ./php/docker-php-entrypoint
    - /usr/local/bin/
  - CmdLine:
    - "chmod 777 /usr/local/bin/docker-php-ext-* \t&& chown root:root /usr/local/bin/docker-php-ext-*
      \t&& chmod 777 /usr/local/bin/docker-php-entrypoint \t&& chown root:root /usr/local/bin/docker-php-entrypoint"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& cd $PHP_INI_DIR \t&& if [ -d php-fpm.d ]; then \t\tsed 's!=NONE/!=!g'
      php-fpm.conf.default | tee php-fpm.conf > /dev/null; \t\tcp php-fpm.d/www.conf.default
      php-fpm.d/www.conf; \telse \t\tmkdir php-fpm.d; \t\tcp php-fpm.conf.default
      php-fpm.d/www.conf; \t\t{ \t\t\techo '[global]'; \t\t\techo \"$PHP_INI_DIR/php-fpm.d/*.conf\";
      \t\t} | tee php-fpm.conf; \tfi \t&& { \t\techo '[global]'; \t\techo 'error_log
      = /proc/self/fd/2'; \t\techo; \t\techo '[www]'; \t\techo '; if we send this
      to /proc/self/fd/1, it never appears'; \t\techo 'access.log = /proc/self/fd/2';
      \t\techo; \t\techo 'clear_env = no'; \t\techo; \t\techo '; Ensure worker stdout
      and stderr are sent to the main error log.'; \t\techo 'catch_workers_output
      = yes'; \t} | tee php-fpm.d/docker.conf \t&& { \t\techo '[global]'; \t\techo
      'daemonize = no'; \t\techo; \t\techo '[www]'; \t\techo 'listen = [::]:9000';
      \t} | tee php-fpm.d/zz-docker.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $LOG_DIR/php
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./php/php.ini
    - $PHP_INI_DIR/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./php/php-fpm.conf
    - $PHP_INI_DIR/
  - CmdLine:
    - "set -ex \t&& sed -i \"s:{LOG_DIR}:$LOG_DIR:g\" $PHP_INI_DIR/php.ini \t&& sed
      -i \"s:{LOG_DIR}:$LOG_DIR:g\" $PHP_INI_DIR/php-fpm.conf \t&& sed -i \"s:{PHP_INI_DIR}:$PHP_INI_DIR:g\"
      $PHP_INI_DIR/php-fpm.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/src/php-ext/sign
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./php/sign/*
    - /var/src/php-ext/sign/
  - CmdLine:
    - "apk add --no-cache --virtual .build-deps      \t\t\t\t\t\tgit     \t\t\t\t\t\tautoconf
      \    \t\t\t\t\t\tg++     \t\t\t\t\t\tlibtool     \t\t\t\t\t\tmake     \t&& apk
      add --no-cache libmemcached-dev                                zlib-dev                               cyrus-sasl-dev
      \    \t&& docker-php-source extract     \t&& pecl install memcache-2.2.7     \t&&
      docker-php-ext-enable memcache         && pecl install memcached-2.2.0         &&
      docker-php-ext-enable memcached         && apk add \t--no-cache            \t\t\tfreetype
      \           \t\t\tlibpng            \t\t\tlibjpeg-turbo            \t\t\tfreetype-dev
      \           \t\t\tlibpng-dev            \t\t\tlibjpeg-turbo-dev        && docker-php-ext-configure
      gd            \t\t\t--with-gd            \t\t\t--with-freetype-dir=/usr/include/
      \           \t\t\t--with-png-dir=/usr/include/            \t\t\t--with-jpeg-dir=/usr/include/
      \        && docker-php-ext-install gd         && docker-php-ext-enable gd         &&
      apk del \t--no-cache            \t\t\tfreetype-dev            \t\t\tlibpng-dev
      \           \t\t\tlibjpeg-turbo-dev         && pecl install xdebug-2.5.0         &&
      docker-php-ext-enable xdebug         && docker-php-ext-install pdo_mysql         &&
      docker-php-ext-install mysqli         && pecl install redis-3.1.0         &&
      docker-php-ext-enable redis         && apk add --no-cache         \t\t\tlibmcrypt-dev
      \        \t\t\tlibltdl         && docker-php-ext-configure mcrypt         &&
      docker-php-ext-install mcrypt         && docker-php-ext-install calendar         &&
      docker-php-ext-install zip         && docker-php-ext-install exif         &&
      apk add --no-cache  \ticu-dev         && pecl install intl \t&& docker-php-ext-enable
      intl \t\t&& mkdir -p /usr/src/php/ext/sign \t\t&& cp  /var/src/php-ext/sign/*
      /usr/src/php/ext/sign/ \t\t&& docker-php-ext-install sign         && docker-php-source
      delete         && apk del .build-deps"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --update --no-cache \tlighttpd \tlighttpd-mod_auth   && rm -rf /var/cache/apk/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p $CONFIG_DIR/lighttpd  $LOG_DIR/lighttpd \t&& cp /etc/lighttpd/* $CONFIG_DIR/lighttpd/"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./lighttpd/*
    - $CONFIG_DIR/lighttpd/
  - CmdLine:
    - "set -ex \t&& sed -i \"s:{LOG_DIR}:$LOG_DIR:g\" $CONFIG_DIR/lighttpd/lighttpd.conf
      \    && sed -i \"s:{HOST_DIR}:$HOST_DIR:g\" $CONFIG_DIR/lighttpd/lighttpd.conf
      \    && sed -i \"s:{CONF_DIR}:$CONFIG_DIR:g\" $CONFIG_DIR/lighttpd/lighttpd.conf
      \    && mkdir -p $CONFIG_DIR/lighttpd/vhosts     && echo \"#vhost example.conf\"
      > $CONFIG_DIR/lighttpd/vhosts/example.conf     && echo \"#\\$HTTP[\\\"host\\\"]
      == \\\"example.com\\\" {\" >> $CONFIG_DIR/lighttpd/vhosts/example.conf     &&
      echo \"#server.name = \\\"example.com\\\" \" >> $CONFIG_DIR/lighttpd/vhosts/example.conf
      \    && echo \"#server.document-root = \\\"example_path\\\" \" >> $CONFIG_DIR/lighttpd/vhosts/example.conf
      \    && echo \"#}\" >> $CONFIG_DIR/lighttpd/vhosts/example.conf"
    Name: run
    PrependShell: true
  - Env:
    - Key: MEMCACHED_VERSION
      Value: 1.4.34
    Name: env
  - Env:
    - Key: MEMCACHED_SHA1
      Value: 7c7214f5183c6e20c22b243e21ed1ffddb91497e
    Name: env
  - Env:
    - Key: MEMCACHED_PORT
      Value: "11211"
    Name: env
  - CmdLine:
    - "set -ex \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev
      \t\tlibevent-dev \t\tlinux-headers \t\tmake \t\tperl \t\ttar \t&& wget -O memcached.tar.gz
      \"http://memcached.org/files/memcached-$MEMCACHED_VERSION.tar.gz\" \t&& echo
      \"$MEMCACHED_SHA1  memcached.tar.gz\" | sha1sum -c - \t&& mkdir -p /usr/src/memcached
      \t&& tar -xzf memcached.tar.gz -C /usr/src/memcached --strip-components=1 \t&&
      rm memcached.tar.gz \t&& cd /usr/src/memcached \t&& ./configure \t&& make -j$(getconf
      _NPROCESSORS_ONLN) \t&& make install \t&& cd / && rm -rf /usr/src/memcached
      \t&& runDeps=\"$( \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t|
      awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t|
      xargs -r apk info --installed \t\t\t| sort -u \t)\" \t&& apk add --virtual .memcached-rundeps
      $runDeps \t&& apk del .build-deps"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& apk add --update openssh \t&& rm  -rf /tmp/* /var/cache/apk/*
      \t&& rm -rf /etc/ssh/ssh_host_* \t&& ssh-keygen -A \t&& sed -i 's/#Port 22/Port
      22/g' /etc/ssh/sshd_config \t&& mkdir -p /var/run/sshd \t&& echo '#allow root
      user login' >> /etc/ssh/sshd_config     && echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config
      \    && echo 'PermitEmptyPasswords yes' >> /etc/ssh/sshd_config"
    Name: run
    PrependShell: true
  - Env:
    - Key: IDALLOCATOR_DIR
      Value: /var/src/idallocator
    Name: env
  - CmdLine:
    - mkdir -p $IDALLOCATOR_DIR
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./idallocator/*
    - $IDALLOCATOR_DIR/
  - CmdLine:
    - "set -ex \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev
      \t&& cd $IDALLOCATOR_DIR \t&& gcc  idallocator.c \t&& mv a.out /usr/local/bin/idallocator
      \t&& mkdir -p $LOG_DIR/idallocator \t&& mkdir -p $CONFIG_DIR/idallocator \t&&
      mkdir -p $DATA_DIR/idallocator \t&& mkdir -p /var/run/idallocator \t&& cp $IDALLOCATOR_DIR/idallocator.conf
      $CONFIG_DIR/idallocator/ \t&& echo '1' > $DATA_DIR/idallocator/order.tb \t&&
      echo '1' > $DATA_DIR/idallocator/goods.tb \t&& sed -i \"s:{LOG_DIR}:$LOG_DIR:g\"
      $CONFIG_DIR/idallocator/idallocator.conf     && sed -i \"s:{DATA_DIR}:$DATA_DIR:g\"
      $CONFIG_DIR/idallocator/idallocator.conf     && apk del .build-deps"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& apk add --no-cache samba samba-common-tools  \t&& rm -rf /var/cache/apk/*
      \t&& mkdir -p $CONFIG_DIR/samba \t&& cp -a /etc/samba/* $CONFIG_DIR/samba/         &&
      mkdir -p $LOG_DIR/samba"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./samba/*
    - $CONFIG_DIR/samba/
  - CmdLine:
    - "set -ex         && chown root:root $CONFIG_DIR/samba/smb.conf         && chmod
      777 $CONFIG_DIR/samba/smb.conf \t&& sed -i \"s:{LOG_DIR}:$LOG_DIR:g\" $CONFIG_DIR/samba/smb.conf
      \       && sed -i \"s:{WORKER_DIR}:$WORKER_DIR:g\" $CONFIG_DIR/samba/smb.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cp -a $WORKER_DIR/* $BACKUP_DIR \t&& chmod 777 -R $BACKUP_DIR"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./init.sh
    - /usr/local/bin/init.sh
  - CmdLine:
    - "chmod 777 /usr/local/bin/init.sh \t&& chown root:root /usr/local/bin/init.sh"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $WORKER_DIR
  - Name: volume
    Volumes:
    - $WORKER_DIR
  - Name: expose
    Ports:
    - 137/udp
    - 138/udp
    - "139"
    - "22"
    - "443"
    - "445"
    - "80"
  - CmdLine:
    - /usr/local/bin/init.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
