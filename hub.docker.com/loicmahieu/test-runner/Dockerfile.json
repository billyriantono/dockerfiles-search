{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NVM_VERSION",
              "Value": "v0.34.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_UNSAFE_PERM",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "18.09.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"# Upgrade apt\" \u0026\u0026     apt-get -qq update \u0026\u0026 apt-get upgrade -y \u0026\u0026     echo \"# Install git\" \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     add-apt-repository -y ppa:git-core/ppa \u0026\u0026     apt-get -qq update \u0026\u0026     apt-get install -y git \u0026\u0026     git --version \u0026\u0026     apt-get remove -y software-properties-common \u0026\u0026     echo \"# Install common dev dependencies via apt\" \u0026\u0026     apt-get install -y curl                        wget                        rsync                        patch                        build-essential                        python                        mysql-client-5.7                        libfreetype6 libfontconfig                        default-jre                        xvfb                        locales                        \u0026\u0026     echo \"# Generate locales\" \u0026\u0026     locale-gen en_US.UTF-8 \u0026\u0026     locale-gen fr_BE.UTF-8 \u0026\u0026     export LANG=en_US.UTF-8 \u0026\u0026     export LC_CTYPE=fr_BE.UTF-8 \u0026\u0026     echo \"# Install firefox\" \u0026\u0026     apt-get install -y firefox=64.0+build3-0ubuntu0.18.04.1 \u0026\u0026     echo \"# Install google-chrome-stable\" \u0026\u0026     sh -c 'echo \"deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main\" \u003e /etc/apt/sources.list.d/google-chrome.list' \u0026\u0026     wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026     apt-get install -y apt-transport-https \u0026\u0026     apt-get -qq update \u0026\u0026     apt-get install -y google-chrome-stable \u0026\u0026     apt-get remove -y apt-transport-https \u0026\u0026     echo \"# Install nvm\" \u0026\u0026     curl -o- https://raw.githubusercontent.com/creationix/nvm/$NVM_VERSION/install.sh | bash \u0026\u0026     cp /root/.nvm/nvm.sh /etc/profile.d/ \u0026\u0026     echo \"# Install rvm\" \u0026\u0026     mkdir ~/.gnupg \u0026\u0026 echo \"disable-ipv6\" \u003e\u003e ~/.gnupg/dirmngr.conf \u0026\u0026     gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB \u0026\u0026     curl -sSL https://get.rvm.io | bash -s stable --ruby \u0026\u0026     echo \"source /etc/profile.d/rvm.sh\" \u003e\u003e ~/.bashrc \u0026\u0026     echo \"# Install wkhtmltopdf\" \u0026\u0026     apt install -y wget libxrender1 xfonts-utils xfonts-base xfonts-75dpi libfontenc1 x11-common xfonts-encodings libxfont2 fontconfig \u0026\u0026     wget --quiet https://downloads.wkhtmltopdf.org/0.12/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \u0026\u0026     mkdir -p /opt \u0026\u0026     tar -xf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz -C /opt \u0026\u0026     rm -rf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \u0026\u0026     ln /opt/wkhtmltox/bin/wkhtmltopdf /usr/local/bin/wkhtmltopdf \u0026\u0026     ln /opt/wkhtmltox/bin/wkhtmltoimage /usr/local/bin/wkhtmltoimage \u0026\u0026     echo \"# Install docker\" \u0026\u0026     curl -fSL \"https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VERSION.tgz\" -o docker.tgz \u0026\u0026   \ttar -xzvf docker.tgz \u0026\u0026   \tmv docker/* /usr/local/bin/ \u0026\u0026   \trmdir docker \u0026\u0026   \trm docker.tgz \u0026\u0026   \tdocker -v \u0026\u0026     echo \"# Install google cloud sdk\" \u0026\u0026     export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" \u0026\u0026     echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee /etc/apt/sources.list.d/google-cloud-sdk.list \u0026\u0026     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \u0026\u0026     apt-get -qq update \u0026\u0026 apt-get install -y google-cloud-sdk \u0026\u0026     echo \"# Clean\" \u0026\u0026     apt-get clean \u0026\u0026 SUDO_FORCE_REMOVE=yes apt-get autoremove -y \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_HOST",
              "Value": "tcp://docker:2375"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BASH_ENV",
              "Value": "\"/etc/profile\""
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}