{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.2",
      "SourceCode": "FROM alpine:3.2",
      "Platform": "",
      "From": {
        "Image": "alpine:3.2"
      },
      "Commands": [
        {
          "Maintainer": "Lo√Øc Mahieu \u003cmahieuloic@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "v4.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update curl make gcc g++ python linux-headers paxctl libgcc libstdc++ \u0026\u0026   curl -sSL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.gz | tar -xz \u0026\u0026   cd /node-${NODE_VERSION} \u0026\u0026   ./configure --prefix=/usr ${CONFIG_FLAGS} \u0026\u0026   make -j$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1) \u0026\u0026   make install \u0026\u0026   paxctl -cm /usr/bin/node \u0026\u0026   cd / \u0026\u0026   if [ -x /usr/bin/npm ]; then     npm install -g npm@2 \u0026\u0026     find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf;   fi \u0026\u0026   apk del curl make gcc g++ python linux-headers paxctl ${DEL_PKGS} \u0026\u0026   rm -rf /etc/ssl /node-${NODE_VERSION} ${RM_DIRS}     /usr/share/man /tmp/* /var/cache/apk/* /root/.npm /root/.node-gyp     /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html \u0026\u0026   echo \"rm -rf /tmp/*        /root/.npm        /usr/bin/npm        /usr/bin/node        /usr/include/node        /usr/lib/node_modules        /usr/share/man        /usr/share/doc        /usr/bin/uninstall_node \" \u003e /usr/bin/uninstall_node \u0026\u0026 chmod +x /usr/bin/uninstall_node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "nginx-1.9.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add openssl-dev pcre-dev zlib-dev wget build-base \u0026\u0026     mkdir -p /tmp/src \u0026\u0026     cd /tmp/src \u0026\u0026     wget http://nginx.org/download/${NGINX_VERSION}.tar.gz \u0026\u0026     tar -zxvf ${NGINX_VERSION}.tar.gz \u0026\u0026     cd /tmp/src/${NGINX_VERSION} \u0026\u0026     ./configure         --with-http_ssl_module         --with-http_gzip_static_module         --prefix=/etc/nginx         --http-log-path=/var/log/nginx/access.log         --error-log-path=/var/log/nginx/error.log         --sbin-path=/usr/local/sbin/nginx \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026     ln -sf /dev/stderr /var/log/nginx/error.log \u0026\u0026     apk del wget build-base \u0026\u0026     rm -rf /tmp/src \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/nginx"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "rm -rf /scripts"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}