{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Luuk Verhoeven luuk@moodlefreak.com",
          "Name": "maintainer"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/moodledata"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3306",
            "443",
            "80"
          ]
        },
        {
          "Key": "moodle_version",
          "Name": "arg",
          "Value": "35"
        },
        {
          "Env": [
            {
              "Key": "MOODLE_VERSION",
              "Value": "$moodle_version"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MOODLE_EMAIL",
              "Value": "luuk@moodlefreak.com"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MOODLE_URL",
              "Value": "http://127.0.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install vim mysql-client pwgen python-setuptools curl git unzip apache2 php         php-gd libapache2-mod-php postfix wget supervisor php-pgsql curl libcurl3         libcurl3-dev php-curl php-xmlrpc php-intl php-mysql git-core php-xml php-mbstring         php-zip php-soap cron php7.0-ldap python-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install supervisor-stdout"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget -O moodle.zip https://download.moodle.org/download.php/direct/stable$MOODLE_VERSION/moodle-3.5.zip \u0026\u0026     unzip moodle.zip \u0026\u0026     mv /tmp/moodle/* /var/www/html/ \u0026\u0026     rm /var/www/html/index.html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "moodlecron",
            "/etc/cron.d/moodlecron"
          ]
        },
        {
          "CmdLine": [
            "chmod 0644 /etc/cron.d/moodlecron"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod ssl \u0026\u0026 a2ensite default-ssl  #if using proxy dont need actually secure connection"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/error_reporting = .*/error_reporting = E_ALL/\" /etc/php/7.0/cli/php.ini \u0026\u0026     sed -i \"s/display_errors = .*/display_errors = On/\" /etc/php/7.0/cli/php.ini \u0026\u0026     sed -i \"s/;date.timezone.*/date.timezone = UTC/\" /etc/php/7.0/cli/php.ini \u0026\u0026     sed -i \"s/error_reporting = .*/error_reporting = E_ALL/\" /etc/php/7.0/apache2/php.ini \u0026\u0026     sed -i \"s/display_errors = .*/display_errors = On/\" /etc/php/7.0/apache2/php.ini \u0026\u0026     sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.0/apache2/php.ini \u0026\u0026     sed -i \"s/upload_max_filesize = .*/upload_max_filesize = 100M/\" /etc/php/7.0/apache2/php.ini \u0026\u0026     sed -i \"s/post_max_size = .*/post_max_size = 100M/\" /etc/php/7.0/apache2/php.ini \u0026\u0026     sed -i \"s/;date.timezone.*/date.timezone = UTC/\" /etc/php/7.0/apache2/php.ini \u0026\u0026     sed -i \"s/AllowOverride None*/AllowOverride All/\" /etc/apache2/apache2.conf \u0026\u0026     find /etc/php/7.0/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \u0026\u0026     mv composer.phar /usr/local/bin/composer \u0026\u0026     printf \"\\nPATH=\\\"~/.composer/vendor/bin:\\$PATH\\\"\\n\" | tee -a ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.9/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export NVM_DIR=\"$HOME/.nvm\" \u0026\u0026 \t[ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\" \u0026\u0026 \t nvm install 8.9 \u0026\u0026 \t nvm use 8.9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export NVM_DIR=\"$HOME/.nvm\" \u0026\u0026 \t[ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\" \u0026\u0026 \tcd /var/www/html/ \u0026\u0026 \tcomposer create-project -n --no-dev --prefer-dist moodlerooms/moodle-plugin-ci ci ^2 \u0026\u0026 \texport PATH=\"$(cd ci/bin; pwd):$(cd ci/vendor/bin; pwd):$PATH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export NVM_DIR=\"$HOME/.nvm\" \u0026\u0026     [ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\" \u0026\u0026     npm install -g yarn async"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /var/www/html/ \u0026\u0026 composer install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export NVM_DIR=\"$HOME/.nvm\" \u0026\u0026     [ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\" \u0026\u0026     cd /var/www/html/ \u0026\u0026     ln -s /usr/bin/nodejs /usr/bin/node \u0026\u0026     yarn install --prefer-offline"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O /tmp/local_commander.zip https://moodle.org/plugins/download.php/16351/local_commander_moodle34_2018032702.zip \u0026\u0026     cd /tmp  \u0026\u0026     unzip local_commander.zip \u0026\u0026     mkdir /var/www/html/local/commander \u0026\u0026     mv /tmp/commander/* /var/www/html/local/commander"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean autoclean \u0026\u0026 apt-get autoremove -y \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/lib/dpkg/* /var/lib/cache/* /var/lib/log/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugin-test.sh",
            "/var/www/html/plugin-test.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /var/www/html/plugin-test.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "directlogin.php",
            "/var/www/html/directlogin.php"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "privacy_export.php",
            "/var/www/html/privacy_export.php"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "privacy_test.php",
            "/var/www/html/privacy_test.php"
          ]
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./foreground.sh",
            "/etc/apache2/foreground.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/apache2/foreground.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"AcceptPathInfo On\" \u003e\u003e /etc/apache2/apache2.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export NVM_DIR=\"$HOME/.nvm\" \u0026\u0026     [ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\" \u0026\u0026     npm install -g grunt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's/\\r$//' /var/www/html/plugin-test.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/etc/apache2/foreground.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}