MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive     && apt-get update     && apt-get install
      -y         autoconf         binutils         bison         ca-certificates         flex         gdb         git         gpg         install-info         iputils-ping         iproute2         less         libtool         libjson-c-dev         libpcre3-dev         libpython-dev         libreadline-dev         libc-ares-dev         libcap-dev         man         mininet         pkg-config         python-pip         python-sphinx         rsync         strace         tcpdump         texinfo         tmux         valgrind         vim         wget         x11-xserver-utils         xterm     &&
      pip install         exabgp==3.4.17         ipaddr         pytest     && rm -rf
      /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive     && apt-key adv --keyserver keyserver.ubuntu.com
      --recv-key 5418F291D0D4A1AA     && echo "deb https://deb.frrouting.org/frr bionic
      frr-stable" > /etc/apt/sources.list.d/frr.list     && apt-get update     &&
      apt-get install -y libyang-dev     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r -g 92 frr     && groupadd -r -g 85 frrvty     && useradd -c "FRRouting
      suite"                -d /var/run/frr                -g frr                -G
      frrvty                -r                -s /sbin/nologin                frr     &&
      useradd -d /var/run/exabgp/                -s /bin/false                exabgp
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "" >> /etc/security/limits.conf;     echo "* soft core unlimited" >> /etc/security/limits.conf;     echo
      "root soft core unlimited" >> /etc/security/limits.conf;     echo "* hard core
      unlimited" >> /etc/security/limits.conf;     echo "root hard core unlimited"
      >> /etc/security/limits.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/inner
    - /opt/topotests
  - Env:
    - Key: PATH
      Value: '"$PATH:/opt/topotests"'
    Name: env
  - CmdLine:
    - echo "cat /opt/topotests/motd.txt" >> /root/.profile &&       echo "export PS1='(topotests)
      $PS1'" >> /root/.profile
    Name: run
    PrependShell: true
  - CmdLine:
    - bash
    - /opt/topotests/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
