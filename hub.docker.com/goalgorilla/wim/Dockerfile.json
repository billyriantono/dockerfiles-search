{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache",
      "SourceCode": "FROM php:7.1-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache"
      },
      "Commands": [
        {
          "Maintainer": "devel@goalgorilla.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y   libpng-dev   libjpeg-dev   libpq-dev   libmcrypt-dev   zip unzip   mysql-client   git   ssmtp   nano   vim   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr   \u0026\u0026 docker-php-ext-install gd mbstring mcrypt pdo pdo_mysql pdo_pgsql zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install -y unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker_build/mailcatcher-ssmtp.conf",
            "/etc/ssmtp/ssmtp.conf"
          ]
        },
        {
          "CmdLine": [
            "echo \"hostname=goalgorilla.com\" \u003e\u003e /etc/ssmtp/ssmtp.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'sendmail_path = \"/usr/sbin/ssmtp -t\"' \u003e /usr/local/etc/php/conf.d/mail.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker_build/php.ini",
            "/usr/local/etc/php/php.ini"
          ]
        },
        {
          "CmdLine": [
            "docker-php-ext-install zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install bcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker_build/composer.json",
            "/root/.composer/composer.json"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker_build/composer.lock",
            "/root/.composer/composer.lock"
          ]
        },
        {
          "CmdLine": [
            "composer global install --prefer-dist"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /root/.composer/vendor/bin/drush /usr/local/bin/drush"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/var/www/html/profiles/wim"
          ]
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data *"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if [ ! -f /root/.composer/vendor/drush/drush/lib/Console_Table-1.1.3/Table.php ]; then pear install Console_Table; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export TERM=xterm\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}