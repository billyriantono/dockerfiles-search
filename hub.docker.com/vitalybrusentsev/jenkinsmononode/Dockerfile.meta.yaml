MetaArgs: null
Stages:
- BaseName: vitalybrusentsev/docker-jenkins
  Commands:
  - CmdLine:
    - "apt-get update \t&& apt-get install -y curl zip \t&& git config --system url.\"https://\".insteadOf
      git://"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"deb http://download.mono-project.com/repo/debian wheezy/snapshots/3.12.0
      main\" > /etc/apt/sources.list.d/mono-xamarin.list \t&& apt-get update \t&&
      apt-get install -y mono-devel ca-certificates-mono fsharp mono-vbnc nuget"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python python-dev python-pip python-virtualenv &&   rm -rf
      /var/lib/apt/lists/* &&   cd /tmp &&   wget http://nodejs.org/dist/node-latest.tar.gz
      &&   tar xvzf node-latest.tar.gz &&   rm -f node-latest.tar.gz &&   cd node-v*
      &&   ./configure &&   CXX="g++ -Wno-unused-local-typedefs" make &&   CXX="g++
      -Wno-unused-local-typedefs" make install &&   cd /tmp &&   rm -rf /tmp/node-v*
      &&   npm install -g npm &&   echo -e '\n# Node.js\nexport PATH="node_modules/.bin:$PATH"'
      >> /root/.bashrc &&   apt-get clean &&   rm -rf /var/lib/apt/lists/
    Name: run
    PrependShell: true
  From:
    Image: vitalybrusentsev/docker-jenkins
  Name: ""
  Platform: ""
  SourceCode: FROM    vitalybrusentsev/docker-jenkins
