{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Eddy Kim \u003ceddykim87@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CUDA_VERSION",
              "Value": "9.0.176"
            },
            {
              "Key": "CUDA_PKG_VERSION",
              "Value": "\"9-0=9.0.176-1\""
            },
            {
              "Key": "PATH",
              "Value": "/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}"
            },
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/extras/CUPTI/lib64"
            },
            {
              "Key": "NVIDIA_VISIBLE_DEVICES",
              "Value": "all"
            },
            {
              "Key": "NVIDIA_DRIVER_CAPABILITIES",
              "Value": "compute,utility"
            },
            {
              "Key": "NVIDIA_REQUIRE_CUDA",
              "Value": "\"cuda\u003e=9.0\""
            },
            {
              "Key": "NCCL_VERSION",
              "Value": "2.1.2"
            },
            {
              "Key": "CUDNN_VERSION",
              "Value": "7.0.5.15"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "com.nvidia.volumes.needed",
              "Value": "\"nvidia_driver\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "com.nvidia.cuda.version",
              "Value": "\"${CUDA_VERSION}\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "com.nvidia.cudnn.version",
              "Value": "\"${CUDNN_VERSION}\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 \u0026\u0026     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 \u0026\u0026     apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub \u0026\u0026     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +5 \u003e cudasign.pub \u0026\u0026     echo \"$NVIDIA_GPGKEY_SUM  cudasign.pub\" | sha256sum -c --strict - \u0026\u0026 rm cudasign.pub \u0026\u0026     echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /\" \u003e /etc/apt/sources.list.d/cuda.list \u0026\u0026     echo \"deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /\" \u003e /etc/apt/sources.list.d/nvidia-ml.list \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y --no-install-recommends cuda-cudart-$CUDA_PKG_VERSION \u0026\u0026     ln -s cuda-9.0 /usr/local/cuda \u0026\u0026     echo \"/usr/local/nvidia/lib\" \u003e\u003e /etc/ld.so.conf.d/nvidia.conf \u0026\u0026     echo \"/usr/local/nvidia/lib64\" \u003e\u003e /etc/ld.so.conf.d/nvidia.conf \u0026\u0026     apt-get install -y --no-install-recommends         cuda-libraries-$CUDA_PKG_VERSION         libnccl2=$NCCL_VERSION-1+cuda9.0 libcudnn7=$CUDNN_VERSION-1+cuda9.0         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         unzip \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qq -y install curl bzip2     \u0026\u0026 curl -sSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/miniconda.sh     \u0026\u0026 bash /tmp/miniconda.sh -bfp /usr/local     \u0026\u0026 rm -rf /tmp/miniconda.sh     \u0026\u0026 conda install -y python=3     \u0026\u0026 conda update conda     \u0026\u0026 conda create -n jupyterlab python=3 -y     \u0026\u0026 conda install -c condaforge jupyterlab -n jupyterlab     \u0026\u0026 source activate jupyterlab     \u0026\u0026 pip --no-cache-dir install         Pillow         h5py         matplotlib         numpy         pandas         scipy         sklearn         https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.5.0-cp36-cp36m-linux_x86_64.whl     \u0026\u0026 apt-get -qq -y remove curl bzip2     \u0026\u0026 apt-get -qq -y autoremove     \u0026\u0026 apt-get autoclean     \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/log/dpkg.log     \u0026\u0026 conda clean --all --yes     \u0026\u0026 useradd -m jupyterlab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/jupyterlab"
        },
        {
          "CmdLine": [
            "/bin/su -s     /bin/bash -c     \"source activate jupyterlab \u0026\u0026 jupyter lab --ip 0.0.0.0 --port 8888 --notebook-dir /home/jupyterlab\"     jupyterlab"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        }
      ]
    }
  ]
}