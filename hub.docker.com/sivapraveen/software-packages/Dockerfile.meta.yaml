MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends mysql-server
      tcl &&   apt-get install --no-install-recommends -y -q curl python build-essential
      git ca-certificates &&   apt-get install -y libgmp3-dev &&   apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - '{   echo ''[mysqld]'';   echo ''character-set-server=utf8'';   echo ''collation-server=utf8_general_ci'';   echo
      ''[client]'';   echo ''default-character-set=utf8''; } > /etc/mysql/conf.d/charset.cnf'
    Name: run
    PrependShell: true
  - Env:
    - Key: REDIS_VERSION
      Value: 3.2.4
    Name: env
  - CmdLine:
    - cd /tmp &&   wget http://download.redis.io/releases/redis-$REDIS_VERSION.tar.gz
      &&   tar xfvz redis-$REDIS_VERSION.tar.gz &&   cd redis-$REDIS_VERSION &&   make
      &&   make install &&   cd ../ &&   rm -f redis-$REDIS_VERSION.tar.gz &&   rm
      -rf redis-$REDIS_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /nodejs &&     curl http://nodejs.org/dist/v0.10.30/node-v0.10.30-linux-x64.tar.gz
      | tar xvzf - -C /nodejs --strip-components=1
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/nodejs/bin
    Name: env
  - CmdLine:
    - apt-get update -qqy && apt-get install -qqy   bzip2   gawk   g++   gcc   make   libreadline6-dev   libyaml-dev   libsqlite3-dev   sqlite3   autoconf   libgmp-dev   libgdbm-dev   libncurses5-dev   automake   libtool   bison   pkg-config   libffi-dev   &&
      rm -rf /var/lib/apt/lists
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qqy && apt-get install -qqy   git   curl   nodejs   libpq-dev   libmysqlclient-dev   qt5-default   libqt5webkit5-dev   imagemagick   libmagickwand-dev   xvfb   &&
      rm -rf /var/lib/apt/lists
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL -o - https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
      | tar -xjf - -O phantomjs-2.1.1-linux-x86_64/bin/phantomjs > /usr/bin/phantomjs
      && chmod +x /usr/bin/phantomjs
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
      &&     \curl -sSL https://get.rvm.io | bash -s stable
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c 'source /etc/profile.d/rvm.sh'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo bundler >> /usr/local/rvm/gemsets/global.gems
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "rvm_install_on_use_flag=1\nrvm_gemset_create_on_use_flag=1\nrvm_quiet_curl_flag=1"
      > ~/.rvmrc
    Name: run
    PrependShell: true
  - Env:
    - Key: PREINSTALLED_RUBIES
      Value: '"2.4.0 2.3.2 2.3.1 2.3.0 2.2.2 2.2.1 2.1.5 2.1.4 2.1.2 2.1.1"'
    Name: env
  - CmdLine:
    - /bin/bash -l -c 'for version in $PREINSTALLED_RUBIES; do echo "Now installing
      Ruby $version"; rvm install $version; rvm cleanup all; done'
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '3i . /etc/profile.d/rvm.sh\n' ~/.profile
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ~/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l
    Name: entrypoint
    PrependShell: true
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
