MetaArgs: null
Stages:
- BaseName: java:8-jre
  Commands:
  - Env:
    - Key: SERVICE_HOME
      Value: /home/pdi
    - Key: POSTGRESQL_DRIVER_VERSION
      Value: 42.2.5
    - Key: PDI_VERSION
      Value: "8.0"
    - Key: PDI_BUILD
      Value: 8.0.0.0-28
    - Key: PDI_USER
      Value: pdi
    Name: env
  - CmdLine:
    - useradd -md $SERVICE_HOME -s /bin/bash $PDI_USER
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${SERVICE_HOME}
  - Env:
    - Key: PDI_DIR
      Value: ${SERVICE_HOME}/data-integration
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./jdbc-libs
    - jdbc-libs/
  - CmdLine:
    - wget --progress=dot:giga https://jdbc.postgresql.org/download/postgresql-${POSTGRESQL_DRIVER_VERSION}.jar
      -P ${SERVICE_HOME}/jdbc-libs/
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget --progress=dot:giga http://downloads.sourceforge.net/project/pentaho/Pentaho%20${PDI_VERSION}/client-tools/pdi-ce-${PDI_BUILD}.zip
      \t&& unzip -q *.zip \t&& rm -f *.zip"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - ${PDI_DIR}/docker-entrypoint.sh
  - CmdLine:
    - chmod +x ${PDI_DIR}/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo $PDI_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f ${PDI_DIR}/lib/postgre*.jar && cp -rv ${SERVICE_HOME}/jdbc-libs/postgresql-${POSTGRESQL_DRIVER_VERSION}.jar
      ${PDI_DIR}/lib/
    Name: run
    PrependShell: true
  - CmdLine:
    - "tar -zxvf ${SERVICE_HOME}/jdbc-libs/sqljdbc_7.2.1.0_enu.tar.gz -C ${SERVICE_HOME}/jdbc-libs/
      \t&& cp ${SERVICE_HOME}/jdbc-libs/sqljdbc_7.2/enu/mssql-jdbc-7.2.1.jre8.jar
      ${PDI_DIR}/lib/ \t&& cp ${SERVICE_HOME}/jdbc-libs/sqljdbc_7.2/enu/auth/x86/sqljdbc_auth.dll
      ${PDI_DIR}/libswt/win64/"
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R $PDI_USER:$PDI_USER ${SERVICE_HOME}/ &&     chown -R $PDI_USER:$PDI_USER
      /tmp
    Name: run
    PrependShell: true
  - Name: user
    User: $PDI_USER
  - Name: workdir
    Path: ${PDI_DIR}
  - CmdLine:
    - mkdir ${PDI_DIR}/FilesRepository
    Name: run
    PrependShell: true
  - CmdLine:
    - ./docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - $SERVER_PORT
  From:
    Image: java:8-jre
  Name: ""
  Platform: ""
  SourceCode: FROM java:8-jre
