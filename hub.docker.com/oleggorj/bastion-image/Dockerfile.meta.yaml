MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Name: user
    User: root
  - Key: OPENSSH_VERSION
    Name: arg
    Value: V_7_4_P1
  - CmdLine:
    - apk --update add linux-pam libssl1.0 shadow ca-certificates openssl &&     update-ca-certificates
      &&     ln -s /lib /lib64
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - patches/
    - /usr/src/patches/
  - CmdLine:
    - apk --update add --virtual .build-deps build-base automake autoconf libtool
      git linux-pam-dev openssl-dev wget &&     mkdir -p /usr/src &&     cd /usr/src
      &&     ( wget https://dl.duosecurity.com/duo_unix-latest.tar.gz &&       tar
      zxf duo_unix-latest.tar.gz &&       cd duo_unix-* &&       ./configure --with-pam
      --prefix=/usr &&       make &&       make install &&       cd .. &&       rm
      -rf duo_unix-* &&       rm -f duo_unix-latest.tar.gz     ) &&     ( git clone
      https://github.com/google/google-authenticator-libpam /usr/src/google-authenticator-libpam
      &&       cd /usr/src/google-authenticator-libpam &&       ./bootstrap.sh &&       ./configure
      --prefix=/ &&       make &&       make install) &&     ( git clone https://github.com/openssh/openssh-portable.git
      /usr/src/openssh &&       cd /usr/src/openssh &&       git checkout ${OPENSSH_VERSION}
      &&       find ../patches/openssh -type f -exec patch -p1 -i {} \; &&       autoreconf
      &&       ./configure           --prefix=/usr           --sysconfdir=/etc/ssh           --datadir=/usr/share/openssh           --libexecdir=/usr/lib/ssh           --mandir=/usr/share/man           --with-pid-dir=/run           --with-mantype=man           --with-privsep-path=/var/empty           --with-privsep-user=sshd           --with-md5-passwords           --with-ssl-engine           --disable-wtmp           --with-pam
      &&       make &&       make install) &&     rm -rf /usr/src &&     apk del .build-deps
      &&     rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add curl drill groff util-linux bash xauth gettext sudo &&   rm
      -rf /etc/ssh/ssh_host_*_key* &&   rm -f /usr/bin/ssh-agent &&   rm -f /usr/bin/ssh-keyscan
      &&   touch /var/log/lastlog &&   mkdir -p /var/run/sshd &&   mv /etc/profile.d/color_prompt
      /etc/profile.d/color_prompt.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: TIMEZONE
      Value: Etc/UTC
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Env:
    - Key: HOSTNAME
      Value: bastion
    Name: env
  - Env:
    - Key: MFA_PROVIDER
      Value: duo
    Name: env
  - Env:
    - Key: UMASK
      Value: "0022"
    Name: env
  - Env:
    - Key: DUO_IKEY
      Value: ""
    Name: env
  - Env:
    - Key: DUO_SKEY
      Value: ""
    Name: env
  - Env:
    - Key: DUO_HOST
      Value: ""
    Name: env
  - Env:
    - Key: DUO_FAILMODE
      Value: secure
    Name: env
  - Env:
    - Key: DUO_AUTOPUSH
      Value: "yes"
    Name: env
  - Env:
    - Key: DUO_PROMPTS
      Value: "1"
    Name: env
  - Env:
    - Key: ENFORCER_ENABLED
      Value: "true"
    Name: env
  - Env:
    - Key: ENFORCER_CLEAN_HOME_ENABLED
      Value: "true"
    Name: env
  - Env:
    - Key: SSH_AUDIT_ENABLED
      Value: "true"
    Name: env
  - Env:
    - Key: RATE_LIMIT_ENABLED
      Value: "true"
    Name: env
  - Env:
    - Key: RATE_LIMIT_MAX_FAILURES
      Value: "5"
    Name: env
  - Env:
    - Key: RATE_LIMIT_LOCKOUT_TIME
      Value: "300"
    Name: env
  - Env:
    - Key: RATE_LIMIT_FAIL_DELAY
      Value: "3000000"
    Name: env
  - Env:
    - Key: SLACK_ENABLED
      Value: "false"
    Name: env
  - Env:
    - Key: SLACK_HOOK
      Value: sshrc
    Name: env
  - Env:
    - Key: SLACK_WEBHOOK_URL
      Value: ""
    Name: env
  - Env:
    - Key: SLACK_USERNAME
      Value: ""
    Name: env
  - Env:
    - Key: SLACK_TIMEOUT
      Value: "2"
    Name: env
  - Env:
    - Key: SLACK_FATAL_ERRORS
      Value: "true"
    Name: env
  - Env:
    - Key: SSH_AUTHORIZED_KEYS_COMMAND
      Value: none
    Name: env
  - Env:
    - Key: SSH_AUTHORIZED_KEYS_COMMAND_USER
      Value: nobody
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - rootfs/
    - /
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
