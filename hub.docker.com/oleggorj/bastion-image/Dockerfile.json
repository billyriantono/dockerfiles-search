{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Key": "OPENSSH_VERSION",
          "Name": "arg",
          "Value": "V_7_4_P1"
        },
        {
          "CmdLine": [
            "apk --update add linux-pam libssl1.0 shadow ca-certificates openssl \u0026\u0026     update-ca-certificates \u0026\u0026     ln -s /lib /lib64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "patches/",
            "/usr/src/patches/"
          ]
        },
        {
          "CmdLine": [
            "apk --update add --virtual .build-deps build-base automake autoconf libtool git linux-pam-dev openssl-dev wget \u0026\u0026     mkdir -p /usr/src \u0026\u0026     cd /usr/src \u0026\u0026     ( wget https://dl.duosecurity.com/duo_unix-latest.tar.gz \u0026\u0026       tar zxf duo_unix-latest.tar.gz \u0026\u0026       cd duo_unix-* \u0026\u0026       ./configure --with-pam --prefix=/usr \u0026\u0026       make \u0026\u0026       make install \u0026\u0026       cd .. \u0026\u0026       rm -rf duo_unix-* \u0026\u0026       rm -f duo_unix-latest.tar.gz     ) \u0026\u0026     ( git clone https://github.com/google/google-authenticator-libpam /usr/src/google-authenticator-libpam \u0026\u0026       cd /usr/src/google-authenticator-libpam \u0026\u0026       ./bootstrap.sh \u0026\u0026       ./configure --prefix=/ \u0026\u0026       make \u0026\u0026       make install) \u0026\u0026     ( git clone https://github.com/openssh/openssh-portable.git /usr/src/openssh \u0026\u0026       cd /usr/src/openssh \u0026\u0026       git checkout ${OPENSSH_VERSION} \u0026\u0026       find ../patches/openssh -type f -exec patch -p1 -i {} \\; \u0026\u0026       autoreconf \u0026\u0026       ./configure           --prefix=/usr           --sysconfdir=/etc/ssh           --datadir=/usr/share/openssh           --libexecdir=/usr/lib/ssh           --mandir=/usr/share/man           --with-pid-dir=/run           --with-mantype=man           --with-privsep-path=/var/empty           --with-privsep-user=sshd           --with-md5-passwords           --with-ssl-engine           --disable-wtmp           --with-pam \u0026\u0026       make \u0026\u0026       make install) \u0026\u0026     rm -rf /usr/src \u0026\u0026     apk del .build-deps \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --update add curl drill groff util-linux bash xauth gettext sudo \u0026\u0026   rm -rf /etc/ssh/ssh_host_*_key* \u0026\u0026   rm -f /usr/bin/ssh-agent \u0026\u0026   rm -f /usr/bin/ssh-keyscan \u0026\u0026   touch /var/log/lastlog \u0026\u0026   mkdir -p /var/run/sshd \u0026\u0026   mv /etc/profile.d/color_prompt /etc/profile.d/color_prompt.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TIMEZONE",
              "Value": "Etc/UTC"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOSTNAME",
              "Value": "bastion"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MFA_PROVIDER",
              "Value": "duo"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UMASK",
              "Value": "0022"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DUO_IKEY",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DUO_SKEY",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DUO_HOST",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DUO_FAILMODE",
              "Value": "secure"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DUO_AUTOPUSH",
              "Value": "yes"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DUO_PROMPTS",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ENFORCER_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ENFORCER_CLEAN_HOME_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSH_AUDIT_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RATE_LIMIT_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RATE_LIMIT_MAX_FAILURES",
              "Value": "5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RATE_LIMIT_LOCKOUT_TIME",
              "Value": "300"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RATE_LIMIT_FAIL_DELAY",
              "Value": "3000000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLACK_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLACK_HOOK",
              "Value": "sshrc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLACK_WEBHOOK_URL",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLACK_USERNAME",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLACK_TIMEOUT",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLACK_FATAL_ERRORS",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSH_AUTHORIZED_KEYS_COMMAND",
              "Value": "none"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSH_AUTHORIZED_KEYS_COMMAND_USER",
              "Value": "nobody"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}