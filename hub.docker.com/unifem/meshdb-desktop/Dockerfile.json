{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "unifem/fenics-desktop:latest",
      "SourceCode": "FROM unifem/fenics-desktop:latest",
      "Platform": "",
      "From": {
        "Image": "unifem/fenics-desktop:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Xiangmin Jiao \u003cxmjiao@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends         automake autogen autoconf libtool         libhdf5-100         libhdf5-dev         libhdf5-openmpi-100         libhdf5-openmpi-dev         hdf5-tools         libnetcdf13 libnetcdf-dev         libmetis5 libmetis-dev                 tk-dev         libglu1-mesa-dev         libxmu-dev \u0026\u0026     apt-get clean \u0026\u0026         pip3 install -U         cython         nose \u0026\u0026         mkdir -p /usr/lib/hdf5-openmpi \u0026\u0026     ln -s -f /usr/include/hdf5/openmpi /usr/lib/hdf5-openmpi/include \u0026\u0026     ln -s -f /usr/lib/x86_64-linux-gnu/hdf5/openmpi /usr/lib/hdf5-openmpi/lib \u0026\u0026         mkdir -p /usr/lib/hdf5-serial \u0026\u0026     ln -s -f /usr/include/hdf5/serial /usr/lib/hdf5-serial/include \u0026\u0026     ln -s -f /usr/lib/x86_64-linux-gnu/hdf5/serial /usr/lib/hdf5-serial/lib \u0026\u0026         rm -rf /var/lib/apt/lists/* /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     git clone --depth=1 -b master https://github.com/CGNS/CGNS.git \u0026\u0026     cd CGNS/src \u0026\u0026     export CC=\"mpicc\" \u0026\u0026     export LIBS=\"-Wl,--no-as-needed -ldl -lz -lsz -lpthread\" \u0026\u0026     ./configure --enable-64bit --with-zlib --with-hdf5=/usr/lib/hdf5-openmpi         --enable-parallel --enable-cgnstools --enable-lfs --enable-shared \u0026\u0026     sed -i 's/TKINCS =/TKINCS = -I\\/usr\\/include\\/tcl/' cgnstools/make.defs \u0026\u0026     make -j2 \u0026\u0026 make install \u0026\u0026     rm -rf /tmp/CGNS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     git clone --depth=1 -b master https://github.com/unifem/pyCGNS.git \u0026\u0026     cd pyCGNS \u0026\u0026     python3 setup.py build         --includes=/usr/include/hdf5/openmpi:/usr/include/openmpi         --libraries=/usr/lib/x86_64-linux-gnu/hdf5/openmpi \u0026\u0026     python3 setup.py install \u0026\u0026     rm -rf /tmp/pyCGNS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     git clone --depth=1 https://bitbucket.org/fathomteam/moab.git \u0026\u0026     cd moab \u0026\u0026     autoreconf -fi \u0026\u0026     ./configure         --prefix=/usr/local         --with-mpi         CC=mpicc         CXX=mpicxx         FC=mpif90         F77=mpif77         --enable-optimize         --enable-shared=yes         --with-blas=-lopenblas         --with-lapack=-lopenblas         --with-scotch=/usr/lib/x86_64-linux-gnu         --with-metis=/usr/lib/x86_64-linux-gnu         --with-eigen3=/usr/include/eigen3         --with-x         --with-cgns         --with-hdf5=/usr/lib/hdf5-openmpi         --with-hdf5-ldflags=\"-L/usr/lib/hdf5-openmpi/lib\"         --enable-ahf=yes         --enable-tools=yes \u0026\u0026     make -j2 \u0026\u0026 make install \u0026\u0026         cd pymoab \u0026\u0026     python3 setup.py install \u0026\u0026     rm -rf /tmp/moab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "image/home",
            "$DOCKER_HOME"
          ]
        },
        {
          "Name": "user",
          "User": "$DOCKER_USER"
        },
        {
          "Name": "workdir",
          "Path": "$DOCKER_HOME"
        },
        {
          "Name": "user",
          "User": "root"
        }
      ]
    }
  ]
}