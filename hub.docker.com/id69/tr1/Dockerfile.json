{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "dev@jpillora.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NAME",
              "Value": "cloud-torrent"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PACKAGE",
              "Value": "github.com/jpillora/$NAME"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PACKAGE_DIR",
              "Value": "$GOPATH/src/$PACKAGE"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.8.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_SRC_URL",
              "Value": "https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_SRC_SHA256",
              "Value": "33daf4c03f86120fdfdc66bddf6bfff4661c7ca11c5da473e537f4d69b470e57"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk update \t\u0026\u0026 apk add ca-certificates \t\u0026\u0026 apk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgit \t\tgo \t\tcurl \t\u0026\u0026 curl -s https://raw.githubusercontent.com/docker-library/golang/132cd70768e3bc269902e4c7b579203f66dc9f64/1.8/alpine/no-pic.patch -o /no-pic.patch \t\u0026\u0026 cat /no-pic.patch \t\u0026\u0026 export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\u0026\u0026 wget -q \"$GOLANG_SRC_URL\" -O golang.tar.gz \t\u0026\u0026 echo \"$GOLANG_SRC_SHA256  golang.tar.gz\" | sha256sum -c - \t\u0026\u0026 tar -C /usr/local -xzf golang.tar.gz \t\u0026\u0026 rm golang.tar.gz \t\u0026\u0026 cd /usr/local/go/src \t\u0026\u0026 patch -p2 -i /no-pic.patch \t\u0026\u0026 ./make.bash \t\u0026\u0026 mkdir -p $PACKAGE_DIR \t\u0026\u0026 git clone https://$PACKAGE.git $PACKAGE_DIR \t\u0026\u0026 cd $PACKAGE_DIR \t\u0026\u0026 go build -ldflags \"-X main.VERSION=$(git describe --abbrev=0 --tags)\" -o /usr/local/bin/$NAME \t\u0026\u0026 apk del .build-deps \t\u0026\u0026 rm -rf /no-pic.patch $GOPATH /usr/local/go"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cloud-torrent"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}