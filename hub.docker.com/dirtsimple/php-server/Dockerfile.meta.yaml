MetaArgs: null
Stages:
- As: dockerize
  BaseName: jwilder/dockerize:0.6.0
  Commands: null
  From:
    Image: jwilder/dockerize:0.6.0
  Name: dockerize
  Platform: ""
  SourceCode: FROM jwilder/dockerize:0.6.0 AS dockerize
- As: tools
  BaseName: bashitup/alpine-tools:latest
  Commands: null
  From:
    Image: bashitup/alpine-tools:latest
  Name: tools
  Platform: ""
  SourceCode: FROM bashitup/alpine-tools:latest AS tools
- BaseName: php:7.1.33-fpm-alpine3.9
  Commands:
  - Chown: ""
    From: dockerize
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/dockerize
    - /usr/bin/
  - Chown: ""
    From: tools
    Name: copy
    SourcesAndDest:
    - /bin/yaml2json
    - /usr/bin/
  - Chown: ""
    From: tools
    Name: copy
    SourcesAndDest:
    - /bin/modd
    - /usr/bin/
  - Chown: ""
    From: tools
    Name: copy
    SourcesAndDest:
    - /bin/jq
    - /usr/bin/
  - Env:
    - Key: LD_PRELOAD
      Value: /usr/lib/preloadable_libiconv.so php
    Name: env
  - CmdLine:
    - "apk --no-cache add \t\t--repository http://dl-3.alpinelinux.org/alpine/edge/community
      \t\tgnu-libiconv \t&& \tapk --update add \t\tbash nginx nginx-mod-http-lua nginx-mod-http-lua-upstream
      \t\tsupervisor ncurses certbot \t\tgit wget curl libcurl openssh-client ca-certificates
      \t\tdialog libpq icu-libs \t\tlibmcrypt libxslt libpng freetype libjpeg-turbo
      \t&&     apk add --virtual .build-deps \t\tautoconf gcc make musl-dev linux-headers
      libffi-dev \t\taugeas-dev python-dev icu-dev sqlite-dev openssl-dev \t\tlibmcrypt-dev
      libxslt-dev libpng-dev freetype-dev libjpeg-turbo-dev \t&& \tdocker-php-ext-configure
      gd \t\t--with-gd \t\t--with-freetype-dir=/usr/include/ --with-png-dir=/usr/include/
      \t\t--with-jpeg-dir=/usr/include/ \t&& \tdocker-php-ext-install \t\tpdo_mysql
      pdo_sqlite mysqli \t\tmcrypt gd exif intl xsl json soap dom zip opcache && \tpecl
      install xdebug && \tdocker-php-source delete && \tapk del .build-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://getcomposer.org/download/1.9.0/composer.phar
    - /usr/bin/composer
  - CmdLine:
    - "chmod ugo+rx /usr/bin/composer && \tmkdir -p /run/nginx /etc/nginx/sites-enabled
      && \tln -s ../sites-available/default.conf /etc/nginx/sites-enabled/default.conf"
    Name: run
    PrependShell: true
  - Env:
    - Key: CODE_BASE
      Value: /var/www/html
    Name: env
  - Env:
    - Key: GIT_SSH
      Value: /usr/bin/git-ssh
    Name: env
  - Env:
    - Key: COMPOSER_OPTIONS
      Value: --no-dev
    Name: env
  - Name: volume
    Volumes:
    - /etc/letsencrypt
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /usr/bin/start-container
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/install-extras
    - /usr/bin/
  - Key: EXTRA_APKS
    Name: arg
    Value: null
  - Key: EXTRA_EXTS
    Name: arg
    Value: null
  - Key: EXTRA_PECL
    Name: arg
    Value: null
  - CmdLine:
    - /usr/bin/install-extras
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/
    - /usr/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tpl
    - /tpl
  - Key: GLOBAL_REQUIRE
    Name: arg
    Value: hirak/prestissimo:^0.3.7
  - Env:
    - Key: COMPOSER_HOME
      Value: /composer
    Name: env
  - CmdLine:
    - '{ [[ -z "$GLOBAL_REQUIRE" ]] || composer-global $GLOBAL_REQUIRE; }     && mkdir
      -p /var/www/html     && echo ''<?php echo phpinfo();'' >/var/www/html/index.php'
    Name: run
    PrependShell: true
  From:
    Image: php:7.1.33-fpm-alpine3.9
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1.33-fpm-alpine3.9
