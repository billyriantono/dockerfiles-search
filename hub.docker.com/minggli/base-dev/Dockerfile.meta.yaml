MetaArgs: null
Stages:
- BaseName: buildpack-deps:bionic
  Commands:
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends     tk-dev
      && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.6.8
    Name: env
  - CmdLine:
    - set -ex         && wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"     &&
      wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && rm -rf "$GNUPGHOME" python.tar.xz.asc     &&
      mkdir -p /usr/src/python     && tar -xJC /usr/src/python --strip-components=1
      -f python.tar.xz     && rm python.tar.xz     && cd /usr/src/python     && gnuArch="$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)"     && ./configure         --build="$gnuArch"         --enable-loadable-sqlite-extensions         --enable-shared         --with-system-expat         --with-system-ffi         --without-ensurepip     &&
      make -j "$(nproc)"     && make install     && ldconfig         && find /usr/local
      -depth         \(             \( -type d -a \( -name test -o -name tests \)
      \)             -o             \( -type f -a \( -name '*.pyc' -o -name '*.pyo'
      \) \)         \) -exec rm -rf '{}' +     && rm -rf /usr/src/python         &&
      python3 --version
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin     && ln -s idle3 idle     && ln -s pydoc3 pydoc     && ln
      -s python3 python     && ln -s python3-config python-config
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 19.1.1
    Name: env
  - CmdLine:
    - set -ex;         wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py';         python
      get-pip.py         --disable-pip-version-check         --no-cache-dir         "pip==$PYTHON_PIP_VERSION"     ;     pip
      --version;         find /usr/local -depth         \(             \( -type d
      -a \( -name test -o -name tests \) \)             -o             \( -type f
      -a \( -name '*.pyc' -o -name '*.pyo' \) \)         \) -exec rm -rf '{}' +;     rm
      -f get-pip.py
    Name: run
    PrependShell: true
  From:
    Image: buildpack-deps:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:bionic
