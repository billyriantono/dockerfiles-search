{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:15.10",
      "SourceCode": "FROM ubuntu:15.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:15.10"
      },
      "Commands": [
        {
          "Maintainer": "Michael Haberler \u003chaberlerm@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026 apt-get install -y     build-essential     curl \u0026\u0026     curl -sL https://deb.nodesource.com/setup_6.x | bash - \u0026\u0026     apt-get install -y     asciinema     debconf     gcc     git     gnuplot     graphviz     imagemagick     libcurl3     libjpeg-dev     libprotoc-dev     libprotobuf-dev     libyaml-dev     linkchecker     make     mscgen     nodejs     openjdk-8-jdk     protobuf-compiler     python-dev     python-gtk2     python-pip      python-webcolors     python-numpy python-scipy python-matplotlib ipython ipython-notebook python-pandas python-sympy python-nose     python-pil     python-protobuf     python-pygooglechart     python-setuptools     qt5-default     libqt5core5a     qt5-qmake     rsync     ruby-dev     w3c-linkchecker \u0026\u0026     locale-gen en_US.UTF-8 \u0026\u0026     dpkg-reconfigure locales \u0026\u0026     pip install blockdiag actdiag seqdiag nwdiag \u0026\u0026     pip install seaborn \u0026\u0026     pip install prettyplotlib \u0026\u0026     pip install shaape \u0026\u0026     pip install python-frontmatter \u0026\u0026     pip install blockdiagcontrib-octicons \u0026\u0026     pip install blockdiagcontrib-cisco \u0026\u0026     pip install blockdiagcontrib-class \u0026\u0026     npm install -g mermaid  \u0026\u0026     npm install -g wavedrom-cli  \u0026\u0026     gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \u0026\u0026     curl -L https://get.rvm.io | bash -s stable \u0026\u0026     mkdir /tmp/phantomjs \u0026\u0026      curl -L https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2            | tar -xj --strip-components=1 -C /tmp/phantomjs \u0026\u0026     cd /tmp/phantomjs \u0026\u0026     mv bin/phantomjs /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.utf8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/usr/local/rvm/bin/rvm-shell \u0026\u0026 rvm requirements \u0026\u0026 rvm install 2.3.0 \u0026\u0026 rvm use 2.3.0 --default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/rvm/rubies/ruby-2.3.0/bin:/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./Gemfile",
            "/root/"
          ]
        },
        {
          "CmdLine": [
            "cd /root/  \u0026\u0026     gem update --system \u0026\u0026 gem install bundler \u0026\u0026 bundle install \u0026\u0026     git clone --depth=1 https://github.com/mhaberler/protoc-gen-doc.git  \u0026\u0026     cd protoc-gen-doc   \u0026\u0026     qmake   \u0026\u0026     make  \u0026\u0026     cp protoc-gen-doc /usr/local/bin \u0026\u0026     cd /root/  \u0026\u0026     git clone -b machinekit --single-branch https://github.com/mhaberler/pygments.git \u0026\u0026     cd pygments   \u0026\u0026     make mapfiles   \u0026\u0026     python setup.py install \u0026\u0026     cd $(dirname $(gem which pygments.rb))/../vendor \u0026\u0026     rm -rf pygments-main \u0026\u0026     ln -s /root/pygments pygments-main \u0026\u0026     cd $(dirname $(gem which pygments.rb))/.. \u0026\u0026     ruby cache-lexers.rb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "35729",
            "4000",
            "443",
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/work"
        }
      ]
    }
  ]
}