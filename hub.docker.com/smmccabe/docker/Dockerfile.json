{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache",
      "SourceCode": "FROM php:7.1-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libpng-dev libjpeg-dev libpq-dev mysql-client git libbz2-dev libgmp-dev acl unzip gnupg bc bzip2 wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install gd mbstring pdo pdo_mysql pdo_pgsql zip bcmath bz2 gmp pcntl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'sendmail_path=/bin/true' \u003e /usr/local/etc/php/conf.d/sendmail.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y build-essential chrpath libssl-dev libxft-dev libfreetype6-dev libfreetype6 libfontconfig1-dev libfontconfig1   \u0026\u0026 wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2   \u0026\u0026 tar jxf phantomjs-2.1.1-linux-x86_64.tar.bz2   \u0026\u0026 mv phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs   \u0026\u0026 chmod +x /usr/local/bin/phantomjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y google-chrome-stable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "CHROME_DRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`   \u0026\u0026 wget -N http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip -P ~/   \u0026\u0026 unzip ~/chromedriver_linux64.zip -d ~/   \u0026\u0026 rm ~/chromedriver_linux64.zip   \u0026\u0026 mv -f ~/chromedriver /usr/local/bin/chromedriver   \u0026\u0026 chmod 0755 /usr/local/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/nikic/php-ast.git   \u0026\u0026 cd php-ast   \u0026\u0026 phpize   \u0026\u0026 ./configure   \u0026\u0026 make install   \u0026\u0026 echo 'extension=ast.so' \u003e /usr/local/etc/php/conf.d/ast.ini   \u0026\u0026 cd ..   \u0026\u0026 rm php-ast -rf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O drush.phar https://github.com/drush-ops/drush-launcher/releases/download/0.6.0/drush.phar   \u0026\u0026 chmod +x drush.phar   \u0026\u0026 mv drush.phar /usr/local/bin/drush"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/composer/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o /tmp/composer-setup.php https://getcomposer.org/installer   \u0026\u0026 php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer \u0026\u0026 rm -rf /tmp/composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require \"hirak/prestissimo:^0.3\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://drupalconsole.com/installer -L -o drupal.phar   \u0026\u0026 chmod +x drupal.phar   \u0026\u0026 mv drupal.phar /usr/local/bin/drupal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar   \u0026\u0026 chmod +x phpcs.phar   \u0026\u0026 mv phpcs.phar /usr/local/bin/phpcs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require drupal/coder   \u0026\u0026 phpcs --config-set installed_paths /composer/vendor/drupal/coder/coder_sniffer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/smmccabe/phpmd/releases/download/2.7.0/phpmd.phar   \u0026\u0026 chmod +x phpmd.phar   \u0026\u0026 mv phpmd.phar /usr/local/bin/phpmd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/smmccabe/phpdebt/releases/download/0.4.0/phpdebt   \u0026\u0026 chmod +x phpdebt   \u0026\u0026 mv phpdebt /usr/local/bin/phpdebt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://phar.phpunit.de/phploc.phar   \u0026\u0026 chmod +x phploc.phar   \u0026\u0026 mv phploc.phar /usr/local/bin/phploc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require sebastian/phpcpd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://raw.githubusercontent.com/smmccabe/readmecheck/master/readmecheck   \u0026\u0026 chmod +x readmecheck   \u0026\u0026 mv readmecheck /usr/local/bin/readmecheck"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x -o nodesource_setup.sh   \u0026\u0026 bash nodesource_setup.sh   \u0026\u0026 rm nodesource_setup.sh   \u0026\u0026 apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -   \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list   \u0026\u0026 apt-get update \u0026\u0026 apt-get install yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL http://get.sensiolabs.org/security-checker.phar -o security-checker.phar   \u0026\u0026 chmod +x security-checker.phar   \u0026\u0026 mv security-checker.phar /usr/local/bin/security-checker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug     \u0026\u0026 echo \"zend_extension=$(find / -name xdebug.so)\" \u003e /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://platform.sh/cli/installer | php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install shellcheck"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/smmccabe/commercebot/releases/download/0.0.3/commercebot-linux   \u0026\u0026 chmod +x commercebot-linux   \u0026\u0026 mv commercebot-linux /usr/local/bin/commercebot"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}