MetaArgs: null
Stages:
- As: protoc_builder
  BaseName: alpine:3.11
  Commands:
  - CmdLine:
    - apk add --no-cache build-base curl automake autoconf libtool git zlib-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: OUTDIR
      Value: /out
    Name: env
  - CmdLine:
    - apk add --no-cache go
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    - Key: PATH
      Value: /go/bin/:$PATH
    Name: env
  - Env:
    - Key: GRPC_VERSION
      Value: 1.26.0
    - Key: GRPC_JAVA_VERSION
      Value: 1.26.0
    - Key: GRPC_WEB_VERSION
      Value: 1.0.7
    - Key: PROTOBUF_VERSION
      Value: 3.11.2
    - Key: PROTOBUF_C_VERSION
      Value: 1.3.2
    - Key: PROTOC_GEN_DOC_VERSION
      Value: 1.3.0
    Name: env
  - CmdLine:
    - mkdir -p ${OUTDIR}/usr/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u -v -ldflags '-w -s'         github.com/Masterminds/glide         github.com/golang/protobuf/protoc-gen-go         github.com/gogo/protobuf/protoc-gen-gofast         github.com/gogo/protobuf/protoc-gen-gogo         github.com/gogo/protobuf/protoc-gen-gogofast         github.com/gogo/protobuf/protoc-gen-gogofaster         github.com/gogo/protobuf/protoc-gen-gogoslick         github.com/twitchtv/twirp/protoc-gen-twirp         github.com/chrusty/protoc-gen-jsonschema/cmd/protoc-gen-jsonschema         github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger         github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway         github.com/johanbrandhorst/protobuf/protoc-gen-gopherjs         github.com/ckaznocha/protoc-gen-lint         github.com/mwitkow/go-proto-validators/protoc-gen-govalidators         github.com/envoyproxy/protoc-gen-validate         moul.io/protoc-gen-gotemplate         github.com/micro/protoc-gen-micro         &&
      (cd ${GOPATH}/src/github.com/envoyproxy/protoc-gen-validate && make build)         &&
      install -c ${GOPATH}/bin/protoc-gen* ${OUTDIR}/usr/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /protobuf &&         curl -L https://github.com/google/protobuf/archive/v${PROTOBUF_VERSION}.tar.gz
      | tar xvz --strip-components=1 -C /protobuf
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 --recursive -b v${GRPC_VERSION} https://github.com/grpc/grpc.git
      /grpc &&         rm -rf grpc/third_party/protobuf &&         ln -s /protobuf
      /grpc/third_party/protobuf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /grpc-java &&         curl -L https://github.com/grpc/grpc-java/archive/v${GRPC_JAVA_VERSION}.tar.gz
      | tar xvz --strip-components=1 -C /grpc-java
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /grpc-web &&         curl -L https://github.com/grpc/grpc-web/archive/${GRPC_WEB_VERSION}.tar.gz
      | tar xvz --strip-components=1 -C /grpc-web
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /protobuf-c &&         curl -L https://github.com/protobuf-c/protobuf-c/releases/download/v${PROTOBUF_C_VERSION}/protobuf-c-${PROTOBUF_C_VERSION}.tar.gz
      | tar xvz --strip-components=1 -C /protobuf-c
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /protobuf &&         autoreconf -f -i -Wall,no-obsolete &&         ./configure
      --prefix=/usr --enable-static=no &&         make -j2 && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd grpc &&         make -j2 plugins
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /grpc-java/compiler/src/java_plugin/cpp &&         g++         -I. -I/protobuf/src         *.cpp         -L/protobuf/src/.libs         -lprotoc
      -lprotobuf -lpthread --std=c++0x -s         -o protoc-gen-grpc-java
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /protobuf-c &&         ./configure --prefix=/usr &&         make -j2
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /protobuf &&         make install DESTDIR=${OUTDIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /grpc &&         make install-plugins prefix=${OUTDIR}/usr
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /grpc-java/compiler/src/java_plugin/cpp &&         install -c protoc-gen-grpc-java
      ${OUTDIR}/usr/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /grpc-web/javascript/net/grpc/web &&         make &&         install protoc-gen-grpc-web
      ${OUTDIR}/usr/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /protobuf-c &&         make install DESTDIR=${OUTDIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - find ${OUTDIR} -name "*.a" -delete -or -name "*.la" -delete
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc &&         curl
      -L https://github.com/pseudomuto/protoc-gen-doc/archive/v${PROTOC_GEN_DOC_VERSION}.tar.gz
      | tar xvz --strip 1 -C ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc &&         make build
      &&         install -c ${GOPATH}/src/github.com/pseudomuto/protoc-gen-doc/protoc-gen-doc
      ${OUTDIR}/usr/bin/
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.11
  Name: protoc_builder
  Platform: ""
  SourceCode: FROM alpine:3.11 as protoc_builder
- As: swift_builder
  BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get update &&         apt-get install -y build-essential make tar xz-utils
      bzip2 gzip sed         libz-dev unzip patchelf curl libedit-dev python2.7 python2.7-dev
      libxml2         git libxml2-dev uuid-dev libssl-dev bash patch
    Name: run
    PrependShell: true
  - Env:
    - Key: SWIFT_VERSION
      Value: 5.1.3
    - Key: LLVM_VERSION
      Value: 9.0.0
    Name: env
  - CmdLine:
    - curl -L http://releases.llvm.org/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-18.04.tar.xz
      | tar --strip-components 1 -C /usr/local/ -xJv
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://swift.org/builds/swift-${SWIFT_VERSION}-release/ubuntu1804/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu18.04.tar.gz
      | tar --strip-components 1 -C / -xz
    Name: run
    PrependShell: true
  - Env:
    - Key: SWIFT_PROTOBUF_VERSION
      Value: 1.7.0
    Name: env
  - CmdLine:
    - mkdir -p /swift-protobuf &&         curl -L https://github.com/apple/swift-protobuf/archive/${SWIFT_PROTOBUF_VERSION}.tar.gz
      | tar --strip-components 1 -C /swift-protobuf -xz
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libcurl4-openssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /swift-protobuf &&         swift build -c release
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /protoc-gen-swift &&         cp /swift-protobuf/.build/x86_64-unknown-linux/release/protoc-gen-swift
      /protoc-gen-swift/
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /lib64/ld-linux-x86-64.so.2         $(ldd /protoc-gen-swift/protoc-gen-swift
      | awk '{print $3}' | grep /lib | sort | uniq)         /protoc-gen-swift/
    Name: run
    PrependShell: true
  - CmdLine:
    - find /protoc-gen-swift/ -name 'lib*.so*' -exec patchelf --set-rpath /protoc-gen-swift
      {} \; &&         for p in protoc-gen-swift; do         patchelf --set-interpreter
      /protoc-gen-swift/ld-linux-x86-64.so.2 /protoc-gen-swift/${p};         done
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: swift_builder
  Platform: ""
  SourceCode: FROM ubuntu:18.04 as swift_builder
- As: javalite_builder
  BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get update &&         apt-get install -y bash patch curl patchelf
    Name: run
    PrependShell: true
  - Env:
    - Key: PROTOC_GEN_JAVALITE_VERSION
      Value: 3.0.0
    Name: env
  - CmdLine:
    - mkdir -p /protoc-gen-javalite &&         curl -L https://repo1.maven.org/maven2/com/google/protobuf/protoc-gen-javalite/${PROTOC_GEN_JAVALITE_VERSION}/protoc-gen-javalite-${PROTOC_GEN_JAVALITE_VERSION}-linux-x86_64.exe
      > /protoc-gen-javalite/protoc-gen-javalite &&         chmod 755 /protoc-gen-javalite/protoc-gen-javalite
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /lib64/ld-linux-x86-64.so.2         $(ldd /protoc-gen-javalite/protoc-gen-javalite
      | awk '{print $3}' | grep /lib | sort | uniq)         /protoc-gen-javalite/
    Name: run
    PrependShell: true
  - CmdLine:
    - find /protoc-gen-javalite/ -name 'lib*.so*' -exec patchelf --set-rpath /protoc-gen-javalite
      {} \; &&         for p in protoc-gen-javalite; do         patchelf --set-interpreter
      /protoc-gen-javalite/ld-linux-x86-64.so.2 --set-rpath /protoc-gen-javalite /protoc-gen-javalite/${p};         done
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: javalite_builder
  Platform: ""
  SourceCode: FROM ubuntu:18.04 as javalite_builder
- As: builder
  BaseName: alpine:3.11
  Commands:
  - Env:
    - Key: UPX_VERSION
      Value: 96433b4e39f230c935cb35e6e9125c1aec3ae29f
    - Key: LDFLAGS
      Value: -static
    Name: env
  - CmdLine:
    - apk add --no-cache build-base ucl-dev zlib-dev zlib-static git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 --recursive -b devel https://github.com/upx/upx.git /upx
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /upx/src &&     make -j2 upx.out CHECK_WHITESPACE=
    Name: run
    PrependShell: true
  - CmdLine:
    - /upx/src/upx.out --lzma -o /usr/bin/upx /upx/src/upx.out
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.11
  Name: builder
  Platform: ""
  SourceCode: FROM alpine:3.11 as builder
- As: packer
  BaseName: alpine:3.11
  Commands:
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/bin/upx
    - /usr/bin/upx
  - Chown: ""
    From: protoc_builder
    Name: copy
    SourcesAndDest:
    - /out/
    - /out/
  - CmdLine:
    - upx --lzma         /out/usr/bin/grpc_*         /out/usr/bin/protoc-gen-*
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.11
  Name: packer
  Platform: ""
  SourceCode: FROM alpine:3.11 as packer
- BaseName: alpine:3.11
  Commands:
  - CmdLine:
    - apk add --no-cache libstdc++
    Name: run
    PrependShell: true
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/
    - /
  - Chown: ""
    From: swift_builder
    Name: copy
    SourcesAndDest:
    - /protoc-gen-swift
    - /protoc-gen-swift
  - CmdLine:
    - for p in protoc-gen-swift protoc-gen-swiftgrpc; do         ln -s /protoc-gen-swift/${p}
      /usr/bin/${p};         done
    Name: run
    PrependShell: true
  - Chown: ""
    From: javalite_builder
    Name: copy
    SourcesAndDest:
    - /protoc-gen-javalite
    - /protoc-gen-javalite
  - CmdLine:
    - ln -s /protoc-gen-javalite/protoc-gen-javalite /usr/bin/protoc-gen-javalite
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache curl &&         mkdir -p /protobuf/google/protobuf &&         for
      f in any duration descriptor empty struct timestamp wrappers; do         curl
      -L -o /protobuf/google/protobuf/${f}.proto https://raw.githubusercontent.com/google/protobuf/master/src/google/protobuf/${f}.proto;         done
      &&         mkdir -p /protobuf/google/api &&         for f in annotations http;
      do         curl -L -o /protobuf/google/api/${f}.proto https://raw.githubusercontent.com/grpc-ecosystem/grpc-gateway/master/third_party/googleapis/google/api/${f}.proto;         done
      &&         mkdir -p /protobuf/github.com/gogo/protobuf/gogoproto &&         curl
      -L -o /protobuf/github.com/gogo/protobuf/gogoproto/gogo.proto https://raw.githubusercontent.com/gogo/protobuf/master/gogoproto/gogo.proto
      &&         mkdir -p /protobuf/github.com/mwitkow/go-proto-validators &&         curl
      -L -o /protobuf/github.com/mwitkow/go-proto-validators/validator.proto https://raw.githubusercontent.com/mwitkow/go-proto-validators/master/validator.proto
      &&         mkdir -p /protobuf/github.com/lyft/protoc-gen-validate/gogoproto
      &&         mkdir -p /protobuf/github.com/lyft/protoc-gen-validate/validate &&         curl
      -L -o /protobuf/github.com/lyft/protoc-gen-validate/gogoproto/gogo.proto https://raw.githubusercontent.com/lyft/protoc-gen-validate/master/gogoproto/gogo.proto
      &&         curl -L -o /protobuf/github.com/lyft/protoc-gen-validate/validate/validate.proto
      https://raw.githubusercontent.com/lyft/protoc-gen-validate/master/validate/validate.proto
      &&         apk del curl &&         chmod a+x /usr/bin/protoc
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/protoc
    - -I/protobuf
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.11
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.11
