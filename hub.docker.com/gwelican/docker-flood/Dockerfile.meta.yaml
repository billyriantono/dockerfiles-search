MetaArgs: null
Stages:
- BaseName: lsiobase/alpine:3.6
  Commands:
  - Maintainer: sparklyballs
    Name: maintainer
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: build_version
      Value: '"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}"'
    Name: label
  - CmdLine:
    - "apk add --no-cache --virtual=build-dependencies \tcurl \ttar &&  apk add --no-cache
      \tnodejs-npm \trtorrent \tscreen &&  mkdir -p \t/app/flood &&  flood_tag=$(curl
      -sX GET \"https://api.github.com/repos/jfurrow/flood/releases/latest\" \t| awk
      '/tag_name/{print $4;exit}' FS='[\"\"]') &&  curl -o  /tmp/flood.tar.gz -L \t\"https://github.com/jfurrow/flood/archive/${flood_tag}.tar.gz\"
      &&  tar xf  /tmp/flood.tar.gz -C \t/app/flood --strip-components=1 &&  cd /app/flood
      &&  npm install --production &&  cp /app/flood/config.docker.js /app/flood/config.js
      &&  sed -i \t-e \"s#dbPath: '.*',#dbPath: '/config/flood/db/',#\" \t-e \"s#sslKey:
      '.*',#sslKey: '/config/flood/flood_ssl.key',#\" \t-e \"s#sslCert: '.*'#sslCert:
      '/config/flood/flood_ssl.cert'#\" \t-e \"s#socketPath: '.*'#socketPath: '/config/rtorrent/rtorrent.sock'#\"
      \ /app/flood/config.js &&  apk del --purge \tbuild-dependencies &&  rm -rf \t/root
      \t/tmp/* &&  mkdir -p \t/root"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - Name: expose
    Ports:
    - "3000"
  - Name: volume
    Volumes:
    - /config
    - /downloads
  From:
    Image: lsiobase/alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM lsiobase/alpine:3.6
