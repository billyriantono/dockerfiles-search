{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.3",
      "SourceCode": "FROM alpine:3.3",
      "Platform": "",
      "From": {
        "Image": "alpine:3.3"
      },
      "Commands": [
        {
          "Maintainer": "Gwelican \u003csuperfly@gwelican.eu\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "adduser -S znc -u 1000 -G users"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONFIGUREFLAGS",
              "Value": "\"--enable-python\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLEANCMD",
              "Value": "\"apk del build-dependencies \u0026\u0026 rm -Rf /src*\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAKEFLAGS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ZNC_VERSION",
              "Value": "1.6.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual runtime-dependencies         icu         openssl         boost         python3         perl         cyrus-sasl \u0026\u0026     apk add --no-cache --virtual build-dependencies         build-base         cmake         git         icu-dev         openssl-dev         cyrus-sasl-dev         perl-dev         python3-dev         swig         gettext-dev         boost-dev         g++         icu-dev         openssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m ensurepip \u0026\u0026     rm -r /usr/lib/python*/ensurepip \u0026\u0026     pip3 install --upgrade pip setuptools requests \u0026\u0026     rm -r /root/.cache \u0026\u0026     mkdir /src \u0026\u0026 cd /src \u0026\u0026 wget \"http://znc.in/releases/archive/znc-${ZNC_VERSION}.tar.gz\"     \u0026\u0026 tar -zxf \"znc-${ZNC_VERSION}.tar.gz\"     \u0026\u0026 cd \"znc-${ZNC_VERSION}\"     \u0026\u0026 ./configure ${CONFIGUREFLAGS}     \u0026\u0026 make ${MAKEFLAGS}     \u0026\u0026 make install     \u0026\u0026 sh -c \"${CLEANCMD}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Name": "user",
          "User": "znc"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/znc-data"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}