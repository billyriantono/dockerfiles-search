MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Env:
    - Key: ERLANG_VERSION
      Value: "1:18.2"
    Name: env
  - Env:
    - Key: ELIXIR_VERSION
      Value: 1.2.3
    Name: env
  - Env:
    - Key: PHOENIX_VERSION
      Value: 1.1.2
    Name: env
  - CmdLine:
    - apt-get update && apt-get upgrade -y && apt-get install -y openssl wget git
      make inotify-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - wget http://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb  && dpkg
      -i erlang-solutions_1.0_all.deb  && apt-get update  && apt-get install erlang=$ERLANG_VERSION
      -y  && apt-get install erlang-base-hipe=$ERLANG_VERSION -y  && rm erlang-solutions_1.0_all.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/elixir-lang/elixir.git  && cd elixir  && git checkout
      v$ELIXIR_VERSION  && make
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/elixir/bin
    Name: env
  - CmdLine:
    - git clone https://github.com/phoenixframework/phoenix.git  && cd phoenix &&
      git checkout v$PHOENIX_VERSION  && mix local.hex --force && mix local.rebar
      --force  && mix do deps.get, compile  && wget https://github.com/phoenixframework/archives/raw/master/phoenix_new.ez  &&
      mix archive.install phoenix_new.ez --force
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_5.x | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install npm
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install npm -g
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/nodejs /usr/bin/node
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "4000"
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
