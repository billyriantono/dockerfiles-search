{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LLVM_VERSION",
              "Value": "3.4"
            },
            {
              "Key": "KLEE_BUILD_DIR",
              "Value": "/klee/build"
            },
            {
              "Key": "KLEE_UCLIBC_SOURCE_DIR",
              "Value": "/klee-uclibc"
            },
            {
              "Key": "HOME",
              "Value": "/home/urop"
            },
            {
              "Key": "DISPLAY",
              "Value": ":0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026   apt-get update \u0026\u0026   apt-get -y install     clang-${LLVM_VERSION}     llvm-${LLVM_VERSION}     llvm-${LLVM_VERSION}-dev     llvm-${LLVM_VERSION}-runtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y     build-essential     curl     libcap-dev     git     cmake     libncurses5-dev     python-minimal     python-pip     unzip     zlib1g-dev     flex     bison     python3-tk     python3-pip     pkg-config     libfreetype6-dev     vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026   git clone https://github.com/stp/minisat.git \u0026\u0026   mkdir -p minisat/build \u0026\u0026   cd minisat/build \u0026\u0026   cmake -DSTATIC_BINARIES=ON -DCMAKE_INSTALL_PREFIX=/usr/local ../ \u0026\u0026   make \u0026\u0026   sudo make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026   git clone https://github.com/stp/stp.git \u0026\u0026   cd stp \u0026\u0026   git checkout tags/2.1.2 \u0026\u0026   mkdir build \u0026\u0026   cd build \u0026\u0026   cmake -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_PYTHON_INTERFACE:BOOL=OFF ../ \u0026\u0026   make \u0026\u0026   sudo make install \u0026\u0026   cd ../ \u0026\u0026   ulimit -s unlimited \u0026\u0026   cd ../"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026   ln -s /usr/bin/llvm-config-${LLVM_VERSION} /usr/bin/llvm-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026   git clone https://github.com/klee/klee-uclibc.git \u0026\u0026   cd klee-uclibc \u0026\u0026   ./configure --make-llvm-lib \u0026\u0026   make -j2 \u0026\u0026   cd .. \u0026\u0026   git clone https://github.com/klee/klee.git \u0026\u0026   cd klee \u0026\u0026   mkdir build \u0026\u0026   cd build \u0026\u0026   cmake -DENABLE_SOLVER_STP=ON     -DLLVM_CONFIG_BINARY=/usr/bin/llvm-config-${LLVM_VERSION}     -DENABLE_UNIT_TESTS=OFF     -DENABLE_POSIX_RUNTIME=ON     -DENABLE_KLEE_UCLIBC=ON     -DKLEE_UCLIBC_PATH=${KLEE_UCLIBC_SOURCE_DIR}     -DENABLE_SYSTEM_TESTS=OFF ../ \u0026\u0026   make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026   mkdir -p ${HOME}/UROP"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/",
            "${HOME}/UROP"
          ]
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026   touch ${HOME}/.bashrc \u0026\u0026   (echo 'export PATH=$PATH:'${KLEE_BUILD_DIR}'/bin' \u003e\u003e ${HOME}/.bashrc) \u0026\u0026   export LLVM_COMPILER=clang"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026   (for executable in ${KLEE_BUILD_DIR}/bin/* ; do ln -s ${executable} /usr/bin/`basename ${executable}`; done)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026   pip install wllvm \u0026\u0026   pip3 install GitPython \u0026\u0026   pip3 install numpy \u0026\u0026   pip3 install matplotlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${HOME}"
        }
      ]
    }
  ]
}