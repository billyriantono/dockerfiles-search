{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tortxof/ruby-node",
      "SourceCode": "FROM tortxof/ruby-node",
      "Platform": "",
      "From": {
        "Image": "tortxof/ruby-node"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Daniel Jones \u003ctortxof@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "curl -L     https://github.com/zyedidia/micro/releases/download/v1.4.1/micro-1.4.1-linux64.tar.gz     | tar -xzOf - micro-1.4.1/micro     \u003e /usr/local/bin/micro \u0026\u0026     chmod +rx /usr/local/bin/micro"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L     https://cli.netlify.com/download/latest/linux     | tar -xz -C /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -qO /usr/local/bin/stout https://github.com/cloudflare/Stout/releases/download/v1.3.2/stout-linux \u0026\u0026     chmod +x /usr/local/bin/stout"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y       apt-transport-https       ca-certificates       sudo       groff       less"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CLOUDSDK_PYTHON",
              "Value": "/usr/bin/python2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLOUD_SDK_REPO",
              "Value": "cloud-sdk-jessie"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y       google-cloud-sdk       kubectl \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install \tawscli \tpipenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install -f   bundler   jekyll   therubyracer   sass   susy   compass   breakpoint   mustache   bourbon   neat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yarn global add   eslint   prettier   nodemon   babel-cli   grunt   gulp   browser-sync   autoprefixer-cli   foundation-cli   ember-cli   express-generator   http-server   harp   brunch   create-react-app   vue-cli   surge   serverless   claudia"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/host"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/host"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/host"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}