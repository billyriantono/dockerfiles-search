MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: MAINTAINER
      Value: Goavega Docker Maintainers
    Name: label
  - Env:
    - Key: NGINX_VERSION
      Value: 1.15.8-1~bionic
    Name: env
  - Env:
    - Key: FPM_VERSION
      Value: 7.2.10-0ubuntu0.18.04.1
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 1:7.2+60ubuntu1
    Name: env
  - Env:
    - Key: DOCKER_BUILD_DIR
      Value: /dockerbuild
    Name: env
  - Env:
    - Key: NGINX_CONF
      Value: /etc/nginx/nginx.conf
    Name: env
  - Env:
    - Key: APP_HOME
      Value: /home/site/wwwroot/
    Name: env
  - Env:
    - Key: php_scan_ini_dir
      Value: /etc/php/7.2/mods-available/
    Name: env
  - Env:
    - Key: php_conf
      Value: /etc/php/7.2/fpm/php.ini
    Name: env
  - Env:
    - Key: fpm_conf
      Value: /etc/php/7.2/fpm/php-fpm.conf
    Name: env
  - Env:
    - Key: fpm_pool
      Value: /etc/php/7.2/fpm/pool.d/www.conf
    Name: env
  - Env:
    - Key: NGINX_LOG_DIR
      Value: /home/LogFiles/nginx/
    Name: env
  - Env:
    - Key: SSH_PASSWD
      Value: '"root:Docker!"'
    Name: env
  - Name: workdir
    Path: $DOCKER_BUILD_DIR
  - CmdLine:
    - "apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests
      -y gnupg \t&& \tNGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62; \tfound='';
      \tfor server in \tha.pool.sks-keyservers.net \thkp://keyserver.ubuntu.com:80
      \thkp://p80.pool.sks-keyservers.net:80 \tpgp.mit.edu \t; do \techo \"Fetching
      GPG key $NGINX_GPGKEY from $server\"; \tapt-key adv --keyserver \"$server\"
      --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes &&
      break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG
      key $NGINX_GPGKEY\" && exit 1; \tapt-get -y --purge autoremove && rm -rf /var/lib/apt/lists/*
      \t&& echo \"deb http://nginx.org/packages/ubuntu/ bionic nginx\" >> /etc/apt/sources.list
      \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests
      -y nginx gettext-base"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -e \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests
      -y php7.2-fpm=${FPM_VERSION} php7.2-mysql=${FPM_VERSION} \t&& apt-get -y --no-install-recommends
      --no-install-suggests install php7.2-xml=${FPM_VERSION} php7.2-mbstring=${FPM_VERSION}
      php7.2-bcmath=${FPM_VERSION} php7.2-zip=${FPM_VERSION} php7.2-curl=${FPM_VERSION}
      php7.2-gd=${FPM_VERSION} php7.2-intl=${FPM_VERSION} php7.2-imap=${FPM_VERSION}
      php7.2-pspell=${FPM_VERSION} php7.2-recode=${FPM_VERSION} php7.2-tidy=${FPM_VERSION}
      php7.2-xmlrpc=${FPM_VERSION} \t&& apt-get install -y --no-install-recommends
      openssh-server supervisor \t&& echo \"$SSH_PASSWD\" | chpasswd \t&& rm -rf /var/lib/apt/lists/*
      \t&& apt-get purge -y \t&& apt-get autoremove -y \t&& echo \"daemon off;\" >>
      ${NGINX_CONF}"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex && \tsed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" ${php_conf}
      && \tsed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 8M/g\"
      ${php_conf} && \tsed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 8M/g\"
      ${php_conf} && \tsed -i -e \"s/variables_order = \\\"GPCS\\\"/variables_order
      = \\\"EGPCS\\\"/g\" ${php_conf} && \tsed -i -e \"s/listen = 127.0.0.1:9000/listen
      = \\/run\\/php7.2-fpm.sock/g\" ${fpm_pool} && \tsed -i -e \"s/listen.owner =
      www-data/listen.owner = nginx/g\" ${fpm_pool} && \tsed -i -e \"s/listen.group
      = www-data/listen.group = nginx/g\" ${fpm_pool} && \tsed -i -e \"s/user = www-data/user
      = nginx/g\" ${fpm_pool} && \tsed -i -e \"s/group = www-data/group = nginx/g\"
      ${fpm_pool} && \tsed -i -e \"s/;catch_workers_output\\s*=\\s*no/catch_workers_output
      = yes/g\" ${fpm_pool} && \tsed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output
      = yes/g\" ${fpm_pool}"
    Name: run
    PrependShell: true
  - CmdLine:
    - "rm -rf /var/log/nginx/ \t&& mkdir -p ${NGINX_LOG_DIR} \t&& ln -s /home/LogFiles/nginx
      /var/log/nginx"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./confs/default.conf
    - /etc/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./wwwroot/*
    - /home/site/wwwroot/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./entrypoint.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./confs/sshd_config
    - /etc/ssh/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./confs/opcache.ini
    - ${php_scan_ini_dir}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./wp_env.sh
    - /usr/local/bin/
  - Env:
    - Key: NGINX_HOST
      Value: '"_"'
    Name: env
  - Env:
    - Key: NGINX_PERM_REDIR
      Value: '"krimzen.com"'
    Name: env
  - CmdLine:
    - chmod u+x /usr/local/bin/wp_env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod u+x /usr/local/bin/entrypoint.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${APP_HOME}
  - Name: stopsignal
    Signal: SIGTERM
  - Name: expose
    Ports:
    - "2222"
    - "80"
  - CmdLine:
    - entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
