MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u191
    Name: env
  - Env:
    - Key: JAVA_ALPINE_VERSION
      Value: 8.191.12-r0
    Name: env
  - CmdLine:
    - "set -x \t&& apk add --no-cache \t\topenjdk8=\"$JAVA_ALPINE_VERSION\" && [ \"$JAVA_HOME\"
      = \"$(docker-java-home)\" ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache openssh
    Name: run
    PrependShell: true
  - Env:
    - Key: SONAR_SCANNER_VERSION
      Value: 3.2.0.1227
    Name: env
  - CmdLine:
    - apk add --update nodejs nodejs-npm
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache wget &&     wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
      &&     unzip sonar-scanner-cli-${SONAR_SCANNER_VERSION} &&     cd /usr/bin &&
      ln -s /sonar-scanner-${SONAR_SCANNER_VERSION}/bin/sonar-scanner sonar-scanner
      && apk del wget
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
