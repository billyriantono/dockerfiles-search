MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: ogi4i <ogi4i@ddn-tld.site>
    Name: maintainer
  - CmdLine:
    - buildDeps="         curl         g++         gnutls-dev         gpgme         libev-dev         libnl3-dev         libseccomp-dev         linux-headers         linux-pam-dev         lz4-dev         make         readline-dev         tar         xz     ";     set
      -x     && apk add --update --virtual .build-deps $buildDeps     && wget https://ocserv.gitlab.io/www/download.html     &&
      export ocserv_version=$(cat download.html | grep -o '[0-9]*\.[0-9]*\.[0-9]*')     &&
      export ocserv_url=ftp://ftp.infradead.org/pub/ocserv/ocserv-$ocserv_version.tar.xz     &&
      curl -SL $ocserv_url -o ocserv.tar.xz     && curl -SL $ocserv_url.sig -o ocserv.tar.xz.sig     &&
      gpg --keyserver pgp.mit.edu --recv-key 96865171     && gpg --verify ocserv.tar.xz.sig     &&
      mkdir -p /usr/src/ocserv     && tar -xf ocserv.tar.xz -C /usr/src/ocserv --strip-components=1     &&
      rm ocserv.tar.xz*     && cd /usr/src/ocserv     && ./configure     && make     &&
      make install     && mkdir -p /etc/ocserv     && cp /usr/src/ocserv/doc/sample.config
      /etc/ocserv/ocserv.conf     && cd /     && rm -rf /usr/src/ocserv     && runDeps="$(         scanelf
      --needed --nobanner /usr/local/sbin/ocserv             | awk '{ gsub(/,/, "\nso:",
      $2); print "so:" $2 }'             | xargs -r apk info --installed             |
      sort -u         )"     && apk add --virtual .run-deps $runDeps gnutls-utils
      iptables     && apk del .build-deps     && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe     && mkdir -p /etc/ocserv/certs     && mkdir -p /etc/ocserv/config-per-user     &&
      mkdir -p /etc/ocserv/config-per-group     && mkdir -p /etc/ocserv/defaults     &&
      touch /etc/ocserv/defaults/user.conf     && touch /etc/ocserv/defaults/group.conf     &&
      touch /etc/ocserv/ocpasswd     && sed -i -e 's@\./sample.passwd@/etc/ocserv/ocpasswd@'               -e
      's@\.\./tests/@/etc/ocserv/@'               -e 's@^#cert-group-oid =@cert-group-oid
      =@'               -e 's@^#compression =.*@compression = true@'               -e
      's@^#config-per-@config-per-@'               -e 's@^#default-@default-@'               -e
      's@^#enable-auth = "certificate"$@enable-auth = "certificate"@'               -e
      's@^default-domain@#&@'               -e 's@^dns =.*@dns = 8.8.8.8@'               -e
      's@^max-clients =.*@max-clients = 0@'               -e 's@^max-same-clients
      =.*@max-same-clients = 0@'               -e 's@^route@#&@'               -e
      's@^try-mtu-discovery =.*@try-mtu-discovery = true@'               /etc/ocserv/ocserv.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.sh
    - /init.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - Name: volume
    Volumes:
    - /etc/ocserv
  - Name: workdir
    Path: /etc/ocserv
  - Env:
    - Key: VPN_DOMAIN
      Value: vpn.easypi.pro
    - Key: VPN_NETWORK
      Value: 10.20.30.0
    - Key: VPN_NETMASK
      Value: 255.255.255.0
    - Key: LAN_NETWORK
      Value: 192.168.0.0
    - Key: LAN_NETMASK
      Value: 255.255.0.0
    - Key: VPN_USERNAME
      Value: username
    - Key: VPN_PASSWORD
      Value: password
    - Key: TERM
      Value: xterm
    Name: env
  - Name: expose
    Ports:
    - 443/tcp
    - 443/udp
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
