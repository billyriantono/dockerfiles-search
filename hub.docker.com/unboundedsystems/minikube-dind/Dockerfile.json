{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update -y \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get -yy -q --no-install-recommends install   iptables   ebtables   ethtool   ca-certificates   conntrack   socat   git   nfs-common   glusterfs-client   cifs-utils   apt-transport-https   ca-certificates   curl   gnupg2   software-properties-common   bridge-utils   ipcalc   aufs-tools   sudo   \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get clean \u0026\u0026   rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \u0026\u0026   apt-key export \"9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88\" | gpg - \u0026\u0026   echo \"deb [arch=amd64] https://download.docker.com/linux/debian jessie stable\" \u003e\u003e     /etc/apt/sources.list.d/docker.list \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get -yy -q --no-install-recommends install     docker-ce   \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get clean \u0026\u0026   rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2375"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8443"
          ]
        },
        {
          "Env": [
            {
              "Key": "MINIKUBE_VERSION",
              "Value": "v0.25.0"
            },
            {
              "Key": "K8S_VERSION",
              "Value": "v1.8.0"
            },
            {
              "Key": "KUBECTL_VERSION",
              "Value": "v1.9.1"
            },
            {
              "Key": "MINIKUBE_WANTUPDATENOTIFICATION",
              "Value": "false"
            },
            {
              "Key": "MINIKUBE_WANTREPORTERRORPROMPT",
              "Value": "false"
            },
            {
              "Key": "CHANGE_MINIKUBE_NONE_USER",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "fake-systemctl.sh",
            "/usr/local/bin/systemctl"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start.sh",
            "/start.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64",
            "/usr/local/bin/minikube"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl",
            "/usr/local/bin/kubectl"
          ]
        },
        {
          "CmdLine": [
            "chmod a+rx /usr/local/bin/minikube \u0026\u0026     chmod a+rx /usr/local/bin/systemctl \u0026\u0026     chmod a+rx /usr/local/bin/kubectl \u0026\u0026     chmod a+rx /start.sh \u0026\u0026     minikube start --vm-driver=none --kubernetes-version=${K8S_VERSION} \u0026\u0026     minikube stop \u0026\u0026     ls -lR /root/.minikube/cache \u0026\u0026     rm -rf /var/lib/localkube/{etcd,certs,kubeconfig} /tmp/* \u0026\u0026     (cd /root/.minikube \u0026\u0026 rm -rf $(ls | egrep -v '^cache'))"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}