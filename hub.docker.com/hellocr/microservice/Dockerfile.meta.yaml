MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Maintainer: simon
    Name: maintainer
  - Key: ARG_RUN_ENV
    Name: arg
    Value: production
  - Env:
    - Key: RUN_ENV
      Value: ${ARG_RUN_ENV}
    Name: env
  - Key: ARG_CONTAINER_CODE_PATH
    Name: arg
    Value: /var/www
  - Env:
    - Key: CONTAINER_CODE_PATH
      Value: ${ARG_CONTAINER_CODE_PATH}
    Name: env
  - Key: ARG_WORKSPACE_CONFIG
    Name: arg
    Value: /config
  - Env:
    - Key: WORKSPACE_CONFIG
      Value: ${ARG_WORKSPACE_CONFIG}
    Name: env
  - Key: ARG_WORKSPACE_DATA
    Name: arg
    Value: /data
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: ARG_APP_RUN_PUID
    Name: arg
    Value: "1000"
  - Key: ARG_APP_RUN_PGID
    Name: arg
    Value: "1000"
  - Key: ARG_APP_RUN_NAME
    Name: arg
    Value: crcms
  - Key: ARG_APP_RUN_GROUP
    Name: arg
    Value: crcms
  - Env:
    - Key: APP_RUN_PUID
      Value: ${ARG_APP_RUN_PUID}
    Name: env
  - Env:
    - Key: APP_RUN_PGID
      Value: ${ARG_APP_RUN_PGID}
    Name: env
  - Env:
    - Key: APP_RUN_NAME
      Value: ${ARG_APP_RUN_NAME}
    Name: env
  - Env:
    - Key: APP_RUN_GROUP
      Value: ${ARG_APP_RUN_GROUP}
    Name: env
  - CmdLine:
    - groupadd -g ${ARG_APP_RUN_PGID} ${ARG_APP_RUN_GROUP} &&     useradd -u ${ARG_APP_RUN_PUID}
      -g ${ARG_APP_RUN_PGID} ${ARG_APP_RUN_NAME} &&     usermod -s /sbin/nologin ${ARG_APP_RUN_NAME}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -yqq     && apt-get install -y rsyslog     && apt-get install
      -y curl     && apt-get install -y apt-utils     && apt-get install -y php7.2-dev     &&
      apt-get install -y php7.2-pdo-mysql     && apt-get install -y php7.2-mbstring     &&
      apt-get install -y php7.2-curl     && apt-get install -y php7.2-zip     && apt-get
      install -y php7.2-gd     && apt-get install -y php7.2-bcmath     && apt-get
      install -y composer
    Name: run
    PrependShell: true
  - Key: ARG_WORKSPACE_INSTALL_NPM
    Name: arg
    Value: "false"
  - CmdLine:
    - if [ ${ARG_WORKSPACE_INSTALL_NPM} = true ]; then     curl -sL https://deb.nodesource.com/setup_10.x
      | bash -     && apt-get install -y nodejs     && apt-get install -y build-essential
      ;fi
    Name: run
    PrependShell: true
  - Key: ARG_WORKSPACE_INSTALL_CRONTAB
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${ARG_WORKSPACE_INSTALL_CRONTAB} = true ]; then     apt-get install -y
      cron ;fi
    Name: run
    PrependShell: true
  - Key: ARG_WORKSPACE_INSTALL_SUPERVISOR
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${ARG_WORKSPACE_INSTALL_SUPERVISOR} = true ]; then     apt-get install
      -y supervisor ;fi
    Name: run
    PrependShell: true
  - Key: ARG_TIMEZONE
    Name: arg
    Value: Asia/Shanghai
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/${ARG_TIMEZONE} /etc/localtime && echo ${ARG_TIMEZONE}
      > /etc/timezone
    Name: run
    PrependShell: true
  - Key: ARG_PHP_MODS_AVAILABLE_PATH
    Name: arg
    Value: /etc/php/7.2/mods-available
  - Key: ARG_PHP_CONF_PATH
    Name: arg
    Value: /etc/php/7.2/cli/conf.d
  - Key: ARG_WORKSPACE_INSTALL_SWOOLE
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${ARG_WORKSPACE_INSTALL_SWOOLE} = true ]; then     pecl install swoole     &&
      echo "extension=swoole.so" > ${ARG_PHP_MODS_AVAILABLE_PATH}/swoole.ini     &&
      ln -s ${ARG_PHP_MODS_AVAILABLE_PATH}/swoole.ini ${ARG_PHP_CONF_PATH}/20-swoole.ini
      ;fi
    Name: run
    PrependShell: true
  - Key: ARG_WORKSPACE_INSTALL_MONGODB
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${ARG_WORKSPACE_INSTALL_MONGODB} = true ]; then     pecl install mongodb     &&
      echo "extension=mongodb.so" > ${ARG_PHP_MODS_AVAILABLE_PATH}/mongodb.ini     &&
      ln -s ${ARG_PHP_MODS_AVAILABLE_PATH}/mongodb.ini ${ARG_PHP_CONF_PATH}/20-mongodb.ini
      ;fi
    Name: run
    PrependShell: true
  - Key: ARG_WORKSPACE_INSTALL_REDIS
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${ARG_WORKSPACE_INSTALL_REDIS} = true ]; then     pecl install igbinary     &&
      echo "extension=igbinary.so" > ${ARG_PHP_MODS_AVAILABLE_PATH}/igbinary.ini     &&
      ln -s ${ARG_PHP_MODS_AVAILABLE_PATH}/igbinary.ini ${ARG_PHP_CONF_PATH}/20-igbinary.ini     &&
      pecl install redis     && echo "extension=redis.so" > ${ARG_PHP_MODS_AVAILABLE_PATH}/redis.ini     &&
      ln -s ${ARG_PHP_MODS_AVAILABLE_PATH}/redis.ini ${ARG_PHP_CONF_PATH}/20-redis.ini
      ;fi
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y autoremove
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${ARG_WORKSPACE_CONFIG}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./${ARG_RUN_ENV}
    - ${ARG_WORKSPACE_CONFIG}
  - Name: volume
    Volumes:
    - ${ARG_WORKSPACE_DATA}
    - ${ARG_CONTAINER_CODE_PATH}
  - Name: expose
    Ports:
    - 28080/tcp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./entrypoint.sh
    - /usr/bin/entrypoint.sh
  - CmdLine:
    - /usr/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  - Name: workdir
    Path: ${ARG_CONTAINER_CODE_PATH}
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
