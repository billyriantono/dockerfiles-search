MetaArgs: null
Stages:
- BaseName: ubuntu:wily
  Commands:
  - Maintainer: Joakim Nohlg√•rd <joakim.nohlgard@eistec.se>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - echo 'Adding gcc-arm-embedded PPA' >&2 &&     echo "deb http://ppa.launchpad.net/team-gcc-arm-embedded/ppa/ubuntu
      wily main"      > /etc/apt/sources.list.d/gcc-arm-embedded.list &&     apt-key
      adv --keyserver hkp://keyserver.ubuntu.com:80     --recv-keys B4D03348F75E3362B1E1C2A1D1FAA6ECF64D33B0
      &&     echo 'Upgrading all system packages to the latest available versions'
      >&2 &&     apt-get update && apt-get -y dist-upgrade     && echo 'Installing
      native toolchain and build system functionality' >&2 &&     apt-get -y install         bsdmainutils         build-essential         cmake         curl         cppcheck         doxygen         gcc-multilib         gdb         g++-multilib         git         graphviz         libpcre3         openocd         parallel         pcregrep         python         python3         python3-pexpect         p7zip         subversion         unzip         wget     &&
      echo 'Installing Cortex-M toolchain' >&2 &&     apt-get -y install         gcc-arm-embedded     &&
      echo 'Installing MSP430 toolchain' >&2 &&     apt-get -y install         gcc-msp430     &&
      echo 'Installing AVR toolchain' >&2 &&     apt-get -y install         gcc-avr         binutils-avr         avr-libc     &&
      echo 'Installing LLVM/Clang toolchain' >&2 &&     apt-get -y install         llvm         clang     &&
      echo 'Installing x86 bare metal emulation' >&2 &&     apt-get -y install         qemu-system-x86     &&
      echo 'Cleaning up installation files' >&2 &&     apt-get clean && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data/riotbuild
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --system user.name "riot" &&     git config --system user.email "riot@example.com"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run.sh
    - /run.sh
  - CmdLine:
    - /bin/bash
    - /run.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  - Name: workdir
    Path: /data/riotbuild
  From:
    Image: ubuntu:wily
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:wily
