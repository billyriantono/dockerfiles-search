MetaArgs:
- DefaultValue: wirepas/base:1.1-ubuntu
  Key: DOCKER_BASE
  ProvidedValue: null
  Value: wirepas/base:1.1-ubuntu
- DefaultValue: ':'
  Key: CROSS_BUILD_START_CMD
  ProvidedValue: null
  Value: ':'
- DefaultValue: ':'
  Key: CROSS_BUILD_END_CMD
  ProvidedValue: null
  Value: ':'
- DefaultValue: gateway.xml
  Key: GIT_MANIFEST_FILE
  ProvidedValue: null
  Value: gateway.xml
- DefaultValue: https://github.com/wirepas/manifest.git
  Key: GIT_MANIFEST_URL
  ProvidedValue: null
  Value: https://github.com/wirepas/manifest.git
- DefaultValue: master
  Key: GIT_MANIFEST_BRANCH
  ProvidedValue: null
  Value: master
Stages:
- As: builder
  BaseName: ${DOCKER_BASE}
  Commands:
  - Key: DOCKER_BASE
    Name: arg
    Value: null
  - Key: GIT_MANIFEST_FILE
    Name: arg
    Value: null
  - Key: GIT_MANIFEST_URL
    Name: arg
    Value: null
  - Key: GIT_MANIFEST_BRANCH
    Name: arg
    Value: null
  - CmdLine:
    - ${CROSS_BUILD_START_CMD}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app_build
  - CmdLine:
    - apt-get update      && apt-get install -y --no-install-recommends git curl python
      ssh     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://storage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo     &&
      chmod a+x /usr/local/bin/repo     && repo init -u ${GIT_MANIFEST_URL}                  -m
      ${GIT_MANIFEST_FILE}                  -b ${GIT_MANIFEST_BRANCH}                  --no-clone-bundle     &&
      repo sync
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "DOCKER_BASE=${DOCKER_BASE}" >> /app_build/manifest
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /app_build/sink_service/     && make clean     && make     && cd c-mesh-api     &&
      echo "LXGW_BUILD=$(date -u +'%Y-%m-%dT%H:%M:%SZ')"  >> /app_build/manifest     &&
      echo "LXGW_C_MESH_API_HASH=$(git log -n1 --pretty=%h)" >> /app_build/manifest
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /app_build/python_transport/     && echo "LXGW_SERVICES_HASH=$(git log -n1
      --pretty=%h)" >> /app_build/manifest     && echo "LXGW_VERSION=$(< wirepas_gateway/__about__.py
      awk '/__version__/{print $NF}'| tr -d '\"')" >> /app_build/manifest     && bash
      ./utils/generate_wheel.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ${CROSS_BUILD_END_CMD}
    Name: run
    PrependShell: true
  From:
    Image: ${DOCKER_BASE}
  Name: builder
  Platform: ""
  SourceCode: FROM ${DOCKER_BASE} as builder
- As: wm-lxgw
  BaseName: ${DOCKER_BASE}
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - ${CROSS_BUILD_START_CMD}
    Name: run
    PrependShell: true
  - Env:
    - Key: SERVICE_HOME
      Value: '"${WM_HOME}/gateway"'
    Name: env
  - Env:
    - Key: SINK_SERVICE
      Value: '"${SERVICE_HOME}/sink_service"'
    Name: env
  - Env:
    - Key: TRANSPORT_SERVICE
      Value: '"${SERVICE_HOME}/transport_service"'
    Name: env
  - Key: WM_TRANSPORT_PKG
    Name: arg
    Value: null
  - Env:
    - Key: WM_TRANSPORT_PKG
      Value: ${WM_TRANSPORT_PKG:-"${TRANSPORT_SERVICE}/wirepas_gateway-*.tar.gz"}
    Name: env
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app_build/python_transport/requirements.txt
    - '"${TRANSPORT_SERVICE}/"'
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app_build/python_transport/dist/*
    - '"${TRANSPORT_SERVICE}/"'
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app_build/python_transport/wirepas_gateway/wirepas_certs/extwirepas.pem
    - /etc/extwirepas.pem
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app_build/sink_service/build/sinkService
    - /usr/local/bin/sinkService
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app_build/sink_service/com.wirepas.sink.conf
    - /etc/dbus-1/system.d/
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app_build/manifest
    - '"${SERVICE_HOME}/manifest"'
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir -r "${TRANSPORT_SERVICE}/requirements.txt"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir ${WM_TRANSPORT_PKG}
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf "${WM_HOME}"/.cache && chown "${WM_USER}":"${WM_USER}" -R "${WM_HOME}"
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app_build/container/common/docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app_build/container/common/generate_settings.sh
    - '"${TRANSPORT_SERVICE}/generate_settings.sh"'
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app_build/container/common/wm_transport_service.template
    - '"${TRANSPORT_SERVICE}/wm_transport_service.template"'
  - CmdLine:
    - ${CROSS_BUILD_END_CMD}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${WM_HOME}
  - Name: user
    User: ${WM_USER}
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: DOCKER_BASE
    Name: arg
    Value: null
  - Key: IMAGE_NAME
    Name: arg
    Value: null
  - Key: GIT_MANIFEST_FILE
    Name: arg
    Value: null
  - Key: GIT_MANIFEST_URL
    Name: arg
    Value: null
  - Key: GIT_MANIFEST_BRANCH
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: com.wirepas.image.base
      Value: '"${DOCKER_BASE}"'
    Name: label
  - Labels:
    - Key: com.wirepas.source.manifest
      Value: '"${GIT_MANIFEST_URL}/${GIT_MANIFEST_FILE}#${GIT_MANIFEST_BRANCH}"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.created
      Value: '"${BUILD_DATE}"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.licenses
      Value: '"Apache-2.0"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.ref.name
      Value: '"${IMAGE_NAME}"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.schema-version
      Value: '"1.0"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.title
      Value: '"Wirepas gateway"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.url
      Value: '"https://github.com/wirepas/gateway"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.vendor
      Value: '"Wirepas Ltd"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.version
      Value: '"${VERSION}"'
    Name: label
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - sink
    Name: cmd
    PrependShell: false
  From:
    Image: ${DOCKER_BASE}
  Name: wm-lxgw
  Platform: ""
  SourceCode: FROM ${DOCKER_BASE} as wm-lxgw
