MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Archeti <info@archeti.ca>"'
    Name: label
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - CmdLine:
    - set -x;         apt-get update         && apt-get install -y --no-install-recommends             python3-wheel             python3-setuptools             python3-pip             curl             gnupg             libpq-dev             libsasl2-2             libldap-2.4-2             sudo             node-less             python3-yaml         &&
      update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1         &&
      update-alternatives --install /usr/bin/python python /usr/bin/python3.6 1         &&
      update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 2         && curl
      -o wkhtmltox.deb -sSL https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.bionic_amd64.deb         &&
      apt-get install -y --no-install-recommends ./wkhtmltox.deb         && rm -rf
      /var/lib/apt/lists/* wkhtmltox.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x;         echo 'deb https://apt.postgresql.org/pub/repos/apt/ bionic-pgdg
      main' > etc/apt/sources.list.d/pgdg.list         && export GNUPGHOME="$(mktemp
      -d)"         && repokey='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'         &&
      gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "${repokey}"         &&
      gpg --batch --armor --export "${repokey}" > /etc/apt/trusted.gpg.d/pgdg.gpg.asc         &&
      gpgconf --kill all         && rm -rf "$GNUPGHOME"         && apt-get update          &&
      apt-get install -y postgresql-client         && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: ODOO_VERSION
      Value: "12.0"
    Name: env
  - Env:
    - Key: ODOO_RELEASE
      Value: "20191025"
    Name: env
  - Key: ODOO_ARCHIVE
    Name: arg
    Value: odoo_${ODOO_VERSION}.${ODOO_RELEASE}.tar.gz
  - Key: URL
    Name: arg
    Value: https://github.com/OCA/OpenUpgrade.git
  - CmdLine:
    - set -x;         apt-get update         && apt-get install -y --no-install-recommends             git             build-essential             python3.6-dev             libsasl2-dev             libldap2-dev          &&
      pip install             psycogreen             num2words          && git clone
      --depth 1 -b ${ODOO_VERSION} ${URL} /opt/odoo         && cd /opt/odoo         &&
      echo 'recursive-include odoo *.py' >> MANIFEST.in         && echo 'recursive-include
      odoo *.txt' >> MANIFEST.in         && mv addons/* odoo/addons         && pip3
      install .         && pip3 install --ignore-installed git+https://github.com/OCA/openupgradelib.git@master         &&
      cd /         && apt-get --purge remove -y             git             build-essential             python3.6-dev             libsasl2-dev             libldap2-dev         &&
      apt-get autoremove -y         && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /etc/odoo
  - Name: volume
    Volumes:
    - /var/lib/odoo
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./odoo.conf
    - /etc/odoo/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./entrypoint.py
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./sudo-entrypoint.py
    - /
  - Key: UID
    Name: arg
    Value: "1000"
  - Key: GID
    Name: arg
    Value: "1000"
  - CmdLine:
    - 'mkdir /addons     && groupadd -r -g ${GID} odoo     && useradd -r -u ${UID}
      -g odoo -b /var/lib -m odoo     && chown odoo /etc/odoo/odoo.conf     && chown
      -R odoo:odoo /addons     && echo "odoo ALL=(ALL:ALL) NOPASSWD: /sudo-entrypoint.py"
      >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Env:
    - Key: ODOO_RC
      Value: /etc/odoo/odoo.conf
    Name: env
  - Env:
    - Key: ODOO_BASE_PATH
      Value: /usr/local/lib/python3.6/dist-packages/odoo/addons
    Name: env
  - Env:
    - Key: DEPLOYMENT_AREA
      Value: undefined
    Name: env
  - Name: expose
    Ports:
    - "8069"
  - Name: expose
    Ports:
    - "8071"
  - Name: user
    User: odoo
  - Labels:
    - Key: version
      Value: '"12.0"'
    Name: label
  - Labels:
    - Key: release
      Value: '"20191025"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.created
      Value: '"2019-11-15T00:35:55.046639"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.url
      Value: '"https://hub.docker.com/r/llacroix/odoo"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.authors
      Value: '"Archeti <info@archeti.ca>"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.documentation
      Value: '"https://github.com/llacroix/odoo-docker"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.source
      Value: '"https://github.com/llacroix/odoo-docker"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.version
      Value: '"12.0"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.vendor
      Value: '"ArcheTI"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.ref.name
      Value: '"12.0"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.title
      Value: '"Odoo 12.0"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.description
      Value: '"Full featured odoo image that make odoo deployment fun and secure."'
    Name: label
  - CmdLine:
    - /entrypoint.py
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - odoo
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
