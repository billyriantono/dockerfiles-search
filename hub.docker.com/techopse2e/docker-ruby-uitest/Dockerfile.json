{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.6.3",
      "SourceCode": "FROM ruby:2.6.3",
      "Platform": "",
      "From": {
        "Image": "ruby:2.6.3"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOVERSION",
              "Value": "1.12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOROOT",
              "Value": "/opt/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/root/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "18.09.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_SHA256_x86_64",
              "Value": "340e0b5a009ba70e1b644136b94d13824db0aeb52e09071410f35a95d94316d9"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_SHA256_armel",
              "Value": "59bf474090b4b095d19e70bb76305ebfbdb0f18f33aed2fccd16003e500ed1b7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fSL \"https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \u0026\u0026     tar -xzvf docker.tgz \u0026\u0026     mv docker/* /usr/local/bin/ \u0026\u0026     rmdir docker \u0026\u0026     rm docker.tgz \u0026\u0026     chmod +x /usr/local/bin/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends wget xvfb unzip \u0026\u0026         rm -rf /var/lib/apt/lists/* \u0026\u0026         cd /opt \u0026\u0026 wget https://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz \u0026\u0026     tar zxf go${GOVERSION}.linux-amd64.tar.gz \u0026\u0026 rm go${GOVERSION}.linux-amd64.tar.gz \u0026\u0026     ln -s /opt/go/bin/go /usr/bin/ \u0026\u0026         go get -u github.com/ForceCLI/force \u0026\u0026         cd $GOPATH/src/github.com/ForceCLI/force         go get . \u0026\u0026         cp $GOPATH/bin/force /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE` \u0026\u0026     mkdir -p /opt/chromedriver-$CHROMEDRIVER_VERSION \u0026\u0026     curl -sS -o /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip \u0026\u0026     unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver-$CHROMEDRIVER_VERSION \u0026\u0026     rm /tmp/chromedriver_linux64.zip \u0026\u0026     chmod +x /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver \u0026\u0026     ln -fs /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver /usr/local/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026     echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list \u0026\u0026     apt-get -yqq update \u0026\u0026     apt-get -yqq install google-chrome-stable \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}