{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt install -y gnupg2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx_signing.key",
            "/tmp/nginx_signing.key"
          ]
        },
        {
          "CmdLine": [
            "apt-key add /tmp/nginx_signing.key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://nginx.org/packages/ubuntu/ xenial nginx\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "'Asia/Hong_Kong'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo $TZ \u003e /etc/timezone \u0026\u0026     apt update \u0026\u0026     apt install -y python3-dev python3-pip ca-certificates nginx libffi-dev libssl-dev freetds-dev libjpeg-dev libfreetype6-dev unzip libaio1 vim tzdata \u0026\u0026     rm /etc/localtime \u0026\u0026     ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026     dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "oracle-libs/instantclient*",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "unzip \"/tmp/instantclient*.zip\" -d /opt/oracle  \u0026\u0026     mkdir /opt/oracle/instantclient_11_2/network/admin -p  \u0026\u0026     ln -s /opt/oracle/instantclient_11_2/libclntsh.so.11.1 /opt/oracle/instantclient_11_2/libclntsh.so  \u0026\u0026     echo \"/opt/oracle/instantclient_11_2/\" \u003e /etc/ld.so.conf.d/oracle.conf  \u0026\u0026     ldconfig -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ORACLE_BASE",
              "Value": "/opt/oracle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ORACLE_HOME",
              "Value": "$ORACLE_BASE/instantclient_11_2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$ORACLE_HOME:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$ORACLE_HOME:$ORACLE_HOME/sdk:${LD_LIBRARY_PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TNS_ADMIN",
              "Value": "$ORACLE_HOME/network/admin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NLS_LANG",
              "Value": "AMERICAN_AMERICA.UTF8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "workspace",
              "Value": "/autolife"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "${workspace}"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${workspace}"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/tmp/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip3 install -r /tmp/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/tmp/default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "1_wx.meidongauto.com_bundle.crt",
            "/tmp/1_wx.meidongauto.com_bundle.crt"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "2_wx.meidongauto.com.key",
            "/tmp/2_wx.meidongauto.com.key"
          ]
        },
        {
          "CmdLine": [
            "rm /etc/nginx/conf.d/default.conf  \u0026\u0026     ln -s /tmp/default.conf /etc/nginx/conf.d/  \u0026\u0026     ln -s /tmp/1_wx.meidongauto.com_bundle.crt /etc/nginx/  \u0026\u0026     ln -s /tmp/2_wx.meidongauto.com.key /etc/nginx/  \u0026\u0026     ln -sf /dev/stdout /var/log/nginx/access.log  \u0026\u0026     ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "uwsgi --ini uwsgi.ini \u0026\u0026 nginx -g 'daemon off;'"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}