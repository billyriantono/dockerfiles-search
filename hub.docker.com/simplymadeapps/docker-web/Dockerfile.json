{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "heroku/heroku:18",
      "SourceCode": "FROM heroku/heroku:18",
      "Platform": "",
      "From": {
        "Image": "heroku/heroku:18"
      },
      "Commands": [
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive \u0026\u0026 apt-get update \u0026\u0026 apt-get install -qq --yes build-essential nodejs libpq-dev git tzdata libxml2-dev libxslt-dev libssl-dev openjdk-8-jdk ssh net-tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://ftp.ruby-lang.org/pub/ruby/2.6/ruby-2.6.5.tar.gz \u0026\u0026 tar -xzvf ruby-2.6.5.tar.gz \u0026\u0026 cd ruby-2.6.5/ \u0026\u0026 ./configure \u0026\u0026 make -j4 \u0026\u0026 make install \u0026\u0026 ruby -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler -v '=2.0.2'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://nodejs.org/dist/v10.16.3/node-v10.16.3.tar.gz \u0026\u0026 tar -xzvf node-v10.16.3.tar.gz \u0026\u0026 rm node-v10.16.3.tar.gz \u0026\u0026 cd node-v10.16.3 \u0026\u0026 ./configure \u0026\u0026 make -j4 \u0026\u0026 make install \u0026\u0026 cd .. \u0026\u0026 rm -r node-v10.16.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "yarnversion",
          "Name": "arg",
          "Value": "1.17.3"
        },
        {
          "CmdLine": [
            "curl -fsSL https://raw.githubusercontent.com/tophat/yvm/master/scripts/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "~/.yvm/yvm.sh install $yarnversion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/root/.yvm/versions/v${yarnversion}/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://cli-assets.heroku.com/heroku-linux-x64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/lib /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xvzf heroku-linux-x64.tar.gz -C /usr/local/lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/local/lib/heroku/bin/heroku /usr/local/bin/heroku"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install postgresql-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error --location --fail --retry 3 --output /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb   \u0026\u0026 (dpkg -i /tmp/google-chrome-stable_current_amd64.deb || apt-get update \u0026\u0026 apt-get -fy install)    \u0026\u0026 rm -rf /tmp/google-chrome-stable_current_amd64.deb   \u0026\u0026 sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g'      \"/opt/google/chrome/google-chrome\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install libgconf-2-4   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip \"https://chromedriver.storage.googleapis.com/76.0.3809.68/chromedriver_linux64.zip\"   \u0026\u0026 cd /tmp   \u0026\u0026 unzip chromedriver_linux64.zip   \u0026\u0026 rm -rf chromedriver_linux64.zip   \u0026\u0026 mv chromedriver /usr/local/bin/chromedriver   \u0026\u0026 chmod +x /usr/local/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/webapp"
        }
      ]
    }
  ]
}