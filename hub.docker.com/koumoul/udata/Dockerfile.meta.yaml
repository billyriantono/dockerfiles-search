MetaArgs: null
Stages:
- As: builder
  BaseName: udata/system
  Commands:
  - Name: workdir
    Path: /udata
  - CmdLine:
    - apt-get update && apt-get install -y gnupg gcc
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - .
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Cython wheel virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - virtualenv venv
    Name: run
    PrependShell: true
  - CmdLine:
    - /udata/venv/bin/pip install --upgrade pip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements
    - ./requirements
  - CmdLine:
    - /udata/venv/bin/pip install -r ./requirements/develop.pip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - udata
    - ./udata
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - js
    - ./js
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - less
    - ./less
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '*.py'
    - '*.cfg'
    - '*.js'
    - '*.yml'
    - '*.md'
    - LICENSE
    - MANIFEST.in
    - ./
  - CmdLine:
    - /udata/venv/bin/python setup.py compile_catalog
    Name: run
    PrependShell: true
  - CmdLine:
    - npm run assets:build
    Name: run
    PrependShell: true
  - CmdLine:
    - npm run widgets:build
    Name: run
    PrependShell: true
  - CmdLine:
    - npm run oembed:build
    Name: run
    PrependShell: true
  - CmdLine:
    - /udata/venv/bin/pip install .
    Name: run
    PrependShell: true
  From:
    Image: udata/system
  Name: builder
  Platform: ""
  SourceCode: FROM udata/system AS builder
- BaseName: udata/system
  Commands:
  - Maintainer: Open Data Team
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     libpcre3-dev     &&
      apt-get autoremove    && apt-get clean    && rm -rf /var/lib/apt/lists/* /tmp/*
      /var/tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /udata
  - CmdLine:
    - pip install Cython wheel virtualenv
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /udata/venv
    - /udata/venv
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/requirements.pip
    - ./requirements/docker.pip
  - CmdLine:
    - /udata/venv/bin/pip install -r ./requirements/docker.pip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /udata/fs /src
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/udata.cfg
    - docker/entrypoint.sh
    - /udata/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/uwsgi/*.ini
    - /udata/uwsgi/
  - Name: volume
    Volumes:
    - /udata/fs
  - Env:
    - Key: UDATA_SETTINGS
      Value: /udata/udata.cfg
    Name: env
  - Name: expose
    Ports:
    - "7000"
    - "7001"
  - CmdLine:
    - /udata/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - uwsgi
    Name: cmd
    PrependShell: false
  From:
    Image: udata/system
  Name: ""
  Platform: ""
  SourceCode: FROM udata/system
