{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "appcelerator/alpine:3.6.0",
      "SourceCode": "FROM appcelerator/alpine:3.6.0",
      "Platform": "",
      "From": {
        "Image": "appcelerator/alpine:3.6.0"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TELEGRAF_VERSION",
              "Value": "1.3.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade \u0026\u0026     apk --virtual build-deps add openssl git gcc musl-dev make binutils patch go \u0026\u0026     export GOPATH=/go \u0026\u0026     go version \u0026\u0026     go get -v github.com/influxdata/telegraf \u0026\u0026     cd $GOPATH/src/github.com/influxdata/telegraf \u0026\u0026     if [ $TELEGRAF_VERSION != \"master\" ]; then git checkout -q --detach \"${TELEGRAF_VERSION}\" ; fi \u0026\u0026     make \u0026\u0026     chmod +x $GOPATH/bin/* \u0026\u0026     mv $GOPATH/bin/* /bin/ \u0026\u0026     apk del build-deps \u0026\u0026     cd / \u0026\u0026 rm -rf /var/cache/apk/* $GOPATH \u0026\u0026     mkdir -p /etc/telegraf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8094",
            "9126"
          ]
        },
        {
          "Env": [
            {
              "Key": "INFLUXDB_URL",
              "Value": "http://localhost:8086"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INTERVAL",
              "Value": "10s"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OUTPUT_INFLUXDB_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OUTPUT_PROMETHEUS_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OUTPUT_CLOUDWATCH_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OUTPUT_KAFKA_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OUTPUT_NATS_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OUTPUT_FILE_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_KAFKA_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_NATS_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_CPU_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_DISK_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_DISKIO_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_KERNEL_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_MEM_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_PROCESS_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_SWAP_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_SYSTEM_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_NET_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_NETSTAT_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_DOCKER_ENABLED",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_LISTENER_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INPUT_HAPROXY_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "telegraf.conf.tpl",
            "/etc/telegraf/telegraf.conf.tpl"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "/run.sh"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}