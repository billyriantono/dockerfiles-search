MetaArgs: null
Stages:
- BaseName: haproxy:1.7-alpine
  Commands:
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/go/bin
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./
    - /go/src/github.com/appcelerator/docker-haproxy
  - CmdLine:
    - echo "@edge http://nl.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories
      &&     echo "@testing http://nl.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
      &&     echo "@community http://nl.alpinelinux.org/alpine/v3.5/community" >>
      /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update && apk upgrade &&     apk -v --virtual build-deps add git make bash
      go musl-dev &&     apk -v add curl &&     go version &&     cd $GOPATH/src/github.com/appcelerator/docker-haproxy
      &&     go get -u github.com/Masterminds/glide/... &&     glide install &&     rm
      -rf vendor/github.com/appcelerator/amp/vendor &&     rm -rf vendor/github.com/docker/docker/vendor/golang.org/x/net/trace
      &&     make install &&     echo amp-haproxy built &&     rm /go/bin/glide &&     apk
      del build-deps &&     cd / && rm -rf /go/src /go/pkg /var/cache/apk/* /root/.cache
      /root/.glide &&     chmod +x $GOPATH/bin/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - haproxy.cfg.tpt
    - /usr/local/etc/haproxy/haproxy.cfg.tpt
  - Health:
      Interval: 5000000000
      Retries: 12
      Test:
      - CMD-SHELL
      - curl http://127.0.0.1/healthcheck
      Timeout: 10000000000
    Name: healthcheck
  - CmdLine:
    - /go/bin/docker-haproxy
    Name: cmd
    PrependShell: false
  From:
    Image: haproxy:1.7-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM haproxy:1.7-alpine
