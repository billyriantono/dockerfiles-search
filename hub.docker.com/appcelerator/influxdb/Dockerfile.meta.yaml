MetaArgs: null
Stages:
- BaseName: appcelerator/alpine:3.5.2
  Commands:
  - Env:
    - Key: INFLUXDB_VERSION
      Value: 1.2.2
    Name: env
  - Env:
    - Key: GOLANG_VERSION
      Value: "1.8"
    Name: env
  - Env:
    - Key: GOLANG_SRC_URL
      Value: https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz
    Name: env
  - Env:
    - Key: GOLANG_SRC_SHA256
      Value: 406865f587b44be7092f206d73fc1de252600b79b3cacc587b74b5ef5c623596
    Name: env
  - CmdLine:
    - apk update && apk upgrade &&     apk --virtual build-deps add go python openssl
      git gcc musl-dev make patch &&     export GOROOT_BOOTSTRAP="$(go env GOROOT)"
      &&     wget -q "$GOLANG_SRC_URL" -O golang.tar.gz &&     echo "$GOLANG_SRC_SHA256  golang.tar.gz"
      | sha256sum -c - &&     tar -C /usr/local -xzf golang.tar.gz &&     rm golang.tar.gz
      &&     cd /usr/local/go/src &&     ./make.bash &&     export GOPATH=/go &&     export
      PATH=/usr/local/go/bin:$PATH &&     go version &&     go get -v github.com/influxdata/influxdb
      &&     cd $GOPATH/src/github.com/influxdata/influxdb &&     git checkout -q
      --detach "v${INFLUXDB_VERSION}" &&     python ./build.py &&     chmod +x ./build/influx*
      &&     mv ./build/influx* /bin/ &&     mkdir -p /etc/influxdb /data/influxdb
      /data/influxdb/meta /data/influxdb/data /var/tmp/influxdb/wal /var/log/influxdb
      &&     apk del build-deps && cd / && rm -rf $GOPATH/ /var/cache/apk/* /usr/local/go
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update && apk add util-linux && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Env:
    - Key: ADMIN_USER
      Value: root
    Name: env
  - Env:
    - Key: INFLUXDB_INIT_PWD
      Value: root
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - types.db
    - /usr/share/collectd/types.db
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config.toml
    - /etc/influxdb/config.toml.tpl
  - Chown: ""
    Name: add
    SourcesAndDest:
    - run.sh
    - /run.sh
  - Env:
    - Key: PRE_CREATE_DB
      Value: '**None**'
    Name: env
  - Name: expose
    Ports:
    - "8083"
  - Name: expose
    Ports:
    - "8086"
  - Name: volume
    Volumes:
    - /data
  - CmdLine:
    - /bin/sh
    - -c
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /run.sh
    Name: cmd
    PrependShell: false
  - Health:
      Interval: 5000000000
      Retries: 24
      Test:
      - CMD-SHELL
      - curl -sI 127.0.0.1:8086/ping | grep -q "204 No Content"
      Timeout: 1000000000
    Name: healthcheck
  From:
    Image: appcelerator/alpine:3.5.2
  Name: ""
  Platform: ""
  SourceCode: FROM appcelerator/alpine:3.5.2
