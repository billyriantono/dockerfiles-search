MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Maintainer: Nebo#15 <support@nebo15.com>
    Name: maintainer
  - Env:
    - Key: TERM
      Value: xterm
    - Key: HOME
      Value: /
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pglogical-2.0.1.tar.bz2
    - /
  - CmdLine:
    - 'set -ex;   postgresHome="$(getent passwd postgres)";   postgresHome="$(echo
      "$postgresHome" | cut -d: -f6)";   [ "$postgresHome" = ''/var/lib/postgresql''
      ];   mkdir -p "$postgresHome";   chown -R postgres:postgres "$postgresHome"'
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PG_MAJOR
      Value: "9.6"
    Name: env
  - Env:
    - Key: PG_VERSION
      Value: 9.6.3
    Name: env
  - Env:
    - Key: PG_SHA256
      Value: 1645b3736901f6d854e695a937389e68ff2066ce0cde9d73919d6ab7c995b9c6
    Name: env
  - CmdLine:
    - set -ex     && apk add --no-cache --virtual .fetch-deps     ca-certificates     openssl     tar     &&
      wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"   &&
      echo "$PG_SHA256 *postgresql.tar.bz2" | sha256sum -c -   && mkdir -p /usr/src/postgresql   &&
      tar     --extract     --file postgresql.tar.bz2     --directory /usr/src/postgresql     --strip-components
      1   && rm postgresql.tar.bz2     && apk add --no-cache --virtual .build-deps     bison     coreutils     dpkg-dev
      dpkg     flex     gcc     libc-dev     libedit-dev     libxml2-dev     libxslt-dev     make     openssl-dev     perl     util-linux-dev     zlib-dev     &&
      cd /usr/src/postgresql   && awk '$1 == "#define" && $2 == "DEFAULT_PGSOCKET_DIR"
      && $3 == "\"/tmp\"" { $3 = "\"/var/run/postgresql\""; print; next } { print
      }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new   &&
      grep '/var/run/postgresql' src/include/pg_config_manual.h.new   && mv src/include/pg_config_manual.h.new
      src/include/pg_config_manual.h   && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"   &&
      wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'   &&
      wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'   &&
      ./configure     --build="$gnuArch"     --enable-integer-datetimes     --enable-thread-safety     --enable-tap-tests     --disable-rpath     --with-uuid=e2fs     --with-gnu-ld     --with-pgport=5432     --with-system-tzdata=/usr/share/zoneinfo     --prefix=/usr/local     --with-includes=/usr/local/include     --with-libraries=/usr/local/lib         --with-openssl     --with-libxml     --with-libxslt   &&
      make -j "$(nproc)" world   && make install-world   && make -C contrib install     &&
      runDeps="$(     scanelf --needed --nobanner --recursive /usr/local       | awk
      '{ gsub(/,/, "\nso:", $2); print "so:" $2 }'       | sort -u       | xargs -r
      apk info --installed       | sort -u   )"   && apk add --no-cache --virtual
      .postgresql-rundeps     $runDeps     bash     su-exec     tzdata    && tar xvjf  /pglogical-2.0.1.tar.bz2     &&
      cd pglogical-2.0.1     && make USE_PGXS=1 install    && cd ..     && rm -rf
      pglogical-2.0.*    && rm -rf /pglogical-2.0.1.tar.bz2    && apk del .fetch-deps
      .build-deps     && cd /    && rm -rf     /usr/src/postgresql     /usr/local/share/doc     /usr/local/share/man   &&
      find /usr/local -name '*.a' -delete
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/local/share/postgresql/postgresql.conf.sample
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql
      && chmod 2777 /var/run/postgresql
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/lib/postgresql/$PG_MAJOR/bin:$PATH
    Name: env
  - Env:
    - Key: PGDATA
      Value: /var/lib/postgresql/data
    Name: env
  - CmdLine:
    - 'mkdir -p "$PGDATA" && chown -R postgres:postgres "$PGDATA" && chmod 777 "$PGDATA"
      # this 777 will be replaced by 700 at runtime (allows semi-arbitrary "--user"
      values)'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /
  - Name: volume
    Volumes:
    - /var/lib/postgresql
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /docker-entrypoint-initdb.d/
    - /docker-entrypoint-initdb.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - Name: expose
    Ports:
    - "5432"
  - CmdLine:
    - postgres
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
