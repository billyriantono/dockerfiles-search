{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "Nebo#15 \u003csupport@nebo15.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            },
            {
              "Key": "HOME",
              "Value": "/"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "pglogical-2.0.1.tar.bz2",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -ex;   postgresHome=\"$(getent passwd postgres)\";   postgresHome=\"$(echo \"$postgresHome\" | cut -d: -f6)\";   [ \"$postgresHome\" = '/var/lib/postgresql' ];   mkdir -p \"$postgresHome\";   chown -R postgres:postgres \"$postgresHome\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /docker-entrypoint-initdb.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PG_MAJOR",
              "Value": "9.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_VERSION",
              "Value": "9.6.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_SHA256",
              "Value": "1645b3736901f6d854e695a937389e68ff2066ce0cde9d73919d6ab7c995b9c6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk add --no-cache --virtual .fetch-deps     ca-certificates     openssl     tar     \u0026\u0026 wget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"   \u0026\u0026 echo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c -   \u0026\u0026 mkdir -p /usr/src/postgresql   \u0026\u0026 tar     --extract     --file postgresql.tar.bz2     --directory /usr/src/postgresql     --strip-components 1   \u0026\u0026 rm postgresql.tar.bz2     \u0026\u0026 apk add --no-cache --virtual .build-deps     bison     coreutils     dpkg-dev dpkg     flex     gcc     libc-dev     libedit-dev     libxml2-dev     libxslt-dev     make     openssl-dev     perl     util-linux-dev     zlib-dev     \u0026\u0026 cd /usr/src/postgresql   \u0026\u0026 awk '$1 == \"#define\" \u0026\u0026 $2 == \"DEFAULT_PGSOCKET_DIR\" \u0026\u0026 $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h \u003e src/include/pg_config_manual.h.new   \u0026\u0026 grep '/var/run/postgresql' src/include/pg_config_manual.h.new   \u0026\u0026 mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h   \u0026\u0026 gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"   \u0026\u0026 wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb'   \u0026\u0026 wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb'   \u0026\u0026 ./configure     --build=\"$gnuArch\"     --enable-integer-datetimes     --enable-thread-safety     --enable-tap-tests     --disable-rpath     --with-uuid=e2fs     --with-gnu-ld     --with-pgport=5432     --with-system-tzdata=/usr/share/zoneinfo     --prefix=/usr/local     --with-includes=/usr/local/include     --with-libraries=/usr/local/lib         --with-openssl     --with-libxml     --with-libxslt   \u0026\u0026 make -j \"$(nproc)\" world   \u0026\u0026 make install-world   \u0026\u0026 make -C contrib install     \u0026\u0026 runDeps=\"$(     scanelf --needed --nobanner --recursive /usr/local       | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'       | sort -u       | xargs -r apk info --installed       | sort -u   )\"   \u0026\u0026 apk add --no-cache --virtual .postgresql-rundeps     $runDeps     bash     su-exec     tzdata    \u0026\u0026 tar xvjf  /pglogical-2.0.1.tar.bz2     \u0026\u0026 cd pglogical-2.0.1     \u0026\u0026 make USE_PGXS=1 install    \u0026\u0026 cd ..     \u0026\u0026 rm -rf pglogical-2.0.*    \u0026\u0026 rm -rf /pglogical-2.0.1.tar.bz2    \u0026\u0026 apk del .fetch-deps .build-deps     \u0026\u0026 cd /    \u0026\u0026 rm -rf     /usr/src/postgresql     /usr/local/share/doc     /usr/local/share/man   \u0026\u0026 find /usr/local -name '*.a' -delete"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/postgresql \u0026\u0026 chown -R postgres:postgres /var/run/postgresql \u0026\u0026 chmod 2777 /var/run/postgresql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/lib/postgresql/$PG_MAJOR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/var/lib/postgresql/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$PGDATA\" \u0026\u0026 chown -R postgres:postgres \"$PGDATA\" \u0026\u0026 chmod 777 \"$PGDATA\" # this 777 will be replaced by 700 at runtime (allows semi-arbitrary \"--user\" values)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/postgresql"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/docker-entrypoint-initdb.d/",
            "/docker-entrypoint-initdb.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "CmdLine": [
            "postgres"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}