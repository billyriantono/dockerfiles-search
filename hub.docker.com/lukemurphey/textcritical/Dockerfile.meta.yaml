MetaArgs: null
Stages:
- BaseName: python:2-slim
  Commands:
  - CmdLine:
    - mkdir -p /usr/src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/requirements.txt
    - /usr/src/app/
  - CmdLine:
    - apt-get update &&              apt-get install -y build-essential &&              pip
      install --no-cache-dir -r requirements.txt &&              apt-get remove -y
      --purge build-essential &&              apt-get clean &&              rm -rf
      /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&              apt-get install -y imagemagick
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/app/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/app/var/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /db
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src
    - /usr/src/app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/textcritical/docker_image_settings.py
    - /usr/src/app/textcritical/settings.py
  - CmdLine:
    - mkdir -p /usr/src/app/var/log/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/app/var/indexes
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/app/media/files/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/app/var/cache
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://kindlegen.s3.amazonaws.com/kindlegen_linux_2.6_i386_v2_9.tar.gz
      -P /bin
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -C /bin -xf /bin/kindlegen_linux_2.6_i386_v2_9.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - python /usr/src/app/manage.py collectstatic --noinput
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /usr/src/app/run_server_docker.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: python:2-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:2-slim
