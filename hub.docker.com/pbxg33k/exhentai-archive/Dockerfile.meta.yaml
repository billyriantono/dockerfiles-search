MetaArgs: null
Stages:
- BaseName: php:fpm-alpine
  Commands:
  - Maintainer: development@oguzhanuysal.eu
    Name: maintainer
  - Env:
    - Key: MEMCACHED_DEPS
      Value: zlib-dev libmemcached-dev cyrus-sasl-dev
    Name: env
  - Env:
    - Key: CONF_MEMBERID
      Value: "null"
    Name: env
  - Env:
    - Key: CONF_PASSHASH
      Value: "null"
    Name: env
  - Env:
    - Key: CONF_ACCESSKEY
      Value: ChangeMeIAmNotSecure
    Name: env
  - Env:
    - Key: DATABASE_URL
      Value: mysql://db_user:db_password@127.0.0.1:3306/db_name
    Name: env
  - Env:
    - Key: CONF_TEMPDIR
      Value: '"./tmp"'
    Name: env
  - Env:
    - Key: CONF_ARCHDIR
      Value: '"./archive"'
    Name: env
  - Env:
    - Key: CONF_IMGDIR
      Value: '"./images"'
    Name: env
  - Env:
    - Key: ENQUEUE_DSN
      Value: null://
    Name: env
  - Env:
    - Key: ELASTIC_HOST
      Value: ''''''
    Name: env
  - Env:
    - Key: ELASTIC_PORT
      Value: "80"
    Name: env
  - Env:
    - Key: REDIS_URI
      Value: redis://redis/0
    Name: env
  - Env:
    - Key: APP_ENV
      Value: prod
    Name: env
  - Env:
    - Key: APP_SECRET
      Value: abc123
    Name: env
  - CmdLine:
    - apk add --no-cache --update libmemcached-libs zlib nginx libressl pcre zlib
      supervisor sed re2c m4 ca-certificates py-pip rabbitmq-c-dev     && mkdir -p
      /run/nginx/     && chmod ugo+w /run/nginx/     && rm -f /etc/nginx/nginx.conf     &&
      mkdir -p /etc/nginx/conf.d/     && mkdir -p /etc/nginx/ssl/     && mkdir -p
      /var/www/html/     && mkdir -p /var/log/php/     && chmod -R 755 /var/www/     &&
      chown -R nginx:nginx /var/www/     && chmod -R 755 /var/log/php     && pip install
      --upgrade pip     && pip install supervisor-stdout
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe     && apk add --no-cache --update --virtual .phpize-deps $PHPIZE_DEPS
      pcre-dev icu-dev     && apk add --no-cache --update --virtual .memcached-deps
      $MEMCACHED_DEPS     && yes '' | pecl install -o -f memcached redis amqp     &&
      echo "extension=memcached.so" > /usr/local/etc/php/conf.d/20_memcached.ini     &&
      docker-php-ext-enable redis     && docker-php-ext-enable amqp     && rm -rf
      /usr/share/php7     && rm -rf /tmp/*     && apk del .memcached-deps .phpize-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --update curl-dev jpeg-dev freetype-dev mysql-client     &&
      docker-php-ext-install -j$(nproc) mysqli     && docker-php-ext-install -j$(nproc)
      pdo_mysql     && docker-php-ext-install -j$(nproc) curl     && docker-php-ext-install
      -j$(nproc) zip     && docker-php-ext-install -j$(nproc) exif     && docker-php-ext-configure
      gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     && docker-php-ext-install
      -j$(nproc) gd
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stderr /var/log/nginx/error.log     && ln -sf /dev/stderr /var/log/nginx/sf4_error.log     &&
      ln -sf /dev/stdout /var/log/nginx/sf4_access.log     && ln -sf /dev/stderr /var/log/fpm-php.www.log
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update jq openssh-client    && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"     &&
      php composer-setup.php --install-dir=/usr/bin --filename=composer     && rm
      composer-setup.php     && chmod +x /usr/bin/composer     && rm /usr/local/etc/php-fpm.d/zz-docker.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.d.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.manifest/
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /var/www/html
  - Name: workdir
    Path: /var/www/html
  - CmdLine:
    - env APP_ENV=prod composer install --no-dev --optimize-autoloader     && chmod
      +x init.d.sh     && chmod -R +x docker-entrypoint-init.d/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/www/html/public/images     && ln -s /images/ /var/www/html/public/     &&
      rm -rf /var/www/html/images/     && ln -s /images/ /var/www/html/     && rm
      -rf /var/www/html/legacy/www/images/     && ln -s /images/ /var/www/html/legacy/www
    Name: run
    PrependShell: true
  - CmdLine:
    - sh
    - /var/www/html/init.d.sh
    Name: cmd
    PrependShell: false
  From:
    Image: php:fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:fpm-alpine
