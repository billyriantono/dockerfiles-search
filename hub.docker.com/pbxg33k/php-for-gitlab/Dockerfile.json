{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "php:cli-alpine",
      "SourceCode": "FROM php:cli-alpine AS base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "php:cli-alpine"
      },
      "Commands": null
    },
    {
      "Name": "buildbase",
      "BaseName": "base",
      "SourceCode": "FROM base AS buildbase",
      "Platform": "",
      "As": "buildbase",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache --update --virtual build-dependencies alpine-sdk git automake autoconf"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "build",
      "BaseName": "buildbase",
      "SourceCode": "FROM buildbase AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Stage": {
          "Named": "buildbase",
          "Index": 1
        }
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "XDEBUGVERSION",
              "Value": "\"2.7.0RC2\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --update --virtual php-dependencies zlib-dev icu-dev libzip-dev     \u0026\u0026 apk add --no-cache --update imagemagick git mysql-client wget openssl libxml2-dev php-xml php-soap libsodium-dev     \u0026\u0026 pecl install redis-4.0.2 \t\u0026\u0026 docker-php-ext-install opcache \t\u0026\u0026 docker-php-ext-install intl \t\u0026\u0026 docker-php-ext-install mbstring \t\u0026\u0026 docker-php-ext-install pdo_mysql \t\u0026\u0026 docker-php-ext-install zip \t\u0026\u0026 docker-php-ext-install bcmath \t\u0026\u0026 docker-php-ext-enable redis \t\u0026\u0026 php -r \"readfile('https://getcomposer.org/installer');\" | php -- --install-dir=/usr/local/bin --filename=composer \t\u0026\u0026 chmod +sx /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --update rabbitmq-c rabbitmq-c-dev     \u0026\u0026 git clone --depth=1 https://github.com/pdezwart/php-amqp.git /tmp/php-amqp     \u0026\u0026 cd /tmp/php-amqp     \u0026\u0026 phpize \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install     \u0026\u0026 cd ../ \u0026\u0026 rm -rf /tmp/php-amqp     \u0026\u0026 docker-php-ext-install xml     \u0026\u0026 docker-php-ext-install soap     \u0026\u0026 docker-php-ext-enable amqp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://xdebug.org/files/xdebug-${XDEBUGVERSION}.tgz | tar -xz -C /     \u0026\u0026 cd /xdebug-${XDEBUGVERSION}     \u0026\u0026 phpize     \u0026\u0026 ./configure --enable-xdebug     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 rm -r /xdebug-${XDEBUGVERSION}     \u0026\u0026 docker-php-ext-enable xdebug     \u0026\u0026 echo \"xdebug.remote_enable=on\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_autostart=off\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "final",
      "BaseName": "build",
      "SourceCode": "FROM build AS final",
      "Platform": "",
      "As": "final",
      "From": {
        "Stage": {
          "Named": "build",
          "Index": 2
        }
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "composer"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}