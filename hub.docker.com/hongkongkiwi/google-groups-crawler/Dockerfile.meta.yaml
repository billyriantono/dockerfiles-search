MetaArgs: null
Stages:
- BaseName: node:9.11.1-alpine
  Commands:
  - Maintainer: Andy Savage <andy@savage.hk>
    Name: maintainer
  - Labels:
    - Key: org.label-schema.name
      Value: '"google-group-crawler"'
    - Key: org.label-schema.description
      Value: '"Docker Image to handle downloading attachment files from Google Groups
        and sending to an AMQP queue"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/hongkongkiwi/google-group-crawler"'
    - Key: org.label-schema.license
      Value: '"MIT"'
    Name: label
  - Key: OS
    Name: arg
    Value: '"linux"'
  - Key: ARCH
    Name: arg
    Value: '"amd64"'
  - Key: SUPERCRONIC_VER
    Name: arg
    Value: '"0.1.5"'
  - Key: SUPERCRONIC_URL
    Name: arg
    Value: '"https://github.com/aptible/supercronic/releases/download/v${SUPERCRONIC_VER}/supercronic-${OS}-${ARCH}"'
  - Key: SUPERCRONIC_SHA1SUM
    Name: arg
    Value: '''9aeb41e00cc7b71d30d33c57a2333f2c2581a201'''
  - Key: S6_OVERLAY_VERSION
    Name: arg
    Value: '"1.21.4.0"'
  - Key: S6_OVERLAY_URL
    Name: arg
    Value: '"https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-${ARCH}.tar.gz"'
  - Key: GOOGLE_CRAWLER_VERSION
    Name: arg
    Value: '"1.2.1"'
  - Key: GOOGLE_CRAWLER_URL
    Name: arg
    Value: '"https://github.com/icy/google-group-crawler/archive/v${GOOGLE_CRAWLER_VERSION}.tar.gz"'
  - Key: RCLONE_VER
    Name: arg
    Value: '"current"'
  - Key: RCLONE_URL
    Name: arg
    Value: '"https://downloads.rclone.org/rclone-${RCLONE_VER}-${OS}-${ARCH}.zip"'
  - Env:
    - Key: CRON_SCHEDULE
      Value: '''*/30 * * * *'''
    Name: env
  - Env:
    - Key: WATCH_FILE_PATTERN
      Value: '''*.xls'''
    Name: env
  - Env:
    - Key: COOKIES_FILE
      Value: '''/config/cookies.txt'''
    Name: env
  - Env:
    - Key: HOOK_FILE
      Value: '''/google-group-crawler/hook.sh'''
    Name: env
  - Env:
    - Key: GOOGLE_GROUP_NAME
      Value: ''''''
    Name: env
  - Env:
    - Key: GOOGLE_GROUP_ORG
      Value: ''''''
    Name: env
  - Env:
    - Key: UPDATE_MESSAGE_COUNT
      Value: "50"
    Name: env
  - Env:
    - Key: FORCE_REFRESH
      Value: '''false'''
    Name: env
  - Env:
    - Key: DOWNLOAD_ATTACHMENTS
      Value: '''true'''
    Name: env
  - Env:
    - Key: PULL_ON_BOOT
      Value: '''true'''
    Name: env
  - Env:
    - Key: TZ
      Value: '''Asia/Hong_Kong'''
    Name: env
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: '''error'''
    Name: env
  - Env:
    - Key: RCLONE_UPLOAD
      Value: '''false'''
    Name: env
  - Env:
    - Key: RCLONE_REMOTE
      Value: '''Google Drive'''
    Name: env
  - Env:
    - Key: AMQP_ENABLED
      Value: '''false'''
    Name: env
  - Env:
    - Key: AMQP_URL
      Value: ''''''
    Name: env
  - Env:
    - Key: AMQP_EXCHANGE
      Value: '''google_groups'''
    Name: env
  - Env:
    - Key: AMQP_QUEUE
      Value: '''google_groups_changes'''
    Name: env
  - Env:
    - Key: KAFKA_ENABLED
      Value: '''false'''
    Name: env
  - Env:
    - Key: KAFKA_REST_URL
      Value: '''http://kafka-rest:8082'''
    Name: env
  - Env:
    - Key: KAFKA_REST_TOPIC
      Value: '''production-reports'''
    Name: env
  - Env:
    - Key: PGID
      Value: "1001"
    - Key: PUID
      Value: "1001"
    Name: env
  - Env:
    - Key: PS1
      Value: '"$(whoami)@$(hostname):$(pwd)\$ "'
    - Key: HOME
      Value: '"/root"'
    - Key: TERM
      Value: '"xterm"'
    - Key: PATH
      Value: '"${PATH}:/usr/local/bin:/usr/local/sbin"'
    Name: env
  - Env:
    - Key: PYTHON
      Value: '"/usr/bin/python"'
    Name: env
  - Env:
    - Key: BLOG
      Value: '"/usr/local/include/b-log.sh"'
    Name: env
  - Env:
    - Key: SUPERCRONIC
      Value: '"/usr/local/bin/supercronic"'
    Name: env
  - Name: volume
    Volumes:
    - /data
    - /config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/*
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ldb/manpages/ldb.1
    - /usr/share/man/man1
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ldb/bin/ldb
    - /usr/local/bin/ldb
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - blog/b-log.sh
    - '"${BLOG}"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - quicklock/install.sh
    - /tmp/qlinstall.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - s6/
    - /etc
  - CmdLine:
    - echo "@edgecommunity http://dl-cdn.alpinelinux.org/alpine/edge/community" >>
      /etc/apk/repositories  && apk update  && apk add --no-cache --virtual .build-dependencies         tzdata         py2-pip  &&
      apk add --no-cache         shadow         curl         snappy         ca-certificates         bash
      gawk sed grep wget coreutils procps         rabbitmq-c-utils         python3         python3-dev         python         yaml-dev         musl-dev         ripmime@edgecommunity  &&
      mkdir -p       "/usr/local/include"       "/usr/local/bin"       "/usr/local/sbin"       "/tmp"       "/var/log/supercronic"       "/var/log/watchdog"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "/usr/share/man/man1" >/dev/null 2>&1 || true
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Setting Time Zone"  && cp "/usr/share/zoneinfo/${TZ}" /etc/localtime  &&
      echo "${TZ}" > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Adding User/Group"  && addgroup -g ${PGID} abc  && adduser -D -u ${PUID}
      -G abc abc  && usermod -G users abc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - '"$SUPERCRONIC_URL"'
    - '"$SUPERCRONIC"'
  - Chown: ""
    Name: add
    SourcesAndDest:
    - '"$S6_OVERLAY_URL"'
    - '"/tmp/s6-overlay-${ARCH}.tar.gz"'
  - CmdLine:
    - bash "/tmp/qlinstall.sh"  && echo "Verifying Supercronic"  && echo "${SUPERCRONIC_SHA1SUM}
      /usr/local/bin/supercronic" | sha1sum -c -  && echo "Extracting S6 Overlay"  &&
      tar xzf "/tmp/s6-overlay-${ARCH}.tar.gz" -C /
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - '"${GOOGLE_CRAWLER_URL}"'
    - '"/tmp/google-group-crawler.tar.gz"'
  - CmdLine:
    - echo "Installing Google Group Crawler"  && ([ -d /google-group-crawler ] &&
      rm -Rf /google-group-crawler || true)  && mkdir -p /google-group-crawler  &&
      tar xzf "/tmp/google-group-crawler.tar.gz" -C /google-group-crawler
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hook.sh
    - '"$HOOK_FILE"'
  - CmdLine:
    - echo "Upgrading Pip & Installing Watchdog"  && pip3 install -q --no-cache-dir
      --upgrade pip  && pip3 install -q --no-cache-dir watchdog  && pip2 install -q
      --no-cache-dir crudini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Installing rclone"  && cd /tmp  && wget -q "${RCLONE_URL}"  && unzip -qq
      /tmp/rclone-*.zip  && mv /tmp/rclone-*-${OS}-*/rclone /usr/local/bin  && mkdir
      -p /var/lock  && touch /var/lock/rclone.lock
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Cleaning Up"  && chmod -R +x /usr/local/bin /usr/sbin /usr/local/sbin  &&
      apk del --purge .build-dependencies  && rm -rf       /tmp/*       /var/tmp/*       /var/cache/apk/*       ~/.cache/pip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /data
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  From:
    Image: node:9.11.1-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:9.11.1-alpine
