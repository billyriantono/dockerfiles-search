MetaArgs: null
Stages:
- As: build
  BaseName: golang:1.8
  Commands:
  - Key: PROTOC_VER
    Name: arg
    Value: 3.3.0
  - CmdLine:
    - apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get install unzip &&     apt-get
      clean
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/google/protobuf/releases/download/v${PROTOC_VER}/protoc-${PROTOC_VER}-linux-x86_64.zip
    - /tmp/protoc.zip
  - CmdLine:
    - mkdir -p /opt/protoc &&     cd /opt/protoc &&     unzip /tmp/protoc.zip &&     rm
      -f /tmp/protoc.zip &&     ln -s /opt/protoc/bin/* /usr/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/golang/protobuf/protoc-gen-go
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /go/src/github.com/influxdata/telegraf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - make prepare build build-for-docker
    Name: run
    PrependShell: true
  From:
    Image: golang:1.8
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.8 as build
- As: app
  BaseName: golang:1.8
  Commands:
  - Name: workdir
    Path: /app
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /go/bin/telegraf
    - /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - etc
    - /etc/telegraf
  - CmdLine:
    - /app/telegraf
    Name: entrypoint
    PrependShell: false
  From:
    Image: golang:1.8
  Name: app
  Platform: ""
  SourceCode: FROM golang:1.8 as app
