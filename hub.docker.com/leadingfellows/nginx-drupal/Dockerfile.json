{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "wodby/alpine:latest",
      "SourceCode": "FROM  wodby/alpine:latest as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "wodby/alpine:latest"
      },
      "Commands": null
    },
    {
      "Name": "",
      "BaseName": "nginx:alpine",
      "SourceCode": "FROM nginx:alpine",
      "Platform": "",
      "From": {
        "Image": "nginx:alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "HTML_DIR",
              "Value": "\"/var/www/html\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/gotpl",
            "/usr/local/bin"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "templates",
            "/etc/gotpl/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     apk add --update --no-cache         sudo         bash         ca-certificates         curl         gzip         tar         unzip         wget \u0026\u0026 {     echo -n 'nginx ALL=(root) NOPASSWD: ' ;     echo '/usr/sbin/nginx' ; } | tee /etc/sudoers.d/nginx \u0026\u0026 chown -R nginx:nginx /etc/nginx \u0026\u0026 chown -R nginx:nginx /usr/local/bin/gotpl \u0026\u0026 chown -R nginx:nginx /etc/gotpl/ \u0026\u0026 mkdir -p $HTML_DIR \u0026\u0026 chown -R nginx:nginx $HTML_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "WODBY_GROUP_ID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "CmdLine": [
            "set -xe;     \texisting_group=$(getent group \"${WODBY_GROUP_ID}\" | cut -d: -f1);     if [[ -n \"${existing_group}\" ]]; then delgroup \"${existing_group}\"; fi;     \taddgroup -g \"${WODBY_GROUP_ID}\" -S wodby; \taddgroup nginx wodby"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$HTML_DIR"
        },
        {
          "Name": "user",
          "User": "nginx"
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "sudo",
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}