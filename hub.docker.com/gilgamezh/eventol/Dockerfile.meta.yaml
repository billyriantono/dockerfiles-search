MetaArgs: null
Stages:
- BaseName: python:3.5-alpine
  Commands:
  - Env:
    - Key: APP_ROOT
      Value: /usr/src/app
    Name: env
  - Env:
    - Key: APP_USER_NAME
      Value: app
    Name: env
  - Env:
    - Key: APP_USER_UID
      Value: "1000"
    Name: env
  - Env:
    - Key: IS_ALPINE
      Value: "true"
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 8.x
    Name: env
  - CmdLine:
    - apk add --upgrade --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/main
      apk-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/main     bash
      wget dpkg-dev libffi nodejs nodejs-npm git gcc musl-dev gettext     postgresql-dev
      libffi-dev py3-setuptools jpeg-dev make     zlib-dev freetype-dev lcms2-dev
      openjpeg-dev libxslt-dev alpine-sdk   && rm -rf /var/cache/apk/* /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g npm
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g yarn webpack@^1.12.13 bower less
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir cffi cairocffi psycopg2
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add --no-cache cairo-dev   && rm -rf /var/cache/apk/* /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${APP_ROOT}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${APP_ROOT}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./requirements.txt
    - ${APP_ROOT}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./requirements-dev.txt
    - ${APP_ROOT}
  - CmdLine:
    - pip3 install --no-cache-dir -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir -r requirements-dev.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./eventol/front/package.json
    - ${APP_ROOT}/eventol/front/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./eventol/front/yarn.lock
    - ${APP_ROOT}/eventol/front/
  - CmdLine:
    - cd ${APP_ROOT}/eventol/front && yarn install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${APP_ROOT}/eventol/front && npm rebuild node-sass --force
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./eventol/front/bower.json
    - ${APP_ROOT}/eventol/front/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./eventol/front/.bowerrc
    - ${APP_ROOT}/eventol/front/
  - CmdLine:
    - cd ${APP_ROOT}/eventol/front && bower install --allow-root
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./test.sh
    - ${APP_ROOT}/test.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./eventol
    - ${APP_ROOT}/eventol
  - CmdLine:
    - mkdir -p ${APP_ROOT}/eventol/manager/static
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${APP_ROOT}/eventol/front/eventol/static
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${APP_ROOT}/eventol/manager/static/manager/css/
    Name: run
    PrependShell: true
  - CmdLine:
    - lessc ${APP_ROOT}/eventol/front/eventol/static/manager/less/eventol.less > ${APP_ROOT}/eventol/manager/static/manager/css/eventol.css
    Name: run
    PrependShell: true
  - CmdLine:
    - lessc ${APP_ROOT}/eventol/front/eventol/static/manager/less/eventol-bootstrap.less
      > ${APP_ROOT}/eventol/manager/static/manager/css/eventol-bootstrap.css
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./deploy/docker/scripts/wait-for-it.sh
    - ${APP_ROOT}/wait-for-it.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./deploy/docker/scripts/start_eventol.sh
    - ${APP_ROOT}/start_eventol.sh
  - CmdLine:
    - cd ${APP_ROOT}/eventol/front && webpack --config webpack.prod.config.js
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${APP_ROOT}/eventol/static
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${APP_ROOT}/eventol && python manage.py collectstatic --noinput
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${APP_ROOT}/eventol/media
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --upgrade --no-cache rsync
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's@#~ @@g' ${APP_ROOT}/eventol/conf/locale/*/LC_MESSAGES/djangojs.po
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${APP_ROOT}/eventol && python manage.py compilemessages
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - tail
    - -f
    - /dev/null
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.5-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.5-alpine
