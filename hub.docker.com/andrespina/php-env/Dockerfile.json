{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1.11-fpm",
      "SourceCode": "FROM php:7.1.11-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1.11-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y   libfreetype6-dev   libjpeg62-turbo-dev   libmcrypt-dev   libpng-dev   libpcre3-dev   curl   mysql-client   git-core   build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install -j$(nproc) mysqli                                                    \u0026\u0026   docker-php-ext-install -j$(nproc) pdo_mysql                                                   \u0026\u0026   docker-php-ext-install -j$(nproc) iconv mcrypt                                                \u0026\u0026   docker-php-ext-install -j$(nproc) zip                                                         \u0026\u0026   docker-php-ext-configure opcache --enable-opcache                                             \u0026\u0026   docker-php-ext-install -j$(nproc) opcache                                                     \u0026\u0026   docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/   \u0026\u0026   docker-php-ext-install -j$(nproc) gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DRUSH_VERSION",
              "Value": "8.1.15"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL -o /usr/local/bin/drush \"https://github.com/drush-ops/drush/releases/download/$DRUSH_VERSION/drush.phar\" \u0026\u0026   chmod +x /usr/local/bin/drush"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/b107d959a5924af895807021fcef4ffec5a76aa9/web/installer \u0026\u0026   php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=1.5.5 \u0026\u0026   composer self-update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/root/.composer/vendor/bin/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "composer global require squizlabs/php_codesniffer:2.9.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require drupal/coder:dev-8.x-2.x"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "phpcs --config-set installed_paths /root/.composer/vendor/drupal/coder/coder_sniffer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /composer/vendor/drupal/coder/coder_sniffer/Drupal/composer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Drupal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /composer/vendor/drupal/coder/coder_sniffer/DrupalPractice/composer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/Drupal/Practice"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_9.x | bash - \u0026\u0026   apt-get install -y nodejs \u0026\u0026   npm install -g eslint --silent \u0026\u0026   npm install -g eslint-plugin-import --silent \u0026\u0026   npm install -g eslint-plugin-jsx-a11y --silent \u0026\u0026   npm install -g eslint-config-airbnb --silent \u0026\u0026   npm install -g eslint-plugin-react --silent"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g gulp-cli gulp --silent"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}