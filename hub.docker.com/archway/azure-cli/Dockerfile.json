{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "microsoft/azure-cli:latest",
      "SourceCode": "FROM microsoft/azure-cli:latest",
      "Platform": "",
      "From": {
        "Image": "microsoft/azure-cli:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"nokuda@archway.co.jp\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "KUBECTL_VERSION",
              "Value": "1.12.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "2.11.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_FILENAME",
              "Value": "helm-v${HELM_VERSION}-linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOTNET_SDK_VERSION",
              "Value": "2.1.500"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update     \u0026\u0026 apk upgrade     \u0026\u0026 apk add --no-cache         make         go         vim         nodejs         yarn         terraform         krb5-libs         libgcc         libintl         libstdc++         tzdata         userspace-rcu     \u0026\u0026 apk -X https://dl-cdn.alpinelinux.org/alpine/edge/main add --no-cache        lttng-ust"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl     \u0026\u0026 chmod +x ./kubectl     \u0026\u0026 mv ./kubectl /usr/local/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://storage.googleapis.com/kubernetes-helm/${HELM_FILENAME} | tar xz     \u0026\u0026 mv linux-amd64/helm /usr/local/bin/helm     \u0026\u0026 rm -rf linux-amd64     \u0026\u0026 helm init --client-only"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ASPNETCORE_URLS",
              "Value": "http://+:80"
            },
            {
              "Key": "DOTNET_RUNNING_IN_CONTAINER",
              "Value": "true"
            },
            {
              "Key": "DOTNET_SYSTEM_GLOBALIZATION_INVARIANT",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -O dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-musl-x64.tar.gz     \u0026\u0026 dotnet_sha512='af061f17d88e4371fe523b895b60a0259296e2cc2bd9854a04541b87038638e0a7b7053288b45bc00a89fbb04dbdb7218a76ea9dfed8919457e758c532c15e9f'     \u0026\u0026 echo \"$dotnet_sha512  dotnet.tar.gz\" | sha512sum -c -     \u0026\u0026 mkdir -p /usr/share/dotnet     \u0026\u0026 tar -C /usr/share/dotnet -xzf dotnet.tar.gz     \u0026\u0026 ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet     \u0026\u0026 rm dotnet.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}