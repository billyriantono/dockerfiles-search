MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04
  Commands:
  - Maintainer: Anurag Goel <deeprig@anur.ag>
    Name: maintainer
  - Key: PYTHON_VERSION
    Name: arg
    Value: "2.7"
  - Key: CONDA_PYTHON_VERSION
    Name: arg
    Value: "2"
  - Key: CONDA_VERSION
    Name: arg
    Value: 4.2.12
  - Key: CONDA_DIR
    Name: arg
    Value: /opt/conda
  - Key: TINI_VERSION
    Name: arg
    Value: v0.13.2
  - Key: USERNAME
    Name: arg
    Value: docker
  - Key: USERID
    Name: arg
    Value: "1000"
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends git wget ffmpeg
      unzip sudo &&   apt-get clean &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends ca-certificates
      &&   wget --quiet https://repo.continuum.io/miniconda/Miniconda$CONDA_PYTHON_VERSION-$CONDA_VERSION-Linux-x86_64.sh
      -O /tmp/miniconda.sh &&   echo 'export PATH=$CONDA_DIR/bin:$PATH' > /etc/profile.d/conda.sh
      &&   /bin/bash /tmp/miniconda.sh -b -p $CONDA_DIR &&   rm -rf /tmp/* &&   apt-get
      clean &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - 'useradd --create-home -s /bin/bash --no-user-group -u $USERID $USERNAME &&   chown
      $USERNAME $CONDA_DIR -R &&   adduser $USERNAME sudo &&   echo "$USERNAME ALL=(ALL)
      NOPASSWD: ALL" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Name: user
    User: $USERNAME
  - Name: workdir
    Path: /home/$USERNAME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .theanorc
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - keras.json
    - .keras/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - .jupyter/
  - CmdLine:
    - conda install -y --quiet python=$PYTHON_VERSION &&   conda install -y --quiet
      notebook h5py Pillow ipywidgets scikit-learn   matplotlib pandas bcolz sympy
      scikit-image mkl-service &&   pip install --upgrade pip &&   pip install tensorflow-gpu
      kaggle-cli &&   pip install git+git://github.com/fchollet/keras.git@1.1.2 &&   conda
      clean -tipsy
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_HOME
      Value: /usr/local/cuda
    Name: env
  - Env:
    - Key: CUDA_ROOT
      Value: $CUDA_HOME
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$CUDA_ROOT/bin:$HOME/bin
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:$CUDA_ROOT/lib64
    Name: env
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - git clone -q https://github.com/fastai/courses.git fastai-courses
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/$USERNAME/fastai-courses/deeplearning1/nbs
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jupyter notebook --ip=0.0.0.0 --port=8888
    Name: cmd
    PrependShell: true
  From:
    Image: nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04
