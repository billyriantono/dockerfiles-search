{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:6",
      "SourceCode": "FROM centos:6",
      "Platform": "",
      "From": {
        "Image": "centos:6"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"conda-forge@googlegroups.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "http://tycho.usno.navy.mil/timer.html",
            "/opt/docker/etc/timestamp"
          ]
        },
        {
          "CmdLine": [
            "rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum update -y \u0026\u0026     yum install -y bzip2     patch     sudo     tar     which \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'conda ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s -L https://repo.continuum.io/miniconda/Miniconda3-4.3.31-Linux-x86_64.sh \u003e miniconda.sh \u0026\u0026     openssl md5 miniconda.sh | grep 7fe70b214bee1143e3e3f0467b71453c \u0026\u0026     bash miniconda.sh -b -p /opt/conda \u0026\u0026     rm miniconda.sh \u0026\u0026     touch /opt/conda/conda-meta/pinned \u0026\u0026     export PATH=/opt/conda/bin:$PATH \u0026\u0026     conda config --set show_channel_urls True \u0026\u0026     conda config --append channels conda-forge \u0026\u0026     conda update --all --yes \u0026\u0026     conda clean -tipy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export PATH=\"/opt/conda/bin:${PATH}\" \u0026\u0026     conda install --yes --quiet conda-build anaconda-client jinja2 setuptools \u0026\u0026     conda install --yes git \u0026\u0026     conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export PATH=\"/opt/conda/bin:${PATH}\" \u0026\u0026     conda install --yes gosu \u0026\u0026     export CONDA_GOSU_INFO=( `conda list gosu | grep gosu` ) \u0026\u0026     echo \"gosu ${CONDA_GOSU_INFO[1]}\" \u003e\u003e /opt/conda/conda-meta/pinned \u0026\u0026     conda install --yes tini \u0026\u0026     export CONDA_TINI_INFO=( `conda list tini | grep tini` ) \u0026\u0026     echo \"tini ${CONDA_TINI_INFO[1]}\" \u003e\u003e /opt/conda/conda-meta/pinned \u0026\u0026     conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "USER_ID",
              "Value": "9001"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GROUP_ID",
              "Value": "9001"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGNAME",
              "Value": "conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAIL",
              "Value": "/var/spool/mail/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/conda/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -g $GROUP_ID -o conda \u0026\u0026     useradd --shell /bin/bash -u $USER_ID -g $GROUP_ID -o -c \"\" -m conda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R conda:conda /opt/conda \u0026\u0026     cp /root/.condarc $HOME/.condarc \u0026\u0026     chown conda:conda $HOME/.condarc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -R /etc/skel $HOME \u0026\u0026     chown -R conda:conda $HOME/skel \u0026\u0026     (ls -A1 $HOME/skel | xargs -I {} mv -n $HOME/skel/{} $HOME) \u0026\u0026     rm -Rf $HOME/skel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint_source",
            "/opt/docker/bin/entrypoint_source"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint",
            "/opt/docker/bin/entrypoint"
          ]
        },
        {
          "CmdLine": [
            "/opt/conda/bin/tini",
            "--",
            "/opt/docker/bin/entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}