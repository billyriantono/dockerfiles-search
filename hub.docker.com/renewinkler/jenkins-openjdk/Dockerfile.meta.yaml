MetaArgs: null
Stages:
- BaseName: openjdk:8
  Commands:
  - Env:
    - Key: DOCKER_VERSION
      Value: 1.12.0
    Name: env
  - Env:
    - Key: DOCKER_COMPOSE_VERSION
      Value: 1.8.0
    Name: env
  - Env:
    - Key: DOCKER_MACHINE_VERSION
      Value: 0.8.0
    Name: env
  - CmdLine:
    - apt-get update -qq && apt-get install -qq curl wget git subversion nano nodejs
      npm iputils-ping && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -sf -o /opt/apache-maven-bin.tar.gz http://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz;
      \ttar xzf /opt/apache-maven-bin.tar.gz -C /opt/; \trm /opt/apache-maven-bin.tar.gz;
      \tln -s /opt/apache-maven-3.3.9 /opt/maven"
    Name: run
    PrependShell: true
  - Env:
    - Key: MAVEN_HOME
      Value: /opt/maven
    Name: env
  - Name: workdir
    Path: /home/toolbox/
  - CmdLine:
    - "curl -L -o /tmp/docker-latest.tgz https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz
      && \ttar -xvzf /tmp/docker-latest.tgz && \tmv docker/* /usr/bin/"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname
      -s`-`uname -m` > /usr/local/bin/docker-compose && \tchmod +x /usr/local/bin/docker-compose"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -L https://github.com/docker/machine/releases/download/v${DOCKER_MACHINE_VERSION}/docker-machine-`uname
      -s`-`uname -m` > /usr/local/bin/docker-machine && \tchmod +x /usr/local/bin/docker-machine"
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_HOME
      Value: /opt/jenkins
    Name: env
  - Env:
    - Key: JENKINS_MIRROR
      Value: http://mirrors.jenkins-ci.org
    Name: env
  - CmdLine:
    - mkdir -p $JENKINS_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sf -o /opt/jenkins/jenkins.war -L $JENKINS_MIRROR/war/latest/jenkins.war
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p $JENKINS_HOME/plugins; for plugin in greenballs; \tdo curl -sf -o
      $JENKINS_HOME/plugins/${plugin}.hpi -L $JENKINS_MIRROR/plugins/${plugin}/latest/${plugin}.hpi;
      done"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $JENKINS_HOME/data
  - Name: workdir
    Path: $JENKINS_HOME
  - Name: expose
    Ports:
    - "8080"
  - Health:
      Interval: 20000000000
      Test:
      - CMD-SHELL
      - curl --fail http://localhost:8080/ || exit 1
      Timeout: 10000000000
    Name: healthcheck
  - CmdLine:
    - java
    - -jar
    - jenkins.war
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8
