{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6-stretch",
      "SourceCode": "FROM python:3.6-stretch",
      "Platform": "",
      "From": {
        "Image": "python:3.6-stretch"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "app.version",
              "Value": "\"1.0.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "vendor",
              "Value": "\"github.com/ppadial\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "apprelease-date",
              "Value": "\"2018-01-10\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "BORG_VERSION",
          "Name": "arg",
          "Value": "1.1.4"
        },
        {
          "Key": "BORG_ARCH",
          "Name": "arg",
          "Value": "linux64"
        },
        {
          "Env": [
            {
              "Key": "BORGWEB_CONFIG",
              "Value": "/app/borgweb.conf"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get upgrade -y \u0026\u0026    apt-get install --no-install-recommends --no-install-suggests -y git ca-certificates curl build-essential \u0026\u0026    pip install virtualenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NVM_VERSION",
              "Value": "v0.33.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "v7.9.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o- https://raw.githubusercontent.com/creationix/nvm/${NVM_VERSION}/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c \"source $NVM_DIR/nvm.sh \u0026\u0026 nvm install $NODE_VERSION \u0026\u0026 nvm use --delete-prefix $NODE_VERSION\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/versions/node/$NODE_VERSION/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/versions/node/$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -Lo /bin/borg      https://github.com/borgbackup/borg/releases/download/${BORG_VERSION}/borg-${BORG_ARCH} \u0026\u0026      chmod +x /bin/borg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir app \u0026\u0026 cd /app \u0026\u0026    virtualenv --python=python3 borg-env \u0026\u0026    . borg-env/bin/activate \u0026\u0026    pip install tox pytest \u0026\u0026    git clone https://github.com/borgbackup/borgweb.git \u0026\u0026    cd borgweb \u0026\u0026    pip install -e . \u0026\u0026    cd js \u0026\u0026 npm install \u0026\u0026    mkdir /logs /repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /app/borgweb/logging.conf /app/logging.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -r /etc/ssh /etc/ssh.sav \u0026\u0026    apt-get purge -y --auto-remove \u0026\u0026    rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/repo",
            "/logs"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}