{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "_RESOURCES_PATH",
              "Value": "\"/resources\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $_RESOURCES_PATH \u0026\u0026     chmod ug+rwx $_RESOURCES_PATH"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-res/scripts/clean_layer.sh",
            "$_RESOURCES_PATH/clean_layer.sh"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y         wget         python3-pip    \u0026\u0026         ln -s /usr/bin/pip3 /usr/bin/pip \u0026\u0026         ln -s /usr/bin/python3 /usr/bin/python \u0026\u0026     chmod a+rwx $_RESOURCES_PATH/clean_layer.sh \u0026\u0026     $_RESOURCES_PATH/clean_layer.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/run/sshd \u0026\u0026     mkdir /root/.ssh \u0026\u0026     mkdir /var/lib/sshd \u0026\u0026     chmod -R 700 /var/lib/sshd/ \u0026\u0026     chown -R root:sys /var/lib/sshd/ \u0026\u0026     useradd -r -U -d /var/lib/sshd/ -c \"sshd privsep\" -s /bin/false sshd \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y build-essential libssl-dev zlib1g-dev \u0026\u0026     cd $_RESOURCES_PATH \u0026\u0026     wget \"https://cdn.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-8.0p1.tar.gz\" \u0026\u0026     tar xfz openssh-8.0p1.tar.gz \u0026\u0026     cd $_RESOURCES_PATH/openssh-8.0p1/ \u0026\u0026     sed -i \"s@strcmp(allowed_open-\u003ehost_to_connect, requestedhost) != 0@strcmp(allowed_open-\u003ehost_to_connect, requestedhost) != 0 \\\u0026\\\u0026 match_hostname(requestedhost, allowed_open-\u003ehost_to_connect) == 0@g\" ./channels.c \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     apt-get install -y python3-setuptools \u0026\u0026     pip install filelock \u0026\u0026     pip install kubernetes \u0026\u0026     pip install docker \u0026\u0026     $_RESOURCES_PATH/clean_layer.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -d /home/limited-user -m -s /bin/true --gid nogroup --skel /dev/null --create-home limited-user \u0026\u0026     echo 'PATH=\"\"' \u003e\u003e /home/limited-user/.profile \u0026\u0026     echo 'limited-user:limited' |chpasswd \u0026\u0026     chmod 555 /home/limited-user/ \u0026\u0026     cd /home/limited-user/ \u0026\u0026     chmod 444 .profile \u0026\u0026     chown root:root /home/limited-user/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-res/start_ssh.py",
            "$_RESOURCES_PATH/start_ssh.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-res/ssh/*",
            "/etc/ssh/"
          ]
        },
        {
          "CmdLine": [
            "chmod -R ug+rwx $_RESOURCES_PATH"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python $_RESOURCES_PATH/start_ssh.py"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}