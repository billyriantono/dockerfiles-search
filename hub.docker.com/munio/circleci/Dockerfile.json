{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phpdockerio/php74-cli:latest",
      "SourceCode": "FROM phpdockerio/php74-cli:latest",
      "Platform": "",
      "From": {
        "Image": "phpdockerio/php74-cli:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo 'APT::Get::Assume-Yes \"true\";' \u003e /etc/apt/apt.conf.d/90circleci   \u0026\u0026 echo 'DPkg::Options \"--force-confnew\";' \u003e\u003e /etc/apt/apt.conf.d/90circleci"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     git locales sudo openssh-client ca-certificates tar gzip parallel     net-tools netcat unzip zip bzip2 gnupg curl wget build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\"   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL   \u0026\u0026 chmod +x /usr/bin/jq   \u0026\u0026 jq --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*-ce\\.tgz' | sort -r | head -n 1)   \u0026\u0026 DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\"   \u0026\u0026 echo Docker URL: $DOCKER_URL   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\"   \u0026\u0026 ls -lha /tmp/docker.tgz   \u0026\u0026 tar -xz -C /tmp -f /tmp/docker.tgz   \u0026\u0026 mv /tmp/docker/* /usr/bin   \u0026\u0026 rm -rf /tmp/docker /tmp/docker.tgz   \u0026\u0026 which docker   \u0026\u0026 (docker version || true)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\"   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL   \u0026\u0026 chmod +x /usr/bin/docker-compose   \u0026\u0026 docker-compose version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\"   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL   \u0026\u0026 tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz   \u0026\u0026 rm -rf /tmp/dockerize-linux-amd64.tar.gz   \u0026\u0026 dockerize --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd --gid 3434 circleci   \u0026\u0026 useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci   \u0026\u0026 echo 'circleci ALL=NOPASSWD: ALL' \u003e\u003e /etc/sudoers.d/50-circleci"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_13.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends   nodejs yarn mysql-client   php7.4-bcmath php7.4-intl php7.4-mysql php7.4-sqlite3 php-redis php-imagick php-xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://raw.githubusercontent.com/composer/getcomposer.org/master/web/installer', 'composer-setup.php');\"   \u0026\u0026 php composer-setup.php \u0026\u0026 php -r \"unlink('composer-setup.php');\" \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "circleci"
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}