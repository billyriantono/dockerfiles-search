MetaArgs: null
Stages:
- As: elixir
  BaseName: elixir:alpine
  Commands:
  - Env:
    - Key: MIX_ENV
      Value: prod
    Name: env
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./
    - ./
  - CmdLine:
    - mix local.hex --force
    Name: run
    PrependShell: true
  - CmdLine:
    - mix deps.get
    Name: run
    PrependShell: true
  - CmdLine:
    - ls /app
    Name: run
    PrependShell: true
  From:
    Image: elixir:alpine
  Name: elixir
  Platform: ""
  SourceCode: FROM elixir:alpine as elixir
- As: node
  BaseName: node:8-alpine
  Commands:
  - Env:
    - Key: MIX_ENV
      Value: prod
    Name: env
  - Name: workdir
    Path: /app
  - Chown: ""
    From: elixir
    Name: copy
    SourcesAndDest:
    - /app
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets
    - /app/assets
  - CmdLine:
    - ls /app
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /app/assets && npm install && npm run deploy
    Name: run
    PrependShell: true
  From:
    Image: node:8-alpine
  Name: node
  Platform: ""
  SourceCode: FROM node:8-alpine as node
- As: elixir2
  BaseName: elixir:alpine
  Commands:
  - Env:
    - Key: MIX_ENV
      Value: prod
    Name: env
  - Env:
    - Key: PORT
      Value: "4000"
    Name: env
  - Name: workdir
    Path: /app
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /app
    - ./
  - CmdLine:
    - mix local.rebar --force
    Name: run
    PrependShell: true
  - CmdLine:
    - mix local.hex --force
    Name: run
    PrependShell: true
  - CmdLine:
    - mix deps.get --only prod
    Name: run
    PrependShell: true
  - CmdLine:
    - mix compile
    Name: run
    PrependShell: true
  - CmdLine:
    - mix phx.digest
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "4000"
  - CmdLine:
    - mix
    - phx.server
    Name: cmd
    PrependShell: false
  From:
    Image: elixir:alpine
  Name: elixir2
  Platform: ""
  SourceCode: FROM elixir:alpine as elixir2
