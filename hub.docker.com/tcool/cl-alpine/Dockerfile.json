{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "frolvlad/alpine-glibc:alpine-3.6",
      "SourceCode": "FROM frolvlad/alpine-glibc:alpine-3.6",
      "Platform": "",
      "From": {
        "Image": "frolvlad/alpine-glibc:alpine-3.6"
      },
      "Commands": [
        {
          "Key": "work_dir",
          "Name": "arg",
          "Value": "/tmp/setup"
        },
        {
          "CmdLine": [
            "mkdir ${work_dir} \u0026\u0026     chmod 777 ${work_dir}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/var/lib/postgresql/data"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/postgresql/data"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache git automake autoconf make gcc build-base curl-dev curl glib-dev libressl-dev ncurses-dev sqlite libev-dev su-exec libpq postgresql-client postgresql-dev postgresql-contrib \u0026\u0026     mkdir /docker-entrypoint-initdb.d \u0026\u0026     chmod +x docker-entrypoint.sh \u0026\u0026     cd ${work_dir} \u0026\u0026     git clone --depth=1 -b release https://github.com/roswell/roswell.git \u0026\u0026     cd roswell \u0026\u0026     sh bootstrap \u0026\u0026     ./configure --disable-manual-install \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd .. \u0026\u0026     rm -rf roswell \u0026\u0026     ros run -q"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/.roswell/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -s ${HOME}/.roswell/local-projects work \u0026\u0026     ros install fukamachi/clack \u0026\u0026     ros install fukamachi/caveman \u0026\u0026     ros install cxxxr/lem \u0026\u0026     ros install tamamu/darkmatter \u0026\u0026     ros install Shinmera/dissect \u0026\u0026     ros install fukamachi/qlot \u0026\u0026     ros install fukamachi/utopian \u0026\u0026     mv ${HOME}/.roswell/bin/lem ${HOME}/.roswell/bin/lem2 \u0026\u0026     mv ${HOME}/.roswell/bin/lem-ncurses ${HOME}/.roswell/bin/lem"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        }
      ]
    }
  ]
}