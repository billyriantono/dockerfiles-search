MetaArgs: null
Stages:
- BaseName: frolvlad/alpine-glibc:alpine-3.6
  Commands:
  - Key: work_dir
    Name: arg
    Value: /tmp/setup
  - CmdLine:
    - mkdir ${work_dir} &&     chmod 777 ${work_dir}
    Name: run
    PrependShell: true
  - Env:
    - Key: PGDATA
      Value: /var/lib/postgresql/data
    Name: env
  - Name: volume
    Volumes:
    - /var/lib/postgresql/data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - Name: expose
    Ports:
    - "5432"
  - CmdLine:
    - apk add --no-cache git automake autoconf make gcc build-base curl-dev curl glib-dev
      libressl-dev ncurses-dev sqlite libev-dev su-exec libpq postgresql-client postgresql-dev
      postgresql-contrib &&     mkdir /docker-entrypoint-initdb.d &&     chmod +x
      docker-entrypoint.sh &&     cd ${work_dir} &&     git clone --depth=1 -b release
      https://github.com/roswell/roswell.git &&     cd roswell &&     sh bootstrap
      &&     ./configure --disable-manual-install &&     make &&     make install
      &&     cd .. &&     rm -rf roswell &&     ros run -q
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/.roswell/bin:${PATH}
    Name: env
  - CmdLine:
    - ln -s ${HOME}/.roswell/local-projects work &&     ros install fukamachi/clack
      &&     ros install fukamachi/caveman &&     ros install cxxxr/lem &&     ros
      install tamamu/darkmatter &&     ros install Shinmera/dissect &&     ros install
      fukamachi/qlot &&     ros install fukamachi/utopian &&     mv ${HOME}/.roswell/bin/lem
      ${HOME}/.roswell/bin/lem2 &&     mv ${HOME}/.roswell/bin/lem-ncurses ${HOME}/.roswell/bin/lem
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  From:
    Image: frolvlad/alpine-glibc:alpine-3.6
  Name: ""
  Platform: ""
  SourceCode: FROM frolvlad/alpine-glibc:alpine-3.6
