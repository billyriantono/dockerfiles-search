{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.18-fpm",
      "SourceCode": "FROM php:7.2.18-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.2.18-fpm"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/swift.ini",
            "/usr/local/etc/php/conf.d/za-swift.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/www.conf",
            "/usr/local/etc/php-fpm.d/www.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run-perms-php",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /usr/local/bin/run-perms-php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 -s /bin/bash www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         libfreetype6         libpng16-16         libgssrpc4         libjpeg62-turbo         libicu57         libpq5         libkdb5-8         libevent-2.0     --no-install-recommends \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe         \u0026\u0026 buildDeps=\"             zlib1g-dev             libicu-dev             libpq-dev             libxml2-dev             libfreetype6-dev             libjpeg62-turbo-dev             libpng-dev         \"         \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends         \u0026\u0026 rm -rf /var/lib/apt/lists/*         \u0026\u0026 docker-php-ext-enable opcache         \u0026\u0026 docker-php-ext-install -j$(nproc) zip         \u0026\u0026 docker-php-ext-install -j$(nproc) intl         \u0026\u0026 docker-php-ext-install -j$(nproc) pdo_pgsql         \u0026\u0026 docker-php-ext-install -j$(nproc) iconv         \u0026\u0026 docker-php-ext-install -j$(nproc) bcmath         \u0026\u0026 docker-php-ext-install -j$(nproc) soap         \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/         \u0026\u0026 docker-php-ext-install -j$(nproc) gd         \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe    \u0026\u0026 buildDeps=\"         git         libsasl2-dev         zlib1g-dev          libevent-dev     \"     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 mkdir /tmp/libmemcached     \u0026\u0026 cd /tmp/libmemcached     \u0026\u0026 git clone https://github.com/awslabs/aws-elasticache-cluster-client-libmemcached.git     \u0026\u0026 cd /tmp/libmemcached/aws-elasticache-cluster-client-libmemcached     \u0026\u0026 touch configure.ac aclocal.m4 configure Makefile.am Makefile.in     \u0026\u0026 mkdir BUILD     \u0026\u0026 cd BUILD     \u0026\u0026 ../configure --prefix=/tmp/libmemcached --with-pic     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd /tmp     \u0026\u0026 git clone https://github.com/awslabs/aws-elasticache-cluster-client-memcached-for-php.git     \u0026\u0026 cd aws-elasticache-cluster-client-memcached-for-php/     \u0026\u0026 git checkout php7     \u0026\u0026 docker-php-ext-configure /tmp/aws-elasticache-cluster-client-memcached-for-php --with-libmemcached-dir=/tmp/libmemcached --disable-memcached-sasl     \u0026\u0026 sed -i \"s#-lmemcached#/tmp/libmemcached/lib/libmemcachedutil.a /tmp/libmemcached/lib/libmemcached.a -lcrypt -lpthread -lm -lstdc++ -lsasl2#\" Makefile     \u0026\u0026 sed -i \"s#-lmemcachedutil##\" Makefile     \u0026\u0026 sed -i \"s#-L/tmp/libmemcached/lib##\" Makefile     \u0026\u0026 docker-php-ext-install /tmp/aws-elasticache-cluster-client-memcached-for-php     \u0026\u0026 rm -rf /tmp/libmemcached /tmp/aws-elasticache-cluster-client-memcached-for-php     \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "8.11.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ARCH= \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture)\"   \u0026\u0026 case \"${dpkgArch##*-}\" in     amd64) ARCH='x64';;     ppc64el) ARCH='ppc64le';;     s390x) ARCH='s390x';;     arm64) ARCH='arm64';;     armhf) ARCH='armv7l';;     i386) ARCH='x86';;     *) echo \"unsupported architecture\"; exit 1 ;;   esac   \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\"   \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\"   \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/local/bin/node /usr/bin/nodejs   \u0026\u0026 npm install -g less"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -SL -o \"datadog-php-tracer.deb\" \"https://github.com/DataDog/dd-trace-php/releases/download/0.23.0/datadog-php-tracer_0.23.0_amd64.deb\"   \u0026\u0026 dpkg -i datadog-php-tracer.deb   \u0026\u0026 rm \"datadog-php-tracer.deb\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/run-perms-php"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}