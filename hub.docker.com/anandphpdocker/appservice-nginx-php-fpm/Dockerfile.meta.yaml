MetaArgs: null
Stages:
- BaseName: php:7.2-fpm
  Commands:
  - Env:
    - Key: php_conf
      Value: /usr/local/etc/php-fpm.conf
    Name: env
  - Env:
    - Key: fpm_conf
      Value: /usr/local/etc/php-fpm.d/www.conf
    Name: env
  - Env:
    - Key: php_vars
      Value: /usr/local/etc/php/conf.d/docker-vars.ini
    Name: env
  - Env:
    - Key: NGINX_VERSION
      Value: 1.13.3-1~stretch
    Name: env
  - Env:
    - Key: NJS_VERSION
      Value: 1.13.3.0.1.11-1~stretch
    Name: env
  - Env:
    - Key: DOCKER_BUILD_HOME
      Value: '"/dockerbuild"'
    Name: env
  - Env:
    - Key: DRUPAL_SOURCE
      Value: '"/usr/src/drupal"'
    Name: env
  - Env:
    - Key: DRUPAL_HOME
      Value: '"/home/site/wwwroot"'
    Name: env
  - Env:
    - Key: MARIADB_DATA_DIR
      Value: '"/home/data/mysql"'
    Name: env
  - Env:
    - Key: MARIADB_LOG_DIR
      Value: '"/home/LogFiles/mysql"'
    Name: env
  - Env:
    - Key: PHPMYADMIN_SOURCE
      Value: '"/usr/src/phpmyadmin"'
    Name: env
  - Env:
    - Key: PHPMYADMIN_HOME
      Value: '"/home/phpmyadmin"'
    Name: env
  - CmdLine:
    - "apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests
      -y gnupg1 \t&& \tNGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62; \tfound='';
      \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80
      \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching
      GPG key $NGINX_GPGKEY from $server\"; \t\tapt-key adv --keyserver \"$server\"
      --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes &&
      break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG
      key $NGINX_GPGKEY\" && exit 1; \tapt-get remove --purge -y gnupg1 && apt-get
      -y --purge autoremove && rm -rf /var/lib/apt/lists/* \t&& echo \"deb http://nginx.org/packages/mainline/debian/
      stretch nginx\" >> /etc/apt/sources.list \t&& apt-get update \t&& apt-get install
      --no-install-recommends --no-install-suggests -y \t\t\t\t\t\tnginx=${NGINX_VERSION}
      \t\t\t\t\t\tnginx-module-xslt=${NGINX_VERSION} \t\t\t\t\t\tnginx-module-geoip=${NGINX_VERSION}
      \t\t\t\t\t\tnginx-module-image-filter=${NGINX_VERSION} \t\t\t\t\t\tnginx-module-njs=${NJS_VERSION}
      \t\t\t\t\t\tgettext-base \t\t\t\t\t\tsupervisor \t\t\t\t\t\topenssh-server \t&&
      rm -rf /var/lib/apt/lists/* \t&& echo \"root:Docker!\" | chpasswd     \t&& docker-php-ext-install
      mysqli          \topcache          \tbcmath          \tmbstring          \tpcntl"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /home/LogFiles/docker \t&& ln -sf /dev/stdout /home/LogFiles/docker/access.log
      \t&& ln -sf /dev/stderr /home/LogFiles/docker/error.log"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sshd_config
    - /etc/ssh/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init_container.sh
    - /bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./app/*
    - /var/www/html/
  - CmdLine:
    - echo "cgi.fix_pathinfo=0" > ${php_vars} &&    echo "upload_max_filesize = 100M"  >>
      ${php_vars} &&    echo "post_max_size = 100M"  >> ${php_vars} &&    echo "variables_order
      = \"EGPCS\""  >> ${php_vars} &&     echo "memory_limit = 128M"  >> ${php_vars}
      &&     sed -i         -e "s/;catch_workers_output\s*=\s*yes/catch_workers_output
      = yes/g"         -e "s/pm.max_children = 5/pm.max_children = 4/g"         -e
      "s/pm.start_servers = 2/pm.start_servers = 3/g"         -e "s/pm.min_spare_servers
      = 1/pm.min_spare_servers = 2/g"         -e "s/pm.max_spare_servers = 3/pm.max_spare_servers
      = 4/g"         -e "s/;pm.max_requests = 500/pm.max_requests = 200/g"         -e
      "s/user = www-data/user = nginx/g"         -e "s/group = www-data/group = nginx/g"         -e
      "s/;listen.mode = 0660/listen.mode = 0666/g"         -e "s/;listen.owner = www-data/listen.owner
      = nginx/g"         -e "s/;listen.group = www-data/listen.group = nginx/g"         -e
      "s/listen = 127.0.0.1:9000/listen = \/var\/run\/php-fpm.sock/g"         -e "s/^;clear_env
      = no$/clear_env = no/"         ${fpm_conf}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $DOCKER_BUILD_HOME
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $DOCKER_BUILD_HOME
  - CmdLine:
    - mkdir -p $DRUPAL_SOURCE
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - drupal.tar.gz
    - $DRUPAL_SOURCE/
  - Name: workdir
    Path: $DRUPAL_HOME
  - CmdLine:
    - rm -rf $DOCKER_BUILD_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 /bin/init_container.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "2222"
    - "80"
  - CmdLine:
    - /bin/init_container.sh
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.2-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-fpm
