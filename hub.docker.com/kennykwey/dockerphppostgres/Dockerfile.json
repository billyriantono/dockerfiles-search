{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm-alpine",
      "SourceCode": "FROM php:7.2-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm-alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SYMFONY_ENV",
              "Value": "dev"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex; \t\tapk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\timagemagick-dev \t\tlibjpeg-turbo-dev \t\tlibpng-dev \t; \t\tdocker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \tdocker-php-ext-install -j \"$(nproc)\" \t\tbcmath \t\texif \t\tgd \t\tmysqli \t\topcache \t\tzip \t; \tpecl install imagick-3.4.4; \tdocker-php-ext-enable imagick; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --virtual .wordpress-phpexts-rundeps $runDeps; \tapk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'error_reporting = 4339'; \t\techo 'display_errors = Off'; \t\techo 'display_startup_errors = Off'; \t\techo 'log_errors = On'; \t\techo 'error_log = /dev/stderr'; \t\techo 'log_errors_max_len = 1024'; \t\techo 'ignore_repeated_errors = On'; \t\techo 'ignore_repeated_source = Off'; \t\techo 'html_errors = Off'; \t} \u003e /usr/local/etc/php/conf.d/error-logging.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk add --no-cache --virtual .build-deps $PHPIZE_DEPS     \u0026\u0026 apk add --no-cache --virtual .ext-deps zlib-dev postgresql-dev icu-dev sqlite-dev git composer \t\u0026\u0026 pecl install redis apcu xdebug \t\u0026\u0026 docker-php-ext-enable redis apcu xdebug \t\u0026\u0026 docker-php-ext-install -j$(nproc) zip iconv intl json mbstring opcache pgsql pdo_pgsql pdo_sqlite sockets bcmath \t\u0026\u0026 apk del .build-deps \t\u0026\u0026 rm -rf /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -g 500 symfony     \u0026\u0026 adduser -u 500 -D -G symfony -h /home/symfony -s /bin/sh symfony     \u0026\u0026 mkdir -p /srv/symfony     \u0026\u0026 chown symfony:symfony /srv/symfony"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk add --no-cache --virtual .build-deps curl     \u0026\u0026 version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\")     \u0026\u0026 curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s \"https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version\"     \u0026\u0026 mkdir -p /tmp/blackfire     \u0026\u0026 tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire     \u0026\u0026 mv /tmp/blackfire/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so     \u0026\u0026 printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" \u003e \"$PHP_INI_DIR/conf.d/blackfire.ini\"     \u0026\u0026 rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz     \u0026\u0026 apk del .build-deps     \u0026\u0026 rm -rf /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk add --no-cache --virtual .build-deps curl     \u0026\u0026 mkdir -p /tmp/blackfire     \u0026\u0026 curl -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire     \u0026\u0026 mv /tmp/blackfire/blackfire /usr/bin/blackfire     \u0026\u0026 rm -Rf /tmp/blackfire     \u0026\u0026 apk del .build-deps     \u0026\u0026 rm -rf /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf.d",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "pool.d",
            "/usr/local/etc/php-fpm.d/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/srv/symfony"
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}