{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos",
      "SourceCode": "from centos",
      "Platform": "",
      "From": {
        "Image": "centos"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); rm -f /lib/systemd/system/multi-user.target.wants/*;rm -f /etc/systemd/system/*.wants/*;rm -f /lib/systemd/system/local-fs.target.wants/*; rm -f /lib/systemd/system/sockets.target.wants/*udev*; rm -f /lib/systemd/system/sockets.target.wants/*initctl*; rm -f /lib/systemd/system/basic.target.wants/*;rm -f /lib/systemd/system/anaconda.target.wants/*;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/sys/fs/cgroup"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/init"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "27016/udp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "27016/tcp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7778/udp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7778/tcp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "32330/tcp"
          ]
        },
        {
          "CmdLine": [
            "yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \u0026\u0026 yum -y install glibc.i686 libstdc++.i686 sudo perl-Compress-Zlib lsof bzip2 nano ntpdate \u0026\u0026 yum -y update \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m steam \u0026\u0026 usermod -aG wheel steam \u0026\u0026  su - steam -c \"mkdir steamcmd \u0026\u0026 cd steamcmd \u0026\u0026 curl -sqL 'https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz' | tar zxvf - \u0026\u0026 ./steamcmd.sh +quit\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "su - steam -c \"curl -sL http://git.io/vtf5N | bash -s -- --me --perform-user-install\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "su - steam -c \"arkmanager install --verbose --me\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "su - steam -c \"arkmanager installmod 893904615,710450473,821530042,600015460,719928795,699984901,733089781,895711211,497432858,764755314,731604991\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/mone/steam/ARK"
        },
        {
          "Name": "user",
          "User": "steam"
        },
        {
          "CmdLine": [
            "arkmanager run"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Name": "stopsignal",
          "Signal": "SIGINT"
        }
      ]
    }
  ]
}