{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "codecloud/docker-centos-apache-php7",
      "SourceCode": "FROM codecloud/docker-centos-apache-php7",
      "Platform": "",
      "From": {
        "Image": "codecloud/docker-centos-apache-php7"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-php-ext-*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-php-source",
            "/usr/local/bin/docker-php-source"
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/usr/local/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \t\tyum makecache fast; \tyum install -y \t\tlibjpeg-turbo.x86_64         libjpeg-turbo-utils.x86_64 \t\tlibpng-devel.x86_64         php70-php-pecl-memcache.x86_64 \t\toptipng.x86_64 \t\tjpegoptim.x86_64 \t\tImageMagick \t\tImageMagick-devel \t\tphp70-php-pecl-imagick.x86_64 \t\tphp70-php-pecl-xdebug.x86_64 \t; \tyum clean all; \t\techo \"/usr/local/bin/docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr\"; \techo \"/usr/local/bin/docker-php-ext-install gd mysqli opcache\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 groupadd -g 82 www-data \t\u0026\u0026 adduser -u 82 -g www-data www-data \t\u0026\u0026 sed -i \"s/AllowOverride None/AllowOverride All/g\" /etc/httpd/conf/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /etc/php.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \techo 'xdebug.remote_enable=on'; \techo 'xdebug.remote_autostart=on'; \techo 'xdebug.remote_connect_back=off'; \techo 'xdebug.remote_handler=dbgp'; \techo 'xdebug.profiler_enable=0'; \techo 'xdebug.profiler_output_dir=\"/var/www/html\"'; \techo 'xdebug.remote_port=9000'; \t} \u003e\u003e /etc/php.d/15-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_VERSION",
              "Value": "4.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_SHA1",
              "Value": "3738189a1f37a03fb9cb087160b457d7a641ccb4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \tcurl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar; \tchown www-data:www-data wp-cli.phar; \tchmod 4755 wp-cli.phar; \tmv wp-cli.phar /usr/local/bin/wp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex; \tcurl -o wordpress.tar.gz -fSL \"https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz\"; \techo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c -; \ttar -xzf wordpress.tar.gz -C /usr/src/; \trm wordpress.tar.gz; \tchown -R www-data:www-data /usr/src/wordpress"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "set -ex; \tchmod +x /usr/local/bin/docker-entrypoint.sh;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/sbin/httpd",
            "-D",
            "FOREGROUND"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}