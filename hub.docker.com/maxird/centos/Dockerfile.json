{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "maxird"
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "/bin/tini",
            "-g",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "export JQ_VERSION=1.6 \u0026\u0026     export TINI_VERSION=0.18.0 \u0026\u0026     export HAPROXY_VERSION=1.8.22 \u0026\u0026     export GOMPLATE_VERSION=3.5.0 \u0026\u0026     date --iso-8601 \u003e /etc/image-date \u0026\u0026     echo -e \"\\nclean_requirements_on_remove=1\" \u003e\u003e /etc/yum.conf \u0026\u0026     sed -i 's/.*installonly_limit=.*/installonly_limit=2/g' /etc/yum.conf \u0026\u0026     yum -y upgrade \u0026\u0026     yum -y install epel-release \u0026\u0026     yum -y install centos-release-scl-rh \u0026\u0026     (       if [ \"7\" == \"7\" ]; then         yum install -y initscripts \u0026\u0026         (           cd /lib/systemd/system/sysinit.target.wants/;           for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i;           done         );         rm -f /lib/systemd/system/multi-user.target.wants/*;         rm -f /etc/systemd/system/*.wants/*;         rm -f /lib/systemd/system/local-fs.target.wants/*;         rm -f /lib/systemd/system/sockets.target.wants/*udev*;         rm -f /lib/systemd/system/sockets.target.wants/*initctl*;         rm -f /lib/systemd/system/basic.target.wants/*;         rm -f /lib/systemd/system/anaconda.target.wants/*;       fi;     ) \u0026\u0026     yum -y install             yum-utils             crontabs             curl wget telnet openssh-server openssh-clients sshpass bind-utils nc lsof             tar xz bzip bzip2 zip unzip             which             scl-utils             haproxy openssl rsyslog             sudo strace net-tools iproute dnsmasq nc             selinux-policy policycoreutils policycoreutils-python             libselinux-python libsemanage-python             python git \u0026\u0026     yum -y install             python-pip             gcc gcc-c++ ar make             python-devel             pcre-static             pcre-devel             openssl-devel             libffi-devel             dstat             htop \u0026\u0026     yum install -y rh-git29 \u0026\u0026     echo -e '#!/bin/bash\\nsource scl_source enable rh-git29\\n' \u003e /etc/profile.d/rh-git29.sh \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install --upgrade setuptools \u0026\u0026     pip install --upgrade cffi \u0026\u0026     pip install --upgrade cryptography pyyaml jinja2 httplib2 six paramiko pycrypto \u0026\u0026     pip install --upgrade docker-py \u0026\u0026     pip install --upgrade ply \u0026\u0026     pip install --upgrade pyhcl \u0026\u0026     pip install --upgrade python-consul \u0026\u0026     pip install --upgrade ansible \u0026\u0026     pip install --upgrade ansible-lint \u0026\u0026     pip install --upgrade yamllint \u0026\u0026     mkdir -p /etc/ansible/hosts \u0026\u0026     echo 'localhost ansible_connection=local' \u003e /etc/ansible/hosts/inventory \u0026\u0026     mkdir -p /build \u0026\u0026     cd /build \u0026\u0026     wget http://www.haproxy.org/download/1.8/src/haproxy-${HAPROXY_VERSION}.tar.gz \u0026\u0026     tar xf haproxy-${HAPROXY_VERSION}.tar.gz \u0026\u0026     cd haproxy-${HAPROXY_VERSION} \u0026\u0026     make TARGET=linux2628 \u0026\u0026     make install \u0026\u0026     ln -sf /usr/local/sbin/haproxy /usr/sbin/haproxy \u0026\u0026     cd / \u0026\u0026     rm -rf /build \u0026\u0026     yum -y clean all \u0026\u0026     rm -rf /var/cache/yum/* \u0026\u0026     rm -rf /root/.cache \u0026\u0026     rm -r /etc/haproxy/haproxy.cfg \u0026\u0026     rm -f /etc/rsyslog.d/listen.conf \u0026\u0026     echo '$ModLoad imudp' \u003e /etc/rsyslog.d/0-udp.conf \u0026\u0026     echo '$UDPServerRun 514' \u003e\u003e /etc/rsyslog.d/0-udp.conf \u0026\u0026     echo 'local2.* /var/log/haproxy.log' \u003e /etc/rsyslog.d/haproxy.conf \u0026\u0026     echo '\u0026 ~' \u003e\u003e /etc/rsyslog.d/haproxy.conf \u0026\u0026     wget -q -O /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-${JQ_VERSION}/jq-linux64 \u0026\u0026     chmod +x /usr/local/bin/jq \u0026\u0026     wget -q -O /bin/tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static-amd64 \u0026\u0026     chmod +x /bin/tini \u0026\u0026     wget -q -O /bin/gomplate https://github.com/hairyhenderson/gomplate/releases/download/v${GOMPLATE_VERSION}/gomplate_linux-amd64 \u0026\u0026     chmod +x /bin/gomplate \u0026\u0026     mkdir -p /etc/profile.d \u0026\u0026     echo 'export HISTCONTROL=ignoreboth:erasedups' \u003e /etc/profile.d/bash-history.sh \u0026\u0026     chmod 0644 /etc/profile.d/bash-history.sh \u0026\u0026     cd /tmp \u0026\u0026     echo 'downloading aws-cli' \u0026\u0026     curl -s https://s3.amazonaws.com/aws-cli/awscli-bundle.zip -o awscli-bundle.zip \u0026\u0026     unzip awscli-bundle.zip \u0026\u0026     echo 'installing aws-cli' \u0026\u0026     ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws \u0026\u0026     echo 'dumping version' \u0026\u0026     aws --version 2\u003e\u00261 \u0026\u0026     echo 'cleanup' \u0026\u0026     rm -rf awscli-bundle.zip awscli-bundle \u0026\u0026     echo 'done' \u0026\u0026     yum -y upgrade \u0026\u0026     package-cleanup --oldkernels --count=1 -y \u0026\u0026     yum -y clean all \u0026\u0026     rm -rf /var/cache/yum/* \u0026\u0026     yum -y clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PERL5LIB",
              "Value": "/opt/rh/rh-git29/root/usr/share/perl5/vendor_perl"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "X_SCLS",
              "Value": "rh-git29"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/opt/rh/httpd24/root/usr/lib64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/rh/rh-git29/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}