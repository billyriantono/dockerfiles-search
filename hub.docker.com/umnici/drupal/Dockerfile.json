{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "drupal:8-apache",
      "SourceCode": "FROM drupal:8-apache",
      "Platform": "",
      "From": {
        "Image": "drupal:8-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y gnupg \u0026\u0026   (curl -sL https://deb.nodesource.com/setup_8.x | bash -) \u0026\u0026   apt-get install -y git-core mysql-client nodejs     imagemagick libbz2-dev libc-client-dev libcurl4-openssl-dev libfreetype6-dev libgmp-dev libgpgme11-dev libjpeg62-turbo-dev libkrb5-dev libldap2-dev libldb-dev libmagickwand-dev libmcrypt-dev libmemcached-dev libpng-dev libpspell-dev libssh2-1-dev libtidy-dev libxml2-dev libxslt-dev libyaml-dev \u0026\u0026   ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so \u0026\u0026 ln -s /usr/lib/x86_64-linux-gnu/liblber.so /usr/lib/liblber.so \u0026\u0026   apt-get clean \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure imap --with-kerberos --with-imap-ssl \u0026\u0026   docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026   docker-php-ext-install bcmath calendar dba exif gd gettext gmp imap ldap mbstring pcntl pdo pdo_mysql pspell shmop soap sockets sysvmsg sysvsem sysvshm tidy wddx xmlrpc xsl \u0026\u0026   (echo '' | pecl install apcu gnupg igbinary imagick mcrypt-1.0.1 memcached oauth propro raphf ssh2-alpha xdebug yaml) \u0026\u0026   docker-php-ext-enable apcu gnupg igbinary imagick mcrypt memcached oauth propro raphf ssh2 xdebug yaml \u0026\u0026   (echo '' | pecl install pecl_http) \u0026\u0026   docker-php-ext-enable http \u0026\u0026   ln -s /usr/sbin/composer.phar /usr/sbin/composer \u0026\u0026   curl https://raw.githubusercontent.com/composer/getcomposer.org/d3e09029468023aa4e9dcd165e9b6f43df0a9999/web/installer | php -- --install-dir /usr/sbin --quiet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}