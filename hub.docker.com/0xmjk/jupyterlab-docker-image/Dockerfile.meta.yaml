MetaArgs: null
Stages:
- As: conda-latest
  BaseName: ubuntu:bionic
  Commands:
  - CmdLine:
    - apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get install -y npm
      pandoc texlive-xetex curl git &&     ln -fs /usr/share/zoneinfo/Europe/London
      /etc/localtime &&     dpkg-reconfigure --frontend noninteractive tzdata &&     apt-get
      clean
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      -o /tmp/miniconda.sh &&   bash /tmp/miniconda.sh -bfp /usr/local &&   rm -rf
      /tmp/miniconda.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - conda config --add channels conda-forge &&     conda config --set channel_priority
      strict
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - installed-versions
    - /etc/
  - CmdLine:
    - export $(cat /etc/installed-versions) &&   conda install -y python=${python}
      &&   conda clean -pt
    Name: run
    PrependShell: true
  - CmdLine:
    - export $(cat /etc/installed-versions) &&   conda install -y numpy=${numpy} &&
      conda clean -pt
    Name: run
    PrependShell: true
  - CmdLine:
    - export $(cat /etc/installed-versions) &&   conda install -y pandas=${pandas}
      && conda clean -pt
    Name: run
    PrependShell: true
  - CmdLine:
    - export $(cat /etc/installed-versions) &&   conda install -y scipy=${scipy} &&
      conda clean -pt
    Name: run
    PrependShell: true
  - CmdLine:
    - export $(cat /etc/installed-versions) &&   conda install -y matplotlib=${matplotlib}
      && conda clean -pt
    Name: run
    PrependShell: true
  - CmdLine:
    - export $(cat /etc/installed-versions) &&   conda install -c conda-forge -y altair=${altair}
      && conda clean -pt
    Name: run
    PrependShell: true
  - CmdLine:
    - export $(cat /etc/installed-versions) &&   pip install --no-cache-dir requests==${requests}
    Name: run
    PrependShell: true
  - CmdLine:
    - export $(cat /etc/installed-versions) &&   pip install --no-cache-dir --upgrade
      https://github.com/jupyterlab/jupyterlab/archive/${jupyterlab}.tar.gz &&     rm
      -rf /usr/local/share/.cache/yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter serverextension enable --py jupyterlab
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter labextension install @jupyter-widgets/jupyterlab-manager
    Name: run
    PrependShell: true
  - CmdLine:
    - export $(cat /etc/installed-versions) &&   git clone ${qgrid} /usr/src/qgrid
      &&   cd /usr/src/qgrid &&   pip install --no-cache-dir . &&   jupyter labextension
      install js/
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir git+git://github.com/0xmjk/pandas-qgrid-mixin
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m jupyterlab
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/jupyterlab
  - Name: user
    User: jupyterlab
  - Chown: jupyterlab
    Name: add
    SourcesAndDest:
    - '*.py'
    - /home/jupyterlab/.jupyter/
  - Chown: jupyterlab
    Name: add
    SourcesAndDest:
    - README.ipynb
    - /home/jupyterlab/
  - CmdLine:
    - mkdir /home/jupyterlab/persisted &&     mkdir -p /home/jupyterlab/.local/lib/python3.6/site-packages
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/jupyterlab/persisted
  - Env:
    - Key: PYTHONSTARTUP
      Value: /home/jupyterlab/.jupyter/startup.py
    Name: env
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - jupyter lab
    Name: entrypoint
    PrependShell: true
  From:
    Image: ubuntu:bionic
  Name: conda-latest
  Platform: ""
  SourceCode: FROM ubuntu:bionic AS conda-latest
