MetaArgs:
- DefaultValue: "16.04"
  Key: fromTag
  ProvidedValue: null
  Value: "16.04"
- DefaultValue: ubuntu
  Key: imageRepo
  ProvidedValue: null
  Value: ubuntu
Stages:
- As: installer-env
  BaseName: ${imageRepo}:${fromTag}
  Commands:
  - Key: PS_VERSION
    Name: arg
    Value: 6.2.0
  - Key: PS_PACKAGE
    Name: arg
    Value: powershell_${PS_VERSION}-1.ubuntu.16.04_amd64.deb
  - Key: PS_PACKAGE_URL
    Name: arg
    Value: https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}
  - CmdLine:
    - echo ${PS_PACKAGE_URL}
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ${PS_PACKAGE_URL}
    - /tmp/powershell.deb
  - Env:
    - Key: DOTNET_SYSTEM_GLOBALIZATION_INVARIANT
      Value: "false"
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: PSModuleAnalysisCachePath
      Value: /var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache
    Name: env
  - CmdLine:
    - "apt-get update     && apt install -y /tmp/powershell.deb     && apt-get install
      -y         less         locales         ca-certificates         gss-ntlmssp
      \t\tgit     && apt-get dist-upgrade -y     && apt-get clean     && rm -rf /var/lib/apt/lists/*
      \    && locale-gen $LANG && update-locale     && rm /tmp/powershell.deb     &&
      pwsh         -NoLogo         -NoProfile         -Command \"           \\$ErrorActionPreference
      = 'Stop' ;           \\$ProgressPreference = 'SilentlyContinue' ;           while(!(Test-Path
      -Path \\$env:PSModuleAnalysisCachePath)) {              Write-Host \"'Waiting
      for $env:PSModuleAnalysisCachePath'\" ;             Start-Sleep -Seconds 6 ;
      \          }\""
    Name: run
    PrependShell: true
  - Key: VCS_REF
    Name: arg
    Value: '"none"'
  - Key: IMAGE_NAME
    Name: arg
    Value: mcr.microsoft.com/powershell:ubuntu16.04
  - Labels:
    - Key: maintainer
      Value: '"PowerShell Team <powershellteam@hotmail.com>"'
    - Key: readme.md
      Value: '"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md"'
    - Key: description
      Value: '"This Dockerfile will install the latest release of PowerShell."'
    - Key: org.label-schema.usage
      Value: '"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built"'
    - Key: org.label-schema.url
      Value: '"https://github.com/PowerShell/PowerShell/blob/master/docker/README.md"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/PowerShell/PowerShell-Docker"'
    - Key: org.label-schema.name
      Value: '"powershell"'
    - Key: org.label-schema.vendor
      Value: '"PowerShell"'
    - Key: org.label-schema.version
      Value: ${PS_VERSION}
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.vcs-ref
      Value: ${VCS_REF}
    - Key: org.label-schema.docker.cmd
      Value: '"docker run ${IMAGE_NAME} pwsh -c ''$psversiontable''"'
    - Key: org.label-schema.docker.cmd.devel
      Value: '"docker run ${IMAGE_NAME}"'
    - Key: org.label-schema.docker.cmd.test
      Value: '"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester"'
    - Key: org.label-schema.docker.cmd.help
      Value: '"docker run ${IMAGE_NAME} pwsh -c Get-Help"'
    Name: label
  - CmdLine:
    - pwsh
    Name: cmd
    PrependShell: false
  From:
    Image: ${imageRepo}:${fromTag}
  Name: installer-env
  Platform: ""
  SourceCode: FROM ${imageRepo}:${fromTag} AS installer-env
