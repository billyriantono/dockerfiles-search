MetaArgs: null
Stages:
- As: build
  BaseName: ruby:2.6-alpine3.10
  Commands:
  - Key: RAILS_ENV
    Name: arg
    Value: production
  - Env:
    - Key: RAILS_ENV
      Value: $RAILS_ENV
    Name: env
  - CmdLine:
    - apk add --no-cache libxml2-dev libxslt-dev build-base postgresql-dev yarn tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/garrison
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/garrison
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile
    - Gemfile.lock
    - /usr/src/garrison/
  - CmdLine:
    - set -ex;   if [ "$RAILS_ENV" = "production" ]; then     bundle install --jobs
      "$(getconf _NPROCESSORS_ONLN)" --retry 5 --without test development;   elif
      [ "$RAILS_ENV" = "development" ]; then     bundle install --jobs "$(getconf
      _NPROCESSORS_ONLN)" --retry 5;   fi;
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /usr/local/bundle/cache/*.gem
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - yarn.lock
    - /usr/src/garrison/
  - CmdLine:
    - set -ex;   if [ "$RAILS_ENV" = "production" ]; then     yarn install --frozen-lockfile
      --production && yarn cache clean;   elif [ "$RAILS_ENV" = "development" ]; then     yarn
      install --frozen-lockfile && yarn cache clean;   fi;
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /usr/src/garrison
  - CmdLine:
    - SECRET_KEY_BASE=1 bundle exec rake assets:precompile
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /usr/src/garrison/app/assets
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /usr/src/garrison/node_modules
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /usr/src/garrison/tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - find /usr/local/bundle -iname '*.o' -exec rm {} \;
    Name: run
    PrependShell: true
  - CmdLine:
    - find /usr/local/bundle -iname '*.a' -exec rm {} \;
    Name: run
    PrependShell: true
  From:
    Image: ruby:2.6-alpine3.10
  Name: build
  Platform: ""
  SourceCode: FROM ruby:2.6-alpine3.10 as build
- BaseName: ruby:2.6-alpine3.10
  Commands:
  - Key: RAILS_ENV
    Name: arg
    Value: production
  - Env:
    - Key: RAILS_ENV
      Value: $RAILS_ENV
    Name: env
  - CmdLine:
    - apk upgrade --no-cache
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache libpq tzdata
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/garrison
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/local/bundle
    - /usr/local/bundle
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/src/garrison
    - /usr/src/garrison
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - app/assets/config
    - /usr/src/garrison/app/assets/config
  - Env:
    - Key: RAILS_LOG_TO_STDOUT
      Value: "true"
    Name: env
  - Env:
    - Key: RAILS_SERVE_STATIC_FILES
      Value: "true"
    Name: env
  - CmdLine:
    - set -ex;   if [ "$RAILS_ENV" = "production" ]; then     bundle install --without
      assets;  elif [ "$RAILS_ENV" = "development" ]; then     bundle install;    apk
      add --no-cache build-base nodejs;   fi;
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - bin/entry
    Name: cmd
    PrependShell: false
  From:
    Image: ruby:2.6-alpine3.10
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2.6-alpine3.10
