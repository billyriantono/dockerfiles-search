MetaArgs: null
Stages:
- As: npm
  BaseName: node
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /tmp/
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - npm install     && npm run build
    Name: run
    PrependShell: true
  From:
    Image: node
  Name: npm
  Platform: ""
  SourceCode: FROM node as npm
- BaseName: python:3.7
  Commands:
  - Env:
    - Key: PYTHONPATH
      Value: /app/
    - Key: PYTHONFAULTHANDLER
      Value: "1"
    - Key: PYTHONUNBUFFERED
      Value: "1"
    - Key: PYTHONHASHSEED
      Value: random
    - Key: PYTHONDONTWRITEBYTECODE
      Value: "1"
    - Key: PIP_NO_CACHE_DIR
      Value: "off"
    - Key: PIP_DISABLE_PIP_VERSION_CHECK
      Value: "on"
    - Key: PIP_DEFAULT_TIMEOUT
      Value: "100"
    - Key: LANG
      Value: C.UTF-8
    - Key: PORT
      Value: "5000"
    Name: env
  - CmdLine:
    - mkdir /app &&     chown 10001:10001 /app &&     groupadd --gid 10001 app &&     useradd
      --no-create-home --uid 10001 --gid 10001 --home-dir /app app
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && apt-get update     && apt-get install locales -y     && locale-gen
      en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends         build-essential
      curl git libpq-dev         postgresql-client gettext sqlite3 libffi-dev         inotify-tools
      wget bzip2 wait-for-it &&     apt-get autoremove -y &&     apt-get clean &&     rm
      -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U pip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /app/
  - CmdLine:
    - pip install -r requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app/
  - Chown: ""
    From: npm
    Name: copy
    SourcesAndDest:
    - /tmp/node_modules
    - /app/node_modules/
  - Chown: ""
    From: npm
    Name: copy
    SourcesAndDest:
    - /tmp/jazzband/static/dist
    - /app/jazzband/static/dist/
  - CmdLine:
    - chown -R 10001:10001 /app
    Name: run
    PrependShell: true
  - Name: user
    User: "10001"
  - Name: expose
    Ports:
    - "5000"
  - CmdLine:
    - /app/docker-entrypoint.sh
    - --
    Name: entrypoint
    PrependShell: false
  From:
    Image: python:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.7
