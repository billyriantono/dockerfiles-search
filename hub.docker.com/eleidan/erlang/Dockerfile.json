{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "eleidan/base:ubuntu-16.04",
      "SourceCode": "FROM eleidan/base:ubuntu-16.04",
      "Platform": "",
      "From": {
        "Image": "eleidan/base:ubuntu-16.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Oleg Kulyk\""
            },
            {
              "Key": "description",
              "Value": "\"Erlang/OTP 22.1.6 based on Ubuntu 16.04\""
            },
            {
              "Key": "init",
              "Value": "\"docker run -it --rm --user $(id -u) -v $(pwd):/home/phantom/app eleidan/erlang:22.1.6-ubuntu-16.04 docker-init.sh\""
            },
            {
              "Key": "run",
              "Value": "\"docker run -it --rm --user $(id -u) -v $(pwd):/home/phantom/app eleidan/erlang:22.1.6-ubuntu-16.04\""
            },
            {
              "Key": "version",
              "Value": "\"2019-11-11\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "workdir",
          "Path": "$HOME/app"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-init.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-init.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "OTP_VERSION",
          "Name": "arg",
          "Value": "\"22.1.6\""
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apt-get update     \u0026\u0026 runtimeDeps='        libsctp1         libwxbase3.0-0v5         libwxgtk3.0-0v5'     \u0026\u0026 apt-get install -y --no-install-recommends $runtimeDeps     \u0026\u0026 wget https://packages.erlang-solutions.com/erlang/debian/pool/esl-erlang_${OTP_VERSION}-1~ubuntu~xenial_amd64.deb -O /tmp/erlang.deb     \u0026\u0026 dpkg -i /tmp/erlang.deb     \u0026\u0026 rm /tmp/erlang.deb     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "REBAR_VERSION",
          "Name": "arg",
          "Value": "\"2.6.4\""
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 REBAR_DOWNLOAD_URL=\"https://github.com/rebar/rebar/archive/${REBAR_VERSION}.tar.gz\"     \u0026\u0026 REBAR_DOWNLOAD_SHA256=\"577246bafa2eb2b2c3f1d0c157408650446884555bf87901508ce71d5cc0bd07\"     \u0026\u0026 mkdir -p /usr/src/rebar-src     \u0026\u0026 curl -fSL -o rebar-src.tar.gz \"$REBAR_DOWNLOAD_URL\"     \u0026\u0026 echo \"$REBAR_DOWNLOAD_SHA256 rebar-src.tar.gz\" | sha256sum -c -     \u0026\u0026 tar -xzf rebar-src.tar.gz -C /usr/src/rebar-src --strip-components=1     \u0026\u0026 rm rebar-src.tar.gz     \u0026\u0026 cd /usr/src/rebar-src     \u0026\u0026 ./bootstrap     \u0026\u0026 install -v ./rebar /usr/local/bin/     \u0026\u0026 rm -rf /usr/src/rebar-src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "REBAR3_VERSION",
          "Name": "arg",
          "Value": "\"3.12.0\""
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 REBAR3_DOWNLOAD_URL=\"https://github.com/erlang/rebar3/archive/${REBAR3_VERSION}.tar.gz\"     \u0026\u0026 REBAR3_DOWNLOAD_SHA256=\"8ac45498f03e293bc6342ec431888f9a81a4fb9e1177a69965238d127c00a79e\"     \u0026\u0026 mkdir -p /usr/src/rebar3-src     \u0026\u0026 curl -fSL -o rebar3-src.tar.gz \"$REBAR3_DOWNLOAD_URL\"     \u0026\u0026 echo \"$REBAR3_DOWNLOAD_SHA256 rebar3-src.tar.gz\" | sha256sum -c -     \u0026\u0026 tar -xzf rebar3-src.tar.gz -C /usr/src/rebar3-src --strip-components=1     \u0026\u0026 rm rebar3-src.tar.gz     \u0026\u0026 cd /usr/src/rebar3-src     \u0026\u0026 HOME=$PWD ./bootstrap     \u0026\u0026 install -v ./rebar3 /usr/local/bin/     \u0026\u0026 rm -rf /usr/src/rebar3-src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "phantom:phantom",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "recipes",
            "$HOME/recipes"
          ]
        },
        {
          "Env": [
            {
              "Key": "SERVICE_NAME",
              "Value": "\"Erlang/OTP ${OTP_VERSION} based on Ubuntu 16.04\""
            },
            {
              "Key": "USER",
              "Value": "${CONTAINER_USER}"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}