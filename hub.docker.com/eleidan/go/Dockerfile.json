{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "eleidan/buildpack-deps:jessie",
      "SourceCode": "FROM eleidan/buildpack-deps:jessie",
      "Platform": "",
      "From": {
        "Image": "eleidan/buildpack-deps:jessie"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Oleg Kulyk\""
            },
            {
              "Key": "description",
              "Value": "\"Go 1.8.3 based on Debian GNU/Linux 8 (jessie)\""
            },
            {
              "Key": "init",
              "Value": "\"docker run -it --rm -v $(pwd):/home/phantom/app eleidan/go:1.8.3-jessie docker-init.sh\""
            },
            {
              "Key": "run",
              "Value": "\"docker run -it --rm -v $(pwd):/home/phantom/app eleidan/go:1.8.3-jessie\""
            },
            {
              "Key": "version",
              "Value": "\"2017-06-20\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.8.3"
            },
            {
              "Key": "SERVICE_NAME",
              "Value": "\"go:1.8.3-jessie\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux;   \tdpkgArch=\"$(dpkg --print-architecture)\";   \tcase \"${dpkgArch##*-}\" in   \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e5fb00adfc7291e657f1f3d31c09e74890b5328e6f991a3f395ca72a8c4dc0b3' ;;   \t\ti386) goRelArch='linux-386'; goRelSha256='ff4895eb68fb1daaec41c540602e8bb4c1e8bb2f0e7017367171913fc9995ed2' ;;   \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e2ec3e7c293701b57ca1f32b37977ac9968f57b3df034f2cc2d531e80671e6c8' ;;   \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c30a3e24736ca776fc6314e5092fb8584bd3a4a2c2fa7307ae779ba2735e668' ;;   \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1862f4c3d3907e59b04a757cfda0ea7aa9ef39274af99a784f5be843c80c6772' ;;   \t\t*) goRelArch='src'; goRelSha256='33daf4c03f86120fdfdc66bddf6bfff4661c7ca11c5da473e537f4d69b470e57';   \t\t\techo \u003e\u00262; echo \u003e\u00262 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo \u003e\u00262 ;;   \tesac;   \t  \turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\";   \twget -O go.tgz \"$url\";   \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -;   \ttar -C /usr/local -xzf go.tgz;   \trm go.tgz;   \t  \tif [ \"$goRelArch\" = 'src' ]; then   \t\techo \u003e\u00262;   \t\techo \u003e\u00262 'error: UNIMPLEMENTED';   \t\techo \u003e\u00262 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)';   \t\techo \u003e\u00262;   \t\texit 1;   \tfi;   \t  \texport PATH=\"/usr/local/go/bin:$PATH\";   \tgo version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "\"$HOME/app\""
            },
            {
              "Key": "PATH",
              "Value": "\"$GOPATH/bin:/usr/local/go/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "go-wrapper",
            "docker-init.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x       /usr/local/bin/docker-init.sh      /usr/local/bin/go-wrapper"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "recipes",
            "$HOME/recipes"
          ]
        }
      ]
    }
  ]
}