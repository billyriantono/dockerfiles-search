{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker.io/alpine:latest",
      "SourceCode": "FROM docker.io/alpine:latest",
      "Platform": "",
      "From": {
        "Image": "docker.io/alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "zash11o (@zash.shibainu)",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade   \u0026\u0026  apk add unzip               wget               apache2               apache2-ssl               php7               php7-apache2               php7-session               php7-simplexml               php7-mbstring               php7-mysqli               php7-curl               php7-xml               php7-dom               php7-json               mariadb               mariadb-client   \u0026\u0026  rm -rf /var/lib/apt/lists/*   \u0026\u0026  wget -O /mutillidae.zip --no-check-certificate             https://sourceforge.net/projects/mutillidae/files/latest/download   \u0026\u0026  unzip /mutillidae.zip   \u0026\u0026  rm -f /mutillidae.zip   \u0026\u0026  mkdir -p /run/apache2   \u0026\u0026  chown -R apache:apache /mutillidae /run/apache2   \u0026\u0026  mkdir -p /run/mysqld   \u0026\u0026  chown -R mysql:mysql /run/mysqld /var/lib/mysql   \u0026\u0026  sed -i 's#AllowOverride None#AllowOverride All#' /etc/apache2/httpd.conf    \u0026\u0026  sed -i 's#ServerName www.example.com:80#\\nServerName localhost:80#' /etc/apache2/httpd.conf   \u0026\u0026  sed -i 's#^DocumentRoot \".*#DocumentRoot \"/mutillidae\"#g' /etc/apache2/httpd.conf   \u0026\u0026  sed -i 's#^DirectoryIndex index.html#DirectoryIndex index.html index.php#g' /etc/apache2/httpd.conf   \u0026\u0026  sed -i 's#/var/www/localhost/htdocs#/mutillidae#g' /etc/apache2/httpd.conf   \u0026\u0026  sed -ie '$aAllow from 172.16.0.0/12' /mutillidae/.htaccess   \u0026\u0026  touch /var/log/apache2/access.log   \u0026\u0026  chmod 644 /var/log/apache2/access.log   \u0026\u0026  mysql_install_db --user=mysql --verbose=1 --basedir=/usr --datadir=/var/lib/mysql --rpm \u003e /dev/null   \u0026\u0026  echo \"#!/bin/sh\" \u003e /start.sh   \u0026\u0026  echo \"nohup mysqld --skip-grant-tables --bind-address 0.0.0.0 --user mysql \u003e /dev/null 2\u003e\u00261 \u0026\" \u003e\u003e /start.sh   \u0026\u0026  echo \"mysql -uroot -e \\\"create database db;\\\"\" \u003e\u003e /start.sh   \u0026\u0026  echo \"httpd -DFOREGROUND\" \u003e\u003e /start.sh   \u0026\u0026  chmod u+x /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3306",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}