{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:trusty",
      "SourceCode": "FROM ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "ubuntu:trusty"
      },
      "Commands": [
        {
          "Maintainer": "Faissal bibelghach \u003cglfaissal@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/var/jenkins_home"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_OPTS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_VERSION",
              "Value": "\"2.46.2\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y software-properties-common  debconf-utils \u0026\u0026 \tadd-apt-repository ppa:webupd8team/java -y  \u0026\u0026 \tapt-get update \u0026\u0026 \techo \"oracle-java8-installer shared/accepted-oracle-license-v1-1 select true\" |  debconf-set-selections \u0026\u0026 \tapt-get install -qqy \toracle-java8-installer ttf-dejavu oracle-java8-set-default \tapt-transport-https curl python-dev python-setuptools gcc make libssl-dev git -y \u0026\u0026     easy_install pip \u0026\u0026 \twget http://mirrors.jenkins.io/war-stable/${JENKINS_VERSION}/jenkins.war \u0026\u0026 \techo 'jenkins ALL=(ALL) NOPASSWD: /usr/local/bin/docker' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D \u0026\u0026     echo \"deb https://apt.dockerproject.org/repo ubuntu-trusty main\" | tee /etc/apt/sources.list.d/docker.list \u0026\u0026     apt-get update -y \u0026\u0026     apt-get purge lxc-docker* -y \u0026\u0026     apt-get install docker-engine -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install docker-compose \u0026\u0026     pip install ansible boto boto3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "${JENKINS_HOME}"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "50000"
          ]
        },
        {
          "CmdLine": [
            "java",
            "-jar",
            "/opt/jenkins.war",
            "$JENKINS_OPTS"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}