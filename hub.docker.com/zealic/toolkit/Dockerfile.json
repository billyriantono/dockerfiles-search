{
  "MetaArgs": [
    {
      "Key": "SOURCE_IMAGE",
      "DefaultValue": "alpine:3.9",
      "ProvidedValue": null,
      "Value": "alpine:3.9"
    }
  ],
  "Stages": [
    {
      "Name": "source-busybox",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-busybox",
      "Platform": "",
      "As": "source-busybox",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "BUSYBOX_VER",
              "Value": "1.30.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUSYBOX_URL",
              "Value": "https://busybox.net/downloads/binaries/${BUSYBOX_VER}-i686/busybox"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO /usr/local/bin/busybox $BUSYBOX_URL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/busybox"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-curl",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-curl",
      "Platform": "",
      "As": "source-curl",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CURL_VER",
              "Value": "7.30.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CURL_URL",
              "Value": "https://www.magicermine.com/demos/curl/curl/curl-${CURL_VER}.ermine.tar.bz2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO- $CURL_URL | tar -C /tmp -xvjf -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /tmp/curl-${CURL_VER}.ermine/curl.ermine /usr/local/bin/curl"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-confd",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-confd",
      "Platform": "",
      "As": "source-confd",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CONFD_VER",
              "Value": "0.16.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONFD_URL",
              "Value": "https://github.com/kelseyhightower/confd/releases/download/v$CONFD_VER/confd-$CONFD_VER-linux-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO /usr/local/bin/confd $CONFD_URL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/confd"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-consul",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-consul",
      "Platform": "",
      "As": "source-consul",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CONSUL_VER",
              "Value": "1.4.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONSUL_URL",
              "Value": "https://releases.hashicorp.com/consul/${CONSUL_VER}/consul_${CONSUL_VER}_linux_amd64.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO consul.zip $CONSUL_URL \u0026\u0026 unzip -d /usr/local/bin consul.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONSULT_VER",
              "Value": "0.19.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONSULT_URL",
              "Value": "https://releases.hashicorp.com/consul-template/$CONSULT_VER/consul-template_${CONSULT_VER}_linux_amd64.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO consult.zip $CONSULT_URL \u0026\u0026 unzip -d /usr/local/bin consult.zip"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-gomplate",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-gomplate",
      "Platform": "",
      "As": "source-gomplate",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOMPLATE_VER",
              "Value": "3.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOMPLATE_URL",
              "Value": "https://github.com/hairyhenderson/gomplate/releases/download/v$GOMPLATE_VER/gomplate_linux-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO /usr/local/bin/gomplate $GOMPLATE_URL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/gomplate"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-jq",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-jq",
      "Platform": "",
      "As": "source-jq",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "JQ_VER",
              "Value": "1.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JQ_URL",
              "Value": "https://github.com/stedolan/jq/releases/download/jq-$JQ_VER/jq-linux64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO /usr/local/bin/jq $JQ_URL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/jq"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-lego",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-lego",
      "Platform": "",
      "As": "source-lego",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LEGO_VER",
              "Value": "2.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LEGO_URL",
              "Value": "https://github.com/xenolf/lego/releases/download/v$LEGO_VER/lego_v${LEGO_VER}_linux_amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO- $LEGO_URL | tar -C /tmp -xvzf -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /tmp/lego /usr/local/bin/lego"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-migrate",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-migrate",
      "Platform": "",
      "As": "source-migrate",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "MIGRATE_VER",
              "Value": "4.2.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MIGRATE_URL",
              "Value": "https://github.com/golang-migrate/migrate/releases/download/v$MIGRATE_VER/migrate.linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO- $MIGRATE_URL | tar -C /tmp -xvzf -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /tmp/migrate.linux-amd64 /usr/local/bin/migrate"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-packer",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-packer",
      "Platform": "",
      "As": "source-packer",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PACKER_VER",
              "Value": "1.3.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PACKER_URL",
              "Value": "https://releases.hashicorp.com/packer/$PACKER_VER/packer_${PACKER_VER}_linux_amd64.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO packer.zip $PACKER_URL \u0026\u0026 unzip -d /usr/local/bin packer.zip"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-terraform",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-terraform",
      "Platform": "",
      "As": "source-terraform",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TERRAFORM_VER",
              "Value": "0.11.11"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERRAFORM_URL",
              "Value": "https://releases.hashicorp.com/terraform/$TERRAFORM_VER/terraform_${TERRAFORM_VER}_linux_amd64.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO terraform.zip $TERRAFORM_URL \u0026\u0026 unzip -d /usr/local/bin terraform.zip"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-vault",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-vault",
      "Platform": "",
      "As": "source-vault",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "VAULT_VER",
              "Value": "1.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VAULT_URL",
              "Value": "https://releases.hashicorp.com/vault/$VAULT_VER/vault_${VAULT_VER}_linux_amd64.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO vault.zip $VAULT_URL \u0026\u0026 unzip -d /usr/local/bin vault.zip"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-yq",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-yq",
      "Platform": "",
      "As": "source-yq",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "YQ_VER",
              "Value": "2.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YQ_URL",
              "Value": "https://github.com/mikefarah/yq/releases/download/$YQ_VER/yq_linux_amd64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO /usr/local/bin/yq $YQ_URL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/yq"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-gosu",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-gosu",
      "Platform": "",
      "As": "source-gosu",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOSU_VER",
              "Value": "1.11"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOSU_URL",
              "Value": "https://github.com/tianon/gosu/releases/download/${GOSU_VER}/gosu-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO /usr/local/bin/gosu $GOSU_URL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/gosu"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-tini",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-tini",
      "Platform": "",
      "As": "source-tini",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TINI_VER",
              "Value": "v0.18.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_URL",
              "Value": "https://github.com/krallin/tini/releases/download/${TINI_VER}/tini"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO /usr/local/bin/tini $TINI_URL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-dumb-init",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-dumb-init",
      "Platform": "",
      "As": "source-dumb-init",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DUMB_INIT_VER",
              "Value": "1.2.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DUMB_INIT_URL",
              "Value": "https://github.com/Yelp/dumb-init/releases/download/v${DUMB_INIT_VER}/dumb-init_${DUMB_INIT_VER}_amd64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO /usr/local/bin/dumb-init $DUMB_INIT_URL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/dumb-init"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-containerpilot",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-containerpilot",
      "Platform": "",
      "As": "source-containerpilot",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CONTAINERPILOT_VER",
              "Value": "3.8.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONTAINERPILOT_URL",
              "Value": "https://github.com/joyent/containerpilot/releases/download/${CONTAINERPILOT_VER}/containerpilot-${CONTAINERPILOT_VER}.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO- $CONTAINERPILOT_URL | tar -C /tmp -xvzf -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /tmp/containerpilot /usr/local/bin/containerpilot"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "source-envoy",
      "BaseName": "envoyproxy/envoy:v1.9.0",
      "SourceCode": "FROM envoyproxy/envoy:v1.9.0 AS source-envoy",
      "Platform": "",
      "As": "source-envoy",
      "From": {
        "Image": "envoyproxy/envoy:v1.9.0"
      },
      "Commands": null
    },
    {
      "Name": "source-awless",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS source-awless",
      "Platform": "",
      "As": "source-awless",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "AWLESS_VER",
              "Value": "0.1.11"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWLESS_URL",
              "Value": "https://github.com/wallix/awless/releases/download/v${AWLESS_VER}/awless-linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO- $AWLESS_URL | tar -C /tmp -xvzf -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /tmp/awless /usr/local/bin/awless"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "sources",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE AS sources",
      "Platform": "",
      "As": "sources",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "source-busybox",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-curl",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-confd",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-consul",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-gomplate",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-jq",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-lego",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-migrate",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-packer",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-terraform",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-vault",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-yq",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-gosu",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-tini",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-dumb-init",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-containerpilot",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-envoy",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "source-awless",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "$SOURCE_IMAGE",
      "SourceCode": "FROM $SOURCE_IMAGE",
      "Platform": "",
      "From": {
        "Image": "$SOURCE_IMAGE"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache bash make curl git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "sources",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/*",
            "/usr/local/bin/"
          ]
        }
      ]
    }
  ]
}