{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.3",
      "SourceCode": "FROM alpine:3.3",
      "Platform": "",
      "From": {
        "Image": "alpine:3.3"
      },
      "Commands": [
        {
          "Maintainer": "zealic \u003czealic@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "export ALPINE_VERSION=3.3 \u0026\u0026 export ALPINE_MIRROR_HOST=mirrors.ustc.edu.cn   \u0026\u0026 echo \"https://$ALPINE_MIRROR_HOST/alpine/v$ALPINE_VERSION/main/\" \u003e /etc/apk/repositories   \u0026\u0026 echo \"https://$ALPINE_MIRROR_HOST/alpine/v$ALPINE_VERSION/community/\" \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export SS_VER=2.4.6     \u0026\u0026 export SS_URL=https://github.com/shadowsocks/shadowsocks-libev/archive/v$SS_VER.tar.gz     \u0026\u0026 export SS_DIR=shadowsocks-libev-$SS_VER     \u0026\u0026 export SS_DEP=\"autoconf build-base curl libtool linux-headers openssl-dev\"     \u0026\u0026 export DEPS=\"bash\"     \u0026\u0026 set -ex     \u0026\u0026 apk add --update $DEPS $SS_DEP     \u0026\u0026 curl -sSL $SS_URL | tar xz     \u0026\u0026 cd $SS_DIR         \u0026\u0026 ./configure         \u0026\u0026 make install         \u0026\u0026 cd ..         \u0026\u0026 rm -rf $SS_DIR     \u0026\u0026 apk del --purge $SS_DEP     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./run-ss",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/run-ss"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}