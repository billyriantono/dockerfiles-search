{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Australia/Adelaide"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_AU.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_AU.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install locales \u0026\u0026 locale-gen en_AU.UTF-8 \u0026\u0026 apt-get -y install apt-transport-https ca-certificates wget \u0026\u0026 apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D \u0026\u0026 echo \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" \u003e /etc/apt/sources.list.d/docker.list \u0026\u0026 echo 'deb https://dl.yarnpkg.com/debian/ stable main' \u003e /etc/apt/sources.list.d/yarn.list \u0026\u0026 wget -q --show-progress -O - https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026 wget -q --show-progress -O - https://deb.nodesource.com/setup_6.x | bash - \u0026\u0026 apt-get update \u0026\u0026 apt-get -y dist-upgrade \u0026\u0026 apt-get -y install docker-engine \u0026\u0026 apt-get -y install php7.0 php7.0-cli php7.0-common php-memcached php-xdebug php7.0-bcmath php7.0-curl php7.0-gd php7.0-ldap php7.0-mbstring php7.0-mysql php7.0-opcache php7.0-xml php7.0-zip libedit-dev tig vim curl ssh git-flow silversearcher-ag mysql-client netcat-openbsd pv ruby-dev rubygems-integration nodejs yarn build-essential sudo zip ssmtp python \u0026\u0026 apt-get -y autoremove \u0026\u0026 apt-get autoclean \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q --show-progress -O /usr/local/bin/robo https://github.com/consolidation/Robo/releases/download/1.2.2/robo.phar \u0026\u0026 chmod +x /usr/local/bin/robo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q --show-progress -O /usr/local/bin/drush https://github.com/drush-ops/drush/releases/download/8.1.16/drush.phar \u0026\u0026 chmod +x /usr/local/bin/drush"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q --show-progress -O /usr/local/bin/drupal https://drupalconsole.com/installer \u0026\u0026 chmod +x /usr/local/bin/drupal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q --show-progress -q https://getcomposer.org/installer -O - | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"sendmail_path = /usr/sbin/ssmtp -t\" \u003e /etc/php/7.0/mods-available/sendmail.ini \u0026\u0026 echo \"mailhub=mail:25\\nUseTLS=NO\\nFromLineOverride=YES\" \u003e /etc/ssmtp/ssmtp.conf \u0026\u0026 phpenmod -v ALL -s ALL sendmail"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/sshd \u0026\u0026 chmod -775 /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/bash_aliases",
            "/root/.bash_aliases"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/gitconfig",
            "/root/.gitconfig"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/profile",
            "/root/.profile"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/xdebug_setup.sh",
            "/usr/local/bin/xdebug_setup.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/entry.sh",
            "/entry.sh"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /code"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/bash_aliases",
            "/code/.bash_aliases"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/gitconfig",
            "/code/.gitconfig"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/profile",
            "/code/.profile"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/code"
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd",
            "-D"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}