MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: ': Vishnu Balakrishnan "vishnu@mpifr-bonn.mpg.de"'
    Name: maintainer
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - adduser --disabled-password --gecos 'unprivileged user' psr &&     echo "psr:psr"
      | chpasswd &&     mkdir -p /home/psr/.ssh &&     chown -R psr:psr /home/psr/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://us.archive.ubuntu.com/ubuntu trusty main multiverse' >> /etc/apt/sources.list
      &&     mkdir /var/run/sshd &&     apt-get -y check &&     apt-get -y update
      &&     apt-get install -y apt-utils apt-transport-https software-properties-common
      python-software-properties &&     apt-get -y update --fix-missing &&     apt-get
      -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get --no-install-recommends -y install     build-essential     autoconf     autotools-dev     automake     pkg-config     csh     cmake     gcc     gfortran     wget     git     expect     cvs     libcfitsio-dev     pgplot5     swig2.0     python     python-dev     python-pip     python-tk     libfftw3-3     libfftw3-bin     libfftw3-dev     libfftw3-single3     libxml2     libxml2-dev     libx11-dev     libpng12-dev     libpng3     libpnglite-dev     libglib2.0-0     libglib2.0-dev     openssh-server     xorg     openbox     libhdf5-10     libhdf5-cpp-11     libhdf5-dev     libhdf5-serial-dev     libltdl-dev     gsl-bin     libgsl-dev     libgsl2     openssh-server     docker.io     vim     emacs     gedit     bc     sudo     curl     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y clean
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/bin
  - CmdLine:
    - rm pip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pip
    - /usr/bin/pip
  - CmdLine:
    - pip install pip -U &&     pip install setuptools -U &&     pip install numpy
      -U &&     pip install scipy==0.19.0 -U &&     pip install matplotlib -U &&     easy_install
      scikit-learn==0.12.1 &&     easy_install theano==0.7 &&     pip install bson
      &&     pip install pyKafka &&     pip install ipython &&     pip install scikit-image
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y &&     apt-get --no-install-recommends -y install     autogen     libtool     libltdl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y default-jdk &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install tcsh
    Name: run
    PrependShell: true
  - Name: user
    User: psr
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Env:
    - Key: PGPLOT_DIR
      Value: /usr/lib/pgplot5
    Name: env
  - Env:
    - Key: PGPLOT_FONT
      Value: /usr/lib/pgplot5/grfont.dat
    Name: env
  - Env:
    - Key: PGPLOT_INCLUDES
      Value: /usr/include
    Name: env
  - Env:
    - Key: PGPLOT_BACKGROUND
      Value: white
    Name: env
  - Env:
    - Key: PGPLOT_FOREGROUND
      Value: black
    Name: env
  - Env:
    - Key: PGPLOT_DEV
      Value: /xs
    Name: env
  - Env:
    - Key: HOME
      Value: /home/psr
    Name: env
  - Env:
    - Key: PSRHOME
      Value: /home/psr/software
    Name: env
  - Env:
    - Key: OSTYPE
      Value: linux
    Name: env
  - CmdLine:
    - mkdir -p /home/psr/software
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $PSRHOME
  - CmdLine:
    - wget http://www.pulsarastronomy.net/psrsoft/psrsoft.tar.gz &&     tar -xvzf
      psrsoft.tar.gz &&     rm -rf psrsoft.tar.gz &&     git clone https://bitbucket.org/psrsoft/tempo2.git
      &&     git clone git://git.code.sf.net/p/psrchive/code psrchive &&     git clone
      git://git.code.sf.net/p/tempo/tempo &&     git clone https://github.com/SixByNine/psrxml.git
      &&     git clone git://git.code.sf.net/p/dspsr/code dspsr &&     git clone https://github.com/ewanbarr/sigpyproc.git
      &&     git clone https://github.com/scottransom/presto.git &&     git clone
      https://github.com/scottransom/pyslalib.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $PSRHOME/psrsoft/config
  - CmdLine:
    - mv profile.example profile
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $PSRHOME/psrsoft
  - CmdLine:
    - /bin/echo -e "y" | ./bin/psrsoft sixproc pulsarhunter
    Name: run
    PrependShell: true
  - Env:
    - Key: PULSARHUNTER_HOME
      Value: $PSRHOME/psrsoft/usr/share/pulsarhunter
    Name: env
  - Env:
    - Key: PSRXML
      Value: $PSRHOME/psrxml
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$PSRXML/install/bin
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:$PSRXML/install/lib
    Name: env
  - Env:
    - Key: C_INCLUDE_PATH
      Value: $C_INCLUDE_PATH:$PSRXML/install/include
    Name: env
  - Name: workdir
    Path: $PSRXML
  - CmdLine:
    - autoreconf --install --warnings=none
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure --prefix=$PSRXML/install &&     make &&     make install &&     rm
      -rf .git
    Name: run
    PrependShell: true
  - Env:
    - Key: TEMPO2
      Value: $PSRHOME/tempo2/T2runtime
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$PSRHOME/tempo2/T2runtime/bin
    Name: env
  - Env:
    - Key: C_INCLUDE_PATH
      Value: $C_INCLUDE_PATH:$PSRHOME/tempo2/T2runtime/include
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:$PSRHOME/tempo2/T2runtime/lib
    Name: env
  - Name: workdir
    Path: $PSRHOME/tempo2
  - CmdLine:
    - 'sync && perl -pi -e ''s/chmod \+x/#chmod +x/'' bootstrap # Get rid of: returned
      a non-zero code: 126.'
    Name: run
    PrependShell: true
  - CmdLine:
    - ./bootstrap &&     ./configure --x-libraries=/usr/lib/x86_64-linux-gnu --enable-shared
      --enable-static --with-pic F77=gfortran &&     make -j $(nproc) &&     make
      install &&     make plugins-install &&     rm -rf .git
    Name: run
    PrependShell: true
  - Env:
    - Key: TEMPO
      Value: $PSRHOME/tempo
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$PSRHOME/tempo/bin
    Name: env
  - Name: workdir
    Path: $TEMPO
  - CmdLine:
    - ls -lrt
    Name: run
    PrependShell: true
  - CmdLine:
    - ./prepare &&     ./configure --prefix=$PSRHOME/tempo &&     make &&     make
      install &&     rm -rf .git
    Name: run
    PrependShell: true
  - Env:
    - Key: PSRCHIVE
      Value: $PSRHOME/psrchive
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$PSRCHIVE/install/bin
    Name: env
  - Env:
    - Key: C_INCLUDE_PATH
      Value: $C_INCLUDE_PATH:$PSRCHIVE/install/include
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:$PSRCHIVE/install/lib
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $PSRCHIVE/install/lib/python2.7/site-packages
    Name: env
  - Name: workdir
    Path: $PSRCHIVE
  - CmdLine:
    - ./bootstrap &&     ./configure --prefix=$PSRCHIVE/install --x-libraries=/usr/lib/x86_64-linux-gnu
      --with-psrxml-dir=$PSRXML/install --enable-shared --enable-static F77=gfortran
      LDFLAGS="-L"$PSRXML"/install/lib" LIBS="-lpsrxml -lxml2" &&     make -j $(nproc)
      &&     make &&     make install &&     rm -rf .git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - echo "Predictor::default = tempo2" >> .psrchive.cfg &&     echo "Predictor::policy
      = default" >> .psrchive.cfg
    Name: run
    PrependShell: true
  - Env:
    - Key: DSPSR
      Value: $PSRHOME/dspsr
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$DSPSR/install/bin
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:$DSPSR/install/lib
    Name: env
  - Env:
    - Key: C_INCLUDE_PATH
      Value: $C_INCLUDE_PATH:$DSPSR/install/include
    Name: env
  - Name: workdir
    Path: $DSPSR
  - CmdLine:
    - ./bootstrap &&     echo "bpsr caspsr fits sigproc" > backends.list &&     ./configure
      --prefix=$DSPSR/install --x-libraries=/usr/lib/x86_64-linux-gnu &&     make
      -j $(nproc) &&     make &&     make install
    Name: run
    PrependShell: true
  - Env:
    - Key: SIGPYPROC_HOME
      Value: $PSRHOME/sigpyproc
    Name: env
  - Name: workdir
    Path: $SIGPYPROC_HOME
  - CmdLine:
    - sudo python setup.py install
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:$SIGPYPROC_HOME/lib/c
    Name: env
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - env | awk '{print "export ",$0}' > $HOME/.profile &&     echo "source $HOME/.profile"
      >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: PYSLALIB
      Value: $PSRHOME/pyslalib
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: PYSLALIB/install
    Name: env
  - Name: workdir
    Path: $PYSLALIB
  - CmdLine:
    - sudo python setup.py install --record list.txt --prefix=$PYSLALIB/install &&     sudo
      python setup.py clean --all &&     rm -rf .git
    Name: run
    PrependShell: true
  - Env:
    - Key: PRESTO
      Value: $PSRHOME/presto
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$PRESTO/bin
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $PRESTO/lib
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $PYTHONPATH:$PRESTO/lib/python
    Name: env
  - Name: workdir
    Path: $PRESTO/src
  - CmdLine:
    - rm -rf ../.git
    Name: run
    PrependShell: true
  - CmdLine:
    - make prep &&     make
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $PRESTO/python/ppgplot_src
  - Name: workdir
    Path: $PRESTO/python
  - CmdLine:
    - make &&     echo "export PYTHONPATH=$PYTHONPATH:$PRESTO/lib/python" >> ~/.bashrc
      &&     echo "export PYTHONPATH=$PYTHONPATH:$PSRHOME/psrchive/install/lib/python2.7/site-packages"
      >> ~/.bashrc && RUN env | awk '{print "export ",$0}' >> $HOME/.profile
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - git clone https://github.com/zhuww/ubc_AI.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME/ubc_AI
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./ar2_files
    - $HOME/ubc_AI/ar2_files/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./pfd_files
    - $HOME/ubc_AI/pfd_files/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./bson_send.py
    - $HOME/ubc_AI
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./bson_receive.py
    - $HOME/ubc_AI
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ai_score.py
    - $HOME/ubc_AI
  - Name: workdir
    Path: $HOME
  - Name: user
    User: root
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
