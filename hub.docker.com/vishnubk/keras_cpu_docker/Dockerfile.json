{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Maintainer": "Vishnu Balakrishnan \u003cvishnu@mpifr-bonn.mpg.de\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -qq  \u0026\u0026 apt-get install --no-install-recommends -y     build-essential     g++     git     openssh-client     python3     python3-dev     python3-pip     python3-setuptools     python3-virtualenv     python3-wheel     pkg-config     libopenblas-base     python3-numpy     python3-scipy     python3-h5py     python3-yaml     python3-pydot  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install -U numpy==1.13.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qq  \u0026\u0026 apt-get install --no-install-recommends -y     python3-matplotlib     python3-pillow     python3-tk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install -U     numpy==1.13.3     pandas     seaborn     scikit-learn     statsmodels     scikit-image      ipython     ipykernel     jupyter     \u0026\u0026 python3 -m ipykernel.kernelspec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "TENSORFLOW_VERSION",
          "Name": "arg",
          "Value": "1.5.0"
        },
        {
          "Key": "TENSORFLOW_DEVICE",
          "Name": "arg",
          "Value": "cpu"
        },
        {
          "Key": "TENSORFLOW_APPEND",
          "Name": "arg",
          "Value": ""
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_DEVICE}/tensorflow${TENSORFLOW_APPEND}-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "KERAS_VERSION",
          "Name": "arg",
          "Value": "2.1.5"
        },
        {
          "Env": [
            {
              "Key": "KERAS_BACKEND",
              "Value": "tensorflow"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install --no-dependencies git+https://github.com/fchollet/keras.git@${KERAS_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'alias ll=\"ls --color=auto -lA\"' \u003e\u003e /root/.bashrc  \u0026\u0026 echo '\"\\e[5~\": history-search-backward' \u003e\u003e /root/.inputrc  \u0026\u0026 echo '\"\\e[6~\": history-search-forward' \u003e\u003e /root/.inputrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "jupyter notebook --version  \u0026\u0026 jupyter nbextension list 2\u003e\u00261  \u0026\u0026 python3 -c \"import numpy; print(numpy.__version__)\"  \u0026\u0026 python3 -c \"import tensorflow; print(tensorflow.__version__)\"  \u0026\u0026 MPLBACKEND=Agg python3 -c \"import matplotlib.pyplot\"  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 dpkg-query -l \u003e /dpkg-query-l.txt  \u0026\u0026 pip3 freeze \u003e /pip3-freeze.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "IP",
              "Value": "0.0.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PASSWD",
              "Value": "'sha1:98b767162d34:8da1bc3c75a0f29145769edc977375a373407824'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TOKEN",
              "Value": "'keras'"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/srv/"
        },
        {
          "CmdLine": [
            "/bin/bash -c 'jupyter notebook     --NotebookApp.open_browser=False     --NotebookApp.allow_root=True     --NotebookApp.ip=\"$IP\"     ${PASSWD+--NotebookApp.password=\\\"$PASSWD\\\"}     ${TOKEN+--NotebookApp.token=\\\"$TOKEN\\\"}     --NotebookApp.allow_password_change=False     --JupyterWebsocketPersonality.list_kernels=True     \"$@\"'"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}