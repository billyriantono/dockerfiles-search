{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3-slim",
      "SourceCode": "FROM python:3-slim",
      "Platform": "",
      "From": {
        "Image": "python:3-slim"
      },
      "Commands": [
        {
          "Maintainer": "Maik Hummel \u003cm@ikhummel.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TAIGA_VERSION",
              "Value": "1.10.0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "circus.ini",
            "conf.env",
            "start",
            "./"
          ]
        },
        {
          "CmdLine": [
            "buildDeps='build-essential binutils-doc autoconf flex bison libjpeg-dev libfreetype6-dev zlib1g-dev libgdbm-dev libncurses5-dev automake libtool libffi-dev curl git libpq-dev';     set -x \u0026\u0026     apt-get -qq update \u0026\u0026     apt-get -qq install -y $buildDeps \u0026\u0026     apt-get -qq install -y netcat gettext moreutils libpq5 libxslt1-dev libxml2-dev libjpeg62 libzmq3-dev --no-install-recommends \u0026\u0026     apt-mark manual libxslt1-dev \u0026\u0026     pip install circus==0.13 \u0026\u0026     useradd -d `pwd` taiga \u0026\u0026     mkdir -p media static logs taiga-back taiga \u0026\u0026     chmod a+x conf.env start \u0026\u0026     curl -sL \"https://api.github.com/repos/taigaio/taiga-back/tarball/${TAIGA_VERSION}\" | tar xz -C taiga-back --strip-components=1 \u0026\u0026     cd taiga-back \u0026\u0026     pip install -r requirements.txt \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     apt-get purge -y $buildDeps \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dockerenv.py",
            "taiga-back/settings/dockerenv.py"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/media",
            "/opt/static",
            "/opt/logs"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "CmdLine": [
            "./start"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}