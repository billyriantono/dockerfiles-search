MetaArgs: null
Stages:
- BaseName: phusion/baseimage:0.9.19
  Commands:
  - Maintainer: Derek Straka <derek@asterius.io>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - /sbin/my_init
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - mkdir -p /var/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/build
  - CmdLine:
    - dpkg --add-architecture i386
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get --quiet --yes update && \tapt-get --quiet --yes install gawk wget git-core
      diffstat unzip \t\ttexinfo gcc-multilib build-essential chrpath socat libsdl1.2-dev
      \t\txterm python sudo curl libssl-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get --quiet --yes install tmux libncurses5-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get --quiet --yes install strace ltrace
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get --quiet --yes install g++-multilib gcc-multilib lib32z1-dev         liblzo2-dev:i386
      libusb-1.0-0-dev:i386 uuid-dev:i386
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get --quiet --yes install libsdl1.2-dev chrpath
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "dash dash/sh boolean false" | debconf-set-selections && dpkg-reconfigure
      dash
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get clean && \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/my_init.d
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - create-user.sh
    - /etc/my_init.d/create-user.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bitbake.sh
    - /usr/local/bin/bitbake
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bitbake.sh
    - /usr/local/bin/bitbake-diffsigs
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bitbake.sh
    - /usr/local/bin/bitbake-dumpsig
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bitbake.sh
    - /usr/local/bin/bitbake-layers
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bitbake.sh
    - /usr/local/bin/bitbake-prserv
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bitbake.sh
    - /usr/local/bin/bitbake-selftest
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bitbake.sh
    - /usr/local/bin/bitbake-worker
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bitbake.sh
    - /usr/local/bin/bitdoc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bitbake.sh
    - /usr/local/bin/image-writer
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bitbake.sh
    - /usr/local/bin/toaster
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bitbake.sh
    - /usr/local/bin/toaster-eventreplay
  - Env:
    - Key: HOME
      Value: /var/build
    Name: env
  From:
    Image: phusion/baseimage:0.9.19
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:0.9.19
- BaseName: alpine:3.4
  Commands:
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - '{         echo ''#!/bin/sh'';         echo ''set -e'';         echo;         echo
      ''dirname "$(dirname "$(readlink -f "$(which javac || which java)")")"'';     }
      > /usr/local/bin/docker-java     && chmod +x /usr/local/bin/docker-java'
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$JAVA_HOME/bin
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u111
    Name: env
  - Env:
    - Key: JAVA_ALPINE_VERSION
      Value: 8.111.14-r0
    Name: env
  - CmdLine:
    - set -x     && apk add --no-cache         openjdk8="$JAVA_ALPINE_VERSION"         libsodium         bash     &&
      [ "$JAVA_HOME" = "$(docker-java)" ]     && ln -s /usr/lib/libsodium.so.18 /usr/lib/libsodium.so
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
