{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"gidat \u003cgidat@ing.unrc.edu.ar\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "nginx-1.16.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_RTMP_MODULE_VERSION",
              "Value": "1.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FFMPEG_VERSION",
              "Value": "4.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade \u0026\u0026 apk --no-cache add build-base libressl-dev pcre-dev zlib-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/build/nginx \u0026\u0026     cd /tmp/build/nginx \u0026\u0026     wget -O ${NGINX_VERSION}.tar.gz https://nginx.org/download/${NGINX_VERSION}.tar.gz \u0026\u0026     tar -zxf ${NGINX_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/build/nginx-rtmp-module \u0026\u0026     cd /tmp/build/nginx-rtmp-module \u0026\u0026     wget -O nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION}.tar.gz https://github.com/arut/nginx-rtmp-module/archive/v${NGINX_RTMP_MODULE_VERSION}.tar.gz \u0026\u0026     tar -zxf nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION}.tar.gz \u0026\u0026     cd nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/build/nginx/${NGINX_VERSION} \u0026\u0026     ./configure         --sbin-path=/usr/local/sbin/nginx         --conf-path=/etc/nginx/nginx.conf         --error-log-path=/var/log/nginx/error.log         --pid-path=/var/run/nginx/nginx.pid         --lock-path=/var/lock/nginx/nginx.lock         --http-log-path=/var/log/nginx/access.log         --http-client-body-temp-path=/tmp/nginx-client-body         --with-http_ssl_module         --with-threads         --with-ipv6         --add-module=/tmp/build/nginx-rtmp-module/nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION} \u0026\u0026     make -j $(getconf _NPROCESSORS_ONLN) CFLAGS='-O -W -Wall -Wpointer-arith -Wno-error -g' \u0026\u0026     make install \u0026\u0026     mkdir /var/lock/nginx \u0026\u0026     rm -rf /tmp/build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update   build-base   coreutils   freetype-dev   lame-dev   libressl-dev   libogg-dev   libass   libass-dev   libvpx-dev   libvorbis-dev   libwebp-dev   libtheora-dev   opus-dev   pkgconf   pkgconfig   rtmpdump-dev   wget   x264-dev   x265-dev   yasm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo http://dl-cdn.alpinelinux.org/alpine/edge/testing \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update fdk-aac-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ \u0026\u0026   wget http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz \u0026\u0026   tar zxf ffmpeg-${FFMPEG_VERSION}.tar.gz \u0026\u0026 rm ffmpeg-${FFMPEG_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ffmpeg-${FFMPEG_VERSION} \u0026\u0026   ./configure   --prefix=${PREFIX}   --enable-version3   --enable-gpl   --enable-nonfree   --enable-small   --enable-libmp3lame   --enable-libx264   --enable-libx265   --enable-libvpx   --enable-libtheora   --enable-libvorbis   --enable-libopus   --enable-libfdk-aac   --enable-libass   --enable-libwebp   --enable-librtmp   --enable-postproc   --enable-avresample   --enable-libfreetype   --enable-openssl   --disable-debug   --disable-doc   --disable-ffplay   --extra-libs=\"-lpthread -lm\" \u0026\u0026   make -j $(getconf _NPROCESSORS_ONLN) \u0026\u0026 make install \u0026\u0026 make distclean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/cache/* /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026     ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "1935"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}