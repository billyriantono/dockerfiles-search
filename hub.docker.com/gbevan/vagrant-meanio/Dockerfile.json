{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Graham Bevan \"graham.bevan@ntlworld.com\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fix-bower.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start-image.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "apt-get -yq update \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     apt-add-repository ppa:git-core/ppa -y \u0026\u0026     apt-get -yq update \u0026\u0026     apt-get dist-upgrade -yq \u0026\u0026     apt-get install -yqq wget aptitude htop vim vim-puppet git traceroute dnsutils       curl ssh sudo psmisc gcc make build-essential libfreetype6 libfontconfig       augeas-tools tree tcpdump \u0026\u0026     mkdir /var/run/sshd \u0026\u0026     sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config \u0026\u0026     sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config \u0026\u0026     useradd --create-home -s /bin/bash vagrant \u0026\u0026     mkdir -p /home/vagrant/.ssh \u0026\u0026     echo \"ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key\" \u003e /home/vagrant/.ssh/authorized_keys \u0026\u0026     chown -R vagrant: /home/vagrant/.ssh \u0026\u0026     echo -n 'vagrant:vagrant' | chpasswd \u0026\u0026     su - vagrant -c \"touch /home/vagrant/.hushlogin\" \u0026\u0026     mkdir -p /etc/sudoers.d \u0026\u0026     echo \"vagrant ALL=(ALL) NOPASSWD: ALL\" \u003e /etc/sudoers.d/vagrant \u0026\u0026     chmod 0440 /etc/sudoers.d/vagrant \u0026\u0026     echo \"set modeline\" \u003e /etc/vim/vimrc.local \u0026\u0026     echo \"export TERM=vt100\\nexport LANG=C\\nexport LC_ALL=C\" \u003e /etc/profile.d/dockenv.sh \u0026\u0026     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927 \u0026\u0026     apt-get clean \u0026\u0026     echo \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list \u0026\u0026     apt-get -yq update \u0026\u0026     apt-get install -yqq mongodb-org \u0026\u0026     curl -sL https://deb.nodesource.com/setup_4.x | sudo bash - \u0026\u0026     apt-get -yq update \u0026\u0026     apt-get install -yqq nodejs \u0026\u0026     apt-get clean \u0026\u0026     npm install -g node-gyp \u0026\u0026     npm install -g grunt-cli \u0026\u0026     npm install -g gulp \u0026\u0026     npm install -g karma-cli \u0026\u0026     npm install -g mocha \u0026\u0026     npm install -g bower \u0026\u0026     npm install -g mean-cli@0.9.21 \u0026\u0026     npm cache clean \u0026\u0026     /usr/bin/mongod --config /etc/mongod.conf --fork --smallfiles \u0026\u0026     echo \"export MONGOOSE_DISABLE_STABILITY_WARNING=1\" \u003e\u003e ~/.bashrc \u0026\u0026     export MONGOOSE_DISABLE_STABILITY_WARNING=1 \u0026\u0026     su - vagrant -c'mkdir -p .npm; echo -e \"\\n\\n \\n\" | mean init --branch v0.4.2 appserver \u0026\u0026 cd appserver \u0026\u0026 sed -i \"s/\\\\(mongoose.:.*\\\\)^3\\\\.8\\\\.8\\\\(.*\\\\)/\\13.8\\2/\" package.json \u0026\u0026 npm install \u0026\u0026 /fix-bower.sh \u0026\u0026 bower --config.interactive=false install \u0026\u0026 mkdir -p packages/contrib \u0026\u0026 git clone --depth 1 https://github.com/gbevan/mean-admin.git packages/contrib/mean-admin \u0026\u0026 cd packages/contrib/mean-admin \u0026\u0026 npm install \u0026\u0026 bower install \u0026\u0026 cd ~/appserver \u0026\u0026 npm cache clean; bower cache clean' \u0026\u0026     perl -e 'local $/=undef; open(GR,\"\u003c/home/vagrant/appserver/Gruntfile.js\"); binmode GR; $F=\u003cGR\u003e; $F=~s/(mochaTest: {.\\s*options: {)/$1\\n        timeout: 20000,/ms; open(NG, \"\u003e/home/vagrant/appserver/Gruntfile.js\"); print NG $F' \u0026\u0026     su - vagrant -c'cd appserver \u0026\u0026 grunt test' \u0026\u0026     killall mongod \u0026\u0026 sleep 10 \u0026\u0026 (killall -9 mongod 2\u003e/dev/null || true) \u0026\u0026 sleep 5 \u0026\u0026     rm -rf /var/lib/mongodb/* /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/start-image.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "3000"
          ]
        }
      ]
    }
  ]
}