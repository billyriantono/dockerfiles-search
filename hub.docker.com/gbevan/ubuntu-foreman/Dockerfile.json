{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Graham Bevan \"graham.bevan@ntlworld.com\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "FOREMANVER",
              "Value": "1.15"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FOREOPTS",
              "Value": "--foreman-locations-enabled=true         --enable-foreman-compute-ec2         --enable-foreman-compute-gce         --enable-foreman-compute-ovirt         --enable-foreman-compute-vmware         --enable-foreman-compute-libvirt         --enable-foreman-compute-openstack         --enable-foreman-compute-rackspace         --enable-puppet         --puppet-listen=true         --puppet-show-diff=true         --puppet-server-envs-dir=/etc/puppet/environments         --foreman-proxy-dhcp-option-domain=''         --foreman-proxy-dns-zone=''         --puppet-srv-domain=''"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/opt/puppetlabs/bin:/sbin:/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start-image.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get -y install ca-certificates wget \u0026\u0026     wget https://apt.puppetlabs.com/puppetlabs-release-pc1-xenial.deb \u0026\u0026     dpkg -i puppetlabs-release-pc1-xenial.deb \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y wget aptitude htop vim vim-puppet git traceroute dnsutils \u0026\u0026     echo \"deb http://deb.theforeman.org/ xenial $FOREMANVER\" \u003e /etc/apt/sources.list.d/foreman.list \u0026\u0026     echo \"deb http://deb.theforeman.org/ plugins $FOREMANVER\" \u003e\u003e /etc/apt/sources.list.d/foreman.list \u0026\u0026     wget -q http://deb.theforeman.org/pubkey.gpg -O- | apt-key add - \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     apt-add-repository ppa:git-core/ppa -y \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y foreman-installer \u0026\u0026     apt-get install -y git python-pip iotop sysstat krb5-user libkrb5-dev python-dev python-jinja2 python-yaml python-paramiko python-httplib2 python-six python-crypto sshpass \u0026\u0026     apt-add-repository -y ppa:ansible/ansible \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y ansible \u0026\u0026     apt-get purge -y python-requests python-requests-whl \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get install -y libffi-dev libssl-dev locales \u0026\u0026     /usr/bin/pip install --upgrade --ignore-installed pip setuptools urllib3 \u0026\u0026     /usr/bin/pip install cryptography==2.0.3 \u0026\u0026     /usr/bin/pip install netaddr \u0026\u0026     /usr/bin/pip install 'pywinrm\u003e=0.1.1' \u0026\u0026     /usr/bin/pip install kerberos==1.2.2 \u0026\u0026     /usr/bin/pip install requests_kerberos \u0026\u0026     /usr/bin/pip install pyvmomi==6.0.0.2016.6 \u0026\u0026     echo \"set modeline\" \u003e /root/.vimrc \u0026\u0026     echo \"export TERM=vt100\" \u003e\u003e /root/.bashrc \u0026\u0026     LANG=en_US.UTF-8 locale-gen --purge en_US.UTF-8 \u0026\u0026     echo 'LANG=\"en_US.UTF-8\"\\nLANGUAGE=\"en_US:en\"\\n' \u003e /etc/default/locale \u0026\u0026     (dpkg-reconfigure --frontend=noninteractive locales || /bin/true) \u0026\u0026     rm -f /usr/share/foreman-installer/checks/hostname.rb \u0026\u0026     export FACTER_fqdn=\"foreman.example.com\" \u0026\u0026     echo \"127.1.1.2  foreman.example.com\" \u003e\u003e /etc/hosts \u0026\u0026     echo \"Running foreman installer\" \u0026\u0026     (/usr/sbin/foreman-installer $FOREOPTS || /bin/true) \u0026\u0026     sed -i -e \"s/START=no/START=yes/g\" /etc/default/foreman \u0026\u0026     chmod 700 /start-image.sh \u0026\u0026     /etc/init.d/puppetserver stop \u0026\u0026     export PATH=$PATH:/opt/puppetlabs/bin \u0026\u0026     sed -i 's?:/usr/bin:?:/usr/bin:/opt/puppetlabs/bin:?' /etc/environment \u0026\u0026     /opt/puppetlabs/bin/puppet resource service puppet ensure=stopped \u0026\u0026     /opt/puppetlabs/bin/puppet resource service apache2 ensure=stopped \u0026\u0026     export SSLDIR=`puppet config print ssldir --section master` \u0026\u0026     rm -rf $SSLDIR \u0026\u0026     touch /var/lib/foreman/.firsttime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8140"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8443"
          ]
        },
        {
          "CmdLine": [
            "/start-image.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}