{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.8.0-slim-buster",
      "SourceCode": "FROM python:3.8.0-slim-buster",
      "Platform": "",
      "From": {
        "Image": "python:3.8.0-slim-buster"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "COMMIT_HASH",
              "Value": "\"48930240573d87d1b06d7504cff41916ce40d28d\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIBRARY_PATH",
              "Value": "/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIBRARY_INCLUDE_PATH",
              "Value": "/usr/local/include"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "initc3/pbc:0.5.14-slim-buster",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/include/pbc",
            "/usr/local/include/pbc"
          ]
        },
        {
          "Chown": "",
          "From": "initc3/pbc:0.5.14-slim-buster",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/lib/libpbc.so.1.0.0",
            "/usr/local/lib/libpbc.so.1.0.0"
          ]
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 cd /usr/local/lib     \u0026\u0026 ln -s libpbc.so.1.0.0 libpbc.so     \u0026\u0026 ln -s libpbc.so.1.0.0 libpbc.so.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHON_LIBRARY_PATH",
              "Value": "/opt/venv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PYTHON_LIBRARY_PATH}/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex                 \u0026\u0026 savedAptMark=\"$(apt-mark showmanual)\"         \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends                 bison                 flex                 gcc                 git                 make                 libc6-dev                 libgmp-dev                 libssl-dev                 wget                 \u0026\u0026 mkdir -p /usr/src/charm         \u0026\u0026 git clone https://github.com/JHUISI/charm.git /usr/src/charm         \u0026\u0026 cd /usr/src/charm         \u0026\u0026 git reset --hard $COMMIT_HASH         \u0026\u0026 python -m venv ${PYTHON_LIBRARY_PATH}         \u0026\u0026 ./configure.sh         \u0026\u0026 make install                 \u0026\u0026 apt-mark auto '.*' \u003e /dev/null \t    \u0026\u0026 apt-mark manual $savedAptMark \t    \u0026\u0026 find /usr/local -type f -executable -execdir ldd '{}' ';' \t\t        | awk '/=\u003e/ { print $(NF-1) }' \t\t        | sort -u \t\t        | xargs -r dpkg-query --search \t\t        | cut -d: -f1 \t\t        | sort -u \t\t        | xargs -r apt-mark manual \t    \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t    \u0026\u0026 rm -rf /var/lib/apt/lists/*         \u0026\u0026 rm -rf /usr/src/charm"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}