{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "CmdLine": [
            "cp /etc/localtime /etc/localtime.org     \u0026\u0026 ln -sf  /usr/share/zoneinfo/Asia/Tokyo /etc/localtime     \u0026\u0026 localedef -f UTF-8 -i ja_JP ja_JP.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'LANG=\"ja_JP.utf8\"' \u003e /etc/locale.conf     \u0026\u0026 source /etc/locale.conf     \u0026\u0026 localedef -f UTF-8 -i ja_JP ja_JP.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install -y epel-release     \u0026\u0026 yum update -y     \u0026\u0026 yum install -y        bash        tar        git        bzip2        bzip2-devel        g++ gcc        libevent-devel        libxml2-devel        openssl-devel        libcurl-devel        libjpeg-devel        libpng-devel        re2c        libicu-devel        gcc-c++        libmcrypt-devel        readline-devel        libtidy-devel        libxslt-devel        file        make        autoconf        patch        bison        lemon        libsql        mariadb-devel        perl        lftp        nodejs        ca-certificates        nginx        openssh-server        logrotate        multitail        perl-core        openssl        htop        wget        which        cronie        unzip        psmisc        perl-libwww-perl        perl-Crypt-SSLeay        perl-String-CRC32        gnutls        perl-DBD-MySQL        perl-DBD-Pg        perl-GD        ImageMagick        ImageMagick-perl        postfix        libffi-devel        mariadb        mariadb-devel        postgresql        postgresql-devel        httpd        httpd-devel        mod_php        mod_ssl        net-tools        sudo        zip        mod_fcgid        lsof        rpm-build        libtool        php-mbstring        php-mysql        php-gd        php-xdebug        freetype-devel        libc-client     \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/.anyenv/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/riywo/anyenv ~/.anyenv     \u0026\u0026 echo 'export PATH=\"$HOME/.anyenv/bin:$PATH\"' \u003e\u003e ~/.bashrc     \u0026\u0026 /root/.anyenv/bin/anyenv install --force-init     \u0026\u0026 echo 'eval \"$(anyenv init -)\"' \u003e\u003e ~/.bashrc     \u0026\u0026 . ~/.bashrc     \u0026\u0026 anyenv install rbenv     \u0026\u0026 anyenv install plenv     \u0026\u0026 anyenv install phpenv     \u0026\u0026 anyenv install nodenv     \u0026\u0026 . ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/\\;date\\.timezone\\ \\=/date\\.timezone\\ \\=\\ Asia\\/Tokyo/g' /etc/php.ini     \u0026\u0026 sed -i 's/\\;mbstring\\.language\\ \\=\\ Japanese/mbstring\\.language\\ \\=\\ Japanese/g' /etc/php.ini     \u0026\u0026 sed -i 's/\\;mbstring\\.internal_encoding\\ \\=\\ EUC-JP/mbstring\\.internal_encoding\\ \\=\\ UTF-8/g' /etc/php.ini     \u0026\u0026 sed -i 's/\\;mbstring\\.http_input\\ \\=\\ auto/mbstring\\.http_input\\ \\=\\ pass/g' /etc/php.ini     \u0026\u0026 sed -i 's/\\;mbstring\\.http_output\\ \\=\\ SJIS/mbstring\\.http_output\\ \\=\\ pass/g' /etc/php.ini     \u0026\u0026 sed -i 's/\\;mbstring\\.encoding_translation\\ \\=\\ Off/mbstring\\.encoding_translation\\ \\=\\ Off/g' /etc/php.ini     \u0026\u0026 sed -i 's/\\;mbstring\\.detect_order\\ \\=\\ auto/mbstring\\.detect_order\\ \\=\\ UTF-8\\,SJIS\\,EUC-JP\\,JIS\\,ASCII/g' /etc/php.ini     \u0026\u0026 sed -i 's/\\;mbstring\\.func_overload\\ \\=\\ 0/mbstring\\.func_overload\\ \\=\\ 0/g' /etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/\\#AddHandler\\ cgi\\-script\\ \\.cgi/AddHandler\\ cgi\\-script\\ \\.cgi/g' /etc/httpd/conf/httpd.conf     \u0026\u0026 sed -i 's/AddDefaultCharset\\ UTF\\-8/AddDefaultCharset\\ Off/g' /etc/httpd/conf/httpd.conf     \u0026\u0026 sed -i 's/^User apache$/User docker/' /etc/httpd/conf/httpd.conf     \u0026\u0026 sed -i 's/^Group apache$/Group docker/' /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '\u003cDirectory /var/www/html\u003e' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '  Options FollowSymLinks ExecCGI' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '  AllowOverride All' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '  DirectoryIndex index.cgi index.php index.html index.htm' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '  SetEnv PERL5LIB /perl/cpanfile-modules/lib/perl5' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '  EnableMMAP Off' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '  EnableSendfile Off' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '  # \u003c__PASSENV__\u003e' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '  # \u003c/__PASSENV__\u003e' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '  # \u003c__BANDWIDTH__\u003e' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '  # \u003c/__BANDWIDTH__\u003e' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '  # \u003c__NO_CACHE__\u003e' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '  # \u003c/__NO_CACHE__\u003e' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 echo '\u003c/Directory\u003e' \u003e\u003e /etc/httpd/conf/httpd.conf     \u0026\u0026 sed -i 's/\\#ServerName www\\.example\\.com\\:80/ServerName genie/g' /etc/httpd/conf/httpd.conf     \u0026\u0026 sed -i 's/ScriptAlias \\/cgi-bin\\/ \\\"\\/var\\/www\\/cgi-bin\\/\\\"/\\#ScriptAlias \\/cgi-bin\\/ \\\"\\/var\\/www\\/cgi-bin\\/\\\"/' /etc/httpd/conf/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/ngrok/     \u0026\u0026 cd /tmp/ngrok/     \u0026\u0026 curl -L -O https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip     \u0026\u0026 unzip ngrok-stable-linux-amd64.zip     \u0026\u0026 mv ngrok /usr/local/bin     \u0026\u0026 rm -fr /tmp/ngrok/     \u0026\u0026 cd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "suphp-0.7.2-1.src.rpm",
            "/tmp/suphp/suphp-0.7.2-1.src.rpm"
          ]
        },
        {
          "CmdLine": [
            "cd /tmp/suphp/     \u0026\u0026 rpm -ivh suphp-0.7.2-1.src.rpm     \u0026\u0026 rpmbuild -ba /root/rpmbuild/SPECS/suphp.spec     \u0026\u0026 rpm -ivh /root/rpmbuild/RPMS/x86_64/suphp-0.7.2-1.x86_64.rpm     \u0026\u0026 echo 'IncludeOptional /etc/httpd/conf/extra/httpd-suphp.conf' \u003e\u003e /etc/httpd/conf/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://toolbelt.treasuredata.com/sh/install-redhat-td-agent2.sh | sh     \u0026\u0026 /opt/td-agent/embedded/bin/fluent-gem install fluent-plugin-elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '{ \"allow_root\": true }' \u003e /root/.bowerrc     \u0026\u0026 npm install bower maildev iconv -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/\\/bin\\/systemctl reload httpd\\.service/\\/usr\\/sbin\\/httpd \\-k graceful/g' /etc/logrotate.d/httpd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 curl -LSs https://box-project.github.io/box2/installer.php | php     \u0026\u0026 mv box.phar /usr/bin/box     \u0026\u0026 chmod +x /usr/bin/box     \u0026\u0026 sed -i \"s/;phar.readonly = On/phar.readonly = Off/\" /etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "loop.sh",
            "/loop.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /*.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -g 1000 docker     \u0026\u0026 useradd -g docker -m -s /bin/bash docker     \u0026\u0026 usermod -aG apache,nginx docker     \u0026\u0026 localedef -f UTF-8 -i ja_JP ja_JP.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}