MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk-slim
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Fabio Todaro <ft@ovalmoney.com>"'
    Name: label
  - CmdLine:
    - echo 'APT::Get::Assume-Yes "true";' > /etc/apt/apt.conf.d/90oval   && echo 'DPkg::Options
      "--force-confnew";' >> /etc/apt/apt.conf.d/90oval
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update -qqy   && mkdir -p /usr/share/man/man1   && apt-get install -qqy     apt-utils     git
      xvfb jq     locales sudo openssh-client ca-certificates tar gzip parallel     net-tools
      netcat unzip zip bzip2 gnupg curl wget make
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen C.UTF-8 || true
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - 'groupadd --gid 3434 oval   && useradd --uid 3434 --gid oval --shell /bin/bash
      --create-home oval   && echo ''oval ALL=NOPASSWD: ALL'' >> /etc/sudoers.d/50-oval   &&
      echo ''Defaults    env_keep += "DEBIAN_FRONTEND"'' >> /etc/sudoers.d/env_keep'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qqy         python-dev         python-setuptools         apt-transport-https         lsb-release         gcc-multilib
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 19.2.1
    Name: env
  - Env:
    - Key: PYTHON_GET_PIP_URL
      Value: https://github.com/pypa/get-pip/raw/404c9418e33c5031b1a9ab623168b3e8a2ed8c88/get-pip.py
    Name: env
  - Env:
    - Key: PYTHON_GET_PIP_SHA256
      Value: 56bb63d3cf54e7444351256f72a60f575f6d8c7f1faacffae33167afc8e7609d
    Name: env
  - CmdLine:
    - "set -ex && \twget -O get-pip.py \"$PYTHON_GET_PIP_URL\" && \techo \"$PYTHON_GET_PIP_SHA256
      *get-pip.py\" | sha256sum --check --strict - && \tpython get-pip.py \t\t--disable-pip-version-check
      \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" && \tpip --version && \tfind
      /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests
      \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\)
      \\) \t\t\\) -exec rm -rf '{}' + && \trm -f get-pip.py"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache -U --upgrade-strategy eager crcmod
    Name: run
    PrependShell: true
  - Name: user
    User: oval
  - Env:
    - Key: HOME
      Value: /home/oval
    Name: env
  - CmdLine:
    - export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt
      $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update -qqy && sudo apt-get install -qqy google-cloud-sdk &&     gcloud
      config set core/disable_usage_reporting true &&     gcloud config set component_manager/disable_update_check
      true
    Name: run
    PrependShell: true
  - Key: sdk_version
    Name: arg
    Value: sdk-tools-linux-4333796.zip
  - Key: android_home
    Name: arg
    Value: /opt/android/sdk
  - CmdLine:
    - sudo apt-get install --yes         lib32z1 lib32stdc++6 build-essential         libcurl4-openssl-dev
      libglu1-mesa libxi-dev libxmu-dev         libglu1-mesa-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: RUBY_VERSION
      Value: 2.6.3
    Name: env
  - CmdLine:
    - set -ex     && for key in       04B2F3EA654140BCC7DA1B5754C3D9E9B9515E77     ;
      do       gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys
      "$key" ||       gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||       gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;     done &&     cd /tmp/ &&     wget -O ruby-install-0.7.0.tar.gz https://github.com/postmodern/ruby-install/archive/v0.7.0.tar.gz
      &&     wget https://raw.github.com/postmodern/ruby-install/master/pkg/ruby-install-0.7.0.tar.gz.asc
      &&     gpg --verify ruby-install-0.7.0.tar.gz.asc ruby-install-0.7.0.tar.gz
      &&     tar -xzvf ruby-install-0.7.0.tar.gz &&     cd ruby-install-0.7.0 &&     sudo
      make install &&     ruby-install --cleanup ruby ${RUBY_VERSION} &&     cd ../
      && rm -r ruby-install-0.7.0.tar.gz.asc ruby-install-0.7.0.tar.gz ruby-install-0.7.0
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${HOME}/.rubies/ruby-${RUBY_VERSION}/bin:${PATH}
    Name: env
  - CmdLine:
    - 'echo ''gem: --env-shebang --no-rdoc --no-ri'' >> ~/.gemrc && gem install bundler'
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mkdir -p ${android_home} &&     sudo chown -R oval:oval ${android_home}
      &&     curl --silent --show-error --location --fail --retry 3 --output /tmp/${sdk_version}
      https://dl.google.com/android/repository/${sdk_version} &&     unzip -q /tmp/${sdk_version}
      -d ${android_home} &&     rm /tmp/${sdk_version}
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_HOME
      Value: ${android_home}
    Name: env
  - Env:
    - Key: ADB_INSTALL_TIMEOUT
      Value: "120"
    Name: env
  - Env:
    - Key: PATH
      Value: ${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}
    Name: env
  - CmdLine:
    - mkdir ~/.android && echo '### User Sources for Android SDK Manager' > ~/.android/repositories.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | sdkmanager --licenses && sdkmanager --update
    Name: run
    PrependShell: true
  - CmdLine:
    - sdkmanager   "tools"   "platform-tools"   "extras;android;m2repository"   "extras;google;m2repository"   "extras;google;google_play_services"
    Name: run
    PrependShell: true
  - CmdLine:
    - sdkmanager   "build-tools;27.0.0"   "build-tools;27.0.1"   "build-tools;27.0.2"   "build-tools;27.0.3"   "build-tools;28.0.0"   "build-tools;28.0.1"   "build-tools;28.0.2"   "build-tools;28.0.3"   "build-tools;29.0.0"
    Name: run
    PrependShell: true
  - CmdLine:
    - sdkmanager "platforms;android-28"
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Env:
    - Key: GRADLE_HOME
      Value: /opt/gradle
    Name: env
  - Env:
    - Key: GRADLE_VERSION
      Value: 5.5.1
    Name: env
  - Key: GRADLE_DOWNLOAD_SHA256
    Name: arg
    Value: 222a03fcf2fcaf3691767ce9549f78ebd4a77e73f9e23a396899fb70b420cd00
  - CmdLine:
    - set -o errexit -o nounset     && echo "Downloading Gradle"     && wget --no-verbose
      --output-document=gradle.zip "https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip"         &&
      echo "Checking download hash"     && echo "${GRADLE_DOWNLOAD_SHA256} *gradle.zip"
      | sha256sum --check -         && echo "Installing Gradle"     && unzip gradle.zip     &&
      rm gradle.zip     && mv "gradle-${GRADLE_VERSION}" "${GRADLE_HOME}/"     &&
      ln --symbolic "${GRADLE_HOME}/bin/gradle" /usr/bin/gradle         && echo "Testing
      Gradle installation"     && gradle --version
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd --gid 1000 node   && useradd --uid 1000 --gid node --shell /bin/bash
      --create-home node
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 12.4.0
    Name: env
  - CmdLine:
    - ARCH= && dpkgArch="$(dpkg --print-architecture)"   && case "${dpkgArch##*-}"
      in     amd64) ARCH='x64';;     ppc64el) ARCH='ppc64le';;     s390x) ARCH='s390x';;     arm64)
      ARCH='arm64';;     armhf) ARCH='armv7l';;     i386) ARCH='x86';;     *) echo
      "unsupported architecture"; exit 1 ;;   esac   && set -ex   && for key in     4ED778F539E3634C779C87C6D7062848A1AB005C     B9E2F5981AA6E0CD28160D9FF13993A75599653C     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     B9AE9905FFD7803F25714661B63B535A4C206CA9     77984A986EBC2AA786BC0F66B01FBB92821C587A     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     FD3A5288F042B6850C66B31F09FE44734EB7990E     8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     A48C2BEE680E841632CD4E44F07496B3EB3C1762   ;
      do     gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;   done   && echo "Downloading Node"   && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"   &&
      curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   &&
      echo "Checking download hash"   && gpg --batch --decrypt --output SHASUMS256.txt
      SHASUMS256.txt.asc   && grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt
      | sha256sum -c -   && echo "Installing Node"   && tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz"
      -C /usr/local --strip-components=1 --no-same-owner   && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz"
      SHASUMS256.txt.asc SHASUMS256.txt   && ln -s /usr/local/bin/node /usr/local/bin/nodejs   &&
      echo "Testing Node installation"   && node --version
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_VERSION
      Value: 1.17.3
    Name: env
  - CmdLine:
    - set -ex   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg
      --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key"
      ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;   done   && echo "Downloading Yarn"   && curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   &&
      curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   &&
      echo "Checking download hash"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc
      yarn-v$YARN_VERSION.tar.gz   && echo "Installing Yarn"   && mkdir -p /opt   &&
      tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn
      /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   &&
      rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && echo "Testing
      Yarn installation"   && yarn --version
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     libssl-dev autoconf automake libtool pkg-config
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && wget -O watchman-4.9.0.tar.gz https://github.com/facebook/watchman/archive/v4.9.0.tar.gz
      &&     tar -xzvf watchman-4.9.0.tar.gz &&     cd watchman-4.9.0 &&     ./autogen.sh
      &&     ./configure --enable-lenient &&     make &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - node --version
    Name: run
    PrependShell: true
  - Name: user
    User: oval
  From:
    Image: openjdk:8-jdk-slim
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-slim
