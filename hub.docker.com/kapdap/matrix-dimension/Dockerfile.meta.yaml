MetaArgs: null
Stages:
- As: gosu
  BaseName: kapdap/alpine-gosu
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"kapdap.nz@gmail.com"'
    Name: label
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: BUILD_VERSION
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: ${BUILD_VERSION}
  - Labels:
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.name
      Value: '"kapdap/matrix-dimension"'
    - Key: org.label-schema.description
      Value: '"An open source integrations manager for matrix clients, like Riot."'
    - Key: org.label-schema.url
      Value: '"https://dimension.t2bot.io/"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/kapdap/docker-matrix-dimension"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vendor
      Value: '"kapdap"'
    - Key: org.label-schema.version
      Value: $BUILD_VERSION
    - Key: org.label-schema.docker.cmd
      Value: '"docker run -d kapdap/matrix-dimension"'
    Name: label
  From:
    Image: kapdap/alpine-gosu
  Name: gosu
  Platform: ""
  SourceCode: FROM kapdap/alpine-gosu AS gosu
- BaseName: node:8-alpine
  Commands:
  - Chown: ""
    From: gosu
    Name: copy
    SourcesAndDest:
    - /usr/bin/gosu
    - /usr/bin/gosu
  - CmdLine:
    - apk --no-cache add -t build-deps git  && apk --no-cache add ca-certificates
    Name: run
    PrependShell: true
  - Env:
    - Key: U_ID
      Value: "1000"
    - Key: G_ID
      Value: "1000"
    Name: env
  - Name: workdir
    Path: /app
  - CmdLine:
    - chown ${U_ID}:${G_ID} /app
    Name: run
    PrependShell: true
  - Name: user
    User: ${U_ID}:${G_ID}
  - Key: APP_URL
    Name: arg
    Value: https://github.com/turt2live/matrix-dimension.git
  - Key: GIT_BRANCH
    Name: arg
    Value: master
  - Key: GIT_COMMIT
    Name: arg
    Value: null
  - CmdLine:
    - git clone ${APP_URL} .  && git checkout ${GIT_BRANCH}  && git reset --hard ${GIT_COMMIT}  &&
      NODE_ENV=development npm install  && npm run-script build:web  && npm run-script
      build:app
    Name: run
    PrependShell: true
  - Name: user
    User: "0"
  - CmdLine:
    - apk --purge del build-deps  && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - base/
    - /
  - CmdLine:
    - chmod +x /docker-entrypoint.sh  && chmod +x /docker-entrypoint.d/*
    Name: run
    PrependShell: true
  - Expression: COPY docker-entrypoint.d/ /docker-entrypoint.d/
    Name: onbuild
  - Expression: RUN  chmod +x /docker-entrypoint.d/*
    Name: onbuild
  - Env:
    - Key: HOST_PORT
      Value: "8184"
    - Key: NODE_ENV
      Value: production
    Name: env
  - Name: expose
    Ports:
    - $HOST_PORT
  - Name: volume
    Volumes:
    - /app/config/
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - npm
    - run
    - start:app
    Name: cmd
    PrependShell: false
  From:
    Image: node:8-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:8-alpine
