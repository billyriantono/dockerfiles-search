{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "circleci/ruby:2.5.1",
      "SourceCode": "FROM circleci/ruby:2.5.1",
      "Platform": "",
      "From": {
        "Image": "circleci/ruby:2.5.1"
      },
      "Commands": [
        {
          "CmdLine": [
            "sudo apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y     libqt5webkit5-dev    qt5-default    postgresql-client    lsof     libasound2     libgtk-3-0     libstartup-notification0     gconf-service     libgconf-2-4     libnspr4     libxss1     fonts-liberation     libappindicator1     libnss3     xdg-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "groupadd --gid 1000 node   \u0026\u0026 useradd --uid 1000 --gid node --shell /bin/bash --create-home node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     56730D5401028683275BD23C23EFEFE93C4CFFFE     77984A986EBC2AA786BC0F66B01FBB92821C587A   ; do     gpg --keyserver pgp.mit.edu --recv-keys \"$key\" ||     gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" ||     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ;   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "8.9.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ARCH= \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture)\"   \u0026\u0026 case \"${dpkgArch##*-}\" in     amd64) ARCH='x64';;     ppc64el) ARCH='ppc64le';;     s390x) ARCH='s390x';;     arm64) ARCH='arm64';;     armhf) ARCH='armv7l';;     i386) ARCH='x86';;     *) echo \"unsupported architecture\"; exit 1 ;;   esac   \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\"   \u0026\u0026 curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"   \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   \u0026\u0026 grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -   \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt   \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "1.3.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --keyserver pgp.mit.edu --recv-keys \"$key\" ||     gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" ||     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ;   done   \u0026\u0026 curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   \u0026\u0026 curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   \u0026\u0026 gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   \u0026\u0026 mkdir -p /opt/yarn   \u0026\u0026 tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1   \u0026\u0026 ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn   \u0026\u0026 ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg   \u0026\u0026 rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "url=https://github.com/mozilla/geckodriver/releases/download/v0.19.1/geckodriver-v0.19.1-linux64.tar.gz     \u0026\u0026 curl -s -L \"$url\" | tar -xz     \u0026\u0026 chmod +x geckodriver     \u0026\u0026 mv geckodriver /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/firefox:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "FIREFOX_URL=\"https://download-installer.cdn.mozilla.net/pub/firefox/releases/57.0/linux-x86_64/en-US/firefox-57.0.tar.bz2\"     FIREFOX_SHA256=\"c2cae016089e816c03283a359c582efab3bca34e6048ecc2382b43c1eb342457\"   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/firefox.tar.bz2 $FIREFOX_URL   \u0026\u0026 echo \"$FIREFOX_SHA256 /tmp/firefox.tar.bz2\" | sha256sum -c   \u0026\u0026 tar -jxf /tmp/firefox.tar.bz2   \u0026\u0026 rm /tmp/firefox.tar.bz2   \u0026\u0026 firefox --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error --location --fail --retry 3 --output /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb       \u0026\u0026 (dpkg -i /tmp/google-chrome-stable_current_amd64.deb || apt-get -fy install)        \u0026\u0026 rm -rf /tmp/google-chrome-stable_current_amd64.deb       \u0026\u0026 sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g'            \"/opt/google/chrome/google-chrome\"       \u0026\u0026 google-chrome --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE)       \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip\"       \u0026\u0026 cd /tmp       \u0026\u0026 unzip chromedriver_linux64.zip       \u0026\u0026 rm -rf chromedriver_linux64.zip       \u0026\u0026 mv chromedriver /usr/local/bin/chromedriver       \u0026\u0026 chmod +x /usr/local/bin/chromedriver       \u0026\u0026 chromedriver --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":99"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "circleci"
        }
      ]
    }
  ]
}