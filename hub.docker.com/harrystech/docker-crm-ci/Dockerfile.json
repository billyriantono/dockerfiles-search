{
  "MetaArgs": [
    {
      "Key": "JDK_BASE_IMAGE",
      "DefaultValue": "openjdk:8u162-jdk",
      "ProvidedValue": null,
      "Value": "openjdk:8u162-jdk"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "${JDK_BASE_IMAGE}",
      "SourceCode": "FROM ${JDK_BASE_IMAGE}",
      "Platform": "",
      "From": {
        "Image": "${JDK_BASE_IMAGE}"
      },
      "Commands": [
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Key": "SBT_VERSION",
          "Name": "arg",
          "Value": "0.13.8"
        },
        {
          "Key": "SCALA_VERSION",
          "Name": "arg",
          "Value": "2.12.4"
        },
        {
          "Env": [
            {
              "Key": "SBT_VERSION",
              "Value": "${SBT_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCALA_VERSION",
              "Value": "${SCALA_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --fix-broken     \u0026\u0026 apt-get install -y --no-install-recommends dirmngr python curl sudo gnupg apt-transport-https git ssh tar gzip lsb-release software-properties-common awscli bc postgresql-client     \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser",
            "--disabled-password",
            "--gecos",
            "",
            "harrys"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "usermod",
            "-aG",
            "sudo",
            "harrys"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "echo 'harrys ALL=(ALL) NOPASSWD: ALL' \u003e /etc/sudoers.d/harrys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "harrys"
        },
        {
          "Name": "workdir",
          "Path": "/home/harrys"
        },
        {
          "CmdLine": [
            "echo \"deb https://dl.bintray.com/sbt/debian /\" | sudo tee -a /etc/apt/sources.list.d/sbt.list     \u0026\u0026 sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823     \u0026\u0026 sudo apt-get update     \u0026\u0026 sudo apt-get install sbt     \u0026\u0026 sudo apt-get clean     \u0026\u0026 sudo rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SBT_HOME",
              "Value": "/home/harrys/.sbt"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$SBT_HOME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/force-compile/project    \u0026\u0026 cd /tmp/force-compile        \u0026\u0026 mkdir -p src/main/scala      \u0026\u0026 echo \"sbt.version=$SBT_VERSION\" \u003e project/build.properties   \u0026\u0026 echo \"scalaVersion := \\\"$SCALA_VERSION\\\"\" \u003e build.sbt   \u0026\u0026 echo 'object EmptyMain { def main(args: Array[String]): Unit = {}  }' \u003e src/main/scala/EmptyMain.scala   \u0026\u0026 sbt compile   \u0026\u0026 cd ~/   \u0026\u0026 sudo rm -fR /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\"     \u0026\u0026 curl -fsSL -o \"docker-key.gpg\" \"https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg\"     \u0026\u0026 sudo apt-key add \"docker-key.gpg\"     \u0026\u0026 rm \"docker-key.gpg\"     \u0026\u0026 sudo apt-get update     \u0026\u0026 sudo apt-get install -y --no-install-recommends docker-ce     \u0026\u0026 sudo apt-get clean     \u0026\u0026 sudo rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo curl -O https://bootstrap.pypa.io/get-pip.py     \u0026\u0026 python3 get-pip.py --user     \u0026\u0026 echo \"PATH=~/.local/bin:$PATH\" \u003e\u003e ~/.bash_profile     \u0026\u0026 /home/harrys/.local/bin/pip install awscli --upgrade --user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo usermod -aG docker harrys"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}