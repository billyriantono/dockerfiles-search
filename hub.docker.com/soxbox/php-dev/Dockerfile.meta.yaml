MetaArgs: null
Stages:
- BaseName: httpd:alpine
  Commands:
  - Maintainer: tim <tim@soxbox.co>
    Name: maintainer
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tdpkg-dev dpkg \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake
        \t\tpkgconf \t\tre2c"
    Name: env
  - CmdLine:
    - "apk add --no-cache --virtual .persistent-deps \t\tca-certificates \t\tcurl
      \t\ttar \t\txz \t\topenssl"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - "set -eux; \tmkdir -p \"$PHP_INI_DIR/conf.d\";"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXTRA_BUILD_DEPS
      Value: apache2-dev
    Name: env
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.0.33
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://secure.php.net/get/php-7.0.33.tar.xz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"https://secure.php.net/get/php-7.0.33.tar.xz.asc/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"ab8c5be6e32b1f8d032909dedaaaa4bbb1a209e519abb01a52ce3914f9a13d96"'
    - Key: PHP_MD5
      Value: '""'
    Name: env
  - CmdLine:
    - "set -eux; \t\tapk add --no-cache --virtual .fetch-deps gnupg; \t\tmkdir -p
      /usr/src; \tcd /usr/src; \t\tcurl -fsSL -o php.tar.xz \"$PHP_URL\"; \t\tif [
      -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum
      -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\"
      | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\tcurl -fsSL -o
      php.tar.xz.asc \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor
      key in $GPG_KEYS; do \t\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$key\"; \t\tdone; \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz;
      \t\tgpgconf --kill all; \t\trm -rf \"$GNUPGHOME\"; \tfi; \t\tapk del --no-network
      .fetch-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - "set -eux; \tapk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\tcoreutils
      \t\tcurl-dev \t\tlibedit-dev \t\tlibxml2-dev \t\topenssl-dev \t\tsqlite-dev
      \t\t${PHP_EXTRA_BUILD_DEPS:-} \t; \t\texport CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\"
      \t\tLDFLAGS=\"$PHP_LDFLAGS\" \t; \tdocker-php-source extract; \tcd /usr/src/php;
      \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \t./configure
      \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"
      \t\t\t\t--enable-option-checking=fatal \t\t\t\t--with-mhash \t\t\t\t--enable-ftp
      \t\t--enable-mbstring \t\t--enable-mysqlnd \t\t\t\t--with-curl \t\t--with-libedit
      \t\t--with-openssl \t\t--with-zlib \t\t--with-apxs2 \t\t--disable-cgi \t\t\t\t$(test
      \"$gnuArch\" = 's390x-linux-gnu' && echo '--without-pcre-jit') \t\t\t\t${PHP_EXTRA_CONFIGURE_ARGS:-}
      \t; \tmake -j \"$(nproc)\"; \tfind -type f -name '*.a' -delete; \tmake install;
      \tfind /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all
      '{}' + || true; \tmake clean; \t\tcp -v php.ini-* \"$PHP_INI_DIR/\"; \t\tcd
      /; \tdocker-php-source delete; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner
      --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u
      \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print
      \"so:\" $1 }' \t)\"; \tapk add --no-cache $runDeps; \t\tapk del --no-network
      .build-deps; \t\tpecl update-channels; \trm -rf /tmp/pear ~/.pearrc; \tphp --version"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - docker-php-entrypoint
    - /usr/local/bin/
  - Env:
    - Key: IMAGICK_VERSION
      Value: 3.4.2
    Name: env
  - CmdLine:
    - apk add --update git make gcc g++ imagemagick-dev   libc-dev   autoconf   freetype-dev   libjpeg-turbo-dev   libpng-dev   libmcrypt-dev   bzip2   libbz2   bzip2-dev   libmemcached-dev   cyrus-sasl-dev   binutils   &&
      pecl install imagick-$IMAGICK_VERSION   && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update && apk add ca-certificates &&   apk add tzdata &&   ln -sf /usr/share/zoneinfo/US/Arizona
      /etc/localtime &&   echo "Us/Arizona" > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/   &&
      docker-php-ext-install gd   && docker-php-ext-install mysqli   && docker-php-ext-install
      bz2   && docker-php-ext-install zip   && docker-php-ext-install pdo   && docker-php-ext-install
      pdo_mysql   && docker-php-ext-install opcache   && echo "extension=phalcon.so"
      > /usr/local/etc/php/conf.d/phalcon.ini   && echo "extension=bcmath.so" > /usr/local/etc/php/conf.d/bcmath.ini   &&
      echo "zend_extension=xdebug.so" >> /usr/local/etc/php/conf.d/xdebug.ini
    Name: run
    PrependShell: true
  - Env:
    - Key: PHALCON_VERSION
      Value: 3.4.2
    Name: env
  - Name: workdir
    Path: /usr/src/php/ext/
  - CmdLine:
    - set -xe &&   curl -LO https://github.com/phalcon/cphalcon/archive/v${PHALCON_VERSION}.tar.gz
      &&   tar xzf v${PHALCON_VERSION}.tar.gz && cd cphalcon-${PHALCON_VERSION}/build
      && sh install &&   echo "extension=phalcon.so" > /usr/local/etc/php/conf.d/phalcon.ini
      &&   cd ../.. && rm -rf v${PHALCON_VERSION}.tar.gz cphalcon-${PHALCON_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe &&   curl -LO https://github.com/xdebug/xdebug/archive/XDEBUG_2_5_0.tar.gz
      &&   tar xzf XDEBUG_2_5_0.tar.gz && cd xdebug-XDEBUG_2_5_0 &&   phpize && ./configure
      --enable-xdebug && make && make install &&   cd ../ && rm -rf xdebug-XDEBUG_2_5_0
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-source extract   && cd /usr/src/php/ext/bcmath   && phpize && ./configure
      --with-php-config=/usr/local/bin/php-config && make && make install   && make
      clean   && docker-php-source delete
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - httpd-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: httpd:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM httpd:alpine
