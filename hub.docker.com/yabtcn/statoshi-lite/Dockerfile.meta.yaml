MetaArgs: null
Stages:
- BaseName: debian:latest
  Commands:
  - Maintainer: ArtDodger <info@yabtcn.info>
    Name: maintainer
  - Labels:
    - Key: statoshi.image-specs
      Value: '"{\"Description\":\"A containerized Statoshi\, a fork of Bitcoin Core\,
        running on Debian 8 using Docker\",\"Usage\":\"docker run -it -p 80:80 yabtcn\\/statoshi-lite\:latest
        \\/usr\\/local\\/bin\\/bitcoind \&\",\"License\":\"GPL\",\"Version\":\"0.0.1-beta\"}"'
    Name: label
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nano wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y autoconf autotools-dev build-essential bsdmainutils git libboost-all-dev
      libssl-dev libtool pkg-config
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -d /home/statoshi -m -s /bin/bash -c "Statoshi" -p `openssl passwd -1
      statoshi` statoshi
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "statoshi ALL=(ALL) ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /home/statoshi/.bitcoin && mkdir /home/statoshi/.scripts && mkdir /home/statoshi/log
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/statoshi/.scripts && wget "http://yabtcn.info/statoshi/bitcoind.check.example"
      -O bitcoind.check.sh >/dev/null 2>&1 && wget "http://yabtcn.info/statoshi/statsd.check.example"
      -O statsd.check.sh >/dev/null 2>&1 && wget "http://yabtcn.info/statoshi/systemmetricsd.check.example"
      -O systemmetricsd.check.sh >/dev/null 2>&1 && chmod +x *.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "http://yabtcn.info/statoshi/bitcoin.conf.example" -O /home/statoshi/.bitcoin/bitcoin.conf
      >/dev/null 2>&1
    Name: run
    PrependShell: true
  - CmdLine:
    - chown statoshi:statoshi -R /home/statoshi
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/statoshi && git clone http://github.com/jlopp/bitcoin-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/memory          = psutil.phymem_usage()/memory          = psutil.virtual_memory()/g'
      /home/statoshi/bitcoin-utils/systemMetricsDaemon.py
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && git clone https://github.com/ArtDodger/statoshi
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/statoshi && ./autogen.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/statoshi && ./configure --disable-wallet --with-cli --without-gui --enable-hardening
      --without-miniupnpc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/statoshi && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/statoshi && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs npm
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install forever -g
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && git clone https://github.com/etsy/statsd
    Name: run
    PrependShell: true
  - CmdLine:
    - 'cp /opt/statsd/exampleConfig.js /opt/statsd/config.js && sed -i ''s/graphiteHost\:
      \"graphite.example.com\"/graphiteHost\: \"127.0.0.1\"/g'' /opt/statsd/config.js'
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s ""$(which nodejs)"" /usr/bin/node
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/forever start -c /usr/bin/nodejs /opt/statsd/stats.js /opt/statsd/config.js
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libapache2-mod-wsgi memcached python-cairo python-django
      python-django-tagging python-memcache python-pip python-pysqlite2 python-simplejson
      python-twisted
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install carbon graphite-web psutil 'twisted<12.0' whisper
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && git clone https://github.com/WoLpH/python-statsd
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/python-statsd && python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /opt/graphite/conf/graphite.wsgi.example /opt/graphite/conf/graphite.wsgi
      && cp /opt/graphite/conf/carbon.conf.example /opt/graphite/conf/carbon.conf
      && cp /opt/graphite/conf/storage-schemas.conf.example /opt/graphite/conf/storage-schemas.conf
      && cp /opt/graphite/conf/storage-aggregation.conf.example /opt/graphite/conf/storage-aggregation.conf
      && cp /opt/graphite/webapp/graphite/local_settings.py.example /opt/graphite/webapp/graphite/local_settings.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '10,$d' /opt/graphite/conf/storage-schemas.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "[carbon]\r\npattern = ^carbon\.\r\nretentions = 10:2160,60:10080,600:262974\r\n\r\n[stats]\r\npriority
      = 110\r\npattern = ^stats\\..*\r\nretentions = 10:2160,60:10080,600:262974\r\n\r\n[default]\r\npattern
      = .*\r\nretentions = 10:2160,60:10080,600:262974" >> /opt/graphite/conf/storage-schemas.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/xFilesFactor = 0/c\xFilesFactor = 0.0' /opt/graphite/conf/storage-aggregation.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "\r\nSECRET_KEY = 'statoshi'\r\nTIME_ZONE = 'UTC'\r\nLOG_RENDERING_PERFORMANCE
      = True\r\nLOG_CACHE_PERFORMANCE = True\r\nLOG_METRIC_ACCESS = True\r\nMEMCACHE_HOSTS
      = ['127.0.0.1:11211']\r\nDEFAULT_CACHE_DURATION = 600\r\n# Cache images and
      data for 10 minutes" >> /opt/graphite/webapp/graphite/local_settings.py
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/graphite/webapp/graphite && python manage.py syncdb --noinput
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/graphite/webapp/graphite && echo "from django.contrib.auth.models import
      User; User.objects.create_superuser('statoshi', 'admin@example.info', 'statoshi')"
      | python manage.py shell
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "https://pypi.python.org/packages/source/g/graphite-web/graphite-web-0.9.13.tar.gz"
      -O /tmp/graphite-web-0.9.13.tar.gz >/dev/null 2>&1
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && tar -zxvf /tmp/graphite-web-0.9.13.tar.gz >/dev/null 2>&1
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/graphite-web-0.9.13 && python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apache2.2-common
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "http://yabtcn.info/statoshi/000-default.conf.example" -O /etc/apache2/sites-available/000-default.conf
      >/dev/null 2>&1 && wget "http://yabtcn.info/statoshi/default-ssl.conf.example"
      -O /etc/apache2/sites-available/default-ssl.conf >/dev/null 2>&1 && wget "http://yabtcn.info/statoshi/graphite.conf.example"
      -O /etc/apache2/sites-available/graphite.conf >/dev/null 2>&1
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/graphite/bin && wget "http://yabtcn.info/statoshi/graphite.check.example"
      -O /opt/graphite/bin/graphite.check.sh >/dev/null 2>&1 && chmod +x graphite.check.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - a2ensite default-ssl.conf graphite.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "\r\nServerName localhost\r\n" >> /etc/apache2/apache2.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "<Directory />\r\nOrder allow,deny\r\nDeny from all\r\nAllow from 127.0.0.1\r\nAllow
      from 192.168.0.0/24\r\nAllow from 172.17.0.0/16\r\n#Allow from all\r\n</Directory>\r\n"
      >> /etc/apache2/httpd.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod headers proxy_http ssl wsgi
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/Listen 80/Listen 80\nListen 8080/g' /etc/apache2/ports.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/httpd && mkdir /var/httpd/wsgi
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/graphite/bin/carbon-cache.py start
    Name: run
    PrependShell: true
  - CmdLine:
    - chown www-data:www-data -R /var/www && chown www-data:www-data -R /var/httpd
      && chown www-data:www-data -R /opt/graphite
    Name: run
    PrependShell: true
  - CmdLine:
    - /etc/init.d/apache2 restart
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://packagecloud.io/grafana/stable/debian/ wheezy main" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - "https://packagecloud.io/gpg.key" | apt-key add - >/dev/null 2>&1
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install grafana
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "http://yabtcn.info/statoshi/grafana.home.json.example" -O /usr/share/grafana/public/dashboards/home.json
      >/dev/null 2>&1 && wget "http://yabtcn.info/statoshi/grafana.defaults.ini.example"
      -O /usr/share/grafana/conf/defaults.ini >/dev/null 2>&1
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "http://yabtcn.info/statoshi/grafana.defaults.ini.example" -O /usr/share/grafana/conf/defaults.ini
      >/dev/null 2>&1
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "http://statoshi.info/img/statoshi.png" -O /usr/share/grafana/public/img/statoshi.png
      >/dev/null 2>&1
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "http://yabtcn.info/statoshi/bitcoind.conf.example" -O /etc/default/bitcoind
      >/dev/null 2>&1 && wget "http://yabtcn.info/statoshi/bitcoind.init.example"
      -O /etc/init.d/bitcoind >/dev/null 2>&1
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /etc/init.d/bitcoind
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y rcconf sysv-rc-conf cron
    Name: run
    PrependShell: true
  - CmdLine:
    - update-rc.d bitcoind defaults && update-rc.d grafana-server defaults && update-rc.d
      cron defaults
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/crontab && wget "http://yabtcn.info/statoshi/crontab.example" -O /etc/crontab
      >/dev/null 2>&1
    Name: run
    PrependShell: true
  From:
    Image: debian:latest
  Name: ""
  Platform: ""
  SourceCode: FROM debian:latest
