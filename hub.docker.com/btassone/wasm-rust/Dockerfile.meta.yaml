MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Maintainer: btassone <brandontassone@gmail.com>
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install gcc pkg-config libssl-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install curl -y && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs
      | sh -s -- -y
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_12.x | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && echo "deb
      https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install nodejs yarn -y
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/root/.cargo/bin:${PATH}"'
    Name: env
  - CmdLine:
    - cargo install wasm-pack && cargo install cargo-generate
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install nginx -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install git -y
    Name: run
    PrependShell: true
  - Env:
    - Key: USER
      Value: root
    Name: env
  - CmdLine:
    - sed -i "s:application/zip                       zip;:application/zip                       zip;\\n
      application/wasm                       wasm;:g" /etc/nginx/mime.types
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - wasm-create-project
    - /usr/local/bin
  - CmdLine:
    - chmod 777 /usr/local/bin/docker-entrypoint.sh && chmod 777 /usr/local/bin/wasm-create-project
      && ln -s /usr/local/bin/docker-entrypoint.sh / && ln -s /usr/local/bin/wasm-create-project
      /
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
