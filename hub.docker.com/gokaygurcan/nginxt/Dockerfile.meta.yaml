MetaArgs: null
Stages:
- BaseName: nginx:stable
  Commands:
  - Maintainer: Grzegorz Godlewski gg@gitgis.com
    Name: maintainer
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y -q --no-install-recommends ca-certificates gnupg wget curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y -q nodejs npm
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - build/default.conf
    - /etc/nginx/conf.d/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - build
    - /app/
  - Name: workdir
    Path: /app/
  - Name: volume
    Volumes:
    - /etc/nginx/certs
    - /etc/nginx/conf.d
    - /etc/nginx/conf.docker
    - /var/log
  - CmdLine:
    - wget https://bin.equinox.io/c/ekMN3bCZFUn/forego-stable-linux-amd64.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvf forego-stable-linux-amd64.tgz -C /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove -y -q gnupg wget curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /app/docker-watcher && npm install
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  - CmdLine:
    - forego
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: nginx:stable
  Name: ""
  Platform: ""
  SourceCode: FROM nginx:stable
