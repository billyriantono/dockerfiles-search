MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Maintainer: zwylnzm
    Name: maintainer
  - Env:
    - Key: DISPLAY
      Value: :1
    Name: env
  - Env:
    - Key: VNC_PORT
      Value: "5901"
    Name: env
  - Name: expose
    Ports:
    - $VNC_PORT
  - Env:
    - Key: VNC_COL_DEPTH
      Value: "24"
    Name: env
  - Env:
    - Key: VNC_RESOLUTION
      Value: 1280x720
    Name: env
  - Env:
    - Key: VNC_PW
      Value: vncpassword
    Name: env
  - CmdLine:
    - useradd -m -G wheel docker && echo "docker:docker" | chpasswd
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/docker
    Name: env
  - Env:
    - Key: STARTUPDIR
      Value: /dockerstartup
    Name: env
  - Name: workdir
    Path: $HOME
  - Env:
    - Key: INST_SCRIPTS
      Value: $HOME/install
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./install_script/
    - $INST_SCRIPTS/
  - CmdLine:
    - find $INST_SCRIPTS -name '*.sh' -exec chmod a+x {} +
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install epel-release
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install vim
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install wget
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install which
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install net-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install bash-completion
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install nano
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install emacs
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install git
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y groupinstall xfce
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install mousepad
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install gtk2-engines
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install xfwm4-themes
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y groups install "Fonts"
    Name: run
    PrependShell: true
  - CmdLine:
    - yum erase -y *power* *screensaver*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/xdg/autostart/xfce-polkit*
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/dbus-uuidgen > /etc/machine-id
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install tigervnc-server
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install lyx
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install texlive-xetex*
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install texlive-euenc
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install evince
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install firefox
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install libreoffice
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install xarchiver
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install nss_wrapper gettext
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install R
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install gstreamer gstreamer-plugins-base
    Name: run
    PrependShell: true
  - CmdLine:
    - $INST_SCRIPTS/rstudio.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install ibus-libpinyin
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install im-chooser
    Name: run
    PrependShell: true
  - CmdLine:
    - yum clean all
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/config/
    - $HOME/.config
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/emacs.d/
    - $HOME/.emacs.d
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config/pip
    - $HOME/.pip
  - CmdLine:
    - echo 'source $STARTUPDIR/generate_container_user' >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PS1="\[\033[38;5;11m\]\u\[$(tput sgr0)\]\[\033[38;5;15m\]@\h:\[$(tput
      sgr0)\]\[\033[38;5;6m\][\w]\[$(tput sgr0)\]\[\033[38;5;9m\]\\$\[$(tput sgr0)\]\[\033[38;5;15m\]
      \[$(tput sgr0)\]"' >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./dockerboot
    - $STARTUPDIR
  - CmdLine:
    - $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR $HOME
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - CmdLine:
    - /dockerstartup/vnc_startup.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --tail-log
    Name: cmd
    PrependShell: false
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
