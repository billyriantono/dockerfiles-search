{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"ipv6\" \u003e\u003e /etc/modules"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"http://dl-2.alpinelinux.org/alpine/edge/main\" \u003e\u003e /etc/apk/repositories;     echo \"http://dl-3.alpinelinux.org/alpine/edge/main\" \u003e\u003e /etc/apk/repositories;     echo \"http://dl-4.alpinelinux.org/alpine/edge/main\" \u003e\u003e /etc/apk/repositories;     echo \"http://dl-5.alpinelinux.org/alpine/edge/main\" \u003e\u003e /etc/apk/repositories;     echo \"http://dl-2.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories;     echo \"http://dl-3.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories;     echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories;     echo \"http://dl-5.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk -U     --no-cache     --allow-untrusted add     bash     python     py-pip     git     openssh     nodejs     nodejs-npm     yarn     zlib-dev     chromium     xvfb     wait4ports     xorg-server     dbus     ttf-freefont     mesa-dri-swrast     grep     udev     \u0026\u0026 apk del --purge --force linux-headers binutils-gold gnupg zlib-dev libc-utils     \u0026\u0026 rm -rf /var/lib/apt/lists/*     /var/cache/apk/*     /usr/share/man     /tmp/*     /usr/lib/node_modules/npm/man     /usr/lib/node_modules/npm/doc     /usr/lib/node_modules/npm/html     /usr/lib/node_modules/npm/scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CHROME_BIN",
              "Value": "/usr/bin/chromium-browser"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CHROME_PATH",
              "Value": "/usr/lib/chromium/"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "prepare-karma.sh",
            "/usr/bin/prepare-karma"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "headless-karma-conf.json.part",
            "/ng-cli-conf/"
          ]
        },
        {
          "CmdLine": [
            "chmod a+x /usr/bin/prepare-karma"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yarn global add @angular/cli@latest     \u0026\u0026 rm -rf /tmp/* /var/cache/apk/* *.tar.gz ~/.npm     \u0026\u0026 npm cache clear --force     \u0026\u0026 yarn cache clean     \u0026\u0026 sed -i -e \"s/bin\\/ash/bin\\/sh/\" /etc/passwd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app \u0026\u0026 chmod 777 /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        }
      ]
    }
  ]
}