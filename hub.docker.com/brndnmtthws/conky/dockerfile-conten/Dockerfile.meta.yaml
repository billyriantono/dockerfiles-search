MetaArgs: null
Stages:
- BaseName: debian:stretch
  Commands:
  - Name: shell
    Shell:
    - /bin/bash
    - -uec
  - CmdLine:
    - dpkg --add-architecture i386  && apt-get update  && apt install -y build-essential
      libssl-dev     libc6-dev-i386 libc6-dev:i386 lib32gcc-6-dev     gcc-6-arm-linux-gnueabi
      g++-6-arm-linux-gnueabi     gcc-6-aarch64-linux-gnu g++-6-aarch64-linux-gnu     mingw-w64     clang     m4
      file     wget git  && apt clean  && rm -rf /var/lib/apt/lists
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://www.musl-libc.org/releases/musl-latest.tar.gz  && tar -zxvf musl-latest.tar.gz  &&
      rm musl-latest.tar.gz  && cd musl*  && ./configure --prefix=/usr/local/musl-x86_64
      -exec-prefix=/usr/local/musl-x86_64  && make -j$(nproc)  && make install  &&
      make clean  && export CC=arm-linux-gnueabi-gcc-6  && ./configure --prefix=/usr/local/musl-arm
      -exec-prefix=/usr/local/musl-arm  && make -j$(nproc)  && make install  && make
      clean  && export CC=aarch64-linux-gnu-gcc-6  && ./configure --prefix=/usr/local/musl-aarch64
      -exec-prefix=/usr/local/musl-aarch64  && make -j$(nproc)  && make install  &&
      make clean  && cd ..  && rm -rf musl*
    Name: run
    PrependShell: true
  - Env:
    - Key: OSX_SDK
      Value: MacOSX10.11.sdk
    Name: env
  - Env:
    - Key: OSX_NDK_X86
      Value: /usr/local/osx-ndk-x86
    Name: env
  - CmdLine:
    - OSX_SDK_PATH=https://s3.dockerproject.org/darwin/v2/$OSX_SDK.tar.xz  && wget
      $OSX_SDK_PATH  && git clone https://github.com/tpoechtrager/osxcross.git /osxcross  &&
      (cd /osxcross && git checkout 9498bfdc621716959e575bd6779c853a03cf5f8d && git
      reset --hard )  && mv `basename $OSX_SDK_PATH` /osxcross/tarballs/  && sed -i
      -e 's|-march=native||g' /osxcross/build_clang.sh /osxcross/wrapper/build.sh  &&
      UNATTENDED=yes OSX_VERSION_MIN=10.6 /osxcross/build.sh  && mv /osxcross/target
      $OSX_NDK_X86  && rm -rf /osxcross
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/karalabe/xgo/blob/master/docker/base/patch.tar.xz?raw=true
      -O patch.tar.xz  && tar -xf patch.tar.xz -C $OSX_NDK_X86/SDK/$OSX_SDK/usr/include/c++  &&
      rm patch.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /freebsd/x86_64-pc-freebsd10 && cd /freebsd  && wget ftp://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/amd64/amd64/10.1-RELEASE/base.txz  &&
      wget ftp://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/amd64/amd64/10.1-RELEASE/lib32.txz  &&
      tar -xf base.txz ./usr/lib  && tar -xf base.txz ./usr/include  && tar -xf base.txz
      ./lib  && rm base.txz  && tar -xf lib32.txz ./usr/lib32  && rm lib32.txz  &&
      mv usr/include x86_64-pc-freebsd10  && mv usr/lib x86_64-pc-freebsd10  && mv
      lib/* x86_64-pc-freebsd10/lib/  && mv usr/lib32 x86_64-pc-freebsd10/  && rmdir
      lib usr  && cd x86_64-pc-freebsd10/lib  && ln -sf libc.so.7 libc.so  && ln -sf
      libc++.so.1 libc++.so  && cd ../lib32  && ln -sf libc.so.7 libc.so  && ln -sf
      libc++.so.1 libc++.so  && cd ..  && find lib lib32 -type l     | while read
      -r alink; do         ln -fs "$(basename $(readlink "$alink"))" "$alink";       done
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://ftp.gnu.org/gnu/binutils/binutils-2.25.1.tar.gz  && tar -xf binutils*.tar.gz  &&
      rm binutils*.tar.gz  && pushd binutils*  && ./configure --enable-libssp --enable-ld
      --target=x86_64-pc-freebsd10 --prefix=/freebsd  && make -j$(nproc)  && make
      install  && popd  && rm -rf binutils*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://ftp.gnu.org/gnu/gmp/gmp-6.0.0a.tar.xz  && tar -xf gmp*.tar.xz  &&
      rm gmp*.tar.xz  && pushd gmp*  && ./configure --prefix=/freebsd --enable-shared
      --enable-static --enable-fft     --enable-cxx --host=x86_64-pc-freebsd10  &&
      make -j$(nproc)  && make install  && popd  && rm -rf gmp*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://ftp.gnu.org/gnu/mpfr/mpfr-3.1.3.tar.xz  && tar -xf mpfr*.tar.xz  &&
      rm mpfr*.tar.xz  && pushd mpfr*  && ./configure --prefix=/freebsd --with-gnu-ld
      --enable-static --enable-shared     --with-gmp=/freebsd --host=x86_64-pc-freebsd10  &&
      make -j$(nproc)  && make install  && popd  && rm -rf mpfr*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://ftp.gnu.org/gnu/mpc/mpc-1.0.3.tar.gz  && tar -xf mpc*.tar.gz  &&
      rm mpc*.tar.gz  && pushd mpc*  && ./configure --prefix=/freebsd --with-gnu-ld
      --enable-static --enable-shared     --with-gmp=/freebsd --with-mpfr=/freebsd
      --host=x86_64-pc-freebsd10  && make -j$(nproc)  && make install  && popd  &&
      rm -rf mpc*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://ftp.gnu.org/gnu/gcc/gcc-6.3.0/gcc-6.3.0.tar.bz2  && tar -xf gcc*.tar.bz2  &&
      rm gcc*.tar.bz2  && pushd gcc*  && mkdir build  && cd build  && ../configure
      --without-headers --with-gnu-as --with-gnu-ld --disable-nls     --enable-languages=c,c++
      --enable-libssp --enable-ld --disable-libitm     --disable-libquadmath --target=x86_64-pc-freebsd10
      --prefix=/freebsd     --with-gmp=/freebsd --with-mpc=/freebsd --with-mpfr=/freebsd
      --disable-libgomp  && LD_LIBRARY_PATH=/freebsd/lib make -j$(nproc)  && make
      install  && popd  && rm -rf gcc*
    Name: run
    PrependShell: true
  - Env:
    - Key: CC
      Value: /bin/cc
    - Key: CGO_ENABLED
      Value: "1"
    - Key: CXX
      Value: /bin/c++
    - Key: GOPATH
      Value: /go
    - Key: HOME
      Value: /tmp
    - Key: PATH
      Value: /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/osx-ndk-x86/bin:/freebsd/bin:/usr/local/go/bin:/go/bin
    - Key: GOOS
      Value: '"linux"'
    - Key: LDFLAGS
      Value: '""'
    - Key: TAR
      Value: '""'
    - Key: VERBOSE
      Value: '""'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - loader
    - /loader
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - cc
    - /bin/cc
  - CmdLine:
    - ln -s /bin/cc /bin/c++  && ln -s /bin/cc /bin/go  && mkdir -p "$GOPATH/src"
      "$GOPATH/bin"  && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /go/src/app
  - CmdLine:
    - /loader
    Name: entrypoint
    PrependShell: false
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/brimstone/docker-golang"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.schema-version
      Value: '"1.0.0-rc1"'
    Name: label
  From:
    Image: debian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch
