{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:latest",
      "SourceCode": "FROM docker:latest",
      "Platform": "",
      "From": {
        "Image": "docker:latest"
      },
      "Commands": [
        {
          "Maintainer": "Marc Ford",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "apk add --no-cache --update coreutils python curl wget tar jq openssl gcc git bash ca-certificates make build-base libffi-dev postgresql-dev linux-headers libc-dev musl-dev python-dev py-pip zlib-dev jpeg-dev bzip2-dev readline-dev sqlite-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://pyenv.run | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/.pyenv/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pyenv install 3.7.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pipenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/jsonnet \u0026\u0026 cd /opt/jsonnet \u0026\u0026 git clone https://github.com/google/jsonnet.git . \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/jsonnet:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLOUDSDK_PYTHON_SITEPACKAGES",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip \u0026\u0026 unzip google-cloud-sdk.zip \u0026\u0026 rm google-cloud-sdk.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/.bashrc --additional-components app kubectl alpha beta"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "google-cloud-sdk/bin/gcloud config set --installation component_manager/disable_update_check true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "v2.13.0-rc.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FILENAME",
              "Value": "helm-${HELM_VERSION}-linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_URL",
              "Value": "https://storage.googleapis.com/kubernetes-helm/${FILENAME}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo $HELM_URL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /tmp/$FILENAME ${HELM_URL}   \u0026\u0026 tar -zxvf /tmp/${FILENAME} -C /tmp   \u0026\u0026 mv /tmp/linux-amd64/helm /bin/helm   \u0026\u0026 rm -rf /tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BUILD_DEPS",
              "Value": "\"gettext\""
            },
            {
              "Key": "RUNTIME_DEPS",
              "Value": "\"libintl\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     apk add --update $RUNTIME_DEPS \u0026\u0026     apk add --virtual build_deps $BUILD_DEPS \u0026\u0026      cp /usr/bin/envsubst /usr/local/bin/envsubst \u0026\u0026     apk del build_deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "helm init --client-only"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "helm plugin install https://github.com/viglesiasce/helm-gcs.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "helm plugin install https://github.com/databus23/helm-diff"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}