{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ocaml/ocaml:debian-stable",
      "SourceCode": "FROM ocaml/ocaml:debian-stable",
      "Platform": "",
      "From": {
        "Image": "ocaml/ocaml:debian-stable"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "distro_style",
              "Value": "\"apt\""
            },
            {
              "Key": "distro",
              "Value": "\"debian\""
            },
            {
              "Key": "distro_long",
              "Value": "\"debian-stable\""
            },
            {
              "Key": "arch",
              "Value": "\"x86_64\""
            },
            {
              "Key": "ocaml_version",
              "Value": "\"4.05.0\""
            },
            {
              "Key": "opam_version",
              "Value": "\"master\""
            },
            {
              "Key": "operatingsystem",
              "Value": "\"linux\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get -y upgrade \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get -y install aspcud \u0026\u0026   git clone -b master git://github.com/ocaml/opam /tmp/opam \u0026\u0026   sh -c \"cd /tmp/opam \u0026\u0026 make cold \u0026\u0026 make cold-install \u0026\u0026 mkdir -p /usr/local/share/opam \u0026\u0026 cp shell/wrap-build.sh /usr/local/share/opam \u0026\u0026 echo 'wrap-build-commands: \\\"/usr/local/share/opam/wrap-build.sh\\\"' \u003e\u003e /etc/opamrc.userns \u0026\u0026 cp shell/wrap-install.sh /usr/local/share/opam \u0026\u0026 echo 'wrap-install-commands: \\\"/usr/local/share/opam/wrap-install.sh\\\"' \u003e\u003e /etc/opamrc.userns \u0026\u0026 cp shell/wrap-remove.sh /usr/local/share/opam \u0026\u0026 echo 'wrap-remove-commands: \\\"/usr/local/share/opam/wrap-remove.sh\\\"' \u003e\u003e /etc/opamrc.userns \u0026\u0026 rm -rf /tmp/opam\" \u0026\u0026   echo 'opam ALL=(ALL:ALL) NOPASSWD:ALL' \u003e /etc/sudoers.d/opam \u0026\u0026   chmod 440 /etc/sudoers.d/opam \u0026\u0026   chown root:root /etc/sudoers.d/opam \u0026\u0026   adduser --disabled-password --gecos '' opam \u0026\u0026   passwd -l opam \u0026\u0026   chown -R opam:opam /home/opam"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "opam"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/opam"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/opam"
        },
        {
          "CmdLine": [
            "mkdir .ssh \u0026\u0026   chmod 700 .ssh \u0026\u0026   git config --global user.email \"docker@example.com\" \u0026\u0026   git config --global user.name \"Docker CI\" \u0026\u0026   sudo -u opam sh -c \"git clone -b master git://github.com/ocaml/opam-repository\" \u0026\u0026   sudo -u opam sh -c \"cd /home/opam/opam-repository \u0026\u0026 opam admin upgrade \u0026\u0026 git checkout -b v2 \u0026\u0026 git add . \u0026\u0026 git commit -a -m 'opam admin upgrade'\" \u0026\u0026   sudo -u opam sh -c \"opam init -a -y --comp ocaml-base-compiler.4.05.0 /home/opam/opam-repository\" \u0026\u0026   sudo -u opam sh -c \"opam install -y depext travis-opam\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "opam",
            "config",
            "exec",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}