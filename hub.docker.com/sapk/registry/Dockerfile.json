{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build-env",
      "BaseName": "golang:alpine",
      "SourceCode": "FROM golang:alpine AS build-env",
      "Platform": "",
      "As": "build-env",
      "From": {
        "Image": "golang:alpine"
      },
      "Commands": [
        {
          "Key": "GOOS",
          "Name": "arg",
          "Value": "linux"
        },
        {
          "Key": "GOARCH",
          "Name": "arg",
          "Value": "amd64"
        },
        {
          "CmdLine": [
            "set -ex  \u0026\u0026 apk add --no-cache make git file  \u0026\u0026 go get -u -v github.com/docker/distribution/registry  \u0026\u0026 cd ${GOPATH}/src/github.com/docker/distribution  \u0026\u0026 CGO_ENABLED=0 make PREFIX=${GOPATH} clean binaries \u0026\u0026 file ./bin/registry | grep \"statically linked\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/github.com/docker/distribution/bin/registry",
            "/bin/registry"
          ]
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/github.com/docker/distribution/cmd/registry/config-example.yml",
            "/etc/docker/registry/config.yml"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/registry"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/etc/docker/registry/config.yml"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}