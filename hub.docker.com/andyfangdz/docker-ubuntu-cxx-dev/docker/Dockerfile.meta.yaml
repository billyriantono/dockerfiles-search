MetaArgs: null
Stages:
- As: ghdl-builder
  BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"andrsmllr <andrsmllr@bananatronics.org>"'
    Name: label
  - Labels:
    - Key: description
      Value: '"GHDL open source VHDL simulator"'
    Name: label
  - Labels:
    - Key: version
      Value: '"1.0"'
    Name: label
  - Key: GHDL_VERSION
    Name: arg
    Value: v0.36
  - Key: GHDL_BACKEND
    Name: arg
    Value: mcode
  - Env:
    - Key: TERM
      Value: xterm-256color
    Name: env
  - Name: volume
    Volumes:
    - /workdir
  - Name: workdir
    Path: /workdir
  - Env:
    - Key: GHDL_BACKEND
      Value: ${GHDL_BACKEND}
    Name: env
  - Env:
    - Key: GHDL_VERSION
      Value: ${GHDL_VERSION}
    Name: env
  - Env:
    - Key: GHDL_PATH
      Value: /opt/ghdl-${GHDL_BACKEND}-${GHDL_VERSION}
    Name: env
  - Env:
    - Key: GHDL_SRC
      Value: /usr/src/ghdl
    Name: env
  - Env:
    - Key: LLVM_VERSION
      Value: "7"
    Name: env
  - Env:
    - Key: GCC_VERSION
      Value: "7.4"
    Name: env
  - Env:
    - Key: GCC_MAJOR_VERSION
      Value: "7"
    Name: env
  - CmdLine:
    - apt update -qq     && apt install --no-install-recommends -qq -y         git         gnat         make         libz-dev         ca-certificates     &&
      apt autoclean && apt clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/ghdl/ghdl $GHDL_SRC     && cd ${GHDL_SRC}     &&
      git checkout ${GHDL_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ ${GHDL_BACKEND} = mcode ]; then     cd ${GHDL_SRC}     && ./configure         --prefix=${GHDL_PATH}     &&
      make && make install     && ln -s ${GHDL_PATH} /opt/ghdl     && ln -s /opt/ghdl/bin/ghdl
      /usr/bin/ghdl     ; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ ${GHDL_BACKEND} = llvm ]; then     apt update -qq     && apt install --no-install-recommends
      -qq -y         llvm-${LLVM_VERSION}         llvm-${LLVM_VERSION}-dev         clang++-${LLVM_VERSION}         libedit-dev
      gcc-${GCC_MAJOR_VERSION}     && apt autoclean && apt clean && rm -rf /var/lib/apt/lists/*     &&
      ln -s /usr/bin/clang++-${LLVM_VERSION} /usr/bin/clang++     && cd ${GHDL_SRC}     &&
      ./configure         --prefix=${GHDL_PATH}         --with-llvm-config=/usr/bin/llvm-config-${LLVM_VERSION}     &&
      make && make install     && ln -s ${GHDL_PATH} /opt/ghdl     && ln -s /opt/ghdl/bin/ghdl
      /usr/bin/ghdl     ; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ ${GHDL_BACKEND} = gcc ]; then     apt update -qq     && apt install --no-install-recommends
      -qq -y         gcc-${GCC_MAJOR_VERSION}         g++-${GCC_MAJOR_VERSION}         gnat-${GCC_MAJOR_VERSION}         gcc-${GCC_MAJOR_VERSION}-source         xz-utils     &&
      apt clean     && cd /usr/src/gcc-${GCC_MAJOR_VERSION}     && tar xf $(find .
      -maxdepth 1 -type f -name "gcc-${GCC_VERSION}*")     && cd $(find . -maxdepth
      1 -type d -name "gcc-${GCC_VERSION}*")     && ./contrib/download_prerequisites     &&
      cd ${GHDL_SRC}     && ./configure       --prefix=${GHDL_PATH}-gcc       --with-gcc=/usr/src/gcc-${GCC_MAJOR_VERSION}/gcc-${GCC_VERSION}.0     &&
      make copy-sources     && cd /usr/src/gcc-${GCC_MAJOR_VERSION}/gcc-${GCC_VERSION}.0     &&
      ./configure       --prefix=${GHDL_PATH}-gcc       --disable-multilib     &&
      make && make install     && cd ${GHDL_SRC}     && make && make install     &&
      ln -s ${GHDL_PATH}-gcc/bin/ghdl /usr/bin/ghdl     ; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/ghdl
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --help
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ghdl-builder
  Platform: ""
  SourceCode: FROM ubuntu:18.04 AS ghdl-builder
