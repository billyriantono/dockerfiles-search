MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Maintainer: caktux
    Name: maintainer
  - Env:
    - Key: DOCKER_MACHINE_VERSION
      Value: 0.6.0
    Name: env
  - Env:
    - Key: DOCKER_ENGINE_VERSION
      Value: latest
    Name: env
  - CmdLine:
    - apk add --no-cache python
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .fetch-deps curl &&     curl -fSL "https://github.com/docker/machine/releases/download/v$DOCKER_MACHINE_VERSION/docker-machine-Linux-x86_64"
      -o /usr/bin/docker-machine &&     chmod +x /usr/bin/docker-machine &&     curl
      -fSL "https://get.docker.com/builds/Linux/x86_64/docker-$DOCKER_ENGINE_VERSION"
      -o /usr/bin/docker &&     chmod +x /usr/bin/docker &&     curl -fSL "https://bootstrap.pypa.io/get-pip.py"
      | python &&     apk del .fetch-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir docker-compose
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /
  - CmdLine:
    - apk add --no-cache --virtual .build-deps make gcc musl-dev python-dev &&     pip
      install --no-cache-dir -r requirements.txt &&     apk del .build-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .run-deps git bash bash-completion docker-bash-completion
      openssh-client
    Name: run
    PrependShell: true
  - CmdLine:
    - activate-global-python-argcomplete --dest=- > /usr/share/bash-completion/completions/python-argcomplete
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e "PS1='\\u@\\h:\\w\\$ '\nbind '\";5C\":forward-word'\nbind '\";5D\":backward-word'\n.
      /usr/share/bash-completion/bash_completion" > /root/.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - storm
  - Name: workdir
    Path: storm
  - CmdLine:
    - pip install --no-cache-dir -e .
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /root/.docker/machine
  - Name: volume
    Volumes:
    - /root/.storm
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
