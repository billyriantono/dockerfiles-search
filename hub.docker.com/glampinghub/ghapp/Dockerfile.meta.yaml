MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US:en
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: TERM
      Value: ${TERM:-xterm}
    - Key: PORT
      Value: "8000"
    - Key: ENV
      Value: develop
    - Key: PATH
      Value: /webapp/venv/bin/:/webapp/.venv/bin/:$PATH
    - Key: DEBUG
      Value: "True"
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://deb.nodesource.com/setup_10.x
    - /tmp/setup-nodejs
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./sd_notify
    - /usr/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./http_ok-linux-amd64
    - /usr/local/bin/http_ok
  - CmdLine:
    - apt-get update     && apt-get install locales     && locale-gen en_US.UTF-8     &&
      echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections     &&
      bash /tmp/setup-nodejs     && apt-get install --no-install-recommends -qy         nodejs
      openssh-client git         build-essential awscli         virtualenv python3
      python3-dev python3-pip python3-setuptools python3-wheel         libpq-dev libmaxminddb0
      libmaxminddb-dev libmemcached-dev         libjpeg8 libjpeg8-dev libopenjp2-7
      libopenjp2-7-dev libtiff5 libtiff5-dev         libfreetype6 libfreetype6-dev
      libwebp6 libwebp-dev         libgeos-3.6.2 libgeos-dev gdal-bin libgdal-dev
      python3-gdal binutils libproj-dev         wkhtmltopdf xvfb         libffi-dev         vim
      nano less jq         libssl-dev default-libmysqlclient-dev         && ln -s
      /usr/include/freetype2 /usr/local/include/freetype     && echo -n '#!/bin/sh\nxvfb-run
      -a /usr/bin/wkhtmltopdf "$@" || /usr/bin/wkhtmltopdf "$@"\n' > /usr/local/bin/wkhtmltopdf     &&
      chmod +x /usr/local/bin/wkhtmltopdf     && npm install --global --production
      eslint     && update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1     &&
      update-alternatives --install /usr/bin/python python /usr/bin/python3.6 1     &&
      update-alternatives --install /usr/bin/python python /usr/bin/python2.7 2     &&
      update-alternatives --set python /usr/bin/python3.6     && pip install flake8
      flake8_formatter_junit_xml     && apt-get clean && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /webapp
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/sleep
    - infinity
    Name: cmd
    PrependShell: false
  - Labels:
    - Key: org.opencontainers.image.authors
      Value: '"Jos√© Luis Salvador Rufo <salvador.joseluis@gmail.com>"'
    - Key: org.opencontainers.image.title
      Value: '"Django container"'
    - Key: org.opencontainers.image.url
      Value: '"https://glampinghub.com"'
    - Key: org.opencontainers.image.vendor
      Value: '"Glamping Hub USA Inc."'
    Name: label
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
