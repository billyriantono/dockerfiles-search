MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Maintainer: Jos√© Luis Salvador Rufo <salvador.joseluis@gmail.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: PORT
      Value: "8000"
    - Key: ENV
      Value: develop
    - Key: DEBUG
      Value: "True"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./requirements.txt
    - /tmp/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/kelseyhightower/confd/releases/download/v0.10.0/confd-0.10.0-linux-amd64
    - /usr/bin/confd
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://deb.nodesource.com/setup_5.x
    - /tmp/setup-nodejs
  - CmdLine:
    - "echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
      && \tchmod +x /usr/bin/confd && \tapt-key adv --keyserver keyserver.ubuntu.com
      --recv-keys DE742AFA && \tbash -c 'source /etc/lsb-release; echo \"deb http://ppa.launchpad.net/maxmind/ppa/ubuntu
      $DISTRIB_CODENAME main\" > /etc/apt/sources.list.d/maxmind.list' && \tbash /tmp/setup-nodejs
      && \tapt-get install --no-install-recommends -qy \t\tnodejs \t\tlibmaxminddb0
      libmaxminddb-dev \t\tmemcached \t\tpython-dev \t\tpython-pip \t\tlibjpeg8 libjpeg8-dev
      libtiff5 libtiff5-dev libfreetype6 libfreetype6-dev \t\tlibgeos-3.4.2 libgeos-dev
      gdal-bin libgdal-dev python-gdal binutils libproj-dev gdal-bin \t\tgunicorn
      \t\tceleryd \t\tsupervisor \t\txtail \t\tgit \t\tlibpq-dev \t\tbuild-essential
      \t\tvim && \tapt-get purge -qy python-librabbitmq librabbitmq1 && \tln -s /usr/include/freetype2
      /usr/local/include/freetype && \tnpm install --global --production bower gulp
      && \tmkdir -p /webapp/dist /webapp/src && \tpip install -r /tmp/requirements.txt
      && \tuseradd -u 999 -s /usr/sbin/nologin -r -M -d /nonexistent webapp && \tapt-get
      clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && npm cache clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ghapp
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
