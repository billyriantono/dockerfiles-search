MetaArgs: null
Stages:
- BaseName: jupyter/all-spark-notebook
  Commands:
  - Maintainer: Luis Freire
    Name: maintainer
  - Env:
    - Key: Z_VERSION
      Value: '"0.7.2"'
    Name: env
  - Env:
    - Key: LOG_TAG
      Value: '"[ZEPPELIN_${Z_VERSION}]:"'
    - Key: Z_HOME
      Value: '"/opt/zeppelin"'
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PATH
      Value: '"${Z_HOME}:${PATH}"'
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - echo "$LOG_TAG update and install OS dependencies for openai gym" &&     apt-get
      update && apt-get install -yq --no-install-recommends     python-numpy     python-dev     cmake     zlib1g-dev     libjpeg-dev     xvfb     libav-tools     xorg-dev     python-opengl     libboost-all-dev     libsdl2-dev     swig     &&
      apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://ftp.uk.debian.org/debian jessie-backports main" >> /etc/apt/sources.list
      &&     apt-get update &&     apt-get install -yq --no-install-recommends ffmpeg
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "$LOG_TAG Download Zeppelin binary" &&     wget -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz
      http://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz
      &&     tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz --directory /opt &&     rm
      -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz &&     mv /opt/zeppelin-${Z_VERSION}-bin-all
      ${Z_HOME} &&     chown -hR ${NB_USER} ${Z_HOME}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "$LOG_TAG Cleanup" &&     apt-get autoclean &&     apt-get clean
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - CmdLine:
    - 'conda config --add channels menpo       # for opencv'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/$NB_USER/work
  - Expression: COPY requirements-conda.txt /home/$NB_USER/work
    Name: onbuild
  - Expression: RUN conda install --quiet --yes --file requirements-conda.txt &&             conda
      remove --quiet --yes --force qt pyqt &&             conda clean -tipsy
    Name: onbuild
  - Expression: COPY requirements-pip.txt /home/$NB_USER/work
    Name: onbuild
  - Expression: RUN pip install --no-cache-dir -r requirements-pip.txt
    Name: onbuild
  - Expression: COPY . /home/$NB_USER/work
    Name: onbuild
  - CmdLine:
    - ${Z_HOME}/bin/zeppelin.sh
    Name: cmd
    PrependShell: false
  From:
    Image: jupyter/all-spark-notebook
  Name: ""
  Platform: ""
  SourceCode: FROM jupyter/all-spark-notebook
