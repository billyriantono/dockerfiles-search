MetaArgs: null
Stages:
- BaseName: debian:stretch-slim
  Commands:
  - Name: shell
    Shell:
    - /bin/bash
    - -Eeuo
    - pipefail
    - -xc
  - CmdLine:
    - "apt-get update; \tapt-get install -y --no-install-recommends \t\tbash-completion
      \t\tbc \t\tca-certificates \t\tcpio \t\tgcc \t\tgit \t\tgnupg dirmngr \t\tgolang-go
      \t\tkmod \t\tlibc6-dev \t\tlibelf-dev \t\tmake \t\tp7zip-full \t\tpatch \t\tsquashfs-tools
      \t\twget \t\txorriso \t\txz-utils \t; \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo 'progress = dot:giga' >> ~/.wgetrc; \tcp /etc/skel/.bashrc ~/"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /rootfs
  - Env:
    - Key: TCL_MIRRORS
      Value: http://distro.ibiblio.org/tinycorelinux http://repo.tinycorelinux.net
    Name: env
  - Env:
    - Key: TCL_MAJOR
      Value: 8.x
    Name: env
  - Env:
    - Key: TCL_VERSION
      Value: 8.2.1
    Name: env
  - Env:
    - Key: TCL_ROOTFS
      Value: '"rootfs64.gz"'
    - Key: TCL_ROOTFS_MD5
      Value: '"b4991d3c07b88649b61616f86f2f079f"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/tce-load.patch
    - files/udhcpc.patch
    - /tcl-patches/
  - CmdLine:
    - "for mirror in $TCL_MIRRORS; do \t\tif \t\t\t{ \t\t\t\twget -O /rootfs.gz \"$mirror/$TCL_MAJOR/x86_64/archive/$TCL_VERSION/distribution_files/$TCL_ROOTFS\"
      \t\t\t\t\t|| wget -O /rootfs.gz \"$mirror/$TCL_MAJOR/x86_64/release/distribution_files/$TCL_ROOTFS\"
      \t\t\t; } && echo \"$TCL_ROOTFS_MD5 */rootfs.gz\" | md5sum -c - \t\t; then \t\t\tbreak;
      \t\tfi; \tdone; \techo \"$TCL_ROOTFS_MD5 */rootfs.gz\" | md5sum -c -; \tzcat
      /rootfs.gz | cpio \t\t--extract \t\t--make-directories \t\t--no-absolute-filenames
      \t; \trm /rootfs.gz; \t\tfor patch in /tcl-patches/*.patch; do \t\tpatch \t\t\t--input
      \"$patch\" \t\t\t--strip 1 \t\t\t--verbose \t\t; \tdone; \t\t{ \t\techo '# https://1.1.1.1/';
      \t\techo 'nameserver 1.1.1.1'; \t\techo 'nameserver 1.0.0.1'; \t\techo; \t\techo
      '# https://developers.google.com/speed/public-dns/'; \t\techo 'nameserver 8.8.8.8';
      \t\techo 'nameserver 8.8.4.4'; \t} > etc/resolv.conf; \tcp etc/resolv.conf etc/resolv.conf.b2d;
      \t{ \t\techo '#!/usr/bin/env bash'; \t\techo 'set -Eeuo pipefail'; \t\techo
      \"cd '$PWD'\"; \t\techo 'cp -T etc/resolv.conf etc/resolv.conf.bak'; \t\techo
      'cp -T /etc/resolv.conf etc/resolv.conf'; \t\techo 'cp -T /proc/cpuinfo proc/cpuinfo
      2>/dev/null || :'; \t\techo 'trap \"mv -T etc/resolv.conf.bak etc/resolv.conf
      || :; rm proc/cpuinfo 2>/dev/null || :\" EXIT'; \t\techo 'env -i PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"
      TERM=\"$TERM\" chroot '\"'$PWD'\"' \"$@\"'; \t} > /usr/local/bin/tcl-chroot;
      \tchmod +x /usr/local/bin/tcl-chroot"
    Name: run
    PrependShell: true
  - CmdLine:
    - "tcl-chroot adduser \t\t-h /home/docker \t\t-g 'Docker' \t\t-s /bin/sh \t\t-G
      staff \t\t-D \t\t-u 1000 \t\tdocker \t; \techo 'docker:tcuser' | tcl-chroot
      chpasswd; \techo 'docker ALL = NOPASSWD: ALL' >> etc/sudoers; \tsed -i 's/USER=\"tc\"/USER=\"docker\"/g'
      etc/init.d/tc-* etc/init.d/services/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p proc; \ttouch proc/cmdline; \tmkdir -p tmp/tce/optional usr/local/tce.installed/optional;
      \tchown -R root:staff tmp/tce usr/local/tce.installed; \tchmod -R g+w tmp/tce;
      \tln -sT ../../tmp/tce etc/sysconfig/tcedir; \techo -n docker > etc/sysconfig/tcuser;
      \ttcl-chroot sh -c '. /etc/init.d/tc-functions && setupHome'"
    Name: run
    PrependShell: true
  - Env:
    - Key: TCL_PACKAGES
      Value: '"squashfs-tools.tcz liblzma.tcz lzo.tcz libzstd.tcz"'
    - Key: TCL_PACKAGE_MD5__squashfs_tools_tcz
      Value: '"a44331fa2117314e62267147b6876a49"'
    - Key: TCL_PACKAGE_MD5__liblzma_tcz
      Value: '"32b4958b9cb03d54d2d1d50df5bed699"'
    - Key: TCL_PACKAGE_MD5__lzo_tcz
      Value: '"c9a1260675774c50cea1a490978b100d"'
    - Key: TCL_PACKAGE_MD5__libzstd_tcz
      Value: '"a7f383473a4ced6c79e8b1a0cc9ad167"'
    Name: env
  - CmdLine:
    - "for package in $TCL_PACKAGES; do \t\teval 'md5=\"$TCL_PACKAGE_MD5__'\"$(echo
      \"$package\" | sed -r 's/[^a-zA-Z0-9]+/_/g')\"'\"'; \t\techo \"$md5 *$package\"
      > \"usr/local/tce.installed/optional/$package.md5.txt\"; \t\tfor mirror in $TCL_MIRRORS;
      do \t\t\tif \t\t\t\twget -O \"usr/local/tce.installed/optional/$package\" \"$mirror/$TCL_MAJOR/x86_64/tcz/$package\"
      \t\t\t\t&& ( cd usr/local/tce.installed/optional && md5sum -c \"$package.md5.txt\"
      ) \t\t\t; then \t\t\t\tbreak; \t\t\tfi; \t\tdone; \t\t( cd usr/local/tce.installed/optional
      && md5sum -c \"$package.md5.txt\" ); \t\tunsquashfs -dest . -force \"usr/local/tce.installed/optional/$package\";
      \t\ttouch \"usr/local/tce.installed/${package%.tcz}\"; \t\ttouch \"usr/local/tce.installed/optional/$package.dep\";
      \tdone; \t\ttcl-chroot ldconfig; \tfor script in usr/local/tce.installed/*;
      do \t\t[ -f \"$script\" ] || continue; \t\t[ -x \"$script\" ] || continue; \t\ttcl-chroot
      \"$script\"; \tdone; \t\t{ \t\techo '#!/bin/bash -Eeux'; \t\techo 'tcl-chroot
      su -c \"tce-load -wicl \\\"\\$@\\\"\" docker -- - \"$@\"'; \t} > /usr/local/bin/tcl-tce-load;
      \tchmod +x /usr/local/bin/tcl-tce-load"
    Name: run
    PrependShell: true
  - CmdLine:
    - "tcl-tce-load bash; \ttcl-chroot bash --version; \trm -vf \t\thome/docker/.ashrc
      \t\thome/docker/.bashrc \t\thome/docker/.profile \t\troot/.ashrc \t\troot/.bashrc
      \t\troot/.profile \t; \techo 'source /etc/profile' > home/docker/.profile; \techo
      'source /etc/profile' > root/.profile; \tsed -ri '/^(docker|root):/ s!:[^:]*$!:/bin/bash!'
      etc/passwd; \tgrep -E '^root:' etc/passwd | grep bash; \tgrep -E '^docker:'
      etc/passwd | grep bash; \tgrep '\\\\#' etc/profile; \techo 'PS1='\"'\"'\\[\\e[1;32m\\]\\u@\\h\\[\\e[0m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0m\\]\\$
      '\"'\"'' > etc/profile.d/boot2docker-ps1.sh; \tsource etc/profile.d/boot2docker-ps1.sh;
      \t[ \"$PS1\" = '\\[\\e[1;32m\\]\\u@\\h\\[\\e[0m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0m\\]\\$
      ' ]"
    Name: run
    PrependShell: true
  - Env:
    - Key: LINUX_GPG_KEYS
      Value: "ABAF11C65A2970B130ABE3C479BE3E4300411886 \t\t647F28654894E3BD457199BE38DBBDC86092693E"
    Name: env
  - Env:
    - Key: LINUX_VERSION
      Value: 4.14.141
    Name: env
  - CmdLine:
    - "wget -O /linux.tar.xz \"https://cdn.kernel.org/pub/linux/kernel/v${LINUX_VERSION%%.*}.x/linux-${LINUX_VERSION}.tar.xz\";
      \twget -O /linux.tar.asc \"https://cdn.kernel.org/pub/linux/kernel/v${LINUX_VERSION%%.*}.x/linux-${LINUX_VERSION}.tar.sign\";
      \t\txz --decompress /linux.tar.xz; \t[ -f /linux.tar ] && [ ! -f /linux.tar.xz
      ]; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tfor key in $LINUX_GPG_KEYS; do \t\tfor
      mirror in \t\t\tha.pool.sks-keyservers.net \t\t\tpgp.mit.edu \t\t\thkp://p80.pool.sks-keyservers.net:80
      \t\t\tipv4.pool.sks-keyservers.net \t\t\tkeyserver.ubuntu.com \t\t\thkp://keyserver.ubuntu.com:80
      \t\t; do \t\t\tif gpg --batch --verbose --keyserver \"$mirror\" --keyserver-options
      timeout=5 --recv-keys \"$key\"; then \t\t\t\tbreak; \t\t\tfi; \t\tdone; \t\tgpg
      --batch --fingerprint \"$key\"; \tdone; \tgpg --batch --verify /linux.tar.asc
      /linux.tar; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\"; \t\ttar --extract
      --file /linux.tar --directory /usr/src; \trm /linux.tar /linux.tar.asc; \tln
      -sT \"linux-$LINUX_VERSION\" /usr/src/linux; \t[ -d /usr/src/linux ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo '#!/usr/bin/env bash'; \t\techo 'set -Eeuo pipefail'; \t\techo 'while
      [ \"$#\" -gt 0 ]; do'; \t\techo 'conf=\"${1%%=*}\"; shift'; \t\techo 'conf=\"${conf#CONFIG_}\"';
      \t\techo 'find /usr/src/linux/ \t\t\t-name Kconfig \t\t\t-exec awk -v conf=\"$conf\"
      '\"'\"' \t\t\t\t$1 ~ /^(menu)?config$/ && $2 == conf { \t\t\t\t\tyes = 1; \t\t\t\t\tprintf
      \"-- %s:%s --\\n\", FILENAME, FNR; \t\t\t\t\tprint; \t\t\t\t\tnext; \t\t\t\t}
      \t\t\t\t$1 ~ /^(end)?((menu)?config|choice|comment|menu|if|source)$/ { yes =
      0; next } \t\t\t\tyes { print; next } \t\t\t'\"'\"' \"{}\" + \t\t'; \t\techo
      'done'; \t} > /usr/local/bin/linux-kconfig-info; \tchmod +x /usr/local/bin/linux-kconfig-info;
      \tlinux-kconfig-info CGROUPS"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/kernel-config.d
    - /kernel-config.d
  - CmdLine:
    - "setConfs=\"$(grep -vEh '^[#-]' /kernel-config.d/* | sort -u)\"; \tunsetConfs=\"$(sed
      -n 's/^-//p' /kernel-config.d/* | sort -u)\"; \tIFS=$'\\n'; \tsetConfs=( $setConfs
      ); \tunsetConfs=( $unsetConfs ); \tunset IFS; \t\tmake -C /usr/src/linux \t\tdefconfig
      \t\tkvmconfig \t\txenconfig \t\t> /dev/null; \t\t( \t\tset +x; \t\tfor conf
      in \"${unsetConfs[@]}\"; do \t\t\tsed -i -e \"s!^$conf=.*\\$!# $conf is not
      set!\" /usr/src/linux/.config; \t\tdone; \t\tfor confV in \"${setConfs[@]}\";
      do \t\t\tconf=\"${confV%%=*}\"; \t\t\tsed -ri -e \"s!^($conf=.*|# $conf is not
      set)\\$!$confV!\" /usr/src/linux/.config; \t\t\tif ! grep -q \"^$confV\\$\"
      /usr/src/linux/.config; then \t\t\t\techo \"$confV\" >> /usr/src/linux/.config;
      \t\t\tfi; \t\tdone; \t); \tmake -C /usr/src/linux olddefconfig; \tset +x; \tret=;
      \tfor conf in \"${unsetConfs[@]}\"; do \t\tif grep \"^$conf=\" /usr/src/linux/.config;
      then \t\t\techo \"$conf is set!\"; \t\t\tret=1; \t\tfi; \tdone; \tfor confV
      in \"${setConfs[@]}\"; do \t\tif ! grep -q \"^$confV\\$\" /usr/src/linux/.config;
      then \t\t\tkconfig=\"$(linux-kconfig-info \"$confV\")\"; \t\t\techo >&2; \t\t\techo
      >&2 \"'$confV' is not set:\"; \t\t\techo >&2; \t\t\techo >&2 \"$kconfig\"; \t\t\techo
      >&2; \t\t\tfor dep in $(awk '$1 == \"depends\" && $2 == \"on\" { $1 = \"\";
      $2 = \"\"; gsub(/[^a-zA-Z0-9_-]+/, \" \"); print }' <<<\"$kconfig\"); do \t\t\t\tgrep
      >&2 -E \"^CONFIG_$dep=|^# CONFIG_$dep is not set$\" /usr/src/linux/.config ||
      :; \t\t\tdone; \t\t\techo >&2; \t\t\tret=1; \t\tfi; \tdone; \t[ -z \"$ret\"
      ] || exit \"$ret\""
    Name: run
    PrependShell: true
  - CmdLine:
    - "make -C /usr/src/linux -j \"$(nproc)\" bzImage modules; \tmake -C /usr/src/linux
      INSTALL_MOD_PATH=\"$PWD\" modules_install"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /tmp/iso/boot; \tcp -vLT /usr/src/linux/arch/x86_64/boot/bzImage /tmp/iso/boot/vmlinuz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "tcl-tce-load \t\tacpid \t\tbash-completion \t\tca-certificates \t\tcurl \t\te2fsprogs
      \t\tgit \t\tiproute2 \t\tiptables \t\tncurses-terminfo \t\tnfs-utils \t\topenssh
      \t\topenssl \t\tparted \t\tprocps \t\trsync \t\ttar \t\tutil-linux \t\txz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo 'for i in /usr/local/etc/profile.d/*.sh ; do if [ -r \"$i\" ]; then .
      $i; fi; done' > etc/profile.d/usr-local-etc-profile-d.sh; \tln -svT ../usr/local/etc/ssl
      etc/ssl; \ttcl-chroot sh -eux -c 'addgroup -S docker && addgroup docker docker'"
    Name: run
    PrependShell: true
  - CmdLine:
    - make -C /usr/src/linux INSTALL_HDR_PATH=/usr/local headers_install
    Name: run
    PrependShell: true
  - Env:
    - Key: HAVEGED_VERSION
      Value: 1.9.4
    Name: env
  - CmdLine:
    - "wget -O /haveged.tgz \"https://github.com/jirka-h/haveged/archive/${HAVEGED_VERSION}.tar.gz\";
      \tmkdir /usr/src/haveged; \ttar --extract --file /haveged.tgz --directory /usr/src/haveged
      --strip-components 1; \trm /haveged.tgz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "( cd /usr/src/haveged && ./configure LDFLAGS='-static --static' ); \tmake -C
      /usr/src/haveged/src -j \"$(nproc)\" haveged; \tcp -v /usr/src/haveged/src/haveged
      usr/local/sbin/; \tstrip usr/local/sbin/haveged; \ttcl-chroot haveged --run
      1"
    Name: run
    PrependShell: true
  - Env:
    - Key: VBOX_VERSION
      Value: 5.2.32
    Name: env
  - Env:
    - Key: VBOX_SHA256
      Value: 4311c7408a3410e6a33264a9062347d9eec04f58339a49f0a60488c0cabc8996
    Name: env
  - CmdLine:
    - "wget -O /vbox.iso \"https://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso\";
      \techo \"$VBOX_SHA256 */vbox.iso\" | sha256sum -c -; \t7z x -o/ /vbox.iso VBoxLinuxAdditions.run;
      \trm /vbox.iso; \tsh /VBoxLinuxAdditions.run --noexec --target /usr/src/vbox;
      \tmkdir /usr/src/vbox/amd64; \t7z x -so /usr/src/vbox/VBoxGuestAdditions-amd64.tar.bz2
      | tar --extract --directory /usr/src/vbox/amd64; \trm /usr/src/vbox/VBoxGuestAdditions-*.tar.bz2;
      \tln -sT \"vboxguest-$VBOX_VERSION\" /usr/src/vbox/amd64/src/vboxguest"
    Name: run
    PrependShell: true
  - CmdLine:
    - "make -C /usr/src/vbox/amd64/src/vboxguest -j \"$(nproc)\" \t\tKERN_DIR='/usr/src/linux'
      \t\tKERN_VER=\"$(< /usr/src/linux/include/config/kernel.release)\" \t\tvboxguest
      vboxsf \t; \tcp -v /usr/src/vbox/amd64/src/vboxguest/*.ko lib/modules/*/; \tln
      -sT lib lib64; \tcp -v /usr/src/vbox/amd64/other/mount.vboxsf /usr/src/vbox/amd64/sbin/VBoxService
      sbin/; \tcp -v /usr/src/vbox/amd64/bin/VBoxControl bin/"
    Name: run
    PrependShell: true
  - CmdLine:
    - "tcl-tce-load open-vm-tools; \ttcl-chroot vmhgfs-fuse --version; \ttcl-chroot
      vmtoolsd --version"
    Name: run
    PrependShell: true
  - Env:
    - Key: PARALLELS_VERSION
      Value: 13.3.0-43321
    Name: env
  - CmdLine:
    - "wget -O /parallels.tgz \"https://download.parallels.com/desktop/v${PARALLELS_VERSION%%.*}/$PARALLELS_VERSION/ParallelsTools-$PARALLELS_VERSION-boot2docker.tar.gz\";
      \tmkdir /usr/src/parallels; \ttar --extract --file /parallels.tgz --directory
      /usr/src/parallels --strip-components 1; \trm /parallels.tgz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cp -vr /usr/src/parallels/tools/* ./; \tmake -C /usr/src/parallels/kmods -f
      Makefile.kmods -j \"$(nproc)\" installme \t\tSRC='/usr/src/linux' \t\tKERNEL_DIR='/usr/src/linux'
      \t\tKVER=\"$(< /usr/src/linux/include/config/kernel.release)\" \t\tPRL_FREEZE_SKIP=1
      \t; \tfind /usr/src/parallels/kmods -name '*.ko' -exec cp -v '{}' lib/modules/*/
      ';'; \ttcl-chroot prltoolsd -V"
    Name: run
    PrependShell: true
  - Env:
    - Key: XEN_VERSION
      Value: 7.13.0
    Name: env
  - CmdLine:
    - "wget -O /xen.tgz \"https://github.com/xenserver/xe-guest-utilities/archive/v$XEN_VERSION.tar.gz\";
      \tmkdir /usr/src/xen; \ttar --extract --file /xen.tgz --directory /usr/src/xen
      --strip-components 1; \trm /xen.tgz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "make -C /usr/src/xen -j \"$(nproc)\" PRODUCT_VERSION=\"$XEN_VERSION\" RELEASE='boot2docker';
      \ttar --extract --file \"/usr/src/xen/build/dist/xe-guest-utilities_$XEN_VERSION-boot2docker_x86_64.tgz\";
      \ttcl-chroot xenstore || [ \"$?\" = 1 ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - "make -C /usr/src/linux/tools/hv hv_kvp_daemon; \tcp /usr/src/linux/tools/hv/hv_kvp_daemon
      usr/local/sbin/; \ttcl-chroot hv_kvp_daemon --help || [ \"$?\" = 1 ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - tcl-chroot depmod "$(< /usr/src/linux/include/config/kernel.release)"
    Name: run
    PrependShell: true
  - Env:
    - Key: CGROUPFS_MOUNT_VERSION
      Value: "1.4"
    Name: env
  - CmdLine:
    - "wget -O usr/local/sbin/cgroupfs-mount \"https://github.com/tianon/cgroupfs-mount/raw/${CGROUPFS_MOUNT_VERSION}/cgroupfs-mount\";
      \tchmod +x usr/local/sbin/cgroupfs-mount; \ttcl-chroot cgroupfs-mount"
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_VERSION
      Value: 18.09.9
    Name: env
  - CmdLine:
    - "DOCKER_CHANNEL='edge'; \tcase \"$DOCKER_VERSION\" in \t\t*-rc* | *-beta* |
      *-tp* ) DOCKER_CHANNEL='test' ;; \tesac; \t\twget -O /docker.tgz \"https://download.docker.com/linux/static/$DOCKER_CHANNEL/x86_64/docker-$DOCKER_VERSION.tgz\";
      \ttar -zxvf /docker.tgz -C \"usr/local/bin\" --strip-components=1; \trm /docker.tgz;
      \t\twget -O usr/local/share/bash-completion/completions/docker \"https://github.com/docker/docker-ce/raw/v${DOCKER_VERSION}/components/cli/contrib/completion/bash/docker\";
      \t\tfor binary in \t\tcontainerd \t\tctr \t\tdocker \t\tdocker-init \t\tdockerd
      \t\trunc \t; do \t\tchroot . \"$binary\" --version; \tdone"
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo 'NAME=Boot2Docker'; \t\techo \"VERSION=$DOCKER_VERSION\"; \t\techo
      'ID=boot2docker'; \t\techo 'ID_LIKE=tcl'; \t\techo \"VERSION_ID=$DOCKER_VERSION\";
      \t\techo \"PRETTY_NAME=\\\"Boot2Docker $DOCKER_VERSION (TCL $TCL_VERSION)\\\"\";
      \t\techo 'ANSI_COLOR=\"1;34\"'; \t\techo 'HOME_URL=\"https://github.com/boot2docker/boot2docker\"';
      \t\techo 'SUPPORT_URL=\"https://blog.docker.com/2016/11/introducing-docker-community-directory-docker-community-slack/\"';
      \t\techo 'BUG_REPORT_URL=\"https://github.com/boot2docker/boot2docker/issues\"';
      \t} > etc/os-release; \tsed -i 's/HOSTNAME=\"box\"/HOSTNAME=\"boot2docker\"/g'
      usr/bin/sethostname; \ttcl-chroot sethostname; \t[ \"$(< etc/hostname)\" = 'boot2docker'
      ]; \tfor num in 0 1 2 3; do \t\techo \"server $num.boot2docker.pool.ntp.org\";
      \tdone > etc/ntp.conf; \trm -v etc/sysconfig/ntpserver"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/forgiving-getty
    - files/shutdown
    - ./usr/local/sbin/
  - CmdLine:
    - "awk -F: ' \t\t$1 == \"tty1\" { \t\t\tprint \"tty1::respawn:/usr/local/sbin/forgiving-getty
      tty1\"; \t\t\tprint \"ttyS0::respawn:/usr/local/sbin/forgiving-getty ttyS0\";
      \t\t\tnext; \t\t} \t\t$1 ~ /^#?tty/ { next } \t\t{ print } \t' etc/inittab >
      etc/inittab.new; \tmv etc/inittab.new etc/inittab; \tgrep forgiving-getty etc/inittab;
      \t{ \t\techo '#!/bin/sh'; \t\techo 'user=\"$(cat /etc/sysconfig/tcuser 2>/dev/null)\"';
      \t\techo 'exec login -f \"${user:-docker}\"'; \t} > usr/local/sbin/autologin;
      \tchmod +x usr/local/sbin/autologin"
    Name: run
    PrependShell: true
  - CmdLine:
    - "[ ! -f usr/local/etc/sshd_config ]; \tsed -r \t\t-e 's/^#(UseDNS[[:space:]])/\\1/'
      \t\t-e 's/^#(PermitUserEnvironment)[[:space:]].*$/\\1 yes/' \t\tusr/local/etc/ssh/sshd_config.orig
      \t\t> usr/local/etc/ssh/sshd_config; \tgrep '^UseDNS no$' usr/local/etc/ssh/sshd_config;
      \tgrep '^PermitUserEnvironment yes$' usr/local/etc/ssh/sshd_config; \tmkdir
      -p home/docker/.ssh; \techo 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
      > home/docker/.ssh/environment; \tln -sT ../usr/local/etc/acpi etc/acpi; \t[
      -z \"$(ls -A etc/acpi/events)\" ]; \t{ echo 'event=button/power'; echo 'action=/usr/bin/env
      poweroff'; } > etc/acpi/events/power; \techo 'UTC' > etc/timezone; \tcp -vL
      /usr/share/zoneinfo/UTC etc/localtime; \ttcl-chroot addgroup -S dockremap; \ttcl-chroot
      adduser -S -G dockremap dockremap; \techo 'dockremap:165536:65536' | tee etc/subuid
      | tee etc/subgid"
    Name: run
    PrependShell: true
  - CmdLine:
    - "savedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install
      -y --no-install-recommends \t\tisolinux \t\tsyslinux-common \t; \trm -rf /var/lib/apt/lists/*;
      \tmkdir -p /tmp/iso/isolinux; \tcp -v \t\t/usr/lib/ISOLINUX/isolinux.bin \t\t/usr/lib/syslinux/modules/bios/ldlinux.c32
      \t\t/usr/lib/syslinux/modules/bios/libutil.c32 \t\t/usr/lib/syslinux/modules/bios/menu.c32
      \t\t/tmp/iso/isolinux/ \t; \tcp -v /usr/lib/ISOLINUX/isohdpfx.bin /tmp/; \tapt-mark
      auto '.*' > /dev/null; \tapt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove
      -o APT::AutoRemove::RecommendsImportant=false"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/isolinux.cfg
    - /tmp/iso/isolinux/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/init.d/*
    - ./etc/init.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/bootsync.sh
    - ./opt/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/make-b2d-iso.sh
    - /usr/local/bin/
  - CmdLine:
    - "time make-b2d-iso.sh; \tdu -hs /tmp/boot2docker.iso"
    Name: run
    PrependShell: true
  - CmdLine:
    - sh
    - -c
    - '[ -t 1 ] && exec bash || exec cat /tmp/boot2docker.iso'
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stretch-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch-slim
