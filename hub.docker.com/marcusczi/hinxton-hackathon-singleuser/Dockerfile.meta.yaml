MetaArgs: null
Stages:
- BaseName: ubuntu:zesty-20170703
  Commands:
  - Name: user
    User: root
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update  && apt-get install -y wget bzip2 ca-certificates sudo locales
      fonts-liberation python3 python3-pip  && apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini
      &&     echo "1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0
      *tini" | sha256sum -c - &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Env:
    - Key: NB_USER
      Value: jovyan
    Name: env
  - Env:
    - Key: NB_UID
      Value: "1000"
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - useradd -m -s /bin/bash -N -u $NB_UID $NB_USER
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - pip3 install 'jupyterhub==0.7.2' 'jupyterlab==0.25.2' 'notebook==5.0.0'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get update  && apt-get install -y --no-install-recommends     build-essential     ed     emacs     git     inkscape     jed     less     libsm6     libxext-dev     libxrender1     lmodern     pandoc     python-dev     texlive-fonts-extra     texlive-fonts-recommended     texlive-generic-recommended     texlive-latex-base     texlive-latex-extra     texlive-xetex     vim     unzip  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update  && apt-get install -y --no-install-recommends     fonts-dejavu     gfortran     gcc  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update  && apt-get install -y software-properties-common python-software-properties  &&
      add-apt-repository ppa:marutter/rrutter  && apt-get update  && apt-get install
      -y r-base r-base-dev libssl-dev libcurl4-openssl-dev libxml2-dev zlib1g-dev  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - CmdLine:
    - echo "options(repos = c(CRAN = \"https://cran.rstudio.com/\"), download.file.method
      = \"libcurl\")" >> .Rprofile  && echo ".libPaths( c( \"~/.R/lib\", .libPaths())
      )" >> .Rprofile  && mkdir -p .R/lib
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:/home/jovyan/.local/bin"'
    Name: env
  - CmdLine:
    - R -e "install.packages('devtools')"  && R -e "library(devtools); devtools::install_github('IRkernel/IRkernel');
      IRkernel::installspec()"  && R -e "install.packages('plyr')"  && R -e "install.packages('tidyverse')"  &&
      R -e "install.packages('shiny')"  && R -e "install.packages('rmarkdown')"  &&
      R -e "install.packages('forecast')"  && R -e "install.packages('RSQLite')"  &&
      R -e "install.packages('reshape2')"  && R -e "install.packages('nycflights13')"  &&
      R -e "install.packages('caret')"  && R -e "install.packages('RCurl')"  && R
      -e "install.packages('crayon')"  && R -e "install.packages('randomForest')"
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get update  && apt-get install -y --no-install-recommends     libapparmor1     libedit2     psmisc     lsb-release  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: RSTUDIO_PKG
      Value: rstudio-server-1.0.153-amd64.deb
    Name: env
  - CmdLine:
    - wget -q http://download2.rstudio.org/${RSTUDIO_PKG}
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i ${RSTUDIO_PKG}
    Name: run
    PrependShell: true
  - CmdLine:
    - rm ${RSTUDIO_PKG}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/etc && chmod a+wx /usr/etc && mkdir -p /usr/share/jupyter && chmod
      a+wx /usr/share/jupyter
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - CmdLine:
    - pip3 install git+https://github.com/ryanlovett/nbserverproxy
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter serverextension enable --py nbserverproxy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install git+https://github.com/jupyterhub/nbserverproxy.git
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter serverextension enable --sys-prefix --py nbserverproxy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-deps git+https://github.com/jupyterhub/nbrsessionproxy.git
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter serverextension enable --sys-prefix --py nbrsessionproxy
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension install    --sys-prefix --py nbrsessionproxy
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable     --sys-prefix --py nbrsessionproxy
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:/usr/lib/rstudio-server/bin"'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"/usr/lib/R/lib:/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/amd64/server"'
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - apt-get update  && apt-get install -y     pkg-config     libfreetype6-dev     libopenblas-dev     libav-tools     python3-h5py     python3-matplotlib     python3-numpy     python3-scipy     python3-pandas     python3-sklearn     python3-sklearn-pandas     python3-seaborn     python3-patsy     python3-sympy     cython3     python3-sqlalchemy  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install     ipython     ipywidgets     numexpr     statsmodels     cloudpickle     dill     numba     bokeh     vincent     beautifulsoup4     xlrd
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable --py widgetsnbextension --sys-prefix
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update  && apt-get install -y     python-pip     python-h5py     python-matplotlib     python-numpy     python-scipy     python-pandas     python-sklearn     python-sklearn-pandas     python-seaborn     python-patsy     python-sympy     cython     python-sqlalchemy  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install     ipython     ipykernel     numexpr     statsmodels     cloudpickle     dill     numba     bokeh     vincent     beautifulsoup4     xlrd
    Name: run
    PrependShell: true
  - Env:
    - Key: XDG_CACHE_HOME
      Value: /home/$NB_USER/.cache/
    Name: env
  - CmdLine:
    - MPLBACKEND=Agg python -c "import matplotlib.pyplot"
    Name: run
    PrependShell: true
  - CmdLine:
    - python2 -m ipykernel install --user
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U pip  && pip3 install -U pip  && pip install tensorflow  && pip3
      install tensorflow
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start-notebook.sh
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-notebook.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-singleuser.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - notebook
    - /etc/sudoers.d/
  - CmdLine:
    - mkdir -p /etc/jupyter && chown -R $NB_USER:users /etc/jupyter/
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  From:
    Image: ubuntu:zesty-20170703
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:zesty-20170703
