MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: Marc "marc.segura@scality.com"
    Name: maintainer
  - Env:
    - Key: node
      Value: 4.4.1
    Name: env
  - Env:
    - Key: BRANCH
      Value: master
    Name: env
  - Env:
    - Key: OWNER
      Value: GiorgioRegni
    Name: env
  - Env:
    - Key: REPO
      Value: Docker-images
    Name: env
  - Env:
    - Key: TERM
      Value: '"xterm-256color"'
    Name: env
  - CmdLine:
    - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq -y install build-essential telnet iperf tcpdump atop sysstat  gcc
      g++ git python-software-properties software-properties-common sudo supervisor
      python-setuptools python-dev build-essential wget curl default-jre maven
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq -y install valgrind
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - http://nodejs.org/dist/v${node}/node-v${node}-linux-x64.tar.gz
    - /
  - CmdLine:
    - cd /usr && tar xzf /node-v${node}-linux-x64.tar.gz --strip 1 && rm /node-v${node}-linux-x64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - npm -g install npm
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/requiretty/\!requiretty/g" /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "ALL            ALL = (ALL) NOPASSWD: ALL" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq -y install apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c "echo deb https://apt.dockerproject.org/repo ubuntu-trusty main > /etc/apt/sources.list.d/docker.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq -y install docker-engine
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && curl -O -L https://raw.githubusercontent.com/${OWNER}/${REPO}/${BRANCH}/scality/ironman-base/deployment/hosts.bash
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && curl -O -L https://raw.githubusercontent.com/${OWNER}/${REPO}/${BRANCH}/scality/ironman-base/deployment/hostsd.bash
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+rx /root/hosts.bash  /root/hostsd.bash
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/run
  - CmdLine:
    - useradd -ms /bin/bash ironman
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo usermod -aG docker ironman
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y "deb http://ppa.launchpad.net/bpaquet/zeromq4-trusty/ubuntu
      trusty main"
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y  ppa:bpaquet/zeromq4-trusty
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq -y install libzmq1 libzmq-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y -q default-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y -q time
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y -q vim nano
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/docker/compose/releases/download/1.5.1/docker-compose-`uname
      -s`-`uname -m` > /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - Name: user
    User: ironman
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
