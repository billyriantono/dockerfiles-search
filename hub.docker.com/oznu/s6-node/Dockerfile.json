{
  "MetaArgs": [
    {
      "Key": "BASE_IMAGE",
      "DefaultValue": null,
      "ProvidedValue": null,
      "Value": null
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "${BASE_IMAGE:-library/alpine}:3.10",
      "SourceCode": "FROM ${BASE_IMAGE:-library/alpine}:3.10",
      "Platform": "",
      "From": {
        "Image": "${BASE_IMAGE:-library/alpine}:3.10"
      },
      "Commands": [
        {
          "Key": "QEMU_ARCH",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "QEMU_ARCH",
              "Value": "${QEMU_ARCH:-x86_64}"
            },
            {
              "Key": "S6_KEEP_ENV",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "qemu/qemu-${QEMU_ARCH}-static",
            "/usr/bin/"
          ]
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 apk add --no-cache libgcc libstdc++ curl curl-dev coreutils tzdata shadow libstdc++ paxctl logrotate   \u0026\u0026 case \"${QEMU_ARCH}\" in     x86_64) S6_ARCH='amd64';;     arm) S6_ARCH='armhf';;     aarch64) S6_ARCH='aarch64';;     *) echo \"unsupported architecture\"; exit 1 ;;   esac   \u0026\u0026 curl -L -s https://github.com/just-containers/s6-overlay/releases/download/v1.21.1.1/s6-overlay-${S6_ARCH}.tar.gz | tar xvzf - -C /   \u0026\u0026 groupmod -g 911 users   \u0026\u0026 useradd -u 911 -U -d /config -s /bin/false abc   \u0026\u0026 usermod -G users abc   \u0026\u0026 mkdir -p /app /config /defaults   \u0026\u0026 apk del --purge   \u0026\u0026 rm -rf /tmp/*   \u0026\u0026 sed -i \"s#/var/log/messages {}.*# #g\" /etc/logrotate.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "12.14.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 curl -fLO https://github.com/oznu/alpine-node/releases/download/${NODE_VERSION}/node-v${NODE_VERSION}-linux-${QEMU_ARCH}-alpine.tar.gz   \u0026\u0026 tar -xzf node-v${NODE_VERSION}-linux-${QEMU_ARCH}-alpine.tar.gz -C /usr --strip-components=1 --no-same-owner   \u0026\u0026 rm -rf node-v${NODE_VERSION}-linux-${QEMU_ARCH}-alpine.tar.gz   \u0026\u0026 paxctl -cm `which node`   \u0026\u0026 npm set prefix /usr/local   \u0026\u0026 npm config set unsafe-perm true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "1.19.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 curl -fSLO \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   \u0026\u0026 mkdir -p /opt/yarn   \u0026\u0026 tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1   \u0026\u0026 ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn   \u0026\u0026 ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg   \u0026\u0026 rm yarn-v$YARN_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}