MetaArgs: null
Stages:
- As: unms
  BaseName: ubnt/unms:0.13.3
  Commands: null
  From:
    Image: ubnt/unms:0.13.3
  Name: unms
  Platform: ""
  SourceCode: FROM ubnt/unms:0.13.3 as unms
- As: unms-netflow
  BaseName: ubnt/unms-netflow:0.13.3
  Commands: null
  From:
    Image: ubnt/unms-netflow:0.13.3
  Name: unms-netflow
  Platform: ""
  SourceCode: FROM ubnt/unms-netflow:0.13.3 as unms-netflow
- BaseName: oznu/s6-node:10.15.1-debian-amd64
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - set -x   && echo "deb http://ftp.debian.org/debian stretch-backports main" >>
      /etc/apt/sources.list   && apt-get update   && mkdir -p /usr/share/man/man1
      /usr/share/man/man7   && mkdir -p /usr/share/man/man7   && apt-get install -y
      build-essential rabbitmq-server redis-server     postgresql-9.6 postgresql-contrib-9.6
      postgresql-client-9.6 libpq-dev     gzip bash vim openssl libcap-dev dumb-init
      sudo gettext zlibc zlib1g zlib1g-dev     iproute2 netcat wget libpcre3 libpcre3-dev
      libssl-dev   && apt-get install -y certbot -t stretch-backports
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/app/unms
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/app/unms
  - Chown: ""
    From: unms
    Name: copy
    SourcesAndDest:
    - /home/app/unms
    - /home/app/unms
  - CmdLine:
    - rm -rf node_modules     && JOBS=$(nproc) npm install sharp@latest     && JOBS=$(nproc)
      npm install --production     && mkdir -p -m 777 "$HOME/unms/public/site-images"     &&
      mkdir -p -m 777 "$HOME/unms/data/config-backups"     && mkdir -p -m 777 "$HOME/unms/data/unms-backups"     &&
      mkdir -p -m 777 "$HOME/unms/data/import"
    Name: run
    PrependShell: true
  - Chown: ""
    From: unms
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - CmdLine:
    - chmod +x /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/app/netflow
    Name: run
    PrependShell: true
  - Chown: ""
    From: unms-netflow
    Name: copy
    SourcesAndDest:
    - /home/app
    - /home/app/netflow
  - CmdLine:
    - cd /home/app/netflow   && rm -rf node_modules   && JOBS=$(nproc) npm install
      --production
    Name: run
    PrependShell: true
  - Env:
    - Key: NGINX_UID
      Value: "1000"
    - Key: NGINX_VERSION
      Value: nginx-1.12.2
    - Key: LUAJIT_VERSION
      Value: 2.1.0-beta3
    - Key: LUA_NGINX_VERSION
      Value: 0.10.13
    Name: env
  - CmdLine:
    - 'set -x     && mkdir -p /tmp/src && cd /tmp/src     && wget -q http://nginx.org/download/${NGINX_VERSION}.tar.gz
      -O nginx.tar.gz     && wget -q https://github.com/openresty/lua-nginx-module/archive/v${LUA_NGINX_VERSION}.tar.gz
      -O lua-nginx-module.tar.gz     && wget -q https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz
      -O ndk.tar.gz     && wget -q http://luajit.org/download/LuaJIT-${LUAJIT_VERSION}.tar.gz
      -O luajit.tar.gz     && tar -zxvf lua-nginx-module.tar.gz     && tar -zxvf ndk.tar.gz     &&
      tar -zxvf luajit.tar.gz     && tar -zxvf nginx.tar.gz     && cd /tmp/src/LuaJIT-${LUAJIT_VERSION}
      && make amalg PREFIX=''/usr'' && make install PREFIX=''/usr''     && export
      LUAJIT_LIB=/usr/lib/libluajit-5.1.so && export LUAJIT_INC=/usr/include/luajit-2.1     &&
      cd /tmp/src/${NGINX_VERSION} && ./configure         --with-cc-opt=''-g -O2 -fPIE
      -fstack-protector-strong -Wformat -Werror=format-security -fPIC -Wdate-time
      -D_FORTIFY_SOURCE=2''         --with-ld-opt=''-Wl,-Bsymbolic-functions -fPIE
      -pie -Wl,-z,relro -Wl,-z,now -fPIC''         --with-pcre-jit         --with-threads         --add-module=/tmp/src/lua-nginx-module-${LUA_NGINX_VERSION}         --add-module=/tmp/src/ngx_devel_kit-0.3.0         --with-http_ssl_module         --with-http_realip_module         --with-http_gzip_static_module         --with-http_secure_link_module         --without-mail_pop3_module         --without-mail_imap_module         --without-http_upstream_ip_hash_module         --without-http_memcached_module         --without-http_auth_basic_module         --without-http_userid_module         --without-http_fastcgi_module         --without-http_uwsgi_module         --without-http_scgi_module         --prefix=/var/lib/nginx         --sbin-path=/usr/sbin/nginx         --conf-path=/etc/nginx/nginx.conf         --http-log-path=/dev/stdout         --error-log-path=/dev/stderr         --lock-path=/tmp/nginx.lock         --pid-path=/tmp/nginx.pid         --http-client-body-temp-path=/tmp/body         --http-proxy-temp-path=/tmp/proxy     &&
      make -j $(nproc)     && make install     && rm /usr/bin/luajit-${LUAJIT_VERSION}     &&
      rm -rf /tmp/src     && rm -rf /var/cache/apk/*     && echo "unms ALL=(ALL) NOPASSWD:
      /usr/sbin/nginx -s *" >> /etc/sudoers     && echo "unms ALL=(ALL) NOPASSWD:SETENV:
      /copy-user-certs.sh reload" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/Ubiquiti-App/UNMS/archive/v0.13.0.tar.gz
    - /tmp/unms.tar.gz
  - CmdLine:
    - cd /tmp     && tar -xzf unms.tar.gz     && cd UNMS-*/src/nginx     && cp entrypoint.sh
      refresh-certificate.sh fill-template.sh openssl.cnf *.conf.template /     &&
      mkdir -p /www/public     && cp -R public /www/     && chmod +x /entrypoint.sh
      /fill-template.sh /refresh-certificate.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s#/bin/sh#/bin/bash#g" /entrypoint.sh   && sed -i "s#adduser -D#adduser
      --disabled-password --gecos \"\"#g" /entrypoint.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/app/unms/node_modules/.bin:$PATH:/usr/lib/postgresql/9.6/bin
    - Key: PGDATA
      Value: /config/postgres
    - Key: POSTGRES_DB
      Value: unms
    - Key: QUIET_MODE
      Value: "0"
    - Key: WS_PORT
      Value: "443"
    - Key: PUBLIC_HTTPS_PORT
      Value: "443"
    - Key: PUBLIC_WS_PORT
      Value: "443"
    - Key: UNMS_NETFLOW_PORT
      Value: "2055"
    - Key: SECURE_LINK_SECRET
      Value: enigma
    - Key: SSL_CERT
      Value: '""'
    Name: env
  - Name: expose
    Ports:
    - 2055/udp
    - "443"
    - "80"
  - Name: volume
    Volumes:
    - /config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root
    - /
  From:
    Image: oznu/s6-node:10.15.1-debian-amd64
  Name: ""
  Platform: ""
  SourceCode: FROM oznu/s6-node:10.15.1-debian-amd64
