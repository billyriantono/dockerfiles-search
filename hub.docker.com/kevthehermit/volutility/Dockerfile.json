{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "kevthehermit (https://github.com/kevthehermit/VolUtility)",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "YARA_VERSION",
              "Value": "3.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSDEEP_VERSION",
              "Value": "2.13"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -yq  autoconf  automake  autopoint  curl  gettext  git  libimage-exiftool-perl  libtool  nano  pkg-config  python-dev  python-pip  sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927 \u0026\u0026 echo \"deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list \u0026\u0026 apt-get update \u0026\u0026 apt-get install -yq mongodb-org"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ~/tmp_build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~/tmp_build \u0026\u0026  curl -sSL https://github.com/plusvic/yara/archive/v$YARA_VERSION.tar.gz |  tar -xzC . \u0026\u0026  cd yara-$YARA_VERSION \u0026\u0026  bash build.sh \u0026\u0026  make install \u0026\u0026  cd yara-python \u0026\u0026  python setup.py build \u0026\u0026  python setup.py install \u0026\u0026  cd ../.. \u0026\u0026  rm -rf yara-$YARA_VERSION \u0026\u0026  ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~/tmp_build \u0026\u0026 curl -sSL http://sourceforge.net/projects/ssdeep/files/ssdeep-${SSDEEP_VERSION}/ssdeep-${SSDEEP_VERSION}.tar.gz/download |  tar -xzC .  \u0026\u0026  cd ssdeep-${SSDEEP_VERSION} \u0026\u0026  ./configure \u0026\u0026  make install \u0026\u0026  pip install pydeep \u0026\u0026  cd .. \u0026\u0026  rm -rf ssdeep-${SSDEEP_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~/tmp_build \u0026\u0026  curl -sSL http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz \u003e GeoLite2-City.mmdb.gz \u0026\u0026  gzip -d GeoLite2-City.mmdb.gz \u0026\u0026  mkdir /usr/share/GeoIP/ \u0026\u0026  mv GeoLite2-City.mmdb /usr/share/GeoIP/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~/tmp_build \u0026\u0026  git clone https://github.com/libyal/libpff.git \u0026\u0026 cd libpff/ \u0026\u0026  ./synclibs.sh \u0026\u0026  ./autogen.sh \u0026\u0026  ./configure --enable-python \u0026\u0026  make \u0026\u0026  make install \u0026\u0026  ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~/tmp_build \u0026\u0026 git clone https://github.com/volatilityfoundation/volatility.git \u0026\u0026  cd volatility \u0026\u0026  python setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r volutility \u0026\u0026  useradd -r -g volutility -d /home/volutility -s /sbin/nologin -c \"Volutility User\" volutility \u0026\u0026  usermod -a -G sudo volutility  \u0026\u0026  mkdir /home/volutility \u0026\u0026  chown -R volutility:volutility /home/volutility"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026  git clone https://github.com/kevthehermit/VolUtility.git \u0026\u0026  chown -R volutility:volutility /opt/VolUtility"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/VolUtility \u0026\u0026  pip install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf ~/tmp_build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get remove -yq  automake  autopoint  gettext  autoconf  gettext  pkg-config  libtool"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "volutility"
        },
        {
          "Name": "workdir",
          "Path": "/opt/VolUtility"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "start.sh"
          ]
        },
        {
          "CmdLine": [
            "mkdir ~/dbpath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 ~/dbpath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash /opt/VolUtility/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}