MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tdpkg-dev dpkg \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake
        \t\tpkgconf \t\tre2c"
    Name: env
  - CmdLine:
    - "apk add --no-cache \t\tca-certificates \t\tcurl \t\ttar \t\txz \t\topenssl"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \taddgroup -g 82 -S www-data; \tadduser -u 82 -D -S -G www-data www-data"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - "set -eux; \tmkdir -p \"$PHP_INI_DIR/conf.d\"; \t[ ! -d /var/www/html ]; \tmkdir
      -p /var/www/html; \tchown www-data:www-data /var/www/html; \tchmod 777 /var/www/html"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --disable-cgi
    Name: env
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3 0BD78B5F97500D450838F95DFE857D9A90D90EC1
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 5.6.40
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://www.php.net/get/php-5.6.40.tar.xz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"https://www.php.net/get/php-5.6.40.tar.xz.asc/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"1369a51eee3995d7fbd1c5342e5cc917760e276d561595b6052b21ace2656d1c"'
    - Key: PHP_MD5
      Value: '""'
    Name: env
  - CmdLine:
    - "set -eux; \t\tapk add --no-cache --virtual .fetch-deps gnupg; \t\tmkdir -p
      /usr/src; \tcd /usr/src; \t\tcurl -fsSL -o php.tar.xz \"$PHP_URL\"; \t\tif [
      -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum
      -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\"
      | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\tcurl -fsSL -o
      php.tar.xz.asc \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor
      key in $GPG_KEYS; do \t\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$key\"; \t\tdone; \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz;
      \t\tgpgconf --kill all; \t\trm -rf \"$GNUPGHOME\"; \tfi; \t\tapk del --no-network
      .fetch-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - "set -eux; \tapk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\tcoreutils
      \t\tcurl-dev \t\tlibedit-dev \t\tlibxml2-dev \t\toniguruma-dev \t\tsqlite-dev
      \t; \t\texport CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \t\tLDFLAGS=\"$PHP_LDFLAGS\"
      \t; \tdocker-php-source extract; \tcd /usr/src/php; \tgnuArch=\"$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)\"; \t./configure \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\"
      \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t\t\t--enable-option-checking=fatal
      \t\t\t\t--with-mhash \t\t\t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd
      \t\t--with-pdo-sqlite=/usr \t\t--with-sqlite3=/usr \t\t\t\t--with-curl \t\t--with-libedit
      \t\t--with-zlib \t\t\t\t$(test \"$gnuArch\" = 's390x-linux-musl' && echo '--without-pcre-jit')
      \t\t\t\t${PHP_EXTRA_CONFIGURE_ARGS:-} \t; \tmake -j \"$(nproc)\"; \tfind -type
      f -name '*.a' -delete; \tmake install; \tfind /usr/local/bin /usr/local/sbin
      -type f -perm +0111 -exec strip --strip-all '{}' + || true; \tmake clean; \t\tcp
      -v php.ini-* \"$PHP_INI_DIR/\"; \t\tcd /; \tdocker-php-source delete; \t\trunDeps=\"$(
      \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t|
      tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1
      \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache $runDeps;
      \t\tapk del --no-network .build-deps; \t\tpecl update-channels; \trm -rf /tmp/pear
      ~/.pearrc; \tphp --version"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - docker-php-entrypoint
    - /usr/local/bin/
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /var/www/html
  - CmdLine:
    - "set -eux; \tcd /usr/local/etc; \tif [ -d php-fpm.d ]; then \t\tsed 's!=NONE/!=!g'
      php-fpm.conf.default | tee php-fpm.conf > /dev/null; \t\tcp php-fpm.d/www.conf.default
      php-fpm.d/www.conf; \telse \t\tmkdir php-fpm.d; \t\tcp php-fpm.conf.default
      php-fpm.d/www.conf; \t\t{ \t\t\techo '[global]'; \t\t\techo 'include=etc/php-fpm.d/*.conf';
      \t\t} | tee php-fpm.conf; \tfi; \t{ \t\techo '[global]'; \t\techo 'error_log
      = /proc/self/fd/2'; \t\techo; \t\techo '[www]'; \t\techo '; if we send this
      to /proc/self/fd/1, it never appears'; \t\techo 'access.log = /proc/self/fd/2';
      \t\techo; \t\techo 'clear_env = no'; \t\techo; \t\techo '; Ensure worker stdout
      and stderr are sent to the main error log.'; \t\techo 'catch_workers_output
      = yes'; \t} | tee php-fpm.d/docker.conf; \t{ \t\techo '[global]'; \t\techo 'daemonize
      = no'; \t\techo; \t\techo '[www]'; \t\techo 'listen = 9000'; \t} | tee php-fpm.d/zz-docker.conf"
    Name: run
    PrependShell: true
  - Name: stopsignal
    Signal: SIGQUIT
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
