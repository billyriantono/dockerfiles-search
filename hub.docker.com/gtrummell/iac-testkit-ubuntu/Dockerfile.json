{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "requirements.txt"
          ]
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-o",
            "pipefail",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026    apt-get install -qq --no-install-recommends         apt-transport-https         apt-utils         aptitude         gpg         gpg-agent         software-properties-common         wget \u0026\u0026    wget -q -O - https://download.docker.com/linux/ubuntu/gpg | apt-key add - \u0026\u0026    echo \"deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable\" \u003e /etc/apt/sources.list.d/docker.list \u0026\u0026    apt-get update -qq \u0026\u0026    apt-get install -qq --no-install-recommends         awscli         build-essential         python3-dev         python3-pip         python3-psutil         python3-setuptools         python3-wheel         docker-ce         docker-compose         unzip \u0026\u0026    aptitude full-upgrade -y -q \u0026\u0026    apt-get autoremove -qq \u0026\u0026    apt-get clean -qq \u0026\u0026    aptitude autoclean -y -q \u0026\u0026    rm -rf /var/lib/apt/lists/* \u0026\u0026    ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime \u0026\u0026    ln -fs /usr/share/zoneinfo/Etc/UTC /etc/timezone \u0026\u0026    pip3 install --upgrade -r requirements.txt \u0026\u0026    wget -q -O terraform.zip https://releases.hashicorp.com/terraform/0.11.10/terraform_0.11.10_linux_amd64.zip \u0026\u0026    unzip -o -qq terraform.zip -d /usr/bin/ \u0026\u0026    wget -q -O packer.zip https://releases.hashicorp.com/packer/1.3.2/packer_1.3.2_linux_amd64.zip \u0026\u0026    unzip -o -qq packer.zip -d /usr/bin/ \u0026\u0026    wget -q -O vault.zip https://releases.hashicorp.com/vault/1.0.0/vault_1.0.0_linux_amd64.zip \u0026\u0026    unzip -o -qq vault.zip -d /usr/bin/ \u0026\u0026    wget -q -O consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip \u0026\u0026    unzip -o -qq consul.zip -d /usr/bin/ \u0026\u0026    wget -q -O /usr/bin/terratest_log_parser https://github.com/gruntwork-io/terratest/releases/download/v0.13.13/terratest_log_parser_linux_amd64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}