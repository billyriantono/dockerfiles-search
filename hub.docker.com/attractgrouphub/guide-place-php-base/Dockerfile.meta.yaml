MetaArgs: null
Stages:
- BaseName: php:7-fpm
  Commands:
  - Maintainer: AttractGroup
    Name: maintainer
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends         curl         libmemcached-dev         libz-dev         libjpeg-dev         libpng12-dev         libfreetype6-dev         libssl-dev         libmcrypt-dev         git
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mcrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pdo_mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get purge --auto-remove -y zlib1g-dev         && apt-get -y install libssl-dev
      libc-client2007e-dev libkrb5-dev libpq-dev         && docker-php-ext-configure
      imap --with-imap-ssl --with-kerberos         && docker-php-ext-install imap         &&
      docker-php-ext-install opcache
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8';
      \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=60';
      \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} > /usr/local/etc/php/conf.d/opcache-recommended.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install zip &&     docker-php-ext-enable zip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - Key: TZ
    Name: arg
    Value: UTC
  - Env:
    - Key: TZ
      Value: ${TZ}
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - CmdLine:
    - composer global require "hirak/prestissimo:^0.3"
    Name: run
    PrependShell: true
  - Env:
    - Key: OSMOSIS_VERSION
      Value: 0.44.1
    Name: env
  - Env:
    - Key: MAPSFORGE_VERSION
      Value: 0.6.0
    Name: env
  - Env:
    - Key: PHYGHTMAP_VERSION
      Value: "1.74"
    Name: env
  - CmdLine:
    - apt-get update   && apt-get install -y wget   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y openjdk-7-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://bretth.dev.openstreetmap.org/osmosis-build/osmosis-${OSMOSIS_VERSION}.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /osmosis
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvfz osmosis-${OSMOSIS_VERSION}.tgz --directory=/osmosis
    Name: run
    PrependShell: true
  - CmdLine:
    - rm osmosis-${OSMOSIS_VERSION}.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x /osmosis/bin/osmosis
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /osmosis/bin:$PATH
    Name: env
  - CmdLine:
    - echo 'export PATH=$PATH:/osmosis/bin' > /etc/profile.d/osmosis.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 775 /etc/profile.d/osmosis.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://repo.jenkins-ci.org/public/org/mapsforge/mapsforge-map-writer/${MAPSFORGE_VERSION}/mapsforge-map-writer-${MAPSFORGE_VERSION}-jar-with-dependencies.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - mv mapsforge-map-writer-${MAPSFORGE_VERSION}-jar-with-dependencies.jar /osmosis/lib/default/
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y install python2.7 python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install sh &&     pip install logging &&     pip install setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y install python-matplotlib python-beautifulsoup
      python-numpy python-gdal
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://katze.tfiu.de/projects/phyghtmap/phyghtmap_${PHYGHTMAP_VERSION}.orig.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xzf phyghtmap_${PHYGHTMAP_VERSION}.orig.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd phyghtmap-${PHYGHTMAP_VERSION} && python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm phyghtmap_${PHYGHTMAP_VERSION}.orig.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf phyghtmap-${PHYGHTMAP_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs-legacy
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y npm
    Name: run
    PrependShell: true
  From:
    Image: php:7-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7-fpm
