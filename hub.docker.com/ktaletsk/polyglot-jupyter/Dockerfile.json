{
  "MetaArgs": [
    {
      "Key": "BASE_CONTAINER",
      "DefaultValue": "jupyter/minimal-notebook",
      "ProvidedValue": null,
      "Value": "jupyter/minimal-notebook"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "$BASE_CONTAINER",
      "SourceCode": "FROM $BASE_CONTAINER",
      "Platform": "",
      "From": {
        "Image": "$BASE_CONTAINER"
      },
      "Commands": [
        {
          "Maintainer": "Konstantin Taletskiy \u003ckonstantin.taletskiy@axleinfo.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends     ssh     fonts-dejavu     tzdata     gfortran     gcc     octave     openjdk-8-jdk     openjdk-11-jdk     libssl1.0.0 libssl-dev     scala     curl procps \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     octave --eval 'pkg install -forge dataframe'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "MAVEN_VERSION",
          "Name": "arg",
          "Value": "3.6.0"
        },
        {
          "Key": "MAVEN_BASE_URL",
          "Name": "arg",
          "Value": "https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries"
        },
        {
          "Key": "MAVEN_SHA",
          "Name": "arg",
          "Value": "fae9c12b570c3ba18116a4e26ea524b29f7279c17cbaadc3326ca72927368924d9131d11b9e851b8dc9162228b6fdea955446be41207a5cfc61283dd8a561d2f"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/maven /usr/share/maven/ref   \u0026\u0026 curl -fsSL -o /tmp/apache-maven.tar.gz ${MAVEN_BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz   \u0026\u0026 echo \"${MAVEN_SHA}  /tmp/apache-maven.tar.gz\" | sha512sum -c -   \u0026\u0026 tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1   \u0026\u0026 rm -f /tmp/apache-maven.tar.gz   \u0026\u0026 ln -s /usr/share/maven/bin/mvn /usr/bin/mvn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/usr/share/maven"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_CONFIG",
              "Value": "\"$USER_HOME_DIR/.m2\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "mvn-entrypoint.sh",
            "/usr/local/bin/mvn-entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "settings-docker.xml",
            "/usr/share/maven/ref/"
          ]
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "CmdLine": [
            "conda install --quiet --yes     'conda-forge::blas=*=openblas'     'ipywidgets=7.4*'     'pandas=0.23*'     'numexpr=2.6*'     'matplotlib=2.2*'     'scipy=1.1*'     'seaborn=0.9*'     'scikit-learn=0.20*'     'scikit-image=0.14*'     'sympy=1.1*'     'cython=0.28*'     'patsy=0.5*'     'statsmodels=0.9*'     'cloudpickle=0.5*'     'dill=0.2*'     'numba=0.38*'     'bokeh=0.13*'     'sqlalchemy=1.2*'     'hdf5=1.10*'     'h5py=2.7*'     'vincent=0.4.*'     'beautifulsoup4=4.6.*'     'protobuf=3.*'     'xlrd'     'rpy2=2.9*'     'r-base=3.5.1'     'r-irkernel=0.8*'     'r-plyr=1.8*'     'r-devtools=1.13*'     'r-tidyverse=1.2*'     'r-shiny=1.2*'     'r-rmarkdown=1.11*'     'r-forecast=8.2*'     'r-rsqlite=2.1*'     'r-reshape2=1.4*'     'r-nycflights13=1.0*'     'r-caret=6.0*'     'r-rcurl=1.95*'     'r-crayon=1.3*'     'r-randomforest=4.6*'     'r-htmltools=0.3*'     'r-sparklyr=0.9*'     'r-htmlwidgets=1.2*'     'r-hexbin=1.27*' \u0026\u0026     conda remove --quiet --yes --force qt pyqt \u0026\u0026     conda clean -tipsy \u0026\u0026     jupyter nbextension enable --py widgetsnbextension --sys-prefix \u0026\u0026     jupyter labextension install @jupyter-widgets/jupyterlab-manager@^0.38.1 \u0026\u0026     jupyter labextension install jupyterlab_bokeh@0.6.3 \u0026\u0026     npm cache clean --force \u0026\u0026     rm -rf $CONDA_DIR/share/jupyter/lab/staging \u0026\u0026     rm -rf /home/$NB_USER/.cache/yarn \u0026\u0026     rm -rf /home/$NB_USER/.node-gyp \u0026\u0026     fix-permissions $CONDA_DIR \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     git clone https://github.com/PAIR-code/facets.git \u0026\u0026     cd facets \u0026\u0026     jupyter nbextension install facets-dist/ --sys-prefix \u0026\u0026     cd \u0026\u0026     rm -rf /tmp/facets \u0026\u0026     fix-permissions $CONDA_DIR \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XDG_CACHE_HOME",
              "Value": "/home/$NB_USER/.cache/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "CmdLine": [
            "conda install -c conda-forge feather-format"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install bash_kernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python -m bash_kernel.install --user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install octave_kernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python -m octave_kernel install --user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SCALA_VERSION",
              "Value": "2.11.12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ALMOND_VERSION",
              "Value": "0.2.2"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "CmdLine": [
            "curl -L -o coursier https://git.io/coursier-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x coursier \u0026\u0026     ./coursier --help"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./coursier bootstrap     -r jitpack     -i user -I user:sh.almond:scala-kernel-api_$SCALA_VERSION:$ALMOND_VERSION     sh.almond:scala-kernel_$SCALA_VERSION:$ALMOND_VERSION     -o almond"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./almond --install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "curl -L https://github.com/SpencerPark/IJava/releases/download/v1.2.0/ijava-1.2.0.zip \u003e ijava-kernel.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip ijava-kernel.zip -d ijava-kernel   \u0026\u0026 cd ijava-kernel   \u0026\u0026 python install.py --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "CmdLine": [
            "npm rebuild"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g ijavascript itypescript"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ijsinstall --spec-path=full"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "its --install=local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install xeus-cling xwidgets notebook xtensor xtl xframe -c conda-forge/label/gcc7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install @jupyter-widgets/jupyterlab-manager"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -y -c bioconda gnuplot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R --slave -e 'install.packages(\"feather\", repos=\"http://cran.stat.ucla.edu/\")'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -y feather-format -c conda-forge"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install nbformat --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install sos-notebook sos-r sos-bash sos-matlab sos-scala sos-javascript sos-python sos-xeus-cling sos-java --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python -m sos_notebook.install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install jupyterlab-sos"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install @jupyterlab/git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install jupyterlab-git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter serverextension enable --py jupyterlab_git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade nbdime \u0026\u0026     jupyter lab build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "jupyter lab --ip='0.0.0.0' --port=8888 --no-browser"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}