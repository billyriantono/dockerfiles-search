{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "CmdLine": [
            "groupadd -r cassandra --gid=999 \u0026\u0026 useradd -r -g cassandra --uid=999 cassandra"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibjemalloc1 \t\tprocps \t\tiproute2 \t; \tif ! command -v gpg \u003e /dev/null; then \t\tapt-get install -y --no-install-recommends \t\t\tdirmngr \t\t\tgnupg \t\t; \tfi; \trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t\u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t\u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t\u0026\u0026 { command -v gpgconf \u0026\u0026 gpgconf --kill all || :; } \t\u0026\u0026 rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t\u0026\u0026 chmod +x /usr/local/bin/gosu \t\u0026\u0026 gosu nobody true \t\u0026\u0026 apt-get purge -y --auto-remove ca-certificates wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "514A2AD631A57A16DD0047EC749D6EEC0353B12C \tA26E528B271F19B9E5D8E19EA278B781FE4B2BDA"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \texport GNUPGHOME=\"$(mktemp -d)\"; \tfor key in $GPG_KEYS; do \t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tdone; \tgpg --batch --export $GPG_KEYS \u003e /etc/apt/trusted.gpg.d/cassandra.gpg; \tcommand -v gpgconf \u0026\u0026 gpgconf --kill all || :; \trm -rf \"$GNUPGHOME\"; \tapt-key list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CASSANDRA_VERSION",
              "Value": "3.11.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \t\tmkdir -p /usr/share/man/man1/; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tamd64|i386) \t\t\techo 'deb http://www.apache.org/dist/cassandra/debian 311x main' \u003e /etc/apt/sources.list.d/cassandra.list; \t\t\tapt-get update; \t\t\t;; \t\t*) \t\t\t\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends \t\t\t\twget ca-certificates \t\t\t\tdpkg-dev \t\t\t; \t\t\t\t\t\tapt-mark showmanual | xargs apt-mark auto \u003e /dev/null; \t\t\tapt-mark manual $savedAptMark; \t\t\t\t\t\ttempDir=\"$(mktemp -d)\"; \t\t\tfor pkg in cassandra cassandra-tools; do \t\t\t\tdeb=\"${pkg}_${CASSANDRA_VERSION}_all.deb\"; \t\t\t\twget -O \"$tempDir/$deb\" \"https://www.apache.org/dist/cassandra/debian/pool/main/c/cassandra/$deb\"; \t\t\tdone; \t\t\t\t\t\tls -lAFh \"$tempDir\"; \t\t\t( cd \"$tempDir\" \u0026\u0026 dpkg-scanpackages . \u003e Packages ); \t\t\tgrep '^Package: ' \"$tempDir/Packages\"; \t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" \u003e /etc/apt/sources.list.d/temp.list; \t\t\tapt-get -o Acquire::GzipIndexes=false update; \t\t\t;; \tesac; \t\tapt-get install -y \t\tcassandra=\"$CASSANDRA_VERSION\" \t\tcassandra-tools=\"$CASSANDRA_VERSION\" \t; \t\trm -rf /var/lib/apt/lists/*; \t\tif [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove; \t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CASSANDRA_CONFIG",
              "Value": "/etc/cassandra"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tppc64el) \t\t\tif grep -q -- '^-Xss' \"$CASSANDRA_CONFIG/jvm.options\"; then \t\t\t\tgrep -- '^-Xss256k$' \"$CASSANDRA_CONFIG/jvm.options\"; \t\t\t\tsed -ri 's/^-Xss256k$/-Xss512k/' \"$CASSANDRA_CONFIG/jvm.options\"; \t\t\t\tgrep -- '^-Xss512k$' \"$CASSANDRA_CONFIG/jvm.options\"; \t\t\telif grep -q -- '-Xss256k' \"$CASSANDRA_CONFIG/cassandra-env.sh\"; then \t\t\t\tsed -ri 's/-Xss256k/-Xss512k/g' \"$CASSANDRA_CONFIG/cassandra-env.sh\"; \t\t\t\tgrep -- '-Xss512k' \"$CASSANDRA_CONFIG/cassandra-env.sh\"; \t\t\tfi; \t\t\t;; \tesac; \t\tsed -ri 's/^(JVM_PATCH_VERSION)=.*/\\1=25/' \"$CASSANDRA_CONFIG/cassandra-env.sh\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "ln -s usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh # backwards compat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/cassandra \"$CASSANDRA_CONFIG\" \t\u0026\u0026 chown -R cassandra:cassandra /var/lib/cassandra \"$CASSANDRA_CONFIG\" \t\u0026\u0026 chmod 777 /var/lib/cassandra \"$CASSANDRA_CONFIG\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/cassandra"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7000",
            "7001",
            "7199",
            "9042",
            "9160"
          ]
        },
        {
          "CmdLine": [
            "cassandra",
            "-f"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}