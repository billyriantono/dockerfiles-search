{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.0-fpm-alpine",
      "SourceCode": "FROM php:7.0-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.0-fpm-alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DB_NAME",
              "Value": "wordpress"
            },
            {
              "Key": "DB_USER",
              "Value": "root"
            },
            {
              "Key": "DB_HOST",
              "Value": "mariadb"
            },
            {
              "Key": "DB_PASSWORD",
              "Value": "root"
            },
            {
              "Key": "WP_ENV",
              "Value": "development"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add less bash su-exec mysql-client freetype-dev libjpeg-turbo-dev libpng-dev \t\u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \t\u0026\u0026 docker-php-ext-install gd mysqli opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \u0026\u0026     php composer-setup.php --install-dir=/usr/local/bin --filename=composer \u0026\u0026     php -r \"unlink('composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "wp.sh",
            "/usr/local/bin/wp"
          ]
        },
        {
          "CmdLine": [
            "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \u0026\u0026     chmod +x wp-cli.phar \u0026\u0026 chmod +x /usr/local/bin/wp \u0026\u0026     mv wp-cli.phar /usr/local/bin/wp-cli.phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'file_uploads = On'; \t\techo 'memory_limit = 256M'; \t\techo 'upload_max_filesize = 256M'; \t\techo 'post_max_size = 300M'; \t\techo 'max_execution_time = 600'; \t} \u003e /usr/local/etc/php/conf.d/uploads.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data . \u0026\u0026 chmod g+s ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "su-exec www-data composer create-project roots/bedrock . \u0026\u0026 chmod -R 755 ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add libmcrypt-dev \t\u0026\u0026 docker-php-ext-install mcrypt mbstring"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add build-base autoconf \u0026\u0026 \tpecl install -o -f xdebug \u0026\u0026 \trm -rf /tmp/pear \u0026\u0026 \tdocker-php-ext-enable xdebug \u0026\u0026 \tsed -i '1 a xdebug.remote_autostart=1' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 \tsed -i '1 a xdebug.remote_mode=req' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 \tsed -i '1 a xdebug.remote_handler=dbgp' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 \tsed -i '1 a xdebug.remote_connect_back=0' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 \tsed -i '1 a xdebug.remote_port=9000' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 \tsed -i '1 a xdebug.idekey=PHPSTORM' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 \tsed -i '1 a xdebug.remote_host=172.18.0.1' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 \tsed -i '1 a xdebug.remote_enable=1' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 \tapk del build-base \u0026\u0026   rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init.sh",
            "/opt/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/init.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/init.sh \u0026\u0026 exec php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}