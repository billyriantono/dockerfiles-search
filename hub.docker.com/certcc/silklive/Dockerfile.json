{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "Maintainer": "Matt Heckathorn \u003cmaheckathorn@cert.org\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "VIRTUSER",
              "Value": "demo"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "SILK_VERSION",
          "Name": "arg",
          "Value": "3.18.0"
        },
        {
          "Key": "FIXBUF_VERSION",
          "Name": "arg",
          "Value": "2.2.0"
        },
        {
          "Key": "NETSA_PYTHON_VERSION",
          "Name": "arg",
          "Value": "1.5"
        },
        {
          "Key": "PYFIXBUF_VERSION",
          "Name": "arg",
          "Value": "0.6.0"
        },
        {
          "Key": "RAYON_VERSION",
          "Name": "arg",
          "Value": "1.4.3"
        },
        {
          "Key": "YAF_VERSION",
          "Name": "arg",
          "Value": "2.10.0"
        },
        {
          "Key": "SUPER_VERSION",
          "Name": "arg",
          "Value": "1.6.0"
        },
        {
          "Key": "PIPELINE_VERSION",
          "Name": "arg",
          "Value": "4.5.1"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends \t\tbison \t\tbuild-essential \t\tcmake \t\tcurl \t\temacs \t\tflex \t\tg++ \t\tgawk \t\tgcc \t\tglib2.0 \t\tless \t\tlibcairo2-dev \t\tlibglib2.0-dev \t\tliblzo2-2 \t\tliblzo2-dev \t\tlibmysqlclient-dev \t\tlibpcap-dev \t\tlibprotobuf-c-dev \t\tlibyaml-dev \t\tmake \t\tman-db \t\tmysql-client \t\tmysql-server \t\tnano \t\tnetcat \t\tpython-cairo \t\tpython-dev \t\tpython-scapy \t\tr-base \t\tscreen \t\ttcpdump \t\ttmux \t\tvim \t\twget         sqlite3 \t\tiputils-ping \t\t\u0026\u0026 apt-get clean \t\t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser --disabled-password --gecos \"\" $VIRTUSER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://tools.netsa.cert.org/releases/libfixbuf-$FIXBUF_VERSION.tar.gz | tar -xz \u0026\u0026 cd libfixbuf-* \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd ../ \u0026\u0026 rm -rf libfixbuf-$FIXBUF_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://tools.netsa.cert.org/releases/silk-$SILK_VERSION.tar.gz | tar -xz \u0026\u0026 cd silk-* \u0026\u0026 ./configure --with-python --enable-ipv6 --enable-data-rootdir=/data/ \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd ../ \u0026\u0026 rm -rf silk-$SILK_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://tools.netsa.cert.org/releases/netsa-python-$NETSA_PYTHON_VERSION.tar.gz | tar -xz \u0026\u0026 cd netsa-python-* \u0026\u0026 python setup.py install \u0026\u0026 cd ../ \u0026\u0026 rm -rf netsa-python-$NETSA_PYTHON_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://tools.netsa.cert.org/releases/pyfixbuf-$PYFIXBUF_VERSION.tar.gz | tar -xz \u0026\u0026 cd pyfixbuf-* \u0026\u0026 python setup.py build \u0026\u0026 python setup.py install \u0026\u0026 cd ../ \u0026\u0026 rm -rf pyfixbuf-$PYFIXBUF_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://tools.netsa.cert.org/releases/rayon-$RAYON_VERSION.tar.gz | tar -xz \u0026\u0026 cd rayon-* \u0026\u0026 python setup.py install \u0026\u0026 cd ../ \u0026\u0026 rm -rf rayon-$RAYON_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://tools.netsa.cert.org/releases/yaf-$YAF_VERSION.tar.gz | tar -xz \u0026\u0026 cd yaf-* \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd ../ \u0026\u0026 rm -rf yaf-$YAF_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://tools.netsa.cert.org/releases/super_mediator-$SUPER_VERSION.tar.gz | tar -xz \u0026\u0026 cd super_mediator-* \u0026\u0026 ./configure --with-mysql \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd ../ \u0026\u0026 rm -rf super_mediator-$SUPER_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "su -l -c \"ldconfig\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://tools.netsa.cert.org/releases/analysis-pipeline-$PIPELINE_VERSION.tar.gz | tar -xz \u0026\u0026 cd analysis-pipeline-* \u0026\u0026 ./configure --with-silk-config=/usr/local/bin/silk_config \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd ../ \u0026\u0026 rm -rf analysis-pipeline-$PIPELINE_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -nc -O /tmp/GeoLite2-Country-CSV.zip http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country-CSV.zip \u0026\u0026 unzip -j /tmp/GeoLite2-Country-CSV.zip -d /tmp/GeoLite2-Country-CSV \u0026\u0026 rwgeoip2ccmap --input-path=/tmp/GeoLite2-Country-CSV --output-path=/usr/local/share/silk/country_codes.pmap \u0026\u0026 rm -rf /tmp/GeoLite2-Country-CSV /tmp/GeoLite2-Country-CSV.zip"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}