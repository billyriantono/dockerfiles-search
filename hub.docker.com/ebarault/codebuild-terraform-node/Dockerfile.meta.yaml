MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Key: TERRAFORM_VERSION
    Name: arg
    Value: 0.11.14
  - Key: TERRAGRUNT_VERSION
    Name: arg
    Value: 0.18.7
  - Key: NODE_VERSION
    Name: arg
    Value: 12.x
  - Key: AWSCLI_VERSION
    Name: arg
    Value: 1.16.200
  - Key: GITLFS_VERSION
    Name: arg
    Value: 2.7.2
  - Key: ANSIBLE_VERSION
    Name: arg
    Value: 2.8.2
  - Env:
    - Key: DOCKER_VERSION
      Value: '"18.09.8"'
    - Key: DIND_COMMIT
      Value: '"37498f009d8bf25fbb6199e8ccd34bed84f2874b"'
    - Key: DOCKER_COMPOSE_VERSION
      Value: '"1.24.1"'
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends       software-properties-common
      &&     add-apt-repository ppa:git-core/ppa &&     apt-get update &&     apt-get
      install -y --no-install-recommends       wget curl git openssh-client jq python
      python-dev build-essential make       ca-certificates tar gzip zip unzip bzip2
      gettext-base rsync &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_"$NODE_VERSION" | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      &&     apt-get update &&     apt-get install yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "https://bootstrap.pypa.io/get-pip.py" -O /tmp/get-pip.py &&     python
      /tmp/get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install "ansible==$ANSIBLE_VERSION"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install boto3 &&     git clone -b develop https://github.com/maishsk/boto.git
      &&     cd boto &&     python setup.py install
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli=="$AWSCLI_VERSION" &&     rm -fr /var/lib/apt/lists/* /tmp/*
      /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awsebcli --upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://releases.hashicorp.com/terraform/"$TERRAFORM_VERSION"/terraform_"$TERRAFORM_VERSION"_linux_amd64.zip
      -o terraform_"$TERRAFORM_VERSION"_linux_amd64.zip &&     unzip terraform_"$TERRAFORM_VERSION"_linux_amd64.zip
      -d /usr/bin &&     chmod +x /usr/bin/terraform
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://github.com/gruntwork-io/terragrunt/releases/download/v"$TERRAGRUNT_VERSION"/terragrunt_linux_amd64
      -o /usr/bin/terragrunt &&     chmod +x /usr/bin/terragrunt
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://github.com/git-lfs/git-lfs/releases/download/v"$GITLFS_VERSION"/git-lfs-linux-amd64-v"$GITLFS_VERSION".tar.gz
      -o gitlfs.tar.gz &&     mkdir -p gitlfs &&     tar --extract --file gitlfs.tar.gz
      --directory gitlfs &&     chmod +x gitlfs/install.sh &&     ./gitlfs/install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/splitsh/lite/releases/download/v1.0.1/lite_linux_amd64.tar.gz
      > splitsh.tar.gz &&     tar -xf splitsh.tar.gz &&     mv splitsh-lite /usr/bin/splitsh
      &&     rm splitsh.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install yq
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \twget -O docker.tgz \"https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz\";
      \ttar --extract \t\t--file docker.tgz \t\t--strip-components 1 \t\t--directory
      /usr/local/bin/ \t; \trm docker.tgz; \t\tdockerd --version; \tdocker --version"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux;   apt-get update && \tapt-get install -y --no-install-recommends
      \t\tbtrfs-tools \t\te2fsprogs \t\tiptables \t\topenssl \t\txfsprogs \t\txz-utils
      \t\tpigz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& addgroup dockremap \t&& useradd -g dockremap dockremap \t&& echo
      'dockremap:165536:65536' >> /etc/subuid \t&& echo 'dockremap:165536:65536' >>
      /etc/subgid"
    Name: run
    PrependShell: true
  - Env:
    - Key: DIND_COMMIT
      Value: 37498f009d8bf25fbb6199e8ccd34bed84f2874b
    Name: env
  - CmdLine:
    - "set -eux; \twget -O /usr/local/bin/dind \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\";
      \tchmod +x /usr/local/bin/dind"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dockerd-entrypoint.sh
    - /usr/local/bin/
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Name: expose
    Ports:
    - "2375"
    - "2376"
  - CmdLine:
    - dockerd-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
