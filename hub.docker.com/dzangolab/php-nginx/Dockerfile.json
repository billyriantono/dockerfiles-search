{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-fpm",
      "SourceCode": "FROM php:7.3-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.3-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Olivier Pichon \u003cop@dzango.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "build",
          "Name": "arg",
          "Value": "'build'"
        },
        {
          "Key": "memory_limit",
          "Name": "arg",
          "Value": "-1"
        },
        {
          "Key": "timezone",
          "Name": "arg",
          "Value": "'Asia/Hong_Kong'"
        },
        {
          "Key": "upload_max_filesize",
          "Name": "arg",
          "Value": "'10M'"
        },
        {
          "Key": "version",
          "Name": "arg",
          "Value": "'version'"
        },
        {
          "CmdLine": [
            "ulimit -n 4096     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --force-yes --fix-missing  \u0026\u0026 apt install -y apt-utils         build-essential         cron         git         gnupg         libcap2-bin         libcurl4-gnutls-dev         libfreetype6-dev         libgeoip-dev         libgmp-dev         libicu-dev         libjpeg62-turbo-dev         libmagickwand-dev         libmcrypt-dev         libpng-dev         libxml2-dev         libxslt1.1 libxslt1-dev         libzip-dev         locales         netcat         nginx         openssh-client         unzip         zlib1g-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install         calendar         curl         exif         gd         gmp         gettext         intl         mysqli         opcache         pcntl         pdo_mysql         shmop         sockets         sysvmsg         sysvsem         sysvshm         wddx         xsl         zip     \u0026\u0026 echo \"date.timezone=\"$timezone \u003e /usr/local/etc/php/conf.d/date_timezone.ini     \u0026\u0026 echo \"memory_limit=\"$memory_limit \u003e /usr/local/etc/php/conf.d/memory_limit.ini     \u0026\u0026 echo \"upload_max_filesize=\"$upload_max_filesize \u003e /usr/local/etc/php/conf.d/upload_max_filesize.ini     \u0026\u0026 echo \"display_errors=0\" \u003e /usr/local/etc/php/conf.d/display_errors.ini     \u0026\u0026 echo \"log_errors=1\" \u003e /usr/local/etc/php/conf.d/log_errors.ini     \u0026\u0026 usermod -u 1001 www-data     \u0026\u0026 chown -R www-data:www-data /var/www     \u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 apt-get clean autoclean     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 rm -rf /var/lib/{apt,dpkg,cache,log}/     \u0026\u0026 pecl install imagick     \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 pecl install geoip-1.1.1  \u0026\u0026 echo \"extension=geoip.so\" \u003e\u003e /usr/local/etc/php/conf.d/geoip.ini     \u0026\u0026 /usr/sbin/nginx -v     \u0026\u0026 setcap cap_net_bind_service=+ep /usr/sbin/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/var/www/.composer/vendor/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./etc/php-fpm.d/www.conf",
            "/usr/local/etc/php-fpm.d/www.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./etc/php/conf.d/",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./etc/nginx/conf.d/nginx.conf",
            "/etc/nginx/sites-available/default"
          ]
        },
        {
          "CmdLine": [
            "touch /var/run/nginx.pid"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/run/nginx.pid /var/lib/nginx /var/log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "www/index.html",
            "/var/www/html/web"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "www/index.php",
            "/var/www/html/web"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./bin/docker-php-nginx-entrypoint",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/lib/nginx /var/www    \u0026\u0026 chmod -R 777 /var/lib/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "touch /var/log/cron.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker-php-nginx-entrypoint"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}