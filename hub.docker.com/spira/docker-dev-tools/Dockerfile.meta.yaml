MetaArgs: null
Stages:
- BaseName: php:7.0-cli
  Commands:
  - Maintainer: '"Zak Henry" <zak.henry@gmail.com>'
    Name: maintainer
  - CmdLine:
    - mkdir -p /data
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - CmdLine:
    - printf "deb http://ppa.launchpad.net/git-core/ppa/ubuntu precise main\ndeb-src
      http://ppa.launchpad.net/git-core/ppa/ubuntu precise main" >> /etc/apt/sources.list.d/git-core.list
      &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E1DF1F24  &&     apt-get
      update || true
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl &&     curl -sL https://deb.nodesource.com/setup_5.x
      | bash - &&     apt-get install -y     nodejs     git     bzip2     build-essential     libfreetype6     libfontconfig     libpq-dev     libicu52     libjpeg-dev     libfreetype6     libfontconfig     unzip     vim     libmcrypt-dev     libxml2-dev     libpng12-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mcrypt gd pdo_pgsql mbstring pdo_mysql sockets opcache
      soap
    Name: run
    PrependShell: true
  - Env:
    - Key: XDEBUG_VERSION
      Value: xdebug-2.4.0rc3
    Name: env
  - CmdLine:
    - cd /tmp &&     curl -sL -o xdebug.tgz http://xdebug.org/files/$XDEBUG_VERSION.tgz
      &&     tar -xvzf xdebug.tgz &&     cd xdebug* &&     phpize &&     ./configure
      && make &&     cp modules/xdebug.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012
      &&     echo 'zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20151012/xdebug.so'
      >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini &&     rm -rf /tmp/xdebug*
    Name: run
    PrependShell: true
  - CmdLine:
    - which npm
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g     gulp bower
    Name: run
    PrependShell: true
  - Env:
    - Key: PHANTOM_JS_VERSION
      Value: 2.1.1
    Name: env
  - CmdLine:
    - mkdir -p /opt/phantomjs
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/phantomjs
  - CmdLine:
    - mkdir -p /opt/phantomjs/phantomjs-$PHANTOM_JS_VERSION/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL -o /opt/phantomjs/phantomjs-$PHANTOM_JS_VERSION.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - tar jxf /opt/phantomjs/phantomjs-$PHANTOM_JS_VERSION.bz2 -C /opt/phantomjs --strip-components
      1
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /opt/phantomjs/bin/phantomjs /usr/bin/phantomjs
    Name: run
    PrependShell: true
  - CmdLine:
    - phantomjs --version
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS# https://getcomposer.org/installer | php -- --install-dir=/usr/bin
      --filename=composer
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/memory.ini
    - /opt/etc/memory.ini
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/xdebug.ini
    - /opt/etc/xdebug.ini
  - CmdLine:
    - sed -i "s|%data-root%|${DATA_ROOT:-/data}|" /opt/etc/xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /opt/etc/memory.ini >> /usr/local/etc/php/conf.d/memory.ini &&     cat /opt/etc/xdebug.ini
      >> /usr/local/etc/php/conf.d/xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - npm config set tmp /root/.tmp &&     npm cache clean &&     apt-get autoremove
      -yqq &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
      &&     npm cache clear
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "#!/bin/bash\nmv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.disabled" >> /usr/local/bin/xdebug-off
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "#!/bin/bash\nmv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.disabled
      /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini" >> /usr/local/bin/xdebug-on
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/xdebug-off
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/xdebug-on
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /usr/bin/composer /usr/bin/composer-actual
    Name: run
    PrependShell: true
  - CmdLine:
    - printf '#!/bin/bash\nxdebug-off;/usr/bin/composer-actual "$@";xdebug-on' >>
      /usr/bin/composer && chmod +x /usr/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - which npm
    Name: run
    PrependShell: true
  - CmdLine:
    - which bower
    Name: run
    PrependShell: true
  - CmdLine:
    - which gulp
    Name: run
    PrependShell: true
  - CmdLine:
    - which php
    Name: run
    PrependShell: true
  - CmdLine:
    - which composer
    Name: run
    PrependShell: true
  - CmdLine:
    - which phantomjs
    Name: run
    PrependShell: true
  - CmdLine:
    - which git
    Name: run
    PrependShell: true
  - CmdLine:
    - node --version &&     npm --version &&     bower --version &&     gulp --version
      &&     php --version &&     composer --version &&     phantomjs --version &&     git
      --version
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /data
  - CmdLine:
    - /bin/bash
    - -c
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ls
    - -alh
    - /data
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.0-cli
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.0-cli
