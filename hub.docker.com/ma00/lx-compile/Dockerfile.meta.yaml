MetaArgs:
- DefaultValue: "6"
  Key: GCC_VERSION
  ProvidedValue: null
  Value: "6"
Stages:
- BaseName: ma00/lx-gcc:${GCC_VERSION}
  Commands:
  - Key: CMAKE_VERSION
    Name: arg
    Value: 3.15.5
  - Key: NINJA_VERSION
    Name: arg
    Value: 1.9.0
  - Name: workdir
    Path: /tmp
  - Name: user
    User: root
  - CmdLine:
    - export NINJA_URL=https://github.com/ninja-build/ninja/releases/download/v${NINJA_VERSION}/ninja-linux.zip
      &&     wget --no-check-certificate --quiet ${NINJA_URL} &&     unzip -o ninja-linux.zip
      -d /usr/local/bin &&     rm ninja-linux.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - export CMAKE_VERSION_MAJOR=$(echo $CMAKE_VERSION | cut -d. -f1,2) &&     export
      CMAKE_URL=https://cmake.org/files/v${CMAKE_VERSION_MAJOR}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz
      &&     wget --no-check-certificate --quiet --output-document - ${CMAKE_URL}
      |     tar --strip-components=1 --extract --gzip --directory /usr/local
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update &&     apt install --yes         bc         doxygen         freeglut3-dev         libarchive-dev         libdbus-1-dev         libdrm-dev         libfontconfig1-dev         libgl1-mesa-dev         libgles2-mesa-dev         libglu1-mesa-dev         libgstreamer-plugins-base1.0-0         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-0         libgstreamer1.0-dev         libjpeg-dev         libssl-dev         libwayland-dev         libxcb-glx0-dev         libxcb-icccm4-dev         libxcb-image0-dev         libxcb-keysyms1-dev         libxcb-randr0-dev         libxcb-render-util0-dev         libxcb-shape0-dev         libxcb-shm0-dev         libxcb-sync-dev         libxcb-xfixes0-dev         libxcb-xinerama0-dev         libxcb1-dev         libxcomposite-dev         libxrender-dev         libyaml-dev         mesa-common-dev         mesa-utils         openssl         python3-click         python-dev         python3-dev         python3-jinja2         python3-path         python3-yaml         virtualenv         zlib1g-dev     &&     pip3
      --trusted-host pypi.org --trusted-host files.pythonhosted.org install antlr4-python3-runtime
      &&     rm --force --recursive /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
      &&     echo "deb https://download.mono-project.com/repo/ubuntu xenial/snapshots/5.12.0.301
      main" > /etc/apt/sources.list.d/mono-official-5.12.list &&     apt update &&     apt
      install --yes         mono-complete &&     rm --force --recursive /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Key: PROJECT_BASE
    Name: arg
    Value: /opt/project
  - Key: PROJECT_NAME
    Name: arg
    Value: project
  - Name: workdir
    Path: ${PROJECT_BASE}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - env.sh
    - .
  - Env:
    - Key: CCACHE_DIR
      Value: ${PROJECT_BASE}/ccache
    Name: env
  - Env:
    - Key: CCACHE_BASEDIR
      Value: ${PROJECT_BASE}/${PROJECT_NAME}
    Name: env
  - Env:
    - Key: CCACHE_LOGFILE
      Value: ${PROJECT_BASE}/build/ccache.log
    Name: env
  - Env:
    - Key: CCACHE_COMPILERCHECK
      Value: mtime
    Name: env
  - Env:
    - Key: CCACHE_CPP2
      Value: "true"
    Name: env
  - Env:
    - Key: CCACHE_DEPEND
      Value: "true"
    Name: env
  - Env:
    - Key: CCACHE_MAXSIZE
      Value: 15G
    Name: env
  - Env:
    - Key: CCACHE_NOHARDLINK
      Value: "true"
    Name: env
  - Env:
    - Key: CCACHE_NOHASHDIR
      Value: "true"
    Name: env
  - Env:
    - Key: CCACHE_SLOPPINESS
      Value: file_stat_matches,include_file_mtime,include_file_ctime,file_macro,time_macros
    Name: env
  - Env:
    - Key: CC
      Value: '''ccache gcc'''
    Name: env
  - Env:
    - Key: CXX
      Value: '''ccache g++'''
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: PROJECT
      Value: ${PROJECT_BASE}/${PROJECT_NAME}
    Name: env
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  - Labels:
    - Key: name
      Value: lx-compile
    - Key: maintainer
      Value: '"off@boun.cr"'
    - Key: osRelease
      Value: '"Ubuntu 16.04 Xenial"'
    - Key: version
      Value: "2.5"
    Name: label
  From:
    Image: ma00/lx-gcc:${GCC_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM ma00/lx-gcc:${GCC_VERSION}
