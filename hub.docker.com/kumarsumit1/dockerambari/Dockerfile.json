{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "HOSTNAME",
              "Value": "node.monocluster.com"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "set_host.sh",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "startServices.sh",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /tmp/startServices.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -qq -y install apt-utils \u0026\u0026 apt-get -qq -y install wget \u0026\u0026 apt-get -qq -y install vim \u0026\u0026 apt-get -qq -y install ssh \u0026\u0026 apt-get -qq -y install openssh-client \u0026\u0026 apt-get -qq -y install curl \u0026\u0026 apt-get -qq -y install unzip \u0026\u0026 apt-get -qq -y install tar \u0026\u0026 apt-get -qq -y install openssl \u0026\u0026 apt-get -qq -y install sudo \u0026\u0026 apt-get -qq -y install ntp \u0026\u0026 apt-get install -qq -y iputils-ping \u0026\u0026 apt-get install -qq -y libmysql-java \u0026\u0026 apt-get install -qq -y libpostgresql-jdbc-java"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MYSQL_PWD",
              "Value": "kylo"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"mysql-server mysql-server/root_password password $MYSQL_PWD\" | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"mysql-server mysql-server/root_password_again password $MYSQL_PWD\" | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install mysql-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-rc.d ntp defaults \u0026\u0026 service ntp start \u0026\u0026 service ssh start"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O /etc/apt/sources.list.d/ambari.list http://public-repo-1.hortonworks.com/ambari/ubuntu16/2.x/updates/2.6.1.5/ambari.list \u0026\u0026 apt-key adv --recv-keys --keyserver keyserver.ubuntu.com B9733A7A07513CAD \u0026\u0026 apt-get -qq update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -P \"\" \u0026\u0026 cat ~/.ssh/id_rsa.pub \u003e\u003e ~/.ssh/authorized_keys \u0026\u0026 chmod 600 ~/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install ambari-server \u0026\u0026 ambari-server setup -s --enable-lzo-under-gpl-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/jdk64/jdk1.8.0_112"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$JAVA_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/tmp/startServices.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}