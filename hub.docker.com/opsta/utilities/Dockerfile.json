{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial-20160923.1",
      "SourceCode": "FROM ubuntu:xenial-20160923.1",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial-20160923.1"
      },
      "Commands": [
        {
          "Maintainer": "Jirayut Nimsaeng \u003cjirayut [at] opsta.io\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "APT_CACHER_NG",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "DEVPI_SERVER",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_HOST_KEY_CHECKING",
              "Value": "False"
            },
            {
              "Key": "DOCKER_ENGINE_VERSION",
              "Value": "1.12.1"
            },
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "1.8.1"
            },
            {
              "Key": "DOCKER_MACHINE_VERSION",
              "Value": "0.8.2"
            },
            {
              "Key": "OPSTA_PLAYBOOK_ANSIBLE_COMMIT_ID",
              "Value": "ddec77f8ba22c65f65537a2574b609c4a840e398"
            },
            {
              "Key": "OPSTA_PLAYBOOK_PYTHON_COMMIT_ID",
              "Value": "1042d06f8803ae49ba152c0f7cb8c7d623d5ff21"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "[ -n \"$APT_CACHER_NG\" ] \u0026\u0026       echo \"Acquire::http::Proxy \\\"$APT_CACHER_NG\\\";\"       \u003e /etc/apt/apt.conf.d/11proxy || true;     [ -n \"$DEVPI_SERVER\" ] \u0026\u0026       mkdir -p ~/.pip \u0026\u0026       echo \"[global]\\nindex-url = $DEVPI_SERVER\\ntrusted-host = $(echo $DEVPI_SERVER | awk -F/ '{print $3}' | awk -F: '{print $1}')\\n\" \u003e\u003e ~/.pip/pip.conf || true;     apt-get update \u0026\u0026     apt-get install -y vim socat python python-dev curl wget git sshpass       libssl-dev libffi-dev build-essential \u0026\u0026     wget -O /usr/local/bin/docker.tgz       https://get.docker.com/builds/Linux/x86_64/docker-$DOCKER_ENGINE_VERSION.tgz \u0026\u0026     wget -O /usr/local/bin/docker-compose       https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-`uname -s`-`uname -m` \u0026\u0026     wget -O /usr/local/bin/docker-machine       https://github.com/docker/machine/releases/download/v$DOCKER_MACHINE_VERSION/docker-machine-`uname -s`-`uname -m` \u0026\u0026     tar xvfz /usr/local/bin/docker.tgz -C /usr/local/bin/ --strip=1 \u0026\u0026     chmod +x /usr/local/bin/docker-compose /usr/local/bin/docker-machine \u0026\u0026     mkdir -p /etc/ansible/requirements /etc/ansible/scripts \u0026\u0026     wget -O /etc/ansible/requirements/python-requirements.txt       https://raw.githubusercontent.com/opsta/opsta-playbook/$OPSTA_PLAYBOOK_PYTHON_COMMIT_ID/requirements/python-requirements.txt \u0026\u0026     cd /etc/ansible/scripts \u0026\u0026     curl https://bootstrap.pypa.io/get-pip.py | python \u0026\u0026     curl https://raw.githubusercontent.com/opsta/opsta-playbook/$OPSTA_PLAYBOOK_ANSIBLE_COMMIT_ID/scripts/install-ansible.sh | bash \u0026\u0026     apt-get remove --purge --auto-remove -y       build-essential ifupdown iproute2 isc-dhcp-client isc-dhcp-common       libatm1 libisc-export160 libmnl0 libxtables11 manpages netbase       python-dev libssl-dev libffi-dev \u0026\u0026     apt-get -y autoremove \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /usr/lib/x86_64-linux-gnu/libfakeroot /var/lib/apt/lists/*       /etc/apt/apt.conf.d/11proxy /root/.cache /root/.pip       /etc/ansible/requirements /etc/ansible/scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/ansible.cfg",
            "/etc/ansible/ansible.cfg"
          ]
        }
      ]
    }
  ]
}