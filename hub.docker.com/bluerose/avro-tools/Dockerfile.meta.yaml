MetaArgs: null
Stages:
- BaseName: java:8
  Commands:
  - Maintainer: brian@bluerosedev.com
    Name: maintainer
  - Env:
    - Key: AVRO_VERSION
      Value: 1.8.2
    Name: env
  - Env:
    - Key: AVRO_TOOLS_JAR
      Value: /usr/share/java/avro-tools-${AVRO_VERSION}.jar
    Name: env
  - CmdLine:
    - mkdir -p /share  && cd /usr/share/java  && wget http://mirrors.gigenet.com/apache/avro/avro-${AVRO_VERSION}/java/avro-tools-${AVRO_VERSION}.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc
      \t\tgit \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: "1.11"
    Name: env
  - Env:
    - Key: GOGEN_VERSION
      Value: v5
    Name: env
  - CmdLine:
    - "set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\"
      in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3fcf280ff86558e0559e185b601c9eade0fd24c900b4c63cd14d1d38613e499'
      ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='8ffeb3577d8ca5477064f1cb8739835973c866487f2bf81df1227eaa96826acd'
      ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e4853168f41d0bea65e4d38f992a2d44b58552605f623640c5ead89d515c56c9'
      ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a91932b65b4af2f84ef2dce10d790e6a0d3d22c9ea1bdf3d8c4d9279dfa680e'
      ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e874d617f0e322f8c2dda8c23ea3a2ea21d5dfe7177abb1f8b6a0ac7cd653272'
      ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c113495fbb175d6beb1b881750de1dd034c7ae8657c30b3de8808032c9af0a15'
      ;; \t\t*) goRelArch='src'; goRelSha256='afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb';
      \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not
      have a corresponding Go binary release; will be building from source\"; echo
      >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\";
      \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c
      -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src'
      ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO
      install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall
      after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\";
      \tgo version"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin"     && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/actgardner/gogen-avro/gogen-avro
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /share
  - Name: user
    User: "1000"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - avro-tools-runner
    - /usr/local/bin/avro-tools-runner
  - CmdLine:
    - avro-tools-runner
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --help
    Name: cmd
    PrependShell: false
  From:
    Image: java:8
  Name: ""
  Platform: ""
  SourceCode: FROM java:8
