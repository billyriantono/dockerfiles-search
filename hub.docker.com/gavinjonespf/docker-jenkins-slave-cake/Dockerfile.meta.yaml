MetaArgs: null
Stages:
- BaseName: gavinjonespf/docker-toolbox:latest
  Commands:
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Key: apt_proxy
    Name: arg
    Value: null
  - CmdLine:
    - if [ "${apt_proxy}" != "" ]; then echo "Acquire::http { Proxy \"${apt_proxy}\";
      };" > /etc/apt/apt.conf.d/01proxy; cat /etc/apt/apt.conf.d/01proxy; fi;
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q update && apt-get install -y locales sudo &&    locale-gen en_US.UTF-8
      &&    apt-get -q update &&    DEBIAN_FRONTEND="noninteractive" apt-get -q upgrade
      -y -o Dpkg::Options::="--force-confnew" --no-install-recommends &&    DEBIAN_FRONTEND="noninteractive"
      apt-get -q install -y -o Dpkg::Options::="--force-confnew" --no-install-recommends
      openssh-server &&    apt-get -q autoremove -y &&    apt-get -q clean -y && rm
      -rf /var/lib/apt/lists/* && rm -f /var/cache/apt/*.bin &&    sed -i 's|session    required     pam_loginuid.so|session    optional     pam_loginuid.so|g'
      /etc/pam.d/sshd &&    mkdir -p /var/run/sshd
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get -q update &&    DEBIAN_FRONTEND="noninteractive" apt-get -q install
      -y -o Dpkg::Options::="--force-confnew" --no-install-recommends software-properties-common
      &&    add-apt-repository -y ppa:openjdk-r/ppa &&    apt-get -q update &&    DEBIAN_FRONTEND="noninteractive"
      apt-get -q install -y -o Dpkg::Options::="--force-confnew" --no-install-recommends
      openjdk-8-jre-headless &&    apt-get -q clean -y && rm -rf /var/lib/apt/lists/*
      && rm -f /var/cache/apt/*.bin
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -d /home/jenkins -s /bin/sh jenkins &&    echo "jenkins:jenkins"
      | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q update &&    DEBIAN_FRONTEND="noninteractive" apt-get install -y
      openssh-server git curl &&    apt-get -q clean -y && rm -rf /var/lib/apt/lists/*
      && rm -f /var/cache/apt/*.bin
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/lib/cake
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/runcake.sh
    - /usr/lib/cake/runcake.sh
  - CmdLine:
    - mkdir -p /usr/lib/cake/     && curl -Lsfo "/usr/lib/cake/packages.config" http://cakebuild.net/download/bootstrapper/packages     &&
      cd /usr/lib/cake     && nuget install -ExcludeVersion     && chmod a+x /usr/lib/cake/runcake.sh     &&
      ln -s /usr/lib/cake/runcake.sh /usr/sbin/cake
    Name: run
    PrependShell: true
  - CmdLine:
    - nuget sources add -name "PSGallery" -Source "https://www.powershellgallery.com/api/v2/"         &&
      mkdir -p /home/jenkins/.local/share/powershell/Modules
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q update &&    DEBIAN_FRONTEND="noninteractive" apt-get -y install
      tzdata gss-ntlmssp &&    apt-get -q clean -y && rm -rf /var/lib/apt/lists/*
      && rm -f /var/cache/apt/*.bin
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: Etc/GMT
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q update &&    DEBIAN_FRONTEND="noninteractive" apt-get -y upgrade
      dotnet-host dotnet-sdk-3.1 powershell &&    apt-get -q clean -y && rm -rf /var/lib/apt/lists/*
      && rm -f /var/cache/apt/*.bin
    Name: run
    PrependShell: true
  - Key: GOSU_VERSION
    Name: arg
    Value: "1.10"
  - CmdLine:
    - wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$(dpkg
      --print-architecture)"     && chmod +x /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/init.sh
    - /scripts/init.sh
  - CmdLine:
    - chmod 777 /scripts/init.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/jenkins-user-setup.sh
    - /scripts/jenkins-user-setup.sh
  - CmdLine:
    - chmod 777 /scripts/jenkins-user-setup.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/runbootstrap.sh
    - /scripts/runbootstrap.sh
  - CmdLine:
    - chmod 777 /scripts/runbootstrap.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/jenkins
  - CmdLine:
    - echo 'alias powershell="pwsh"' >> /home/jenkins/.bashrc && chown 1000:1000 /home/jenkins/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '#!/bin/bash\n/usr/bin/pwsh $*' > /usr/bin/powershell &&     chmod +x /usr/bin/powershell
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="$PATH:$HOME/.dotnet/tools"' >> /home/jenkins/.bashrc && chown
      1000:1000 /home/jenkins/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - dotnet tool install Octopus.DotNet.Cli --tool-path /home/jenkins/.dotnet/tools/
    Name: run
    PrependShell: true
  - CmdLine:
    - dotnet tool install Cake.tool --tool-path /home/jenkins/.dotnet/tools/
    Name: run
    PrependShell: true
  - CmdLine:
    - dotnet tool install Gitversion.Tool --version 4.0.1-beta1-59 --tool-path /home/jenkins/.dotnet/tools/
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q update && apt-get install -y libgit2-dev && apt-get -q clean -y &&
      rm -rf /var/lib/apt/lists/* && rm -f /var/cache/apt/*.bin && apt-get -q autoremove
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \tlibc6 \tzlib1g-dev
      \tlibcomerr2 \tlibc6-dev \tlibgcrypt20 \tlibkeyutils1 \tlibcurl3-gnutls \tlibsasl2-2
      \tlibgpg-error0 && apt-get -q clean -y && rm -rf /var/lib/apt/lists/* && rm
      -f /var/cache/apt/*.bin && apt-get -q autoremove -y"
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R jenkins:jenkins /home/jenkins/ && chown -R jenkins:jenkins /home/jenkins/.local/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/jenkins/init/ && chown 1000:1000 /home/jenkins/init/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/init/*.sh
    - /home/jenkins/init/
  - CmdLine:
    - chmod a+x /home/jenkins/init/*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chown 1000:1000 /home/jenkins/init/*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q clean -y && rm -rf /var/lib/apt/lists/* && rm -f /var/cache/apt/*.bin
      && apt-get -q autoremove -y
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - /scripts/init.sh
    Name: cmd
    PrependShell: false
  From:
    Image: gavinjonespf/docker-toolbox:latest
  Name: ""
  Platform: ""
  SourceCode: FROM gavinjonespf/docker-toolbox:latest
