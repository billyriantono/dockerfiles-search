{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "mhart/alpine-node:latest",
      "SourceCode": "FROM mhart/alpine-node:latest",
      "Platform": "",
      "From": {
        "Image": "mhart/alpine-node:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "17.05.0-ce"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "1.13.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_MACHINE_VERSION",
              "Value": "0.7.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add openjdk7-jre openssh git curl \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup jenkins \u0026\u0026     adduser -D jenkins -s /bin/sh -G jenkins \u0026\u0026     chown -R jenkins:jenkins /home/jenkins \u0026\u0026     echo \"jenkins:jenkins\" | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ssh-keygen -A"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/jenkins/"
        },
        {
          "CmdLine": [
            "curl -L -o /tmp/docker-latest.tgz https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz \u0026\u0026             tar -xvzf /tmp/docker-latest.tgz \u0026\u0026             mv docker/* /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` \u003e /usr/local/bin/docker-compose \u0026\u0026 \t\t\tchmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     echo \"UsePrivilegeSeparation no\" \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     echo \"PermitRootLogin no\" \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     echo \"AllowGroups jenkins\" \u003e\u003e /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --update add sudo \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     echo \"%jenkins ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./init.sh",
            "/scripts/init.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /scripts/init.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "touch ~/.sudo_as_admin_successful"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/jenkins"
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "CmdLine": [
            "/scripts/init.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}