{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "\"$BUILD_DATE\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"alpine-mono-sdk\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"The Build Container pattern base: Alpine Linux 3.5, Mono built against musl, NuGet and Paket.\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/makovich/alpine-mono-sdk\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "\"$VCS_REF\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/makovich/alpine-mono-sdk\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "\"$VERSION\""
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.docker.cmd.debug",
              "Value": "\"docker run --rm -ti --cap-add=SYS_PTRACE /bin/sh\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk add --no-cache         alpine-sdk         linux-headers         python2         autoconf         automake         cmake         libtool         gettext-dev         zlib-dev         strace         lsof         htop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MONO_VERSION",
              "Value": "4.8.0.495"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PAKET_VERSION",
              "Value": "3.35.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NUGET_VERSION",
              "Value": "3.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "*.patch",
            "/mono-patch/"
          ]
        },
        {
          "CmdLine": [
            "git clone --depth 1 --single-branch --branch mono-${MONO_VERSION} https://github.com/mono/mono.git /mono-src  \u0026\u0026 cd /mono-src  \u0026\u0026 for p in /mono-patch/*.patch; do echo \"Applying $p\"; patch -p1 \u003c $p; done  \u0026\u0026 ./autogen.sh         --prefix=/usr         --sysconfdir=/etc         --mandir=/usr/share/man         --infodir=/usr/share/info         --localstatedir=/var         --disable-boehm         --with-mcs-docs=no  \u0026\u0026 make get-monolite-latest  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 rm -rf /mono-src  \u0026\u0026 mcs --version  \u0026\u0026 mono --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cert-sync /etc/ssl/certs/ca-certificates.crt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://raw.githubusercontent.com/fsprojects/Paket/${PAKET_VERSION}/install.sh | /bin/sh  \u0026\u0026 paket --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -P /usr/lib/mono https://dist.nuget.org/win-x86-commandline/v${NUGET_VERSION}/nuget.exe  \u0026\u0026 echo -e '#!/bin/sh\\nexec /usr/bin/mono $MONO_OPTIONS /usr/lib/mono/nuget.exe \"$@\"' \u003e /usr/bin/nuget  \u0026\u0026 chmod a+x /usr/bin/nuget  \u0026\u0026 nuget"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}