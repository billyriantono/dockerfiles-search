MetaArgs: null
Stages:
- BaseName: alpine:3.9
  Commands:
  - Labels:
    - Key: Name
      Value: '"JDK Base Image On Alpine"'
    - Key: Description
      Value: '"Oracle Java 8 Standard Edition Development Kit Base Image On Alpine"'
    - Key: Vendor
      Value: '"Issenn"'
    - Key: Version
      Value: '"0.1.0"'
    - Key: Maintainer
      Value: '"issenn <issenn@hellotalk.com>"'
    - Key: com.issenn.application.java.jdk.is-beta
      Value: '""'
    - Key: com.issenn.application.java.jdk.is-production
      Value: '""'
    - Key: com.issenn.application.java.jdk.version
      Value: '""'
    - Key: com.issenn.application.image.build-date
      Value: '"2019-03-19"'
    - Key: com.issenn.application.image.release-date
      Value: '"2019-03-19"'
    Name: label
  - Env:
    - Key: TERM
      Value: '"xterm"'
    - Key: LANG
      Value: '"en_US.UTF-8"'
    - Key: LANGUAGE
      Value: '"en_US.UTF-8"'
    - Key: LC_ALL
      Value: '"en_US.UTF-8"'
    - Key: TIMEZONE
      Value: '"Asia/Shanghai"'
    Name: env
  - CmdLine:
    - 'set -ex   && apk update   && apk upgrade   && apk add --no-cache           bash           tzdata           vim           tini           su-exec           gzip           tar           curl   &&
      echo "${TIMEZONE}" > /etc/TZ   && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime   &&
      echo ''hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4'' >> /etc/nsswitch.conf   &&
      sync'
    Name: run
    PrependShell: true
  - CmdLine:
    - ALPINE_GLIBC_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases/download"
      &&   ALPINE_GLIBC_PACKAGE_VERSION="2.29-r0" &&   ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&   ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&   ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&   apk add --no-cache --virtual=.build-dependencies ca-certificates &&   curl
      --fail --show-error --location --retry 3     -o "/etc/apk/keys/sgerrand.rsa.pub"     "https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub"
      &&   curl --fail --show-error --location --retry 3     -O     "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"     -O     "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"     -O     "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&   apk add --no-cache     "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"     "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"     "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&     rm -f "/etc/apk/keys/sgerrand.rsa.pub" &&   /usr/glibc-compat/bin/localedef
      --force --inputfile POSIX --charmap UTF-8 "$LANG" || true &&   echo "export
      LANG=$LANG" > /etc/profile.d/locale.sh &&     apk del glibc-i18n &&     apk
      del .build-dependencies &&   rm -f     "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"     "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"     "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"   &&
      sync
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_VERSION_MAJOR
      Value: "8"
    - Key: JAVA_VERSION_MINOR
      Value: "202"
    - Key: JAVA_VERSION_BUILD
      Value: "08"
    - Key: JAVA_PACKAGE
      Value: jdk
    - Key: JAVA_HASH
      Value: 1961070e4c9b4e26a04e7f5a083f551e
    - Key: JAVA_HOME
      Value: '"/usr/lib/jvm/default-jvm"'
    Name: env
  - Env:
    - Key: JAVA_8_HOME
      Value: '"/usr/lib/jvm/java-${JAVA_VERSION_MAJOR}-oracle"'
    - Key: PATH
      Value: '"${PATH}:${JAVA_HOME}/bin"'
    Name: env
  - CmdLine:
    - apk add --no-cache --virtual=build-dependencies ca-certificates unzip &&   cd
      "/tmp" &&   mkdir -p "${JAVA_8_HOME}" &&   curl --fail --show-error --location
      --retry 3 -o -     --cookie "oraclelicense=accept-securebackup-cookie"     "http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/${JAVA_HASH}/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz"     |
      tar -xzf - -C "${JAVA_8_HOME}" --strip-components=1 &&   ln -s "${JAVA_8_HOME}"
      "${JAVA_HOME}" &&   rm -rf "${JAVA_HOME}/"*src.zip     "${JAVA_HOME}/lib/missioncontrol"     "${JAVA_HOME}/lib/visualvm"     "${JAVA_HOME}/lib/"*javafx*     "${JAVA_HOME}/jre/lib/plugin.jar"     "${JAVA_HOME}/jre/lib/ext/jfxrt.jar"     "${JAVA_HOME}/jre/bin/javaws"     "${JAVA_HOME}/jre/lib/javaws.jar"     "${JAVA_HOME}/jre/lib/desktop"     "${JAVA_HOME}/jre/plugin"     "${JAVA_HOME}/jre/lib/"deploy*     "${JAVA_HOME}/jre/lib/"*javafx*     "${JAVA_HOME}/jre/lib/"*jfx*     "${JAVA_HOME}/jre/lib/amd64/libdecora_sse.so"     "${JAVA_HOME}/jre/lib/amd64/"libprism_*.so     "${JAVA_HOME}/jre/lib/amd64/libfxplugins.so"     "${JAVA_HOME}/jre/lib/amd64/libglass.so"     "${JAVA_HOME}/jre/lib/amd64/libgstreamer-lite.so"     "${JAVA_HOME}/jre/lib/amd64/"libjavafx*.so     "${JAVA_HOME}/jre/lib/amd64/"libjfx*.so
      &&   rm -rf "${JAVA_HOME}/jre/bin/jjs"     "${JAVA_HOME}/jre/bin/keytool"     "${JAVA_HOME}/jre/bin/orbd"     "${JAVA_HOME}/jre/bin/pack200"     "${JAVA_HOME}/jre/bin/policytool"     "${JAVA_HOME}/jre/bin/rmid"     "${JAVA_HOME}/jre/bin/rmiregistry"     "${JAVA_HOME}/jre/bin/servertool"     "${JAVA_HOME}/jre/bin/tnameserv"     "${JAVA_HOME}/jre/bin/unpack200"     "${JAVA_HOME}/jre/lib/ext/nashorn.jar"     "${JAVA_HOME}/jre/lib/jfr.jar"     "${JAVA_HOME}/jre/lib/jfr"     "${JAVA_HOME}/jre/lib/oblique-fonts"
      &&   curl --fail --show-error --location --retry 3 -O     --cookie "oraclelicense=accept-securebackup-cookie"     "http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION_MAJOR}/jce_policy-${JAVA_VERSION_MAJOR}.zip"
      &&   unzip -jo -d "${JAVA_HOME}/jre/lib/security" "jce_policy-${JAVA_VERSION_MAJOR}.zip"
      &&   rm -f "${JAVA_HOME}/jre/lib/security/README.txt" &&   apk del build-dependencies
      curl ca-certificates tar &&     echo 'public class Main { public static void
      main(String[] args) { System.out.println("Ð¤ Java code is running fine!"); }
      }' > Main.java &&   javac Main.java &&   java Main &&   rm -rf "/tmp/"*   &&
      sync
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
