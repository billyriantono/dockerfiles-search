{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Eric Lung \u003clongminxiang@163.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "(cd /etc/apt/ \u0026\u0026mv sources.list sources_backup.list \u0026\u0026echo \"\\n# aliyun sources\\n\\ndeb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\"\u003e\u003e sources.list \u0026\u0026apt-get clean \u0026\u0026rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(apt-get update \u0026\u0026apt-get install -y build-essential wget clang libedit-dev curl python2.7 python2.7-dev libicu52 rsync libxml2 git libssl-dev uuid-dev \u0026\u0026apt-get clean \u0026\u0026rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "(wget -q -O - https://swift.org/keys/all-keys.asc | gpg --import - \u0026\u0026gpg --keyserver hkp://pool.sks-keyservers.net --refresh-keys Swift)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SWIFT_VERSION",
              "Value": "3.0-release"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SWIFT_VERSION1",
              "Value": "3.0-RELEASE"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SWIFT_PLATFORM",
              "Value": "ubuntu14.04"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "(SWIFT_ARCHIVE_NAME=swift-$SWIFT_VERSION1-$SWIFT_PLATFORM \u0026\u0026 SWIFT_URL=https://swift.org/builds/swift-$SWIFT_VERSION/$(echo \"$SWIFT_PLATFORM\" | tr -d .)/swift-$SWIFT_VERSION1/$SWIFT_ARCHIVE_NAME.tar.gz \u0026\u0026 wget $SWIFT_URL \u0026\u0026 wget $SWIFT_URL.sig \u0026\u0026 gpg --verify $SWIFT_ARCHIVE_NAME.tar.gz.sig \u0026\u0026 tar -xvzf $SWIFT_ARCHIVE_NAME.tar.gz --directory / --strip-components=1 \u0026\u0026 rm -rf $SWIFT_ARCHIVE_NAME* /tmp/* /var/tmp/*)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "swift --version"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}