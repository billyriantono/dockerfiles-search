MetaArgs: null
Stages:
- BaseName: kiasaki/alpine-golang
  Commands:
  - CmdLine:
    - apk update
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add zsh git curl make gcc g++ python linux-headers paxctl libgcc libstdc++
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -v -u github.com/ipfs/go-ipfs/cmd/ipfs
    Name: run
    PrependShell: true
  - Env:
    - Key: VERSION
      Value: v4.0.0
    Name: env
  - Env:
    - Key: CONFIG_FLAGS
      Value: '"--fully-static"'
    - Key: DEL_PKGS
      Value: '"libgcc libstdc++"'
    - Key: RM_DIRS
      Value: /usr/include
    Name: env
  - CmdLine:
    - curl -sSL https://nodejs.org/dist/${VERSION}/node-${VERSION}.tar.gz | tar -xz
      &&   cd /node-${VERSION} &&   ./configure --prefix=/usr ${CONFIG_FLAGS} &&   make
      -j$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) &&   make install &&   paxctl
      -cm /usr/bin/node &&   cd / &&   if [ -x /usr/bin/npm ]; then     npm install
      -g npm &&     find /usr/lib/node_modules/npm -name test -o -name .bin -type
      d | xargs rm -rf;   fi &&   apk del curl make gcc g++ python linux-headers paxctl
      ${DEL_PKGS} &&   rm -rf /etc/ssl /node-${VERSION} ${RM_DIRS}     /usr/share/man
      /tmp/* /var/cache/apk/* /root/.npm /root/.node-gyp     /usr/lib/node_modules/npm/man
      /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
    - "4001"
    - "5001"
    - "8080"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app
  - CmdLine:
    - ./app/startup.sh
    Name: cmd
    PrependShell: true
  From:
    Image: kiasaki/alpine-golang
  Name: ""
  Platform: ""
  SourceCode: FROM kiasaki/alpine-golang
