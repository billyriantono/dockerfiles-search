MetaArgs: null
Stages:
- As: videocli
  BaseName: docker.klink.asia/images/video-processing-cli:0.5.3
  Commands: null
  From:
    Image: docker.klink.asia/images/video-processing-cli:0.5.3
  Name: videocli
  Platform: ""
  SourceCode: FROM docker.klink.asia/images/video-processing-cli:0.5.3 AS videocli
- As: builder
  BaseName: docker.klink.asia/main/docker-php:7.1
  Commands:
  - Chown: php:php
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /var/www/html
  - CmdLine:
    - mkdir bin &&    mkdir -p "storage/app/projects/avatars" &&    mkdir -p "storage/documents"
      &&    mkdir -p "storage/framework/cache" &&    mkdir -p "storage/framework/cache/data"
      &&    mkdir -p "storage/framework/sessions" &&    mkdir -p "storage/framework/views"
      &&    mkdir -p "storage/logs" &&    composer install --no-dev --prefer-dist
      &&    composer run install-content-cli &&    composer run install-language-cli
      &&    composer run install-streaming-client
    Name: run
    PrependShell: true
  - CmdLine:
    - yarn config set cache-folder .yarn &&     yarn install &&     yarn run production
    Name: run
    PrependShell: true
  From:
    Image: docker.klink.asia/main/docker-php:7.1
  Name: builder
  Platform: ""
  SourceCode: FROM docker.klink.asia/main/docker-php:7.1 AS builder
- As: php
  BaseName: php:7.1-fpm
  Commands:
  - Env:
    - Key: KBOX_PHP_MAX_EXECUTION_TIME
      Value: "120"
    Name: env
  - Env:
    - Key: KBOX_PHP_MAX_INPUT_TIME
      Value: "120"
    Name: env
  - Env:
    - Key: KBOX_PHP_MEMORY_LIMIT
      Value: 500M
    Name: env
  - Env:
    - Key: KBOX_DIR
      Value: /var/www/dms
    Name: env
  - CmdLine:
    - apt-get update -yqq &&     apt-get install -yqq         locales         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng-dev         libbz2-dev         gettext         supervisor         cron         gdal-bin         ghostscript         libmagickwand-dev     &&
      docker-php-ext-install -j$(nproc) iconv mcrypt     && docker-php-ext-configure
      gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     && docker-php-ext-install
      -j$(nproc) gd     && docker-php-ext-install bz2 zip exif pdo_mysql bcmath pcntl
      opcache     && pecl channel-update pecl.php.net     && pecl install imagick     &&
      docker-php-ext-enable imagick     && apt-get clean     && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "locale-gen \"en_US.UTF-8\"     && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure
      locales  \t&& locale-gen \"C.UTF-8\"  \t&& DEBIAN_FRONTEND=noninteractive dpkg-reconfigure
      locales  \t&& /usr/sbin/update-locale LANG=\"C.UTF-8\""
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -e; \tNGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62; \tNGINX_VERSION=1.14.2-1~stretch;
      \tfound=''; \tapt-get update; \tapt-get install --no-install-recommends --no-install-suggests
      -y gnupg1 apt-transport-https ca-certificates; \tfor server in \t\tha.pool.sks-keyservers.net
      \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu
      \t; do \t\techo \"Fetching GPG key $NGINX_GPGKEY from $server\"; \t\tapt-key
      adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\"
      && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed
      to fetch GPG key $NGINX_GPGKEY\" && exit 1;     echo \"deb http://nginx.org/packages/debian/
      stretch nginx\" >> /etc/apt/sources.list \t&& apt-get update \t&& apt-get install
      --no-install-recommends --no-install-suggests -y \t\t\t\t\t\tca-certificates
      \t\t\t\t\t\tnginx=${NGINX_VERSION}     && apt-get clean     && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '* * * * * php /var/www/dms/artisan schedule:run >> /dev/null 2>&1' | crontab
      -
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/nginx-default.conf
    - /etc/nginx/conf.d/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/php/php-*.ini
    - /usr/local/etc/php/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/php/zz-docker.conf
    - /usr/local/etc/php-fpm.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/supervisor/kbox.conf
    - /etc/supervisor/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/configure.sh
    - /usr/local/bin/configure.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/start.sh
    - /usr/local/bin/start.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/db-connect-test.php
    - /usr/local/bin/db-connect-test.php
  - CmdLine:
    - chmod +x /usr/local/bin/configure.sh &&     chmod +x /usr/local/bin/start.sh
    Name: run
    PrependShell: true
  - Chown: www-data:www-data
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /var/www/dms/
  - Chown: www-data:www-data
    From: builder
    Name: copy
    SourcesAndDest:
    - /var/www/html/vendor/
    - /var/www/dms/vendor/
  - Chown: www-data:www-data
    From: builder
    Name: copy
    SourcesAndDest:
    - /var/www/html/bin/
    - /var/www/dms/bin/
  - Chown: www-data:www-data
    From: builder
    Name: copy
    SourcesAndDest:
    - /var/www/html/public/
    - /var/www/dms/public/
  - Chown: www-data:www-data
    From: videocli
    Name: copy
    SourcesAndDest:
    - /video-processing-cli/
    - '"/var/www/dms/bin/"'
  - Env:
    - Key: KBOX_STORAGE
      Value: '"/var/www/dms/storage"'
    Name: env
  - Name: workdir
    Path: /var/www/dms
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /usr/local/bin/start.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: php:7.1-fpm
  Name: php
  Platform: ""
  SourceCode: FROM php:7.1-fpm AS php
