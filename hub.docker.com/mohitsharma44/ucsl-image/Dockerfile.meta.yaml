MetaArgs: null
Stages:
- BaseName: python:3.6.6-slim-stretch
  Commands:
  - Maintainer: Mohit_Sharma <mohit.sharma@nyu.edu>
    Name: maintainer
  - Key: NB_USER
    Name: arg
    Value: pui_user
  - Name: user
    User: root
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends     wget     bzip2     ca-certificates     sudo     locales     git     emacs     python-dev     unzip     libsm6     pandoc     texlive-latex-base     texlive-latex-extra     texlive-fonts-extra     texlive-fonts-recommended     texlive-generic-recommended     libxrender1     fonts-dejavu     gfortran     gcc     libnetcdf-dev     libhdf5-dev     libproj-dev     libgeos++-dev     libgeos-dev     &&
      apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://github.com/krallin/tini/releases/download/v0.9.0/tini &&     echo
      "faafbfb5b079303691a939a747d7f60591f2143164093727e870b289a44d9872 *tini" | sha256sum
      -c - &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Env:
    - Key: NB_UID
      Value: "1000"
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - useradd -m -s /bin/bash -N -u $NB_UID $NB_USER &&     adduser $NB_USER sudo
      &&     echo 'ALL ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers &&     mkdir -p $CONDA_DIR
      &&     chown $NB_USER $CONDA_DIR
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - CmdLine:
    - mkdir /home/$NB_USER/.jupyter &&     mkdir -p -m 700 /home/$NB_USER/.local/share/jupyter
      &&     echo "cacert=/etc/ssl/certs/ca-certificates.crt" > /home/$NB_USER/.curlrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     mkdir -p $CONDA_DIR &&     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh
      &&     echo "ea4594241e13a2671c5b158b3b813f0794fe58d514795fbf72a1aad24db918cf  Miniconda3-4.5.11-Linux-x86_64.sh"
      | sha256sum -c - &&     /bin/bash Miniconda3-4.5.11-Linux-x86_64.sh -f -b -p
      $CONDA_DIR &&     rm Miniconda3-4.5.11-Linux-x86_64.sh &&     $CONDA_DIR/bin/conda
      install --quiet --yes conda==4.5.11 &&     $CONDA_DIR/bin/conda config --system
      --add channels conda-forge &&     $CONDA_DIR/bin/conda update conda &&     conda
      clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install 'jupyterhub'
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'cython'     'numpy'     'pillow'     'matplotlib'     'scipy'     'pandas'
      &&     conda install -c conda-forge ipywidgets &&     conda remove --quiet --yes
      --force qt pyqt &&     conda clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable --py widgetsnbextension --sys-prefix
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create --quiet --yes -p $CONDA_DIR/envs/python2 python=2.7     'cython'     'numpy'     'pillow'     'matplotlib'     'scipy'     'pandas'
      &&     conda install -c conda-forge -p $CONDA_DIR/envs/python2 python=2.7 ipywidgets
      &&     conda remove -n python2 --quiet --yes --force qt pyqt &&     conda clean
      -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $CONDA_DIR/envs/python2/bin/pip $CONDA_DIR/bin/pip2 &&     ln -s $CONDA_DIR/bin/pip
      $CONDA_DIR/bin/pip3
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $HOME/.ipython/profile_default/startup
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'notebook'     && conda clean -tipsy
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - $CONDA_DIR/envs/python2/bin/python -m ipykernel install
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Name: workdir
    Path: /home/
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start-notebook.sh
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-notebook.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-singleuser.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /home/$NB_USER/.jupyter/
  - CmdLine:
    - chown -R $NB_USER:users /home/$NB_USER/.jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/start-*
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  From:
    Image: python:3.6.6-slim-stretch
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6.6-slim-stretch
