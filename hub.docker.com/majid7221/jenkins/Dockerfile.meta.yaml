MetaArgs: null
Stages:
- BaseName: majid7221/java:oracle-11
  Commands:
  - Env:
    - Key: JENKINS_HOME
      Value: /var/jenkins_home
    Name: env
  - Env:
    - Key: JENKINS_SLAVE_AGENT_PORT
      Value: "50000"
    Name: env
  - CmdLine:
    - set -ex     && apt-get update     && apt-get install -y ttf-dejavu fontconfig     &&
      rm -rf /var/lib/{apt,dpkg,cache,log}/ /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && groupadd jenkins     && useradd -d "$JENKINS_HOME" -m -s /bin/bash
      -g jenkins jenkins     && chown jenkins:jenkins $JENKINS_HOME
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $JENKINS_HOME
  - CmdLine:
    - mkdir -p /usr/share/jenkins/ref/init.groovy.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/init.groovy
    - /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy
  - Env:
    - Key: JENKINS_VERSION
      Value: 2.176.1
    Name: env
  - Env:
    - Key: JENKINS_URL
      Value: https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war
    Name: env
  - CmdLine:
    - set -ex     && curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R jenkins:jenkins "$JENKINS_HOME" /usr/share/jenkins/ref
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && curl -fsSL https://download.docker.com/linux/$(. /etc/os-release;
      echo "$ID")/gpg > /tmp/dkey; apt-key add /tmp/dkey     && echo  "deb [arch=amd64]
      http://download.docker.com/linux/debian stretch stable" >> /etc/apt/sources.list     &&
      apt-get update     && apt-get -y install docker-ce     && usermod -a -G docker
      jenkins     && rm -rf /var/lib/{apt,dpkg,cache,log}/ /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && apt-get update     && apt-get -y install ansible     && ansible
      --version     && rm -rf /var/lib/{apt,dpkg,cache,log}/ /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && apt-get update     && apt-get -y install python-pip     && pip
      install docker docker-compose     && rm -rf /var/lib/{apt,dpkg,cache,log}/ /tmp/*
      /var/tmp/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "50000"
  - Env:
    - Key: COPY_REFERENCE_FILE_LOG
      Value: $JENKINS_HOME/copy_reference_file.log
    Name: env
  - CmdLine:
    - ln -s /lib/libc.musl-x86_64.so.1 /usr/lib/libc.musl-x86_64.so.1
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/lib
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/jenkins-support
    - /usr/local/bin/jenkins-support
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/jenkins.sh
    - /usr/local/bin/jenkins.sh
  - CmdLine:
    - /usr/bin/dumb-init
    - -cv
    - /usr/local/bin/jenkins.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: majid7221/java:oracle-11
  Name: ""
  Platform: ""
  SourceCode: FROM majid7221/java:oracle-11
