{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "majid7221/debian:stretch",
      "SourceCode": "FROM majid7221/debian:stretch",
      "Platform": "",
      "From": {
        "Image": "majid7221/debian:stretch"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 groupadd -r postgres --gid=999     \u0026\u0026 useradd -r -g postgres --uid=999 postgres"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 touch /usr/share/locale/locale.alias     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         locales     \u0026\u0026 rm -rf /var/lib/{apt,dpkg,cache,log}/ /tmp/* /var/tmp/* \t\u0026\u0026 localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /docker-entrypoint-initdb.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8' \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --no-tty --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" \t\u0026\u0026 gpg --export \"$key\" \u003e /etc/apt/trusted.gpg.d/postgres.gpg \t\u0026\u0026 rm -rf \"$GNUPGHOME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PG_MAJOR",
              "Value": "11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 echo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main $PG_MAJOR\" \u003e /etc/apt/sources.list.d/pgdg.list     \u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y         postgresql-common \t\u0026\u0026 sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \t\u0026\u0026 apt-get install -y \t\t\"postgresql-$PG_MAJOR\" \t\u0026\u0026 rm -rf /var/lib/{apt,dpkg,cache,log}/ /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 mv -v \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\" /usr/share/postgresql/ \t\u0026\u0026 ln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\" \t\u0026\u0026 sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample     \u0026\u0026 mkdir -p /var/run/postgresql     \u0026\u0026 chown -R postgres:postgres /var/run/postgresql     \u0026\u0026 chmod 2777 /var/run/postgresql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/lib/postgresql/$PG_MAJOR/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/var/lib/postgresql/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 mkdir -p \"$PGDATA\"     \u0026\u0026 chown -R postgres:postgres \"$PGDATA\"     \u0026\u0026 chmod 777 \"$PGDATA\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/postgresql/data"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/postgresql/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "ln -s usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "CmdLine": [
            "postgres"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}