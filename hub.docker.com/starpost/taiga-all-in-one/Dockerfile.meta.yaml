MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - CmdLine:
    - echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk update && apk add         python3         python3-dev         libxml2-dev
      \        libxslt-dev         nodejs-current         unzip         gettext         openssl
      \        postgresql         postgresql-dev \trabbitmq-server \tgcc \tjpeg-dev
      zlib-dev musl-dev \tgit \tbash         nginx"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget -O /taiga-back.zip \thttps://github.com/taigaio/taiga-back/archive/stable.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip /taiga-back.zip -d /
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /taiga-back-stable /taiga-back
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /taiga-back
  - CmdLine:
    - LIBRARY_PATH=/lib:/usr/lib /bin/sh -c "pip3 install -r requirements.txt"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - taiga-back/*
    - /taiga-back/settings/
  - CmdLine:
    - python3 manage.py compilemessages
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 manage.py collectstatic --noinput
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget -O /taiga-front-dist.zip \thttps://github.com/taigaio/taiga-front-dist/archive/stable.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip /taiga-front-dist.zip -d /
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /taiga-front-dist-stable /taiga-front-dist
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /taiga-front-dist
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - taiga-front/*
    - /taiga-front-dist/dist/
  - CmdLine:
    - git clone https://github.com/taigaio/taiga-events.git /taiga-events
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /taiga-events
  - CmdLine:
    - npm install -g coffee-script
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - taiga-events/*
    - /taiga-events/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - CmdLine:
    - rm -rf /taiga-front-dist.zip /taiga-back.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /scripts
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/*
    - /scripts/
  - Name: workdir
    Path: /scripts
  - CmdLine:
    - mkdir -p /run/nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - chown rabbitmq /usr/lib/rabbitmq
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: volume
    Volumes:
    - /var/lib/postgresql
  - Name: volume
    Volumes:
    - /var/lib/rabbitmq
  - Name: volume
    Volumes:
    - /taiga-back/media
  - CmdLine:
    - /scripts/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ./forego
    - start
    Name: cmd
    PrependShell: false
  - CmdLine:
    - git clone https://github.com/starpost/taiga-contrib-gitlab-auth.git /taiga-gitlab
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /taiga-gitlab
  - CmdLine:
    - git checkout gitlab
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /taiga-gitlab/front
  - CmdLine:
    - npm install gulp-cli -g
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install gulp -D
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - gulp build
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /taiga-front-dist/dist/plugins/gitlab-auth/
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -a dist/* /taiga-front-dist/dist/plugins/gitlab-auth/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /taiga-gitlab/back
  - CmdLine:
    - pip3 install -e .
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /scripts
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
