{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Jupyter Project \u003cjupyter@googlegroups.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026     apt-get -y upgrade \u0026\u0026     apt-get -y install npm nodejs nodejs-legacy wget locales git \u0026\u0026    /usr/sbin/update-locale LANG=C.UTF-8 \u0026\u0026     locale-gen C.UTF-8 \u0026\u0026     apt-get remove -y locales \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q https://repo.continuum.io/miniconda/Miniconda3-3.9.1-Linux-x86_64.sh -O /tmp/miniconda.sh  \u0026\u0026     bash /tmp/miniconda.sh -f -b -p /opt/conda \u0026\u0026     /opt/conda/bin/conda install --yes python=3.5 sqlalchemy tornado jinja2 traitlets requests pip \u0026\u0026     /opt/conda/bin/pip install --upgrade pip \u0026\u0026     rm /tmp/miniconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install -g configurable-http-proxy \u0026\u0026 rm -rf ~/.npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/srv/"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/srv/jupyterhub"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/srv/jupyterhub/"
        },
        {
          "CmdLine": [
            "python setup.py js \u0026\u0026 pip install . \u0026\u0026     rm -rf node_modules ~/.cache ~/.npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "CmdLine": [
            "pip install --upgrade pip \u0026\u0026 pip install git+git://github.com/fokko/dockerspawner.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "org.jupyter.service",
              "Value": "\"jupyterhub\""
            }
          ],
          "Name": "label"
        },
        {
          "Expression": "ADD jupyterhub_config.py /srv/jupyterhub/jupyterhub_config.py",
          "Name": "onbuild"
        },
        {
          "CmdLine": [
            "jupyterhub",
            "-f",
            "/srv/jupyterhub/jupyterhub_config.py",
            "--no-ssl",
            "--log-level=DEBUG"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}