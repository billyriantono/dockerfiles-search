{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "mcreations/openwrt-java:jdk8",
      "SourceCode": "FROM mcreations/openwrt-java:jdk8",
      "Platform": "",
      "From": {
        "Image": "mcreations/openwrt-java:jdk8"
      },
      "Commands": [
        {
          "Maintainer": "Reza Rahimi \u003crahimi@m-creations.net\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "opkg update \u0026\u0026 opkg install     coreutils-base64     coreutils-nohup     coreutils-sha1sum     coreutils-sha256sum     curl     git     git-http     graphviz     libltdl     openssh-client     openssl-util     shadow-groupadd     shadow-groupmod     shadow-su     shadow-useradd     shadow-usermod     zip     \u0026\u0026 dot -c"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/data/jenkins_home"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/data/jenkins_home"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SLAVE_AGENT_PORT",
              "Value": "50000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_HOST_GID",
              "Value": "131"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_UID",
              "Value": "201"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_GID",
              "Value": "201"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -g ${JENKINS_GID} jenkins     \u0026\u0026 groupadd -g ${DOCKER_HOST_GID} docker     \u0026\u0026 mkdir -p ${JENKINS_HOME}     \u0026\u0026 useradd -d \"$JENKINS_HOME\" -u ${JENKINS_UID} -g ${JENKINS_GID} -G docker -m -s /bin/bash jenkins     \u0026\u0026 chown -R jenkins:root /data     \u0026\u0026 chown -R jenkins:jenkins \"${JENKINS_HOME}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Env": [
            {
              "Key": "SSL_CERTIFICATES_HOME",
              "Value": "/data/ssl"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSL_CERTIFICATES_DEST_HOME",
              "Value": "/etc/ssl/certs"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_SECURITY_KEYSTORE_HOME",
              "Value": "$SSL_CERTIFICATES_HOME/keystore"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_SECURITY_KEYSTORE_PATH",
              "Value": "$JAVA_SECURITY_KEYSTORE_HOME/cacerts"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/jenkins/ref/init.groovy.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "0.13.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_SHA",
              "Value": "afbf8de8a63ce8e4f18cb3f34dfdbbd354af68a1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static-amd64 -o /bin/tini \u0026\u0026 chmod +x /bin/tini   \u0026\u0026 echo \"$TINI_SHA  /bin/tini\" | sha1sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init.groovy",
            "/usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy"
          ]
        },
        {
          "Key": "JENKINS_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "JENKINS_VERSION",
              "Value": "${JENKINS_VERSION:-2.46.1}"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "JENKINS_SHA",
          "Name": "arg",
          "Value": "33a3f4d983c6188a332291e1d974afa0a2ee96a0ae3cb6dd4f2098086525f9f1"
        },
        {
          "Key": "JENKINS_URL",
          "Name": "arg",
          "Value": "https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war"
        },
        {
          "CmdLine": [
            "wget --progress=dot:giga ${JENKINS_URL} -O /usr/share/jenkins/jenkins.war   \u0026\u0026 echo \"${JENKINS_SHA}  /usr/share/jenkins/jenkins.war\" | sha256sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_MAJOR_VERSION",
              "Value": "3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.3.9"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/opt/maven"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_DOWNLOAD_URL",
              "Value": "http://ftp.halifax.rwth-aachen.de/apache/maven/maven-${MAVEN_MAJOR_VERSION}/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_REPO",
              "Value": "/data/jenkins_home/maven-repository"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_UC",
              "Value": "https://updates.jenkins.io"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $JENKINS_HOME   \u0026\u0026 mkdir -p $SSL_CERTIFICATES_HOME   \u0026\u0026 wget -O /tmp/maven.tgz --progress=dot:giga $MAVEN_DOWNLOAD_URL   \u0026\u0026 cd /tmp/   \u0026\u0026 tar -xvzf maven.tgz   \u0026\u0026 mv /tmp/apache-maven-${MAVEN_VERSION} $MAVEN_HOME   \u0026\u0026 rm -f /tmp/maven.tgz   \u0026\u0026 chown -R jenkins:jenkins \"${JENKINS_HOME}\" /usr/share/jenkins/ref   \u0026\u0026 sed -i \"s#\\(\u003c/settings\u003e\\)#\u003clocalRepository\u003e${MAVEN_REPO}\u003c/localRepository\u003e\\n\\1#g\" $MAVEN_HOME/conf/settings.xml   \u0026\u0026 chown -R jenkins:root /data   \u0026\u0026 chown -R jenkins:root \"$JAVA_HOME\"   \u0026\u0026 chmod 775 \"$SSL_CERTIFICATES_DEST_HOME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "50000"
          ]
        },
        {
          "Env": [
            {
              "Key": "COPY_REFERENCE_FILE_LOG",
              "Value": "$JENKINS_HOME/copy_reference_file.log"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins-support",
            "/usr/local/bin/jenkins-support"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins.sh",
            "/usr/local/bin/jenkins.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start-jenkins",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins-chown-and-start",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/jenkins-chown-and-start"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugins.sh",
            "/usr/local/bin/plugins.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "install-plugins.sh",
            "/usr/local/bin/install-plugins.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${JENKINS_HOME}"
        }
      ]
    }
  ]
}