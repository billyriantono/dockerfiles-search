MetaArgs: null
Stages:
- BaseName: phusion/baseimage:latest
  Commands:
  - Maintainer: B. van Berkum <dev@dotmpe.com>
    Name: maintainer
  - Key: X_DCKR_PREFIX
    Name: arg
    Value: ""
  - Key: X_DCKR_BASENAME
    Name: arg
    Value: ""
  - Key: X_DCKR_NAME
    Name: arg
    Value: ""
  - Key: X_DCKR_BASE
    Name: arg
    Value: ""
  - Key: X_DCKR_TAG
    Name: arg
    Value: ""
  - Key: X_DCKR_AI_TIME
    Name: arg
    Value: ""
  - Key: X_DCKR_CI_TIME
    Name: arg
    Value: ""
  - Key: X_DCKR_RELEASE
    Name: arg
    Value: ""
  - Key: BUILD_CODE
    Name: arg
    Value: ""
  - Key: IMAGE_NAME
    Name: arg
    Value: ""
  - Key: DOCKER_TAGS
    Name: arg
    Value: ""
  - Key: DOCKER_TAG
    Name: arg
    Value: ""
  - Key: SOURCE_TYPE
    Name: arg
    Value: ""
  - Key: SOURCE_BRANCH
    Name: arg
    Value: ""
  - Key: GIT_SHA1
    Name: arg
    Value: ""
  - Key: COMMIT_MSG
    Name: arg
    Value: ""
  - Key: BUILD_DATE
    Name: arg
    Value: ""
  - Key: VERSION
    Name: arg
    Value: ""
  - Labels:
    - Key: org.label-schema.description
      Value: '"A bunch of py/rb/js dev tooling and a user setup"'
    - Key: org.label-schema.name
      Value: '"$IMAGE_NAME"'
    - Key: org.label-schema.build-date
      Value: '"$BUILD_DATE"'
    - Key: org.label-schema.version
      Value: '"$VERSION"'
    - Key: org.label-schema.vcs-ref
      Value: $GIT_COMMIT
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/bvberkum/x-docker"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive; RUNLEVEL=1;   apt-get update -qqy &&   apt-get
      upgrade -y -o Dpkg::Options::="--force-confold" &&   apt-get install -qqy --allow-downgrades     bash
      zsh dash posh ash ksh mksh busybox-static     build-essential libreadline-dev
      time gawk      bc curl elinks git jq graphviz imagemagick     figlet update-motd
      libnet-ifconfig-wrapper-perl     make man moreutils netcat nodejs npm pandoc
      unrtf antiword     php-cli python python-dev python-tox python-yaml     realpath
      ruby-full rubygems socat sqlite3 ssh sudo tmux tree uuid-runtime     vim git-annex
      gist glances     software-properties-common     autoconf libtool     zlib1g
      wget libcurl4-openssl-dev libelf-dev libdw-dev cmake cmake-data g++     binutils-dev     libiberty-dev
      zlib1g-dev     libzmq-dev     golang     &&   curl -s     https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh
      |     bash &&   apt-get update -qqy &&   apt-get install -qqy git-lfs &&   unset
      DEBIAN_FRONTEND RUNLEVEL &&   rm -rf /var/cache/apt/*
    Name: run
    PrependShell: true
  - Key: node_version
    Name: arg
    Value: lts
  - CmdLine:
    - npm install --quiet -g npm &&       npm cache clean -f &&       npm install
      --quiet -g n &&       n $node_version &&   chmod g+rw /usr/local/* /usr/local/lib/node_modules
      &&   chgrp staff /usr/local/* /usr/local/lib/node_modules &&   version="$(cd
      /usr/local/n/versions/node/; echo * | tr ' ' '\n' | sort -rn | head -n 1)";   {
      test -e /usr/bin/node ||     ln -sf /usr/local/n/versions/node/$version/bin/node
      /usr/bin/node ; }
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /tmp/ && curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python
      get-pip.py &&   pip install --quiet     markdown BeautifulSoup mkdocs==0.17.5
      \  \tsetuptools PyYAML zope.interface zope.component objectpath docutils &&
      \  for b in rst2html rst2xml rst2pxml; do     ln -s /usr/local/bin/$b.py /usr/local/bin/$b;
      done"
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --quiet -g coffeescript pm2 grunt grunt-cli webpack node-gyp &&   npm
      update --quiet -g nan &&   npm install --quiet --unsafe-perm -g zmq &&   gem
      install --quiet sass
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/SimonKagstrom/kcov.git /src/github.com/SimonKagstrom/kcov
      &&   cd /src/github.com/SimonKagstrom/kcov &&   DEFAULT_KCOV_GIT_REF=$(git tag
      --list | grep "^v[0-9]\+$" | sort -V | tail --lines 1) &&   KCOV_GIT_REF=${KCOV_GIT_REF:-$DEFAULT_KCOV_GIT_REF}
      &&   git reset --hard $KCOV_GIT_REF &&   mkdir build && cd build && cmake ..
      && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - test -n "$BATS_REPO" || BATS_REPO=https://github.com/bvberkum/bats-core.git
      ;   test -n "$SRC_PREFIX" || SRC_PREFIX=/src/github.com/bvberkum ;   test -n
      "$BATS_BRANCH" || BATS_BRANCH=forks/bvb-dev ;   git clone $BATS_REPO $SRC_PREFIX/bats
      &&   (     cd $SRC_PREFIX/bats &&     git checkout $BATS_BRANCH &&     ./install.sh
      /usr/local   ) &&   bats --version
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH=$PATH:/usr/local/bin' > /etc/profile.d/ssh-environment;   mv
      /etc/profile /tmp/profile;   { echo 'export PATH=$PATH:/usr/local/bin';     cat
      /tmp/profile;   } >/etc/profile;   {     echo ;     echo "if test -e ~/.bashrc
      ; then source ~/.bashrc ; fi ";   } >> /etc/bash.bashrc;   figlet Treebox >
      /etc/ssh/banner &&   echo "Banner /etc/ssh/banner" >> /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - Key: username
    Name: arg
    Value: treebox
  - CmdLine:
    - touch /etc/sudoers.d/treebox && {     echo "$username    ALL=NOPASSWD:/usr/sbin/service
      *";     echo "$username    ALL=(www-data) NOPASSWD:ALL";   } > /etc/sudoers.d/treebox;   useradd
      -d /home/$username -s /bin/bash $username &&   mkdir -vp /home/$username/project
      &&   usermod $username -a -G sudo,staff,ssh &&   ln -s /home/$username /srv/home-local
      &&   ln -s /srv/home-local/project /srv/project-local &&   ln -s /src /srv/src-local
      &&   chown -R $username:$username /home/$username/ &&   mkdir -vp /src/github.com
      /src/bitbucket.org /src/local /srv &&   chown -R $username:staff /src/github.com
      /src/bitbucket.org /src/local /srv &&   chmod -R g+rw /src/github.com /src/bitbucket.org
      /src/local &&   chgrp staff /srv /etc/container_environment &&   chmod -R g+rx
      /etc/container_environment
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: TREEBOX_USER
      Value: $username
    - Key: TREEBOX_BUILD_ID
      Value: '"$BUILD_CODE"'
    - Key: TREEBOX_IMAGE
      Value: '"$IMAGE_NAME:$DOCKER_TAG"'
    - Key: TREEBOX_SOURCE
      Value: '"$SOURCE_BRANCH:$GIT_SHA1"'
    - Key: X_DCKR_AI_TIME
      Value: '"$X_DCKR_AI_TIME"'
    - Key: X_DCKR_CI_TIME
      Value: '"$X_DCKR_CI_TIME"'
    - Key: TREEBOX_TAGS
      Value: '"$DOCKER_TAGS"'
    - Key: TREEBOX_TAG
      Value: '"$DOCKER_TAG"'
    - Key: TREEBOX_BUILD_TIME
      Value: '"$BUILD_DATE"'
    - Key: TREEBOX_BUILD
      Value: '"$X_DCKR_RELEASE"'
    - Key: TREEBOX_VERSION
      Value: '"$VERSION"'
    - Key: TREEBOX_SCM
      Value: $SOURCE_TYPE
    - Key: TREEBOX_SCM_BRANCH
      Value: '"$SOURCE_BRANCH"'
    - Key: TREEBOX_SCM_COMMIT
      Value: '"$GIT_SHA1"'
    - Key: TREEBOX_SCM_COMMIT_MSG
      Value: '"$COMMIT_MSG"'
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US:en
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Name: user
    User: $username
  - CmdLine:
    - 'git clone https://github.com/basherpm/basher.git /home/$username/.basher &&   (
      echo ''export PATH="$HOME/.basher/bin:$HOME/.basher/cellar/bin:$PATH"'' >> /home/$username/.bash_profile
      ) &&   ( echo ''export PATH="$HOME/.basher/bin:$HOME/.basher/cellar/bin:$PATH"''
      >> /home/$username/.profile ) &&   ( echo '': "${CS:=dark}"; export CS'' >>
      /home/$username/.bash_profile ) &&   ( echo '': "${TERM:=xterm}"; export TERM''
      >> /home/$username/.bash_profile ) &&   ( echo ''test -n "$CS" || CS=dark; export
      CS'' >> /home/$username/.profile ) &&   ( echo ''test -n "$TERM" || TERM=xterm;
      export TERM'' >> /home/$username/.profile ) &&   . ~/.profile &&   BASHER_FULL_CLONE=true
      basher install bvberkum/user-scripts &&   cd /home/$username/.basher/cellar/packages/bvberkum/user-scripts
      &&   git checkout r0.0 &&   mkdir -p /src/github.com/bvberkum &&   git clone
      https://github.com/bvberkum/oil.git /src/github.com/bvberkum/oil &&   cd /src/github.com/bvberkum/oil
      &&   git checkout feature/ast-visitor-cli &&   make configure && build/dev.sh
      minimal'
    Name: run
    PrependShell: true
  - Env:
    - Key: TREEBOX_IMAGE
      Value: '"$IMAGE_NAME"'
    - Key: TREEBOX_SOURCE
      Value: '"$SOURCE_BRANCH:$GIT_COMMIT"'
    - Key: LANG
      Value: en_US.UTF-8
    - Key: U_S
      Value: /home/$username/.basher/cellar/packages/bvberkum/user-scripts
    Name: env
  From:
    Image: phusion/baseimage:latest
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:latest
