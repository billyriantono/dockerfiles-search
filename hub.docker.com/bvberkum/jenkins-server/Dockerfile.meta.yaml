MetaArgs: null
Stages:
- BaseName: jenkins:2.0
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - usermod -aG shadow jenkins &&   usermod -aG staff jenkins &&   usermod -aG sudo
      jenkins &&   echo 'jenkins:jenkins' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - staff_group_dirs="/opt /src /opt/dotmpe/docker-jenkins /etc/jenkins_jobs";   for
      dir in $staff_group_dirs;   do     mkdir -vp $dir && chgrp staff $dir && chmod
      g+rw $dir ;   done
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   RUNLEVEL=1 DEBIAN_FRONTEND=noninteractive   apt-get install
      -y -qq     vim sudo tree tmux python apt-utils     rsync curl
    Name: run
    PrependShell: true
  - CmdLine:
    - cd &&   wget https://bootstrap.pypa.io/get-pip.py &&   python get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install docutils
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://deb.nodesource.com/setup_0.12 | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - RUNLEVEL=1 DEBIAN_FRONTEND=noninteractive              apt-get install -y -qq              nodejs
      build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g bower grunt-cli
    Name: run
    PrependShell: true
  - Name: user
    User: jenkins
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugins.txt
    - /plugins.txt
  - CmdLine:
    - /usr/local/bin/plugins.sh /plugins.txt
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - container-init.sh
    - /opt/dotmpe/docker-jenkins/init.sh
  - CmdLine:
    - chmod +x /opt/dotmpe/docker-jenkins/init.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - util.sh
    - /opt/dotmpe/docker-jenkins/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - table.lib.sh
    - /opt/dotmpe/docker-jenkins/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - os.lib.sh
    - /opt/dotmpe/docker-jenkins/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - std.lib.sh
    - /opt/dotmpe/docker-jenkins/
  - Key: jenkins_cli_cmd_flags
    Name: arg
    Value: ""
  - CmdLine:
    - /opt/dotmpe/docker-jenkins/init.sh init_cli       "$jenkins_cli_jar_flags" "$jenkins_cli_cmd_flags"     >
      /usr/local/bin/jenkins-cli &&   chmod +x /usr/local/bin/jenkins-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -vp /srv/project-local       && chown jenkins:jenkins /srv/project-local       &&
      chmod g+rw /srv       && chgrp jenkins /srv
    Name: run
    PrependShell: true
  - CmdLine:
    - pip uninstall -y six
    Name: run
    PrependShell: true
  - Name: user
    User: jenkins
  - Env:
    - Key: SRC_PREFIX
      Value: /src/
    Name: env
  - Key: JJB_TAG
    Name: arg
    Value: master
  - Key: JJB_SRC_DIR
    Name: arg
    Value: $SRC_PREFIX/jenkins-job-builder
  - CmdLine:
    - /opt/dotmpe/docker-jenkins/init.sh try_install_jjb $JJB_TAG &&   chown jenkins:staff
      -R $JJB_SRC_DIR
    Name: run
    PrependShell: true
  - Key: JJB_USER
    Name: arg
    Value: jenkins
  - Key: JJB_PASSWORD
    Name: arg
    Value: jenkins
  - CmdLine:
    - mkdir -vp /etc/jenkins_jobs &&   /opt/dotmpe/docker-jenkins/init.sh init_jjb
      localhost:8080 $JJB_USER $JJB_PASSWORD     > /etc/jenkins_jobs/jenkins_jobs.ini
      &&   chown jenkins:staff /etc/jenkins_jobs/jenkins_jobs.ini
    Name: run
    PrependShell: true
  - Key: JTB_TAG
    Name: arg
    Value: master
  - Key: JTB_SRC_DIR
    Name: arg
    Value: $SRC_PREFIX/jenkins-templated-builds
  - CmdLine:
    - cd && mkdir -vp .local/bin &&   /opt/dotmpe/docker-jenkins/init.sh try_install_jtb
      $JTB_TAG
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - script/executors.groovy
    - /usr/share/jenkins/ref/init.groovy.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - script/setup-user-security.groovy
    - /usr/share/jenkins/ref/init.groovy.d/
  - Key: company_url
    Name: arg
    Value: http://github.com/dotmpe/docker-jenkins
  - Key: jenkins_install_wizard
    Name: arg
    Value: "false"
  - Env:
    - Key: JAVA_OPTS
      Value: -Dhudson.footerURL=$company_url               -Djenkins.install.runSetupWizard=$jenkins_install_wizard
    Name: env
  - Env:
    - Key: JENKINS_OPTS
      Value: --prefix=/
    Name: env
  - Name: expose
    Ports:
    - "8080"
  From:
    Image: jenkins:2.0
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins:2.0
