MetaArgs: null
Stages:
- As: build-server
  BaseName: 999eagle/docker-godot-build-server
  Commands: null
  From:
    Image: 999eagle/docker-godot-build-server
  Name: build-server
  Platform: ""
  SourceCode: FROM 999eagle/docker-godot-build-server AS build-server
- As: build-template-x11-64-debug
  BaseName: 999eagle/docker-godot-build-templates:x11_64_debug
  Commands: null
  From:
    Image: 999eagle/docker-godot-build-templates:x11_64_debug
  Name: build-template-x11-64-debug
  Platform: ""
  SourceCode: FROM 999eagle/docker-godot-build-templates:x11_64_debug AS build-template-x11-64-debug
- As: build-template-x11-64-release
  BaseName: 999eagle/docker-godot-build-templates:x11_64_release
  Commands: null
  From:
    Image: 999eagle/docker-godot-build-templates:x11_64_release
  Name: build-template-x11-64-release
  Platform: ""
  SourceCode: FROM 999eagle/docker-godot-build-templates:x11_64_release AS build-template-x11-64-release
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - "apt-get update && \tapt-get -y upgrade"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install ca-certificates gnupg2
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
      && \techo \"deb https://download.mono-project.com/repo/ubuntu stable-bionic
      main\" | tee /etc/apt/sources.list.d/mono-official-stable.list && \tapt-get
      update && \tapt-get -y install mono-complete"
    Name: run
    PrependShell: true
  - Key: GODOT_VERSION
    Name: arg
    Value: 3.0.6
  - Labels:
    - Key: mantainer
      Value: '"Sophie Tauchert <sophie@999eagle.moe>"'
    Name: label
  - Chown: ""
    From: build-server
    Name: copy
    SourcesAndDest:
    - /build/godot-src/src/bin/godot_server.server.opt.tools.64.mono
    - /build/godot
  - Chown: ""
    From: build-server
    Name: copy
    SourcesAndDest:
    - /build/godot-src/src/bin/GodotSharpTools.dll
    - /build/
  - Chown: ""
    From: build-server
    Name: copy
    SourcesAndDest:
    - /build/godot-src/src/bin/mscorlib.dll
    - /build/
  - Chown: ""
    From: build-template-x11-64-debug
    Name: copy
    SourcesAndDest:
    - /build/godot-src/src/bin/godot.x11.opt.debug.64.mono
    - /build/data/godot/templates/${GODOT_VERSION}.stable.mono/linux_x11_64_debug
  - Chown: ""
    From: build-template-x11-64-release
    Name: copy
    SourcesAndDest:
    - /build/godot-src/src/bin/godot.x11.opt.64.mono
    - /build/data/godot/templates/${GODOT_VERSION}.stable.mono/linux_x11_64_release
  - Env:
    - Key: XDG_CACHE_HOME
      Value: /build/cache
    Name: env
  - Env:
    - Key: XDG_CONFIG_HOME
      Value: /build/config
    Name: env
  - Env:
    - Key: XDG_DATA_HOME
      Value: /build/data
    Name: env
  - CmdLine:
    - mkdir -p ${XDG_CACHE_HOME} && mkdir -p ${XDG_CONFIG_HOME} && mkdir -p ${XDG_DATA_HOME}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /build
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
