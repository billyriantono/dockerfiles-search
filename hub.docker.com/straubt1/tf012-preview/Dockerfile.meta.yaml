MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Key: XC_OS
    Name: arg
    Value: '"linux"'
  - Key: XC_ARCH
    Name: arg
    Value: '"amd64"'
  - Key: TERRAFORM_VERSION
    Name: arg
    Value: '"0.12.0-beta2"'
  - Key: TERRAFORM_ARCHIVE
    Name: arg
    Value: '"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_${XC_OS}_${XC_ARCH}.zip"'
  - Key: AZURERM_VERSION
    Name: arg
    Value: '"1.25.0-dev20190415H16-dev"'
  - Key: AZURERM_ARCHIVE
    Name: arg
    Value: '"http://terraform-0.12.0-dev-snapshots.s3-website-us-west-2.amazonaws.com/terraform-provider-azurerm/${AZURERM_VERSION}/terraform-provider-azurerm_${AZURERM_VERSION}_${XC_OS}_${XC_ARCH}.zip"'
  - Key: AWS_VERSION
    Name: arg
    Value: '"2.7.0-dev20190415H16-dev"'
  - Key: AWS_ARCHIVE
    Name: arg
    Value: '"http://terraform-0.12.0-dev-snapshots.s3-website-us-west-2.amazonaws.com/terraform-provider-aws/${AWS_VERSION}/terraform-provider-aws_${AWS_VERSION}_${XC_OS}_${XC_ARCH}.zip"'
  - Key: RANDOM_VERSION
    Name: arg
    Value: '"3.0.0-dev20190216H01-dev"'
  - Key: RANDOM_ARCHIVE
    Name: arg
    Value: '"http://terraform-0.12.0-dev-snapshots.s3-website-us-west-2.amazonaws.com/terraform-provider-random/${RANDOM_VERSION}/terraform-provider-random_${RANDOM_VERSION}_${XC_OS}_${XC_ARCH}.zip"'
  - Key: TEMPLATE_VERSION
    Name: arg
    Value: '"2.2.0-dev20190415H16-dev"'
  - Key: TEMPLATE_ARCHIVE
    Name: arg
    Value: '"http://terraform-0.12.0-dev-snapshots.s3-website-us-west-2.amazonaws.com/terraform-provider-template/${TEMPLATE_VERSION}/terraform-provider-template_${TEMPLATE_VERSION}_${XC_OS}_${XC_ARCH}.zip"'
  - Key: LOCAL_VERSION
    Name: arg
    Value: '"2.0.0-dev20190216H01-dev"'
  - Key: LOCAL_ARCHIVE
    Name: arg
    Value: '"http://terraform-0.12.0-dev-snapshots.s3-website-us-west-2.amazonaws.com/terraform-provider-local/${LOCAL_VERSION}/terraform-provider-local_${LOCAL_VERSION}_${XC_OS}_${XC_ARCH}.zip"'
  - CmdLine:
    - apt-get update && apt-get -y install bash zip curl &&     mkdir '/terraform'
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/tf012.zip ${TERRAFORM_ARCHIVE} &&     unzip /tmp/tf012.zip -d /bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/tf012-azurerm.zip ${AZURERM_ARCHIVE} &&     unzip /tmp/tf012-azurerm.zip
      -d /bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/tf012-aws.zip ${AWS_ARCHIVE} &&     unzip /tmp/tf012-aws.zip -d
      /bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/tf012-random.zip ${RANDOM_ARCHIVE} &&     unzip /tmp/tf012-random.zip
      -d /bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/tf012-template.zip ${TEMPLATE_ARCHIVE} &&     unzip /tmp/tf012-template.zip
      -d /bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/tf012-local.zip ${LOCAL_ARCHIVE} &&     unzip /tmp/tf012-local.zip
      -d /bin
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /terraform
  - CmdLine:
    - /bin/terraform
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
