{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "amazonlinux:2.0.20190508",
      "SourceCode": "FROM amazonlinux:2.0.20190508",
      "Platform": "",
      "From": {
        "Image": "amazonlinux:2.0.20190508"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"CriticalBlue Ltd.\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "yum update -y   \u0026\u0026 yum install -y     git     jq     rsync     sudo     tar     unzip     yum-utils     vim   \u0026\u0026 amazon-linux-extras install -y ansible2=2.4.6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.12.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_DOWNLOAD_URL",
              "Value": "https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_DOWNLOAD_SHA256",
              "Value": "dbcf71a3c1ea53b8d54ef1b48c85a39a6c9a935d01fc8291ff2b92028e59913c"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz   \u0026\u0026 echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c -   \u0026\u0026 tar -C /usr/local -xzf golang.tar.gz   \u0026\u0026 rm golang.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PACKER_VERSION",
              "Value": "1.3.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PACKER_DOWNLOAD_URL",
              "Value": "https://releases.hashicorp.com/packer/\"$PACKER_VERSION\"/packer_\"$PACKER_VERSION\"_linux_amd64.zip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PACKER_DOWNLOAD_SHA256",
              "Value": "14922d2bca532ad6ee8e936d5ad0788eba96f773bcdcde8c2dc7c95f830841ec"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL \"$PACKER_DOWNLOAD_URL\" -o packer.zip   \u0026\u0026 echo \"$PACKER_DOWNLOAD_SHA256 packer.zip\" | sha256sum -c -   \u0026\u0026 unzip packer.zip -d /usr/local/bin/   \u0026\u0026 rm packer.zip   \u0026\u0026 rm /usr/sbin/packer   \u0026\u0026 adduser tester   \u0026\u0026 echo \"tester ALL = NOPASSWD: ALL\" \u003e /etc/sudoers.d/tester-init   \u0026\u0026 echo \"tester ALL=(ALL) NOPASSWD:ALL\" \u003e\u003e /etc/sudoers.d/tester-init   \u0026\u0026 mkdir /go   \u0026\u0026 chown -R tester:tester /go"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "tester"
        },
        {
          "Name": "workdir",
          "Path": "/go"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "go get github.com/tebeka/go2xunit   \u0026\u0026 go get github.com/axw/gocov/gocov   \u0026\u0026 go get github.com/AlekSi/gocov-xml   \u0026\u0026 go get github.com/githubnemo/CompileDaemon"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "8081"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CBPORT",
              "Value": "8082"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$PORT"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "$CBPORT"
          ]
        }
      ]
    }
  ]
}