MetaArgs: null
Stages:
- BaseName: openjdk:8-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Alexander Gro√ü <agross@therightstuff.de>"'
    Name: label
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - teamcity-server
    - run
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "8111"
  - Name: workdir
    Path: /teamcity
  - Health:
      StartPeriod: 120000000000
      Test:
      - CMD-SHELL
      - wget --server-response --output-document=/dev/null http://localhost:8111/login.html
        || exit 1
    Name: healthcheck
  - Key: VERSION
    Name: arg
    Value: "2019.2"
  - Key: DOWNLOAD_URL
    Name: arg
    Value: https://download.jetbrains.com/teamcity/TeamCity-$VERSION.tar.gz
  - Key: SHA_DOWNLOAD_URL
    Name: arg
    Value: https://download.jetbrains.com/teamcity/TeamCity-$VERSION.tar.gz.sha256
  - CmdLine:
    - echo Creating teamcity user and group with static ID of 3000 &&     addgroup
      -g 3000 -S teamcity &&     adduser -g "JetBrains TeamCity" -S -h "$(pwd)" -u
      3000 -G teamcity teamcity &&         echo Installing packages &&     apk add
      --no-cache bash                        coreutils                        ca-certificates                        git                        libressl                        tomcat-native                        wget
      &&         echo Downloading $DOWNLOAD_URL to $(pwd) &&     wget --progress bar:force:noscroll          "$DOWNLOAD_URL"
      &&         echo Verifying download &&     wget --progress bar:force:noscroll          --output-document          download.sha256          "$SHA_DOWNLOAD_URL"
      &&         sha256sum -c download.sha256 &&     rm download.sha256 &&         echo
      Extracting to $(pwd) &&     tar -xzvf TeamCity-$VERSION.tar.gz --directory .
      &&     rm TeamCity-$VERSION.tar.gz &&     mv TeamCity/* . &&     rm -r TeamCity
      &&         chown -R teamcity:teamcity . &&     chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sed --in-place --expression 's_</Host>.*$_  <Valve className="org.apache.catalina.valves.RemoteIpValve"\n               protocolHeader="x-forwarded-proto"\n               remoteIpHeader="x-forwarded-for"
      />\n      &_' conf/server.xml
    Name: run
    PrependShell: true
  - Name: user
    User: teamcity
  From:
    Image: openjdk:8-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-alpine
