{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.1",
      "SourceCode": "FROM ruby:2.1",
      "Platform": "",
      "From": {
        "Image": "ruby:2.1"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "HARFBUZZ_VERSION",
              "Value": "0.9.40"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TTFAUTOHINT_VERSION",
              "Value": "1.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y qt4-dev-tools     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -SLO \"http://www.freedesktop.org/software/harfbuzz/release/harfbuzz-$HARFBUZZ_VERSION.tar.bz2\"     \u0026\u0026 mkdir -p /usr/src/harfbuzz     \u0026\u0026 tar -xjf \"harfbuzz-$HARFBUZZ_VERSION.tar.bz2\" -C /usr/src/harfbuzz --strip-components=1     \u0026\u0026 rm \"harfbuzz-$HARFBUZZ_VERSION.tar.bz2\"     \u0026\u0026 cd /usr/src/harfbuzz     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 rm -rf /usr/src/harfbuzz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -SLO \"http://download.savannah.gnu.org/releases/freetype/ttfautohint-$TTFAUTOHINT_VERSION.tar.gz\"     \u0026\u0026 mkdir -p /usr/src/ttfautohint     \u0026\u0026 tar -xzf \"ttfautohint-$TTFAUTOHINT_VERSION.tar.gz\" -C /usr/src/ttfautohint --strip-components=1     \u0026\u0026 rm \"ttfautohint-$TTFAUTOHINT_VERSION.tar.gz\"     \u0026\u0026 cd /usr/src/ttfautohint     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 rm -rf /usr/src/ttfautohint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y fontforge \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver pool.sks-keyservers.net --recv-keys 7937DFD2AB06298B2293C3187D33FF9D0246406D 114F43EE0176B71C7BC219DD50A3051F888C628D"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "0.12.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPM_VERSION",
              "Value": "2.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SLO \"http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\" \t\u0026\u0026 curl -SLO \"http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \t\u0026\u0026 gpg --verify SHASUMS256.txt.asc \t\u0026\u0026 grep \" node-v$NODE_VERSION-linux-x64.tar.gz\\$\" SHASUMS256.txt.asc | sha256sum -c - \t\u0026\u0026 tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1 \t\u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc \t\u0026\u0026 npm install -g npm@\"$NPM_VERSION\" \t\u0026\u0026 npm cache clear"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli@0.1.13 \t\u0026\u0026 npm cache clear"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src/app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        },
        {
          "Expression": "RUN bundle config --global frozen 1",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY ./Gemfile /usr/src/app/",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY ./Gemfile.lock /usr/src/app/",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN gem install bundler -v 1.7.9",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN bundle install",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY ./package.json /usr/src/",
          "Name": "onbuild"
        },
        {
          "Expression": "WORKDIR /usr/src",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN npm install",
          "Name": "onbuild"
        },
        {
          "Expression": "WORKDIR /usr/src/app",
          "Name": "onbuild"
        }
      ]
    }
  ]
}