{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Shigemasa Watanabe \u003cshigemasa.watanabe@gu3.co.jp\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "locale-gen ja_JP.UTF-8   \u0026\u0026 update-locale LC_ALL=ja_JP.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "ja_JP.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OTP_VERSION",
              "Value": "20.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELIXIR_VERSION",
              "Value": "1.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GITLFS_VERSION",
              "Value": "1.5.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "1.15.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y          build-essential          git          curl          libssl-dev          ncurses-dev   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL \"http://www.erlang.org/download/otp_src_${OTP_VERSION}.tar.gz\" -o /usr/local/src/otp_src_${OTP_VERSION}.tar.gz   \u0026\u0026 cd /usr/local/src   \u0026\u0026 echo '4f0bad82024bb99210d8960f60b0e14821dcf939 *otp_src_20.0.tar.gz' | sha1sum -c   \u0026\u0026 tar xf otp_src_${OTP_VERSION}.tar.gz   \u0026\u0026 cd otp_src_${OTP_VERSION}   \u0026\u0026 ./configure --prefix=/opt/erlang-${OTP_VERSION}                  --enable-kernel-poll                  --enable-hipe                  --enable-dirty-schedulers                  --enable-smp-support                  --enable-m64-build                  --enable-sharing-preserving                  --without-javac                  --disable-native-libs                  --disable-vm-probes                  --disable-megaco-flex-scanner-lineno                  --disable-megaco-reentrant-flex-scanner                  --disable-sctp   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 rm -rf otp_src_${OTP_VERSION}   \u0026\u0026 rm otp_src_${OTP_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/erlang-${OTP_VERSION}/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PREFIX",
              "Value": "/opt/elixir-$ELIXIR_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL https://github.com/elixir-lang/elixir/archive/v$ELIXIR_VERSION.tar.gz -o /usr/local/src/elixir-$ELIXIR_VERSION.tar.gz   \u0026\u0026 cd /usr/local/src   \u0026\u0026 echo '258f3ddf367706747e055977ddad117372019124 *elixir-1.5.0.tar.gz' | sha1sum -c   \u0026\u0026 tar xf elixir-$ELIXIR_VERSION.tar.gz   \u0026\u0026 cd elixir-$ELIXIR_VERSION   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 rm -rf elixir-$ELIXIR_VERSION   \u0026\u0026 rm -rf elixir-$ELIXIR_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/elixir-${ELIXIR_VERSION}/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PREFIX",
              "Value": "/opt/git-lfs-$GITLFS_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL https://github.com/git-lfs/git-lfs/releases/download/v$GITLFS_VERSION/git-lfs-linux-amd64-$GITLFS_VERSION.tar.gz -o /usr/local/src/git-lfs-linux-amd64-$GITLFS_VERSION.tar.gz   \u0026\u0026 cd /usr/local/src   \u0026\u0026 echo '022a14ecafe4da0f637551c9971bdaabc1358395ede3611571cbe863e02a78c7 *git-lfs-linux-amd64-1.5.2.tar.gz' | sha256sum -c   \u0026\u0026 tar xf git-lfs-linux-amd64-$GITLFS_VERSION.tar.gz   \u0026\u0026 cd git-lfs-$GITLFS_VERSION   \u0026\u0026 ./install.sh   \u0026\u0026 cd ..   \u0026\u0026 rm -rf git-lfs-$GITLFS_VERSION   \u0026\u0026 rm -rf git-lfs-linux-amd64-$GITLFS_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/git-lfs-${GITLFS_VERSION}/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y         libpython-dev         libyaml-dev         python-pip   \u0026\u0026 pip install --upgrade pip   \u0026\u0026 pip install awscli   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-`uname -s`-`uname -m` \u003e /usr/local/bin/docker-compose   \u0026\u0026 chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        }
      ]
    }
  ]
}