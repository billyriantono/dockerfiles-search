MetaArgs: null
Stages:
- BaseName: arm64v8/ubuntu:bionic
  Commands:
  - Maintainer: bin.yang@intel.com
    Name: maintainer
  - Name: workdir
    Path: /opt/build
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hooks/qemu-aarch64-static
    - /usr/bin/
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "apt-get -y update \t&& apt-get install -y --no-install-recommends \t\twget
      \t\tpsmisc vim git curl cmake build-essential \t\tpython3-opencv python-opencv
      python3-flask python-flask \t\tlibmicrohttpd-dev libcurl4-openssl-dev libyaml-dev
      python3-paho-mqtt"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y --no-install-recommends ca-certificates \t&& update-ca-certificates"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget --no-check-certificate https://github.com/edgexfoundry/device-sdk-c/archive/0.7.1.tar.gz
      \t&& tar -xzf 0.7.1.tar.gz \t&& cd device-sdk-c-0.7.1 \t&& ./scripts/build.sh
      \t&& cp -rf include/* /usr/include/ \t&& cp build/release/c/libcsdk.so /usr/lib"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rpi_patch
    - /opt/build/rpi_patch
  - CmdLine:
    - "git clone https://github.com/intel-iot-devkit/mraa.git \t&& cd mraa \t&& git
      reset --hard d320776 \t&& patch -p1 < /opt/build/rpi_patch \t&& mkdir -p build
      && cd build && cmake -DBUILDSWIG=OFF -DCMAKE_INSTALL_PREFIX=/usr .. \t&& make
      && make install"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - edgex-pi-demo
    - /opt/edgex-pi-demo
  - CmdLine:
    - "cd /opt/edgex-pi-demo \t&& mkdir build \t&& cd build \t&& cmake ../src \t&&
      make"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget --no-check-certificate https://www.johnvansickle.com/ffmpeg/old-releases/ffmpeg-3.3.4-arm64-64bit-static.tar.xz
      \        && tar xvf ffmpeg-3.3.4-arm64-64bit-static.tar.xz \t&& cp -f ffmpeg-3.3.4-arm64-64bit-static/ffserver
      /usr/local/bin/ \t&& cp -f ffmpeg-3.3.4-arm64-64bit-static/ffmpeg /usr/local/bin/"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ffserver.conf
    - /opt/edgex-pi-demo/ffserver.conf
  - Env:
    - Key: TINI_VERSION
      Value: v0.18.0
    Name: env
  - CmdLine:
    - mkdir -p /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --no-check-certificate -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-arm64"
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/edgex-pi-demo
  - CmdLine:
    - /usr/local/bin/tini
    - -g
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /opt/edgex-pi-demo/start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: arm64v8/ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM arm64v8/ubuntu:bionic
