MetaArgs: null
Stages:
- BaseName: php:7.0-apache
  Commands:
  - Env:
    - Key: ROOT_USER_PASS
      Value: root
    Name: env
  - Env:
    - Key: DEV_USER_PASS
      Value: admin
    Name: env
  - CmdLine:
    - usermod -u 1000 www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - groupmod -g 1000 www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -p dev -ms /bin/bash -d /var/www/html dev
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -aG www-data dev
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -aG dev www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R dev:dev /var/www/html
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "dev:$DEV_USER_PASS" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "root:$ROOT_USER_PASS" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y     build-essential     apt-utils     libfreetype6-dev     libjpeg62-turbo-dev
      \    libmcrypt-dev     libpng12-dev     libpq-dev \tzlib1g-dev libicu-dev g++
      \    sqlite3 libsqlite3-dev     libxml2-dev \tlibxslt-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git vim cron htop zip unzip pwgen curl wget chkconfig ruby
      rubygems ruby-dev screen openssl openssh-server
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install gd
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install iconv
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mcrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mbstring
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mysqli
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pgsql
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pdo_mysql pdo_pgsql pdo_sqlite
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install soap
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install tokenizer
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install zip
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure intl
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install intl
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install xsl
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure bcmath
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install bcmath
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install redis-3.1.0     && docker-php-ext-enable redis
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug-2.5.0     && docker-php-ext-enable redis xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');"
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "if (hash_file('SHA384', '/tmp/composer-setup.php') === '669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410')
      { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('/tmp/composer-setup.php');
      } echo PHP_EOL;"
    Name: run
    PrependShell: true
  - CmdLine:
    - php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc/node/package.json
    - /var/www/html/
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_7.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm update
    Name: run
    PrependShell: true
  - CmdLine:
    - npm init -y
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install gulp-cli -g --save
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install gulp -D --save
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g bower --save
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install browser-sync --save
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install connect-browser-sync --save
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/apache2/ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl genrsa -des3 -passout pass:x -out server.pass.key 2048
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl rsa -passin pass:x -in server.pass.key -out /etc/apache2/ssl/apache.key
    Name: run
    PrependShell: true
  - CmdLine:
    - rm server.pass.key
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl req -new -key /etc/apache2/ssl/apache.key -out /etc/apache2/ssl/server.csr    -subj
      "/C=US/ST=Washington/L=SEA/O=coolblue/OU=IT Department/CN=localhost"
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl x509 -req -days 365 -in /etc/apache2/ssl/server.csr -signkey /etc/apache2/ssl/apache.key
      -out /etc/apache2/ssl/apache.crt
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 600 /etc/apache2/ssl/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/apache2/sites-enabled/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc/apache2/vhost.conf
    - /etc/apache2/sites-available/default.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc/apache2/vhost-ssl.conf
    - /etc/apache2/sites-available/default-ssl.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc/php/php.ini
    - /usr/local/etc/php/
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod proxy
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod headers
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod expires
    Name: run
    PrependShell: true
  - CmdLine:
    - a2ensite default-ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - a2ensite default
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - etc/ssh/sshd_config
    - /etc/ssh/sshd_config
  - CmdLine:
    - service ssh start
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y install golang-go
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/go && export GOPATH=/opt/go && go get github.com/mailhog/mhsendmail
    Name: run
    PrependShell: true
  - CmdLine:
    - apache2-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.0-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.0-apache
