{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos7",
      "SourceCode": "FROM centos:centos7",
      "Platform": "",
      "From": {
        "Image": "centos:centos7"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data/db"
          ]
        },
        {
          "Maintainer": "Maintainer_Name",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rpm -Uvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm \u0026\u0026 rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y --enablerepo=remi,remi-php56 install httpd php php-pdo php-common php-cli php-pear php-mysqlnd php-pecl-mongo php-gd php-mbstring* php-mcrypt php-xml mongodb mongodb-server nodejs npm git deltarpm mod_ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /run/httpd/*; mkdir -p /run/httpd/htcacheclean; chmod 710 /run/httpd; chmod 700 /run/httpd/htcacheclean; chown root:apache /run/httpd; chown apache:apache /run/httpd/htcacheclean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/LearningLocker/learninglocker.git learninglocker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /learninglocker; composer install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/^.*username.*/\\t\\t\\'username\\' =\u003e \\'username\\',/g\" /learninglocker/app/config/database.php; sed -i \"s/^.*username.*/\\t\\t\\'password\\' =\u003e \\'password\\',/g\" /learninglocker/app/config/database.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "exec /usr/bin/mongod \u0026 sleep 10; mongo learninglocker --eval 'printjson(db.createUser({user:\"username\",pwd:\"password\",roles:[\"readWrite\"]}))'; cd /learninglocker; php artisan migrate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '\u003cDirectory \"/var/www/learninglocker/public\"\u003e' \u003e\u003e /etc/httpd/conf/httpd.conf; echo '  AllowOverride All' \u003e\u003e /etc/httpd/conf/httpd.conf; echo '\u003c/Directory\u003e' \u003e\u003e /etc/httpd/conf/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/^DocumentRoot.*/DocumentRoot \\'\\/var\\/www\\/learninglocker\\/public\\/\\'/g\" /etc/httpd/conf/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R apache:apache /learninglocker; ln -s /learninglocker/ /var/www/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/'key.*/\\'key\\' =\u003e \\'CHANGEME12345678\\',/\" /learninglocker/app/config/app.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ca.crt",
            "/etc/pki/tls/certs/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ca.key",
            "/etc/pki/tls/private/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ca.csr",
            "/etc/pki/tls/private/"
          ]
        },
        {
          "CmdLine": [
            "sed -i \"s/^SSLCertificateFile.*/SSLCertificateFile \\/etc\\/pki\\/tls\\/certs\\/ca.crt/g\" /etc/httpd/conf.d/ssl.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/^SSLCertificateKeyFile.*/SSLCertificateKeyFile \\/etc\\/pki\\/tls\\/private\\/ca.key/g\" /etc/httpd/conf.d/ssl.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "llstartup",
            "/usr/bin/llstartup"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /usr/bin/llstartup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/llstartup"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}