MetaArgs: null
Stages:
- BaseName: tin6150/os4cmaq:latest
  Commands:
  - Maintainer: Tin
    Name: maintainer
  - CmdLine:
    - mkdir -p Downloads &&  cd Downloads ;     wget --quiet https://download.open-mpi.org/release/open-mpi/v2.1/openmpi-2.1.6.tar.gz
      ;     tar xfz openmpi-2.1.6.tar.gz ;     cd openmpi-2.1.6 ;     export  CCFLAGS="-g"   FC=gfortran
      FCFLAGS="-g" ;     export   CFLAGS="-g"   ;     export CPPFLAGS="-g"   ;     ./configure                   --enable-shared
      --prefix=/opt/openmpi/2.1.6  2>&1 | tee configure.out.log ;     make install
      2>&1 | tee make.install.log ;     cd .. ;     cd .. ;     echo 'setenv LD_LIBRARY_PATH
      "/usr/lib:/opt/openmpi/2.1.6/lib"'           >> /etc/csh.cshrc ;     echo 'set
      path = ( ${path:q} /opt/openmpi/2.1.6/bin )'                    >> /etc/csh.cshrc
      ;     echo 'export PATH="${PATH}:/opt/openmpi/2.1.6/bin"'                       >>
      /etc/bashrc    ;     echo 'export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/opt/openmpi/2.1.6/lib"'
      >> /etc/bashrc    ;     export PATH="${PATH}:/opt/openmpi/2.1.6/bin"                                                ;     export
      LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/opt/openmpi/2.1.6/lib"                          ;     which
      mpicc                                                                                 ;     echo
      '========================================================'                             ;     echo
      '========================================================'                             ;     echo
      '    OpenMPI make finished                               '                             ;     echo
      '========================================================'                             ;     echo
      '========================================================'                             ;     echo
      'last line of RUN block in Dockerbuild without continuation :)'
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBUG_MPI
      Value: /opt/openmpi/2.1.6/
    Name: env
  - Env:
    - Key: TEST_DOCKER_ENV_REF
      Value: https://vsupalov.com/docker-arg-env-variable-guide/#setting-env-values
    Name: env
  - CmdLine:
    - mkdir -p Downloads &&  cd Downloads;      wget --quiet https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.21/src/hdf5-1.8.21.tar.gz;      tar
      xfz hdf5-1.8.21.tar.gz;      cd hdf5-1.8.21;      export  CC=/opt/openmpi/2.1.6/bin/mpicc           ;     export  CCFLAGS="-g"   FC=gfortran
      FCFLAGS="-g"   ;     export   CFLAGS="-g"   ;     export CPPFLAGS="-g"   ;     ./configure                   --enable-shared
      --prefix=/usr/local  2>&1 | tee configure.out.log ;     make install 2>&1 |
      tee make.install.log ;     cd .. ;     cd .. ;     echo 'setenv LD_LIBRARY_PATH
      "${LD_LIBRARY_PATH:q}:/usr/local/lib"' >> /etc/csh.cshrc ;     echo 'set path
      = ( ${path:q} /usr/local/bin )'                      >> /etc/csh.cshrc ;     echo
      'export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib"'   >> /etc/bashrc    ;     echo
      'export PATH=${PATH}:/usr/local/bin'                           >> /etc/bashrc    ;     echo
      '========================================================'                             ;     echo
      '========================================================'                             ;     echo
      '    HDF5 make finished                                  '                             ;     echo
      '========================================================'                             ;     echo
      '========================================================'                             ;     echo
      'last line of RUN block in Dockerbuild without continuation :)'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p Downloads && cd Downloads;      wget --quiet https://github.com/Unidata/netcdf-c/archive/v4.7.0.tar.gz
      ;     tar xfz v4.7.0.tar.gz ;     cd netcdf-c-4.7.0     ;     export CC=/opt/openmpi/2.1.6/bin/mpicc  ;     export
      CPPFLAGS='-DNDEBUG -DgFortran'   ;     export FFLAGS='-g -w'   ;     export
      CXX='g++'        ;     ./configure          LDFLAGS=-L/usr/local/lib CFLAGS=-I/usr/local/include
      --enable-separate-fortran  --prefix=/usr/local  --disable-netcdf4 --disable-dap
      2>&1 | tee configure.out.log ;     make         2>&1 | tee make.log ;     make
      check   2>&1 | tee make.check.log   ;     make install 2>&1 | tee make.install.log
      ;     cd .. ;     echo '========================================================'                             ;     echo
      '========================================================'                             ;     echo
      '    netcdf-c make finished                              '                             ;     echo
      '========================================================'                             ;     echo
      '========================================================'                             ;     wget
      --quiet https://github.com/Unidata/netcdf-fortran/archive/v4.4.5.tar.gz ;     tar
      xfz v4.4.5.tar.gz    ;     cd netcdf-fortran-4.4.5  ;     export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      ;     ./configure FC=gfortran       LDFLAGS=-L/usr/local/lib CFLAGS=-I/usr/local/include
      CPPFLAGS=-I/usr/local/include --prefix=/usr/local   2>&1 | tee configure.out.log  ;     make         2>&1
      | tee make.log ;     make install 2>&1 | tee make.install.log ;     make check   2>&1
      | tee make.check.log   ;     echo $? > _END_BUILD_NETCDF_ ;     cd .. ;     cd
      .. ;     echo '========================================================'                             ;     echo
      '========================================================'                             ;     echo
      '    netcdf-fortran make finished                        '                             ;     echo
      '========================================================'                             ;     echo
      '========================================================'                             ;     echo
      'last line of RUN block in Dockerbuild without continuation :)'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'cd /   && touch                        _TOP_DIR_OF_CONTAINER_    && echo "----"               >>
      _TOP_DIR_OF_CONTAINER_    && TZ="PST8PDT" date         >> _TOP_DIR_OF_CONTAINER_    &&
      echo "export TZ=PST8PDT"  >> /etc/bashrc               && echo "setenv TZ PST8PDT"  >>
      /etc/csh.cshrc            && echo "Dockerfile.lib4cmaq 2019.0915.14+ PATH/LD_LIBRARY_PATH
      fiddle for openmpi"  >> _TOP_DIR_OF_CONTAINER_     && echo "Dockerfile.lib4cmaq
      2019.0915.14+ (previously did) CC=/full/path/to/mpicc"  >> _TOP_DIR_OF_CONTAINER_     &&
      echo "Dockerfile.lib4cmaq 2019.0915.1550+ PATH/LD_LIBRARY_PATH to /etc/bashrc,csh.cshrc"
      >> _TOP_DIR_OF_CONTAINER_     && echo "Dockerfile.lib4cmaq 2019.0915.1755  trivial
      change: tcsh" >> _TOP_DIR_OF_CONTAINER_     && echo $?'
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: America/Los_Angeles
    Name: env
  - Env:
    - Key: DOCKERFILE
      Value: Dockerfile.lib4cmaq
    Name: env
  - CmdLine:
    - /bin/tcsh
    Name: entrypoint
    PrependShell: false
  From:
    Image: tin6150/os4cmaq:latest
  Name: ""
  Platform: ""
  SourceCode: FROM tin6150/os4cmaq:latest
