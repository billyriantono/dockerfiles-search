MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Alessandro Amici <a.amici@bopen.eu>
    Name: maintainer
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: '"noninteractive"'
  - Env:
    - Key: LANG
      Value: '"C.UTF-8"'
    - Key: LC_ALL
      Value: '"C.UTF-8"'
    - Key: PATH
      Value: '"/opt/pyenv/shims:/opt/pyenv/bin:$PATH"'
    - Key: PYENV_ROOT
      Value: '"/opt/pyenv"'
    - Key: PYENV_SHELL
      Value: '"bash"'
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         build-essential         ca-certificates         curl         git         libbz2-dev         libffi-dev         libncurses5-dev         libncursesw5-dev         libreadline-dev         libsqlite3-dev         libssl1.0-dev         liblzma-dev         llvm         make         netbase         pkg-config         tk-dev         wget         xz-utils         zlib1g-dev  &&
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pyenv-version.txt
    - python-versions.txt
    - /
  - CmdLine:
    - git clone -b `cat /pyenv-version.txt` --single-branch --depth 1 https://github.com/pyenv/pyenv.git
      $PYENV_ROOT     && for version in `cat /python-versions.txt`; do pyenv install
      $version; done     && pyenv global `cat /python-versions.txt`     && find $PYENV_ROOT/versions
      -type d '(' -name '__pycache__' -o -name 'test' -o -name 'tests' ')' -exec rm
      -rf '{}' +     && find $PYENV_ROOT/versions -type f '(' -name '*.pyo' -o -name
      '*.exe' ')' -exec rm -f '{}' +  && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements-setup.txt
    - requirements-test.txt
    - requirements-ci.txt
    - /
  - CmdLine:
    - pip install -r /requirements-setup.txt     && pip install -r /requirements-test.txt     &&
      pip install -r /requirements-ci.txt     && find $PYENV_ROOT/versions -type d
      '(' -name '__pycache__' -o -name 'test' -o -name 'tests' ')' -exec rm -rf '{}'
      +     && find $PYENV_ROOT/versions -type f '(' -name '*.pyo' -o -name '*.exe'
      ')' -exec rm -f '{}' +  && rm -rf /tmp/*
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
