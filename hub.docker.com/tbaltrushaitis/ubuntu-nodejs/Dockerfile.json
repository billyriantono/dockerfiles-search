{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "buildpack-deps:jessie",
      "SourceCode": "FROM buildpack-deps:jessie",
      "Platform": "",
      "From": {
        "Image": "buildpack-deps:jessie"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_URL",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "NODE_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "SVC_USER",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "${BUILD_DATE}"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"Ubuntu + Node.js\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Dockerized Node.js Server\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "${VERSION:-latest}"
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Baltrushaitis Tomas\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "${VCS_REF}"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "${VCS_URL}"
            },
            {
              "Key": "org.label-schema.is-production",
              "Value": "\"true\""
            },
            {
              "Key": "org.label-schema.license",
              "Value": "\"MIT\""
            },
            {
              "Key": "org.label-schema.maintainer.mail",
              "Value": "\"tbaltrushaitis@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "${NPM_CONFIG_LOGLEVEL:-info}"
            },
            {
              "Key": "NODE_VERSION",
              "Value": "${NODE_VERSION:-9.11.2}"
            },
            {
              "Key": "SVC_USER",
              "Value": "${SVC_USER:-node}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd  --system                        --force                         --gid 1000                      \"${SVC_USER}\"        \u0026\u0026 useradd --system                        --uid 1000                      --gid \"${SVC_USER}\"             --shell /bin/bash               --create-home                   \"${SVC_USER}\"        \u0026\u0026 set -ex                                      \u0026\u0026 for key in                                      94AE36675C464D64BAFA68DD7434390BDBE9B9C5        FD3A5288F042B6850C66B31F09FE44734EB7990E        71DCFD284A79C3B38668286BC97EC7A07EDE3FC1        DD8F2338BAE7501E3DD5AC78C273792F7D83545D        C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8        B9AE9905FFD7803F25714661B63B535A4C206CA9        56730D5401028683275BD23C23EFEFE93C4CFFFE        77984A986EBC2AA786BC0F66B01FBB92821C587A        8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600    ; do                                                gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ||             gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" ||     gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ;                  done                                           \u0026\u0026 apt-get -q update                           --assume-yes             \u0026\u0026 echo -e \"\\n\\tDEPLOYED: \\t UPDATES \\n\"  \u0026\u0026 apt-get install                             --assume-yes                        --no-install-recommends             curl                                mc                                  wget                                git                                 htop                     \u0026\u0026 echo -e \"\\n\\tDEPLOYED: \\t TOOLS \\n\"  \u0026\u0026 apt-get autoremove               \u0026\u0026 apt-get clean                    \u0026\u0026 rm -rf /var/lib/apt/lists/*      \u0026\u0026 echo -e \"\\n\\tCLEANED: \\t APT CACHES \\n\"  \u0026\u0026 ARCH= \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture)\"  \u0026\u0026 case \"${dpkgArch##*-}\" in                              amd64) ARCH='x64';;                                  ppc64el) ARCH='ppc64le';;                            s390x) ARCH='s390x';;                                arm64) ARCH='arm64';;                                armhf) ARCH='armv7l';;                               i386) ARCH='x86';;                                   *) echo \"unsupported architecture\"; exit 1 ;;      esac                                              \u0026\u0026 curl -fsSLO --compressed \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-${ARCH}.tar.xz\"  \u0026\u0026 curl -fsSLO --compressed \"https://nodejs.org/dist/v${NODE_VERSION}/SHASUMS256.txt.asc\"       \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc                             \u0026\u0026 grep \" node-v${NODE_VERSION}-linux-${ARCH}.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -         \u0026\u0026 tar -xJf \"node-v${NODE_VERSION}-linux-${ARCH}.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner  \u0026\u0026 rm \"node-v${NODE_VERSION}-linux-${ARCH}.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt            \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs                                              \u0026\u0026 echo -e \"\\n\\n\\tDEPLOYED: \\t Node.js:$(node -v) for linux-${ARCH} \\n\\n\"                       \u0026\u0026 cd /tmp/                         \u0026\u0026 APP_NAME=bash-files              \u0026\u0026 git clone https://github.com/tbaltrushaitis/${APP_NAME}.git  \u0026\u0026 cd ${APP_NAME}                   \u0026\u0026 make                             \u0026\u0026 cd ..                            \u0026\u0026 rm -rf ${APP_NAME}               \u0026\u0026 echo -e \"\\n\\tDEPLOYED: \\t ENHANCEMENTS \\n\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${SVC_USER}"
        },
        {
          "CmdLine": [
            "/usr/local/bin/node"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}