MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - Maintainer: Valentin Chambon "valentin.chambon@mnhn.fr"
    Name: maintainer
  - Name: user
    User: root
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: API_KEY
      Value: none
    - Key: DEBUG
      Value: "false"
    - Key: PROXY_PREFIX
      Value: none
    - Key: GALAXY_URL
      Value: none
    - Key: GALAXY_WEB_PORT
      Value: "10000"
    - Key: HISTORY_ID
      Value: none
    - Key: REMOTE_HOST
      Value: none
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install --no-install-recommends -y     wget procps nginx python python-pip
      net-tools nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openjdk-8-jdk
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Env:
    - Key: PATH
      Value: '"/usr/lib/jvm/java-8-openjdk-amd64/bin:${PATH}"'
    Name: env
  - CmdLine:
    - apt-get install -y python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install bioblend galaxy-ie-helpers
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y vim
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O - --no-check-certificate https://github.com/ValentinChCloud/urllib2_file/archive/master.tar.gz
      | tar -xz
    Name: run
    PrependShell: true
  - CmdLine:
    - mv urllib2_file-master urllib2_file; cd ./urllib2_file ; python setup.py test
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ./urllib2_file ; python setup.py build ; python setup.py install ;
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O - --no-check-certificate https://github.com/ValentinChCloud/OpenRefine/archive/master.tar.gz
      |tar -xz
    Name: run
    PrependShell: true
  - CmdLine:
    - mv OpenRefine-master OpenRefine
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./ExportRowsCommand.java
    - OpenRefine/main/src/com/google/refine/commands/project/ExportRowsCommand.java
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./exporters.js
    - OpenRefine/main/webapp/modules/core/scripts/project/exporters.js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./langs/translation-default.json
    - OpenRefine/main/webapp/modules/core/langs/translation-default.json
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./langs/translation-fr.json
    - OpenRefine/main/webapp/modules/core/langs/translation-fr.json
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./langs/translation-fr.json
    - OpenRefine/main/webapp/modules/core/langs/translation-en.json
  - CmdLine:
    - /OpenRefine/refine build
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O - --no-check-certificate https://github.com/ValentinChCloud/refine-python/archive/master.tar.gz
      | tar -xz
    Name: run
    PrependShell: true
  - CmdLine:
    - mv refine-python-master refine-python
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./get_notebook.py
    - /get_notebook.py
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./startup.sh
    - /startup.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./monitor_traffic.sh
    - /monitor_traffic.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./openrefine_create_project_API.py
    - /refine-python/openrefine_create_project_API.py
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./openrefine_export_project.py
    - /refine-python/openrefine_export_project.py
  - CmdLine:
    - mkdir /import
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./proxy.conf
    - /proxy.conf
  - Name: volume
    Volumes:
    - /import
  - Name: workdir
    Path: /import/
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /startup.sh
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
