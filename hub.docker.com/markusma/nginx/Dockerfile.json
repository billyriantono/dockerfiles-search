{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "markusma/confd:0.9",
      "SourceCode": "FROM markusma/confd:0.9",
      "Platform": "",
      "From": {
        "Image": "markusma/confd:0.9"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.7.12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HEADERS_MORE_VERSION",
              "Value": "0.25"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get build-dep -o APT::Get::Build-Dep-Automatic=true -y nginx  \u0026\u0026 apt-get install -y --no-install-recommends git libldap2-dev  \u0026\u0026 cd /tmp  \u0026\u0026 wget http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz  \u0026\u0026 tar xzf nginx-$NGINX_VERSION.tar.gz  \u0026\u0026 cd nginx-$NGINX_VERSION  \u0026\u0026 sed -i \"s/#define NGX_HTTP_AUTOINDEX_NAME_LEN.*/#define NGX_HTTP_AUTOINDEX_NAME_LEN 200/g\" src/http/modules/ngx_http_autoindex_module.c  \u0026\u0026 mkdir -p modules  \u0026\u0026 cd modules  \u0026\u0026 wget https://github.com/openresty/headers-more-nginx-module/archive/v$HEADERS_MORE_VERSION.tar.gz -O headers-more-$HEADERS_MORE_VERSION.tar.gz  \u0026\u0026 tar xzf headers-more-$HEADERS_MORE_VERSION.tar.gz  \u0026\u0026 git clone https://github.com/MarkusMattinen/nginx-auth-ldap.git auth-ldap  \u0026\u0026 cd ..  \u0026\u0026 ./configure     --add-module=modules/auth-ldap     --add-module=modules/headers-more-nginx-module-$HEADERS_MORE_VERSION     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --group=www-data     --http-client-body-temp-path=/var/lib/nginx/body     --http-fastcgi-temp-path=/var/lib/nginx/fastcgi     --http-log-path=/var/log/nginx/access.log     --http-proxy-temp-path=/var/lib/nginx/proxy     --http-scgi-temp-path=/var/lib/nginx/scgi     --http-uwsgi-temp-path=/var/lib/nginx/uwsgi     --lock-path=/var/lock/nginx.lock     --pid-path=/run/nginx.pid     --prefix=/var/www     --sbin-path=/usr/sbin/nginx     --user=www-data     --with-debug     --with-http_addition_module     --with-http_dav_module     --with-http_flv_module     --with-http_geoip_module     --with-http_gzip_static_module     --with-http_image_filter_module     --with-http_mp4_module     --with-http_random_index_module     --with-http_realip_module     --with-http_secure_link_module     --with-http_ssl_module     --with-http_stub_status_module     --with-http_sub_module     --with-http_xslt_module     --with-ipv6     --with-md5=/usr/include/openssl     --with-pcre-jit     --with-sha1=/usr/include/openssl     --without-mail_imap_module     --without-mail_pop3_module     --without-mail_smtp_module  \u0026\u0026 make -j`nproc`  \u0026\u0026 make install  \u0026\u0026 cd /tmp  \u0026\u0026 rm -rf nginx-$NGINX_VERSION.tar.gz nginx-$NGINX_VERSION  \u0026\u0026 apt-get autoremove -y  \u0026\u0026 apt-get install -y --no-install-recommends libxslt1.1 libxml2 libgeoip1  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/nginx/body /var/lib/nginx/proxy /var/lib/nginx/fastcgi /var/lib/nginx/scgi /var/lib/nginx/uwsgi  \u0026\u0026 chown -R www-data:www-data /var/lib/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/",
            "/etc/"
          ]
        }
      ]
    }
  ]
}