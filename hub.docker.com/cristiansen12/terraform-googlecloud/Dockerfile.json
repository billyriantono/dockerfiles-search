{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TERRAFORM_VERSION",
              "Value": "0.12.12"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add curl jq python bash ca-certificates git openssl unzip wget \u0026\u0026     cd /tmp \u0026\u0026     wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \u0026\u0026     unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --update add git less openssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://sdk.cloud.google.com \u003e\u003e install_gcloud.sh \u0026\u0026     bash install_gcloud.sh --disable-prompts --install-dir=/usr/local/gcloud \u0026\u0026     rm install_gcloud.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/gcloud/google-cloud-sdk/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache go \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}