{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins/jenkins",
      "SourceCode": "FROM jenkins/jenkins",
      "Platform": "",
      "From": {
        "Image": "jenkins/jenkins"
      },
      "Commands": [
        {
          "Maintainer": "Thomas Johansen \"thomas.johansen@accenture.com\"",
          "Name": "maintainer"
        },
        {
          "Key": "MAVEN_VERSION",
          "Name": "arg",
          "Value": "\"3.6.3\""
        },
        {
          "Key": "NODE_MAIN_VERSION",
          "Name": "arg",
          "Value": "\"12\""
        },
        {
          "Key": "DOCKER_COMPOSE_VERSION",
          "Name": "arg",
          "Value": "\"1.25.0\""
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "\"/opt/maven/default\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "M2_HOME",
              "Value": "\"${MAVEN_HOME}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${PATH}:${MAVEN_HOME}/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y upgrade \u0026\u0026     apt-get -y install     software-properties-common     apt-transport-https     ca-certificates     gnupg2     curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L \"https://www.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz\"          -o /tmp/maven.tar.gz \u0026\u0026     curl -L \"https://www.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz.asc\"          -o /tmp/maven.tar.gz.asc \u0026\u0026     curl -L \"https://www.apache.org/dist/maven/KEYS\" -o /tmp/maven.KEYS \u0026\u0026     gpg --import /tmp/maven.KEYS \u0026\u0026     gpg --verify /tmp/maven.tar.gz.asc /tmp/maven.tar.gz \u0026\u0026     mkdir /opt/maven \u0026\u0026     tar -xzvf /tmp/maven.tar.gz -C /opt/maven/ \u0026\u0026     cd /opt/maven \u0026\u0026     ln -s apache-maven-${MAVEN_VERSION}/ default \u0026\u0026     rm -f /tmp/maven.* \u0026\u0026     update-alternatives --install \"/usr/bin/mvn\" \"mvn\" \"/opt/maven/default/bin/mvn\" 1 \u0026\u0026     update-alternatives --set \"mvn\" \"/opt/maven/default/bin/mvn\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \u0026\u0026     curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026     add-apt-repository \"deb https://deb.nodesource.com/node_${NODE_MAIN_VERSION}.x $(lsb_release -cs) main\" \u0026\u0026     add-apt-repository \"deb https://dl.yarnpkg.com/debian stable main\" \u0026\u0026     apt-get update \u0026\u0026     apt-get -y install nodejs yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg | apt-key add - \u0026\u0026     add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\" \u0026\u0026     apt-get update \u0026\u0026     apt-get -y install docker-ce"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L \"https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)\"          -o /usr/local/bin/docker-compose \u0026\u0026     chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -a -G docker jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        }
      ]
    }
  ]
}