{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "zeroc0d3lab/centos-base-workspace-lite:latest",
      "SourceCode": "FROM zeroc0d3lab/centos-base-workspace-lite:latest",
      "Platform": "",
      "From": {
        "Image": "zeroc0d3lab/centos-base-workspace-lite:latest"
      },
      "Commands": [
        {
          "Maintainer": "ZeroC0D3 Team \u003czeroc0d3.team@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "VIM_VERSION",
              "Value": "8.0.1207"
            },
            {
              "Key": "LUA_VERSION",
              "Value": "5.3.4"
            },
            {
              "Key": "LUAROCKS_VERSION",
              "Value": "2.4.3"
            },
            {
              "Key": "PATH_HOME",
              "Value": "/home/docker"
            },
            {
              "Key": "PATH_WORKSPACE",
              "Value": "/home/docker/workspace"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "curl -L https://copr.fedorainfracloud.org/coprs/mcepl/vim8/repo/epel-7/mcepl-vim8-epel-7.repo       -o /etc/yum.repos.d/mcepl-vim8-epel-7.repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum makecache fast     \u0026\u0026 yum -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install       --setopt=tsflags=nodocs       --disableplugin=fastestmirror         gcc         gcc-c++         kernel-devel         readline-dev         ncurses         ncurse-devel         lua-devel         lzo-devel         vim*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./rootfs/opt/install_vim.sh",
            "/opt/install_vim.sh"
          ]
        },
        {
          "CmdLine": [
            "curl -L http://www.lua.org/ftp/lua-${LUA_VERSION}.tar.gz -o /opt/lua-${LUA_VERSION}.tar.gz     \u0026\u0026 curl -L http://luarocks.github.io/luarocks/releases/luarocks-${LUAROCKS_VERSION}.tar.gz          -o /opt/luarocks-${LUAROCKS_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt     \u0026\u0026 tar zxvf lua-${LUA_VERSION}.tar.gz     \u0026\u0026 tar zxvf luarocks-${LUAROCKS_VERSION}.tar.gz     \u0026\u0026 cd lua-${LUA_VERSION}     \u0026\u0026 make linux     \u0026\u0026 cd ../luarocks-${LUAROCKS_VERSION}     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 sudo make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /root/vim     \u0026\u0026 git clone https://github.com/vim/vim.git /root/vim     \u0026\u0026 cd /root/vim     \u0026\u0026 git checkout v${VIM_VERSION}     \u0026\u0026 cd src     \u0026\u0026 make autoconf     \u0026\u0026 ./configure     \u0026\u0026 make distclean     \u0026\u0026 make     \u0026\u0026 cp config.mk.dist auto/config.mk     \u0026\u0026 sudo make install     \u0026\u0026 sudo mkdir -p /usr/share/vim     \u0026\u0026 sudo mkdir -p /usr/share/vim/vim80/     \u0026\u0026 sudo cp -fr /root/vim/runtime/** /usr/share/vim/vim80/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://raw.githubusercontent.com/zeroc0d3/vim-ide/master/step02.sh | sudo bash -s"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/dracula/vim.git /opt/vim-themes/dracula     \u0026\u0026 git clone https://github.com/blueshirts/darcula.git /opt/vim-themes/darcula     \u0026\u0026 mkdir -p /root/.vim/bundle/vim-colors/colors     \u0026\u0026 cp /opt/vim-themes/dracula/colors/dracula.vim /root/.vim/bundle/vim-colors/colors/dracula.vim     \u0026\u0026 cp /opt/vim-themes/darcula/colors/darcula.vim /root/.vim/bundle/vim-colors/colors/darcula.vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar zcvf vim.tar.gz /root/vim /root/.vim     \u0026\u0026 mv vim.tar.gz /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf \t\t/usr/share/zoneinfo/UTC \t\t/etc/localtime \t\u0026\u0026 echo \"NETWORKING=yes\" \u003e /etc/sysconfig/network"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "CmdLine": [
            "rm -f /root/*.tar.gz     \u0026\u0026 rm -f /root/*.zip     \u0026\u0026 rm -f /opt/*.tar.gz     \u0026\u0026 rm -f /opt/*.zip     \u0026\u0026 rm -f /tmp/*.tar.gz     \u0026\u0026 rm -f /tmp/*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${PATH_WORKSPACE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R docker:docker ${PATH_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "[${PATH_WORKSPACE}]"
          ]
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Health": {
            "Test": [
              "CMD-SHELL",
              "--interval=5m --timeout=3s /etc/cont-consul/check || exit 1"
            ]
          },
          "Name": "healthcheck"
        }
      ]
    }
  ]
}