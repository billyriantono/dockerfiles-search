{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "zeroc0d3lab/centos-base-workspace:latest",
      "SourceCode": "FROM zeroc0d3lab/centos-base-workspace:latest",
      "Platform": "",
      "From": {
        "Image": "zeroc0d3lab/centos-base-workspace:latest"
      },
      "Commands": [
        {
          "Maintainer": "ZeroC0D3 Team \u003czeroc0d3.team@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PATH_HOME",
              "Value": "/home/docker"
            },
            {
              "Key": "PATH_WORKSPACE",
              "Value": "/home/docker/workspace"
            },
            {
              "Key": "PATH_APPLICATION",
              "Value": "/home/docker/workspace"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSH_AUTHORIZED_KEYS",
              "Value": "''"
            },
            {
              "Key": "SSH_AUTOSTART_SSHD",
              "Value": "true"
            },
            {
              "Key": "SSH_AUTOSTART_SSHD_BOOTSTRAP",
              "Value": "true"
            },
            {
              "Key": "SSH_CHROOT_DIRECTORY",
              "Value": "'%h'"
            },
            {
              "Key": "SSH_INHERIT_ENVIRONMENT",
              "Value": "false"
            },
            {
              "Key": "SSH_SUDO",
              "Value": "'ALL=(ALL) ALL'"
            },
            {
              "Key": "SSH_USER",
              "Value": "'docker'"
            },
            {
              "Key": "SSH_USER_FORCE_SFTP",
              "Value": "false"
            },
            {
              "Key": "SSH_USER_HOME",
              "Value": "'/home/%u'"
            },
            {
              "Key": "SSH_USER_ID",
              "Value": "'1001:1001'"
            },
            {
              "Key": "SSH_USER_PASSWORD",
              "Value": "'docker'"
            },
            {
              "Key": "SSH_ROOT_PASSWORD",
              "Value": "'docker'"
            },
            {
              "Key": "SSH_USER_PASSWORD_HASHED",
              "Value": "false"
            },
            {
              "Key": "SSH_USER_SHELL",
              "Value": "'/bin/bash'"
            },
            {
              "Key": "PATH_HOME",
              "Value": "/home/docker"
            },
            {
              "Key": "PATH_WORKSPACE",
              "Value": "/home/docker/workspace"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum makecache fast \t  \u0026\u0026 yum -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install \t           --setopt=tsflags=nodocs \t           --disableplugin=fastestmirror          libnice-devel     \u0026\u0026 ln -sf /usr/bin/nice /bin/nice"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install https://centos7.iuscommunity.org/ius-release.rpm     \u0026\u0026 yum -y update     \u0026\u0026 yum -y install python35u python35u-libs python35u-devel python35u-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install \t\t'supervisor == 3.3.1' \t\t'supervisor-stdout == 0.1.1' \t\u0026\u0026 mkdir -p \t\t/var/log/supervisor/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf \t\t/usr/share/zoneinfo/UTC \t\t/etc/localtime \t\u0026\u0026 echo \"NETWORKING=yes\" \u003e /etc/sysconfig/network"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \t-e 's~^PasswordAuthentication yes~PasswordAuthentication no~g' \t-e 's~^#PermitRootLogin yes~PermitRootLogin no~g' \t-e 's~^#UseDNS yes~UseDNS no~g' \t-e 's~^\\(.*\\)/usr/libexec/openssh/sftp-server$~\\1internal-sftp~g' \t/etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \t-e 's~^# %wheel\\tALL=(ALL)\\tALL~%wheel\\tALL=(ALL) ALL~g' \t-e 's~\\(.*\\) requiretty$~#\\1requiretty~' \t/etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p \t\t/etc/supervisord.d/ \t\u0026\u0026 cp -pf \t\t/etc/ssh/sshd_config \t\t/etc/services-config/ssh/ \t\u0026\u0026 ln -sf \t\t/etc/services-config/ssh/sshd_config \t\t/etc/ssh/sshd_config \t\u0026\u0026 ln -sf \t\t/etc/services-config/ssh/sshd-bootstrap.conf \t\t/etc/sshd-bootstrap.conf \t\u0026\u0026 ln -sf \t\t/etc/services-config/ssh/sshd-bootstrap.env \t\t/etc/sshd-bootstrap.env \t\u0026\u0026 ln -sf \t\t/etc/services-config/supervisor/supervisord.conf \t\t/etc/supervisord.conf \t\u0026\u0026 ln -sf \t\t/etc/services-config/supervisor/supervisord.d/sshd-wrapper.conf \t\t/etc/supervisord.d/sshd-wrapper.conf \t\u0026\u0026 ln -sf \t\t/etc/services-config/supervisor/supervisord.d/sshd-bootstrap.conf \t\t/etc/supervisord.d/sshd-bootstrap.conf \t\u0026\u0026 chmod 700 \t\t/usr/sbin/{scmi,sshd-{bootstrap,wrapper}}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "echo 'root:docker' | chpasswd     \u0026\u0026 echo 'docker:docker' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/ssh-keygen -t rsa -b 4096 -C \"zeroc0d3.team@gmail.com\" -f $HOME/.ssh/id_rsa -q -N \"\"; sync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $HOME/.ssh     \u0026\u0026 touch $HOME/.ssh/authorized_keys     \u0026\u0026 chmod 700 $HOME/.ssh     \u0026\u0026 chmod go-w $HOME $HOME/.ssh     \u0026\u0026 chmod 600 $HOME/.ssh/authorized_keys     \u0026\u0026 chown `whoami` $HOME/.ssh/authorized_keys     \u0026\u0026 cat $HOME/.ssh/id_rsa.pub \u003e $HOME/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/ssh-keygen -f $HOME/.ssh/id_rsa.pub -e -m pem \u003e $HOME/.ssh/id_rsa.pem"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/ssh-keygen -A"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/docker/.ssh     \u0026\u0026 touch /home/docker/.ssh/authorized_keys     \u0026\u0026 cat $HOME/.ssh/id_rsa.pub \u003e /home/docker/.ssh/authorized_keys     \u0026\u0026 /usr/bin/ssh-keygen -f $HOME/.ssh/id_rsa.pub -e -m pem \u003e /home/docker/.ssh/id_rsa.pem     \u0026\u0026 chmod 700 /home/docker/.ssh     \u0026\u0026 chmod 600 /home/docker/.ssh/authorized_keys     \u0026\u0026 chmod 600 /home/docker/.ssh/id_rsa*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${PATH_WORKSPACE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R docker:docker ${PATH_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /root/*.tar.gz     \u0026\u0026 rm -f /root/*.zip     \u0026\u0026 rm -f /opt/*.tar.gz     \u0026\u0026 rm -f /opt/*.zip     \u0026\u0026 rm -f /tmp/*.tar.gz     \u0026\u0026 rm -f /tmp/*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "[${PATH_WORKSPACE}]"
          ]
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "--configuration=/etc/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Health": {
            "Test": [
              "CMD-SHELL",
              "--interval=5m --timeout=3s /etc/cont-consul/check || exit 1"
            ]
          },
          "Name": "healthcheck"
        }
      ]
    }
  ]
}