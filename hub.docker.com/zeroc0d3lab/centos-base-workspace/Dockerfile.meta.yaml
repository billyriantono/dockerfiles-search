MetaArgs: null
Stages:
- BaseName: zeroc0d3lab/centos-base-consul:latest
  Commands:
  - Maintainer: ZeroC0D3 Team <zeroc0d3.team@gmail.com>
    Name: maintainer
  - Env:
    - Key: VIM_VERSION
      Value: 8.0.1207
    - Key: LUA_VERSION
      Value: 5.3.4
    - Key: LUAROCKS_VERSION
      Value: 2.4.3
    - Key: RUBY_VERSION
      Value: 2.4.2
    - Key: COMPOSER_VERSION
      Value: 1.5.2
    - Key: PATH_HOME
      Value: /home/docker
    - Key: PATH_WORKSPACE
      Value: /home/docker/workspace
    Name: env
  - Env:
    - Key: RUBY_PACKAGE
      Value: '"rbenv"'
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - mkdir -p ${PATH_HOME}     && groupadd docker     && useradd -r -g docker docker     &&
      usermod -aG root docker     && chown -R docker:docker ${PATH_HOME}     && mkdir
      -p ${PATH_HOME}/git-shell-commands     && chmod 755 ${PATH_HOME}/git-shell-commands
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://copr.fedorainfracloud.org/coprs/mcepl/vim8/repo/epel-7/mcepl-vim8-epel-7.repo       -o
      /etc/yum.repos.d/mcepl-vim8-epel-7.repo
    Name: run
    PrependShell: true
  - CmdLine:
    - yum makecache fast     && yum -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install            --setopt=tsflags=nodocs            --disableplugin=fastestmirror          git          git-core          zsh          gcc          gcc-c++          autoconf          automake          make          libevent-devel          ncurses-devel          glibc-static          fontconfig          kernel-devel          readline-dev          lua-devel          lzo-devel          vim*          mysql-devel          postgresql-libs          postgresql-devel     &&
      rpm -iUvh https://yum.postgresql.org/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm     &&
      yum install -y postgresql96-libs postgresql96-server postgresql96-devel RUN
      yum -y install            --setopt=tsflags=nodocs            --disableplugin=fastestmirror          zlib          zlib-devel          patch          readline          readline-devel          libyaml-devel          libffi-devel          openssl-devel          bzip2          bison          libtool          sqlite-devel
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install https://kojipkgs.fedoraproject.org//packages/http-parser/2.7.1/3.el7/x86_64/http-parser-2.7.1-3.el7.x86_64.rpm
      nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /root/.bash_it     && rm -rf /root/.oh-my-zsh     && touch /root/.bashrc     &&
      touch /root/.zshrc     && cd /root     && git clone https://github.com/Bash-it/bash-it.git
      /opt/.bash_it     && git clone https://github.com/speedenator/agnoster-bash.git
      /opt/.bash_it/themes/agnoster-bash     && git clone https://github.com/robbyrussell/oh-my-zsh.git
      /opt/.oh-my-zsh     && git clone https://github.com/bhilburn/powerlevel9k.git
      /opt/.oh-my-zsh/custom/themes/powerlevel9k     && cd /opt      && tar zcvf bash_it.tar.gz
      .bash_it     && tar zcvf oh-my-zsh.tar.gz .oh-my-zsh     && cp /opt/bash_it.tar.gz
      $HOME     && cp /opt/oh-my-zsh.tar.gz $HOME     && cd $HOME     && tar zxvf
      $HOME/bash_it.tar.gz     && tar zxvf oh-my-zsh.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /opt/tmux     && rm -rf $HOME/.tmux/plugins/tpm     && touch $HOME/.tmux.conf     &&
      git clone https://github.com/tmux/tmux.git /opt/.tmux     && git clone https://github.com/tmux-plugins/tpm.git
      /opt/.tmux/plugins/tpm     && git clone https://github.com/seebi/tmux-colors-solarized.git
      /opt/.tmux-colors-solarized     && cd /opt      && tar zcvf tmux.tar.gz .tmux     &&
      cp /opt/tmux.tar.gz $HOME     && cd $HOME     && tar zxvf tmux.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/.tmux     && /bin/sh autogen.sh     && /bin/sh ./configure     && sudo
      make     && sudo make install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $HOME/.fonts     && mkdir -p $HOME/.config/fontconfig/conf.d/     &&
      mkdir -p /usr/share/fonts/local     && wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf
      -O $HOME/.fonts/PowerlineSymbols.otf     && wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf
      -O $HOME/.config/fontconfig/conf.d/10-powerline-symbols.conf     && cp $HOME/.fonts/PowerlineSymbols.otf
      /usr/share/fonts/local/PowerlineSymbols.otf     && cp $HOME/.fonts/PowerlineSymbols.otf
      /usr/share/fonts/PowerlineSymbols.otf     && cp $HOME/.config/fontconfig/conf.d/10-powerline-symbols.conf
      /etc/fonts/conf.d/10-powerline-symbols.conf     && /usr/bin/fc-cache -vf $HOME/.fonts/     &&
      /usr/bin/fc-cache -vf /usr/share/fonts
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/Anthony25/gnome-terminal-colors-solarized.git /opt/.solarized     &&
      cd /opt      && tar zcvf solarized.tar.gz .solarized     && cp /opt/solarized.tar.gz
      $HOME     && cd $HOME     && tar zxvf solarized.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/zeroc0d3/ruby-installation /opt/ruby_installer
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./rootfs/root/.zshrc
    - /root/.zshrc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./rootfs/root/.bashrc
    - /root/.bashrc
  - CmdLine:
    - sudo /bin/sh /opt/ruby_installer/install_ruby.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo /bin/sh /opt/ruby_installer/gems.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - yum clean all
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./rootfs/opt/install_vim.sh
    - /opt/install_vim.sh
  - CmdLine:
    - curl -L http://www.lua.org/ftp/lua-${LUA_VERSION}.tar.gz -o /opt/lua-${LUA_VERSION}.tar.gz     &&
      curl -L http://luarocks.github.io/luarocks/releases/luarocks-${LUAROCKS_VERSION}.tar.gz          -o
      /opt/luarocks-${LUAROCKS_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt     && tar zxvf lua-${LUA_VERSION}.tar.gz     && tar zxvf luarocks-${LUAROCKS_VERSION}.tar.gz     &&
      cd lua-${LUA_VERSION}     && make linux     && cd ../luarocks-${LUAROCKS_VERSION}     &&
      ./configure     && make     && sudo make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /root/vim     && git clone https://github.com/vim/vim.git /root/vim     &&
      cd /root/vim     && git checkout v${VIM_VERSION}     && cd src     && make autoconf     &&
      ./configure     && make distclean     && make     && cp config.mk.dist auto/config.mk     &&
      sudo make install     && sudo mkdir -p /usr/share/vim     && sudo mkdir -p /usr/share/vim/vim80/     &&
      sudo cp -fr /root/vim/runtime/** /usr/share/vim/vim80/
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://raw.githubusercontent.com/zeroc0d3/vim-ide/master/step02.sh
      | sudo bash -s
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/dracula/vim.git /opt/vim-themes/dracula     &&
      git clone https://github.com/blueshirts/darcula.git /opt/vim-themes/darcula     &&
      mkdir -p /root/.vim/bundle/vim-colors/colors     && cp /opt/vim-themes/dracula/colors/dracula.vim
      /root/.vim/bundle/vim-colors/colors/dracula.vim     && cp /opt/vim-themes/darcula/colors/darcula.vim
      /root/.vim/bundle/vim-colors/colors/darcula.vim
    Name: run
    PrependShell: true
  - CmdLine:
    - tar zcvf vim.tar.gz /root/vim /root/.vim     && mv vim.tar.gz /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/npm install --global chai     && /usr/bin/npm install --global tv4     &&
      /usr/bin/npm install --global newman
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/npm install --global yarn     && /usr/bin/npm install --global bower     &&
      /usr/bin/npm install --global grunt     && /usr/bin/npm install --global gulp     &&
      /usr/bin/npm install --global yo
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/npm upgrade --global chai     && /usr/bin/npm upgrade --global tv4     &&
      /usr/bin/npm upgrade --global newman     && /usr/bin/npm upgrade --global yarn     &&
      /usr/bin/npm upgrade --global bower     && /usr/bin/npm upgrade --global grunt     &&
      /usr/bin/npm upgrade --global gulp     && /usr/bin/npm upgrade --global yo
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://getcomposer.org/download/${COMPOSER_VERSION}/composer.phar -O /usr/local/bin/composer     &&
      sudo chmod +x /usr/local/bin/composer
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./rootfs/root/colors/24-bit-color.sh
    - /opt/24-bit-color.sh
  - CmdLine:
    - chmod a+x /opt/24-bit-color.sh; sync     && sudo /bin/sh /opt/24-bit-color.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs/
    - /
  - CmdLine:
    - rm -f /root/*.tar.gz     && rm -f /root/*.zip     && rm -f /opt/*.tar.gz     &&
      rm -f /opt/*.zip     && rm -f /tmp/*.tar.gz     && rm -f /tmp/*.zip
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - Name: volume
    Volumes:
    - '[${PATH_WORKSPACE}]'
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  - CmdLine: []
    Name: cmd
    PrependShell: false
  - Health:
      Test:
      - CMD-SHELL
      - --interval=5m --timeout=3s /etc/cont-consul/check || exit 1
    Name: healthcheck
  From:
    Image: zeroc0d3lab/centos-base-consul:latest
  Name: ""
  Platform: ""
  SourceCode: FROM zeroc0d3lab/centos-base-consul:latest
