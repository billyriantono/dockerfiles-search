MetaArgs: null
Stages:
- BaseName: amd64/centos:latest
  Commands:
  - Maintainer: h1f0x
    Name: maintainer
  - Env:
    - Key: container
      Value: docker
    Name: env
  - Env:
    - Key: CALIBRE_INSTALLER_SOURCE_CODE_URL
      Value: https://raw.githubusercontent.com/kovidgoyal/calibre/master/setup/linux-installer.py
    Name: env
  - Env:
    - Key: CALIBRE_CONFIG_DIRECTORY
      Value: '"/config/calibre/"'
    Name: env
  - Env:
    - Key: CALIBRE_TEMP_DIR
      Value: '"/config/calibre/tmp/"'
    Name: env
  - Env:
    - Key: CALIBRE_CACHE_DIRECTORY
      Value: '"/config/calibre/cache/"'
    Name: env
  - CmdLine:
    - (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service
      ] || rm -f $i; done); rm -f /lib/systemd/system/multi-user.target.wants/*;rm
      -f /etc/systemd/system/*.wants/*; rm -f /lib/systemd/system/local-fs.target.wants/*;
      rm -f /lib/systemd/system/sockets.target.wants/*udev*; rm -f /lib/systemd/system/sockets.target.wants/*initctl*;
      rm -f /lib/systemd/system/basic.target.wants/*; rm -f /lib/systemd/system/anaconda.target.wants/*;
    Name: run
    PrependShell: true
  - CmdLine:
    - yum clean all && rm -rf /var/cache/yum/*
    Name: run
    PrependShell: true
  - CmdLine:
    - yum update -y
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - yum groupinstall -y "development tools"
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel
      readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel expat-devel
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y wget
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://python.org/ftp/python/2.7.14/Python-2.7.14.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xf Python-2.7.14.tar.xz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/Python-2.7.14
  - CmdLine:
    - ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared LDFLAGS="-Wl,-rpath
      /usr/local/lib"
    Name: run
    PrependShell: true
  - CmdLine:
    - make && make altinstall
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://bootstrap.pypa.io/get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - python2.7 get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y mesa-libGL-devel
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y qt5-qtbase-gui
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
    Name: run
    PrependShell: true
  - CmdLine:
    - yum --enablerepo remi info ImageMagick7
    Name: run
    PrependShell: true
  - CmdLine:
    - yum --enablerepo remi install -y ImageMagick7
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y which
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y chromedriver chromium xorg-x11-server-Xvfb
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/
  - CmdLine:
    - wget https://rarlab.com/rar/unrarsrc-5.6.8.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xvf unrarsrc-5.6.8.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -la
    Name: run
    PrependShell: true
  - CmdLine:
    - make -C unrar lib
    Name: run
    PrependShell: true
  - CmdLine:
    - make -C unrar install-lib
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2.7 install --global-option=build_ext --global-option="-I$(pwd)" unrardll
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/unrar
  - CmdLine:
    - make unrar
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -v unrar /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O- ${CALIBRE_INSTALLER_SOURCE_CODE_URL} | python2.7 -c "import sys; main=lambda:sys.stderr.write('Download
      failed\n'); exec(sys.stdin.read()); main(install_dir='/opt', isolated=True)"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - wget https://github.com/janeczku/calibre-web/archive/0.6.4.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip 0.6.4.zip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/calibre-web-0.6.4
  - CmdLine:
    - pip2.7 install --target vendor -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2.7 install --target vendor -r optional-requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2.7 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2.7 install apprise
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs/
    - /
  - CmdLine:
    - yum install -y cronie
    Name: run
    PrependShell: true
  - CmdLine:
    - (crontab -l 2>/dev/null; echo "* * * * * /usr/bin/verify-services.sh") | crontab
      -
    Name: run
    PrependShell: true
  - CmdLine:
    - (crontab -l 2>/dev/null; echo "* * * * * /bin/bash /usr/bin/add-new-books.sh
      1> /config/calibre/auto_import_log.txt 2> /config/calibre/auto_import_error.txt")
      | crontab -
    Name: run
    PrependShell: true
  - CmdLine:
    - systemctl enable prepare-config.service
    Name: run
    PrependShell: true
  - CmdLine:
    - systemctl enable calibre-web.service
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /config
    - /books
    - /auto_add
  - CmdLine:
    - /usr/sbin/init
    Name: cmd
    PrependShell: false
  From:
    Image: amd64/centos:latest
  Name: ""
  Platform: ""
  SourceCode: FROM amd64/centos:latest
