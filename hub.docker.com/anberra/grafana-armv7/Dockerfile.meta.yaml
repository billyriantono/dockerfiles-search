MetaArgs: null
Stages:
- BaseName: balenalib/armv7hf-debian
  Commands:
  - Maintainer: andres.bermejo@gmail.com
    Name: maintainer
  - Labels:
    - Key: version
      Value: '"6.5.0"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Image with Grafana for armv7"'
    Name: label
  - Chown: ""
    Name: add
    SourcesAndDest:
    - VERSION
    - .
  - Key: PKG_NAME
    Name: arg
    Value: '"6.5.0"'
  - Key: GF_UID
    Name: arg
    Value: '"472"'
  - Key: GF_GID
    Name: arg
    Value: '"472"'
  - Key: DEB_FILE
    Name: arg
    Value: '"grafana_${PKG_NAME}_armhf.deb"'
  - Env:
    - Key: GRAFANA_URL
      Value: '"https://dl.grafana.com/oss/release/$DEB_FILE"'
    - Key: PATH
      Value: /usr/share/grafana/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - Key: GF_PATHS_CONFIG
      Value: '"/etc/grafana/grafana.ini"'
    - Key: GF_PATHS_DATA
      Value: '"/var/lib/grafana"'
    - Key: GF_PATHS_HOME
      Value: '"/usr/share/grafana"'
    - Key: GF_PATHS_LOGS
      Value: '"/var/log/grafana"'
    - Key: GF_PATHS_PLUGINS
      Value: '"/var/lib/grafana/plugins"'
    - Key: GF_PATHS_PROVISIONING
      Value: '"/etc/grafana/provisioning"'
    - Key: GF_PATHS_DEB
      Value: '"/depot"'
    Name: env
  - CmdLine:
    - cross-build-start
    Name: run
    PrependShell: false
  - CmdLine:
    - apt-get update && apt-get install -y         curl         libfontconfig         &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "$GF_PATHS_HOME/.aws" &&     mkdir -p "$GF_PATHS_DEB" &&     groupadd
      -r -g $GF_GID grafana &&     useradd -r -u $GF_UID -g grafana grafana &&     mkdir
      -p "$GF_PATHS_PROVISIONING/datasources"              "$GF_PATHS_PROVISIONING/dashboards"              "$GF_PATHS_PROVISIONING/notifiers"              "$GF_PATHS_LOGS"              "$GF_PATHS_PLUGINS"              "$GF_PATHS_DATA"
      &&     chown -R grafana:grafana "$GF_PATHS_DATA" "$GF_PATHS_HOME/.aws" "$GF_PATHS_LOGS"
      "$GF_PATHS_PLUGINS" &&     chmod 777 "$GF_PATHS_DATA" "$GF_PATHS_HOME/.aws"
      "$GF_PATHS_LOGS" "$GF_PATHS_PLUGINS" "$GF_PATHS_PROVISIONING/notifiers" "$GF_PATHS_PROVISIONING"
      &&     curl -L "$GRAFANA_URL" --output "$GF_PATHS_DEB/$DEB_FILE" &&     dpkg
      -i "$GF_PATHS_DEB/$DEB_FILE" &&     cp "$GF_PATHS_HOME/conf/sample.ini" "$GF_PATHS_CONFIG"
      &&     cp "$GF_PATHS_HOME/conf/ldap.toml" /etc/grafana/ldap.toml &&     rm "$GF_PATHS_DEB/$DEB_FILE"
    Name: run
    PrependShell: true
  - CmdLine:
    - unlink /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/share/zoneinfo/Europe/Madrid /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - cross-build-end
    Name: run
    PrependShell: false
  - Name: expose
    Ports:
    - "3000"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./run.sh
    - /run.sh
  - Name: user
    User: grafana
  - Name: workdir
    Path: /
  - CmdLine:
    - /run.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: balenalib/armv7hf-debian
  Name: ""
  Platform: ""
  SourceCode: FROM balenalib/armv7hf-debian
