{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "wsielski@eaby.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "CONSUL_VERSION",
              "Value": "0.8.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NOMAD_VERSION",
              "Value": "0.5.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FABIO_VERSION",
              "Value": "1.4.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.8.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_SRC_URL",
              "Value": "https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_SRC_SHA256",
              "Value": "33daf4c03f86120fdfdc66bddf6bfff4661c7ca11c5da473e537f4d69b470e57"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories   \u0026\u0026 apk update; apk upgrade   \u0026\u0026 apk add --no-cache --virtual .build-deps     bash     go     curl     make     git     gcc     musl-dev     openssl     openssl-dev       \u0026\u0026 export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\"   \u0026\u0026 wget -q \"$GOLANG_SRC_URL\" -O golang.tar.gz   \u0026\u0026 echo \"$GOLANG_SRC_SHA256  golang.tar.gz\" | sha256sum -c -   \u0026\u0026 tar -C /usr/local -xzf golang.tar.gz   \u0026\u0026 rm golang.tar.gz   \u0026\u0026 cd /usr/local/go/src   \u0026\u0026 ./make.bash     \u0026\u0026 export PATH=$GOPATH/bin:/usr/local/go/bin:$PATH   \u0026\u0026 mkdir /go   \u0026\u0026 cd /go   \u0026\u0026 ln -s . src   \u0026\u0026 export GOPATH=/go   \u0026\u0026 go get github.com/Masterminds/glide   \u0026\u0026 cp /go/bin/* /usr/local/bin       \u0026\u0026 glide create --skip-import  --non-interactive    \u0026\u0026 glide get github.com/eBay/fabio#v${FABIO_VERSION}   \u0026\u0026 glide get github.com/hashicorp/nomad#v${NOMAD_VERSION}   \u0026\u0026 glide get github.com/hashicorp/consul#v${CONSUL_VERSION}   \u0026\u0026 glide update --all-dependencies   \u0026\u0026 go build vendor/github.com/hashicorp/consul   \u0026\u0026 go build vendor/github.com/eBay/fabio   \u0026\u0026 go build vendor/github.com/hashicorp/nomad   \u0026\u0026 mv consul fabio nomad /usr/local/bin       \u0026\u0026 rm -rf /go   \u0026\u0026 apk del .build-deps   \u0026\u0026 rm -rf /usr/local/go   \u0026\u0026 rm -rf /var/cache/apk/*   \u0026\u0026 rm -rf /root/.glide   \u0026\u0026 rm /usr/local/bin/glide"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update; apk add tmux   \u0026\u0026 rm -rf /var/cache/apk/*   \u0026\u0026 ln -s /dev/console /0   \u0026\u0026 ln -s /dev/tty1 /1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "tmux.conf",
            "/etc/tmux.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "example.nomad",
            "/"
          ]
        }
      ]
    }
  ]
}