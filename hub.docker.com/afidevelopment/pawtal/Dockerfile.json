{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache",
      "SourceCode": "FROM php:7.1-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "APACHE_DOCUMENT_ROOT",
              "Value": "/var/www/public"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf     \u0026\u0026 sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install wget git zip libjpeg-dev libwebp-dev libpng-dev libjpeg62-turbo-dev libjpeg-turbo-progs libjpeg62-turbo cron nano mysql-client gnupg -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_9.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm i -g npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install yarn imagemin -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo_mysql mysqli     \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -o -f redis     \u0026\u0026  rm -rf /tmp/pear     \u0026\u0026  docker-php-ext-enable redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"upload_max_filesize = 64M\\npost_max_size = 128M\\nmax_input_vars = 5000\" \u003e     /usr/local/etc/php/conf.d/project.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /var/www -rf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/var/www/"
          ]
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "www-data"
        },
        {
          "Name": "workdir",
          "Path": "/var/www/"
        },
        {
          "CmdLine": [
            "yarn install --production"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer install --no-interaction --no-dev     \u0026\u0026 composer dump-autoload -o"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm run production"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        }
      ]
    }
  ]
}