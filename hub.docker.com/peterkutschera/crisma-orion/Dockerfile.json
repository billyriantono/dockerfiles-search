{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos6",
      "SourceCode": "FROM centos:centos6",
      "Platform": "",
      "From": {
        "Image": "centos:centos6"
      },
      "Commands": [
        {
          "Maintainer": "Peter.Kutschera@ait.ac.at",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum install -y epel-release  \u0026\u0026     yum install -y make cmake gcc-c++ scons libmicrohttpd-devel boost-devel libcurl-devel wget tar bzip2 clang CUnit-devel git crontabs \u0026\u0026     yum install -y mongodb-server \u0026\u0026     yum update pcre"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chkconfig mongod on"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "perl -i.bak -p -e 's/^(session\\s+required\\s+pam_loginuid.so)\\s*$/#\\1\\n/' /etc/pam.d/crond"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /home/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/src"
        },
        {
          "CmdLine": [
            "wget http://downloads.mongodb.org/cxx-driver/mongodb-linux-x86_64-2.2.3.tgz \u0026\u0026     tar xfvz mongodb-linux-x86_64-2.2.3.tgz \u0026\u0026     cd mongo-cxx-driver-v2.2 \u0026\u0026 scons \u0026\u0026 scons install \u0026\u0026 chmod a+r -R /usr/local/include/mongo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://googlemock.googlecode.com/files/gmock-1.5.0.tar.bz2 \u0026\u0026     tar xfvj gmock-1.5.0.tar.bz2 \u0026\u0026     cd gmock-1.5.0 \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/staropram/cantcoap \u0026\u0026     cd cantcoap \u0026\u0026     git checkout 749e22376664dd3adae17492090e58882d3b28a7 \u0026\u0026     make \u0026\u0026     cp cantcoap.h /usr/local/include \u0026\u0026     cp dbg.h /usr/local/include \u0026\u0026     cp nethelper.h /usr/local/include \u0026\u0026     cp libcantcoap.a /usr/local/lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/telefonicaid/fiware-orion \u0026\u0026     cd fiware-orion \u0026\u0026     git checkout 0.16.0-FIWARE-4.1.1 \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cp etc/init.d/contextBroker.centos /etc/init.d/contextBroker \u0026\u0026     chmod +x /etc/init.d/contextBroker \u0026\u0026     cp etc/config/contextBroker /etc/sysconfig/ \u0026\u0026     useradd -r orion \u0026\u0026     mkdir /var/log/contextBroker \u0026\u0026     chown orion:orion /var/log/contextBroker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/logrotate.d/contextBroker",
            "/etc/logrotate.d/contextBroker"
          ]
        },
        {
          "CmdLine": [
            "echo '* * * * * if /usr/bin/curl -q -X GET http://localhost:1026/version | grep -q version; then /bin/true ; else /etc/init.d/contextBroker restart; fi' | crontab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "rm -rf /home/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/bin/runAll.sh",
            "/root/bin/runAll.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /root/bin/runAll.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "1026"
          ]
        },
        {
          "CmdLine": [
            "/root/bin/runAll.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}