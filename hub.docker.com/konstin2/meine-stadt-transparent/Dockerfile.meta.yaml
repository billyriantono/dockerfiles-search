MetaArgs: null
Stages:
- As: front-end
  BaseName: node:10
  Commands:
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - /app/package.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package-lock.json
    - /app/package-lock.json
  - CmdLine:
    - npm ci --dev
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - etc
    - /app/etc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - customization
    - /app/customization
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mainapp/assets
    - /app/mainapp/assets
  - CmdLine:
    - npm run build:prod && npm run build:email
    Name: run
    PrependShell: true
  From:
    Image: node:10
  Name: front-end
  Platform: ""
  SourceCode: FROM node:10 AS front-end
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: PYTHONUNBUFFERED
      Value: "1"
    - Key: NODE_ENV
      Value: production
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y curl gnupg &&     curl -sL https://deb.nodesource.com/setup_10.x
      | bash - &&     apt-get install -y python3-pip python3-venv python3-dev     nodejs
      git libmysqlclient-dev libmagickwand-dev poppler-utils libssl-dev gettext &&     curl
      -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
      | python3 &&     apt-get purge -y curl gnupg &&     apt-get autoremove -y &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pyproject.toml
    - /app/pyproject.toml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - poetry.lock
    - /app/poetry.lock
  - Name: workdir
    Path: /app
  - CmdLine:
    - $HOME/.poetry/bin/poetry config virtualenvs.in-project true &&     $HOME/.poetry/bin/poetry
      install --no-dev -E import-json
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app/
  - Chown: ""
    From: front-end
    Name: copy
    SourcesAndDest:
    - /app/mainapp/assets
    - /app/mainapp/assets
  - Chown: ""
    From: front-end
    Name: copy
    SourcesAndDest:
    - /app/node_modules
    - /app/node_modules
  - CmdLine:
    - etc/docker-init.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - Name: user
    User: www-data
  - CmdLine:
    - /app/.venv/bin/python
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /app/.venv/bin/gunicorn
    - meine_stadt_transparent.wsgi:application
    - -w 2
    - -b :8000
    - --capture-output
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
