{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "heroku/cedar:14",
      "SourceCode": "FROM heroku/cedar:14",
      "Platform": "",
      "From": {
        "Image": "heroku/cedar:14"
      },
      "Commands": [
        {
          "Maintainer": "Gabriel Berke-Williams \u003cgabe@thoughtbot.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/.local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /app/user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app/user"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442   \u0026\u0026 echo 'deb http://download.fpcomplete.com/ubuntu trusty main' \u003e     /etc/apt/sources.list.d/fpco.list   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y stack   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "STACK_LTS_VERSION",
              "Value": "6.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "stack setup --resolver lts-$STACK_LTS_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Expression": "COPY ./stack-bootstrap .",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN stack install   --resolver lts-$STACK_LTS_VERSION   $(cat stack-bootstrap)",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY stack.yaml .",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY *.cabal .",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN stack build --dependencies-only",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY . /app/user",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN if [ -x bin/pre-build ]; then bin/pre-build; fi",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN stack --local-bin-path=. install",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN rm -rf /app/user/.stack-work",
          "Name": "onbuild"
        }
      ]
    }
  ]
}