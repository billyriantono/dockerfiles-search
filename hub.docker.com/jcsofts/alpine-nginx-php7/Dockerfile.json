{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Maintainer": "JCSoft \u003cjcsoft@aliyun.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "fpm_conf",
              "Value": "/etc/php7/php-fpm.d/www.conf"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "php_ini",
              "Value": "/etc/php7/php.ini"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \u0026\u0026   apk update \u0026\u0026   apk upgrade \u0026\u0026   apk add nginx bash ssmtp git   php7 php7-phar php7-curl   php7-fpm php7-json php7-zlib php7-xml php7-xmlreader php7-xmlwriter php7-xsl php7-dom php7-ctype php7-opcache php7-zip php7-iconv   php7-pdo php7-pdo_mysql php7-mysqli php7-pdo_sqlite php7-pdo_pgsql php7-mbstring php7-session   php7-gd php7-mcrypt php7-openssl php7-sockets php7-posix php7-ldap php7-simplexml php7-tokenizer   php7-xdebug php7-apcu php7-intl php7-fileinfo php7-imagick php7-gmp   curl openssl supervisor \u0026\u0026   mkdir /etc/nginx/certificates \u0026\u0026   openssl req     -x509     -newkey rsa:2048     -keyout /etc/nginx/certificates/key.pem     -out /etc/nginx/certificates/cert.pem     -days 365     -nodes     -subj /CN=localhost \u0026\u0026   rm -rf /var/cache/apk/* \u0026\u0026   ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026   ln -sf /dev/stderr /var/log/nginx/error.log \u0026\u0026   curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer \u0026\u0026   mkdir -p /etc/nginx \u0026\u0026   mkdir -p /var/run/php-fpm \u0026\u0026   mkdir -p /var/log/supervisor \u0026\u0026   mkdir -p /etc/supervisor/conf.d \u0026\u0026  rm -Rf /etc/nginx/nginx.conf \u0026\u0026   sed -i         -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\"         -e \"s/pm.max_children = 5/pm.max_children = 10/g\"         -e \"s/pm.start_servers = 2/pm.start_servers = 3/g\"         -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\"         -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\"         -e \"s/;pm.max_requests = 500/pm.max_requests = 200/g\"         -e \"s/user = www-data/user = nginx/g\"         -e \"s/group = www-data/group = nginx/g\"         -e \"s/;listen.mode = 0660/listen.mode = 0666/g\"         -e \"s/;listen.owner = www-data/listen.owner = nginx/g\"         -e \"s/;listen.group = www-data/listen.group = nginx/g\"         -e \"s/listen = 127.0.0.1:9000/listen = \\/var\\/run\\/php-fpm.sock/g\"         -e \"s/^;clear_env = no$/clear_env = no/\"         ${fpm_conf} \u0026\u0026  sed -i     -e \"s/;session.save_path = \\\"\\/tmp\\\"/session.save_path = \\\"\\/tmp\\\"/g\"     ${php_ini}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/nginx/sites-available/ \u0026\u0026   mkdir -p /etc/nginx/sites-enabled/ \u0026\u0026   mkdir -p /etc/nginx/ssl/ \u0026\u0026   rm -Rf /var/www/* \u0026\u0026   mkdir /var/www/html/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/nginx-site.conf",
            "/etc/nginx/sites-available/default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/nginx-site-ssl.conf",
            "/etc/nginx/sites-available/default-ssl.conf"
          ]
        },
        {
          "CmdLine": [
            "ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /usr/local/bin/pull \u0026\u0026 chmod 755 /usr/local/bin/push \u0026\u0026 chmod 755 /usr/local/bin/letsencrypt-setup \u0026\u0026 chmod 755 /usr/local/bin/letsencrypt-renew \u0026\u0026 chmod 755 /usr/local/bin/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/",
            "/var/www/html/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "errors/",
            "/var/www/errors"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "['/var/www/html','/var/log']"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}