MetaArgs: null
Stages:
- BaseName: node:8.9.0
  Commands:
  - Maintainer: hugo@exec.sh
    Name: maintainer
  - Key: NPM_TOKEN
    Name: arg
    Value: null
  - Key: NAME
    Name: arg
    Value: null
  - Env:
    - Key: NAME
      Value: $NAME
    Name: env
  - Key: VERSION
    Name: arg
    Value: null
  - Env:
    - Key: VERSION
      Value: $VERSION
    Name: env
  - Key: VERSION_COMMIT
    Name: arg
    Value: null
  - Env:
    - Key: VERSION_COMMIT
      Value: $VERSION_COMMIT
    Name: env
  - Key: VERSION_BUILD_DATE
    Name: arg
    Value: null
  - Env:
    - Key: VERSION_BUILD_DATE
      Value: $VERSION_BUILD_DATE
    Name: env
  - Env:
    - Key: HOME
      Value: /opt/$NAME
    Name: env
  - CmdLine:
    - mkdir -p $HOME
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - apt-get update &&    apt-get install -y libatk-bridge2.0-0 libgtk-3-0 libx11-xcb1
      libnss3 libxss1 libgconf-2-4 libasound2 &&    apt-get install -y build-essential
      git &&    apt-get install -y netcat &&    apt-get clean
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - $HOME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tsconfig.json
    - $HOME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - webpack.config.js
    - $HOME
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src
    - $HOME/src
  - CmdLine:
    - npm run compile
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove --purge -y build-essential git &&    apt-get autoremove --purge
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - npm prune --production
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - share/docker/start.sh
    - /start.sh
  - CmdLine:
    - chmod +x /start.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - share/docker/test.sh
    - /test.sh
  - CmdLine:
    - chmod +x /test.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - /start.sh
    Name: entrypoint
    PrependShell: false
  - Health:
      Interval: 300000000000
      StartPeriod: 10000000000
      Test:
      - CMD-SHELL
      - nc -z localhost 3000 || exit 1
      Timeout: 3000000000
    Name: healthcheck
  From:
    Image: node:8.9.0
  Name: ""
  Platform: ""
  SourceCode: FROM node:8.9.0
