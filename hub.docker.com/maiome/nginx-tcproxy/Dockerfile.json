{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Sean Johnson \u003cpirogoeth@maio.me\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends     build-essential libc6-dev libc-dev-bin curl git libpcre3-dev     libssl-dev zlib1g-dev ca-certificates liblzma-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver pgp.mit.edu --recv-key     A09CD539B8BB8CBE96E82BDFABD4D3B3F5806B4D     4C2C85E705DC730833990C38A9376139A524C53E     B0F4253373F8F6F510D42178520A9993A1C052F8     65506C02EFC250F1B7A3D694ECF0E90B2C172083     7338973069ED3F443F4D37DFA64FD5B17ADB39A8     6E067260B83DCF2CA93C566F518509686C7E5E82     573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.7.8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git config --global http.sslVerify false"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -SL \"http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz\" -o nginx.tar.gz     \u0026\u0026 curl -SL \"http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc\" -o nginx.tar.gz.asc     \u0026\u0026 gpg --verify nginx.tar.gz.asc     \u0026\u0026 mkdir -p /usr/src/nginx     \u0026\u0026 tar xzvpf nginx.tar.gz -C /usr/src/nginx --strip-components=1     \u0026\u0026 git clone http://github.com/yaoweibin/nginx_tcp_proxy_module.git /usr/src/nginx/nginx_tcp_proxy_module     \u0026\u0026 rm nginx.tar.gz.*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git config --global http.sslVerify true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/nginx     \u0026\u0026 patch -p1 \u003c /usr/src/nginx/nginx_tcp_proxy_module/tcp.patch     \u0026\u0026 ./configure         --user=www-data         --group=www-data         --prefix=/usr/local/nginx         --conf-path=/etc/nginx/nginx.conf         --http-log-path=/proc/self/fd/1         --error-log-path=/proc/self/fd/2         --with-http_ssl_module         --with-ipv6         --with-pcre-jit         --add-module=/usr/src/nginx/nginx_tcp_proxy_module     \u0026\u0026 make -j\"$(nproc)\"     \u0026\u0026 make install     \u0026\u0026 cd /     \u0026\u0026 rm -rf /usr/src/nginx     \u0026\u0026 chown -R www-data:www-data /usr/local/nginx     \u0026\u0026 {         echo;         echo '# stay in the foreground so docker can attach';         echo 'daemon off;';        } \u003e\u003e /etc/nginx/nginx.conf     \u0026\u0026 apt-get purge -y --auto-remove build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/nginx/sbin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/nginx/html"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/nginx"
          ]
        },
        {
          "CmdLine": [
            "nginx"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}