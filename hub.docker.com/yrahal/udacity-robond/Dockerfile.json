{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "yrahal/dev-machine:latest",
      "SourceCode": "FROM yrahal/dev-machine:latest",
      "Platform": "",
      "From": {
        "Image": "yrahal/dev-machine:latest"
      },
      "Commands": [
        {
          "Maintainer": "Youcef Rahal",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "usermod -l bender -m -d /home/bender orion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupmod -n bender orion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "bender"
        },
        {
          "Key": "conda_bin_dir",
          "Name": "arg",
          "Value": "/opt/anaconda3/bin"
        },
        {
          "Key": "utils_bin_dir",
          "Name": "arg",
          "Value": "/opt/utils/bin"
        },
        {
          "Key": "conda_add",
          "Name": "arg",
          "Value": "${utils_bin_dir}/conda-add"
        },
        {
          "Key": "conda_remove",
          "Name": "arg",
          "Value": "${utils_bin_dir}/conda-remove"
        },
        {
          "CmdLine": [
            "printf \"%s\\n\"            \"#!/bin/bash\"            \"\"            \"source ${conda_remove}\"            \"export PATH=${conda_bin_dir}:\\${PATH}\"            \"source activate cpu\" | sudo tee ${conda_add} \u003e /dev/null     \u0026\u0026     printf \"%s\\n\"            \"#!/bin/bash\"            \"\"            \"source ${conda_bin_dir}/deactivate\"            \"export PATH=\\$(echo \\${PATH} | awk -v RS=: -v ORS=: '/anaconda/ {next} {print}' | sed 's/:*$//')\" | sudo tee ${conda_remove} \u003e /dev/null     \u0026\u0026     printf \"%s\\n\"            \"\"            \"alias conda-add='source ${conda_add}'\"            \"alias conda-remove='source ${conda_remove}'\" \u003e\u003e ~/.bash_aliases"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"conda-remove\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get update --fix-missing"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo add-apt-repository \"deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) universe restricted multiverse\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" \u003e /etc/apt/sources.list.d/ros-latest.list'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y ros-kinetic-desktop-full"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo rosdep init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rosdep update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"%s\\n\"            \"\"            \"source /opt/ros/kinetic/setup.bash\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y python-rosinstall python-rosinstall-generator python-wstool build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y python-catkin-tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"source ${conda_remove} \u0026\u0026              sudo apt-get install -y python-pip \u0026\u0026              sudo rm -rf /usr/lib/python2.7/dist-packages/numpy \u0026\u0026              pip install sympy sklearn scipy numpy\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y ros-kinetic-joint-state-controller"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd \u0026\u0026     mkdir src \u0026\u0026     cd src \u0026\u0026     git clone https://github.com/udacity/RoboND-Kinematics-Project \u0026\u0026     cd .. \u0026\u0026     rosdep install --from-paths src --ignore-src --rosdistro=kinetic -y \u0026\u0026     rm -rf src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd \u0026\u0026     mkdir src \u0026\u0026     cd src \u0026\u0026     git clone https://github.com/udacity/RoboND-Perception-Project \u0026\u0026     cd .. \u0026\u0026     rosdep install --from-paths src --ignore-src --rosdistro=kinetic -y \u0026\u0026     rm -rf src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"source ${conda_remove} \u0026\u0026              cd \u0026\u0026              pip install cython \u0026\u0026              git clone https://github.com/udacity/RoboND-Perception-Exercises \u0026\u0026              cd RoboND-Perception-Exercises/python-pcl \u0026\u0026              python setup.py build \u0026\u0026              sudo python setup.py install \u0026\u0026              sudo apt-get install pcl-tools \u0026\u0026              cd - \u0026\u0026              rosdep install --from-paths RoboND-Perception-Exercises/Exercise-2 --ignore-src --rosdistro=kinetic -y \u0026\u0026              rosdep install --from-paths RoboND-Perception-Exercises/Exercise-3 --ignore-src --rosdistro=kinetic -y \u0026\u0026              sudo rm -r RoboND-Perception-Exercises\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd \u0026\u0026     mkdir src \u0026\u0026     cd src \u0026\u0026     git clone https://github.com/turtlebot/turtlebot_simulator \u0026\u0026     git clone https://github.com/turtlebot/turtlebot \u0026\u0026     cd .. \u0026\u0026     rosdep install --from-paths src --ignore-src --rosdistro=kinetic -y \u0026\u0026     rm -rf src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y ros-kinetic-rqt ros-kinetic-rqt-multiplot libqwt-dev \u0026\u0026     rm -f ~/.config/ros.org/rqt_gui.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get clean -y \u0026\u0026     sudo apt-get autoremove -y \u0026\u0026     sudo rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"%s\\n\"            \"\"            \"export GAZEBO_MODEL_PATH=~/catkin_ws/src/RoboND-Kinematics-Project/kuka_arm/models:\\$GAZEBO_MODEL_PATH\"            \"export GAZEBO_MODEL_PATH=~/catkin_ws/src/RoboND-Perception-Project/pr2_robot/models:\\$GAZEBO_MODEL_PATH\"            \"export GAZEBO_MODEL_PATH=~/catkin_ws/src/sensor_stick/models:\\$GAZEBO_MODEL_PATH\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}