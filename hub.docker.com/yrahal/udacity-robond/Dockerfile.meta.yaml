MetaArgs: null
Stages:
- BaseName: yrahal/dev-machine:latest
  Commands:
  - Maintainer: Youcef Rahal
    Name: maintainer
  - Name: user
    User: root
  - CmdLine:
    - usermod -l bender -m -d /home/bender orion
    Name: run
    PrependShell: true
  - CmdLine:
    - groupmod -n bender orion
    Name: run
    PrependShell: true
  - Name: user
    User: bender
  - Key: conda_bin_dir
    Name: arg
    Value: /opt/anaconda3/bin
  - Key: utils_bin_dir
    Name: arg
    Value: /opt/utils/bin
  - Key: conda_add
    Name: arg
    Value: ${utils_bin_dir}/conda-add
  - Key: conda_remove
    Name: arg
    Value: ${utils_bin_dir}/conda-remove
  - CmdLine:
    - 'printf "%s\n"            "#!/bin/bash"            ""            "source ${conda_remove}"            "export
      PATH=${conda_bin_dir}:\${PATH}"            "source activate cpu" | sudo tee
      ${conda_add} > /dev/null     &&     printf "%s\n"            "#!/bin/bash"            ""            "source
      ${conda_bin_dir}/deactivate"            "export PATH=\$(echo \${PATH} | awk
      -v RS=: -v ORS=: ''/anaconda/ {next} {print}'' | sed ''s/:*$//'')" | sudo tee
      ${conda_remove} > /dev/null     &&     printf "%s\n"            ""            "alias
      conda-add=''source ${conda_add}''"            "alias conda-remove=''source ${conda_remove}''"
      >> ~/.bash_aliases'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "conda-remove" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update --fix-missing
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu $(lsb_release
      -sc) universe restricted multiverse"
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc)
      main" > /etc/apt/sources.list.d/ros-latest.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y ros-kinetic-desktop-full
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo rosdep init
    Name: run
    PrependShell: true
  - CmdLine:
    - rosdep update
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "%s\n"            ""            "source /opt/ros/kinetic/setup.bash"
      >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y python-rosinstall python-rosinstall-generator python-wstool
      build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y python-catkin-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c "source ${conda_remove} &&              sudo apt-get install -y python-pip
      &&              sudo rm -rf /usr/lib/python2.7/dist-packages/numpy &&              pip
      install sympy sklearn scipy numpy"
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y ros-kinetic-joint-state-controller
    Name: run
    PrependShell: true
  - CmdLine:
    - cd &&     mkdir src &&     cd src &&     git clone https://github.com/udacity/RoboND-Kinematics-Project
      &&     cd .. &&     rosdep install --from-paths src --ignore-src --rosdistro=kinetic
      -y &&     rm -rf src
    Name: run
    PrependShell: true
  - CmdLine:
    - cd &&     mkdir src &&     cd src &&     git clone https://github.com/udacity/RoboND-Perception-Project
      &&     cd .. &&     rosdep install --from-paths src --ignore-src --rosdistro=kinetic
      -y &&     rm -rf src
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c "source ${conda_remove} &&              cd &&              pip install
      cython &&              git clone https://github.com/udacity/RoboND-Perception-Exercises
      &&              cd RoboND-Perception-Exercises/python-pcl &&              python
      setup.py build &&              sudo python setup.py install &&              sudo
      apt-get install pcl-tools &&              cd - &&              rosdep install
      --from-paths RoboND-Perception-Exercises/Exercise-2 --ignore-src --rosdistro=kinetic
      -y &&              rosdep install --from-paths RoboND-Perception-Exercises/Exercise-3
      --ignore-src --rosdistro=kinetic -y &&              sudo rm -r RoboND-Perception-Exercises"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd &&     mkdir src &&     cd src &&     git clone https://github.com/turtlebot/turtlebot_simulator
      &&     git clone https://github.com/turtlebot/turtlebot &&     cd .. &&     rosdep
      install --from-paths src --ignore-src --rosdistro=kinetic -y &&     rm -rf src
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y ros-kinetic-rqt ros-kinetic-rqt-multiplot libqwt-dev
      &&     rm -f ~/.config/ros.org/rqt_gui.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get clean -y &&     sudo apt-get autoremove -y &&     sudo rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "%s\n"            ""            "export GAZEBO_MODEL_PATH=~/catkin_ws/src/RoboND-Kinematics-Project/kuka_arm/models:\$GAZEBO_MODEL_PATH"            "export
      GAZEBO_MODEL_PATH=~/catkin_ws/src/RoboND-Perception-Project/pr2_robot/models:\$GAZEBO_MODEL_PATH"            "export
      GAZEBO_MODEL_PATH=~/catkin_ws/src/sensor_stick/models:\$GAZEBO_MODEL_PATH" >>
      ~/.bashrc
    Name: run
    PrependShell: true
  From:
    Image: yrahal/dev-machine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM yrahal/dev-machine:latest
