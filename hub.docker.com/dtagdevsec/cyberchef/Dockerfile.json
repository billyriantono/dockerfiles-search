{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "CmdLine": [
            "sed -i 's/dl-cdn/dl-2/g' /etc/apk/repositories \u0026\u0026     apk -U --no-cache add             curl             git             npm             nodejs \u0026\u0026     npm install -g grunt-cli \u0026\u0026     npm install -g http-server \u0026\u0026     npm install npm@latest -g \u0026\u0026     cd /root \u0026\u0026     git clone https://github.com/gchq/cyberchef --depth=1 \u0026\u0026     chown -R nobody:nobody cyberchef \u0026\u0026     cd cyberchef \u0026\u0026     npm install \u0026\u0026     grunt prod \u0026\u0026     mkdir -p /opt/cyberchef \u0026\u0026     mv build/prod/* /opt/cyberchef \u0026\u0026     cd / \u0026\u0026     apk del --purge git                     npm \u0026\u0026     rm -rf /root/* \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Health": {
            "Retries": 10,
            "Test": [
              "CMD-SHELL",
              "curl -s -XGET 'http://127.0.0.1:8000'"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "Name": "user",
          "User": "nobody:nobody"
        },
        {
          "Name": "workdir",
          "Path": "/opt/cyberchef"
        },
        {
          "CmdLine": [
            "http-server",
            "-p",
            "8000"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}