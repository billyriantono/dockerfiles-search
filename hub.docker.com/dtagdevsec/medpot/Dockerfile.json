{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk -U --no-cache add                    build-base                    git                    go                    g++ \u0026\u0026     export GOPATH=/opt/go/ \u0026\u0026     mkdir -p /opt/go/src \u0026\u0026     cd /opt/go/src \u0026\u0026     git clone https://github.com/schmalle/medpot \u0026\u0026     go get -d -v github.com/davecgh/go-spew/spew \u0026\u0026     go get -d -v github.com/go-ini/ini \u0026\u0026     go get -d -v github.com/mozillazg/request \u0026\u0026     go get -d -v go.uber.org/zap \u0026\u0026     cd medpot \u0026\u0026     cp dist/etc/ews.cfg /etc/ \u0026\u0026     go build medpot \u0026\u0026     mkdir -p /opt/medpot              /var/log/medpot \u0026\u0026     cp medpot /opt/medpot \u0026\u0026     cp /opt/go/src/medpot/template/*.xml /opt/medpot/ \u0026\u0026     addgroup -g 2000 medpot \u0026\u0026     adduser -S -s /bin/ash -u 2000 -D -g 2000 medpot \u0026\u0026     chown -R medpot:medpot /var/log/medpot \u0026\u0026     apk del --purge build-base                     git                     go                     g++ \u0026\u0026     rm -rf /var/cache/apk/*            /opt/go            /root/dist"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/medpot"
        },
        {
          "Name": "user",
          "User": "medpot:medpot"
        },
        {
          "CmdLine": [
            "./medpot"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}