MetaArgs: null
Stages:
- BaseName: debian@sha256:316ebb92ca66bb8ddc79249fb29872bece4be384cb61b5344fac4e84ca4ed2b2
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: CODENAME
    Name: arg
    Value: '"stretch"'
  - Key: CONDA_VERSION
    Name: arg
    Value: '"4.5.1"'
  - Key: CONDA_DIR
    Name: arg
    Value: '"/opt/conda"'
  - Key: CONDA_INSTALLER
    Name: arg
    Value: '"Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh"'
  - Key: CONDA_MD5
    Name: arg
    Value: '"0c28787e3126238df24c5d4858bd0744"'
  - Key: CONDA_URL
    Name: arg
    Value: '"https://repo.continuum.io/miniconda"'
  - Key: DISTRO
    Name: arg
    Value: '"debian"'
  - Key: DEBCONF_NONINTERACTIVE_SEEN
    Name: arg
    Value: '"true"'
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: '"noninteractive"'
  - Key: GPG_KEYSERVER
    Name: arg
    Value: '"hkps://zimmermann.mayfirst.org"'
  - Key: HOME
    Name: arg
    Value: /root
  - Key: LANG
    Name: arg
    Value: '"en_US.UTF-8"'
  - Key: LANGUAGE
    Name: arg
    Value: '"en_US.UTF-8"'
  - Key: LC_ALL
    Name: arg
    Value: '"en_US.UTF-8"'
  - Key: REPO
    Name: arg
    Value: '"http://cdn-fastly.deb.debian.org"'
  - Key: TINI_GPG_KEY
    Name: arg
    Value: '"6380DC428747F6C393FEACA59A84159D7001A4E5"'
  - Key: TINI_URL
    Name: arg
    Value: '"https://github.com/krallin/tini/releases/download"'
  - Key: TINI_VERSION
    Name: arg
    Value: '"v0.18.0"'
  - Key: VCS_REF
    Name: arg
    Value: null
  - Labels:
    - Key: maintainer
      Value: '"Vishnu Mohan <vishnu@mesosphere.com>"'
    - Key: org.label-schema.build-date
      Value: '"${BUILD_DATE}"'
    - Key: org.label-schema.name
      Value: '"Miniconda"'
    - Key: org.label-schema.description
      Value: '"A mini version of Anaconda that includes just conda, its dependencies
        and Python"'
    - Key: org.label-schema.url
      Value: '"https://conda.io"'
    - Key: org.label-schema.vcs-ref
      Value: '"${VCS_REF}"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/vishnu2kmohan/miniconda3-docker"'
    - Key: org.label-schema.version
      Value: '"${CONDA_VERSION}"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Env:
    - Key: CODENAME
      Value: ${CODENAME:-"stretch"}
    - Key: CONDA_DIR
      Value: ${CONDA_DIR:-"/opt/conda"}
    - Key: DEBCONF_NONINTERACTIVE_SEEN
      Value: ${DEBCONF_NONINTERACTIVE_SEEN:-"true"}
    - Key: DEBIAN_FRONTEND
      Value: ${DEBIAN_FRONTEND:-"noninteractive"}
    - Key: DISTRO
      Value: ${DISTRO:-"debian"}
    - Key: GPG_KEYSERVER
      Value: ${GPG_KEYSERVER:-"hkps://zimmermann.mayfirst.org"}
    - Key: HOME
      Value: ${HOME:-"/root"}
    - Key: LANG
      Value: ${LANG:-"en_US.UTF-8"}
    - Key: LANGUAGE
      Value: ${LANGUAGE:-"en_US.UTF-8"}
    - Key: LC_ALL
      Value: ${LC_ALL:-"en_US.UTF-8"}
    - Key: PATH
      Value: '"${CONDA_DIR}/bin:${PATH}"'
    - Key: SHELL
      Value: '"/bin/bash"'
    Name: env
  - CmdLine:
    - echo "deb ${REPO}/${DISTRO} ${CODENAME} main"          >> /etc/apt/sources.list     echo
      "deb ${REPO}/${DISTRO}-security ${CODENAME}/updates main"          >> /etc/apt/sources.list     &&
      apt-get update -yq --fix-missing     && apt-get install -yq --no-install-recommends
      locales     && echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen     && locale-gen     &&
      apt-get install -yq --no-install-recommends apt-utils     && apt-get -yq dist-upgrade     &&
      apt-get install -yq --no-install-recommends        bash-completion        bzip2        ca-certificates        curl        dirmngr        git        gnupg        jq        less        openssh-client        procps        rsync        sudo        unzip        vim        wget     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/*     && usermod -u 99 nobody     &&
      addgroup --gid 99 nobody     && usermod -g nobody nobody     && echo "nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin"
      >> /etc/passwd
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp     && apt-key adv --keyserver "${GPG_KEYSERVER}" --recv-keys "${TINI_GPG_KEY}"     &&
      curl --retry 3 -fsSL "${TINI_URL}/${TINI_VERSION}/tini" -o /usr/bin/tini     &&
      curl --retry 3 -fsSL -O "${TINI_URL}/${TINI_VERSION}/tini.asc"     && export
      GNUPGHOME="$(mktemp -d)"     && gpg --keyserver "${GPG_KEYSERVER}" --recv-keys
      "${TINI_GPG_KEY}"     && gpg --batch --verify tini.asc /usr/bin/tini     &&
      rm -rf "${GNUPGHOME}" tini.asc     && chmod +x /usr/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp     && curl --retry 3 -fsSL -O "${CONDA_URL}/${CONDA_INSTALLER}"     &&
      echo "${CONDA_MD5}  ${CONDA_INSTALLER}" | md5sum -c -     && bash "./${CONDA_INSTALLER}"
      -u -b -p "${CONDA_DIR}"     && ${CONDA_DIR}/bin/conda config --system --prepend
      channels conda-forge     && ${CONDA_DIR}/bin/conda config --system --set auto_update_conda
      false     && ${CONDA_DIR}/bin/conda config --system --set show_channel_urls
      true     && ${CONDA_DIR}/bin/conda update --json --all -yq     && ${CONDA_DIR}/bin/conda
      clean --json -tipsy     && rm -rf "${HOME}/.cache/pip" "/tmp/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - profile
    - '"/root/.profile"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bash_profile
    - '"/root/.bash_profile"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bashrc
    - '"/root/.bashrc"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dircolors
    - '"/root/.dircolors"'
  From:
    Image: debian@sha256:316ebb92ca66bb8ddc79249fb29872bece4be384cb61b5344fac4e84ca4ed2b2
  Name: ""
  Platform: ""
  SourceCode: FROM debian@sha256:316ebb92ca66bb8ddc79249fb29872bece4be384cb61b5344fac4e84ca4ed2b2
