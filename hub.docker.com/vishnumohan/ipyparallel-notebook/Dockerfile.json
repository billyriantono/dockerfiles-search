{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "vishnumohan/jupyter-notebook",
      "SourceCode": "FROM vishnumohan/jupyter-notebook",
      "Platform": "",
      "From": {
        "Image": "vishnumohan/jupyter-notebook"
      },
      "Commands": [
        {
          "Maintainer": "Vishnu Mohan \u003cvishnu@mesosphere.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF     \u0026\u0026 DISTRO=debian     \u0026\u0026 CODENAME=jessie     \u0026\u0026 echo \"deb http://repos.mesosphere.io/${DISTRO} ${CODENAME} main\"        \u003e /etc/apt/sources.list.d/mesosphere.list     \u0026\u0026 apt-get update -yq --fix-missing     \u0026\u0026 apt-get install -yq --no-install-recommends        openjdk-7-jre-headless        mesos     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "conda"
        },
        {
          "CmdLine": [
            "conda config --add channels anaconda-cluster     \u0026\u0026 conda create -yq -n py34 python=3.4 anaconda     \u0026\u0026 conda install -yq -c anaconda-cluster -n py34        py4j        scala        spark     \u0026\u0026 conda install -yq -n py34        cloudpickle        ipyparallel        seaborn     \u0026\u0026 conda clean -yt     \u0026\u0026 conda clean -yp     \u0026\u0026 bash -c 'source activate py34 \u0026\u0026 pip install -q -U httpie hdfs pywebhdfs'     \u0026\u0026 bash -c 'source activate py34 \u0026\u0026 ipython profile create --parallel'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${CONDA_USER_HOME}/work"
        },
        {
          "CmdLine": [
            "tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "notebook.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "notebook.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "${CONDA_USER_HOME}/.jupyter/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "upload_ctrl_conf_hdfs.py",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "download_ctrl_conf_hdfs.py",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ipcontroller_config.py",
            "${CONDA_USER_HOME}/.ipython/profile_default/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ipengine_config.py",
            "${CONDA_USER_HOME}/.ipython/profile_default/"
          ]
        }
      ]
    }
  ]
}