MetaArgs: null
Stages:
- BaseName: ros:kinetic-ros-base
  Commands:
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - CmdLine:
    - "apt-get update &&     apt-get install -y         bash-completion         bc
      \        capnproto         curl         ffmpeg         iputils-ping         jq
      \        less         libcapnp-dev \tlibffi-dev \tlibfreetype6-dev         libjpeg-dev
      \tlibpng-dev         libssl-dev         libz-dev         locales         lsof
      \        man         python-cv-bridge         python2.7-dev         python-opencv
      \        python-pip         ros-kinetic-laser-geometry         rsync         sqlite3
      \        ssh         unzip         vim     && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U pip==19.0.3 pip-tools==3.6.0 setuptools==41.0.0 virtualenv==16.4.3
      wheel==0.33.1
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8; dpkg-reconfigure -f noninteractive locales
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Key: MARV_UID
    Name: arg
    Value: "1000"
  - Key: MARV_GID
    Name: arg
    Value: "1000"
  - CmdLine:
    - groupadd -g $MARV_GID marv &&     useradd -m -u $MARV_UID -g $MARV_GID --shell
      /bin/bash marv
    Name: run
    PrependShell: true
  - Key: venv
    Name: arg
    Value: /opt/marv
  - Env:
    - Key: MARV_VENV
      Value: $venv
    Name: env
  - CmdLine:
    - bash -c 'if [[ -n "$MARV_VENV" ]]; then     mkdir $MARV_VENV;     chown marv:marv
      $MARV_VENV; fi'
    Name: run
    PrependShell: true
  - Name: user
    User: marv
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements/*
    - /requirements/
  - CmdLine:
    - 'bash -c ''if [[ -n "$MARV_VENV" ]]; then     virtualenv -p python2.7 --system-site-packages
      $MARV_VENV;     $MARV_VENV/bin/pip install -U pip==19.0.3 setuptools==41.0.0
      wheel==0.33.1;     $MARV_VENV/bin/pip install -U -r /requirements/marv-robotics.txt;     $MARV_VENV/bin/pip
      install -U -r /requirements/develop.txt;     $MARV_VENV/bin/pip install -U --force-reinstall
      --no-binary :all: uwsgi;     sed -e "s|^backend .*|backend : Agg|"         -i
      $MARV_VENV/lib/python2.7/site-packages/matplotlib/mpl-data/matplotlibrc; fi'''
    Name: run
    PrependShell: true
  - Key: code
    Name: arg
    Value: code
  - Chown: marv:marv
    From: ""
    Name: copy
    SourcesAndDest:
    - ${code:-CHANGES.rst}
    - /home/marv/code
  - CmdLine:
    - bash -c 'if [[ -z "$code" ]]; then     rm /home/marv/code; fi'
    Name: run
    PrependShell: true
  - Key: docs
    Name: arg
    Value: docs
  - Chown: marv:marv
    From: ""
    Name: copy
    SourcesAndDest:
    - CHANGES.rst
    - /home/marv/CHANGES.rst
  - Chown: marv:marv
    From: ""
    Name: copy
    SourcesAndDest:
    - tutorial
    - /home/marv/tutorial
  - Chown: marv:marv
    From: ""
    Name: copy
    SourcesAndDest:
    - ${docs:-CHANGES.rst}
    - /home/marv/docs
  - CmdLine:
    - bash -c 'if [[ -z "$docs" ]]; then     rm -r /home/marv/docs /home/marv/CHANGES.rst
      /home/marv/tutorial; fi'
    Name: run
    PrependShell: true
  - Key: scripts
    Name: arg
    Value: scripts
  - Chown: marv:marv
    From: ""
    Name: copy
    SourcesAndDest:
    - ${scripts:-CHANGES.rst}
    - /home/marv/scripts
  - CmdLine:
    - bash -c 'if [[ -z "$scripts" ]]; then     rm /home/marv/scripts; fi'
    Name: run
    PrependShell: true
  - Key: version
    Name: arg
    Value: ""
  - Key: pypi_install_args
    Name: arg
    Value: ""
  - CmdLine:
    - bash -c 'if [[ -n "$MARV_VENV" ]]; then     if [[ -z "$code" ]]; then         ${MARV_VENV}/bin/pip
      install ${pypi_install_args} marv-robotics${version:+==${version}};     else         find
      /home/marv/code -maxdepth 2 -name setup.py -execdir ${MARV_VENV}/bin/pip install
      --no-deps . \; ;        ${MARV_VENV}/bin/pip install /home/marv/code/marv-robotics;         (source
      "/opt/ros/$ROS_DISTRO/setup.bash"; source $MARV_VENV/bin/activate; /home/marv/scripts/build-docs);         ${MARV_VENV}/bin/pip
      install -U --no-deps /home/marv/code/marv-robotics;     fi fi'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .docker/entrypoint.sh
    - /marv_entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .docker/env.sh
    - /etc/profile.d/marv_env.sh
  - CmdLine:
    - echo 'source /etc/profile.d/marv_env.sh' >> /etc/bash.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: ACTIVATE_VENV
      Value: "1"
    Name: env
  - CmdLine:
    - /marv_entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /opt/marv/bin/uwsgi
    - --die-on-term
    - --strict
    - --uid
    - marv
    - --gid
    - marv
    - --ini
    - uwsgi.conf
    Name: cmd
    PrependShell: false
  From:
    Image: ros:kinetic-ros-base
  Name: ""
  Platform: ""
  SourceCode: FROM ros:kinetic-ros-base
