MetaArgs: null
Stages:
- As: node
  BaseName: node:alpine
  Commands:
  - CmdLine:
    - mkdir -p /usr/src/app/dashboard/static
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - package-lock.json
    - .eslintrc
    - /usr/src/app/
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - webpack.config.js
    - /usr/src/app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - uisrc
    - /usr/src/app/uisrc/
  - CmdLine:
    - npm run build
    Name: run
    PrependShell: true
  From:
    Image: node:alpine
  Name: node
  Platform: ""
  SourceCode: from node:alpine as node
- BaseName: python:2.7-alpine
  Commands:
  - CmdLine:
    - mkdir -p /usr/src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - Env:
    - Key: PHANTOMJS_ARCHIVE
      Value: '"phantomjs.tar.gz"'
    Name: env
  - CmdLine:
    - "apk add --no-cache curl bzip2 postgresql-dev postgresql-dev gcc musl-dev linux-headers
      \    && curl -Lk -o $PHANTOMJS_ARCHIVE https://github.com/fgrehm/docker-phantomjs2/releases/download/v2.0.0-20150722/dockerized-phantomjs.tar.gz
      \t&& tar -xf $PHANTOMJS_ARCHIVE -C /tmp/ \t&& cp -R /tmp/etc/fonts /etc/ \t&&
      cp -R /tmp/lib/* /lib/ \t&& cp -R /tmp/lib64 / \t&& cp -R /tmp/usr/lib/* /usr/lib/
      \t&& cp -R /tmp/usr/lib/x86_64-linux-gnu /usr/ \t&& cp -R /tmp/usr/share/* /usr/share/
      \t&& cp /tmp/usr/local/bin/phantomjs /usr/bin/ \t&& rm -fr $PHANTOMJS_ARCHIVE
      \ /tmp/* \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /usr/src/app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements
    - /usr/src/app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements/*.txt
    - /usr/src/app/requirements/
  - CmdLine:
    - pip install --no-cache-dir -r requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /usr/src/app
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /usr/src/app/dashboard/static
    - /usr/src/app/dashboard/static/
  - CmdLine:
    - python manage.py collectstatic --no-input
    Name: run
    PrependShell: true
  From:
    Image: python:2.7-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:2.7-alpine
