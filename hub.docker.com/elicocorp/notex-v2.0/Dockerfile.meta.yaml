MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: Hasan Karahan <hasan.karahan@blackhan.com>
    Name: maintainer
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get -y install build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install git
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install zip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install zlibc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install nano
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install tree
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.name "NoTex.ch"
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.email "contact@blackhan.com"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O jdk-7u55-linux-x64.tar.gz https://db.tt/d8AltmDK
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xvf *-linux-x64.tar.gz && mkdir -p /usr/lib/jvm
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ./jdk1.7.0_55 /usr/lib/jvm/jdk1.7.0 && mv *.tar.gz /root/
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install "/usr/bin/java" "java" "/usr/lib/jvm/jdk1.7.0/bin/java"
      1
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install "/usr/bin/javac" "javac" "/usr/lib/jvm/jdk1.7.0/bin/javac"
      1
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/lib/jvm/jdk1.7.0/bin/javaws"
      1
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x /usr/bin/java /usr/bin/javac /usr/bin/javaws
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R root:root /usr/lib/jvm/jdk1.7.0
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install ruby
    Name: run
    PrependShell: true
  - Env:
    - Key: SENCHA_CMD_x32
      Value: http://cdn.sencha.com/cmd/3.0.2.288/SenchaCmd-3.0.2.288-linux.run.zip
    Name: env
  - Env:
    - Key: SENCHA_CMD_x64
      Value: http://cdn.sencha.com/cmd/3.0.2.288/SenchaCmd-3.0.2.288-linux-x64.run.zip
    Name: env
  - CmdLine:
    - wget -O 3.0.2.288-linux-x64.run.zip $SENCHA_CMD_x64
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip *.run.zip && rm *.run.zip && chmod +x *.run
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/Sencha/Cmd && mv *.run /opt/Sencha/Cmd
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/Sencha/Cmd/SenchaCmd-3.0.2.288-linux-x64.run --prefix /opt --mode unattended
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/Sencha/Cmd/3.0.2.288:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - apt-get -y install memcached
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libmemcached-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install redis-server
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install postgresql postgresql-server-dev-9.3
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install python2.7 python2.7-dev python-sphinx
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install python-pip && pip install virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/sphinx-build /usr/bin/sphinx-build2
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y autoclean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y autoremove
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install texlive-full
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install ttf-*
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/hsk81/notex /srv/notex.git &&     cd /srv/notex.git
      && git checkout master &&     git submodule update --init --recursive &&     git
      checkout $(git tag | tail -n1) &&     git checkout -b tag-$(git tag | tail -n1)
    Name: run
    PrependShell: true
  - CmdLine:
    - /etc/init.d/postgresql start ; cd /srv/notex.git &&     sudo -u postgres -g
      postgres psql -f webed/config/pg.sql &&     sudo -u postgres -g postgres psql
      -f webed/config/test.sql &&     sudo -u postgres -g postgres psql -f webed/config/production.sql
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /srv/notex.git &&     /bin/bash -c './setup.sh && source bin/activate &&
      ./setup.py install' &&     /bin/bash -c 'mkdir -p .python-eggs'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/webed
    Name: run
    PrependShell: true
  - CmdLine:
    - chown www-data:www-data /var/www/webed -R
    Name: run
    PrependShell: true
  - CmdLine:
    - chown www-data:www-data /srv/notex.git -R
    Name: run
    PrependShell: true
  - CmdLine:
    - /etc/init.d/memcached restart &&     /etc/init.d/redis-server restart &&     /etc/init.d/postgresql
      restart &&         cd /srv/notex.git && /bin/bash -c 'source bin/activate &&         /usr/bin/sudo
      -u www-data -g www-data PYTHON_EGG_CACHE=.python-eggs             WEBED_SETTINGS=/srv/notex.git/webed/config/production.py
      ./webed.py reset'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install lighttpd
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install highlight
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /etc/nginx/sites-enabled/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /etc/nginx/conf.d/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /srv/notex.git && /bin/bash -c 'source bin/activate &&         /usr/bin/sudo
      -u www-data -g www-data PYTHON_EGG_CACHE=.python-eggs             WEBED_SETTINGS=/srv/notex.git/webed/config/production.py
      ./webed.py assets build'
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /srv/notex.git && /bin/bash -c 'source bin/activate &&         /usr/bin/sudo
      -u www-data -g www-data PYTHON_EGG_CACHE=.python-eggs             WEBED_SETTINGS=/srv/notex.git/webed/config/production.py
      ./webed.py assets-gzip'
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /srv/notex.git && echo '#!/bin/bash\nif [[ $@ =~ NGINX=(1|true) ]] ; then
      /etc/init.d/nginx restart 2> /dev/null ; fi\nif [[ $@ =~ LIGHTTPD=(1|true) ]]
      ; then /etc/init.d/lighttpd restart 2> /dev/null ; fi\nif [[ $@ =~ REDIS=(1|true)
      ]] ; then /etc/init.d/redis-server restart 2> /dev/null ; fi\nif [[ $@ =~ MEMCACHED=(1|true)
      ]] ; then /etc/init.d/memcached restart 2> /dev/null ; fi\nif [[ $@ =~ POSTGRESQL=(1|true)
      ]] ; then /etc/init.d/postgresql restart 2> /dev/null ; fi\nif [[ $@ =~ GITDAEMON=(1|true)
      ]] ; then /bin/sh -e /etc/rc.local 2> /dev/null ; fi\n\ncd /srv/notex.git &&
      CMD=$@ && /usr/bin/sudo -u www-data -g www-data     /bin/bash -c "source bin/activate
      && PYTHON_EGG_CACHE=.python-eggs         WEBED_SETTINGS=/srv/notex.git/webed/config/production.py
      $CMD"\n' > webed.run && chmod +x webed.run
    Name: run
    PrependShell: true
  - CmdLine:
    - /srv/notex.git/webed.run
    Name: entrypoint
    PrependShell: false
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - webed.conf
    - /etc/nginx/conf.d/webed.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - robots.txt
    - /etc/nginx/conf.d/robots.txt
  - Chown: ""
    Name: add
    SourcesAndDest:
    - lighttpd.conf
    - /etc/lighttpd/lighttpd.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - gitweb.conf
    - /etc/gitweb.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - rc.local
    - /etc/rc.local
  - Chown: ""
    Name: add
    SourcesAndDest:
    - webed/config/default.py
    - /srv/notex.git/webed/config/default.py
  - Chown: ""
    Name: add
    SourcesAndDest:
    - webed/config/production.py
    - /srv/notex.git/webed/config/production.py
  - Chown: ""
    Name: add
    SourcesAndDest:
    - webed/config/sphinx.py
    - /srv/notex.git/webed/config/sphinx.py
  - Chown: ""
    Name: add
    SourcesAndDest:
    - webed/config/test.py
    - /srv/notex.git/webed/config/test.py
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
