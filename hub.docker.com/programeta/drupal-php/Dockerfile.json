{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "drupal:8-apache",
      "SourceCode": "FROM drupal:8-apache",
      "Platform": "",
      "From": {
        "Image": "drupal:8-apache"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DRUSH_LAUNCHER_VER",
              "Value": "\"0.6.0\""
            },
            {
              "Key": "DRUPAL_CONSOLE_LAUNCHER_VER",
              "Value": "\"1.9.3\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update;   apt-get install -y net-tools             git             unzip             wget             mariadb-client             libphp-predis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     cd ~ \u0026\u0026     curl -sS https://getcomposer.org/installer -o composer-setup.php \u0026\u0026     php composer-setup.php --install-dir=/usr/local/bin --filename=composer \u0026\u0026     drush_launcher_url=\"https://github.com/drush-ops/drush-launcher/releases/download/${DRUSH_LAUNCHER_VER}/drush.phar\" \u0026\u0026     wget -O drush.phar \"${drush_launcher_url}\" \u0026\u0026     chmod +x drush.phar \u0026\u0026     mv drush.phar /usr/local/bin/drush \u0026\u0026     drush_patchfile_url=\"https://bitbucket.org/davereid/drush-patchfile.git\" \u0026\u0026     git clone \"${drush_patchfile_url}\" /root/.drush/drush-patchfile \u0026\u0026     drush_rr_url=\"https://ftp.drupal.org/files/projects/registry_rebuild-7.x-2.5.tar.gz\" \u0026\u0026     wget -qO- \"${drush_rr_url}\" | tar zx -C /root/.drush \u0026\u0026     console_url=\"https://github.com/hechoendrupal/drupal-console-launcher/releases/download/${DRUPAL_CONSOLE_LAUNCHER_VER}/drupal.phar\" \u0026\u0026     curl \"${console_url}\" -L -o drupal.phar \u0026\u0026     mv drupal.phar /usr/local/bin/drupal \u0026\u0026     chmod +x /usr/local/bin/drupal \u0026\u0026     cd /tmp \u0026\u0026     wget https://github.com/phpredis/phpredis/archive/master.zip -O phpredis.zip \u0026\u0026     unzip -o /tmp/phpredis.zip \u0026\u0026 mv /tmp/phpredis-* /tmp/phpredis \u0026\u0026 cd /tmp/phpredis \u0026\u0026 phpize \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026     touch /usr/local/etc/php/conf.d/redis.ini \u0026\u0026 echo extension=redis.so \u003e /usr/local/etc/php/conf.d/redis.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y vim             openssh-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash -     \u0026\u0026 apt-get install -y apt-utils nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/apache/ssl/localhost.crt",
            "/etc/ssl/certs/apache-selfsigned.crt"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/apache/ssl/localhost.key",
            "/etc/ssl/private/apache-selfsigned.key"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/apache/ssl/ssl-params.conf",
            "/etc/apache2/conf-available/ssl-params.conf"
          ]
        },
        {
          "CmdLine": [
            "a2enmod ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{         echo '';   } \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{         echo '';   } \u003e /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug-2.7.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd docker -m -s /bin/bash   \u0026\u0026 echo docker:docker | chpasswd   \u0026\u0026 echo 'export PS1=\"\\u@${APP_NAME:-php}.${ENVIRONMENT_NAME:-container}:\\w $ \"' \u003e /home/docker/.bashrc   \u0026\u0026 echo 'cd /var/www/html' \u003e\u003e /home/docker/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/php/php.ini",
            "/usr/local/etc/php/conf.d/php_extended.ini"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        }
      ]
    }
  ]
}