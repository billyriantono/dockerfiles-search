{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "compiler",
      "BaseName": "golang:1.10",
      "SourceCode": "FROM golang:1.10 AS compiler",
      "Platform": "",
      "As": "compiler",
      "From": {
        "Image": "golang:1.10"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/go/src/github.com/CyrusBiotechnology/argo-rest"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vendor/",
            "/go/src/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "pkg",
            "./pkg"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "server",
            "./server"
          ]
        },
        {
          "CmdLine": [
            "CGO_ENABLED=0 GOOS=linux     go build -a -ldflags '-extldflags \"-static\"'     -o /go/bin/argo-rest-server ./server"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "ui",
      "BaseName": "node:8",
      "SourceCode": "FROM node:8 AS ui",
      "Platform": "",
      "As": "ui",
      "From": {
        "Image": "node:8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "development"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ui",
            "./ui"
          ]
        },
        {
          "Name": "workdir",
          "Path": "./ui"
        },
        {
          "CmdLine": [
            "npm install git://github.com/substack/node-mkdirp.git     \u0026\u0026  npm install --only=dev     \u0026\u0026 npm install -g sass react-scripts-ts typescript react"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sass src/App.scss src/App.css     \u0026\u0026 sass src/Header.scss src/Header.css     \u0026\u0026 sass src/Status.scss src/Status.css     \u0026\u0026 sass src/WorkflowViewer/WorkflowViewer.scss src/WorkflowViewer/WorkflowViewer.css"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm run build"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "centos",
      "SourceCode": "FROM centos",
      "Platform": "",
      "From": {
        "Image": "centos"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "compiler",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/bin/argo-rest-server",
            "/argo-rest-server"
          ]
        },
        {
          "Chown": "",
          "From": "ui",
          "Name": "copy",
          "SourcesAndDest": [
            "/ui/build",
            "/react-ui"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "./argo-rest-server"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}