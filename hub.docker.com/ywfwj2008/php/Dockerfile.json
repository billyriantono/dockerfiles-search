{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ywfwj2008/dependent:latest",
      "SourceCode": "FROM ywfwj2008/dependent:latest",
      "Platform": "",
      "From": {
        "Image": "ywfwj2008/dependent:latest"
      },
      "Commands": [
        {
          "Maintainer": "ywfwj2008 \u003cywfwj2008@163.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PHP_INSTALL_DIR",
              "Value": "/usr/local/php"
            },
            {
              "Key": "PHP_VERSION",
              "Value": "7.0.21"
            },
            {
              "Key": "IMAGICK_PECL_VERSION",
              "Value": "3.4.3"
            },
            {
              "Key": "LIBMEMCACHED_VERSION",
              "Value": "1.0.18"
            },
            {
              "Key": "MEMCACHED_PECL_VERSION",
              "Value": "3.0.3"
            },
            {
              "Key": "EVENT_VERSION",
              "Value": "2.3.0"
            },
            {
              "Key": "SWOOLE_VERSION",
              "Value": "2.0.7"
            },
            {
              "Key": "REMOTE_PATH",
              "Value": "https://github.com/ywfwj2008/docker-php/raw/master"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "wget -c --no-check-certificate http://www.php.net/distributions/php-$PHP_VERSION.tar.gz \u0026\u0026     tar xzf php-$PHP_VERSION.tar.gz \u0026\u0026     cd php-$PHP_VERSION \u0026\u0026     ./buildconf --force \u0026\u0026     ./configure --prefix=$PHP_INSTALL_DIR --with-config-file-path=$PHP_INSTALL_DIR/etc         --with-config-file-scan-dir=$PHP_INSTALL_DIR/etc/php.d         --with-fpm-user=$RUN_USER --with-fpm-group=$RUN_USER --enable-fpm --enable-opcache         --enable-mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd         --with-iconv-dir=/usr/local --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib         --with-libxml-dir=/usr --enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-exif         --enable-sysvsem --enable-inline-optimization --with-curl=/usr/local --enable-mbregex         --enable-mbstring --with-mcrypt --with-gd --enable-gd-native-ttf --with-openssl         --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-ftp --enable-intl --with-xsl         --with-gettext --enable-zip --enable-soap --disable-debug \u0026\u0026     make ZEND_EXTRA_LIBS='-liconv' \u0026\u0026     make install \u0026\u0026     mkdir -p $PHP_INSTALL_DIR/etc/php.d \u0026\u0026     /bin/cp php.ini-production $PHP_INSTALL_DIR/etc/php.ini \u0026\u0026     /bin/cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm \u0026\u0026     chmod +x /etc/init.d/php-fpm \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c --no-check-certificate http://www.imagemagick.org/download/ImageMagick.tar.gz \u0026\u0026     tar xzf ImageMagick.tar.gz \u0026\u0026     cd ImageMagick* \u0026\u0026     ./configure --prefix=/usr/local/imagemagick --enable-shared --enable-static \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     cd .. \u0026\u0026     wget -c --no-check-certificate http://pecl.php.net/get/imagick-$IMAGICK_PECL_VERSION.tgz \u0026\u0026     tar xzf imagick-$IMAGICK_PECL_VERSION.tgz \u0026\u0026     cd imagick-$IMAGICK_PECL_VERSION \u0026\u0026     export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig \u0026\u0026     $PHP_INSTALL_DIR/bin/phpize \u0026\u0026     ./configure --with-php-config=$PHP_INSTALL_DIR/bin/php-config --with-imagick=/usr/local/imagemagick \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     echo \"extension=imagick.so\" \u003e $PHP_INSTALL_DIR/etc/php.d/ext-imagick.ini \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c --no-check-certificate http://mirrors.linuxeye.com/oneinstack/src/pecl-memcache-php7.tgz \u0026\u0026     tar xzf pecl-memcache-php7.tgz \u0026\u0026     cd pecl-memcache-php7 \u0026\u0026     $PHP_INSTALL_DIR/bin/phpize \u0026\u0026     ./configure --with-php-config=$PHP_INSTALL_DIR/bin/php-config \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     echo \"extension=memcache.so\" \u003e $PHP_INSTALL_DIR/etc/php.d/ext-memcache.ini \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c --no-check-certificate https://launchpad.net/libmemcached/1.0/$LIBMEMCACHED_VERSION/+download/libmemcached-$LIBMEMCACHED_VERSION.tar.gz \u0026\u0026     tar xzf libmemcached-$LIBMEMCACHED_VERSION.tar.gz \u0026\u0026     cd libmemcached-$LIBMEMCACHED_VERSION \u0026\u0026     sed -i \"s@lthread -pthread -pthreads@lthread -lpthread -pthreads@\" ./configure \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     cd .. \u0026\u0026     wget -c --no-check-certificate http://pecl.php.net/get/memcached-$MEMCACHED_PECL_VERSION.tgz \u0026\u0026     tar xzf memcached-$MEMCACHED_PECL_VERSION.tgz \u0026\u0026     cd memcached-$MEMCACHED_PECL_VERSION \u0026\u0026     $PHP_INSTALL_DIR/bin/phpize \u0026\u0026     ./configure --with-php-config=$PHP_INSTALL_DIR/bin/php-config \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     echo \"extension=memcached.so\" \u003e\u003e $PHP_INSTALL_DIR/etc/php.d/ext-memcached.ini \u0026\u0026     echo \"memcached.use_sasl=1\" \u003e\u003e $PHP_INSTALL_DIR/etc/php.d/ext-memcached.ini \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$PHP_INSTALL_DIR/bin/pecl install redis \u0026\u0026     echo \"extension=redis.so\" \u003e $PHP_INSTALL_DIR/etc/php.d/ext-redis.ini \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c --no-check-certificate http://pecl.php.net/get/event-$EVENT_VERSION.tgz \u0026\u0026     tar xzf event-$EVENT_VERSION.tgz \u0026\u0026     cd event-$EVENT_VERSION \u0026\u0026     $PHP_INSTALL_DIR/bin/phpize \u0026\u0026     ./configure --with-php-config=$PHP_INSTALL_DIR/bin/php-config --with-event-openssl=no --enable-event-sockets --with-event-extra \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     echo \"extension=event.so\" \u003e $PHP_INSTALL_DIR/etc/php.d/ext-event.ini \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c --no-check-certificate https://github.com/swoole/swoole-src/archive/v$SWOOLE_VERSION.tar.gz \u0026\u0026     tar xzf v$SWOOLE_VERSION.tar.gz \u0026\u0026     cd swoole-src-$SWOOLE_VERSION \u0026\u0026     $PHP_INSTALL_DIR/bin/phpize \u0026\u0026     ./configure --with-php-config=$PHP_INSTALL_DIR/bin/php-config --enable-jemalloc \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     echo \"extension=swoole.so\" \u003e $PHP_INSTALL_DIR/etc/php.d/ext-swoole.ini \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "${REMOTE_PATH}/ext-opcache.ini",
            "$PHP_INSTALL_DIR/etc/php.d/ext-opcache.ini"
          ]
        },
        {
          "CmdLine": [
            "phpExtensionDir=$(${PHP_INSTALL_DIR}/bin/php-config --extension-dir) \u0026\u0026     wget -c http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz -P /tmp \u0026\u0026     tar xzf /tmp/ioncube_loaders_lin_x86-64.tar.gz \u0026\u0026     /bin/cp /tmp/ioncube/ioncube_loader_lin_7.0.so ${phpExtensionDir}/ioncube_loader.so \u0026\u0026     wget -c https://github.com/ywfwj2008/docker-php/raw/master/loaders.linux-x86_64.tar.gz -P /tmp \u0026\u0026     tar xzf /tmp/loaders.linux-x86_64.tar.gz \u0026\u0026     /bin/cp /tmp/ixed.7.0.lin ${phpExtensionDir}/ixed.lin \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "${REMOTE_PATH}/install.sh",
            "/tmp/install.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 install.sh \u0026\u0026     bash install.sh \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | $PHP_INSTALL_DIR/bin/php \u0026\u0026     mv composer.phar /usr/local/bin/composer \u0026\u0026     chmod a+x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "$REMOTE_PATH/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}