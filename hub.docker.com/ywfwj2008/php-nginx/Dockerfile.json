{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ywfwj2008/php:7.0",
      "SourceCode": "FROM ywfwj2008/php:7.0",
      "Platform": "",
      "From": {
        "Image": "ywfwj2008/php:7.0"
      },
      "Commands": [
        {
          "Maintainer": "ywfwj2008 \u003cywfwj2008@163.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "WEBSERVER_INSTALL_DIR",
              "Value": "/usr/local/nginx"
            },
            {
              "Key": "NGINX_VERSION",
              "Value": "1.12.0"
            },
            {
              "Key": "PCRE_VERSION",
              "Value": "8.40"
            },
            {
              "Key": "OPENSSL_VERSION",
              "Value": "1.0.2l"
            },
            {
              "Key": "RUN_USER",
              "Value": "www"
            },
            {
              "Key": "WWWROOT_DIR",
              "Value": "/home/wwwroot"
            },
            {
              "Key": "WWWLOGS_DIR",
              "Value": "/home/wwwlogs"
            },
            {
              "Key": "REMOTE_PATH",
              "Value": "https://github.com/ywfwj2008/docker-php-nginx/raw/master"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "wget -c --no-check-certificate ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${PCRE_VERSION}.tar.gz \u0026\u0026     wget -c --no-check-certificate https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \u0026\u0026     wget -c --no-check-certificate http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     tar xzf pcre-${PCRE_VERSION}.tar.gz \u0026\u0026     tar xzf openssl-${OPENSSL_VERSION}.tar.gz \u0026\u0026     tar xzf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     cd nginx-${NGINX_VERSION} \u0026\u0026     sed -i 's@CFLAGS=\"$CFLAGS -g\"@#CFLAGS=\"$CFLAGS -g\"@' auto/cc/gcc \u0026\u0026     ./configure         --prefix=${WEBSERVER_INSTALL_DIR}         --user=${RUN_USER} --group=${RUN_USER}         --with-http_stub_status_module         --with-http_v2_module         --with-http_ssl_module         --with-http_gzip_static_module         --with-http_realip_module         --with-http_flv_module         --with-http_mp4_module         --with-openssl=/tmp/openssl-${OPENSSL_VERSION}         --with-pcre=/tmp/pcre-${PCRE_VERSION}         --with-pcre-jit         --with-ld-opt='-ljemalloc' \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "${REMOTE_PATH}/install.sh",
            "/tmp/install.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 install.sh \u0026\u0026     bash install.sh \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${WWWROOT_DIR}"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "${REMOTE_PATH}/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}