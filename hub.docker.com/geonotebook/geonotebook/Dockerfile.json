{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y gcc g++ make curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libgeos-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O http://download.osgeo.org/gdal/2.1.3/gdal-2.1.3.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xzf gdal-2.1.3.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "gdal-2.1.3"
        },
        {
          "CmdLine": [
            "./configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make -j$(nproc)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y git                        ssh                        libffi-dev                        libssl-dev                        libproj-dev                        python-pip                        python-cffi                        python-lxml                        python-pil                        python-numpy                        python-scipy                        python-pandas                        python-matplotlib                        python-seaborn                        python-concurrent.futures                        cython                        python-scikits-learn                        python-scikits.statsmodels                        python-skimage-lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip2.7 install -U jupyter notebook                    mapnik                    pyproj                    ipywidgets                    scikit-image                    pyOpenSSL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension enable --py widgetsnbextension --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter-notebook --generate-config --allow-root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/#c.NotebookApp.token = '\u003cgenerated\u003e'/c.NotebookApp.token = ''/\" /root/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash     \u0026\u0026 . /root/.bashrc \u0026\u0026 nvm install v6.10.1 \u0026\u0026 ln -s /root/.nvm/versions/node/v6.10.1/bin/npm /usr/bin/npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip2.7 install https://github.com/OpenGeoscience/KTile/archive/master.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/opt/geonotebook"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./devops/docker/jupyter.sh",
            "/jupyter.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/geonotebook"
        },
        {
          "CmdLine": [
            ".  /root/.bashrc \u0026\u0026 pip2.7 install -U -r prerequirements.txt \u0026\u0026     pip2.7 install -U -r requirements.txt . \u0026\u0026     jupyter serverextension enable --py geonotebook --sys-prefix \u0026\u0026     jupyter nbextension enable --py geonotebook --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/notebooks"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/notebooks"
        },
        {
          "CmdLine": [
            "/jupyter.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}