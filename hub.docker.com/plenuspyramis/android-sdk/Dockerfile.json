{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04 as base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"ryan@enigmacurry.com\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026     apt-get update -y \u0026\u0026     apt-get install -y --no-install-recommends libncurses5:i386 libc6:i386 libstdc++6:i386 lib32gcc1 lib32ncurses5 lib32z1 zlib1g:i386 \u0026\u0026     apt-get install -y --no-install-recommends openjdk-8-jdk \u0026\u0026     apt-get install -y --no-install-recommends git wget unzip \u0026\u0026     apt-get install -y --no-install-recommends qt5-default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "GRADLE_VERSION",
          "Name": "arg",
          "Value": "5.2.1"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget -q https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip \u0026\u0026     unzip gradle*.zip \u0026\u0026     ls -d */ | sed 's/\\/*$//g' | xargs -I{} mv {} gradle \u0026\u0026     rm gradle*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "KOTLIN_VERSION",
          "Name": "arg",
          "Value": "1.3.21"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget -q https://github.com/JetBrains/kotlin/releases/download/v${KOTLIN_VERSION}/kotlin-compiler-${KOTLIN_VERSION}.zip \u0026\u0026     unzip *kotlin*.zip \u0026\u0026     rm *kotlin*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "ANDROID_SDK_VERSION",
          "Name": "arg",
          "Value": "4333796"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${ANDROID_HOME} \u0026\u0026 cd ${ANDROID_HOME} \u0026\u0026     wget -q https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_VERSION}.zip \u0026\u0026     unzip *tools*linux*.zip \u0026\u0026     rm *tools*linux*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/opt/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KOTLIN_HOME",
              "Value": "/opt/kotlinc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${GRADLE_HOME}/bin:${KOTLIN_HOME}/bin:${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/tools/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "_JAVA_OPTIONS",
              "Value": "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "license_accepter.sh",
            "/opt/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/license_accepter.sh \u0026\u0026 /opt/license_accepter.sh $ANDROID_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5037"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "sshd-banner",
            "/etc/ssh/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "authorized_keys",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get install -y --no-install-recommends openssh-server supervisor locales \u0026\u0026     mkdir -p /var/run/sshd /var/log/supervisord \u0026\u0026     locale-gen en en_US en_US.UTF-8 \u0026\u0026     apt-get remove -y locales \u0026\u0026 apt-get autoremove -y \u0026\u0026     FILE_SSHD_CONFIG=\"/etc/ssh/sshd_config\" \u0026\u0026     echo \"\\nBanner /etc/ssh/sshd-banner\" \u003e\u003e $FILE_SSHD_CONFIG \u0026\u0026     echo \"\\nPermitUserEnvironment=yes\" \u003e\u003e $FILE_SSHD_CONFIG \u0026\u0026     ssh-keygen -q -N \"\" -f /root/.ssh/id_rsa \u0026\u0026     FILE_SSH_ENV=\"/root/.ssh/environment\" \u0026\u0026     touch $FILE_SSH_ENV \u0026\u0026 chmod 600 $FILE_SSH_ENV \u0026\u0026     printenv | grep \"JAVA_HOME\\|GRADLE_HOME\\|KOTLIN_HOME\\|ANDROID_HOME\\|LD_LIBRARY_PATH\\|PATH\" \u003e\u003e $FILE_SSH_ENV \u0026\u0026     FILE_AUTH_KEYS=\"/root/.ssh/authorized_keys\" \u0026\u0026     touch $FILE_AUTH_KEYS \u0026\u0026 chmod 600 $FILE_AUTH_KEYS \u0026\u0026     for file in /tmp/*.pub;     do if [ -f \"$file\" ]; then echo \"\\n\" \u003e\u003e $FILE_AUTH_KEYS \u0026\u0026 cat $file \u003e\u003e $FILE_AUTH_KEYS \u0026\u0026 echo \"\\n\" \u003e\u003e $FILE_AUTH_KEYS; fi;     done \u0026\u0026     (rm /tmp/*.pub 2\u003e /dev/null || true)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/conf.d/"
          ]
        },
        {
          "Key": "USER_ID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y sudo \u0026\u0026     echo \"android ALL=(ALL) NOPASSWD:ALL\" \u003e /etc/sudoers.d/99_android_nopasswd \u0026\u0026     adduser android --uid ${USER_ID} --gecos GECOS --shell /bin/bash --disabled-password --home /home/android \u0026\u0026     mkdir /sdk \u0026\u0026     chown -R android:android /sdk \u0026\u0026     echo 'export PATH=/sdk/tools:/sdk/tools/bin:$PATH' \u003e\u003e /home/android/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "android"
        },
        {
          "CmdLine": [
            "sudo",
            "/usr/bin/supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "base",
      "SourceCode": "FROM base",
      "Platform": "",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"ryan@enigmacurry.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "VNC_PASSWORD",
          "Name": "arg",
          "Value": "\"android\""
        },
        {
          "Key": "VNC_PASSWORD_VIEW_ONLY",
          "Name": "arg",
          "Value": "\"docker\""
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "android"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "5901"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "vnc/vncpass.sh",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "vnc/watchdog.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "vnc/supervisord_vncserver.conf",
            "/etc/supervisor/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "sudo apt-get update -y \u0026\u0026     DEBIAN_FRONTEND=noninteractive sudo -E apt-get install -y --no-install-recommends xfce4 xfce4-goodies xfonts-base dbus-x11 tightvncserver expect \u0026\u0026     sudo chmod +x /tmp/vncpass.sh; sudo sync \u0026\u0026     VNC_PASSWORD=${VNC_PASSWORD} VNC_PASSWORD_VIEW_ONLY=${VNC_PASSWORD_VIEW_ONLY} /tmp/vncpass.sh \u0026\u0026     sudo rm /tmp/vncpass.sh \u0026\u0026     sudo apt-get remove -y expect \u0026\u0026 sudo apt-get autoremove -y \u0026\u0026     mkdir -p /home/android/.ssh \u0026\u0026     FILE_SSH_ENV=\"/home/android/.ssh/environment\" \u0026\u0026     echo \"DISPLAY=:1\" \u003e\u003e $FILE_SSH_ENV"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo",
            "/usr/bin/supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}