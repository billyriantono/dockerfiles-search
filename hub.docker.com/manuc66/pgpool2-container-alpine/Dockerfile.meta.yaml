MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Env:
    - Key: PGPOOL_VERSION
      Value: 3.6.1
    Name: env
  - Env:
    - Key: PG_VERSION
      Value: 9.6.1-r0
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - apk --update --no-cache add libpq=${PG_VERSION} postgresql-dev=${PG_VERSION}
      postgresql-client=${PG_VERSION}                                 linux-headers
      gcc make libgcc g++                                 libffi-dev python python-dev
      py2-pip libffi-dev &&     cd /tmp &&     wget http://www.pgpool.net/mediawiki/images/pgpool-II-${PGPOOL_VERSION}.tar.gz
      -O - | tar -xz &&     chown root:root -R /tmp/pgpool-II-${PGPOOL_VERSION} &&     cd
      /tmp/pgpool-II-${PGPOOL_VERSION} &&     ./configure --prefix=/usr                 --sysconfdir=/etc                 --mandir=/usr/share/man                 --infodir=/usr/share/info
      &&     make &&     make install &&     rm -rf /tmp/pgpool-II-${PGPOOL_VERSION}
      &&     apk del postgresql-dev linux-headers gcc make libgcc g++
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Jinja2
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/pgpool2 /var/run/pgpool /var/log/pgpool /var/run/postgresql /var/log/postgresql/
      &&     chown postgres /etc/pgpool2 /var/run/pgpool /var/log/pgpool /var/run/postgresql
      /var/log/postgresql
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bin/configure-pgpool2
    - /usr/bin/configure-pgpool2
  - CmdLine:
    - chmod +x /usr/bin/configure-pgpool2
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/pcp.conf.template
    - /usr/share/pgpool2/pcp.conf.template
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/pgpool.conf.template
    - /usr/share/pgpool2/pgpool.conf.template
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "9898"
    - "9999"
  - CmdLine:
    - pgpool
    - -n
    - -f
    - /etc/pgpool2/pgpool.conf
    - -F
    - /etc/pgpool2/pcp.conf
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
