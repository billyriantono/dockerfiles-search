MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: PREFIX
      Value: /usr/local
    Name: env
  - CmdLine:
    - 'set -x  && locale-gen en_US en_US.UTF-8  && dpkg-reconfigure locales  && update-locale
      LANG=en_US.UTF-8  && sed ''s:archive.ubuntu.com/ubuntu/:mirrors.rit.edu/ubuntu-archive/:''
      -i /etc/apt/sources.list  && echo ''Apt::Install-Recommends "false";'' > /etc/apt/apt.conf.d/docker-no-recommends  &&
      echo ''APT::Get::Assume-Yes "true";'' > /etc/apt/apt.conf.d/docker-assume-yes  &&
      echo ''APT::Get::AutomaticRemove "true";'' > /etc/apt/apt.conf.d/docker-auto-remove  &&
      sed ''s/^#\s*deb/deb/'' -i /etc/apt/sources.list  && echo ''Package: *''                        >>
      /etc/apt/preferences  && echo ''Pin: release a=xenial-backports''   >> /etc/apt/preferences  &&
      echo ''Pin-Priority: 500''                 >> /etc/apt/preferences  && echo
      "DONE *****************************************************"'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update  && apt-get install       software-properties-common       apt-transport-https  &&
      add-apt-repository ppa:git-core/ppa  && add-apt-repository ppa:tmate.io/archive  &&
      echo "DONE *****************************************************"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update  && apt-get upgrade  && apt-get install       aptitude       bash       coreutils       git       gnupg       gzip       iputils-ping       ack-grep       ca-certificates       build-essential       bzr       curl       exuberant-ctags       file       git       htop       less       man-db       manpages       mercurial       mosh       net-tools       psmisc       ssh-client       subversion       rsync       wget       locate       direnv       tmate       python-pygments       dnsutils       zlib1g-dev       libssl-dev       libreadline-dev       libyaml-dev       libsqlite3-dev       sqlite3       libxml2-dev       libxslt1-dev       libcurl4-openssl-dev       libffi-dev       libacl1       libc6       libgpm2       libncurses5-dev       libselinux1       libssl-dev       libtcl8.6       libtinfo5       python-dev       automake       libevent-dev       pkg-config  &&
      echo "DONE *****************************************************"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver 'hkp://p80.pool.sks-keyservers.net:80'                 --recv-keys
      '58118E89F3A912897C070ADBF76221572C52609D'  && echo 'deb https://apt.dockerproject.org/repo
      ubuntu-wily main' > /etc/apt/sources.list.d/docker.list  && apt-get update  &&
      apt-get install       openssh-server       linux-image-extra-virtual-lts-xenial       docker-engine  &&
      echo "DONE *****************************************************"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - apt-get install       openssh-server  && rm -f /etc/ssh/ssh_host_*  && mkdir
      -pv /var/run/sshd /root/.ssh  && chmod 0700 /root/.ssh  && echo "DONE *****************************************************"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x  && version='1.7.0'  && curl -L -o /tmp/docker-compose "https://github.com/docker/compose/releases/download/${version}/docker-compose-$(uname
      -s)-$(uname -m)"  && install -v /tmp/docker-compose "$PREFIX/bin/docker-compose-${version}"  &&
      rm -vrf /tmp/*  && ln -s "$PREFIX/bin/docker-compose-${version}" "$PREFIX/bin/docker-compose"  &&
      echo "DONE *****************************************************"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x  && version='7.4.1752'  && git clone -b "v${version}" https://github.com/vim/vim.git
      /opt/vim  && cd /opt/vim  && ./configure --with-features=huge --with-compiledby='dockerdev'  &&
      make  && make install  && echo "DONE *****************************************************"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x  && version='2.2'  && git clone -b "${version}" https://github.com/tmux/tmux.git
      /opt/tmux  && cd /opt/tmux  && ./autogen.sh  && ./configure  && make  && make
      install  && curl -L -o /etc/bash_completion.d/tmux "https://raw.githubusercontent.com/przepompownia/tmux-bash-completion/master/completions/tmux"  &&
      echo "DONE *****************************************************"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x  && version='1.5'  && curl -m 10 -L -o /tmp/jq "https://github.com/stedolan/jq/releases/download/jq-${version}/jq-linux64"  &&
      install -v /tmp/jq "$PREFIX/bin/jq"  && rm -vfv /tmp/*  && echo "DONE *****************************************************"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x  && apt-get install python-pip python-setuptools  && pip install awscli  &&
      rm -vrf /tmp/*  && echo "DONE *****************************************************"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x  && version='2.2.3'  && cd /tmp  && curl -L -o hub.tgz "https://github.com/github/hub/releases/download/v${version}/hub-linux-amd64-${version}.tgz"  &&
      tar -xvzf hub.tgz  && cd hub-linux-amd64-${version}/  && ./install  && rm -vrf
      /tmp/*  && echo "DONE *****************************************************"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x  && git clone https://github.com/sstephenson/rbenv.git ~/.rbenv  && echo
      'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc  &&       export PATH="$HOME/.rbenv/bin:$PATH"  &&
      echo 'eval "$(rbenv init -)"' >> ~/.bashrc  &&       eval "$(rbenv init -)"  &&
      git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build  &&
      echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc  &&       export
      PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"  && git clone https://github.com/sstephenson/rbenv-gem-rehash.git
      ~/.rbenv/plugins/rbenv-gem-rehash  && rbenv install 2.3.1  && rbenv global 2.3.1  &&
      ruby -v  && gem install bundler  && echo "DONE *****************************************************"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export DOCKER_HOST='unix:///var/run/docker.sock'" >> /root/.bashrc  &&
      echo "export DEBIAN_FRONTEND=noninteractive" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="/root/.bin:$PATH"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -a /etc/ssh/ /etc/ssh.original/  && cp -a /etc/pam.d/ /etc/pam.d.original/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/etc/ssh/*
    - /etc/ssh/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/etc/pam.d/*
    - /etc/pam.d/
  - Name: volume
    Volumes:
    - /etc/ssh/ssh_host_keys
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/runtime/entrypoint
    - /opt/docker/runtime/entrypoint
  - CmdLine:
    - /opt/docker/runtime/entrypoint
    Name: entrypoint
    PrependShell: false
  - Name: volume
    Volumes:
    - /code
    - /root
  - Name: workdir
    Path: /root
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
