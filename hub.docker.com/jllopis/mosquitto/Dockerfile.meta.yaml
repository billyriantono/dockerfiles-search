MetaArgs: null
Stages:
- BaseName: alpine:3.11.2
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: maintainer
      Value: '"Joan Llopis <jllopisg@gmail.com>"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.name
      Value: '"mosquitto MQTT Brocker with auth-plugin"'
    - Key: org.label-schema.description
      Value: '"This project builds mosquitto with auth-plugin.       It also has mosquitto_pub,
        mosquitto_sub and np."'
    - Key: org.label-schema.url
      Value: '"https://cloud.docker.com/u/jllopis/repository/docker/jllopis/mosquitto"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/jllopis/docker-mosquitto"'
    - Key: org.label-schema.version
      Value: $VERSION
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - addgroup -S mosquitto &&     adduser -S -H -h /var/empty -s /sbin/nologin -D
      -G mosquitto mosquitto
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/bin:/usr/local/sbin:$PATH
    Name: env
  - Env:
    - Key: MOSQUITTO_VERSION
      Value: v.1.6.8
    Name: env
  - Env:
    - Key: LIBWEBSOCKETS_VERSION
      Value: v2.4.2
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run.sh
    - /
  - CmdLine:
    - apk --no-cache add --virtual buildDeps git cmake build-base openssl-dev c-ares-dev
      util-linux-dev hiredis-dev postgresql-dev curl-dev;     chmod +x /run.sh &&     mkdir
      -p /var/lib/mosquitto &&     touch /var/lib/mosquitto/.keep &&     mkdir -p
      /etc/mosquitto.d &&     apk add hiredis postgresql-libs libuuid c-ares openssl
      curl ca-certificates &&     git clone -b ${LIBWEBSOCKETS_VERSION} https://github.com/warmcat/libwebsockets
      &&     cd libwebsockets &&     cmake .       -DCMAKE_BUILD_TYPE=MinSizeRel       -DLWS_IPV6=ON       -DLWS_WITHOUT_CLIENT=ON       -DLWS_WITHOUT_TESTAPPS=ON       -DLWS_WITHOUT_EXTENSIONS=ON       -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON       -DLWS_WITH_ZIP_FOPS=OFF       -DLWS_WITH_ZLIB=OFF       -DLWS_WITH_SHARED=OFF
      &&     make -j "$(nproc)" &&     rm -rf /root/.cmake &&     cd .. &&     git
      clone -b ${MOSQUITTO_VERSION} https://github.com/eclipse/mosquitto.git &&     cd
      mosquitto &&     make -j "$(nproc)"       CFLAGS="-Wall -O2 -I/libwebsockets/include"       LDFLAGS="-L/libwebsockets/lib"       WITH_SRV=yes       WITH_STRIP=yes       WITH_ADNS=no       WITH_DOCS=no       WITH_MEMORY_TRACKING=no       WITH_TLS_PSK=no       WITH_WEBSOCKETS=yes     binary
      &&     install -s -m755 client/mosquitto_pub /usr/bin/mosquitto_pub &&     install
      -s -m755 client/mosquitto_rr /usr/bin/mosquitto_rr &&     install -s -m755 client/mosquitto_sub
      /usr/bin/mosquitto_sub &&     install -s -m644 lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1
      &&     ln -sf /usr/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so &&     install
      -s -m755 src/mosquitto /usr/sbin/mosquitto &&     install -s -m755 src/mosquitto_passwd
      /usr/bin/mosquitto_passwd &&     git clone https://github.com/vankxr/mosquitto-auth-plug
      &&     cd mosquitto-auth-plug &&     cp config.mk.in config.mk &&     sed -i
      "s/BACKEND_CDB ?= no/BACKEND_CDB ?= no/" config.mk &&     sed -i "s/BACKEND_MYSQL
      ?= yes/BACKEND_MYSQL ?= no/" config.mk &&     sed -i "s/BACKEND_SQLITE ?= no/BACKEND_SQLITE
      ?= no/" config.mk &&     sed -i "s/BACKEND_REDIS ?= no/BACKEND_REDIS ?= yes/"
      config.mk &&     sed -i "s/BACKEND_POSTGRES ?= no/BACKEND_POSTGRES ?= yes/"
      config.mk &&     sed -i "s/BACKEND_LDAP ?= no/BACKEND_LDAP ?= no/" config.mk
      &&     sed -i "s/BACKEND_HTTP ?= no/BACKEND_HTTP ?= yes/" config.mk &&     sed
      -i "s/BACKEND_JWT ?= no/BACKEND_JWT ?= no/" config.mk &&     sed -i "s/BACKEND_MONGO
      ?= no/BACKEND_MONGO ?= no/" config.mk &&     sed -i "s/BACKEND_FILES ?= no/BACKEND_FILES
      ?= no/" config.mk &&     sed -i "s/BACKEND_MEMCACHED ?= no/BACKEND_MEMCACHED
      ?= no/" config.mk &&     sed -i "s/MOSQUITTO_SRC =/MOSQUITTO_SRC = ..\//" config.mk
      &&     make -j "$(nproc)" &&     install -s -m755 auth-plug.so /usr/lib/ &&     install
      -s -m755 np /usr/bin/ &&     cd / && rm -rf mosquitto &&     rm -rf libwebsockets
      &&     apk del buildDeps && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - mosquitto.conf
    - /etc/mosquitto/mosquitto.conf
  - Name: expose
    Ports:
    - "1883"
    - "8883"
  - Name: expose
    Ports:
    - "9001"
    - "9002"
  - Name: volume
    Volumes:
    - /var/lib/mosquitto
    - /etc/mosquitto
    - /etc/mosquitto.d
  - CmdLine:
    - /run.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - mosquitto
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.11.2
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.11.2
