{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-cli-jessie",
      "SourceCode": "FROM php:7.1-cli-jessie",
      "Platform": "",
      "From": {
        "Image": "php:7.1-cli-jessie"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Felix Dulfer \u003cfelix@dulfer.me\u003e\""
            },
            {
              "Key": "php",
              "Value": "\"7.1\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "IMAGE_USER",
              "Value": "php"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$IMAGE_USER"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "$HOME/.composer"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "echo \"force-unsafe-io\" \u003e /etc/dpkg/dpkg.cfg.d/02apt-speedup \u0026\u0026     echo \"Acquire::http {No-Cache=True;};\" \u003e /etc/apt/apt.conf.d/no-cache \u0026\u0026             DEBIAN_FRONTEND=noninteractive dpkg-reconfigure -f noninteractive tzdata     \u0026\u0026 apt-get update     \u0026\u0026 apt-get upgrade -y     \u0026\u0026  DEBIAN_FRONTEND=noninteractive apt-get install -yqq     apt-transport-https     openssh-client     unzip     git     curl     libc-client-dev     zlib1g-dev     apt-utils     rsync     sudo     gnupg2     python     python-dev     --no-install-recommends \u0026\u0026             buildDeps=\"     libbz2-dev     libmysqlclient-dev     libsasl2-dev     \"     runtimeDeps=\"     libfreetype6-dev     libicu-dev     libjpeg-dev     libldap2-dev     libmcrypt-dev     libmemcached-dev     libmemcachedutil2     libpng12-dev     libpq-dev     libxml2-dev     libkrb5-dev     libmagickwand-dev     imagemagick     \" \u0026\u0026     apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y $buildDeps $runtimeDeps --no-install-recommends     \u0026\u0026 docker-php-ext-install -j$(nproc) exif xml xmlrpc pcntl bcmath bz2 calendar iconv intl mbstring mysqli opcache pdo_mysql pdo_pgsql pgsql soap zip     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/     \u0026\u0026 docker-php-ext-install -j$(nproc) ldap     \u0026\u0026 docker-php-ext-configure imap --with-kerberos --with-imap-ssl     \u0026\u0026 docker-php-ext-install -j$(nproc) imap     \u0026\u0026 docker-php-source delete \u0026\u0026             apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y mcrypt     \u0026\u0026 docker-php-ext-install -j$(nproc) mcrypt     \u0026\u0026 pecl channel-update pecl.php.net     \u0026\u0026 pecl install redis mongodb xdebug apcu memcached imagick     \u0026\u0026 docker-php-ext-enable redis mongodb xdebug apcu memcached imagick \u0026\u0026             {     echo 'opcache.memory_consumption=128';     echo 'opcache.interned_strings_buffer=8';     echo 'opcache.max_accelerated_files=4000';     echo 'opcache.revalidate_freq=60';     echo 'opcache.fast_shutdown=1';     echo 'opcache.enable_cli=1';     } \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini \u0026\u0026     {     echo 'apc.shm_segments=1';     echo 'apc.shm_size=256M';     echo 'apc.num_files_hint=7000';     echo 'apc.user_entries_hint=4096';     echo 'apc.ttl=7200';     echo 'apc.user_ttl=7200';     echo 'apc.gc_ttl=3600';     echo 'apc.max_file_size=1M';     echo 'apc.stat=1';     } \u003e /usr/local/etc/php/conf.d/apcu-recommended.ini \u0026\u0026     echo \"memory_limit=512M\" \u003e /usr/local/etc/php/conf.d/zz-conf.ini \u0026\u0026             curl -sL https://deb.nodesource.com/setup_8.x | bash -     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install nodejs --no-install-recommends -yqq     \u0026\u0026 npm i -g npm     \u0026\u0026 curl -o- -L https://yarnpkg.com/install.sh | bash \u0026\u0026             apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false     build-essential     apt-utils     libc-client-dev    autoconf     dpkg-dev     file     g++     gcc     libc-dev     libpcre3-dev     pkg-config     re2c \u0026\u0026         apt-get autoremove -y \u0026\u0026     apt-get autoclean -y \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026             adduser --disabled-password --gecos \"\" $IMAGE_USER \u0026\u0026     echo \"$IMAGE_USER  ALL = ( ALL ) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026     mkdir -p /var/www/html \u0026\u0026     chown -R $IMAGE_USER:$IMAGE_USER /var/www $HOME /tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "composer:1.6",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/composer",
            "/usr/bin/composer"
          ]
        },
        {
          "CmdLine": [
            "composer global require \"hirak/prestissimo:^0.3\" \u0026\u0026     chown -R $IMAGE_USER:$IMAGE_USER $COMPOSER_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$IMAGE_USER"
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        }
      ]
    }
  ]
}