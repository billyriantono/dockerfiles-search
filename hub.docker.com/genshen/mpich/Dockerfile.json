{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "mpich_builder",
      "BaseName": "genshen/clang-toolchain:latest",
      "SourceCode": "FROM genshen/clang-toolchain:latest AS mpich_builder",
      "Platform": "",
      "As": "mpich_builder",
      "From": {
        "Image": "genshen/clang-toolchain:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache make linux-headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "MPICH_SRC_DIR",
          "Name": "arg",
          "Value": "\"/tmp/mpich-3.3.1\""
        },
        {
          "Key": "MPICH_VERSION",
          "Name": "arg",
          "Value": "\"3.3.1\""
        },
        {
          "Key": "MPICH_CONFIGURE_OPTIONS",
          "Name": "arg",
          "Value": "\"--prefix=/usr/local/mpi-3.3.1 --disable-fortran\""
        },
        {
          "Key": "MPICH_INSTALL_PREFIX",
          "Name": "arg",
          "Value": "\"/usr/local/mpi-3.3.1\""
        },
        {
          "Key": "MPICH_MAKE_OPTIONS",
          "Name": "arg",
          "Value": "\"\""
        },
        {
          "Name": "workdir",
          "Path": "${MPICH_SRC_DIR}"
        },
        {
          "CmdLine": [
            "wget http://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz     \u0026\u0026 tar xfz mpich-${MPICH_VERSION}.tar.gz      \u0026\u0026 cd mpich-${MPICH_VERSION}      \u0026\u0026 ./configure ${MPICH_CONFIGURE_OPTIONS}      \u0026\u0026 make ${MPICH_MAKE_OPTIONS} \u0026\u0026 make install     \u0026\u0026 sed -i 's/allargs\\[@\\]/allargs/g' ${MPICH_INSTALL_PREFIX}/bin/mpicc     \u0026\u0026 sed -i 's/allargs\\[@\\]/allargs/g' ${MPICH_INSTALL_PREFIX}/bin/mpicxx     \u0026\u0026 rm -rf ${MPICH_SRC_DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "genshen/clang-toolchain:latest",
      "SourceCode": "FROM genshen/clang-toolchain:latest",
      "Platform": "",
      "From": {
        "Image": "genshen/clang-toolchain:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"genshen genshenchu@gmail.com\""
            },
            {
              "Key": "description",
              "Value": "\"MPI development environment based on clang, including clang,clang++,mpich,make.\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "USER",
          "Name": "arg",
          "Value": "mpi"
        },
        {
          "Env": [
            {
              "Key": "USER_HOME",
              "Value": "\"/home/${USER}\""
            },
            {
              "Key": "WORKDIR",
              "Value": "\"/project\""
            },
            {
              "Key": "MPI_HOME",
              "Value": "/usr/local/mpi-3.3.1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "mpich_builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/mpi-3.3.1",
            "/usr/local/mpi-3.3.1"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache make sudo     \u0026\u0026 mkdir -p /usr/local/include  /usr/local/bin  /usr/local/lib      \u0026\u0026 cd /usr/local/bin \u0026\u0026 ln -s ${MPI_HOME}/bin/* ./        \u0026\u0026 cd /usr/local/include \u0026\u0026 ln -s ${MPI_HOME}/include/* ./       \u0026\u0026 cd /usr/local/lib \u0026\u0026 ln -s ${MPI_HOME}/lib/* ./      \u0026\u0026 adduser -D ${USER}     \u0026\u0026 echo \"${USER} ALL=(ALL) NOPASSWD:ALL\" \u003e\u003e /etc/sudoers     \u0026\u0026 chown -R ${USER}:${USER} ${USER_HOME}     \u0026\u0026 mkdir -p ${WORKDIR}     \u0026\u0026 chown -R ${USER}:${USER} ${WORKDIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${WORKDIR}"
        },
        {
          "Name": "user",
          "User": "${USER}"
        }
      ]
    }
  ]
}