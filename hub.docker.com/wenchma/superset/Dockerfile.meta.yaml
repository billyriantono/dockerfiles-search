MetaArgs: null
Stages:
- BaseName: python:3.6
  Commands:
  - CmdLine:
    - useradd --user-group --create-home --no-log-init --shell /bin/bash work
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update -y && apt-get install -y build-essential libssl-dev     libffi-dev
      python3-dev libsasl2-dev libldap2-dev libxi-dev     vim less postgresql-client
      redis-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -     && apt-get install
      -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     && echo
      "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list     &&
      apt-get update     && apt-get install -y yarn
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/work
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./
    - ./
  - CmdLine:
    - pip install --upgrade setuptools pip     && pip install -e . && pip install
      -r requirements-dev.txt     && rm -rf /root/.cache/pip
    Name: run
    PrependShell: true
  - Name: user
    User: "0"
  - CmdLine:
    - curl https://codeload.github.com/wenchma/Flask-CAS/tar.gz/internal -o /home/work/Flask-CAS.tar.gz     &&
      tar -zxvf /home/work/Flask-CAS.tar.gz -C /home/work     && cd /home/work/Flask-CAS-internal     &&
      python setup.py install     && cd /home/work     && rm -rf Flask-CAS*
    Name: run
    PrependShell: true
  - Name: user
    User: work
  - Chown: work:work
    From: ""
    Name: copy
    SourcesAndDest:
    - superset
    - superset
  - Env:
    - Key: PATH
      Value: /home/work/superset/bin:$PATH
    - Key: PYTHONPATH
      Value: /home/work/superset/:$PYTHONPATH
    Name: env
  - CmdLine:
    - cd superset/assets     && yarn     && yarn run build     && yarn cache clean
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-init.sh
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Health:
      Test:
      - CMD
      - curl
      - -f
      - http://localhost:8088/health
    Name: healthcheck
  - Name: expose
    Ports:
    - "8088"
  From:
    Image: python:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6
