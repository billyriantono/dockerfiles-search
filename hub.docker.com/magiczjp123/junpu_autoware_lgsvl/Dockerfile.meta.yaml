MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-devel-ubuntu16.04
  Commands:
  - CmdLine:
    - "apt-get update && apt-get install -y         software-properties-common         wget
      curl git cmake cmake-curses-gui         libboost-all-dev         libflann-dev
      \        libgsl0-dev         libgoogle-perftools-dev         libeigen3-dev \tca-certificates
      \tmake \tautoconf \tlibtool \tpkg-config \tpython \tlibxext-dev \tx11proto-gl-dev
      &&\trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg --add-architecture i386 &&     apt-get update && apt-get install -y --no-install-recommends         gcc-multilib         libxext-dev:i386         libx11-dev:i386
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         xz-utils file locales dbus-x11
      pulseaudio dmz-cursor-theme         fonts-dejavu fonts-liberation hicolor-icon-theme         libcanberra-gtk3-0
      libcanberra-gtk-module libcanberra-gtk3-module         libasound2 libgtk2.0-0
      libdbus-glib-1-2 libxt6 libexif12         libgl1-mesa-glx libgl1-mesa-dri language-pack-en         &&
      update-locale LANG=en_US.UTF-8 LC_MESSAGES=POSIX
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         cmake-qt-gui         gnome-terminal
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main"
      > /etc/apt/sources.list.d/ros-latest.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y ros-kinetic-desktop-full ros-kinetic-nmea-msgs
      ros-kinetic-nmea-navsat-driver ros-kinetic-sound-play ros-kinetic-jsk-visualization
      ros-kinetic-grid-map ros-kinetic-gps-common
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y ros-kinetic-controller-manager ros-kinetic-ros-control
      ros-kinetic-ros-controllers ros-kinetic-gazebo-ros-control ros-kinetic-joystick-drivers
      ros-kinetic-rosbridge-server
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libnlopt-dev freeglut3-dev qtbase5-dev
      libqt5opengl5-dev libssh2-1-dev libarmadillo-dev libpcap-dev gksu libgl1-mesa-dev
      libglew-dev python-wxgtk3.0 software-properties-common libmosquitto-dev libyaml-cpp-dev
      python-flask python-requests
    Name: run
    PrependShell: true
  - Env:
    - Key: USERNAME
      Value: autoware
    Name: env
  - Env:
    - Key: PULSE_SERVER
      Value: /run/pulse/native
    Name: env
  - CmdLine:
    - useradd -m $USERNAME &&         echo "$USERNAME:$USERNAME" | chpasswd &&         usermod
      --shell /bin/bash $USERNAME &&         usermod -aG sudo $USERNAME &&         echo
      "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/$USERNAME &&         chmod
      0440 /etc/sudoers.d/$USERNAME &&         usermod  --uid 1000 $USERNAME &&         groupmod
      --gid 1000 $USERNAME
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /opt/ros/kinetic/setup.bash" >> /home/$USERNAME/.bashrc &&         echo
      "export QT_X11_NO_MITSHM=1" >> /home/$USERNAME/.bashrc &&         echo "cd"
      >> /home/$USERNAME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         pkg-config         libxau-dev         libxdmcp-dev         libxcb1-dev         libxext-dev         libx11-dev
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/x86_64-linux-gnu
    - /usr/local/lib/x86_64-linux-gnu
  - Chown: ""
    From: nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04
    Name: copy
    SourcesAndDest:
    - /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json
    - /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json
  - CmdLine:
    - echo '/usr/local/lib/x86_64-linux-gnu' >> /etc/ld.so.conf.d/glvnd.conf &&     ldconfig
      &&     echo '/usr/local/$LIB/libGL.so.1' >> /etc/ld.so.preload &&     echo '/usr/local/$LIB/libEGL.so.1'
      >> /etc/ld.so.preload
    Name: run
    PrependShell: true
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: ${NVIDIA_VISIBLE_DEVICES:-all}
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics
    Name: env
  - Name: user
    User: autoware
  - CmdLine:
    - sudo rosdep init         && rosdep update         && echo "source /opt/ros/kinetic/setup.bash"
      >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~ && git clone https://github.com/pjreddie/darknet.git darknet     && cd
      ~/darknet && git checkout 56d69e73aba37283ea7b9726b81afd2f79cd1134
    Name: run
    PrependShell: true
  - Chown: autoware:autoware
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/generic/data/yolov2/yolo.cfg
    - /home/$USERNAME/darknet/cfg/yolo.cfg
  - Chown: autoware:autoware
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/generic/data/yolov2/yolo.weights
    - /home/$USERNAME/darknet/data/yolo.weights
  - Chown: autoware:autoware
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/generic/data/yolov3/yolov3.cfg
    - /home/$USERNAME/darknet/cfg/yolov3.cfg
  - Chown: autoware:autoware
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/generic/data/yolov3/yolov3.weights
    - /home/$USERNAME/darknet/data/yolov3.weights
  - CmdLine:
    - sudo apt-get update && sudo apt-get install -y libprotobuf-dev libleveldb-dev
      libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update && sudo apt-get install --no-install-recommends -y libboost-all-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update && sudo apt-get install -y libatlas-base-dev libgoogle-glog-dev
      libgflags-dev liblmdb-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update && sudo apt-get install -y libhdf5-10 libhdf5-serial-dev
      libhdf5-dev libhdf5-cpp-11
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~ && git clone https://github.com/weiliu89/caffe.git ssdcaffe     && cd ~/ssdcaffe
      && git checkout 4817bf8b4200b35ada8ed0dc378dceaf38c539e4
    Name: run
    PrependShell: true
  - Chown: autoware:autoware
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/generic/data/ssd/Makefile.config
    - /home/$USERNAME/ssdcaffe/Makefile.config
  - Chown: autoware:autoware
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker/generic/data/ssd/models/
    - /home/$USERNAME/ssdcaffe/models/
  - CmdLine:
    - cd ~/ssdcaffe && make && make distribute
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /home/$USERNAME/autoware
  - CmdLine:
    - sudo chown -R autoware /home/$USERNAME/autoware
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c 'source /opt/ros/kinetic/setup.bash; cd /home/$USERNAME/autoware/ros/src;
      git submodule update --init --recursive; catkin_init_workspace; cd ../; ./catkin_make_release'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /home/$USERNAME/autoware/ros/devel/setup.bash" >> /home/$USERNAME/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '"en_US.UTF-8"'
    Name: env
  - CmdLine:
    - echo "export LANG=\"en_US.UTF-8\"" >> /home/$USERNAME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get -y install vim tmux
    Name: run
    PrependShell: true
  - CmdLine:
    - gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_background"
      --type bool false
    Name: run
    PrependShell: true
  - CmdLine:
    - gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_colors" --type
      bool false
    Name: run
    PrependShell: true
  - CmdLine:
    - gconftool-2 --set "/apps/gnome-terminal/profiles/Default/background_color" --type
      string "#000000"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:8.0-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-devel-ubuntu16.04
