{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "buildDependencies",
              "Value": "python build-essential g++ flex bison gperf manpages   ruby perl libsqlite3-dev libssl-dev libpng-dev git time"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "phantomJSDependencies",
              "Value": "libicu-dev libfontconfig1-dev libjpeg-dev libfreetype6 wget"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "phantomjsGitUrl",
              "Value": "git://github.com/ariya/phantomjs"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "phantomjsGitBranch",
              "Value": "842715be9d2bb27865c179c12761290fa3f2929c"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "( \tapt-get update -yqq \u0026\u0026 \tapt-get install -fyqq ${buildDependencies} ${phantomJSDependencies}     ) \u0026\u0026 ( \tgit clone ${phantomjsGitUrl} phantomjs2 \u0026\u0026 \tcd phantomjs2 \u0026\u0026 \tgit checkout ${phantomjsGitBranch} \u0026\u0026 \ttime ./build.py --confirm --silent --release \u0026\u0026 \tls -A | grep -v bin | xargs rm -rf \u0026\u0026 \tln -s /phantomjs2/bin/phantomjs /usr/local/share/phantomjs \u0026\u0026 \tln -s /phantomjs2/bin/phantomjs /usr/local/bin/phantomjs \u0026\u0026 \tln -s /phantomjs2/bin/phantomjs /usr/bin/phantomjs     ) \u0026\u0026 ( \tapt-get autoremove --purge -yqq ${buildDependencies} \u0026\u0026 \tapt-get clean \u0026\u0026 \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/log/*.log /var/log/apt/*.log      ) \u0026\u0026     phantomjs -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5050"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "./start.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}