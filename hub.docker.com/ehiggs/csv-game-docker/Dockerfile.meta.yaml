MetaArgs: null
Stages:
- BaseName: debian:testing
  Commands:
  - Maintainer: Ewan Higgs <ewan_higgs@yahoo.co.uk>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: AWK_DEPS
      Value: '"gawk mawk"'
    Name: env
  - Env:
    - Key: C_DEPS
      Value: '"libcsv-dev"'
    Name: env
  - Env:
    - Key: CPP_DEPS
      Value: '"libboost-dev"'
    Name: env
  - Env:
    - Key: HASKELL_DEPS
      Value: '"ghc libffi-dev libgmp-dev"'
    Name: env
  - Env:
    - Key: R_DEPS
      Value: '"r-base r-base-dev libopenblas-base"'
    Name: env
  - Env:
    - Key: PYTHON2_DEPS
      Value: '"python python-dev python-pip"'
    Name: env
  - Env:
    - Key: PYTHON3_DEPS
      Value: '"python3 python3-dev python3-pip"'
    Name: env
  - Env:
    - Key: RUBY_DEPS
      Value: '"ruby ruby-dev"'
    Name: env
  - Env:
    - Key: LUA_DEPS
      Value: '"lua5.1 luajit luarocks"'
    Name: env
  - Env:
    - Key: OCAML_DEPS
      Value: '"ocaml opam ocaml-findlib"'
    Name: env
  - Env:
    - Key: PHP_DEPS
      Value: '"php7.0"'
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install        ca-certificates        curl        dirmngr        gcc        gnupg        libc6-dev        m4        git        sudo        swig        $AWK_DEPS        $C_DEPS        $CPP_DEPS        $HASKELL_DEPS        $R_DEPS        $JAVA_DEPS        $PYTHON2_DEPS        $PYTHON3_DEPS        $OCAML_DEPS        $RUBY_DEPS        $LUA_DEPS        $PHP_DEPS        -qqy        --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keys.gnupg.net --recv-keys 09617FD37CC06B54;       echo
      "deb https://dist.crystal-lang.org/apt crystal main" > /etc/apt/sources.list.d/crystal.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q install --no-install-recommends -y crystal
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main" |       tee
      /etc/apt/sources.list.d/webupd8team-java.list;     echo "deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu
      xenial main" |       tee -a /etc/apt/sources.list.d/webupd8team-java.list;     apt-key
      adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q update
    Name: run
    PrependShell: true
  - CmdLine:
    - echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true
      |     /usr/bin/debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q install --no-install-recommends -y oracle-java8-installer
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q install --no-install-recommends -y     ant     maven
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - luarocks install lpeg
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local
  - CmdLine:
    - curl -s https://julialang-s3.julialang.org/bin/linux/x64/0.6/julia-0.6.2-linux-x86_64.tar.gz
      > julia.tar.gz     && tar xzf julia.tar.gz --transform s/julia-d386e40c17/julia/     &&
      rm julia.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:/usr/local/julia/bin"'
    Name: env
  - Name: workdir
    Path: /
  - CmdLine:
    - curl -sSL https://get.haskellstack.org/ | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pandas
    Name: run
    PrependShell: true
  - CmdLine:
    - cpan install perl Text::CSV_XS ; exit 0
    Name: run
    PrependShell: true
  - CmdLine:
    - opam init -a && eval $(opam config env) && opam update && opam install -y csv
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - mkdir /rust
    Name: run
    PrependShell: true
  - CmdLine:
    - pwd
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /rust
  - Env:
    - Key: RUST_ARCHIVE
      Value: rust-nightly-x86_64-unknown-linux-gnu.tar.gz
    Name: env
  - Env:
    - Key: RUST_DOWNLOAD_URL
      Value: https://static.rust-lang.org/dist/$RUST_ARCHIVE
    Name: env
  - CmdLine:
    - curl -fsOSL $RUST_DOWNLOAD_URL     && curl -s $RUST_DOWNLOAD_URL.sha256 | sha256sum
      -c -     && tar -C /rust -xzf $RUST_ARCHIVE --strip-components=1     && rm $RUST_ARCHIVE     &&
      ./install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install fastest-csv
    Name: run
    PrependShell: true
  - Env:
    - Key: LEIN_ROOT
      Value: "1"
    Name: env
  - Env:
    - Key: LEIN_DOWNLOAD_URL
      Value: https://raw.githubusercontent.com/technomancy/leiningen/2.6.1/bin/lein
    Name: env
  - CmdLine:
    - curl -s $LEIN_DOWNLOAD_URL > /usr/local/bin/lein     && chmod 0755 /usr/local/bin/lein     &&
      /usr/local/bin/lein
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /nim
  - Env:
    - Key: NIM_VERSION
      Value: 0.16.0
    Name: env
  - Env:
    - Key: NIM_ARCHIVE
      Value: nim-$NIM_VERSION.tar.xz
    Name: env
  - Env:
    - Key: NIM_DOWNLOAD_URL
      Value: https://nim-lang.org/download/$NIM_ARCHIVE
    Name: env
  - CmdLine:
    - curl -fsOS $NIM_DOWNLOAD_URL     && curl -s $NIM_DOWNLOAD_URL.sha256 | sha256sum
      -c -     && tar -C /nim -xf $NIM_ARCHIVE     && rm $NIM_ARCHIVE     && cd nim-$NIM_VERSION     &&
      sh build.sh     && bin/nim c koch     && ./koch tools
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:/nim/nim-${NIM_VERSION}/bin"'
    Name: env
  - Name: workdir
    Path: /usr/local
  - CmdLine:
    - curl -s https://storage.googleapis.com/golang/go1.9.1.linux-amd64.tar.gz > go.tar.gz     &&
      tar xzf go.tar.gz     && rm go.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:/usr/local/go/bin"'
    Name: env
  - Name: workdir
    Path: /paratext
  - CmdLine:
    - pip install numpy six     && git clone https://github.com/wiseio/paratext.git     &&
      cd paratext/python     && python setup.py install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  From:
    Image: debian:testing
  Name: ""
  Platform: ""
  SourceCode: FROM debian:testing
