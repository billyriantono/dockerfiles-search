MetaArgs: null
Stages:
- BaseName: ruby:2.4-alpine
  Commands:
  - Env:
    - Key: VERSION
      Value: v6.10.3
    - Key: NPM_VERSION
      Value: "3"
    Name: env
  - Env:
    - Key: CONFIG_FLAGS
      Value: '"--fully-static --without-npm"'
    - Key: DEL_PKGS
      Value: '"libstdc++"'
    - Key: RM_DIRS
      Value: /usr/include
    Name: env
  - CmdLine:
    - apk add --no-cache curl make gcc g++ python linux-headers binutils-gold gnupg
      libstdc++ &&   gpg --keyserver ha.pool.sks-keyservers.net --recv-keys     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     56730D5401028683275BD23C23EFEFE93C4CFFFE
      &&   curl -sSLO https://nodejs.org/dist/${VERSION}/node-${VERSION}.tar.xz &&   curl
      -sSL https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc | gpg --batch --decrypt
      |     grep " node-${VERSION}.tar.xz\$" | sha256sum -c | grep . &&   tar -xf
      node-${VERSION}.tar.xz &&   cd node-${VERSION} &&   ./configure --prefix=/usr
      ${CONFIG_FLAGS} &&   make -j$(getconf _NPROCESSORS_ONLN) &&   make install &&   cd
      / &&   if [ -x /usr/bin/npm ]; then     npm install -g npm@${NPM_VERSION} &&     find
      /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf;   fi
      &&   apk del curl make gcc g++ python linux-headers binutils-gold gnupg ${DEL_PKGS}
      &&   rm -rf ${RM_DIRS} /node-${VERSION}* /usr/share/man /tmp/* /var/cache/apk/*     /root/.npm
      /root/.node-gyp /root/.gnupg /usr/lib/node_modules/npm/man     /usr/lib/node_modules/npm/doc
      /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler dashing
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /dashing &&     dashing new dashing &&     cd /dashing &&     bundle &&     ln
      -s /dashing/dashboards /dashboards &&     ln -s /dashing/jobs /jobs &&     ln
      -s /dashing/assets /assets &&     ln -s /dashing/lib /lib-dashing &&     ln
      -s /dashing/public /public &&     ln -s /dashing/widgets /widgets &&     mkdir
      /dashing/config &&     mv /dashing/config.ru /dashing/config/config.ru &&     ln
      -s /dashing/config/config.ru /dashing/config.ru &&     ln -s /dashing/config
      /config
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run.sh
    - /
  - Name: volume
    Volumes:
    - /dashboards
    - /jobs
    - /lib-dashing
    - /config
    - /public
    - /widgets
    - /assets
  - Env:
    - Key: PORT
      Value: "3030"
    Name: env
  - Name: expose
    Ports:
    - $PORT
  - Name: workdir
    Path: /dashing
  - CmdLine:
    - /run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ruby:2.4-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2.4-alpine
