{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "alpine-glibc-image",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8 as alpine-glibc-image",
      "Platform": "",
      "As": "alpine-glibc-image",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "\"/opt/conda\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$CONDA_DIR/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TENSORFLOW_VERSION",
              "Value": "\"1.9.0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \u0026\u0026     ALPINE_GLIBC_PACKAGE_VERSION=\"2.27-r0\" \u0026\u0026     ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     apk add --no-cache --virtual=.build-dependencies wget ca-certificates bash \u0026\u0026     wget         \"https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub\"         -O \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026     wget         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026     apk add --no-cache         \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026         rm \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026     /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \u0026\u0026     echo \"export LANG=$LANG\" \u003e /etc/profile.d/locale.sh \u0026\u0026         apk del glibc-i18n \u0026\u0026         rm \"/root/.wget-hsts\" \u0026\u0026     rm         \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026     CONDA_VERSION=\"4.5.4\" \u0026\u0026     CONDA_MD5_CHECKSUM=\"a946ea1d0c4a642ddf0c3a26a18bb16d\" \u0026\u0026         mkdir -p \"$CONDA_DIR\" \u0026\u0026     wget \"http://repo.continuum.io/miniconda/Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh\" -O miniconda.sh \u0026\u0026     echo \"$CONDA_MD5_CHECKSUM  miniconda.sh\" | md5sum -c \u0026\u0026     bash miniconda.sh -f -b -p \"$CONDA_DIR\" \u0026\u0026     echo \"export PATH=$CONDA_DIR/bin:\\$PATH\" \u003e /etc/profile.d/conda.sh \u0026\u0026     rm miniconda.sh \u0026\u0026         conda update --all --yes \u0026\u0026     conda config --set auto_update_conda False \u0026\u0026     rm -r \"$CONDA_DIR/pkgs/\" \u0026\u0026         apk del --purge .build-dependencies \u0026\u0026         rm -rf /root/.cache \u0026\u0026         mkdir -p \"$CONDA_DIR/locks\" \u0026\u0026     chmod 777 \"$CONDA_DIR/locks\" \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install tensorflow==${TENSORFLOW_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}