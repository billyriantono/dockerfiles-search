MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Maintainer: smizy
    Name: maintainer
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.docker.dockerfile
      Value: '"/Dockerfile"'
    - Key: org.label-schema.license
      Value: '"Apache License 2.0"'
    - Key: org.label-schema.name
      Value: '"smizy/php"'
    - Key: org.label-schema.url
      Value: '"https://github.com/smizy"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-type
      Value: '"Git"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/smizy/docker-postgres"'
    Name: label
  - Env:
    - Key: PGDATA
      Value: /var/lib/postgresql/data
    Name: env
  - CmdLine:
    - set -x     && apk update     && apk add         bash         postgresql         su-exec     &&
      mkdir -p         /var/run/postgresql         ${PGDATA}         /docker-entrypoint-initdb.d     &&
      chown -R postgres /var/run/postgresql ${PGDATA}     && sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1
      = '*'!" /usr/share/postgresql/postgresql.conf.sample
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /usr/local/bin/
  - Name: volume
    Volumes:
    - ${PGDATA}
  - Name: expose
    Ports:
    - "5432"
  - CmdLine:
    - entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - postgres
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
