{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache",
      "SourceCode": "FROM php:7.1-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "\"xterm-256color\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COLUMNS",
              "Value": "200"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "\"noninteractive\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "\"/root/composer\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"C.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "\"C.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "\"C.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install -y        gnupg        libssl-dev     \u0026\u0026 apt-get install -y locales -qq     \u0026\u0026 locale-gen en_AU     \u0026\u0026 locale-gen en_AU.UTF-8     \u0026\u0026 dpkg-reconfigure locales     \u0026\u0026 locale-gen C.UTF-8     \u0026\u0026 dpkg-reconfigure locales     \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C     \u0026\u0026 apt-get update \u0026\u0026 apt-get upgrade -y \u0026\u0026 apt-get install -y        apt-transport-https        build-essential        ca-certificates        cron        curl        git        libbz2-dev        libfreetype6-dev        libicu-dev        libjpeg-dev        libmcrypt-dev        libmemcached-dev        libmemcachedutil2        libpng-dev        libpq-dev        libsasl2-dev        libxslt-dev        nano        software-properties-common        sudo        unzip        wget        xz-utils        zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install bz2 soap calendar iconv intl xsl mbstring mcrypt mysqli opcache pdo_mysql pdo_pgsql pgsql zip     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd bcmath     \u0026\u0026 pecl install memcached redis     \u0026\u0026 docker-php-ext-enable memcached.so redis.so     \u0026\u0026 a2enmod rewrite     \u0026\u0026 echo \"memory_limit=2G\" \u003e /usr/local/etc/php/conf.d/memory-limit.ini     \u0026\u0026 echo \"max_execution_time=18000\" \u003e /usr/local/etc/php/conf.d/max-execution-time.ini     \u0026\u0026 echo \"max_input_time=6000\" \u003e /usr/local/etc/php/conf.d/max-input-time.ini     \u0026\u0026 echo \"max_input_vars=5000\" \u003e /usr/local/etc/php/conf.d/max-input-vars.ini     \u0026\u0026 echo \"post_max_size=256M\" \u003e /usr/local/etc/php/conf.d/post-max-size.ini     \u0026\u0026 echo \"upload_max_filesize=256M\" \u003e /usr/local/etc/php/conf.d/upload-max-filesize.ini     \u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 export PATH=$COMPOSER_HOME/vendor/bin:$PATH     \u0026\u0026 composer self-update \u0026\u0026 composer global require hirak/prestissimo     \u0026\u0026 cd /tmp     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_6.x | bash -     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y nodejs     \u0026\u0026 npm install -g grunt-cli     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}