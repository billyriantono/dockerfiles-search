MetaArgs: null
Stages:
- As: stage1
  BaseName: ubuntu:18.04
  Commands:
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Env:
    - Key: PYTHONUNBUFFERED
      Value: "1"
    Name: env
  - Env:
    - Key: KUBE_LATEST_VERSION
      Value: v1.16.2
    Name: env
  - Env:
    - Key: HELM_VERSION
      Value: v2.15.2
    Name: env
  - Env:
    - Key: HELM_FILENAME
      Value: helm-${HELM_VERSION}-linux-amd64.tar.gz
    Name: env
  - CmdLine:
    - set -xe;     apt-get -qq update && apt-get install -y --no-install-recommends         apt-transport-https         git-core         make         software-properties-common         gcc         python3-dev         libffi-dev         python3-pip         python3-setuptools         curl     &&
      curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl
      -o /usr/local/bin/kubectl     && curl -L https://storage.googleapis.com/kubernetes-helm/${HELM_FILENAME}
      | tar xz && mv linux-amd64/helm /usr/local/bin/helm && rm -rf linux-amd64     &&
      apt-get autoremove -y && apt-get clean     && rm -rf /var/lib/apt/lists/* /tmp/*     &&
      mkdir -p /app     && pip3 install virtualenv     && virtualenv -p python3 --prompt
      "(cloudman)" /app/venv
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - setup.py
    - /app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - README.rst
    - /app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - HISTORY.rst
    - /app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cloudman/cloudman/__init__.py
    - /app/cloudman/cloudman/__init__.py
  - CmdLine:
    - /app/venv/bin/pip3 install -U pip && /app/venv/bin/pip3 install --no-cache-dir
      -r requirements.txt
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: stage1
  Platform: ""
  SourceCode: FROM ubuntu:18.04 as stage1
- BaseName: ubuntu:18.04
  Commands:
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Env:
    - Key: PYTHONUNBUFFERED
      Value: "1"
    Name: env
  - CmdLine:
    - useradd -ms /bin/bash cloudman     && mkdir -p /app     && chown cloudman:cloudman
      /app -R     && apt-get -qq update && apt-get install -y --no-install-recommends         git-core         python3-pip         python3-setuptools         locales
      locales-all     && apt-get autoremove -y && apt-get clean     && rm -rf /var/lib/apt/lists/*
      /tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Name: workdir
    Path: /app/cloudman/
  - Chown: cloudman:cloudman
    From: stage1
    Name: copy
    SourcesAndDest:
    - /app
    - /app
  - Chown: cloudman:cloudman
    From: stage1
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/kubectl
    - /usr/local/bin/kubectl
  - Chown: cloudman:cloudman
    From: stage1
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/helm
    - /usr/local/bin/helm
  - Chown: cloudman:cloudman
    Name: add
    SourcesAndDest:
    - .
    - /app
  - Name: user
    User: cloudman
  - CmdLine:
    - chmod a+x /app/venv/bin/*     && chmod a+x /usr/local/bin/kubectl     && chmod
      a+x /usr/local/bin/helm     && /app/venv/bin/python manage.py collectstatic
      --no-input
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - /bin/bash -c "source /app/venv/bin/activate && /app/venv/bin/gunicorn -k gevent
      -b :8000 --access-logfile - --error-logfile - --log-level info cloudman.wsgi"
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
