MetaArgs: null
Stages:
- BaseName: talentify/flux:base
  Commands:
  - Labels:
    - Key: description
      Value: '"Image for Flux''s continuous integration."'
    Name: label
  - CmdLine:
    - apt-get update     && apt-get install --assume-yes gnupg     && curl -sL https://deb.nodesource.com/setup_10.x
      | bash -     && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key
      add -     && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list     &&
      apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install ruby-dev rubygems     git     nodejs     yarn     python-dev
      python-pip    ssh sshpass     zip --assume-yes     && gem update --system     &&
      gem install sass --no-user-install     && npm install -g grunt-cli     && pip
      install awsebcli --upgrade     && curl -sOL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz     &&
      tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz     && rm dockerize-linux-amd64-v0.6.1.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - xdebug.ini
    - /tmp
  - CmdLine:
    - pecl install xdebug-2.6.0         && docker-php-ext-enable xdebug         &&
      cat /tmp/xdebug.ini | grep -v '^#' >> "$PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini"         &&
      rm /tmp/xdebug.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: composer:latest
    Name: copy
    SourcesAndDest:
    - /usr/bin/composer
    - /usr/bin/composer
  - CmdLine:
    - composer global require hirak/prestissimo
    Name: run
    PrependShell: true
  From:
    Image: talentify/flux:base
  Name: ""
  Platform: ""
  SourceCode: FROM talentify/flux:base
