{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "talentify/flux:base",
      "SourceCode": "FROM talentify/flux:base",
      "Platform": "",
      "From": {
        "Image": "talentify/flux:base"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Image for Flux's continuous integration.\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install --assume-yes gnupg     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_10.x | bash -     \u0026\u0026 curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list     \u0026\u0026 apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install ruby-dev rubygems     git     nodejs     yarn     python-dev python-pip    ssh sshpass     zip --assume-yes     \u0026\u0026 gem update --system     \u0026\u0026 gem install sass --no-user-install     \u0026\u0026 npm install -g grunt-cli     \u0026\u0026 pip install awsebcli --upgrade     \u0026\u0026 curl -sOL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz     \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz     \u0026\u0026 rm dockerize-linux-amd64-v0.6.1.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "xdebug.ini",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "pecl install xdebug-2.6.0         \u0026\u0026 docker-php-ext-enable xdebug         \u0026\u0026 cat /tmp/xdebug.ini | grep -v '^#' \u003e\u003e \"$PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini\"         \u0026\u0026 rm /tmp/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "composer:latest",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/composer",
            "/usr/bin/composer"
          ]
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}