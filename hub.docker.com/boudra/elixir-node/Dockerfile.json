{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/elixir"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install --force-yes -y --no-install-recommends         openssh-client         ca-certificates         curl         git         build-essential         zlib1g-dev         liblzma-dev         pkg-config         mysql-client         xfonts-base         xfonts-75dpi         rlwrap         gnupg         netbase         wget         ruby         ruby-dev         unzip         python-minimal         libwxgtk3.0-0v5         libsctp1         g++ \u0026\u0026         apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://packages.erlang-solutions.com/erlang/debian/pool/esl-erlang_22.1.8-1~ubuntu~bionic_amd64.deb -O erlang.deb \u0026\u0026     dpkg -i erlang.deb \u0026\u0026     rm erlang.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://github.com/elixir-lang/elixir/releases/download/v1.9.4/Precompiled.zip \u0026\u0026     unzip Precompiled.zip \u0026\u0026     rm -f Precompiled.zip \u0026\u0026     ln -s /elixir/bin/elixirc /usr/local/bin/elixirc \u0026\u0026     ln -s /elixir/bin/elixir /usr/local/bin/elixir \u0026\u0026     ln -s /elixir/bin/mix /usr/local/bin/mix \u0026\u0026     ln -s /elixir/bin/iex /usr/local/bin/iex \u0026\u0026     /usr/local/bin/mix local.hex --force \u0026\u0026     /usr/local/bin/mix local.rebar --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://deb.nodesource.com/node_10.x/pool/main/n/nodejs/nodejs_10.16.3-1nodesource1_amd64.deb --no-check-certificate -O node.deb \u0026\u0026     dpkg -i node.deb \u0026\u0026     rm node.deb \u0026\u0026     echo \"prefix = ${HOME}/.node\" \u003e ~/.npmrc \u0026\u0026     PATH=\"$HOME/.node/bin:$PATH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler -v 1.14.5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}