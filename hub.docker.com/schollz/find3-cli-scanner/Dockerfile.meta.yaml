MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: GOLANG_VERSION
      Value: "1.10"
    Name: env
  - Env:
    - Key: PATH
      Value: '"/usr/local/go/bin:${PATH}"'
    Name: env
  - Env:
    - Key: GOPATH
      Value: /root/go
    Name: env
  - CmdLine:
    - "apt-get update && \tDEBIAN_FRONTEND=noninteractive apt-get install -y libc6-dev
      make pkg-config g++ gcc git wget wireless-tools bluetooth iw net-tools libpcap-dev
      && \tmkdir /root/go && \trm -rf /var/lib/apt/lists/* && \tset -eux; \t\tdpkgArch=\"$(dpkg
      --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64';
      goRelSha256='b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33'
      ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6ff665a9ab61240cf9f11a07e03e6819e452a618a32ea05bbb2c80182f838f4f'
      ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='efb47e5c0e020b180291379ab625c6ec1c2e9e9b289336bc7169e6aa1da43fd8'
      ;; \t\ti386) goRelArch='linux-386'; goRelSha256='2d26a9f41fd80eeb445cc454c2ba6b3d0db2fc732c53d7d0427a9f605bfc55a1'
      ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a1e22e2fbcb3e551e0bf59d0f8aeb4b3f2df86714f09d2acd260c6597c43beee'
      ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='71cde197e50afe17f097f81153edb450f880267699f22453272d184e0f4681d7'
      ;; \t\t*) goRelArch='src'; goRelSha256='f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24';
      \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not
      have a corresponding Go binary release; will be building from source\"; echo
      >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\";
      \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c
      -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src'
      ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO
      install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall
      after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\";
      \tgo version && \tgo get -u -v -d github.com/schollz/find3-cli-scanner && \tgo
      get -u -v -d github.com/google/gopacket/... && \tcd /root/go/src/github.com/schollz/find3-cli-scanner
      && \tgit checkout noshark && go build -v && \tmv find3-cli-scanner /usr/local/bin/
      && \techo \"removing go resources\" && rm -rf /usr/local/work/src && \techo
      \"purging packages\" && apt-get remove -y --auto-remove git libc6-dev pkg-config
      g++ gcc make && \techo \"add back pcap\" && apt-get update && apt-get install
      -y libpcap-dev && \techo \"autoclean\" && apt-get autoclean && \techo \"clean\"
      && apt-get clean && \techo \"autoremove\" && apt-get autoremove -y && \techo
      \"rm trash\" && rm -rf ~/.local/share/Trash/* && \techo \"rm go\" && rm -rf
      /usr/local/go* && \techo \"rm go\" && rm -rf /root/go* && \techo \"rm perl\"
      && rm -rf /usr/share/perl* && \techo \"rm doc\" && rm -rf /usr/share/doc*"
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
