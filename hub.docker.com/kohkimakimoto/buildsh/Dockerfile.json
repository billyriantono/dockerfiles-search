{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos7",
      "SourceCode": "FROM centos:centos7",
      "Platform": "",
      "From": {
        "Image": "centos:centos7"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo $'[dockerrepo]\\nname=Docker Repository\\nbaseurl=https://yum.dockerproject.org/repo/main/centos/7/\\nenabled=1\\ngpgcheck=1\\ngpgkey=https://yum.dockerproject.org/gpg' \u003e /etc/yum.repos.d/docker.repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install   epel-release   http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm   \u0026\u0026 yum clean all \u0026\u0026   yum -y install   git   man-db   curl   wget   gcc   gcc-c++   make   gettext   unzip   tar   vim-enhanced   sudo   tree   patch   zlib   zlib-devel   bzip2    bzip2-devel    readline   readline-devel    sqlite    sqlite-devel    libxml2   libxml2-devel   libicu-devel   libcurl   libcurl-devel   libjpeg   libjpeg-devel   libpng   libpng-devel   freetype   freetype-devel   libmcrypt   libmcrypt-devel   libtidy   libtidy-devel   libxslt   libxslt-devel   libXrender   libXext   fontconfig-devel   ipa-gothic-fonts   ipa-mincho-fonts   ipa-pgothic-fonts   ipa-pmincho-fonts   file   file-devel   bison   bison-devel   re2c   openssl    openssl-devel   autoconf   automake   libtool   mysql-community-client   docker-engine   \u0026\u0026 mkdir -p /build   \u0026\u0026 chmod -R 777 \"/build\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.6.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/yyuu/pyenv.git /opt/pyenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYENV_ROOT",
              "Value": "/opt/pyenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pyenv install ${PYTHON_VERSION} \u0026\u0026 pyenv global ${PYTHON_VERSION} \u0026\u0026 pyenv rehash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "v8.11.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/riywo/ndenv /opt/ndenv   \u0026\u0026 git clone https://github.com/riywo/node-build.git /opt/ndenv/plugins/node-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NDENV_ROOT",
              "Value": "/opt/ndenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NDENV_ROOT/shims:$NDENV_ROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ndenv install ${NODE_VERSION} \u0026\u0026 ndenv global ${NODE_VERSION} \u0026\u0026 ndenv rehash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt   \u0026\u0026 wget https://github.com/yarnpkg/yarn/releases/download/v1.9.2/yarn-v1.9.2.tar.gz   \u0026\u0026 tar zvxf yarn-v1.9.2.tar.gz   \u0026\u0026 mv yarn-v1.9.2 yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/yarn/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.2.8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/madumlao/phpenv.git /opt/phpenv  \u0026\u0026 git clone https://github.com/php-build/php-build.git /opt/phpenv/plugins/php-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHPENV_ROOT",
              "Value": "/opt/phpenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PHPENV_ROOT/shims:$PHPENV_ROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "phpenv install ${PHP_VERSION} \u0026\u0026 phpenv global ${PHP_VERSION} \u0026\u0026 phpenv rehash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://getcomposer.org/composer.phar -o /usr/bin/composer \u0026\u0026 chmod 755 /usr/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RUBY_VERSION",
              "Value": "2.3.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/rbenv/rbenv.git /opt/rbenv  \u0026\u0026 git clone https://github.com/rbenv/ruby-build.git /opt/rbenv/plugins/ruby-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RBENV_ROOT",
              "Value": "/opt/rbenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$RBENV_ROOT/shims:$RBENV_ROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rbenv install ${RUBY_VERSION} \u0026\u0026 rbenv global ${RUBY_VERSION} \u0026\u0026 rbenv rehash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PERL_VERSION",
              "Value": "5.28.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/tokuhirom/plenv.git /opt/plenv   \u0026\u0026 git clone https://github.com/tokuhirom/Perl-Build.git /opt/plenv/plugins/perl-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PLENV_ROOT",
              "Value": "/opt/plenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PLENV_ROOT/shims:$PLENV_ROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "plenv install ${PERL_VERSION} \u0026\u0026 plenv global ${PERL_VERSION} \u0026\u0026 plenv rehash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOVERSION",
              "Value": "1.9.2"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz",
            "/tmp/go${GOVERSION}.linux-amd64.tar.gz"
          ]
        },
        {
          "CmdLine": [
            "tar -C /usr/local -xzf /tmp/go${GOVERSION}.linux-amd64.tar.gz   \u0026\u0026 rm /tmp/go${GOVERSION}.linux-amd64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/build"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -i -e 's/Defaults[ \t]*env_reset/#Defaults    env_reset/' /etc/sudoers     \u0026\u0026 sed -i -e 's/Defaults[ \t]*secure_path/#Defaults    secure_path/' /etc/sudoers     \u0026\u0026 echo 'Defaults    env_keep += \"PATH\"' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/vishnubob/wait-for-it.git /opt/wait-for-it   \u0026\u0026 ln -s /opt/wait-for-it/wait-for-it.sh /usr/bin/wait-for-it.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/build"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}