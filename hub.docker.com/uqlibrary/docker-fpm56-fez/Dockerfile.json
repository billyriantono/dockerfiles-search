{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "uqlibrary/docker-fpm56:14",
      "SourceCode": "FROM uqlibrary/docker-fpm56:14",
      "Platform": "",
      "From": {
        "Image": "uqlibrary/docker-fpm56:14"
      },
      "Commands": [
        {
          "CmdLine": [
            "rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro \u0026\u0026   yum install -y http://rpms.remirepo.net/enterprise/remi-release-7.rpm \u0026\u0026   yum install -y http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm \u0026\u0026   yum install -y file \u0026\u0026   yum install -y mysql \u0026\u0026   yum install -y poppler-utils \u0026\u0026   yum install -y perl-IO-Compress perl-Image-ExifTool --enablerepo=epel-testing \u0026\u0026   yum install -y ffmpeg --enablerepo=nux-dextop \u0026\u0026   yum install -y ImageMagick7 ImageMagick7-devel --enablerepo=remi --skip-broken \u0026\u0026   wget -O /usr/local/src/jhove.tar.gz http://downloads.sourceforge.net/project/jhove/jhove/JHOVE%201.11/jhove-1_11.tar.gz \u0026\u0026   wget -O /usr/local/src/yamdi.tar.gz http://downloads.sourceforge.net/project/yamdi/yamdi/1.9/yamdi-1.9.tar.gz \u0026\u0026   wget -O /usr/local/src/graphviz.tar.gz http://www.graphviz.org/pub/graphviz/stable/SOURCES/graphviz-2.38.0.tar.gz \u0026\u0026   wget -O /usr/local/src/gs.tar.gz http://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs920/ghostscript-9.20-linux-x86_64.tgz \u0026\u0026   cd /usr/local/src \u0026\u0026 tar xvzf gs.tar.gz \u0026\u0026   cd /usr/local/src \u0026\u0026 tar xvzf yamdi.tar.gz \u0026\u0026   cd /usr/local/src \u0026\u0026 tar xvzf jhove.tar.gz \u0026\u0026   cd /usr/local/src \u0026\u0026 tar xvzf graphviz.tar.gz \u0026\u0026   yum group install -y \"Development Tools\" \u0026\u0026   cd /usr/local/src/yamdi-1.9 \u0026\u0026 gcc yamdi.c -o yamdi -O2 -Wall \u0026\u0026 mv yamdi /usr/bin/yamdi \u0026\u0026 chmod +x /usr/bin/yamdi \u0026\u0026 cd .. \u0026\u0026 rm -rf yamdi-1.9 \u0026\u0026 rm -f yamdi.tar.gz \u0026\u0026   yum install -y cairo-devel expat-devel freetype-devel gd-devel fontconfig-devel glib libpng zlib pango-devel pango \u0026\u0026   cd /usr/local/src/graphviz-2.38.0 \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026   yum install -y java-1.8.0-openjdk-headless \u0026\u0026   mv /usr/local/src/jhove /usr/local/jhove \u0026\u0026 rm -f /usr/local/src/jhove.tar.gz \u0026\u0026   mv -f /usr/local/src/ghostscript-9.20-linux-x86_64/gs-920-linux_x86_64 /usr/bin/gs \u0026\u0026 rm -f /usr/local/src/gs.tar.gz \u0026\u0026   yum group remove -y \"Development Tools\" \u0026\u0026   yum autoremove -y \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jhove",
            "/usr/local/jhove/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/jhove/jhove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/php-fpm.d/www.conf",
            "/etc/php-fpm.d/www.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /espace/data \u0026\u0026   mkdir -p /espace_san/incoming \u0026\u0026   sed -i \"s/memory_limit = 128M/memory_limit = 800M/\" /etc/php.ini \u0026\u0026   sed -i \"s/post_max_size = 8M/post_max_size = 800M/\" /etc/php.ini \u0026\u0026   sed -i \"s/max_execution_time = 30/max_execution_time = 300/\" /etc/php.ini \u0026\u0026   sed -i \"s/upload_max_filesize = 30M/upload_max_filesize = 800M/\" /etc/php.ini \u0026\u0026   sed -i \"s/session.gc_maxlifetime = 1440/session.gc_maxlifetime = 2880/\" /etc/php.ini \u0026\u0026   sed -i \"s/opcache.fast_shutdown=1/opcache.fast_shutdown=0/\" /etc/php.d/10-opcache.ini \u0026\u0026   sed -i \"s/; max_input_vars = 1000/max_input_vars = 5000/\" /etc/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}