{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Maintainer": "Pavel Argentov (argentoff@gmail.com)",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "TERM",
              "Value": "linux"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -i 's/^mesg n$/tty -s \\\u0026\\\u0026 mesg n/g' /root/.profile     \u0026\u0026 echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get dist-upgrade -y -q     \u0026\u0026 apt-get install -y -q        build-essential        apt-utils        wget        curl        make        git        m4        unzip     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 apt-get clean -y all     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y -q locales tzdata \u0026\u0026 apt-get autoremove -y \u0026\u0026 apt-get clean -y all \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /usr/share/locale/locale.alias \u0026\u0026 localedef -i ru_RU -c -f UTF-8 -A /usr/share/locale/locale.alias ru_RU.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "ru_RU.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "ru_RU:UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "ru_RU.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SYSTEM_TIMEZONE",
              "Value": "Europe/Moscow"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo ${SYSTEM_TIMEZONE} \u003e /etc/timezone \u0026\u0026 cp /usr/share/zoneinfo/${SYSTEM_TIMEZONE} /etc/localtime \u0026\u0026 dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "2.0.0-rc4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ARCH",
              "Value": "x86_64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DISTFILE",
              "Value": "opam-${VERSION}-${ARCH}-linux"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -nv https://github.com/ocaml/opam/releases/download/${VERSION}/${DISTFILE} \u0026\u0026     install ${DISTFILE} /usr/local/bin/opam \u0026\u0026     chmod a+x /usr/local/bin/opam \u0026\u0026     rm -f ${DISTFILE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'debconf debconf/frontend select Dialog' | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/bash dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "dev"
        },
        {
          "Name": "workdir",
          "Path": "/home/dev"
        },
        {
          "CmdLine": [
            "opam init -a --disable-sandboxing     \u0026\u0026 eval $(opam env)     \u0026\u0026 opam clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "eval $(opam env)     \u0026\u0026 opam install -y utop     \u0026\u0026 opam clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "opam",
            "config",
            "exec",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "utop"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}