MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "apt-get -o Acquire::ForceIPv4=true update && apt-get -yq dist-upgrade  && apt-get
      -o Acquire::ForceIPv4=true install -yq --no-install-recommends \tlocales python-pip
      cmake \tpython3-pip python3-setuptools git build-essential  && apt-get clean
      \ && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install jupyterlab bash_kernel  && python3 -m bash_kernel.install
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/bash
    - Key: NB_USER
      Value: jovyan
    - Key: NB_UID
      Value: "1000"
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${NB_USER}
    Name: env
  - CmdLine:
    - "adduser --disabled-password \t--gecos \"Default user\" \t--uid ${NB_UID} \t${NB_USER}"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - jupyter
    - lab
    - --no-browser
    - --ip=0.0.0.0
    - --NotebookApp.token=''
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get -o Acquire::ForceIPv4=true update && apt-get -o Acquire::ForceIPv4=true
      install -q -y     dirmngr     gnupg2     lsb-release     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main" > /etc/apt/sources.list.d/ros-latest.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -o Acquire::ForceIPv4=true update && apt-get -o Acquire::ForceIPv4=true
      install --no-install-recommends -y     python-rosdep     python-rosinstall     python-vcstools     python-catkin-tools     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rosdep init     && rosdep update
    Name: run
    PrependShell: true
  - Env:
    - Key: ROS_DISTRO
      Value: kinetic
    Name: env
  - CmdLine:
    - apt-get -o Acquire::ForceIPv4=true update && apt-get -o Acquire::ForceIPv4=true
      install -y     ros-kinetic-ros-core=1.3.2-0*     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./ros_entrypoint.sh
    - /
  - CmdLine:
    - /ros_entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - apt-get -o Acquire::ForceIPv4=true update  && apt-get -o Acquire::ForceIPv4=true
      install -yq --no-install-recommends     libeigen3-dev     ros-kinetic-cv-bridge     ros-kinetic-image-transport     liborocos-kdl-dev     ros-kinetic-tf2-sensor-msgs  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ${HOME}/nanomap_ros
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ${HOME}/nanomap_ros
  - CmdLine:
    - mkdir -p ${HOME}/catkin_ws/src && ln -s ${HOME}/nanomap_ros ${HOME}/catkin_ws/src/.
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${HOME}/catkin_ws  && apt-get -o Acquire::ForceIPv4=true update  && /bin/bash
      -c "source /opt/ros/${ROS_DISTRO}/setup.bash && rosdep update && rosdep install
      --as-root apt:false --from-paths src --ignore-src -r -y"  && apt-get clean  &&
      rm -rf /var/lib/apt/lists/*  && /bin/bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash
      && catkin_make"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source ~/catkin_ws/devel/setup.bash" >> ${HOME}/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ${NB_UID} ${HOME}
    Name: run
    PrependShell: true
  - Name: user
    User: ${NB_USER}
  - Name: workdir
    Path: ${HOME}/nanomap_ros
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
