{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.8-alpine",
      "SourceCode": "FROM python:3.8-alpine",
      "Platform": "",
      "From": {
        "Image": "python:3.8-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache gettext bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONFAULTHANDLER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "requirements.txt",
            "/app/requirements.txt"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/local/bin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps build-base linux-headers libffi-dev \u0026\u0026     apk add --no-cache git postgresql-dev jpeg-dev zlib-dev freetype-dev \u0026\u0026     pip install -r requirements.txt \u0026\u0026     apk del git postgresql-dev jpeg-dev zlib-dev freetype-dev \u0026\u0026     apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache jpeg zlib freetype postgresql libffi wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache git make musl-dev go"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOROOT",
              "Value": "/usr/lib/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${GOPATH}/src ${GOPATH}/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget https://github.com/slackhq/nebula/archive/v1.0.0.tar.gz \u0026\u0026     tar -zxf v1.0.0.tar.gz \u0026\u0026     cd nebula-1.0.0 \u0026\u0026     make bin-linux \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "python manage.py runserver 0.0.0.0:8000"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}