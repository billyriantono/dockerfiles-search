MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update  && apt-get install -y     build-essential     gcc-multilib     zlib1g-dev     curl     wget     cmake     python     python-pip     python-dev     python2.7-dev     python-numpy     python-matplotlib     hdf5-tools     libhdf5-dev     hdf5-helpers     libhdf5-serial-dev     libssh2-1-dev     libcurl4-openssl-dev     icu-devtools     libssl-dev     libxml2-dev     r-bioc-biobase     git     apt-utils     pigz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     wget -q https://github.com/BenLangmead/bowtie2/releases/download/v2.3.4.1/bowtie2-2.3.4.1-linux-x86_64.zip
      &&     unzip bowtie2-2.3.4.1-linux-x86_64.zip &&     cd bowtie2-2.3.4.1-linux-x86_64
      &&     cp bowtie2 bowtie2-align-l bowtie2-align-s bowtie2-build bowtie2-build-l
      bowtie2-build-s bowtie2-inspect bowtie2-inspect-l bowtie2-inspect-s /usr/local/bin/
      &&     cd /usr/local/bin/ &&     chmod ugo+x bowtie2 bowtie2-align-l bowtie2-align-s
      bowtie2-build bowtie2-build-l bowtie2-build-s bowtie2-inspect bowtie2-inspect-l
      bowtie2-inspect-s &&     cd /tmp &&     rm -rf bowtie2-2.3.4.1-linux-x86_64
      bowtie2-2.3.4.1-linux-x86_64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o
      "/v.*\"" | sed 's:^..\(.*\).$:\1:'` &&     curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb"
      > tini.deb &&     dpkg -i tini.deb &&     rm tini.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&     apt-get purge &&     rm -rf /var/lib/apt/lists/* /tmp/*
      /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd fuse &&     useradd --create-home --shell /bin/bash --user-group --uid
      1000 --groups sudo,fuse docker &&     echo `echo "docker\ndocker\n" | passwd
      docker` &&     mkdir /data /config ${REF_DIR} &&     chown docker:docker /data
      /config ${REF_DIR} &&     chmod -R 755 /data /config ${REF_DIR}
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - Env:
    - Key: PATH
      Value: $PATH:/home/docker/bin
    Name: env
  - Env:
    - Key: HOME
      Value: /home/docker
    Name: env
  - Name: workdir
    Path: /home/docker
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
