MetaArgs: null
Stages:
- BaseName: qeddockerhub/koboform_base:latest
  Commands:
  - Env:
    - Key: KPI_LOGS_DIR
      Value: /srv/logs
    - Key: KPI_WHOOSH_DIR
      Value: /srv/whoosh
    - Key: BUILD_DIR
      Value: /srv/build
    - Key: FONTS_DIR
      Value: /srv/fonts
    - Key: WEBPACK_STATS_PATH
      Value: /srv/webpack-stats.json
    - Key: DJANGO_SETTINGS_MODULE
      Value: kobo.settings
    - Key: NGINX_STATIC_DIR
      Value: /srv/static
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./dependencies/apt_requirements.txt
    - '"${KPI_SRC_DIR}/dependencies/"'
  - CmdLine:
    - if ! diff "${KPI_SRC_DIR}/dependencies/apt_requirements.txt" /srv/tmp/base__apt_requirements.txt;
      then         apt-get update -qq &&         apt-get install -qqy $(cat "${KPI_SRC_DIR}/dependencies/apt_requirements.txt")
      &&         apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     ;
      fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./dependencies/pip/external_services.txt
    - '"${KPI_SRC_DIR}/dependencies/pip/"'
  - Name: workdir
    Path: ${PIP_DIR}/
  - CmdLine:
    - if ! diff "${KPI_SRC_DIR}/dependencies/pip/external_services.txt" /srv/tmp/base__external_services.txt;
      then         pip-sync "${KPI_SRC_DIR}/dependencies/pip/external_services.txt"
      1>/dev/null     ; fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./package.json
    - '"${KPI_SRC_DIR}/"'
  - Name: workdir
    Path: ${KPI_SRC_DIR}/
  - CmdLine:
    - if ! diff "${KPI_SRC_DIR}/package.json" /srv/tmp/base_package.json; then         npm
      install --quiet || npm install --quiet     ; fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/copy_fonts.py
    - ${KPI_SRC_DIR}/scripts/copy_fonts.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/generate_icons.js
    - ${KPI_SRC_DIR}/scripts/generate_icons.js
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./webpack
    - ${KPI_SRC_DIR}/webpack
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.eslintrc
    - ${KPI_SRC_DIR}/.eslintrc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./test
    - ${KPI_SRC_DIR}/test
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./jsapp
    - ${KPI_SRC_DIR}/jsapp
  - CmdLine:
    - mkdir "${BUILD_DIR}" &&     mkdir "${FONTS_DIR}" &&     ln -s "${BUILD_DIR}"
      "${KPI_SRC_DIR}/jsapp/compiled" &&     rm -rf "${KPI_SRC_DIR}/jsapp/fonts" &&     ln
      -s "${FONTS_DIR}" "${KPI_SRC_DIR}/jsapp/fonts" &&     ln -s "${WEBPACK_STATS_PATH}"
      webpack-stats.json
    Name: run
    PrependShell: true
  - CmdLine:
    - npm run copy-fonts && npm run build
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf "${KPI_SRC_DIR}"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - '"${KPI_SRC_DIR}"'
  - CmdLine:
    - ln -s "${KPI_NODE_PATH}" "${KPI_SRC_DIR}/node_modules" &&     ln -s "${BUILD_DIR}"
      "${KPI_SRC_DIR}/jsapp/compiled" &&     ln -s "${FONTS_DIR}" "${KPI_SRC_DIR}/jsapp/fonts"
      &&     ln -s "${WEBPACK_STATS_PATH}" webpack-stats.json
    Name: run
    PrependShell: true
  - CmdLine:
    - python manage.py collectstatic --noinput
    Name: run
    PrependShell: true
  - CmdLine:
    - git submodule init &&     git submodule update --remote &&     python manage.py
      compilemessages
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "${KPI_LOGS_DIR}/" "${KPI_WHOOSH_DIR}/" "${KPI_SRC_DIR}/emails"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'source /etc/profile' >> /root/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: C_FORCE_ROOT
      Value: '"true"'
    Name: env
  - CmdLine:
    - ln -s "${KPI_SRC_DIR}/docker/init.bash" /etc/my_init.d/10_init_kpi.bash &&     rm
      -rf /etc/service/wsgi &&     mkdir -p /etc/service/uwsgi &&     ln -s "${KPI_SRC_DIR}/docker/run_uwsgi.bash"
      /etc/service/uwsgi/run &&     mkdir -p /etc/service/celery &&     ln -s "${KPI_SRC_DIR}/docker/run_celery.bash"
      /etc/service/celery/run &&     mkdir -p /etc/service/celery_sync_kobocat_xforms
      &&     ln -s "${KPI_SRC_DIR}/docker/run_celery_sync_kobocat_xforms.bash" /etc/service/celery_sync_kobocat_xforms/run
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  From:
    Image: qeddockerhub/koboform_base:latest
  Name: ""
  Platform: ""
  SourceCode: FROM qeddockerhub/koboform_base:latest
