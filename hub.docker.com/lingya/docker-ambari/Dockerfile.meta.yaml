MetaArgs: null
Stages:
- BaseName: sequenceiq/dnsmasq:pam-fix
  Commands:
  - Maintainer: SequenceIQ
    Name: maintainer
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ambari.repo
    - /etc/yum.repos.d/
  - CmdLine:
    - yum install -y ambari-server ambari-agent
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y tar git curl
    Name: run
    PrependShell: true
  - CmdLine:
    - ambari-server setup --silent
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - serf
    - /usr/local/serf
  - CmdLine:
    - yum install -y curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://api.github.com/repos/sequenceiq/docker-ssh/tarball/master|tar
      -xz -C /usr/local/serf --strip-components=2 --touch \*/serf
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://raw.githubusercontent.com/sequenceiq/docker-ssh/master/install-ssh.sh
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "/pam_limits/ s/^/#/" /etc/pam.d/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - hdp.repo
    - /etc/yum.repos.d/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - download-warmup-deps.sh
    - /tmp/
  - CmdLine:
    - chmod +x  /tmp/download-warmup-deps.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /tmp/download-warmup-deps.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y ambari-log4j hadoop hadoop-libhdfs hadoop-lzo hadoop-lzo-native
      hadoop-mapreduce hadoop-mapreduce-historyserver hadoop-yarn hadoop-yarn-nodemanager
      hadoop-yarn-proxyserver hadoop-yarn-resourcemanager lzo net-snmp net-snmp-utils
      snappy snappy-devel unzip zookeeper hbase
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /tmp/ambari-shell.jar https://s3-eu-west-1.amazonaws.com/maven.sequenceiq.com/releases/com/sequenceiq/ambari-shell/0.1.23/ambari-shell-0.1.23.jar
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install-cluster.sh
    - /tmp/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - wait-for-host-number.sh
    - /tmp/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ambari-shell.sh
    - /tmp/
  - Env:
    - Key: JAVA_HOME
      Value: /usr/jdk64/jdk1.7.0_67
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$JAVA_HOME/bin
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - rm -rf /tmp/.s.PGSQL.5432.*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - public-hostname.sh
    - /etc/ambari-agent/conf/public-hostname.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - internal-hostname.sh
    - /etc/ambari-agent/conf/internal-hostname.sh
  - CmdLine:
    - sed -i "/\[agent\]/ a public_hostname_script=\/etc\/ambari-agent\/conf\/public-hostname.sh"
      /etc/ambari-agent/conf/ambari-agent.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "/\[agent\]/ a hostname_script=\/etc\/ambari-agent\/conf\/internal-hostname.sh"
      /etc/ambari-agent/conf/ambari-agent.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/log/hadoop-metrics && chmod 777 /var/log/hadoop-metrics
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - hadoop-metrics2.properties.j2
    - /var/lib/ambari-server/resources/stacks/HDP/2.0.6/hooks/before-START/templates/hadoop-metrics2.properties.j2
  - Name: volume
    Volumes:
    - /var/log
  - CmdLine:
    - sed -i "s/agent.task.timeout=900/agent.task.timeout=2000/" /etc/ambari-server/conf/ambari.properties
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /usr/local/serf/bin/start-serf-agent.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --log-level
    - debug
    Name: cmd
    PrependShell: false
  From:
    Image: sequenceiq/dnsmasq:pam-fix
  Name: ""
  Platform: ""
  SourceCode: FROM sequenceiq/dnsmasq:pam-fix
