MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update bash && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PG_MAJOR
      Value: "9.6"
    Name: env
  - Env:
    - Key: PG_VERSION
      Value: 9.6.1
    Name: env
  - Env:
    - Key: PG_SHA256
      Value: e5101e0a49141fc12a7018c6dad594694d3a3325f5ab71e93e0e51bd94e51fcd
    Name: env
  - CmdLine:
    - "set -ex \t\t&& apk add --no-cache --virtual .fetch-deps \t\tca-certificates
      \t\topenssl \t\ttar \t\t&& wget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\"
      \t&& echo \"$PG_SHA256 *postgresql.tar.bz2\" | sha256sum -c - \t&& mkdir -p
      /usr/src/postgresql \t&& tar \t\t--extract \t\t--file postgresql.tar.bz2 \t\t--directory
      /usr/src/postgresql \t\t--strip-components 1 \t&& rm postgresql.tar.bz2 \t\t&&
      apk add --no-cache --virtual .build-deps \t\tbison \t\tflex \t\tgcc \t\tlibc-dev
      \t\tlibedit-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tmake \t\topenssl-dev \t\tperl
      \t\tutil-linux-dev \t\tzlib-dev \t\t&& cd /usr/src/postgresql \t&& ./configure
      \t\t--enable-integer-datetimes \t\t--enable-thread-safety \t\t--enable-tap-tests
      \t\t--disable-rpath \t\t--with-uuid=e2fs \t\t--with-gnu-ld \t\t--with-pgport=5432
      \t\t--with-system-tzdata=/usr/share/zoneinfo \t\t--prefix=/usr/local \t\t\t\t--with-openssl
      \t\t--with-libxml \t\t--with-libxslt \t&& make -j \"$(getconf _NPROCESSORS_ONLN)\"
      world \t&& make install-world \t&& make -C contrib install \t\t&& runDeps=\"$(
      \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk '{ gsub(/,/,
      \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info
      --installed \t\t\t| sort -u \t)\" \t&& apk add --no-cache --virtual .postgresql-rundeps
      \t\t$runDeps \t\tbash \t\tsu-exec \t\ttzdata \t&& apk del .fetch-deps .build-deps
      \t&& cd / \t&& rm -rf \t\t/usr/src/postgresql \t\t/usr/local/include/* \t\t/usr/local/share/doc
      \t\t/usr/local/share/man \t&& find /usr/local -name '*.a' -delete"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/local/share/postgresql/postgresql.conf.sample
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/postgresql && chown -R postgres /var/run/postgresql
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/lib/postgresql/$PG_MAJOR/bin:$PATH
    Name: env
  - CmdLine:
    - apk add  musl
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update libbz2 libcrypto1.0 expat libffi gdbm ncurses-libs readline
      sqlite-libs libssl1.0 zlib
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add python
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add --virtual ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add python postgresql-libs &&     apk --no-cache add --virtual
      build-dependencies python-dev gcc musl-dev postgresql-dev wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add postgresql-contrib
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - version.json
    - /opt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "5432"
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
