MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Chown: ""
    Name: add
    SourcesAndDest:
    - entrypoint.sh
    - /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - password.py
    - /opt/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - env.sh
    - /opt/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - handlers.py
    - /opt/
  - CmdLine:
    - apt-get update -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y unzip wget curl tar bzip2 software-properties-common git
      vim gcc openjdk-8-jre
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install yarn -g
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/bin:/usr/lib:/etc/alternatives:/var/lib/dpkg/alternatives
    Name: env
  - CmdLine:
    - echo 'export JAVA_HOME="/usr/bin"' >> ~/.bashrc &&     echo 'export PATH="$PATH:/usr/bin:/usr/lib"'
      >> ~/.bashrc &&     bash ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -C - -b "oraclelicense=accept-securebackup-cookie" -O http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip
      &&    unzip jce_policy-8.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - cp UnlimitedJCEPolicyJDK8/US_export_policy.jar /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security
      && cp UnlimitedJCEPolicyJDK8/local_policy.jar /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf UnlimitedJCEPolicyJDK8
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && wget https://www-eu.apache.org/dist/spark/spark-2.4.1/spark-2.4.1-bin-hadoop2.7.tgz
      &&    tar xzvf /opt/spark-2.4.1-bin-hadoop2.7.tgz &&    rm  /opt/spark-2.4.1-bin-hadoop2.7.tgz
    Name: run
    PrependShell: true
  - Env:
    - Key: SPARK_HOME
      Value: /opt/spark-2.4.1-bin-hadoop2.7
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/$SPARK_HOME/bin/
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - core-site.xml.apiKey
    - $SPARK_HOME/conf/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - log4j2.xml.default
    - $SPARK_HOME/conf/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - hive-site.xml
    - $SPARK_HOME/conf/
  - CmdLine:
    - mkdir -p /user && mkdir -p /user/notebooks && mkdir -p /user/datasets && chmod
      777 /entrypoint.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    Name: env
  - CmdLine:
    - cd /opt &&     wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      &&     /bin/bash Miniconda3-latest-Linux-x86_64.sh  -b -p $CONDA_DIR &&      rm
      -rf Miniconda3-latest-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - export PATH=$PATH:$CONDA_DIR/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - $CONDA_DIR/bin/conda install --yes     'notebook>=5.6.0' &&     $CONDA_DIR/bin/conda
      clean -yt
    Name: run
    PrependShell: true
  - CmdLine:
    - $CONDA_DIR/bin/jupyter notebook  --generate-config --allow-root
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && $CONDA_DIR/bin/conda install --yes     'ipywidgets'     'pandas'     'matplotlib'     'scipy'     'seaborn'     'scikit-learn'
      &&     $CONDA_DIR/bin/conda clean -yt
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install 'python==3.6.7'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install modin &&    pip install xgboost &&    pip install lightgbm &&    pip
      install py4j &&    pip install plotly &&    pip install pyspark &&    pip install
      featuretools &&    pip install setproctitle &&    pip uninstall -y numpy &&    pip
      install numpy==1.14 &&    pip install mleap
    Name: run
    PrependShell: true
  - CmdLine:
    - $CONDA_DIR/bin/conda config --set auto_update_conda False
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://repo.lentiq.com/Getting%20Started%20Guide%20%2811%29.ipynb -O /user/notebooks/Getting\
      Started\ Guide.ipynb &&     wget https://repo.lentiq.com/recommender_systems_webinar%20%281%29.ipynb
      -O /user/notebooks/Recommender\ Systems\ Guide.ipynb &&     mkdir /user/notebooks/recommender/
      &&     mkdir /user/notebooks/recommender/pictures &&     wget https://repo.lentiq.com/Recommender-1.jpg
      -O /user/notebooks/recommender/pictures/Recommender-1.jpg &&     wget https://repo.lentiq.com/Recommender-2.jpg
      -O /user/notebooks/recommender/pictures/Recommender-2.jpg &&     wget https://repo.lentiq.com/Recommender-3.jpg
      -O /user/notebooks/recommender/pictures/Recommender-3.jpg &&     wget https://repo.lentiq.com/mleap-0.8.1-py36.patch
      -O /opt/mleap-0.8.1-py36.patch &&     patch -p0 -d /opt/conda/lib/python3.6/site-packages/
      < /opt/mleap-0.8.1-py36.patch &&     rm -rf /opt/mleap-0.8.1-py36.patch &&     wget
      https://repo.lentiq.com/scikit-learn%20model%20serving%20example.ipynb -O /user/notebooks/Scikit-learn\
      model\ training\ example.ipynb &&     wget https://repo.lentiq.com/pySpark%20model%20serving%20example.ipynb
      -O /user/notebooks/Pyspark\ model\ training\ example.ipynb &&     wget https://repo.lentiq.com/update%20serving%20model%20%281%29.ipynb
      -O /user/notebooks/Update\ serving\ model\ example.ipynb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y make
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install nose pillow
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt &&     wget https://repo.lentiq.com/bigstepdatalake-0.11.1-bin.tar.gz
      &&     tar -xzvf bigstepdatalake-0.11.1-bin.tar.gz &&     rm -rf /opt/bigstepdatalake-0.11.1-bin.tar.gz
      &&     cd /opt/bigstepdatalake-0.11.1/lib/ &&     wget http://repo.uk.bigstepcloud.com/bigstep/bdl/BDL_libs/libhadoop.so
      &&     cp /opt/bigstepdatalake-0.11.1/lib/* $SPARK_HOME/jars/ &&     export
      PATH=/opt/bigstepdatalake-0.11.1/bin:$PATH &&     echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/bigstepdatalake-0.11.1/lib/:$SPARK_HOME/jars/'
      >> ~/.bashrc &&     bash ~/.bashrc &&     pip install http://repo.bigstepcloud.com/lentiq/python-mleap-0.13.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt &&     wget https://repo.lentiq.com/bdl_client_python_1.0.0.tar.gz &&     tar
      -xzvf bdl_client_python_1.0.0.tar.gz &&     rm -rf /opt/bdl_client_python_1.0.0.tar.gz
      &&     cd ./bdl_client_python &&     pip install . &&     cd .. &&     rm -rf
      bdl_client_python &&     wget https://repo.lentiq.com/jupyter_shared_notebook_module_0.3.tar.gz
      &&     tar -xzvf jupyter_shared_notebook_module_0.3.tar.gz &&     rm -rf /opt/jupyter_shared_notebook_module_0.3.tar.gz
      &&     cd ./jupyter_shared_notebook_module &&     pip install . &&     cd ..
      &&     rm -rf jupyter_shared_notebook_module &&     jupyter nbextension install
      --py bdl_notebooks --sys-prefix &&     jupyter nbextension enable --py bdl_notebooks
      --sys-prefix &&     jupyter serverextension enable --py bdl_notebooks --sys-prefix
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $SPARK_HOME/jars/ &&    wget http://repo.bigstepcloud.com/bigstep/datalab/hive-schema-1.2.0.postgres.sql
      &&    wget http://repo.bigstepcloud.com/bigstep/datalab/hive-txn-schema-0.13.0.postgres.sql
      &&    wget http://repo.bigstepcloud.com/bigstep/datalab/hive-txn-schema-0.14.0.postgres.sql
      &&    wget https://jdbc.postgresql.org/download/postgresql-9.4.1212.jar -P $SPARK_HOME/jars/
      &&    add-apt-repository "deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg
      main" &&    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc
      | apt-key add - &&    apt-get install -y postgresql-client
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/bigstepdatalake-0.11.1/bin:$PATH
    Name: env
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
