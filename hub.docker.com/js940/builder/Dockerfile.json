{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKER_BUCKET",
              "Value": "\"download.docker.com\""
            },
            {
              "Key": "DOCKER_CHANNEL",
              "Value": "\"stable\""
            },
            {
              "Key": "DOCKER_SHA256",
              "Value": "\"8b886106cfc362f1043debfe178c35b6f73ec42380b034a3919a235fe331e053\""
            },
            {
              "Key": "DOCKER_VERSION",
              "Value": "\"18.09.3\""
            },
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "\"1.23.2\""
            },
            {
              "Key": "DIND_COMMIT",
              "Value": "\"3b5fac462d21ca164b3778647420016315289034\""
            },
            {
              "Key": "GITVERSION_VERSION",
              "Value": "\"4.0.0\""
            },
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "\"noninteractive\""
            },
            {
              "Key": "SRC_DIR",
              "Value": "\"/usr/src\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 echo 'Acquire::CompressionTypes::Order:: \"gz\";' \u003e /etc/apt/apt.conf.d/99use-gzip-compression     \u0026\u0026 apt-get update     \u0026\u0026 apt install -y apt-transport-https     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install software-properties-common -y --no-install-recommends     \u0026\u0026 apt-add-repository ppa:git-core/ppa     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install git=1:2.* -y --no-install-recommends     \u0026\u0026 git version     \u0026\u0026 apt-get install -y --no-install-recommends openssh-client     \u0026\u0026 mkdir ~/.ssh     \u0026\u0026 touch ~/.ssh/known_hosts     \u0026\u0026 ssh-keyscan -t rsa,dsa -H github.com \u003e\u003e ~/.ssh/known_hosts     \u0026\u0026 ssh-keyscan -t rsa,dsa -H bitbucket.org \u003e\u003e ~/.ssh/known_hosts     \u0026\u0026 chmod 600 ~/.ssh/known_hosts     \u0026\u0026 apt-get install -y --no-install-recommends        wget python3 python3-dev python3-pip python3-setuptools fakeroot ca-certificates jq        netbase gnupg dirmngr bzr mercurial procps        tar gzip zip autoconf automake        bzip2 file g++ gcc imagemagick        libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev        libevent-dev libffi-dev libgeoip-dev libglib2.0-dev        libjpeg-dev libkrb5-dev liblzma-dev        libmagickcore-dev libmagickwand-dev libmysqlclient-dev        libncurses5-dev libpq-dev libreadline-dev        libsqlite3-dev libssl-dev libtool libwebp-dev        libxml2-dev libxslt1-dev libyaml-dev make        patch xz-utils zlib1g-dev unzip curl        e2fsprogs iptables xfsprogs        mono-devel less groff liberror-perl        asciidoc build-essential bzr cvs cvsps docbook-xml docbook-xsl dpkg-dev        libdbd-sqlite3-perl libdbi-perl libdpkg-perl libhttp-date-perl        libio-pty-perl libserf-1-1 libsvn-perl libsvn1 libtcl8.6 libtimedate-perl        libxml2-utils libyaml-perl python-bzrlib python-configobj        sgml-base sgml-data subversion tcl tcl8.6 xml-core xmlto xsltproc        tk gettext gettext-base libapr1 libaprutil1 xvfb expect parallel     \u0026\u0026 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF     \u0026\u0026 echo \"deb https://download.mono-project.com/repo/ubuntu stable-bionic main\" | tee /etc/apt/sources.list.d/mono-official-stable.list     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         vim locales     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "\"en_US.UTF-8\""
            },
            {
              "Key": "LANG",
              "Value": "\"en_US.UTF-8\""
            },
            {
              "Key": "LANGUAGE",
              "Value": "\"en_US.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 wget \"https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion-bin-net40-v${GITVERSION_VERSION}.zip\" -O /tmp/GitVersion_${GITVERSION_VERSION}.zip     \u0026\u0026 mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION}     \u0026\u0026 unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION}     \u0026\u0026 rm /tmp/GitVersion_${GITVERSION_VERSION}.zip     \u0026\u0026 echo \"mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe \\$@\" \u003e\u003e /usr/local/bin/gitversion     \u0026\u0026 chmod +x /usr/local/bin/gitversion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz     \u0026\u0026 echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c -     \u0026\u0026 tar --extract --file docker.tgz --strip-components 1  --directory /usr/local/bin/     \u0026\u0026 rm docker.tgz     \u0026\u0026 docker -v     \u0026\u0026 addgroup dockremap     \u0026\u0026 useradd -g dockremap dockremap     \u0026\u0026 echo 'dockremap:165536:65536' \u003e\u003e /etc/subuid     \u0026\u0026 echo 'dockremap:165536:65536' \u003e\u003e /etc/subgid     \u0026\u0026 wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind     \u0026\u0026 curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 \u003e /usr/local/bin/docker-compose     \u0026\u0026 chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose     \u0026\u0026 docker-compose version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 pip3 install awscli boto3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" \u0026\u0026     echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \u0026\u0026     echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list \u0026\u0026     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \u0026\u0026     apt-get update -y \u0026\u0026 apt-get install kubectl -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://raw.githubusercontent.com/helm/helm/master/scripts/get \u003e get_helm.sh     \u0026\u0026 chmod 700 get_helm.sh     \u0026\u0026 ./get_helm.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ssh_config",
            "/root/.ssh/config"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dockerd-entrypoint.sh",
            "/usr/local/bin/"
          ]
        }
      ]
    }
  ]
}