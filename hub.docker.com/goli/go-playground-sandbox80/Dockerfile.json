{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:1.5",
      "SourceCode": "FROM golang:1.5",
      "Platform": "",
      "From": {
        "Image": "golang:1.5"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -yq --no-install-recommends patch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "enable-fake-time.patch",
            "/usr/local/go/"
          ]
        },
        {
          "CmdLine": [
            "patch /usr/local/go/src/runtime/rt0_nacl_amd64p32.s /usr/local/go/enable-fake-time.patch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fake_fs.lst",
            "/usr/local/go/"
          ]
        },
        {
          "CmdLine": [
            "cd /usr/local/go \u0026\u0026 go run misc/nacl/mkzip.go -p syscall fake_fs.lst src/syscall/fstest_nacl.go"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz | tar -xz -C /root \u0026\u0026 mv /root/go /root/go1.4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/go/src \u0026\u0026 GOOS=nacl GOARCH=amd64p32 ./make.bash --no-clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/bin \u0026\u0026 curl -s -O https://storage.googleapis.com/gobuilder/sel_ldr_x86_64 \u0026\u0026 chmod 0755 sel_ldr_x86_64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "GOOS=nacl GOARCH=amd64p32 go get \tgolang.org/x/tour/pic \tgolang.org/x/tour/reader \tgolang.org/x/tour/tree \tgolang.org/x/tour/wc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $GOPATH/src/code.google.com/p/go-tour \u0026\u0026 \tcp -R $GOPATH/src/golang.org/x/tour/* $GOPATH/src/code.google.com/p/go-tour/ \u0026\u0026 \tsed -i 's_// import_// public import_' $(find $GOPATH/src/code.google.com/p/go-tour/ -name *.go) \u0026\u0026 \tgo install \t\tcode.google.com/p/go-tour/pic \t\tcode.google.com/p/go-tour/reader \t\tcode.google.com/p/go-tour/tree \t\tcode.google.com/p/go-tour/wc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/go/src/sandbox/"
          ]
        },
        {
          "CmdLine": [
            "go install sandbox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/go/bin/sandbox test"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/go/bin/sandbox"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}