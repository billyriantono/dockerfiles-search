MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Maintainer: Daniel Guerra <daniel.guerra69@gmail.com>
    Name: maintainer
  - Env:
    - Key: KIBANA_VER
      Value: 5.5.2
    Name: env
  - CmdLine:
    - apk --update --no-cache add nodejs openssl ca-certificates && cd /usr/share
      && wget https://artifacts.elastic.co/downloads/kibana/kibana-$KIBANA_VER-linux-x86_64.tar.gz
      -O - | tar xvfz - && mv kibana-$KIBANA_VER-linux-x86_64 kibana && rm -rf kibana/node
      && apk del openssl ca-certificates && rm  -rf /tmp/* /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup kibana
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser  -G kibana -s /bin/false -D kibana
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R kibana:kibana /usr/share/kibana
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/#elasticsearch\.url/elasticsearch\.url/g" /usr/share/kibana/config/kibana.yml
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/localhost:9200/elasticsearch:9200/g" /usr/share/kibana/config/kibana.yml
    Name: run
    PrependShell: true
  - CmdLine:
    - 'sed -i "s/#server.host: \"localhost\"/server.host: \"0\.0\.0\.0\"/g" /usr/share/kibana/config/kibana.yml'
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/:\/bin/:\/bin:\/usr\/share\/kibana\/bin/" /etc/profile
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/sbin
  - Name: expose
    Ports:
    - "5601"
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - kibana
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
