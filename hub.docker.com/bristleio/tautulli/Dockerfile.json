{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "lsiobase/mono.armhf",
      "SourceCode": "FROM lsiobase/mono.armhf",
      "Platform": "",
      "From": {
        "Image": "lsiobase/mono.armhf"
      },
      "Commands": [
        {
          "Maintainer": "loganavatar",
          "Name": "maintainer"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "\"noninteractive\""
        },
        {
          "Env": [
            {
              "Key": "XDG_CONFIG_HOME",
              "Value": "\"/config/xdg\""
            }
          ],
          "Name": "env"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "GIT_URL",
          "Name": "arg",
          "Value": "'https://github.com/JonnyWong16/plexpy'"
        },
        {
          "Labels": [
            {
              "Key": "build_version",
              "Value": "\"bristle.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "qemu-arm-static",
            "/usr/bin/qemu-arm-static"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026  apt-get install -y   git \u0026\u0026  remotecheck=$(git ls-remote --tags $GIT_URL $VERSION | wc -l) \u0026\u0026  if [ $remotecheck = 0 ]; then     echo \"Bad tag name, $VERSION\" \u0026\u0026     exit 1;   else     echo \"Cloning $VERSION\" \u0026\u0026     git clone --branch $VERSION --depth 1 $GIT_URL /app/plexpy;  fi \u0026\u0026  apt-get clean \u0026\u0026  rm -rf   /tmp/* \t/var/lib/apt/lists/* \t/var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/",
            "/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/logs"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8181"
          ]
        }
      ]
    }
  ]
}