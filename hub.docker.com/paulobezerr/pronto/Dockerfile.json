{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2",
      "SourceCode": "FROM ruby:2",
      "Platform": "",
      "From": {
        "Image": "ruby:2"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PRONTO_ROOT",
              "Value": "/data"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$PRONTO_ROOT"
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y apt-transport-https lsb-release ca-certificates     \u0026\u0026 wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg     \u0026\u0026 echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" \u003e /etc/apt/sources.list.d/php.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install -y cmake php7.0-cli php7.0-xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install pronto -v \"\u003c 0.8.2\" \u0026\u0026     gem install pronto-phpcs \u0026\u0026     gem install pronto-phpmd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/composer/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require     squizlabs/php_codesniffer     phpmd/phpmd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pronto",
            "run"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/data"
        }
      ]
    }
  ]
}