{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:fpm",
      "SourceCode": "FROM php:fpm",
      "Platform": "",
      "From": {
        "Image": "php:fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "\"MAINTAINER\"",
              "Value": "\"Sakarin Kammanee \u003cSakarin@coe.phuket.psu.ac.th\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Bangkok"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026      apt-get install -y --no-install-recommends     gcc     libpcre3-dev     libxml2-dev \tzlib1g-dev     libjpeg62-turbo-dev     libpng-dev     libfreetype6-dev     libzip-dev     make automake autoconf     git \u0026\u0026     docker-php-ext-install iconv mbstring \u0026\u0026     docker-php-ext-install pdo pdo_mysql \u0026\u0026     docker-php-ext-install mysqli \u0026\u0026     docker-php-ext-install zip xml \u0026\u0026     docker-php-ext-configure gd --enable-gd-native-ttf --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/jbboehr/php-psr.git /root/psr \u0026\u0026     cd /root/psr \u0026\u0026     phpize \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make test \u0026\u0026     make install \u0026\u0026     echo \"extension=psr.so\" \u003e /usr/local/etc/php/conf.d/29-psr.ini \u0026\u0026     cd \u0026\u0026 rm -Rf /root/psr"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends libssl-dev \u0026\u0026     pecl install mongodb \u0026\u0026     echo \"extension=mongodb.so\" \u003e /usr/local/etc/php/conf.d/mongo.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"post_max_size=21M\" \u003e /usr/local/etc/php/conf.d/custom.ini \u0026\u0026      echo \"upload_max_filesize=20M\" \u003e\u003e /usr/local/etc/php/conf.d/custom.ini \u0026\u0026     echo \"session.gc_maxlifetime=86400\" \u003e\u003e /usr/local/etc/php/conf.d/custom.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b v4.0.0-alpha1 --single-branch git://github.com/phalcon/cphalcon.git /root/buildphalcon"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/buildphalcon/build/php7/64bits \u0026\u0026     phpize \u0026\u0026 export CFLAGS=\"-O2 -s\" \u0026\u0026     ./configure \u0026\u0026 make -j 8 \u0026\u0026 make install \u0026\u0026     echo \"extension=phalcon.so\" \u003e /usr/local/etc/php/conf.d/30-phalcon.ini \u0026\u0026     rm -Rf /root/buildphalcon"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026     git clone https://github.com/phalcon/phalcon-devtools.git \u0026\u0026     cd /root/phalcon-devtools \u0026\u0026     ln -s ~/phalcon-devtools/phalcon.php /usr/bin/phalcon \u0026\u0026     chmod ugo+x /usr/bin/phalcon"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -Rf /root/buildphalcon"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}