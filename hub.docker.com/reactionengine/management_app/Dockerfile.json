{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker.io/ubuntu:18.10",
      "SourceCode": "FROM docker.io/ubuntu:18.10",
      "Platform": "",
      "From": {
        "Image": "docker.io/ubuntu:18.10"
      },
      "Commands": [
        {
          "Maintainer": "Viktor Horvath \u003csupport@reaction-engine.org\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "mkdir /local \u0026\u0026 mkdir /local/reaction \u0026\u0026 mkdir /local/reaction/install \u0026\u0026 mkdir /local/reaction/install/management_app \u0026\u0026 mkdir /local/reaction/management_app_log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install -y vim wget unzip curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y sudo \u0026\u0026 echo root:root | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python3-venv python3-dev python3-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/python3.6 -m venv /local/reaction/venv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y apache2 apache2-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install build-essential \u0026\u0026 /bin/bash -c \"source /local/reaction/venv/bin/activate \u0026\u0026 pip install -I mod_wsgi==4.6.4\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_USER",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_GROUP",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_LOCK_DIR",
              "Value": "/var/lock/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_LOG_DIR",
              "Value": "/var/log/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_PID_FILE",
              "Value": "/var/run/apache2/apache2.pid"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_SERVER_NAME",
              "Value": "localhost"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_DIR",
              "Value": "/var/run/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -y install libaio1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://bitbucket.org/ric_flair_wcw/reaction-storage-v1_1/downloads/oracle-instantclient12.2-basic-12.2.0.1.0-1.x86_64.rpm -P /local/reaction/install/management_app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install alien \u0026\u0026 alien -i /local/reaction/install/management_app/oracle-instantclient12.2-basic-12.2.0.1.0-1.x86_64.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://bitbucket.org/ric_flair_wcw/reaction-storage-v1_1/downloads/reaction_management_app_v1_1.zip -P /local/reaction/install/management_app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip /local/reaction/install/management_app/reaction_management_app_v1_1.zip -d /local/reaction/install/management_app \u0026\u0026 rm -f /local/reaction/install/management_app/reaction_management_app_v1_1.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libssl-dev libffi-dev \u0026\u0026 apt-get install -y language-pack-en"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c \"source /local/reaction/venv/bin/activate \u0026\u0026 export LC_ALL=en_US.UTF-8 \u0026\u0026 export LC_CTYPE=en_US.UTF-8 \u0026\u0026 pip install wheel \u0026\u0026 pip install -r /local/reaction/install/management_app/requirements.txt\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip /local/reaction/install/management_app/management_app-1.1.zip -d /local/reaction/management_app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s|'filename' : 'reaction_debug.log'|'filename' : '/local/reaction/management_app_log/reaction_debug.log'|g\" /local/reaction/management_app/management_app/settings_reaction.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '\u003cVirtualHost *:80\u003e\\n  LoadModule wsgi_module /local/reaction/venv/lib/python3.6/site-packages/mod_wsgi/server/mod_wsgi-py36.cpython-36m-x86_64-linux-gnu.so\\n  Alias /reaction-management/static /local/reaction/management_app/static\\n  \u003cDirectory /local/reaction/management_app/static\u003e\\n    Allow from all\\n    Require all granted\\n  \u003c/Directory\u003e\\n  \u003cDirectory /local/reaction/management_app/management_app\u003e\\n    \u003cFiles wsgi.py\u003e\\n      Require all granted\\n    \u003c/Files\u003e\\n  \u003c/Directory\u003e\\n  WSGIDaemonProcess management-app python-path=/local/reaction/management_app:/local/reaction/venv/lib/python3.6/site-packages\\n  WSGIProcessGroup management-app\\n  WSGIScriptAlias /reaction-management /local/reaction/management_app/management_app/wsgi.py process-group=management-app\\n  PassEnv LD_LIBRARY_PATH\\n  PassEnv REACTION_SUBDOMAIN\\n\u003c/VirtualHost\u003e' \u003e /etc/apache2/sites-available/000-default.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export REACTION_SUBDOMAIN=reaction-management\" \u003e\u003e /etc/apache2/envvars"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export LD_LIBRARY_PATH=/usr/lib/oracle/12.2/client64/lib\" \u003e\u003e /etc/apache2/envvars"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /local/reaction/management_app_log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Health": {
            "Interval": 10000000000,
            "Retries": 10,
            "Test": [
              "CMD-SHELL",
              "curl --fail http://localhost/reaction-management/accounts/login/"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/usr/sbin/apache2ctl",
            "-DFOREGROUND"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        }
      ]
    }
  ]
}