{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:18-dind",
      "SourceCode": "FROM docker:18-dind",
      "Platform": "",
      "From": {
        "Image": "docker:18-dind"
      },
      "Commands": [
        {
          "Key": "user",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "group",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "uid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "gid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "jenkins_user_home",
          "Name": "arg",
          "Value": "/home/${user}"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_USER_HOME",
              "Value": "${jenkins_user_home}"
            },
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-1.8-openjdk"
            },
            {
              "Key": "PATH",
              "Value": "${PATH}:/usr/local/bin:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin"
            },
            {
              "Key": "DOCKER_IMAGE_CACHE_DIR",
              "Value": "/docker-cache"
            },
            {
              "Key": "AUTOCONFIGURE_DOCKER_STORAGE",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update   bash   curl   ca-certificates   git   openjdk8   unzip   tar   tini   python   python-dev   py-pip   build-base   libffi-dev   openssl-dev   linux-headers \u0026\u0026   pip install --upgrade pip \u0026\u0026   pip install -U setuptools \u0026\u0026   pip install ansible \u0026\u0026   pip install docker-py \u0026\u0026   pip install molecule"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -g ${gid} ${group}   \u0026\u0026 adduser     -h \"${jenkins_user_home}\"     -u \"${uid}\"     -G \"${group}\"     -s /bin/bash     -D \"${user}\"   \u0026\u0026 echo \"${user}:${user}\" | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup docker   \u0026\u0026 addgroup ${user} docker   \u0026\u0026 addgroup ${user} dockremap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./entrypoint.bash",
            "/usr/local/bin/entrypoint.bash"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "${jenkins_user_home}",
            "/docker-cache",
            "/tmp"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${jenkins_user_home}"
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "-g",
            "--",
            "bash",
            "/usr/local/bin/entrypoint.bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}