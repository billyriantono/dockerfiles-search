MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: Skiychan <dev@skiy.net>
    Name: maintainer
  - Maintainer: kkshyu <kevin830222@gmail.com>
    Name: maintainer
  - Env:
    - Key: NGINX_VERSION
      Value: 1.10.0
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.0.6
    Name: env
  - CmdLine:
    - apt-get update -y && apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     gcc     g++     autoconf     automake     libtool     make     cmake     git     curl     wget     zip     supervisor     zlib1g-dev     openssl     libssl-dev     pkg-config     libsasl2-dev     libpcre3-dev     libxml2     libxml2-dev     libcurl4-openssl-dev     libpng-dev     libjpeg-dev     libfreetype6-dev     libmcrypt-dev     openssh-server     beanstalkd     python-setuptools
      &&     apt-get clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install     nginx     php7.0-dev     php7.0-fpm     php7.0-curl     php7.0-mbstring     php7.0-mcrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/phpredis/phpredis.git &&     cd phpredis &&     git
      checkout php7 &&     phpize &&     ./configure &&     make && make install &&     cd
      .. &&     rm -rf phpredis &&     echo "extension=redis.so" > /etc/php/7.0/mods-available/redis.ini
      &&     ln -sf /etc/php/7.0/mods-available/redis.ini /etc/php/7.0/fpm/conf.d/20-redis.ini
      &&     ln -sf /etc/php/7.0/mods-available/redis.ini /etc/php/7.0/cli/conf.d/20-redis.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mongodb &&     echo "extension=mongodb.so" 1>/etc/php/7.0/mods-available/mongodb.ini
      &&     ln -sf /etc/php/7.0/mods-available/mongodb.ini /etc/php/7.0/fpm/conf.d/20-mongodb.ini
      &&     ln -sf /etc/php/7.0/mods-available/mongodb.ini /etc/php/7.0/cli/conf.d/20-mongodb.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_4.x | bash - &&     apt-get install
      -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g npm
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g gulp bower
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install     vim     php-xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/lib/composer &&     php -r "readfile('https://getcomposer.org/installer');"
      | php &&     mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /usr/share/nginx
    - /etc/nginx/sites-enabled
  - Chown: ""
    Name: add
    SourcesAndDest:
    - www
    - /usr/share/nginx
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx/sites-enabled
    - /etc/nginx/sites-enabled
  - Chown: ""
    Name: add
    SourcesAndDest:
    - php-fpm
    - /etc/php/7.0/fpm
  - CmdLine:
    - mkdir -p /run/php
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - supervisor
    - /etc/supervisor
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /start.sh
  - CmdLine:
    - chmod +x /start.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
    - "9001"
  - CmdLine:
    - /start.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
