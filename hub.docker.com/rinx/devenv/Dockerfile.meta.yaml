MetaArgs: null
Stages:
- As: docker
  BaseName: docker:dind
  Commands:
  - CmdLine:
    - mkdir -p /out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/local/bin/containerd      /out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/local/bin/containerd-shim /out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/local/bin/ctr             /out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/local/bin/docker          /out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/local/bin/docker-init     /out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/local/bin/docker-proxy    /out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/local/bin/dockerd         /out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/local/bin/runc            /out
    Name: run
    PrependShell: true
  From:
    Image: docker:dind
  Name: docker
  Platform: ""
  SourceCode: FROM docker:dind AS docker
- As: clojure-lein
  BaseName: clojure:lein-alpine
  Commands: null
  From:
    Image: clojure:lein-alpine
  Name: clojure-lein
  Platform: ""
  SourceCode: FROM clojure:lein-alpine AS clojure-lein
- As: clojure-deps
  BaseName: clojure:tools-deps-alpine
  Commands: null
  From:
    Image: clojure:tools-deps-alpine
  Name: clojure-deps
  Platform: ""
  SourceCode: FROM clojure:tools-deps-alpine AS clojure-deps
- As: graalvm-ce
  BaseName: oracle/graalvm-ce:19.2.1
  Commands:
  - CmdLine:
    - yum install -y git     && gu install native-image
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /usr/bin/lein https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein     &&
      chmod a+x /usr/bin/lein
    Name: run
    PrependShell: true
  - CmdLine:
    - 'cd /     && git clone --depth=1 https://github.com/borkdude/clj-kondo.git     &&
      cd clj-kondo     && lein uberjar     && CLJ_KONDO_VERSION=$(cat resources/CLJ_KONDO_VERSION)     &&
      native-image         -jar target/clj-kondo-$CLJ_KONDO_VERSION-standalone.jar         -H:Name=clj-kondo         -H:+ReportExceptionStackTraces         -J-Dclojure.spec.skip-macros=true         -J-Dclojure.compiler.direct-linking=true         "-H:IncludeResources=clj_kondo/impl/cache/built_in/.*"         -H:ReflectionConfigurationFiles=reflection.json         -H:Log=registerResource:         --verbose         --no-fallback         --no-server         --report-unsupported-elements-at-runtime         --initialize-at-build-time         --static         -J-Xms2g         -J-Xmx4g'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'cd /     && git clone --recursive --depth=1 https://github.com/borkdude/babashka.git     &&
      cd babashka     && lein uberjar     && BABASHKA_VERSION=$(cat resources/BABASHKA_VERSION)     &&
      native-image         -jar target/babashka-$BABASHKA_VERSION-standalone.jar         -H:Name=bb         -H:+ReportExceptionStackTraces         -J-Dclojure.spec.skip-macros=true         -J-Dclojure.compiler.direct-linking=true         -Djava.library.path=$JAVA_HOME/jre/lib/amd64         "-H:IncludeResources=BABASHKA_VERSION"         "-H:IncludeResources=SCI_VERSION"         -H:ReflectionConfigurationFiles=reflection.json         -H:Log=registerResource:         --enable-http         --enable-https         -H:+JNI         --enable-all-security-services         --initialize-at-run-time=java.lang.Math\$RandomNumberGeneratorHolder         --verbose         --no-fallback         --no-server         --report-unsupported-elements-at-runtime         --initialize-at-build-time         --static         -J-Xms2g         -J-Xmx4g'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'cd /     && git clone --depth=1 https://github.com/borkdude/jet.git     &&
      cd jet     && lein uberjar     && JET_VERSION=$(cat resources/JET_VERSION)     &&
      native-image         -jar target/jet-$JET_VERSION-standalone.jar         -H:Name=jet         -H:+ReportExceptionStackTraces         -J-Dclojure.spec.skip-macros=true         -J-Dclojure.compiler.direct-linking=true         "-H:IncludeResources=JET_VERSION"         -H:ReflectionConfigurationFiles=reflection.json         -H:Log=registerResource:         --verbose         --no-fallback         --no-server         --report-unsupported-elements-at-runtime         --initialize-at-build-time         --static         -J-Xms2g         -J-Xmx4g'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /clj-kondo/clj-kondo /out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /babashka/bb /out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /jet/jet /out
    Name: run
    PrependShell: true
  From:
    Image: oracle/graalvm-ce:19.2.1
  Name: graalvm-ce
  Platform: ""
  SourceCode: FROM oracle/graalvm-ce:19.2.1 AS graalvm-ce
- As: ye
  BaseName: rinx/ye
  Commands: null
  From:
    Image: rinx/ye
  Name: ye
  Platform: ""
  SourceCode: FROM rinx/ye AS ye
- As: rust
  BaseName: ekidd/rust-musl-builder:latest
  Commands:
  - CmdLine:
    - cargo install exa     && cargo install --version 11.0.1 ripgrep     && cargo
      install --git https://github.com/sharkdp/fd
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o bat-v0.11.0-x86_64-unknown-linux-musl.tar.gz -L https://github.com/sharkdp/bat/releases/download/v0.11.0/bat-v0.11.0-x86_64-unknown-linux-musl.tar.gz     &&
      tar xzvf bat-v0.11.0-x86_64-unknown-linux-musl.tar.gz     && cp bat-v0.11.0-x86_64-unknown-linux-musl/bat
      /home/rust/.cargo/bin/bat
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/rust/out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /home/rust/.cargo/bin/bat /home/rust/out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /home/rust/.cargo/bin/exa /home/rust/out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /home/rust/.cargo/bin/fd  /home/rust/out
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /home/rust/.cargo/bin/rg  /home/rust/out
    Name: run
    PrependShell: true
  From:
    Image: ekidd/rust-musl-builder:latest
  Name: rust
  Platform: ""
  SourceCode: FROM ekidd/rust-musl-builder:latest AS rust
- As: go
  BaseName: golang:alpine
  Commands:
  - CmdLine:
    - apk update     && apk upgrade     && apk --update-cache add --no-cache     git     curl     gcc     musl-dev     wget
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -v -u     github.com/alecthomas/gometalinter     github.com/davidrjenni/reftools/cmd/fillstruct     github.com/derekparker/delve/cmd/dlv     github.com/fatih/gomodifytags     github.com/fatih/motion     github.com/fullstorydev/grpcurl/cmd/grpcurl     github.com/golangci/golangci-lint/cmd/golangci-lint     github.com/josharian/impl     github.com/jstemmer/gotags     github.com/junegunn/fzf     github.com/kisielk/errcheck     github.com/klauspost/asmfmt/cmd/asmfmt     github.com/koron/iferr     github.com/mdempsky/gocode     github.com/rogpeppe/godef     github.com/saibing/bingo     github.com/zmb3/gogetdoc     golang.org/x/lint/golint     golang.org/x/tools/cmd/goimports     golang.org/x/tools/cmd/gopls     golang.org/x/tools/cmd/gorename     golang.org/x/tools/cmd/guru     honnef.co/go/tools/cmd/keyify     &&
      go get -v -u -d github.com/stamblerre/gocode     && go build -o /go/bin/gocode-gomod
      github.com/stamblerre/gocode     && gometalinter -i
    Name: run
    PrependShell: true
  - Env:
    - Key: GO111MODULE
      Value: "on"
    Name: env
  - CmdLine:
    - go get -v -u     github.com/motemen/ghq
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /out/usr/local/go
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /out/go
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /usr/local/go/bin /out/usr/local/go/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /go/bin /out/go/bin
    Name: run
    PrependShell: true
  From:
    Image: golang:alpine
  Name: go
  Platform: ""
  SourceCode: FROM golang:alpine AS go
- As: kube
  BaseName: alpine:edge
  Commands:
  - CmdLine:
    - apk update     && apk upgrade     && apk --update-cache add --no-cache     make     curl     gcc     openssl     bash     git
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /out/packer     && mkdir -p /out/kube     && curl -L https://storage.googleapis.com/kubernetes-release/release/$(curl
      -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      -o /out/kube/kubectl     && chmod a+x /out/kube/kubectl     && curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      | bash     && mv /usr/local/bin/helm /out/packer/helm     && curl -L https://github.com/kubernetes-sigs/kind/releases/download/v0.6.0/kind-$(uname)-amd64
      -o /out/packer/kind     && chmod a+x /out/packer/kind     && git clone --depth=1
      https://github.com/ahmetb/kubectx /opt/kubectx     && mv /opt/kubectx/kubectx
      /out/kube/kubectx     && mv /opt/kubectx/kubens /out/kube/kubens     && curl
      -L https://github.com/wercker/stern/releases/download/1.11.0/stern_linux_amd64
      -o /out/packer/stern     && chmod a+x /out/packer/stern     && curl -sL https://run.linkerd.io/install
      | sh     && mv /root/.linkerd2/bin/linkerd-* /out/packer/linkerd
    Name: run
    PrependShell: true
  From:
    Image: alpine:edge
  Name: kube
  Platform: ""
  SourceCode: FROM alpine:edge AS kube
- As: packer
  BaseName: alpine:edge
  Commands:
  - CmdLine:
    - apk update     && apk upgrade     && apk --update-cache add --no-cache     upx
    Name: run
    PrependShell: true
  - Chown: ""
    From: docker
    Name: copy
    SourcesAndDest:
    - /out
    - /out/docker
  - CmdLine:
    - upx --lzma --best /out/docker/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: graalvm-ce
    Name: copy
    SourcesAndDest:
    - /out
    - /out/graalvm-ce
  - Chown: ""
    From: ye
    Name: copy
    SourcesAndDest:
    - /ye
    - /out/graalvm-ce
  - CmdLine:
    - upx --lzma --best /out/graalvm-ce/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: rust
    Name: copy
    SourcesAndDest:
    - /home/rust/out
    - /out/rust
  - CmdLine:
    - upx --lzma --best /out/rust/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: go
    Name: copy
    SourcesAndDest:
    - /out
    - /out/go
  - CmdLine:
    - upx --lzma --best /out/go/usr/local/go/bin/*
    Name: run
    PrependShell: true
  - CmdLine:
    - upx --lzma --best /out/go/go/bin/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: kube
    Name: copy
    SourcesAndDest:
    - /out/packer
    - /out/kube
  - CmdLine:
    - upx --lzma --best /out/kube/*
    Name: run
    PrependShell: true
  From:
    Image: alpine:edge
  Name: packer
  Platform: ""
  SourceCode: FROM alpine:edge AS packer
- As: base
  BaseName: alpine:edge
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Rintaro Okamura <rintaro.okamura@gmail.com>"'
    Name: label
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: TZ
      Value: Asia/Tokyo
    Name: env
  - CmdLine:
    - echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories     &&
      apk update     && apk upgrade     && apk --update-cache add --no-cache     bash     cmake     ctags     curl     diffutils     g++     gawk     gcc     git     git-email     git-perl     gnupg     jq     less     linux-headers     make     musl-dev     ncurses     neovim     nodejs     npm     nss     openjdk8     openssh     openssl     openssl-dev     perl     py-pip     py3-pip     python-dev     python3-dev     sed     tar     tmux     tzdata     wget     yarn     zsh     &&
      rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2 install --upgrade pip neovim     && pip3 install --upgrade pip neovim     &&
      npm config set user root     && npm install -g neovim
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g     dockerfile-language-server-nodejs     bash-language-server
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Env:
    - Key: DOTFILES
      Value: $HOME/.dotfiles
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/zsh
    Name: env
  - Env:
    - Key: GOPATH
      Value: $HOME/local
    Name: env
  - Env:
    - Key: GOROOT
      Value: /usr/local/go
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$JAVA_HOME/jre/bin:$JAVA_HOME/bin:$GOPATH/bin:$GOROOT/bin:/usr/local/bin:$HOME/.config/lightvim/plugged/vim-iced/bin
    Name: env
  - Env:
    - Key: GO111MODULE
      Value: auto
    Name: env
  - Env:
    - Key: DOCKER_BUILDKIT
      Value: "1"
    Name: env
  - Env:
    - Key: DOCKERIZED_DEVENV
      Value: rinx/devenv
    Name: env
  - Env:
    - Key: BABASHKA_PRELOADS
      Value: '"(System/setProperty \"java.library.path\" \"$JAVA_HOME/jre/lib/amd64\")"'
    Name: env
  - CmdLine:
    - mkdir -p $HOME/.ssh     && ssh-keyscan github.com >> $HOME/.ssh/known_hosts
    Name: run
    PrependShell: true
  - Chown: ""
    From: docker
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/docker-entrypoint.sh
    - /usr/bin/docker-entrypoint
  - Chown: ""
    From: docker
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/dind
    - /usr/bin/dind
  - Chown: ""
    From: docker
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/modprobe
    - /usr/bin/modprobe
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/docker/containerd
    - /usr/bin/docker-containerd
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/docker/containerd-shim
    - /usr/bin/docker-containerd-shim
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/docker/ctr
    - /usr/bin/docker-containerd-ctr
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/docker/docker
    - /usr/bin/docker
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/docker/docker-init
    - /usr/bin/docker-init
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/docker/docker-proxy
    - /usr/bin/docker-proxy
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/docker/dockerd
    - /usr/bin/dockerd
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/docker/runc
    - /usr/bin/docker-runc
  - Chown: ""
    From: clojure-lein
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/lein
    - /usr/local/bin/lein
  - Chown: ""
    From: clojure-lein
    Name: copy
    SourcesAndDest:
    - /usr/share/java
    - /usr/share/java
  - Chown: ""
    From: clojure-deps
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/clojure
    - /usr/local/bin/clojure
  - Chown: ""
    From: clojure-deps
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/clj
    - /usr/local/bin/clj
  - Chown: ""
    From: clojure-deps
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/clojure
    - /usr/local/lib/clojure
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/graalvm-ce/clj-kondo
    - /usr/local/bin/clj-kondo
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/graalvm-ce/bb
    - /usr/local/bin/bb
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/graalvm-ce/jet
    - /usr/local/bin/jet
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/graalvm-ce/ye
    - /usr/local/bin/ye
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/rust/bat
    - /usr/local/bin/bat
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/rust/exa
    - /usr/local/bin/exa
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/rust/fd
    - /usr/local/bin/fd
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/rust/rg
    - /usr/local/bin/rg
  - Chown: ""
    From: go
    Name: copy
    SourcesAndDest:
    - /usr/local/go/src
    - $GOROOT/src
  - Chown: ""
    From: go
    Name: copy
    SourcesAndDest:
    - /usr/local/go/lib
    - $GOROOT/lib
  - Chown: ""
    From: go
    Name: copy
    SourcesAndDest:
    - /usr/local/go/pkg
    - $GOROOT/pkg
  - Chown: ""
    From: go
    Name: copy
    SourcesAndDest:
    - /usr/local/go/misc
    - $GOROOT/misc
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/go/usr/local/go/bin
    - $GOROOT/bin
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/go/go/bin
    - $GOROOT/bin
  - Chown: ""
    From: kube
    Name: copy
    SourcesAndDest:
    - /out/kube/kubectx
    - /usr/local/bin/kubectx
  - Chown: ""
    From: kube
    Name: copy
    SourcesAndDest:
    - /out/kube/kubens
    - /usr/local/bin/kubens
  - Chown: ""
    From: kube
    Name: copy
    SourcesAndDest:
    - /out/kube/kubectl
    - /usr/local/bin/kubectl
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/kube/helm
    - /usr/local/bin/helm
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/kube/kind
    - /usr/local/bin/kind
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/kube/stern
    - /usr/local/bin/stern
  - Chown: ""
    From: packer
    Name: copy
    SourcesAndDest:
    - /out/kube/linkerd
    - /usr/local/bin/linkerd
  - CmdLine:
    - mkdir $DOTFILES
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $DOTFILES
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - coc-settings.json
    - $DOTFILES/coc-settings.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - deps.edn
    - $DOTFILES/deps.edn
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dotvim
    - $DOTFILES/dotvim
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gitattributes_global
    - $DOTFILES/gitattributes_global
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gitconfig
    - $DOTFILES/gitconfig
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gitignore
    - $DOTFILES/gitignore
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - light.vimrc
    - $DOTFILES/light.vimrc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Makefile
    - $DOTFILES/Makefile
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Makefile.d
    - $DOTFILES/Makefile.d
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nvimrc
    - $DOTFILES/nvimrc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - profiles.clj
    - $DOTFILES/profiles.clj
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources
    - $DOTFILES/resources
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tmux.conf
    - $DOTFILES/tmux.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - vimrc
    - $DOTFILES/vimrc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zshrc
    - $DOTFILES/zshrc
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/zplug/zplug $HOME/.zplug     && git clone https://github.com/zsh-users/zsh-autosuggestions
      $HOME/.zplug/repos/zsh-users/zsh-autosuggestions     && git clone https://github.com/zsh-users/zsh-completions
      $HOME/.zplug/repos/zsh-users/zsh-completions     && git clone https://github.com/zsh-users/zsh-syntax-highlighting
      $HOME/.zplug/repos/zsh-users/zsh-syntax-highlighting     && git clone https://github.com/zsh-users/zsh-history-substring-search
      $HOME/.zplug/repos/zsh-users/zsh-history-substring-search     && git clone https://github.com/greymd/tmux-xpanes
      $HOME/.zplug/repos/greymd/tmux-xpanes
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - -c
    - make -j4 deploy
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - make prepare-init && make neovim-init && make lightvim-init && make tmux-init
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/zsh
    - -c
    - lein
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/zsh
    - -c
    - clojure -A:dev
    Name: run
    PrependShell: false
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - docker-entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - zsh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:edge
  Name: base
  Platform: ""
  SourceCode: FROM alpine:edge AS base
