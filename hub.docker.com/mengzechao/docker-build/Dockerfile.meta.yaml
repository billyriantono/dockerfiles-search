MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Tianon Gravi <admwiggin@gmail.com> (@tianon)
    Name: maintainer
  - CmdLine:
    - apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys E871F18B51E0147C77796AC81196BA81F6B0FC61
    Name: run
    PrependShell: true
  - CmdLine:
    - echo deb http://ppa.launchpad.net/zfs-native/stable/ubuntu trusty main > /etc/apt/sources.list.d/zfs.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 15CF4D18AF4F7421
    Name: run
    PrependShell: true
  - CmdLine:
    - echo deb http://llvm.org/apt/trusty/ llvm-toolchain-trusty main > /etc/apt/sources.list.d/llvm.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \tapparmor \taufs-tools \tautomake \tbash-completion
      \tbtrfs-tools \tbuild-essential \tclang-3.8 \tcreaterepo \tcurl \tdpkg-sig \tgcc-mingw-w64
      \tgit \tiptables \tjq \tlibapparmor-dev \tlibcap-dev \tlibltdl-dev \tlibsqlite3-dev
      \tlibsystemd-journal-dev \tlibtool \tmercurial \tpkg-config \tpython-dev \tpython-mock
      \tpython-pip \tpython-websocket \ts3cmd=1.1.0* \tubuntu-zfs \txfsprogs \tlibzfs-dev
      \ttar \t--no-install-recommends \t&& ln -snf /usr/bin/clang-3.8 /usr/local/bin/clang
      \t&& ln -snf /usr/bin/clang++-3.8 /usr/local/bin/clang++"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone -b v2_02_103 https://git.fedorahosted.org/git/lvm2.git /usr/local/lvm2
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/lvm2 \t&& ./configure --enable-static_link \t&& make device-mapper
      \t&& make install_device-mapper"
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_VERSION
      Value: 1.5.2
    Name: env
  - CmdLine:
    - curl -sSL  "https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz"
      | tar -v -C /usr/local -xz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /go/bin:/usr/local/go/bin:$PATH
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go:/go/src/github.com/docker/docker/vendor
    Name: env
  - Env:
    - Key: DOCKER_CROSSPLATFORMS
      Value: "linux/386 linux/arm \tdarwin/amd64 \tfreebsd/amd64 freebsd/386 freebsd/arm
        \twindows/amd64 windows/386"
    Name: env
  - Env:
    - Key: GOARM
      Value: "5"
    Name: env
  - Env:
    - Key: GO_TOOLS_COMMIT
      Value: 823804e1ae08dbb14eb807afc7db9993bc9e3cc3
    Name: env
  - CmdLine:
    - "git clone https://github.com/golang/tools.git /go/src/golang.org/x/tools \t&&
      (cd /go/src/golang.org/x/tools && git checkout -q $GO_TOOLS_COMMIT) \t&& go
      install -v golang.org/x/tools/cmd/cover \t&& go install -v golang.org/x/tools/cmd/vet"
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_LINT_COMMIT
      Value: 32a87160691b3c96046c0c678fe57c5bef761456
    Name: env
  - CmdLine:
    - "git clone https://github.com/golang/lint.git /go/src/github.com/golang/lint
      \t&& (cd /go/src/github.com/golang/lint && git checkout -q $GO_LINT_COMMIT)
      \t&& go install -v github.com/golang/lint/golint"
    Name: run
    PrependShell: true
  - Env:
    - Key: OSX_SDK
      Value: MacOSX10.11.sdk
    Name: env
  - CmdLine:
    - "set -x \t&& export OSXCROSS_PATH=\"/osxcross\" \t&& git clone --depth 1 https://github.com/tpoechtrager/osxcross.git
      $OSXCROSS_PATH \t&& curl -sSL https://s3.dockerproject.org/darwin/${OSX_SDK}.tar.xz
      -o \"${OSXCROSS_PATH}/tarballs/${OSX_SDK}.tar.xz\" \t&& UNATTENDED=yes OSX_VERSION_MIN=10.6
      ${OSXCROSS_PATH}/build.sh"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /osxcross/target/bin:$PATH
    Name: env
  - Env:
    - Key: SECCOMP_VERSION
      Value: v2.2.3
    Name: env
  - CmdLine:
    - "set -x \t&& export SECCOMP_PATH=$(mktemp -d) \t&& git clone https://github.com/seccomp/libseccomp.git
      \"$SECCOMP_PATH\" \t&& ( \t\tcd \"$SECCOMP_PATH\" \t\t&& git checkout \"$SECCOMP_VERSION\"
      \t\t&& ./autogen.sh \t\t&& ./configure --prefix=/usr \t\t&& make \t\t&& make
      install \t) \t&& rm -rf \"$SECCOMP_PATH\""
    Name: run
    PrependShell: true
  - Env:
    - Key: REGISTRY_COMMIT
      Value: ec87e9b6971d831f0eff752ddb54fb64693e51cd
    Name: env
  - CmdLine:
    - "set -x \t&& export GOPATH=\"$(mktemp -d)\" \t&& git clone https://github.com/docker/distribution.git
      \"$GOPATH/src/github.com/docker/distribution\" \t&& (cd \"$GOPATH/src/github.com/docker/distribution\"
      && git checkout -q \"$REGISTRY_COMMIT\") \t&& GOPATH=\"$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH\"
      \t\tgo build -o /usr/local/bin/registry-v2 github.com/docker/distribution/cmd/registry
      \t&& rm -rf \"$GOPATH\""
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTARY_COMMIT
      Value: 8e8122eb5528f621afcd4e2854c47302f17392f7
    Name: env
  - CmdLine:
    - "set -x \t&& export GOPATH=\"$(mktemp -d)\" \t&& git clone https://github.com/docker/notary.git
      \"$GOPATH/src/github.com/docker/notary\" \t&& (cd \"$GOPATH/src/github.com/docker/notary\"
      && git checkout -q \"$NOTARY_COMMIT\") \t&& GOPATH=\"$GOPATH/src/github.com/docker/notary/Godeps/_workspace:$GOPATH\"
      \t\tgo build -o /usr/local/bin/notary-server github.com/docker/notary/cmd/notary-server
      \t&& rm -rf \"$GOPATH\""
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_PY_COMMIT
      Value: 47ab89ec2bd3bddf1221b856ffbaff333edeabb4
    Name: env
  - CmdLine:
    - "git clone https://github.com/docker/docker-py.git /docker-py \t&& cd /docker-py
      \t&& git checkout -q $DOCKER_PY_COMMIT \t&& pip install -r test-requirements.txt"
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo '[default]'; \t\techo 'access_key=$AWS_ACCESS_KEY'; \t\techo 'secret_key=$AWS_SECRET_KEY';
      \t} > ~/.s3cfg"
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.email 'docker-dummy@example.com'
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r docker
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --create-home --gid docker unprivilegeduser
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Name: workdir
    Path: /go/src/github.com/docker/docker
  - Env:
    - Key: DOCKER_BUILDTAGS
      Value: apparmor seccomp selinux
    Name: env
  - CmdLine:
    - ln -sfv $PWD/.bashrc ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sv $PWD/contrib/completion/bash/docker /etc/bash_completion.d/docker
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - contrib/download-frozen-image-v2.sh
    - /go/src/github.com/docker/docker/contrib/
  - CmdLine:
    - "./contrib/download-frozen-image-v2.sh /docker-frozen-images \tbusybox:latest@sha256:eb3c0d4680f9213ee5f348ea6d39489a1f85a318a2ae09e012c426f78252a6d2
      \thello-world:latest@sha256:8be990ef2aeb16dbcb9271ddfe2610fa6658d13f6dfb8bc72074cc1ca36966a7
      \tjess/unshare:latest@sha256:2e3a8c0591c4690b82d4eba7e5ef8f49f2ddfe9f867f3e865198db9bd1436c5b"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& export GOPATH=\"$(mktemp -d)\" \t&& git clone -b v1.0.4 https://github.com/cpuguy83/go-md2man.git
      \"$GOPATH/src/github.com/cpuguy83/go-md2man\" \t&& git clone -b v1.4 https://github.com/russross/blackfriday.git
      \"$GOPATH/src/github.com/russross/blackfriday\" \t&& go get -v -d github.com/cpuguy83/go-md2man
      \t&& go build -v -o /usr/local/bin/go-md2man github.com/cpuguy83/go-md2man \t&&
      rm -rf \"$GOPATH\""
    Name: run
    PrependShell: true
  - Env:
    - Key: TOMLV_COMMIT
      Value: 9baf8a8a9f2ed20a8e54160840c492f937eeaf9a
    Name: env
  - CmdLine:
    - "set -x \t&& export GOPATH=\"$(mktemp -d)\" \t&& git clone https://github.com/BurntSushi/toml.git
      \"$GOPATH/src/github.com/BurntSushi/toml\" \t&& (cd \"$GOPATH/src/github.com/BurntSushi/toml\"
      && git checkout -q \"$TOMLV_COMMIT\") \t&& go build -v -o /usr/local/bin/tomlv
      github.com/BurntSushi/toml/cmd/tomlv \t&& rm -rf \"$GOPATH\""
    Name: run
    PrependShell: true
  - Env:
    - Key: RSRC_COMMIT
      Value: e48dbf1b7fc464a9e85fcec450dddf80816b76e0
    Name: env
  - CmdLine:
    - set -x     && git clone https://github.com/akavel/rsrc.git /go/src/github.com/akavel/rsrc     &&
      cd /go/src/github.com/akavel/rsrc     && git checkout -q $RSRC_COMMIT     &&
      go install -v
    Name: run
    PrependShell: true
  - CmdLine:
    - hack/dind
    Name: entrypoint
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/github.com/docker/docker
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
