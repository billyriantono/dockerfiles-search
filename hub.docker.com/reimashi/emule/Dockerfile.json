{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "launcher-builder",
      "BaseName": "golang:1.13-stretch",
      "SourceCode": "FROM golang:1.13-stretch AS launcher-builder",
      "Platform": "",
      "As": "launcher-builder",
      "From": {
        "Image": "golang:1.13-stretch"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "launcher",
            "/root"
          ]
        },
        {
          "CmdLine": [
            "go build -o launcher"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Maintainer": "Aitor Gonz√°lez",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "UID",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GUI",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install nano unzip wget tar curl gnupg software-properties-common xvfb xdotool supervisor net-tools fluxbox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "WINEDLLOVERRIDES",
              "Value": "mscoree=d;mshtml=d"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -nc https://dl.winehq.org/wine-builds/winehq.key \u0026\u0026     apt-key add winehq.key \u0026\u0026     apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main' \u0026\u0026     apt-get -y install winehq-stable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install x11vnc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/"
        },
        {
          "CmdLine": [
            "wget -O - https://github.com/novnc/noVNC/archive/v1.1.0.tar.gz | tar -xzv -C /root/ \u0026\u0026 mv /root/noVNC-1.1.0 /root/novnc \u0026\u0026 ln -s /root/novnc/vnc_lite.html /root/novnc/index.html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O - https://github.com/novnc/websockify/archive/v0.8.0.tar.gz | tar -xzv -C /root/ \u0026\u0026 mv /root/websockify-0.8.0 /root/novnc/utils/websockify"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "curl https://www.emule-project.net/files/emule/eMule0.51d.zip --output /tmp/emule.zip \u0026\u0026     unzip /tmp/emule.zip -d /tmp \u0026\u0026 mv /tmp/eMule0.51d/* /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "WINEPREFIX",
              "Value": "/app/.wine"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WINEARCH",
              "Value": "win32"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts",
            "/app"
          ]
        },
        {
          "Chown": "",
          "From": "launcher-builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/root/launcher",
            "/app"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/emule",
            "/app/config"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "23732/tcp",
            "23733/udp",
            "4711/tcp"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app/config",
            "/data"
          ]
        },
        {
          "CmdLine": [
            "/app/init.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}