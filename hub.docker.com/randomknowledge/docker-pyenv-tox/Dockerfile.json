{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Florian Finke \u003cflorian@finke.email\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSIONS",
              "Value": "2.7.13 2.7.14 2.7.15 2.7.16 3.1.5 3.2.6 3.3.6 3.4.5 3.4.6 3.5.2 3.5.3 3.5.4 3.5.5 3.6.1 3.6.3 3.6.4 3.6.5 3.6.6 3.6.7 3.7.0 3.7.1 3.7.2 3.7.3 3.7.4 3.7.5 3.8.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYENV_ROOT",
              "Value": "/pyenv/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/pyenv/shims:/pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYENV_INSTALLER_ROOT",
              "Value": "/pyenv-installer/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYENV_REQUIRED_PYTHON_BASENAME",
              "Value": "python_versions.txt"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYENV_REQUIRED_PYTHON",
              "Value": "/pyenv-config/$PYENV_REQUIRED_PYTHON_BASENAME"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -q -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --no-install-recommends --fix-missing -y build-essential     python2.7 python2.7-dev git make locales     libssl-dev libfontconfig libffi-dev libbz2-dev libreadline-dev libsqlite3-dev     python-pip libjpeg-dev zlib1g-dev python-imaging libxml2-dev     libxslt1-dev python-lxml openssh-client     curl rsync ruby-dev rubygems     \u0026\u0026 apt-get autoremove -y         \u0026\u0026 apt-get clean all         \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen         \u0026\u0026 locale-gen         \u0026\u0026 update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install --upgrade setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade tox tox-pyenv \"fabric\u003c2.0\" docker-fabric awscli awsebcli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ~/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Host *\\n\\tStrictHostKeyChecking no\\n\\n\" \u003e ~/.ssh/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g npm@latest yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/pyenv/pyenv.git $PYENV_ROOT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "python_versions.txt",
            "$PYENV_REQUIRED_PYTHON"
          ]
        },
        {
          "CmdLine": [
            "while read line; do     pyenv install $line || exit 1 ;    done \u003c $PYENV_REQUIRED_PYTHON"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pyenv global $PYTHON_VERSIONS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pyenv local $PYTHON_VERSIONS"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}