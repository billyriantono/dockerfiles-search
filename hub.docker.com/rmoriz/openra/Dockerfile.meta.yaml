MetaArgs:
- DefaultValue: null
  Key: BASE_IMAGE_PREFIX
  ProvidedValue: null
  Value: null
Stages:
- BaseName: ${BASE_IMAGE_PREFIX}mono
  Commands:
  - Key: ARCH
    Name: arg
    Value: null
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .gitignore
    - qemu-${ARCH}-static*
    - /usr/bin/
  - Key: OPENRA_RELEASE_VERSION
    Name: arg
    Value: "20191117"
  - Key: OPENRA_RELEASE
    Name: arg
    Value: null
  - Key: OPENRA_RELEASE_TYPE
    Name: arg
    Value: release
  - Env:
    - Key: OPENRA_RELEASE_VERSION
      Value: ${OPENRA_RELEASE_VERSION:-20191117}
    Name: env
  - Env:
    - Key: OPENRA_RELEASE_TYPE
      Value: ${OPENRA_RELEASE_TYPE:-release}
    Name: env
  - Env:
    - Key: OPENRA_RELEASE
      Value: ${OPENRA_RELEASE:-https://github.com/OpenRA/OpenRA/releases/download/${OPENRA_RELEASE_TYPE}-${OPENRA_RELEASE_VERSION}/OpenRA-${OPENRA_RELEASE_TYPE}-${OPENRA_RELEASE_VERSION}-source.tar.bz2}
    Name: env
  - CmdLine:
    - 'set -xe;         echo "==================================================================";         echo
      "Building OpenRA:";         echo "  version:\t${OPENRA_RELEASE_VERSION}";         echo
      "  type:   \t${OPENRA_RELEASE_TYPE}";         echo "  source: \t${OPENRA_RELEASE}";         echo
      "==================================================================";                 apt-get
      update;         apt-get -y upgrade;         apt-get install -y --no-install-recommends                     ca-certificates                     curl                     liblua5.1                     make                     patch                     unzip                     xdg-utils                   ;         useradd
      -d /home/openra -m -s /sbin/nologin openra;         mkdir /home/openra/source;         cd
      /home/openra/source;         curl -L $OPENRA_RELEASE | tar xj;         mkdir
      -p /opt/lib;         liblua=$(find /usr/lib -name liblua5.1.so);         ln
      -s $liblua /opt/lib;         ls -la /opt/lib/*.so;         if [ "$OPENRA_RELEASE_VERSION"
      = "20181215" ]; then            curl -L https://github.com/OpenRA/OpenRA/commit/c6d5bc9511cf983b8b7a769ab3064ed45fc4fb02.diff
      | patch -p1;         fi;         make dependencies;         make all;         make
      prefix= DESTDIR=/home/openra install;         cd .. && rm -rf /home/openra/source;         chmod
      755 /home/openra/lib/openra/launch-dedicated.sh;         mkdir /home/openra/.openra               /home/openra/.openra/Logs               /home/openra/.openra/maps             ;        chown
      -R openra:openra /home/openra/.openra;         apt-get purge -y curl make patch
      unzip;         rm -rf /var/lib/apt/lists/*                /var/cache/apt/archives/*'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "1234"
  - Name: user
    User: openra
  - Name: workdir
    Path: /home/openra/lib/openra
  - Name: volume
    Volumes:
    - /home/openra/.openra
  - CmdLine:
    - /home/openra/lib/openra/launch-dedicated.sh
    Name: cmd
    PrependShell: false
  - Labels:
    - Key: org.opencontainers.image.title
      Value: '"OpenRA dedicated server"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.description
      Value: '"Image to run a server instance for OpenRA"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.url
      Value: '"https://github.com/rmoriz/openra-dockerfile"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.documentation
      Value: '"https://github.com/rmoriz/openra-dockerfile#readme"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.version
      Value: ${OPENRA_RELEASE_TYPE}-${OPENRA_RELEASE_VERSION}
    Name: label
  - Labels:
    - Key: org.opencontainers.image.licenses
      Value: '"GPL-3.0"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.authors
      Value: '"Roland Moriz"'
    Name: label
  From:
    Image: ${BASE_IMAGE_PREFIX}mono
  Name: ""
  Platform: ""
  SourceCode: FROM ${BASE_IMAGE_PREFIX}mono
