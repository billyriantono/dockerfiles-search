MetaArgs: null
Stages:
- BaseName: debian:stretch
  Commands:
  - Name: user
    User: root
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: DEBIAN_REPO
      Value: http://cdn-fastly.deb.debian.org
    Name: env
  - Env:
    - Key: CRAN_REPO
      Value: http://cran.mtu.edu
    Name: env
  - CmdLine:
    - echo "deb $DEBIAN_REPO/debian stretch main"                   > /etc/apt/sources.list  &&
      echo "deb $DEBIAN_REPO/debian-security stretch/updates main" >> /etc/apt/sources.list  &&
      echo "deb $DEBIAN_REPO/debian stretch-backports main"        >> /etc/apt/sources.list  &&
      echo "deb $DEBIAN_REPO/debian testing main"                  >> /etc/apt/sources.list  &&
      echo 'APT::Default-Release "stable";' | tee -a /etc/apt/apt.conf.d/00local  &&
      apt-get update  && apt-get -yq dist-upgrade  && apt-get install -yq --no-install-recommends     nano     sudo     gnupg     dirmngr     wget     ca-certificates     curl     build-essential     lsb-release     procps     openssl     git     locales  &&
      echo "deb $CRAN_REPO/bin/linux/debian stretch-cran35/"       >> /etc/apt/sources.list  &&
      apt-key adv  --no-tty --keyserver keys.gnupg.net     --recv-key 'E19F5F87128899B192B1A2C2AD5F960A256A04AF'  &&
      sed -i 's/^# *\(en_US.UTF-8\)/\1/' /etc/locale.gen  && locale-gen  && export
      CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"  && echo "deb http://packages.cloud.google.com/apt
      $CLOUD_SDK_REPO main" > /etc/apt/sources.list.d/google-cloud-sdk.list  && curl
      https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -  && apt-get
      update  && apt-get install -yq --no-install-recommends     google-cloud-sdk  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: JAVA_VER
      Value: jdk1.8.0_201
    Name: env
  - Env:
    - Key: JAVA_TGZ
      Value: jdk-8u201-linux-x64.tar.gz
    Name: env
  - Env:
    - Key: JAVA_URL
      Value: https://download.oracle.com/otn-pub/java/jdk/8u201-b09/42970487e3af4f5aa5bca3f542482c60/$JAVA_TGZ
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jdk/$JAVA_VER
    Name: env
  - CmdLine:
    - 'wget --header "Cookie: oraclelicense=accept-securebackup-cookie" $JAVA_URL  &&
      mkdir -p /usr/lib/jdk && tar -zxf $JAVA_TGZ -C /usr/lib/jdk  && update-alternatives
      --install /usr/bin/java java $JAVA_HOME/bin/java 100  && update-alternatives
      --install /usr/bin/javac javac $JAVA_HOME/bin/javac 100  && rm $JAVA_TGZ'
    Name: run
    PrependShell: true
  - Env:
    - Key: SPARK_VER
      Value: 2.2.0
    Name: env
  - Env:
    - Key: SPARK_HOME
      Value: /usr/lib/spark
    Name: env
  - Env:
    - Key: HAILHASH
      Value: 17a988f2a628
    Name: env
  - Env:
    - Key: HAILJAR
      Value: hail-devel-$HAILHASH-Spark-$SPARK_VER.jar
    Name: env
  - Env:
    - Key: HAILPYTHON
      Value: hail-devel-$HAILHASH.zip
    Name: env
  - Env:
    - Key: HAILZIP
      Value: Hail-devel-$HAILHASH-Spark-$SPARK_VER.zip
    Name: env
  - Env:
    - Key: HAIL_HOME
      Value: /etc/hail
    Name: env
  - Env:
    - Key: KERNELSPEC_HOME
      Value: /usr/local/share/jupyter/kernels
    Name: env
  - CmdLine:
    - mkdir -p /etc/spark/conf.dist && mkdir -p /etc/hadoop/conf.empty && mkdir -p
      /etc/hive/conf.dist  && update-alternatives --install /etc/spark/conf spark-conf
      /etc/spark/conf.dist 100  && update-alternatives --install /etc/hadoop/conf
      hadoop-conf /etc/hadoop/conf.empty 100  && update-alternatives --install /etc/hive/conf
      hive-conf /etc/hive/conf.dist 100  && mkdir $HAIL_HOME && cd $HAIL_HOME  &&
      wget -nv http://storage.googleapis.com/hail-common/builds/devel/jars/$HAILJAR  &&
      wget -nv http://storage.googleapis.com/hail-common/builds/devel/python/$HAILPYTHON  &&
      wget -nv http://storage.googleapis.com/hail-common/distributions/devel/$HAILZIP  &&
      cd -
    Name: run
    PrependShell: true
  - Env:
    - Key: USER
      Value: jupyter-user
    Name: env
  - Env:
    - Key: UID
      Value: "1000"
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$USER
    Name: env
  - Env:
    - Key: JUPYTER_PORT
      Value: "8000"
    Name: env
  - Env:
    - Key: JUPYTER_HOME
      Value: /etc/jupyter
    Name: env
  - Env:
    - Key: PYSPARK_DRIVER_PYTHON
      Value: jupyter
    Name: env
  - Env:
    - Key: PYSPARK_DRIVER_PYTHON_OPTS
      Value: notebook
    Name: env
  - Env:
    - Key: PATH
      Value: $SPARK_HOME:$SPARK_HOME/python:$SPARK_HOME/bin:$HAIL_HOME:$PATH
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $PYTHONPATH:$HAIL_HOME/$HAILPYTHON:$HAIL_HOME/python:$SPARK_HOME/python:$JUPYTER_HOME/custom
    Name: env
  - CmdLine:
    - apt-get update  && apt-get install -yq --no-install-recommends     python     python-dev     liblzo2-dev     python-tk     liblzo2-dev     libz-dev  &&
      useradd -m -s /bin/bash -N -u $UID $USER  && wget -nv https://bootstrap.pypa.io/get-pip.py  &&
      python get-pip.py  && pip install ipykernel==4.10.0  && python2 -m ipykernel
      install --name python2 --display-name "Python 2"  && pip install -U decorator==4.3.0  &&
      pip install numpy==1.15.2  && pip install py4j==0.10.7  && python -mpip install
      matplotlib==2.2.3 && pip install pandas==0.23.4  && pip install seaborn==0.9.0  &&
      pip install google-api-core==1.5.0  && pip install google-cloud-bigquery==1.7.0  &&
      pip install google-cloud-bigquery-datatransfer==0.1.1  && pip install google-cloud-core==0.28.1  &&
      pip install google-cloud-datastore==1.7.0  && pip install google-cloud-resource-manager==0.28.1  &&
      pip install google-cloud-storage==1.13.0  && pip install google-auth==1.5.1  &&
      pip install --ignore-installed firecloud==0.16.18  && pip install -U scikit-learn==0.20.0  &&
      pip install statsmodels==0.9.0  && pip install ggplot==0.11.5  && pip install
      bokeh==1.0.0   && pip install pyfasta==0.5.2  && pip install pdoc==0.3.2  &&
      pip install biopython==1.72  && pip install bx-python==0.8.2  && pip install
      fastinterval==0.1.1  && pip install matplotlib-venn==0.11.5  && apt-get clean  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update  && apt-get install -t testing -yq --no-install-recommends     python3.7     python3.7-dev     python3-distutils  &&
      update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 100  &&
      python3 get-pip.py  && pip3 install tornado==4.5.3  && pip3 install -U decorator==4.3.0  &&
      pip3 install parsimonious==0.8.1  && pip3 install numpy==1.15.2  && pip3 install
      py4j==0.10.7  && python3 -mpip install matplotlib==3.0.0  && pip3 install pandas==0.23.4  &&
      pip3 install seaborn==0.9.0  && pip3 install jupyter==1.0.0  && pip3 install
      jupyterlab==0.35.2  && pip3 install python-lzo==1.12  && pip3 install google-api-core==1.5.0  &&
      pip3 install google-cloud-bigquery==1.7.0  && pip3 install google-cloud-bigquery-datatransfer==0.1.1  &&
      pip3 install google-cloud-core==0.28.1  && pip3 install google-cloud-datastore==1.7.0  &&
      pip3 install google-cloud-resource-manager==0.28.1  && pip3 install google-cloud-storage==1.13.0  &&
      pip3 install --ignore-installed firecloud==0.16.18  && pip3 install scikit-learn==0.20.0  &&
      pip3 install statsmodels==0.9.0  && pip3 install ggplot==0.11.5  && pip3 install
      bokeh==1.0.0  && pip3 install pyfasta==0.5.2  && pip3 install pdoc==0.3.2  &&
      pip3 install biopython==1.72  && pip3 install bx-python==0.8.2  && pip3 install
      fastinterval==0.1.1  && pip3 install matplotlib-venn==0.11.5  && pip3 install
      python-datauri  && apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/pandas.lib/pandas/g' /usr/local/lib/python3.7/dist-packages/ggplot/stats/smoothers.py
    Name: run
    PrependShell: true
  - Env:
    - Key: PIP_USER
      Value: "true"
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends apt-utils  && apt-get
      update && apt-get -t stretch-cran35 install -y --no-install-recommends     r-base     r-base-dev     r-recommended  &&
      apt-get install -t stretch-backports -y --no-install-recommends     fonts-dejavu     tzdata     gfortran     gcc     libcurl4     libcurl4-openssl-dev     libssl-dev     libxml2-dev  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e 'install.packages(c(     "BiocManager",    "IRdisplay",      "evaluate",      "pbdZMQ",      "devtools",      "uuid",      "reshape2",      "bigrquery",      "googleCloudStorageR",      "tidyverse"),     repos="http://cran.mtu.edu")'  &&
      R -e 'devtools::install_github("DataBiosphere/Ronaldo")'  && R -e 'devtools::install_github("IRkernel/IRkernel")'  &&
      R -e 'IRkernel::installspec(user=FALSE)'  && chown -R $USER:users /home/jupyter-user/.local   &&
      R -e 'devtools::install_github("apache/spark@v2.2.0", subdir="R/pkg")'  && mkdir
      -p /home/jupyter-user/.rpackages  && echo "R_LIBS=/home/jupyter-user/.rpackages"
      > /home/jupyter-user/.Renviron  && chown -R $USER:users /home/jupyter-user/.rpackages
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts
    - $JUPYTER_HOME/scripts
  - Chown: ""
    Name: add
    SourcesAndDest:
    - custom/jupyter_delocalize.py
    - $JUPYTER_HOME/custom/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - custom/jupyter_localize_extension.py
    - $JUPYTER_HOME/custom/
  - CmdLine:
    - chown -R $USER:users $JUPYTER_HOME  && find $JUPYTER_HOME/scripts -name '*.sh'
      -type f | xargs chmod +x
    Name: run
    PrependShell: true
  - Name: user
    User: $USER
  - Name: workdir
    Path: $HOME
  - Name: expose
    Ports:
    - $JUPYTER_PORT
  - CmdLine:
    - /usr/local/bin/jupyter
    - notebook
    Name: entrypoint
    PrependShell: false
  From:
    Image: debian:stretch
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch
