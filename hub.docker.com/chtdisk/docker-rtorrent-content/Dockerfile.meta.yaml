MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Christian Wagner https://github.com/chriswayg"'
    Name: label
  - Env:
    - Key: container
      Value: docker
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - apk --no-cache add --update       openrc       busybox-initscripts       python3       ansible  &&
      sed -i 's/^\(tty\d\:\:\)/#\1/g' /etc/inittab  && sed -i       -e 's/#rc_sys=".*"/rc_sys="docker"/g'       -e
      's/#rc_env_allow=".*"/rc_env_allow="\*"/g'       -e 's/#rc_crashed_stop=.*/rc_crashed_stop=NO/g'       -e
      's/#rc_crashed_start=.*/rc_crashed_start=YES/g'       -e 's/#rc_provide=".*"/rc_provide="loopback
      net"/g'       /etc/rc.conf  && cat /etc/rc.conf  && rm -vf       /etc/init.d/hwdrivers       /etc/init.d/hwclock       /etc/init.d/modules       /etc/init.d/modules-load       /etc/init.d/modloop  &&
      sed -i 's/cgroup_add_service /# cgroup_add_service /g' /lib/rc/sh/openrc-run.sh  &&
      cat /lib/rc/sh/openrc-run.sh  && sed -i 's/VSERVER/DOCKER/Ig' /lib/rc/sh/init.sh  &&
      cat /lib/rc/sh/init.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -pv /etc/ansible  && echo -e '[local]\nlocalhost ansible_connection=local
      ansible_python_interpreter=/usr/bin/python3' > /etc/ansible/hosts
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /tmp
    - /run
  - CmdLine:
    - /sbin/init
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
