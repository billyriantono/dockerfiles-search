{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1.7-fpm-alpine",
      "SourceCode": "FROM php:7.1.7-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.1.7-fpm-alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PHALCON_VERSION",
              "Value": "3.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHALCON_DEV_TOOLS_VERSION",
              "Value": "3.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     apk add --no-cache --virtual .build-deps autoconf g++ make pcre-dev \u0026\u0026     curl -LO https://github.com/phalcon/cphalcon/archive/v${PHALCON_VERSION}.tar.gz \u0026\u0026     tar xzf v${PHALCON_VERSION}.tar.gz \u0026\u0026 cd cphalcon-${PHALCON_VERSION}/build \u0026\u0026 sh install \u0026\u0026     docker-php-ext-enable phalcon \u0026\u0026     cd ../.. \u0026\u0026 rm -rf v${PHALCON_VERSION}.tar.gz cphalcon-${PHALCON_VERSION} \u0026\u0026     apk del .build-deps \u0026\u0026     curl -LO https://github.com/phalcon/phalcon-devtools/archive/v${PHALCON_DEV_TOOLS_VERSION}.tar.gz \u0026\u0026     tar xzf v${PHALCON_DEV_TOOLS_VERSION}.tar.gz \u0026\u0026     mv phalcon-devtools-${PHALCON_DEV_TOOLS_VERSION} /usr/local/phalcon-devtools \u0026\u0026     ln -s /usr/local/phalcon-devtools/phalcon.php /usr/local/bin/phalcon"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add   supervisor   nginx   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026 chmod +x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mysqli pdo pdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /run/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/html/public"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"\u003c?php phpinfo();\" \u003e\u003e /var/www/html/public/index.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "--nodaemon",
            "--configuration",
            "/etc/supervisor/conf.d/supervisord.conf",
            "--logfile",
            "/var/log/supervisor/supervisord.log",
            "--pidfile",
            "/var/run/supervisor/supervisord.pid"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}