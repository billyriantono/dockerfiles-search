MetaArgs: null
Stages:
- As: build
  BaseName: node:10-alpine
  Commands:
  - CmdLine:
    - apk add --no-cache make gcc g++ python
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - /app
  - Name: workdir
    Path: /app
  - CmdLine:
    - npm install --production && npm cache clean --force
    Name: run
    PrependShell: true
  From:
    Image: node:10-alpine
  Name: build
  Platform: ""
  SourceCode: FROM node:10-alpine AS build
- As: release
  BaseName: node:10-alpine
  Commands:
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /app
    - /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./src
    - /app/src
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./config
    - /app/config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./config.json
    - ./babel.config.js
    - jest.config.js
    - jsconfig.json
    - typings.json
    - /app/
  - CmdLine:
    - mkdir /app/upload
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Env:
    - Key: NODE_ENV
      Value: '"production"'
    Name: env
  - CmdLine:
    - cp ./config/production-dist.js ./config/production.js
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''{   "httpPort": 3000,   "configPath": "/app/config.json",   "dataPath":
      "/app/src/app/custom",   "#cleanupScript": "/app/src/common/mongoCleanup.sh"
      }'' > /etc/ezmaster.json'
    Name: run
    PrependShell: true
  - CmdLine:
    - npm run build
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - npm
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: node:10-alpine
  Name: release
  Platform: ""
  SourceCode: FROM node:10-alpine AS release
