{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "DEFENSATIVE Docker Mantainers \"docker-maint@defensative.com\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAINPACKAGES",
              "Value": "libpcre3 libdumbnet1 libjson0 libuuid1 libpcap0.8 sqlite3 libcurl3-gnutls                         curl libmaxminddb0 libesmtp6 libfastjson4 libestr0 libyaml-0-2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEVPACKAGES",
              "Value": "build-essential checkinstall automake autoconf pkg-config libtool git procps                         libpcre3-dev libdumbnet-dev libpcap-dev libjson0-dev libcurl4-gnutls-dev                         dh-autoreconf uuid-dev libsqlite3-dev libmaxminddb-dev libesmtp-dev                         libjson-c-dev libfastjson-dev libestr-dev libyaml-dev libbsd-dev"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_update.sh",
            "/root/docker_update.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "liblognorm5_2.0.3-0adiscon1xenial1ubuntu1_amd64.deb",
            "/root/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "liblognorm-dev_2.0.3-0adiscon1xenial1ubuntu1_amd64.deb",
            "/root/"
          ]
        },
        {
          "CmdLine": [
            "echo deb http://ppa.launchpad.net/maxmind/ppa/ubuntu xenial main \u003e /etc/apt/sources.list.d/maxmind.list \u0026\u0026     echo deb http://ppa.launchpad.net/adiscon/v8-stable/ubuntu xenial main \u003e /etc/apt/sources.list.d/rsyslog.list \u0026\u0026     apt-get update \u0026\u0026     cd /usr/local/src \u0026\u0026     dpkg -i /root/liblognorm5_2.0.3-0adiscon1xenial1ubuntu1_amd64.deb /root/liblognorm-dev_2.0.3-0adiscon1xenial1ubuntu1_amd64.deb ;     apt-mark hold liblognorm5 liblognorm-dev \u0026\u0026     apt-get install -y --force-yes -f \u0026\u0026     apt-get install -y --force-yes $MAINPACKAGES \u0026\u0026      /root/docker_update.sh \u0026\u0026      apt-get install -y --force-yes $DEVPACKAGES  \u0026\u0026             mkdir -p /usr/share/GeoIP \u0026\u0026     cd /usr/share/GeoIP \u0026\u0026     curl -z Geo-Country.mmdb.gz --silent --location -o Geo-Country.mmdb.gz http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz \u0026\u0026     gzip -fqdk /usr/share/GeoIP/Geo-Country.mmdb.gz \u0026\u0026             cd /usr/local/src \u0026\u0026     git clone https://github.com/beave/sagan -b master \u0026\u0026             cd /usr/local/src/sagan \u0026\u0026     ./autogen.sh --disable-libdnet --disable-libpcap --enable-geoip2 --disable-snortsam --disable-syslog --enable-system-strstr \u0026\u0026     ./configure --disable-libdnet --disable-libpcap --enable-geoip2 --disable-snortsam --disable-syslog --enable-system-strstr  \u0026\u0026             cd /usr/local/src/sagan \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cp /usr/local/src/sagan/etc/sagan.yaml /usr/local/etc/sagan.yaml \u0026\u0026             mkdir -p /var/log/sagan \u0026\u0026     mkdir -p /var/run/sagan \u0026\u0026     useradd sagan --shell /sbin/nologin --home / \u0026\u0026     chown -R nobody:sagan /var/log/sagan \u0026\u0026     chown -R nobody:sagan /var/run/sagan \u0026\u0026             apt-get --force-yes remove -y `cat /tmp/remove` \u0026\u0026     apt-get purge -y man \u0026\u0026     apt-get clean autoclean \u0026\u0026     apt-get autoremove -y \u0026\u0026     (dpkg -l | grep ^rc | awk '{print $2}' | xargs dpkg -P || true) \u0026\u0026     rm -Rf /tmp/* \u0026\u0026     rm -Rf /usr/local/src/* -Rf \u0026\u0026     rm -Rf /var/lib/apt/lists/*.gz \u0026\u0026     rm -Rf /var/lib/cache/* \u0026\u0026     rm -Rf /var/lib/log/* \u0026\u0026     rm -Rf /var/log/* \u0026\u0026     rm -Rf /var/cache/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/run.sh",
            "/root/run.sh"
          ]
        },
        {
          "CmdLine": [
            "/root/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}