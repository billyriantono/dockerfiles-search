MetaArgs: null
Stages:
- As: base
  BaseName: alpine:3.11
  Commands:
  - Labels:
    - Key: org.label-schema.name
      Value: '"AS3 Ninja"'
    Name: label
  - Labels:
    - Key: org.label-schema.vendor
      Value: '"Simon Kowallik"'
    Name: label
  - Labels:
    - Key: org.label-schema.description
      Value: '"AS3 Ninja is a templating and validation engine for your AS3 declarations."'
    Name: label
  - Labels:
    - Key: org.label-schema.url
      Value: '"https://as3ninja.readthedocs.io/"'
    Name: label
  - Labels:
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/simonkowallik/as3ninja"'
    Name: label
  - Labels:
    - Key: org.label-schema.docker.cmd
      Value: '"docker run --rm -d -p 8000:8000 as3ninja"'
    Name: label
  - Labels:
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  From:
    Image: alpine:3.11
  Name: base
  Platform: ""
  SourceCode: FROM alpine:3.11 AS base
- As: build
  BaseName: base
  Commands:
  - CmdLine:
    - apk update --no-cache;     apk add --no-cache             bash             git             make             openssl             python3             vim             alpine-sdk             python3-dev             ;     pip3
      install --no-cache-dir             pipenv             ;
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /build
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /as3ninja
  - Name: workdir
    Path: /as3ninja
  - CmdLine:
    - bash -c "export PYTHONPATH=/build/lib/python3.8/site-packages;              export
      PATH=\"$PATH:/build/bin\";              pip3 install                 --no-cache-dir                 --ignore-installed                 --prefix
      /build                 -r <(pipenv --bare lock --requirements);             "
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c "rm -rf .[a-z]*;              ls | egrep -v '(as3ninja|LICENSE)' | xargs
      rm -rf;              mv /as3ninja /build/as3ninja;             "
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: base
  Name: build
  Platform: ""
  SourceCode: FROM base as build
- BaseName: base
  Commands:
  - Name: workdir
    Path: /
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build
    - /usr
  - CmdLine:
    - apk update --no-cache;     apk add --no-cache             bash             git             openssl             python3             vim             ;     pip3
      install --no-cache-dir             email-validator             ;     mv /usr/as3ninja
      /as3ninja;     addgroup as3ninja;     adduser -h /as3ninja -s /sbin/nologin
      -G as3ninja -S -D -H as3ninja;     chown -R as3ninja.as3ninja /as3ninja;
    Name: run
    PrependShell: true
  - Name: user
    User: as3ninja
  - Name: expose
    Ports:
    - "8000"
  - CmdLine:
    - uvicorn
    - --host
    - 0.0.0.0
    - --port
    - "8000"
    - as3ninja.api:app
    Name: cmd
    PrependShell: false
  From:
    Stage:
      Index: 0
      Named: base
  Name: ""
  Platform: ""
  SourceCode: FROM base
