{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.7",
      "SourceCode": "FROM python:3.7",
      "Platform": "",
      "From": {
        "Image": "python:3.7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "org.label-schema.name",
              "Value": "\"tclscanner\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"wrapper for tclscan\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/simonkowallik/docker\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Simon Kowallik\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "TCLSCAN_REPO",
              "Value": "\"https://github.com/aidanhs/tclscan.git\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/:/root/.cargo/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/build"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/57E7C6324F81391D.asc",
            "/build/57E7C6324F81391D.asc"
          ]
        },
        {
          "CmdLine": [
            "echo \"* install packages\" \u0026\u0026  apt update -y \u0026\u0026  apt install -y           clang           curl           git           jq           less           make           tcl-dev           tzdata           vim            \u0026\u0026 echo \"* remove default rust + tcl install\" \u0026\u0026  apt remove -y           cargo           rustc           tcl8.6 \u0026\u0026 apt autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"* download, compile, then install tcl\" \u0026\u0026  cd /build \u0026\u0026 curl -sSf -LO http://archive.ubuntu.com/ubuntu/pool/universe/t/tcl8.4/tcl8.4_8.4.20-8.dsc \u0026\u0026 curl -sSf -LO http://archive.ubuntu.com/ubuntu/pool/universe/t/tcl8.4/tcl8.4_8.4.20.orig.tar.gz \u0026\u0026 gpg --import 57E7C6324F81391D.asc \u0026\u0026 gpg --verify tcl8.4_8.4.20-8.dsc \u0026\u0026 grep \"$(sha256sum tcl8.4_8.4.20.orig.tar.gz | cut -d' ' -f1)\" tcl8.4_8.4.20-8.dsc \u003e /dev/null \u0026\u0026 echo \"* tcl8.4 verified successfully\" \u0026\u0026 tar xzf tcl8.4_8.4.20.orig.tar.gz \u0026\u0026  cd /build/tcl8.4.20/unix \u0026\u0026  ./configure --enable-64bit --prefix=/usr \u0026\u0026  make \u0026\u0026  make install \u0026\u0026 rm -rf /build/tcl8.4_8.4.20.orig.tar.gz /build/tcl8.4.20 /build/tcl8.4_8.4.20-8.dsc /build/57E7C6324F81391D.asc;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/tclscan.patch",
            "/build/tclscan.patch"
          ]
        },
        {
          "CmdLine": [
            "echo \"* install rust nightly-2019-06-28\" \u0026\u0026  curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly-2019-06-28 \u0026\u0026  rustup component add rustfmt;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/scandir"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/scandir"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/compile.sh",
            "/compile.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/tclscanner.py",
            "/tclscanner.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/tcl/*",
            "/scandir/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "tclscanner.py"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}