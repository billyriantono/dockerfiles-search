{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.4",
      "SourceCode": "FROM ruby:2.4",
      "Platform": "",
      "From": {
        "Image": "ruby:2.4"
      },
      "Commands": [
        {
          "Maintainer": "Aurora System \u003cit@aurora-system.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.6.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "18.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 buildDeps=' \t\tdpkg-dev \t\ttcl-dev \t\ttk-dev \t' \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\t\u0026\u0026 wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t\u0026\u0026 wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"   \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t\u0026\u0026 gpg --batch --verify python.tar.xz.asc python.tar.xz \t\u0026\u0026 rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t\u0026\u0026 mkdir -p /usr/src/python \t\u0026\u0026 tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t\u0026\u0026 rm python.tar.xz \t\t\u0026\u0026 cd /usr/src/python \t\u0026\u0026 gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t\u0026\u0026 ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t\u0026\u0026 make -j \"$(nproc)\" \t\u0026\u0026 make install \t\u0026\u0026 ldconfig \t\t\u0026\u0026 apt-get purge -y --auto-remove $buildDeps \t\t\u0026\u0026 rm -rf /usr/src/python \u0026\u0026\tpython3 --version\t\u0026\u0026   cd /usr/local/bin \t\u0026\u0026 ln -s idle3 idle \t\u0026\u0026 ln -s pydoc3 pydoc \t\u0026\u0026 ln -s python3 python \\ \u0026\u0026 ln -s python3-config python-config \u0026\u0026  set -ex; \t\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \t\tpython3 get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\t\trm -f get-pip.py \u0026\u0026  apt-get update \u0026\u0026 apt-get install -y bzip2 \u0026\u0026   apt-get install -y mysql-client sqlite3 --no-install-recommends \u0026\u0026   curl -sL https://deb.nodesource.com/setup_8.x | bash - \u0026\u0026 apt-get install -y nodejs --no-install-recommends \u0026\u0026   curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg |  apt-key add - \u0026\u0026   echo \"deb https://dl.yarnpkg.com/debian/ stable main\" |  tee /etc/apt/sources.list.d/yarn.list \u0026\u0026   apt-get update \u0026\u0026 apt-get install yarn \u0026\u0026   apt-get install -y libzmq3-dev \u0026\u0026   apt-get install -y     python-tk \u0026\u0026   pip install numpy \u0026\u0026  pip install Image \u0026\u0026  pip install coloredlogs \u0026\u0026  pip install python-pptx \u0026\u0026  mkdir -p /app/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y -q install ure openjdk-8-jre fonts-opensymbol hyphen-en-us fonts-dejavu fonts-dejavu-core fonts-dejavu-extra \u0026\u0026 apt-get -q -y remove libreoffice-gnome \u0026\u0026  wget -c 'https://aurorasystem-my.sharepoint.com/:u:/g/personal/zhen_guo_aurora-system_com/ESsN1S3fL2BBldRduIyyK3wBJupE2D98wf9ymoj1xsUaSQ?e=d27fdd3cd3b54c9685c446eedf1afe50' -O libreoffice.tar.gz \u0026\u0026  tar -xvf libreoffice.tar.gz \u0026\u0026  cd LibreOffice_5.4.3.2_Linux_x86-64_deb/DEBS \u0026\u0026  dpkg -i *.deb \u0026\u0026  apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026  rm -rf libreoffice.tar.gz \u0026\u0026  rm -rf LibreOffice_5.4.2.2_Linux_x86-64_deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./phantomjs",
            "/usr/bin/phantomjs"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./Gemfile*",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./package.json",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./yarn.lock",
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "cd /app \u0026\u0026   gem install bundler --no-doc --no-ri \u0026\u0026   bundle install \u0026\u0026   yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "['pip', 'install', 'matplotlib=2.0.1']"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        }
      ]
    }
  ]
}