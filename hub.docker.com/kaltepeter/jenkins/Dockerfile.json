{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins:latest",
      "SourceCode": "FROM jenkins:latest",
      "Platform": "",
      "From": {
        "Image": "jenkins:latest"
      },
      "Commands": [
        {
          "Maintainer": "Kayla Altepeter \u003ckayla.altepeter@merrillcorp.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get -y update \u0026\u0026 DEBIAN_FRONTEND=noninteractive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nginx openssh-server git-core openssh-client curl sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nano"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y patch bzip2 gawk g++ gcc make libc6-dev patch libreadline6-dev zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 autoconf libgdbm-dev libncurses5-dev automake libtool bison pkg-config libffi-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'root:root' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "set_root_pw.sh",
            "/set_root_pw.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "run.sh",
            "/run.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /*.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/sshd \u0026\u0026 sed -i \"s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g\" /etc/ssh/sshd_config   \u0026\u0026 sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config   \u0026\u0026 sed -i 's/PermitEmptyPasswords no/PermitEmptyPasswords yes/' /etc/ssh/sshd_config   \u0026\u0026 touch /root/.Xauthority   \u0026\u0026 true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"jenkins:jenkins\" | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/ssh/ssh_host_*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure openssh-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ssh-keygen -A"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd docker \t  \u0026\u0026 passwd -d docker \t  \u0026\u0026 mkdir /home/docker \t  \u0026\u0026 chown docker:docker /home/docker \t  \u0026\u0026 addgroup docker staff \t  \u0026\u0026 addgroup docker sudo \t  \u0026\u0026 true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser --system git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/git/.ssh \u0026\u0026 chmod 700 /home/git/.ssh \t\u0026\u0026 touch /home/git/.ssh/authorized_keys \u0026\u0026 chmod 600 /home/git/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/git \t\u0026\u0026 cd /opt/git \t\u0026\u0026 mkdir test-automation.git \t\u0026\u0026 cd test-automation.git \t\u0026\u0026 git init --bare \t\u0026\u0026 chown -Rf docker:docker ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \u0026\u0026 \t\\curl -L https://get.rvm.io | /bin/bash -s stable \u0026\u0026 \t/bin/bash -l -c \"rvm requirements;\" \u0026\u0026 \t/bin/bash -l -c 'source /var/jenkins_home/.rvm/scripts/rvm' \u0026\u0026 \t/bin/bash -l -c 'rvm install 2.2.4' \u0026\u0026 \t/bin/bash -l -c 'rvm use --default 2.2.4' \u0026\u0026 \t/bin/bash -l -c 'echo \"source $HOME/.rvm/scripts/rvm\" \u003e\u003e ~/.bash_profile' \u0026\u0026 \t/bin/bash -l -c '. ~/.bash_profile' \u0026\u0026 \t/bin/bash -l -c 'gem install bundler'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugins.txt",
            "/usr/share/jenkins/ref/plugins.txt"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/plugins.sh /usr/share/jenkins/ref/plugins.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c",
            "sh /run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}