{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:latest",
      "SourceCode": "FROM golang:latest",
      "Platform": "",
      "From": {
        "Image": "golang:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GO111MODULE",
              "Value": "auto"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install -y vim pkg-config zip g++ zlib1g-dev unzip python \u0026\u0026 \trm -Rf /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o bazel.sh https://github.com/bazelbuild/bazel/releases/download/$(curl -s https://api.github.com/repos/bazelbuild/bazel/releases/latest | grep tag_name | cut -d '\"' -f 4)/bazel-$(curl -s https://api.github.com/repos/bazelbuild/bazel/releases/latest | grep tag_name | cut -d '\"' -f 4)-installer-linux-x86_64.sh \u0026\u0026 \tchmod +x bazel.sh \u0026\u0026 \t./bazel.sh \u0026\u0026 \trm bazel.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"source /usr/local/lib/bazel/bin/bazel-complete.bash\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}