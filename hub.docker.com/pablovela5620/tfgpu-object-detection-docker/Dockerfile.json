{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tensorflow/tensorflow:1.8.0-devel-gpu",
      "SourceCode": "FROM tensorflow/tensorflow:1.8.0-devel-gpu",
      "Platform": "",
      "From": {
        "Image": "tensorflow/tensorflow:1.8.0-devel-gpu"
      },
      "Commands": [
        {
          "CmdLine": [
            "git clone --depth 1 https://github.com/tensorflow/models.git \u0026\u0026     mv models /tensorflow/models"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" \u0026\u0026     echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \u0026\u0026     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \u0026\u0026     apt-get update -y \u0026\u0026 apt-get install google-cloud-sdk -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y protobuf-compiler python-pil python-lxml python-tk \u0026\u0026     pip install Cython \u0026\u0026     pip install contextlib2 \u0026\u0026     pip install jupyter \u0026\u0026     pip install matplotlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth 1 https://github.com/cocodataset/cocoapi.git \u0026\u0026     cd cocoapi/PythonAPI \u0026\u0026     make -j8 \u0026\u0026     cp -r pycocotools /tensorflow/models/research \u0026\u0026     cd ../../ \u0026\u0026     rm -rf cocoapi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL \"https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip\" \u0026\u0026     unzip protoc-3.0.0-linux-x86_64.zip -d proto3 \u0026\u0026     mv proto3/bin/* /usr/local/bin \u0026\u0026     mv proto3/include/* /usr/local/include \u0026\u0026     rm -rf proto3 protoc-3.0.0-linux-x86_64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tensorflow/models/research \u0026\u0026     protoc object_detection/protos/*.proto --python_out=."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "$PYTHONPATH:/tensorflow/models/research:/tensorflow/models/research/slim"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install -y wget vim emacs nano"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/pet_faces_tfrecord/ \u0026\u0026     cd /tmp/pet_faces_tfrecord \u0026\u0026     curl \"http://download.tensorflow.org/models/object_detection/pet_faces_tfrecord.tar.gz\" | tar xzf -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     curl -O \"http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz\" \u0026\u0026     tar xzf ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz \u0026\u0026     rm ssd_mobilenet_v1_0.75_depth_300x300_coco14_sync_2018_07_03.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     curl -L -o tflite.zip     https://storage.googleapis.com/download.tensorflow.org/models/tflite/frozengraphs_ssd_mobilenet_v1_0.75_quant_pets_2018_06_29.zip \u0026\u0026     unzip tflite.zip -d tflite \u0026\u0026     rm tflite.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tensorflow \u0026\u0026     printf '\\n\\nn\\ny\\nn\\nn\\nn\\ny\\nn\\nn\\nn\\nn\\nn\\nn\\n\\ny\\n%s\\n\\n\\n' ${ANDROID_HOME}|./configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tensorflow/models/research/object_detection"
        },
        {
          "CmdLine": [
            "mkdir my_scripts \u0026\u0026     apt-get install tmux -y"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}