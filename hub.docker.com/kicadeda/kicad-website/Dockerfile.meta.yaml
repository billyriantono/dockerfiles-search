MetaArgs: null
Stages:
- As: build-env
  BaseName: alpine:3.8
  Commands:
  - Name: workdir
    Path: /site
  - Env:
    - Key: HUGO_VERSION
      Value: 0.56.3
    Name: env
  - Env:
    - Key: HUGO_DOWNLOAD_URL
      Value: https://github.com/spf13/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_Linux-64bit.tar.gz
    Name: env
  - CmdLine:
    - apk add --update --no-cache --virtual build-dependencies
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --update --no-cache \t\tbash \t\tbuild-base \t\tca-certificates \t\tcurl
      \t\tgit \t\tlibcurl \t\tlibxml2-dev \t\tlibxslt-dev \t\topenssh \t\trsync \t\truby
      \t\truby-dev \t\twget"
    Name: run
    PrependShell: true
  - CmdLine:
    - "gem install \t\tasciidoctor:1.5.7.1 \t\thtml-proofer \t\tnokogiri \t--no-document
      && \tapk del build-dependencies"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget \"$HUGO_DOWNLOAD_URL\" && \ttar xzf hugo_${HUGO_VERSION}_Linux-64bit.tar.gz
      && \tmv hugo /usr/bin/hugo && \trm hugo_${HUGO_VERSION}_Linux-64bit.tar.gz LICENSE
      README.md || true"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ./
  - CmdLine:
    - hugo -b http://kicad-pcb.org/
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.8
  Name: build-env
  Platform: ""
  SourceCode: FROM alpine:3.8 as build-env
- BaseName: nginx:alpine
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.docker/default.conf
    - /etc/nginx/conf.d/default.conf
  - Chown: ""
    From: build-env
    Name: copy
    SourcesAndDest:
    - /site/public
    - /usr/share/nginx/html
  - CmdLine:
    - chmod -R 777 /var/log/nginx /var/cache/nginx /var/run      && chgrp -R 0 /etc/nginx      &&
      chmod -R g+rwX /etc/nginx
    Name: run
    PrependShell: true
  - Name: user
    User: "1000"
  - Name: expose
    Ports:
    - "8081"
  From:
    Image: nginx:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM nginx:alpine
