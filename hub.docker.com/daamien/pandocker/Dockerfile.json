{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Key": "APT_CACHER",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_PRIORITY",
              "Value": "critical"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBCONF_NOWARNINGS",
              "Value": "yes"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     if [ -n \"${APT_CACHER}\" ] ; then         echo \"Acquire::http::Proxy \\\"${APT_CACHER}\\\";\" | tee /etc/apt/apt.conf.d/01proxy ;     fi;     apt-get -qq update \u0026\u0026     apt-get -qy install --no-install-recommends         openssh-client         rsync         lmodern         texlive         texlive-lang-french \t\ttexlive-lang-german         texlive-luatex         texlive-pstricks         texlive-xetex \t\txzdec         netbase         fonts-lato \t\tfonts-liberation         make         git         parallel         wget         unzip         python3-pip         python3-setuptools         python3-wheel         python3-yaml         poppler-utils         zlibc     \u0026\u0026 apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /etc/apt/apt.conf.d/01proxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ~/.ssh \u0026\u0026     echo -e \"Host *\\n\\tStrictHostKeyChecking no\\n\\n\" \u003e ~/.ssh/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "cache/",
            "./cache"
          ]
        },
        {
          "Key": "PANDOC_VERSION",
          "Name": "arg",
          "Value": "2.2.3.1"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fetch-pandoc.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "fetch-pandoc.sh ${PANDOC_VERSION} ./cache/pandoc.deb \u0026\u0026     dpkg --install ./cache/pandoc.deb \u0026\u0026     rm -f ./cache/pandoc.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "requirements.txt",
            "./"
          ]
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install --find-links file://${PWD}/cache -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "TEMPLATES_DIR",
          "Name": "arg",
          "Value": "/root/.pandoc/templates"
        },
        {
          "CmdLine": [
            "mkdir -p ${TEMPLATES_DIR} \u0026\u0026 \twget https://raw.githubusercontent.com/Wandmalfarbe/pandoc-latex-template/master/eisvogel.tex -O ${TEMPLATES_DIR}/eisvogel.latex"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tlmgr init-usertree \u0026\u0026 \ttlmgr install ly1 inconsolata sourcesanspro sourcecodepro mweights"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/pandoc"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/pandoc"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "pandoc1.sh",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "pandoc"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}