MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: 'maintener:'
      Value: YukiMiyatake<YukiMariaMiyatake@gmail.com>
    Name: label
  - Name: workdir
    Path: /root
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y curl unzip wget python python3-pip software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip     &&
      unzip ngrok-stable-linux-amd64.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $HOME/ngrok/bin:$PATH
    Name: env
  - CmdLine:
    - wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
      -O packages-microsoft-prod.deb     && dpkg -i packages-microsoft-prod.deb     &&
      add-apt-repository universe     && apt-get install -y apt-transport-https     &&
      apt-get update     && apt-get install -y dotnet-sdk-2.2
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y perl     && curl -L git.io/nodebrew | perl - setup
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $HOME/.nodebrew/current/bin:$PATH
    Name: env
  - CmdLine:
    - ls -al $HOME/.nodebrew/current/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - nodebrew install v8.10     && nodebrew install v10.15     && nodebrew use v10.15
    Name: run
    PrependShell: true
  - CmdLine:
    - npm config set user 0     && npm config set unsafe-perm true
    Name: run
    PrependShell: true
  - CmdLine:
    - npm update -g
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://aka.ms/InstallAzureCLIDeb | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -U aliyun-log-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libsecret-1-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g -y serverless
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g serverless-azure-functions
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
