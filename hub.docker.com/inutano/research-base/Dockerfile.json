{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Tazro Inutano Ohta \u003cinutano@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -yq --no-install-recommends   git   nano   vim   wget   build-essential   python-dev   ca-certificates   bzip2   unzip   sudo   locales   gfortran   gcc   libnettle4   \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.9.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/tini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc",
            "/tini.asc"
          ]
        },
        {
          "CmdLine": [
            "gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 0527A9B7   \u0026\u0026 gpg --verify /tini.asc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONTAINER_USER",
              "Value": "nijntje"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/bash -N -u $NB_UID $CONTAINER_USER \u0026\u0026   mkdir -p /opt/conda \u0026\u0026   chown nijntje /opt/conda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /home/$CONTAINER_USER/work \u0026\u0026   mkdir /home/$CONTAINER_USER/.jupyter \u0026\u0026   mkdir /home/$CONTAINER_USER/.local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "nijntje"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026   mkdir -p $CONDA_DIR \u0026\u0026   wget --quiet https://repo.continuum.io/miniconda/Miniconda3-3.9.1-Linux-x86_64.sh \u0026\u0026   echo \"6c6b44acdd0bc4229377ee10d52c8ac6160c336d9cdd669db7371aa9344e1ac3 *Miniconda3-3.9.1-Linux-x86_64.sh\" | sha256sum -c - \u0026\u0026   /bin/bash Miniconda3-3.9.1-Linux-x86_64.sh -f -b -p $CONDA_DIR \u0026\u0026   rm Miniconda3-3.9.1-Linux-x86_64.sh \u0026\u0026   $CONDA_DIR/bin/conda install --yes conda==3.14.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --yes   'pandas=0.17*'   'matplotlib=1.4*'   'numpy=1.10*'   'scipy=0.16*'   'seaborn=0.6*'   'scikit-learn=0.16*'   'scikit-image=0.11*'   'sympy=0.7*'   'cython=0.22*'   'patsy=0.4*'   'statsmodels=0.6*'   'cloudpickle=0.1*'   'dill=0.2*'   'numba=0.22*'   \u0026\u0026 conda clean -yt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda config --add channels r"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --yes   'rpy2=2.7*'   'r-base=3.2*'   'r-irkernel=0.5*'   'r-plyr=1.8*'   'r-devtools=1.9*'   'r-dplyr=0.4*'   'r-ggplot2=1.0*'   'r-tidyr=0.3*'   'r-rmarkdown=0.8*'   'r-forecast=5.8*'   'r-stringr=0.6*'   'r-rsqlite=1.0*'   'r-reshape2=1.4*'   'r-nycflights13=0.1*'   'r-caret=6.0*'   'r-rcurl=1.95*'   'r-randomforest=4.6*' \u0026\u0026 conda clean -yt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --yes python==3.4.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/home/$CONTAINER_USER/work"
        },
        {
          "CmdLine": [
            "chown -R $CONTAINER_USER:users /home/$CONTAINER_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "nijntje"
        }
      ]
    }
  ]
}