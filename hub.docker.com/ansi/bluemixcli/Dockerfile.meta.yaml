MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get update     &&     apt-get upgrade -y &&     apt-get install -y vim mc
      git screen wget curl bash-completion npm zip autoconf libtool mpc                        apt-transport-https
      apt-utils ca-certificates software-properties-common                        mosquitto-clients
      imagemagick python virtualenv python-pip redis-tools                          ruby-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade watson-developer-cloud cloudfoundry-client
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      $(lsb_release -cs) stable"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y docker-ce
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key
      | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.cloudfoundry.org/debian stable main" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y cf-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://public.dhe.ibm.com/cloud/bluemix/cli/bluemix-cli/0.12.1/IBM_Cloud_CLI_0.12.1_amd64.tar.gz
      | tar xvz
    Name: run
    PrependShell: true
  - CmdLine:
    - Bluemix_CLI/install_bluemix_cli
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf Bluemix_CLI
    Name: run
    PrependShell: true
  - CmdLine:
    - bx plugin install container-registry -r Bluemix
    Name: run
    PrependShell: true
  - CmdLine:
    - bx plugin install container-service  -r Bluemix
    Name: run
    PrependShell: true
  - CmdLine:
    - bx plugin install cloud-functions    -r Bluemix
    Name: run
    PrependShell: true
  - CmdLine:
    - bx plugin install dev                -r Bluemix
    Name: run
    PrependShell: true
  - CmdLine:
    - bx plugin install logging-cli        -r Bluemix
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s
      https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x ./kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ./kubectl /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8001"
  - CmdLine:
    - curl https://storage.googleapis.com/kubernetes-helm/helm-canary-linux-amd64.tar.gz
      | tar xvz
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x linux-amd64/helm
    Name: run
    PrependShell: true
  - CmdLine:
    - mv linux-amd64/helm /usr/local/bin/helm
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf linux-amd64
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root && curl -L https://git.io/getLatestIstio | sh -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "PATH=\$PATH:/root/istio-1.0.4/bin" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://openwhisk.ng.bluemix.net/cli/go/download/linux/amd64/wsk
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 700 wsk
    Name: run
    PrependShell: true
  - CmdLine:
    - mv wsk /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install travis
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install platformio
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir                     /root/bin
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.sh
    - /root/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pushVisualRecognition.sh
    - /root/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - clearDomains.py
    - /root/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start_cluster.sh
    - /root/bin/
  - CmdLine:
    - echo "PATH=\$PATH:/root/bin/"      >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "echo \" -------> Please run init.sh <---------\"" >> /root/.bashrc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
