MetaArgs: null
Stages:
- BaseName: frolvlad/alpine-glibc
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"k1LoW <k1lowxb@gmail.com>"'
    - Key: description
      Value: '"Pandoc for Japanese based on Alpine Linux."'
    Name: label
  - Env:
    - Key: TEXLIVE_VERSION
      Value: "2019"
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/local/texlive/$TEXLIVE_VERSION/bin/x86_64-linuxmusl:$PATH
    Name: env
  - CmdLine:
    - apk --no-cache add perl wget xz tar fontconfig-dev  && mkdir -p /tmp/src/install-tl-unx  &&
      wget -qO- ftp://tug.org/texlive/historic/$TEXLIVE_VERSION/install-tl-unx.tar.gz
      |     tar -xz -C /tmp/src/install-tl-unx --strip-components=1  && printf "%s\n"       "selected_scheme
      scheme-basic"       "option_doc 0"       "option_src 0"       > /tmp/src/install-tl-unx/texlive.profile  &&
      /tmp/src/install-tl-unx/install-tl       --profile=/tmp/src/install-tl-unx/texlive.profile  &&
      tlmgr option repository http://mirror.ctan.org/systems/texlive/tlnet  && tlmgr
      update --self && tlmgr update --all  && tlmgr install       collection-basic
      collection-latex       collection-latexrecommended collection-latexextra       collection-fontsrecommended
      collection-langjapanese latexmk       luatexbase ctablestack fontspec luaotfload
      lualatex-math       sourcesanspro sourcecodepro  && rm -Rf /tmp/src  && apk
      --no-cache del xz tar fontconfig-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: PANDOC_VERSION
      Value: 2.7.2
    Name: env
  - Env:
    - Key: PANDOC_DOWNLOAD_URL
      Value: https://github.com/jgm/pandoc/archive/$PANDOC_VERSION.tar.gz
    Name: env
  - Env:
    - Key: PANDOC_DOWNLOAD_SHA512
      Value: 4b3a21cf76777ed269bf7c13fd09ab1d5c97ed21ec9f02bff95fd3641ac9d52bde19a6e2ffb325378e611dfbe66b8b00769d8510a8b2fb1dfda8062d79b12233
    Name: env
  - Env:
    - Key: PANDOC_ROOT
      Value: /usr/local/pandoc
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$PANDOC_ROOT/bin
    Name: env
  - CmdLine:
    - apk add --no-cache     gmp     libffi  && apk add --no-cache --virtual build-dependencies     --repository
      "http://nl.alpinelinux.org/alpine/edge/community"     ghc     cabal     linux-headers     musl-dev     zlib-dev     curl  &&
      mkdir -p /pandoc-build && cd /pandoc-build  && curl -fsSL "$PANDOC_DOWNLOAD_URL"
      -o pandoc.tar.gz  && echo "$PANDOC_DOWNLOAD_SHA512  pandoc.tar.gz" | sha512sum
      -c -  && tar -xzf pandoc.tar.gz && rm -f pandoc.tar.gz  && ( cd pandoc-$PANDOC_VERSION
      && cabal update && cabal install --only-dependencies     && cabal configure
      --prefix=$PANDOC_ROOT     && cabal build     && cabal copy     && cd .. )  &&
      rm -Rf pandoc-$PANDOC_VERSION/  && apk del --purge build-dependencies  && rm
      -Rf /root/.cabal/ /root/.ghc/  && cd / && rm -Rf /pandoc-build
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /workspace
    - /root/.pandoc/templates
  - Name: workdir
    Path: /workspace
  From:
    Image: frolvlad/alpine-glibc
  Name: ""
  Platform: ""
  SourceCode: FROM frolvlad/alpine-glibc
