{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:7-jdk",
      "SourceCode": "FROM openjdk:7-jdk",
      "Platform": "",
      "From": {
        "Image": "openjdk:7-jdk"
      },
      "Commands": [
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/lib/SMV/tools:/usr/lib/spark/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://cran.rstudio.com/bin/linux/debian lenny-cran/\" \u003e\u003e /etc/apt/source.list \u0026\u0026    apt-key adv --keyserver hkp://pgp.mit.edu --recv-key 381BA480 \u0026\u0026    apt-get update \u0026\u0026    apt-get install -y r-base \u0026\u0026    apt-get install -y unzip \u0026\u0026    apt-get install -y sudo \u0026\u0026    apt-get install -y vim \u0026\u0026    apt-get install -y rsync \u0026\u0026    apt-get install -y git \u0026\u0026    apt-get install -y python \"python-dev\" \"python-pip\" \u0026\u0026    apt-get install -y graphviz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /projects \u0026\u0026    cd /projects \u0026\u0026    wget -qO- https://raw.githubusercontent.com/TresAmigosSD/SMV/master/tools/smv-install | bash -s -- -spark 1.5.2.5 \u0026\u0026    mkdir -p /usr/lib \u0026\u0026    mv SMV_* /usr/lib/SMV \u0026\u0026    mv spark-* /usr/lib/spark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./requirements.txt",
            "/tmp/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -r /tmp/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get remove --purge -y python-dev \u0026\u0026    apt-get remove --purge -y python-pip \u0026\u0026    apt-get clean \u0026\u0026    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./kernel.json",
            "/usr/local/share/jupyter/kernels/smv-pyshell/kernel.json"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./hive-site.xml",
            "/usr/lib/spark/conf/hive-site.xml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./entrypoint.sh",
            "/usr/bin/entrypoint.sh"
          ]
        },
        {
          "Env": [
            {
              "Key": "TEMPLATE_DIR",
              "Value": "/home/template"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./bashrc",
            "./jupyter_notebook_config.py",
            "${TEMPLATE_DIR}/"
          ]
        },
        {
          "CmdLine": [
            "entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}