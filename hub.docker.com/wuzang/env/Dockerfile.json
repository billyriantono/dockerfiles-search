{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"zhanghf@zailingtech.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.10.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_ARCH",
              "Value": "'linux-amd64'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOROOT",
              "Value": "/usr/local/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:$GOROOT/bin:$GOROOT/pkg/tool/linux_amd64:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "M2_HOME",
              "Value": "/usr/local/maven"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "M2",
              "Value": "$M2_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$M2:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y locales \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "\"Asia/Shanghai\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update -y     \u0026\u0026 apt install -y build-essential     \u0026\u0026 apt install -y gdb     \u0026\u0026 apt install -y valgrind     \u0026\u0026 apt install -y git     \u0026\u0026 apt install -y man     \u0026\u0026 apt install -y clang     \u0026\u0026 apt install -y libclang-dev     \u0026\u0026 apt install -y cmake     \u0026\u0026 apt install -y wget     \u0026\u0026 apt install -y curl     \u0026\u0026 apt install -y silversearcher-ag     \u0026\u0026 apt install -y tmux     \u0026\u0026 apt install -y zsh     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth=1 https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh     \u0026\u0026 chsh -s /bin/zsh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update -y     \u0026\u0026 echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections     \u0026\u0026 apt install -y openssl     \u0026\u0026 apt install -y ctags     \u0026\u0026 apt install -y cscope     \u0026\u0026 apt install -y python2.7     \u0026\u0026 apt install -y python2.7-dev     \u0026\u0026 apt install -y python3.7     \u0026\u0026 apt install -y python3.7-dev     \u0026\u0026 apt install -y ruby     \u0026\u0026 apt install -y ruby-dev     \u0026\u0026 apt install -y lua5.1     \u0026\u0026 apt install -y liblua5.1-0-dev     \u0026\u0026 apt install -y luajit     \u0026\u0026 apt install -y libluajit-5.1-dev     \u0026\u0026 apt install -y perl     \u0026\u0026 apt install -y libperl-dev     \u0026\u0026 apt install -y tcl     \u0026\u0026 apt install -y tcl-dev     \u0026\u0026 apt install -y libtcl8.6     \u0026\u0026 apt install -y libncurses5-dev     \u0026\u0026 apt install -y libtool     \u0026\u0026 apt install -y automake     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update -y     \u0026\u0026 apt install -y software-properties-common     \u0026\u0026 add-apt-repository -y ppa:webupd8team/java     \u0026\u0026 apt-get update     \u0026\u0026 echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections     \u0026\u0026 apt-get install -y oracle-java8-installer     \u0026\u0026 update-java-alternatives -s java-8-oracle     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "golang_download_url=\"https://golang.org/dl/go${GOLANG_VERSION}.${GOLANG_ARCH}.tar.gz\"     \u0026\u0026 wget -O go.tgz \"$golang_download_url\"     \u0026\u0026 tar -C /usr/local -xzf go.tgz     \u0026\u0026 rm go.tgz     \u0026\u0026 go version     \u0026\u0026 go get github.com/klauspost/asmfmt/cmd/asmfmt     \u0026\u0026 go get github.com/derekparker/delve/cmd/dlv     \u0026\u0026 go get github.com/kisielk/errcheck     \u0026\u0026 go get github.com/davidrjenni/reftools/cmd/fillstruct     \u0026\u0026 go get github.com/nsf/gocode     \u0026\u0026 go get github.com/rogpeppe/godef     \u0026\u0026 go get github.com/zmb3/gogetdoc     \u0026\u0026 go get golang.org/x/tools/cmd/goimports     \u0026\u0026 go get github.com/golang/lint/golint     \u0026\u0026 go get github.com/alecthomas/gometalinter     \u0026\u0026 go get github.com/fatih/gomodifytags     \u0026\u0026 go get golang.org/x/tools/cmd/gorename     \u0026\u0026 go get github.com/jstemmer/gotags     \u0026\u0026 go get golang.org/x/tools/cmd/guru     \u0026\u0026 go get github.com/josharian/impl     \u0026\u0026 go get github.com/dominikh/go-tools/cmd/keyify     \u0026\u0026 go get github.com/fatih/motion     \u0026\u0026 go get honnef.co/go/tools/cmd/megacheck     \u0026\u0026 go get -u github.com/golang/dep/cmd/dep     \u0026\u0026 go get -u github.com/cweill/gotests/..."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O maven.tgz http://www.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz     \u0026\u0026 tar -C /usr/local -xzf maven.tgz     \u0026\u0026 rm maven.tgz     \u0026\u0026 ln -s /usr/local/apache-maven-3.5.4/ /usr/local/maven"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/vim/vim.git     \u0026\u0026 cd vim     \u0026\u0026 git checkout v8.1.0280     \u0026\u0026 ./configure --prefix=/usr         --with-features=huge         --enable-multibyte         --enable-cscope=yes         --enable-luainterp=yes         --with-luajit         --enable-rubyinterp=yes         --with-ruby-command=/usr/bin/ruby         --enable-perlinterp         --enable-pythoninterp=yes         --with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu/         --enable-python3interp=yes         --with-python3-config-dir=/usr/lib/python3.7/config-3.7m-x86_64-linux-gnu         --enable-tclinterp=yes         --enable-gui=auto     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd ..     \u0026\u0026 rm -rf vim/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://andersbakken.github.io/rtags-releases/rtags-2.16.tar.gz     \u0026\u0026 tar zxvf rtags-2.16.tar.gz     \u0026\u0026 cd rtags-2.16     \u0026\u0026 cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd ..     \u0026\u0026 rm -rf rtags-2.16/     \u0026\u0026 rm -rf rtags-2.16.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/rizsotto/Bear.git     \u0026\u0026 cd Bear     \u0026\u0026 cmake .     \u0026\u0026 make all     \u0026\u0026 make install     \u0026\u0026 cd ..     \u0026\u0026 rm -rf Bear"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".vimrc",
            "/root/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".tmux.conf",
            "/root/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".zshrc",
            "/root/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/work"
        },
        {
          "CmdLine": [
            "zsh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}