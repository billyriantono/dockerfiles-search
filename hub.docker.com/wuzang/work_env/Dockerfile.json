{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "Haifeng Zhang \"zhanghf@zailingtech.com\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.9.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "\"Asia/Shanghai\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum update -y     \u0026\u0026 yum install -y epel-release.noarch     \u0026\u0026 yum -y groupinstall \"Development Tools\"     \u0026\u0026 yum -y install gitflow     \u0026\u0026 yum -y install valgrind     \u0026\u0026 yum -y install man     \u0026\u0026 yum install -y zsh     \u0026\u0026 yum install -y which     \u0026\u0026 git clone --depth=1 https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh     \u0026\u0026 chsh -s /bin/zsh     \u0026\u0026 yum install -y cmake     \u0026\u0026 yum install -y clang     \u0026\u0026 yum install -y clang-devel.x86_64     \u0026\u0026 yum install -y llvm-devel.x86_64     \u0026\u0026 yum install -y openssl     \u0026\u0026 yum install -y cscope     \u0026\u0026 yum install -y python     \u0026\u0026 yum install -y python-devel     \u0026\u0026 yum install -y ruby     \u0026\u0026 yum install -y ruby-devel     \u0026\u0026 yum install -y lua     \u0026\u0026 yum install -y lua-devel     \u0026\u0026 yum install -y perl     \u0026\u0026 yum install -y tcl     \u0026\u0026 yum install -y tcl-devel     \u0026\u0026 yum install -y ncurses     \u0026\u0026 yum install -y ncurses-devel     \u0026\u0026 yum install -y the_silver_searcher     \u0026\u0026 yum install -y tmux     \u0026\u0026 yum install -y python34     \u0026\u0026 yum install -y python34-devel     \u0026\u0026 yum install -y libtool     \u0026\u0026 yum install -y autoconf     \u0026\u0026 yum install -y automake     \u0026\u0026 yum install -y pkgconfig     \u0026\u0026 yum install -y unzip     \u0026\u0026 yum install -y wget     \u0026\u0026 yum clean all     \u0026\u0026 goRelArch='linux-amd64'     \u0026\u0026 url=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"     \u0026\u0026 wget -O go.tgz \"$url\"     \u0026\u0026 tar -C /usr/local -xzf go.tgz     \u0026\u0026 rm go.tgz     \u0026\u0026 go version     \u0026\u0026 go get github.com/klauspost/asmfmt/cmd/asmfmt     \u0026\u0026 go get github.com/kisielk/errcheck     \u0026\u0026 go get github.com/davidrjenni/reftools/cmd/fillstruct     \u0026\u0026 go get github.com/nsf/gocode     \u0026\u0026 go get github.com/rogpeppe/godef     \u0026\u0026 go get github.com/zmb3/gogetdoc     \u0026\u0026 go get golang.org/x/tools/cmd/goimports     \u0026\u0026 go get github.com/golang/lint/golint     \u0026\u0026 go get github.com/alecthomas/gometalinter     \u0026\u0026 go get github.com/fatih/gomodifytags     \u0026\u0026 go get golang.org/x/tools/cmd/gorename     \u0026\u0026 go get github.com/jstemmer/gotags     \u0026\u0026 go get golang.org/x/tools/cmd/guru     \u0026\u0026 go get github.com/josharian/impl     \u0026\u0026 go get github.com/dominikh/go-tools/cmd/keyify     \u0026\u0026 go get github.com/fatih/motion     \u0026\u0026 go get -u github.com/golang/dep/cmd/dep     \u0026\u0026 go get -u github.com/cweill/gotests/..."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".vimrc",
            "/root/"
          ]
        },
        {
          "CmdLine": [
            "cd /usr/local/src     \u0026\u0026 git clone https://github.com/vim/vim.git     \u0026\u0026 cd vim     \u0026\u0026 git checkout v8.0.1300     \u0026\u0026 ./configure --prefix=/usr         --with-features=huge         --enable-multibyte         --enable-cscope=yes         --enable-luainterp=yes         --enable-rubyinterp=yes         --enable-pythoninterp=yes         --with-python-config-dir=/usr/lib64/python2.7/config/         --with-python3-config-dir=/usr/lib64/python3.4/config-3.4m         --enable-python3interp=yes         --enable-tclinterp=yes         --enable-gui=auto     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd ..     \u0026\u0026 rm -rf vim/     \u0026\u0026 git clone https://github.com/powerline/fonts.git     \u0026\u0026 cd fonts     \u0026\u0026 ./install.sh     \u0026\u0026 cd ..     \u0026\u0026 rm -rf fonts/     \u0026\u0026 wget https://andersbakken.github.io/rtags-releases/rtags-2.16.tar.gz     \u0026\u0026 tar zxvf rtags-2.16.tar.gz     \u0026\u0026 cd rtags-2.16     \u0026\u0026 cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd ..     \u0026\u0026 rm -rf rtags-2.16/     \u0026\u0026 rm -rf rtags-2.16.tar.gz     \u0026\u0026 git clone https://github.com/rizsotto/Bear.git     \u0026\u0026 cd Bear     \u0026\u0026 git checkout 2.2.1     \u0026\u0026 cmake .     \u0026\u0026 make all     \u0026\u0026 make install     \u0026\u0026 cd ..     \u0026\u0026 rm -rf Bear     \u0026\u0026 git clone https://github.com/tomasr/molokai.git ~/.vim/bundle/molokai     \u0026\u0026 git clone https://github.com/Shougo/unite.vim.git ~/.vim/bundle/unite.vim     \u0026\u0026 git clone https://github.com/shougo/vimfiler.vim.git ~/.vim/bundle/vimfiler.vim     \u0026\u0026 vim +PlugInstall +qall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".tmux.conf",
            "/root/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".zshrc",
            "/root/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/work"
        },
        {
          "CmdLine": [
            "zsh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}