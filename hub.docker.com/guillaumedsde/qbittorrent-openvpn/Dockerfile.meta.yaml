MetaArgs:
- DefaultValue: amd64
  Key: ARCH
  ProvidedValue: null
  Value: amd64
Stages:
- BaseName: ubuntu:rolling
  Commands:
  - Key: ARCH
    Name: arg
    Value: null
  - Key: DOCKERIZE_VERSION
    Name: arg
    Value: v0.6.1
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: DOCKER_REPO
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.name
      Value: '"$DOCKER_REPO"'
    - Key: org.label-schema.description
      Value: '"${ARCH} Docker container running qBittorrent torrent client with WebUI
        over an OpenVPN tunnel"'
    - Key: org.label-schema.url
      Value: '"https://guillaumedsde.gitlab.io/docker-qbittorrent-openvpn/"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/guillaumedsde/docker-qbittorrent-openvpn"'
    - Key: org.label-schema.vendor
      Value: '"guillaumedsde"'
    - Key: org.label-schema.schema-version
      Value: '"1.0.0-rc1"'
    Name: label
  - Name: volume
    Volumes:
    - /data
  - Name: volume
    Volumes:
    - /config
  - CmdLine:
    - apt update   && apt install -y --no-install-recommends software-properties-common   &&
      add-apt-repository -y ppa:qbittorrent-team/qbittorrent-stable   && apt install
      -y --no-install-recommends   curl   jq   bash   qbittorrent-nox   curl   ufw   iputils-ping   openvpn   bc   tzdata   tinyproxy   dumb-init   &&
      curl -OL https://github.com/jwilder/dockerize/releases/download/${DOCKERIZE_VERSION}/dockerize-linux-${ARCH}-${DOCKERIZE_VERSION}.tar.gz   &&
      tar -C /usr/local/bin -xzvf dockerize-linux-${ARCH}-${DOCKERIZE_VERSION}.tar.gz   &&
      apt purge -y software-properties-common   && apt-get autoremove -y --purge   &&
      apt autoclean   && apt clean   && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*   &&
      groupmod -g 1000 users   && useradd -u 911 -U -d /config -s /bin/false abc   &&
      usermod -G users abc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - openvpn/
    - /etc/openvpn/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - transmission/
    - /etc/transmission/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts
    - /etc/scripts/
  - Env:
    - Key: OPENVPN_USERNAME
      Value: '**None**'
    - Key: OPENVPN_PASSWORD
      Value: '**None**'
    - Key: OPENVPN_PROVIDER
      Value: '**None**'
    - Key: GLOBAL_APPLY_PERMISSIONS
      Value: "true"
    - Key: ENABLE_UFW
      Value: "false"
    - Key: UFW_ALLOW_GW_NET
      Value: "false"
    - Key: UFW_EXTRA_PORTS
      Value: ""
    - Key: UFW_DISABLE_IPTABLES_REJECT
      Value: "false"
    - Key: PUID
      Value: ""
    - Key: PGID
      Value: ""
    - Key: DROP_DEFAULT_ROUTE
      Value: ""
    - Key: WEBPROXY_ENABLED
      Value: "false"
    - Key: WEBPROXY_PORT
      Value: "8888"
    - Key: HEALTH_CHECK_HOST
      Value: google.com
    Name: env
  - Health:
      Interval: 60000000000
      Test:
      - CMD-SHELL
      - /etc/scripts/healthcheck.sh
    Name: healthcheck
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - dumb-init
    - /etc/openvpn/start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:rolling
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:rolling
