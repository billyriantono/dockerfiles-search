{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7-fpm-alpine3.7",
      "SourceCode": "FROM php:7-fpm-alpine3.7",
      "Platform": "",
      "From": {
        "Image": "php:7-fpm-alpine3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LOCALTIME",
              "Value": "Europe/Paris"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --update openssh \u0026\u0026     apk add --no-cache --update --virtual .phpize-deps $PHPIZE_DEPS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --update --virtual .tzdata-deps tzdata \u0026\u0026     cp /usr/share/zoneinfo/$LOCALTIME /etc/localtime \u0026\u0026     echo $LOCALTIME \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --update zlib libmemcached-libs \u0026\u0026     apk add --no-cache --update --virtual .memcached-deps zlib-dev libmemcached-dev cyrus-sasl-dev \u0026\u0026     pecl install memcached \u0026\u0026     docker-php-ext-enable memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --update yaml \u0026\u0026     apk add --no-cache --update --virtual .yaml-deps yaml-dev \u0026\u0026     pecl install yaml \u0026\u0026     docker-php-ext-enable yaml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --update freetype libpng libjpeg-turbo libjpeg-turbo-utils imagemagick \u0026\u0026     apk add --no-cache --update --virtual .gd-deps freetype-dev libpng-dev libjpeg-turbo-dev \u0026\u0026     docker-php-ext-configure gd     --with-gd     --with-freetype-dir=/usr/include/     --with-png-dir=/usr/include/     --with-jpeg-dir=/usr/include/ \u0026\u0026     NPROC=$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1) \u0026\u0026     docker-php-ext-install -j${NPROC} gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --update icu zlib \u0026\u0026     apk add --no-cache --update --virtual .intl-deps icu-dev zlib-dev g++ \u0026\u0026     docker-php-ext-install intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --update freetype mysql-client \u0026\u0026     docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd \u0026\u0026     docker-php-ext-configure mysqli --with-mysqli=mysqlnd \u0026\u0026     docker-php-ext-install pdo_mysql \u0026\u0026     docker-php-ext-install mysqli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install opcache \u0026\u0026     docker-php-ext-install zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /usr/share/php7 \u0026\u0026     rm -rf /tmp/* \u0026\u0026     apk del .tzdata-deps .phpize-deps .memcached-deps .intl-deps .yaml-deps .gd-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        }
      ]
    }
  ]
}