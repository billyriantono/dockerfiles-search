{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "COMPOSE_VERSION",
              "Value": "1.17.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "17.09.1.ce-1.el7.centos"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MVN_VERSION",
              "Value": "3.3.9"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum -y update     \u0026\u0026 yum -y install yum-utils device-mapper-persistent-data lvm2     \u0026\u0026 yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose     \u0026\u0026 chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y update     \u0026\u0026 yum -y install openssh-server openssh-clients git svn unzip zip lsof wget which java-1.8.0-openjdk-devel.x86_64               docker-ce-${DOCKER_VERSION}     \u0026\u0026 yum -y clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's|session    required     pam_loginuid.so|session    optional     pam_loginuid.so|g' /etc/pam.d/sshd     \u0026\u0026 mkdir -p /var/run/sshd     \u0026\u0026 useradd -u 1000 -m -s /bin/bash jenkins     \u0026\u0026 echo \"jenkins:jenkins\" | chpasswd     \u0026\u0026 /usr/bin/ssh-keygen -A"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q http://www.eu.apache.org/dist/maven/maven-3/${MVN_VERSION}/binaries/apache-maven-${MVN_VERSION}-bin.tar.gz     \u0026\u0026 tar xzf apache-maven-${MVN_VERSION}-bin.tar.gz     \u0026\u0026 mkdir /usr/local/maven     \u0026\u0026 mv apache-maven-${MVN_VERSION}/ /usr/local/maven/     \u0026\u0026 rm apache-maven-${MVN_VERSION}-bin.tar.gz     \u0026\u0026 alternatives --install /usr/bin/mvn mvn /usr/local/maven/apache-maven-${MVN_VERSION}/bin/mvn 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /home/jenkins/.m2     \u0026\u0026 chown jenkins:jenkins /home/jenkins/.m2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/etc/alternatives/java_sdk"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}