{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Maintainer": "somendra11",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y locales  \u0026\u0026 dpkg-reconfigure -f noninteractive locales  \u0026\u0026 locale-gen C.UTF-8  \u0026\u0026 /usr/sbin/update-locale LANG=C.UTF-8  \u0026\u0026 echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen  \u0026\u0026 locale-gen  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://ftp.de.debian.org/debian testing main\"  \u003e\u003e /etc/apt/sources.list  \u0026\u0026 echo 'APT::Default-Release \"stable\";' | tee -a /etc/apt/apt.conf.d/00local  \u0026\u0026 apt-get update  \u0026\u0026 apt-get -t testing install -y python3.6 python3-pip git vim wget procps screen  \u0026\u0026 apt-get install -y curl unzip  \u0026\u0026 ln -s /usr/bin/python3.6 /usr/bin/python  \u0026\u0026 ln -s /usr/bin/pip3 /usr/bin/pip  \u0026\u0026 pip install py4j fuzzywuzzy inflect jupyter    nltk scipy widgetsnbextension unidecode  \u0026\u0026 mkdir /root/.jupyter  \u0026\u0026 echo \"c.NotebookApp.ip = '0.0.0.0'\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py  \u0026\u0026 echo \"c.NotebookApp.password = u'sha1:b243b52916db:83f4156e8e0d3f8f0717ceeb9f3290512031f870'\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py  \u0026\u0026 echo \"c.NotebookApp.password_required = True\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py  \u0026\u0026 echo \"c.NotebookApp.port = 8022\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py  \u0026\u0026 echo \"c.NotebookApp.allow_root = True\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONHASHSEED",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_DISABLE_PIP_VERSION_CHECK",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "JAVA_MAJOR_VERSION",
          "Name": "arg",
          "Value": "8"
        },
        {
          "Key": "JAVA_UPDATE_VERSION",
          "Name": "arg",
          "Value": "181"
        },
        {
          "Key": "JAVA_BUILD_NUMBER",
          "Name": "arg",
          "Value": "13"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/jdk1.${JAVA_MAJOR_VERSION}.0_${JAVA_UPDATE_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$JAVA_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL --retry 3 --insecure   --header \"Cookie: oraclelicense=accept-securebackup-cookie;\"   \"http://download.oracle.com/otn-pub/java/jdk/${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}-b${JAVA_BUILD_NUMBER}/96a7b8442fe848ef90c96a2fad6ed6d1/server-jre-${JAVA_MAJOR_VERSION}u${JAVA_UPDATE_VERSION}-linux-x64.tar.gz\"   | gunzip   | tar x -C /usr/   \u0026\u0026 ln -s $JAVA_HOME /usr/java   \u0026\u0026 rm -rf $JAVA_HOME/man"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HADOOP_VERSION",
              "Value": "3.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_HOME",
              "Value": "/usr/hadoop-$HADOOP_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_CONF_DIR",
              "Value": "$HADOOP_HOME/etc/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$HADOOP_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL --retry 3   \"http://archive.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz\"   | gunzip   | tar -x -C /usr/  \u0026\u0026 rm -rf $HADOOP_HOME/share/doc  \u0026\u0026 chown -R root:root $HADOOP_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_VERSION",
              "Value": "2.3.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_PACKAGE",
              "Value": "spark-${SPARK_VERSION}-bin-without-hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/usr/spark-${SPARK_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_DIST_CLASSPATH",
              "Value": "\"$HADOOP_HOME/etc/hadoop/*:$HADOOP_HOME/share/hadoop/common/lib/*:$HADOOP_HOME/share/hadoop/common/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/hdfs/lib/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/yarn/lib/*:$HADOOP_HOME/share/hadoop/yarn/*:$HADOOP_HOME/share/hadoop/mapreduce/lib/*:$HADOOP_HOME/share/hadoop/mapreduce/*:$HADOOP_HOME/share/hadoop/tools/lib/*\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:${SPARK_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL --retry 3   \"https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download\u0026filename=spark/spark-${SPARK_VERSION}/${SPARK_PACKAGE}.tgz\"   | gunzip   | tar x -C /usr/  \u0026\u0026 mv /usr/$SPARK_PACKAGE $SPARK_HOME  \u0026\u0026 chown -R root:root $SPARK_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pyspark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get --yes update;   apt-get --yes install autoconf automake libtool;   apt-get --yes install autoconf-archive;   apt-get --yes install pkg-config;   apt-get --yes install libjpeg-dev;   apt-get --yes --allow-downgrades install zlib1g=1:1.2.8.dfsg-5 zlib1g-dev;   apt-get --yes --allow-downgrades install libpng16-16=1.6.28-1 libpng-dev;   apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ \u0026\u0026   wget http://www.leptonica.com/source/leptonica-1.76.0.tar.gz \u0026\u0026   tar xvzf leptonica-1.76.0.tar.gz \u0026\u0026   cd leptonica-1.76.0 \u0026\u0026   ./configure \u0026\u0026   make \u0026\u0026   make install \u0026\u0026   rm -rf /tmp/* \u0026\u0026   cd /tmp/ \u0026\u0026   wget https://github.com/tesseract-ocr/tesseract/archive/3.05.01.tar.gz \u0026\u0026   tar xvzf 3.05.01.tar.gz \u0026\u0026   cd tesseract-3.05.01 \u0026\u0026   sed -i '$ d' api/Makefile.am \u0026\u0026   sed -i '$ d' api/Makefile.am \u0026\u0026   echo 'tesseract_LDADD += -lrt -llept' \u003e\u003e api/Makefile.am \u0026\u0026   echo 'endif' \u003e\u003e api/Makefile.am \u0026\u0026   ./autogen.sh \u0026\u0026   ./configure --enable-debug \u0026\u0026   LDFLAGS=\"-L/usr/local/lib\" CFLAGS=\"-I/usr/local/include\" make \u0026\u0026   make install \u0026\u0026   ldconfig \u0026\u0026   rm -rf /tmp/* \u0026\u0026   wget -O /usr/local/share/tessdata/eng.traineddata https://github.com/tesseract-ocr/tessdata/raw/master/eng.traineddata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install tesserocr matplotlib  pandas pdf2image python-Levenshtein scikit-learn  seaborn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$SPARK_HOME"
        },
        {
          "CmdLine": [
            "bin/spark-class",
            "org.apache.spark.deploy.master.Master"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}