{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "easycom/base:jessie",
      "SourceCode": "FROM easycom/base:jessie",
      "Platform": "",
      "From": {
        "Image": "easycom/base:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Frédéric T \u003cxmedias@easycom.digital\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TOOLS_HTPASSWD",
              "Value": "easycom:P@ssw0rd"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPCACHE_MAX_MEMORY",
              "Value": "\"128\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPCACHE_MAX_FILES",
              "Value": "\"12000\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget  \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'deb http://ftp.fr.debian.org/debian/ jessie main contrib non-free' \u003e /etc/apt/sources.list  \u0026\u0026 echo 'deb-src http://ftp.fr.debian.org/debian/ jessie main contrib non-free' \u003e\u003e /etc/apt/sources.list  \u0026\u0026 echo 'deb http://security.debian.org/ jessie/updates main' \u003e\u003e /etc/apt/sources.list  \u0026\u0026 echo 'deb-src http://security.debian.org/ jessie/updates main' \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'deb http://packages.dotdeb.org jessie all' \u003e /etc/apt/sources.list.d/dotdeb.list  \u0026\u0026 echo 'deb-src http://packages.dotdeb.org jessie all' \u003e\u003e /etc/apt/sources.list.d/dotdeb.list  \u0026\u0026 wget https://www.dotdeb.org/dotdeb.gpg  \u0026\u0026 apt-key add dotdeb.gpg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026 apt-get -y --no-install-recommends install \tbuild-essential \tunzip \tssmtp \tapache2 \tlibapache2-mod-fastcgi \tphp7.0-fpm \tphp7.0-json \tphp7.0-dev \tphp7.0-imagick \tphp7.0-gd \tphp7.0-mcrypt \tphp7.0-curl \tphp7.0-mysql \tphp7.0-bz2 \tphp7.0-redis \tphp7.0-mbstring \tphp7.0-xml  \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/logs /var/www/_tools /var/www/htdocs  \u0026\u0026 DEBIAN_FRONTEND=noninteractive a2enmod actions rewrite deflate headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./common/security.conf",
            "/etc/apache2/conf-available/security.conf"
          ]
        },
        {
          "CmdLine": [
            "a2enconf security"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"ServerName $(cat /etc/hostname)\" \u003e /etc/apache2/conf-available/servername.conf  \u0026\u0026 a2enconf servername"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./common/common_tools.conf",
            "/etc/apache2/conf-available/common_tools.conf"
          ]
        },
        {
          "CmdLine": [
            "a2enconf common_tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir _bak  \u0026\u0026 mv /etc/apache2/sites-available/* _bak/  \u0026\u0026 mv _bak /etc/apache2/sites-available/  \u0026\u0026 rm -Rf /etc/apache2/sites-enabled/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./common/vhost-default.conf",
            "/etc/apache2/sites-available/default.conf"
          ]
        },
        {
          "CmdLine": [
            "chmod 655 /etc/apache2/sites-available/default.conf  \u0026\u0026 a2ensite default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./php7-fpm.conf",
            "/etc/apache2/conf-available/php7-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./php7-fpm.pool",
            "/etc/php/7.0/fpm/pool.d/www.conf"
          ]
        },
        {
          "CmdLine": [
            "chmod 655 /etc/apache2/conf-available/php7-fpm.conf  \u0026\u0026 a2enconf php7-fpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp  \u0026\u0026 wget https://github.com/PeeHaa/OpCacheGUI/archive/master.zip -O OpCacheGUI.zip  \u0026\u0026 unzip OpCacheGUI.zip \u0026\u0026 mv OpCacheGUI-* OpCacheGUI  \u0026\u0026 echo -e \"\u003c?php\\nnamespace OpCacheGUI;\\nuse OpCacheGUI\\I18n\\FileTranslator;\\nuse OpCacheGUI\\Network\\Router;\\nerror_reporting(E_ALL);\\nini_set('display_errors', 1);\\nini_set('log_errors', 0);\\nini_set('date.timezone', 'Europe/Paris');\\n\\$translator = new FileTranslator(__DIR__ . '/texts', 'fr');\\n\\$uriScheme = Router::QUERY_STRING;\\n\\$login = [ 'username' =\u003e '', 'password' =\u003e '', 'whitelist' =\u003e [ '*' ] ];\" \u003e OpCacheGUI/init.example.php  \u0026\u0026 sed -i \"s/-e \u003c?php/\u003c?php/\" OpCacheGUI/init.example.php  \u0026\u0026 mv OpCacheGUI /var/www/_tools/opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"\u003c?php phpinfo();\" \u003e /var/www/_tools/info.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp  \u0026\u0026 wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.tar.gz  \u0026\u0026 tar xfz phpMyAdmin*  \u0026\u0026 rm phpMyAdmin*.tar.gz  \u0026\u0026 mv phpMyAdmin* /var/www/_tools/pma"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./common/config.inc.php",
            "/var/www/_tools/pma/"
          ]
        },
        {
          "CmdLine": [
            "cd /tmp   \u0026\u0026  wget https://dl-ssl.google.com/dl/linux/direct/mod-pagespeed-stable_current_amd64.deb   \u0026\u0026 dpkg -i mod-pagespeed-*.deb   \u0026\u0026 apt-get -f install   \u0026\u0026 rm mod-pagespeed-*.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /var/www/html/index.html /var/www/htdocs/ \u0026\u0026 rm -Rf /var/www/html  \u0026\u0026 service php7.0-fpm stop \u0026\u0026 service apache2 stop \u0026\u0026 service php7.0-fpm start \u0026\u0026 service apache2 start"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i s,#FromLineOverride=YES,FromLineOverride=YES, /etc/ssmtp/ssmtp.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "default-cmd.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-entrypoint.sh /usr/local/bin/default-cmd.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "default-cmd.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}