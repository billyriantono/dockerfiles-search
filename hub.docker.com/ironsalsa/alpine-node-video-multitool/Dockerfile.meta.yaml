MetaArgs: null
Stages:
- BaseName: mhart/alpine-node:8.0.0
  Commands:
  - Env:
    - Key: PATH
      Value: '"$PATH:/bin/bash"'
    - Key: BENTO4_BIN
      Value: '"/opt/bento4/bin"'
    - Key: JAVA_VERSION_MAJOR
      Value: "8"
    - Key: JAVA_VERSION_MINOR
      Value: "162"
    - Key: JAVA_VERSION_BUILD
      Value: "12"
    - Key: JAVA_PACKAGE
      Value: server-jre
    - Key: JAVA_JCE
      Value: unlimited
    - Key: JAVA_HOME
      Value: /opt/jdk
    - Key: PATH
      Value: ${PATH}:/opt/jdk/bin
    - Key: GLIBC_REPO
      Value: https://github.com/sgerrand/alpine-pkg-glibc
    - Key: GLIBC_VERSION
      Value: 2.27-r0
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apk add --update sudo openntpd
    Name: run
    PrependShell: true
  - CmdLine:
    - ntpd -dn -p north-america.pool.ntp.org
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update ffmpeg
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -ex &&     [[ ${JAVA_VERSION_MAJOR} != 7 ]] || ( echo >&2 ''Oracle no longer
      publishes JAVA7 packages'' && exit 1 ) &&     apk -U upgrade &&     apk add
      libstdc++ curl ca-certificates bash java-cacerts &&     for pkg in glibc-${GLIBC_VERSION}
      glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -sSL ${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/${pkg}.apk
      -o /tmp/${pkg}.apk; done &&     apk add --allow-untrusted /tmp/*.apk &&     rm
      -v /tmp/*.apk &&     ( /usr/glibc-compat/bin/localedef --force --inputfile POSIX
      --charmap UTF-8 C.UTF-8 || true ) &&     echo "export LANG=C.UTF-8" > /etc/profile.d/locale.sh
      &&     /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib &&     mkdir
      /opt &&     curl -jksSLH "Cookie: oraclelicense=accept-securebackup-cookie"
      -o /tmp/java.tar.gz       http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/0da788060d494f5095bf8624735fa2f1/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz
      &&     JAVA_PACKAGE_SHA256=$(curl -sSL https://www.oracle.com/webfolder/s/digest/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}checksum.html
      | grep -E "${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64\.tar\.gz"
      | grep -Eo ''(sha256: )[^<]+'' | cut -d: -f2 | xargs) &&     echo "${JAVA_PACKAGE_SHA256}  /tmp/java.tar.gz"
      > /tmp/java.tar.gz.sha256 &&     sha256sum -c /tmp/java.tar.gz.sha256 &&     gunzip
      /tmp/java.tar.gz &&     tar -C /opt -xf /tmp/java.tar &&     ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR}
      /opt/jdk &&     find /opt/jdk/ -maxdepth 1 -mindepth 1 | grep -v jre | xargs
      rm -rf &&     cd /opt/jdk/ && ln -s ./jre/bin ./bin &&     if [ "${JAVA_JCE}"
      == "unlimited" ]; then echo "Installing Unlimited JCE policy" &&       curl
      -jksSLH "Cookie: oraclelicense=accept-securebackup-cookie" -o /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip         http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION_MAJOR}/jce_policy-${JAVA_VERSION_MAJOR}.zip
      &&       cd /tmp && unzip /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip &&       cp
      -v /tmp/UnlimitedJCEPolicyJDK8/*.jar /opt/jdk/jre/lib/security/;     fi &&     sed
      -i s/#networkaddress.cache.ttl=-1/networkaddress.cache.ttl=10/ $JAVA_HOME/jre/lib/security/java.security
      &&     apk del curl glibc-i18n &&     rm -rf /opt/jdk/jre/plugin            /opt/jdk/jre/bin/javaws            /opt/jdk/jre/bin/jjs            /opt/jdk/jre/bin/orbd            /opt/jdk/jre/bin/pack200            /opt/jdk/jre/bin/policytool            /opt/jdk/jre/bin/rmid            /opt/jdk/jre/bin/rmiregistry            /opt/jdk/jre/bin/servertool            /opt/jdk/jre/bin/tnameserv            /opt/jdk/jre/bin/unpack200            /opt/jdk/jre/lib/javaws.jar            /opt/jdk/jre/lib/deploy*            /opt/jdk/jre/lib/desktop            /opt/jdk/jre/lib/*javafx*            /opt/jdk/jre/lib/*jfx*            /opt/jdk/jre/lib/amd64/libdecora_sse.so            /opt/jdk/jre/lib/amd64/libprism_*.so            /opt/jdk/jre/lib/amd64/libfxplugins.so            /opt/jdk/jre/lib/amd64/libglass.so            /opt/jdk/jre/lib/amd64/libgstreamer-lite.so            /opt/jdk/jre/lib/amd64/libjavafx*.so            /opt/jdk/jre/lib/amd64/libjfx*.so            /opt/jdk/jre/lib/ext/jfxrt.jar            /opt/jdk/jre/lib/ext/nashorn.jar            /opt/jdk/jre/lib/oblique-fonts            /opt/jdk/jre/lib/plugin.jar            /tmp/*
      /var/cache/apk/* &&     ln -sf /etc/ssl/certs/java/cacerts $JAVA_HOME/jre/lib/security/cacerts
      &&     echo ''hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4'' >> /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/bento4
  - Env:
    - Key: BENTO4_BASE_URL
      Value: '"http://zebulon.bok.net/Bento4/source/"'
    - Key: BENTO4_VERSION
      Value: '"1-5-0-615"'
    - Key: BENTO4_CHECKSUM
      Value: '"5378dbb374343bc274981d6e2ef93bce0851bda1"'
    - Key: BENTO4_TARGET
      Value: '""'
    - Key: BENTO4_PATH
      Value: '"/opt/bento4"'
    - Key: BENTO4_TYPE
      Value: '"SRC"'
    Name: env
  - CmdLine:
    - apk add --update --upgrade curl python unzip bash gcc g++ scons &&     curl
      -O -s ${BENTO4_BASE_URL}/Bento4-${BENTO4_TYPE}-${BENTO4_VERSION}${BENTO4_TARGET}.zip
      &&     sha1sum -b Bento4-${BENTO4_TYPE}-${BENTO4_VERSION}${BENTO4_TARGET}.zip
      | grep -o "^$BENTO4_CHECKSUM " &&     mkdir -p ${BENTO4_PATH} &&     unzip Bento4-${BENTO4_TYPE}-${BENTO4_VERSION}${BENTO4_TARGET}.zip
      -d ${BENTO4_PATH} &&     rm -rf Bento4-${BENTO4_TYPE}-${BENTO4_VERSION}${BENTO4_TARGET}.zip
      &&     apk del unzip &&     cd ${BENTO4_PATH} && scons -u build_config=Release
      target=x86_64-unknown-linux &&     cp -R ${BENTO4_PATH}/Build/Targets/x86_64-unknown-linux/Release
      ${BENTO4_PATH}/bin &&     cp -R ${BENTO4_PATH}/Source/Python/utils ${BENTO4_PATH}/utils
      &&     cp -a ${BENTO4_PATH}/Source/Python/wrappers/. ${BENTO4_PATH}/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install pm2 -g
    Name: run
    PrependShell: true
  - CmdLine:
    - java
    - -version
    Name: cmd
    PrependShell: false
  From:
    Image: mhart/alpine-node:8.0.0
  Name: ""
  Platform: ""
  SourceCode: FROM mhart/alpine-node:8.0.0
