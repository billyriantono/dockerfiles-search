{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Env": [
            {
              "Key": "BIOMAJ_CONFIG",
              "Value": "/root/config.yml"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "prometheus_multiproc_dir",
              "Value": "/tmp/biomaj-prometheus-multiproc"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm -rf /tmp/biomaj-prometheus-multiproc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/biomaj-prometheus-multiproc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y apt-transport-https curl libcurl4-openssl-dev python3-pycurl python3-setuptools git unzip bzip2 ca-certificates --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildDeps='gnupg2 dirmngr software-properties-common'     \u0026\u0026 set -x     \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends     \u0026\u0026 curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -     \u0026\u0026 add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y docker-ce     \u0026\u0026 apt-get purge -y --auto-remove $buildDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/genouest/biomaj-core.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install3 pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install setuptools --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/genouest/biomaj-zipkin.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/genouest/biomaj-user.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/genouest/biomaj-cli.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/genouest/biomaj-process.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/genouest/biomaj-download.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone  https://github.com/genouest/biomaj.git \u0026\u0026 echo \"Install biomaj\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/genouest/biomaj-daemon.git \u0026\u0026 echo \"Install daemon\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/genouest/biomaj-watcher.git \u0026\u0026 echo \"Install biomaj-watcher\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/genouest/biomaj-ftp.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/genouest/biomaj-release.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/genouest/biomaj-data.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BIOMAJ_CONFIG",
              "Value": "/etc/biomaj/config.yml"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/biomaj"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SUDO_FORCE_REMOVE",
              "Value": "yes"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "buildDeps='gcc python3-dev protobuf-compiler'     \u0026\u0026 set -x     \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends     \u0026\u0026 cd /root/biomaj-core \u0026\u0026 python3 setup.py install     \u0026\u0026 cd /root/biomaj-zipkin \u0026\u0026 python3 setup.py install     \u0026\u0026 cd /root/biomaj-user \u0026\u0026 python3 setup.py install     \u0026\u0026 cd /root/biomaj-cli \u0026\u0026 python3 setup.py install     \u0026\u0026 cd /root/biomaj-process/biomaj_process/message \u0026\u0026 protoc --python_out=. procmessage.proto     \u0026\u0026 cd /root/biomaj-process \u0026\u0026 python3 setup.py install     \u0026\u0026 cd /root/biomaj-download/biomaj_download/message \u0026\u0026 protoc --python_out=. downmessage.proto     \u0026\u0026 cd /root/biomaj-download \u0026\u0026 python3 setup.py install     \u0026\u0026 cd /root/biomaj \u0026\u0026 python3 setup.py install     \u0026\u0026 cd /root/biomaj-daemon \u0026\u0026 python3 setup.py install     \u0026\u0026 cd /root/biomaj-watcher \u0026\u0026 python3 setup.py develop     \u0026\u0026 cd /root/biomaj-ftp \u0026\u0026 python3 setup.py install     \u0026\u0026 cd /root/biomaj-release \u0026\u0026 python3 setup.py install     \u0026\u0026 cd /root/biomaj-data \u0026\u0026 python3 setup.py install     \u0026\u0026 pip3 install gunicorn     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt-get purge -y --auto-remove $buildDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update --fix-missing \u0026\u0026     apt-get install -y wget bzip2 ca-certificates curl git \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet https://repo.continuum.io/miniconda/Miniconda2-4.0.5-Linux-x86_64.sh -O ~/miniconda.sh \u0026\u0026     /bin/bash ~/miniconda.sh -b -p /opt/conda \u0026\u0026     rm ~/miniconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /data /config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 777 -R /opt/conda/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/conda/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "conda config --add channels r"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda config --add channels bioconda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda upgrade conda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data",
            "/config"
          ]
        },
        {
          "CmdLine": [
            "pip3 install graypy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/biomaj/data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "biomaj-config/config.yml",
            "/etc/biomaj/config.yml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "biomaj-config/global.properties",
            "/etc/biomaj/global.properties"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "biomaj-config/production.ini",
            "/etc/biomaj/production.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "biomaj-config/gunicorn_conf.py",
            "/etc/biomaj/gunicorn_conf.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "watcher.sh",
            "/root/watcher.sh"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/biomaj/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/biomaj"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/biomaj/process.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/cache/biomaj"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/biomaj"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test-local/etc/biomaj/global_local.properties",
            "/etc/biomaj/global_local.properties"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test-local/etc/biomaj/conf.d/alu.properties",
            "/etc/biomaj/conf.d/alu.properties"
          ]
        }
      ]
    }
  ]
}