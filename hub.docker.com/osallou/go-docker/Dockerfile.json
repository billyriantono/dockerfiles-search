{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stable",
      "SourceCode": "FROM debian:stable",
      "Platform": "",
      "From": {
        "Image": "debian:stable"
      },
      "Commands": [
        {
          "Maintainer": "Olivier Sallou \u003colivier.sallou@irisa.fr\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "status",
              "Value": "\"production\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Batch scheduling system in containers. This image contains  all godocker components: web, scheduler and watchers.  Config should be overriden in /opt/godocker/go-d.ini  file. Default configuration does not provide mail and only fake  authentication.\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "expose",
          "Ports": [
            "6543"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/go-docker"
        },
        {
          "Env": [
            {
              "Key": "admin",
              "Value": "\"root\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "swarm_url",
              "Value": "\"tcp://god-swarm:2375\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYRAMID_ENV",
              "Value": "\"prod\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "prometheus_multiproc_dir",
              "Value": "\"/tmp/godocker-multiproc\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/godocker-multiproc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y git python3-dev libldap2-dev gcc libsasl2-dev  python3-setuptools apt-transport-https wget  openssl libpython3-dev libffi-dev libssl-dev protobuf-compiler  libcurl4 libsvn1 python3-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 git clone https://bitbucket.org/osallou/go-docker.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026 git clone https://bitbucket.org/osallou/go-docker-web.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install -U setuptools pyasn1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker \u0026\u0026 pip3 install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker \u0026\u0026 python3 setup.py develop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker-web \u0026\u0026 pip3 install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker-web \u0026\u0026 python3 setup.py develop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install godocker_cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker-web \u0026\u0026 cp production.ini.example production.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker-web \u0026\u0026 sed -i 's;global_properties =.*;global_properties = /opt/go-docker/go-d.ini;g' production.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker-web \u0026\u0026 sed -i 's;admin =.*;admin = '${admin}';g' production.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker \u0026\u0026 cp go-d.ini.sample go-d.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker \u0026\u0026 sed -i \"s;plugins_dir:.*;plugins_dir: '/opt/go-docker/plugins';g\" go-d.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker \u0026\u0026 sed -i \"s;shared_dir:.*;shared_dir: '/opt/godshared';g\" go-d.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker \u0026\u0026 sed -i \"s;mongo_url:.*;mongo_url: 'mongodb://god-mongo:27017';g\" go-d.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker \u0026\u0026 sed -i \"s;redis_host:.*;redis_host: 'god-redis';g\" go-d.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker \u0026\u0026 sed -i \"s;influxdb_host:.*;influxdb_host: null;g\" go-d.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker \u0026\u0026 sed -i \"s;prometheus_exporter:.*;prometheus_exporter: 'god-web:6543';g\" go-d.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/go-docker \u0026\u0026 sed -i \"s;docker_url:.*;docker_url: '\"${swarm_url}\"';g\" go-d.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/go-docker"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}