MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - "sed 's/main$/main universe/' -i /etc/apt/sources.list && \tapt-get clean &&
      apt-get update &&   apt-get install -y locales &&   locale-gen en_US.UTF-8 &&
      \  apt-get install -y software-properties-common unzip git lftp sudo zip curl
      wget &&   sudo apt-get install -y postgresql-client && \tsudo apt install -y
      openjdk-8-jdk &&   sudo apt install -y python2.7 python-pip &&   pip install
      elementpath && \tapt-get clean && \trm -rf /var/lib/apt/lists/* &&   rm -rf
      /var/cache/oracle-jdk8-installer && \techo '%sudo ALL=(ALL) NOPASSWD:ALL' >>
      /etc/sudoers && \trm -rf /tmp/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - update-locale LANG=en_US.UTF-8 LC_MESSAGES=POSIX &&     echo Building core image
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y ca-certificates-java && \tapt-get clean && \tupdate-ca-certificates
      -f && \trm -rf /var/lib/apt/lists/* && \trm -rf /var/cache/oracle-jdk8-installer;"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64/
    Name: env
  - CmdLine:
    - export JAVA_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /pentaho &&   mkdir /home/pentaho &&   groupadd -r pentaho &&   useradd
      -r -g pentaho -p $(perl -e'print crypt("pentaho", "aa")' ) -G sudo pentaho &&   chown
      -R pentaho.pentaho /pentaho &&   chown -R pentaho.pentaho /home/pentaho
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /pentaho
  - Name: user
    User: pentaho
  - Key: PENTAHO_DOWNLOAD_URL
    Name: arg
    Value: https://sourceforge.net/projects/pentaho/files/Pentaho%208.2/server/pentaho-server-ce-8.2.0.0-342.zip/download
  - CmdLine:
    - wget -q -O pentaho.zip ${PENTAHO_DOWNLOAD_URL} &&   unzip -qq pentaho.zip &&   rm
      -rf pentaho.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /pentaho/pentaho-server/promptuser.sh;   rm -rf /pentaho/pentaho-server/pentaho-solutions/system/default-content/*.zip
      ;   touch /pentaho/pentaho-server/tomcat/logs/catalina.out ;   touch /pentaho/pentaho-server/tomcat/logs/pentaho.log
      ;   sed -i -e 's/\(exec ".*"\) start/\1 run/' /pentaho/pentaho-server/tomcat/bin/startup.sh;
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /pentaho/pentaho-server
  - Chown: pentaho:pentaho
    Name: add
    SourcesAndDest:
    - patch-start.sh
    - env-vars.sh
    - set-connections.py
    - init-postgresql.sh
    - run.sh
    - ./
  - CmdLine:
    - python set-connections.py && rm set-connections.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sh patch-start.sh && rm patch-start.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /pentaho/pentaho-server
  - CmdLine:
    - bash
    - run.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM    ubuntu:18.04
