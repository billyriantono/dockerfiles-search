{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "archlinux/base",
      "SourceCode": "FROM archlinux/base AS base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "archlinux/base"
      },
      "Commands": [
        {
          "CmdLine": [
            "pacman -Sy --noconfirm pkgfile grep cpio glibc gcc-libs openssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/arch"
        },
        {
          "CmdLine": [
            "pkgfile --update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pkgfile --list glibc | cut -f2 | cpio -pd /arch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pkgfile --list openssl | cut -f2 | cpio -pd /arch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pkgfile --list gcc-libs | cut -f2 | grep -E '(libstdc++|libgomp|libgcc)' | cpio -pd /arch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -r usr/share/{i18n,info,locale,man} usr/include"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s usr/lib lib \u0026\u0026 ln -s usr/lib lib64"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "gcr.io/distroless/static",
      "SourceCode": "FROM gcr.io/distroless/static",
      "Platform": "",
      "From": {
        "Image": "gcr.io/distroless/static"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "base",
          "Name": "copy",
          "SourcesAndDest": [
            "/arch",
            "/"
          ]
        }
      ]
    }
  ]
}