{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "Janusz Skonieczny @wooyek",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"2.1.2\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LC_TYPE",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "PYTHONIOENCODING",
              "Value": "utf-8"
            },
            {
              "Key": "DATABASE_NAME",
              "Value": "application-db"
            },
            {
              "Key": "DATABASE_PASSWORD",
              "Value": "application-db-password"
            },
            {
              "Key": "DATABASE_USER",
              "Value": "application-user"
            },
            {
              "Key": "DATABASE_HOST",
              "Value": "127.0.0.1"
            },
            {
              "Key": "DATABASE_TEST_NAME",
              "Value": "application-test-db"
            },
            {
              "Key": "DATABASE_URL",
              "Value": "postgis://application-user:application-db-password@127.0.0.1:5432/application-db"
            },
            {
              "Key": "CPLUS_INCLUDE_PATH",
              "Value": "/usr/include/gdal"
            },
            {
              "Key": "C_INCLUDE_PATH",
              "Value": "/usr/include/gdal"
            },
            {
              "Key": "TZ",
              "Value": "UTC"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-entrypoint.sh \u0026\u0026     ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone \u0026\u0026     apt-get update \u0026\u0026 apt-get -y upgrade \u0026\u0026     apt-get install -y locales \u0026\u0026     locale-gen en_US.UTF-8 \u0026\u0026     apt-get install -y git git-flow unzip nano wget sudo curl build-essential \u0026\u0026     apt-get install -y python python-dev python-pip python-virtualenv     python3 python3-dev python3-pip python3-venv python-enchant     python3.6 python3.6-dev python3.6-venv     spatialite-bin libsqlite3-mod-spatialite     postgresql-client-common libpq-dev     postgresql postgresql-contrib postgis     libproj-dev libfreexl-dev libgdal-dev gdal-bin \u0026\u0026     python -m pip install pip -U \u0026\u0026     python3 -m pip install pip -U \u0026\u0026     pip3 install invoke tox coverage pylint gdal==2 pytest pytest-xdist -U \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}