{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tensorflow/tensorflow:1.12.0-py3",
      "SourceCode": "FROM tensorflow/tensorflow:1.12.0-py3",
      "Platform": "",
      "From": {
        "Image": "tensorflow/tensorflow:1.12.0-py3"
      },
      "Commands": [
        {
          "Maintainer": "watai \u003ct.watai@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends     language-pack-ja     wget     vim     git     unzip     zip     cmake     libgtk2.0-dev     libjpeg-dev     libpng-dev     libtiff-dev \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen ja_JP.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "ja_JP:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "ja_JP.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "ja_JP.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "update-locale LANG=$LANG"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "OPENCV_VERSION",
          "Name": "arg",
          "Value": "3.4.4"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_INCLUDE_DIRS",
              "Value": "/usr/include/python3.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_LIBRARIES",
              "Value": "/usr/lib/x86_64-linux-gnu/libpython3.5m.so"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \u0026\u0026     unzip ${OPENCV_VERSION}.zip -d . \u0026\u0026     mkdir -p opencv-${OPENCV_VERSION}/build \u0026\u0026     rm ${OPENCV_VERSION}.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip \u0026\u0026     unzip ${OPENCV_VERSION}.zip \u0026\u0026     rm ${OPENCV_VERSION}.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd opencv-${OPENCV_VERSION}/build     \u0026\u0026 cmake -D CMAKE_BUILD_TYPE=RELEASE     -D CMAKE_INSTALL_PREFIX=/usr/local     -D OPENCV_EXTRA_MODULES_PATH=/root/opencv_contrib-${OPENCV_VERSION}/modules     -D BUILD_opencv_java=OFF     -D BUILD_opencv_python2=OFF     -D BUILD_opencv_python3=ON     -D WITH_TBB=OFF     -D WITH_QT=OFF     -D WITH_1394=OFF     -D WITH_CUDA=OFF ..     \u0026\u0026 make -j8     \u0026\u0026 make install     \u0026\u0026 make clean     \u0026\u0026 ldconfig     \u0026\u0026 ln /dev/null /dev/raw1394     \u0026\u0026 rm -r /root/opencv-${OPENCV_VERSION} /root/opencv_contrib-${OPENCV_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade     pip     opencv-python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y fonts-ipaexfont \u0026\u0026     mkdir -p /root/.config/matplotlib \u0026\u0026     cp /usr/local/lib/python3.5/dist-packages/matplotlib/mpl-data/matplotlibrc /root/.config/matplotlib/matplotlibrc \u0026\u0026     echo font.family : IPAexGothic \u003e\u003e /root/.config/matplotlib/matplotlibrc \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/notebooks"
        }
      ]
    }
  ]
}