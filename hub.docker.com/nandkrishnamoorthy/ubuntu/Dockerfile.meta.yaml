MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - CmdLine:
    - apt-get update && apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
      python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive add-apt-repository ppa:jonathonf/python-3.6
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "dash dash/sh boolean false" | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential chrpath curl
      diffstat gcc-multilib gawk git-core libsdl1.2-dev texinfo unzip wget xterm
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y openssh-client coreutils libreadline-dev
      rpcbind nfs-common vim jq python python-setuptools python-yaml device-tree-compiler
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y bzip2 dosfstools mtools parted
      syslinux tree gettext parallel bsdmainutils wget ca-certificates apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y regina-rexx lib32z1 lib32stdc++6
      autoconf bc flex bison libtool cpio libfdt-dev quilt dos2unix
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python3.6 python3.6-dev python3-pip python3.6-venv
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y openjdk-8-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -svT "/usr/lib/jvm/java-8-openjdk-$(dpkg --print-architecture)" /docker-java-home
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /docker-java-home
    Name: env
  - CmdLine:
    - python3.6 -m pip install pip --upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - python3.6 -m pip install wheel selenium
    Name: run
    PrependShell: true
  - CmdLine:
    - curl http://storage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x /usr/local/bin/repo
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/bin; curl -fL https://getcli.jfrog.io | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 /usr/bin/jfrog
    Name: run
    PrependShell: true
  - CmdLine:
    - id build 2>/dev/null || useradd --uid 1000 --create-home build
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "build ALL=(ALL) NOPASSWD: ALL" | tee -a /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export LC_ALL=en_US.UTF-8" >> /etc/profile   && echo "export LANG=en_US.UTF-8"
      >> /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - apt -y install locales &&   DEBIAN_FRONTEND=noninteractive dpkg-reconfigure
      locales &&   locale-gen en_US.UTF-8 &&   update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ~/code-server   && wget --no-check-certificate -qO- https://github.com/cdr/code-server/releases/download/2.1692-vsc1.39.2/code-server2.1692-vsc1.39.2-linux-x86_64.tar.gz
      | tar xvz --strip-components=1 -C ~/code-server
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ~/code-server/code-server /usr/sbin/code-server    && rm -rf ~/code-server
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add
      -   && echo "deb https://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list   &&
      apt-get update -qqy   && apt-get -qqy install google-chrome-stable   && rm /etc/apt/sources.list.d/google-chrome.list   &&
      rm -rf /var/lib/apt/lists/* /var/cache/apt/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -N http://chromedriver.storage.googleapis.com/$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip
      -P ~/   && unzip ~/chromedriver_linux64.zip -d ~/   && rm ~/chromedriver_linux64.zip   &&
      sudo mv -f ~/chromedriver /usr/local/bin/chromedriver   && sudo chown root:root
      /usr/local/bin/chromedriver   && sudo chmod 0755 /usr/local/bin/chromedriver
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/build/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e "Host *\n\tStrictHostKeyChecking no\n" > /home/build/.ssh/config
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R build:build /home/build/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: build
  - Env:
    - Key: USER
      Value: build
    Name: env
  - Name: workdir
    Path: /home/build
  - Name: volume
    Volumes:
    - /home/build/project
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "8443"
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
