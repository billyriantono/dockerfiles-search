MetaArgs: null
Stages:
- BaseName: behance/docker-base:latest
  Commands:
  - Maintainer: Malcolm Jones <bossjones@theblacktonystark.com>
    Name: maintainer
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - chmod 0777 /tmp
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "apt-get update -q &&     apt-get upgrade -yqq &&     apt-get install -yqq         git
      \        curl         wget         curl         software-properties-common         ca-certificates
      \    &&     locale-gen en_US.UTF-8 && export LANG=en_US.UTF-8 &&     add-apt-repository
      ppa:git-core/ppa -y &&     apt-get update && apt-get install -y --no-install-recommends
      \    \t\ttcl     \t\ttk             wget             curl             ca-certificates
      &&     apt-get update && apt-get install -y --no-install-recommends     \t\tbzr
      \    \t\tgit     \t\tmercurial     \t\topenssh-client     \t\tsubversion     \t\tprocps
      &&     apt-get update && apt-get install -y --no-install-recommends     \t\tautoconf
      \    \t\tautomake     \t\tbzip2     \t\tfile     \t\tg++     \t\tgcc     \t\timagemagick
      \    \t\tlibbz2-dev     \t\tlibc6-dev     \t\tlibcurl4-openssl-dev     \t\tlibdb-dev
      \    \t\tlibevent-dev     \t\tlibffi-dev     \t\tlibgeoip-dev     \t\tlibglib2.0-dev
      \    \t\tlibjpeg-dev     \t\tlibkrb5-dev     \t\tliblzma-dev     \t\tlibmagickcore-dev
      \    \t\tlibmagickwand-dev     \t\tlibmysqlclient-dev     \t\tlibncurses-dev
      \    \t\tlibpng-dev     \t\tlibpq-dev     \t\tlibreadline-dev     \t\tlibsqlite3-dev
      \    \t\tlibssl-dev     \t\tlibtool     \t\tlibwebp-dev     \t\tlibxml2-dev
      \    \t\tlibxslt-dev     \t\tlibyaml-dev     \t\tmake     \t\tpatch     \t\txz-utils
      \    \t\tzlib1g-dev             bash     \t&& apt-get autoclean -y &&       apt-get
      autoremove -y &&       rm -rf /var/lib/{cache,log}/ &&       rm -rf /var/lib/apt/lists/*.lz4"
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 97FC712E4C024BBEA48A61ED3A5CA953F73C700D
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.5.2
    Name: env
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 8.1.2
    Name: env
  - CmdLine:
    - "set -ex \t&& buildDeps=' \t\ttcl-dev \t\ttk-dev \t' \t&& apt-get update &&
      apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/*
      \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz
      \t&& rm -r \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&&
      tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz
      \t\t&& cd /usr/src/python \t&& ./configure \t\t--enable-loadable-sqlite-extensions
      \t\t--enable-shared     --with-pydebug \t&& make -j$(nproc) \t&& make install
      \t&& ldconfig \t\t&& if [ ! -e /usr/local/bin/pip3 ]; then : \t\t&& wget -O
      /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \t\t&& python3 /tmp/get-pip.py
      \"pip==$PYTHON_PIP_VERSION\" \t\t&& rm /tmp/get-pip.py \t; fi \t&& pip3 install
      --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \t&&
      [ \"$(pip list |tac|tac| awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }')\"
      = \"$PYTHON_PIP_VERSION\" ] \t\t&& find /usr/local -depth \t\t\\( \t\t\t\\(
      -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name
      '*.pyc' -o -name '*.pyo' \\) \t\t\\) -exec rm -rf '{}' + \t&& apt-get purge
      -y --auto-remove $buildDeps \t&& rm -rf /usr/src/python ~/.cache     && cd /usr/local/bin
      \t&& { [ -e easy_install ] || ln -s easy_install-* easy_install; } \t&& ln -s
      idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python3-config
      python-config     && pip3 install virtualenv virtualenvwrapper ipython     &&
      apt-get autoclean -y &&     apt-get autoremove -y &&     rm -rf /var/lib/{cache,log}/
      &&     rm -rf /var/lib/apt/lists/*.lz4"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./container/root
    - /
  - CmdLine:
    - goss -g /tests/goss.python3.yaml validate
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - /run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: behance/docker-base:latest
  Name: ""
  Platform: ""
  SourceCode: FROM behance/docker-base:latest
