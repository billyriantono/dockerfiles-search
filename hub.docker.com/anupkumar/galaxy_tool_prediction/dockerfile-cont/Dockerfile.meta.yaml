MetaArgs: null
Stages:
- BaseName: tensorflow/tensorflow:latest-py3
  Commands:
  - Maintainer: '"neumann@dbis.rwth-aachen.de"'
    Name: maintainer
  - Name: expose
    Ports:
    - "3306"
  - Env:
    - Key: DOCKER_URL
      Value: http://192.168.2.101
    Name: env
  - Env:
    - Key: MICROSERVICE_PORT
      Value: "9011"
    Name: env
  - Env:
    - Key: HTTP_PORT
      Value: "8080"
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "18080"
  - CmdLine:
    - apt-get install -y --no-install-recommends software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:openjdk-r/ppa
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openjdk-8-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openjdk-8-jre
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --config java
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --config javac
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends supervisor screen nodejs g++ git
      ant maven make bash net-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y perl pwgen --no-install-recommends && rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5
    Name: run
    PrependShell: true
  - Env:
    - Key: MYSQL_MAJOR
      Value: "5.7"
    Name: env
  - Env:
    - Key: MYSQL_VERSION
      Value: 5.7.*
    Name: env
  - CmdLine:
    - echo "deb http://repo.mysql.com/apt/debian/ jessie mysql-${MYSQL_MAJOR}" > /etc/apt/sources.list.d/mysql.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo mysql-community-server mysql-community-server/data-dir select '';
      \t\techo mysql-community-server mysql-community-server/root-pass password '';
      \t\techo mysql-community-server mysql-community-server/re-root-pass password
      ''; \t\techo mysql-community-server mysql-community-server/remove-test-db select
      false; \t} | debconf-set-selections \t&& apt-get update && apt-get install -y
      mysql-server=\"${MYSQL_VERSION}\" && rm -rf /var/lib/apt/lists/* \t&& rm -rf
      /var/lib/mysql && mkdir -p /var/lib/mysql"
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g http-server bower grunt-cli grunt
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i npm@latest -g
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y install python2.7-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g --unsafe-perm y-websockets-server
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir web
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /source && \tcd /source && \tgit clone https://github.com/rwth-acis/syncmeta.git
      && \tgit clone https://github.com/rwth-acis/RoleApiJS.git && \tcd RoleApiJS
      && \tgit checkout develop && \tnpm install && \tnpm run buildNode && \tcd ../syncmeta
      && \tnpm install && \tbower install --allow-root && \tcp .localGruntConfig.json.sample
      .localGruntConfig.json && \tcp .dbis.secret.json.sample .dbis.secret.json &&
      \tgrunt build"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - "git clone https://github.com/rwth-acis/mobsos-data-processing.git && \tcd mobsos-data-processing
      && git checkout SocialBotFramework && \tant jar && \tcd .."
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/rwth-acis/mobsos-success-modeling.git && \tcd
      mobsos-success-modeling && git checkout SocialBotFramework && \tant jar && \tcd
      .."
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/Distributed-Noracle/Distributed-Noracle-Backend.git
      && \tcd Distributed-Noracle-Backend && \tant jar && \tcd .."
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/Distributed-Noracle/Distributed-Noracle-Frontend.git
      && \tcd Distributed-Noracle-Frontend && \tnpm install && \tcd .."
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/rwth-acis/Social-Bot-Manager.git && \tcd Social-Bot-Manager
      && \tant jar && \tcd .."
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/rwth-acis/las2peer-TensorFlow-TextToText.git &&
      \tcd las2peer-TensorFlow-TextToText && \tant jar && \tcd python && wget http://las2peer.dbis.rwth-aachen.de/sbf/model.tar.gz
      && \ttar -xzf model.tar.gz && \trm model.tar.gz && \tcd .."
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/rwth-acis/las2peer-TensorFlow-Classifier.git &&
      \tcd las2peer-TensorFlow-Classifier && \tant jar && \tcd .."
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /ROLE && cd /ROLE && wget http://las2peer.dbis.rwth-aachen.de/sbf/role-m10-sdk.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /ROLE && \ttar -xzf role-m10-sdk.tar.gz && \trm role-m10-sdk.tar.gz"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - opt
    - /opt
  - CmdLine:
    - "cd /opt/configserver && \tnpm audit fix && \tnpm install && \tcp /source/RoleApiJS/lib/roleApiJS.js
      roleApiJS.js"
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /opt/startup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy colorama regex python-Levenshtein requests h5py==2.8.0rc1
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs
    - /etc/supervisor/conf.d
  - CmdLine:
    - rm /etc/supervisor/conf.d/dataProcessing.properties
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mysql.cnf
    - /etc/mysql/my.cnf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/dataProcessing.properties
    - /mobsos-data-processing/etc/i5.las2peer.services.mobsos.dataProcessing.MonitoringDataProcessingService.properties
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - widgets
    - /widgets
  - CmdLine:
    - cd /widgets && sh build.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - opt/syncmeta
    - /source/syncmeta
  - Name: expose
    Ports:
    - "3000"
  - Name: expose
    Ports:
    - "3306"
  - Name: expose
    Ports:
    - "8073"
  - Name: expose
    Ports:
    - "1234"
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "9082"
  - Name: expose
    Ports:
    - "9011"
  - Name: expose
    Ports:
    - "4200"
  - Name: expose
    Ports:
    - "8081"
  - CmdLine:
    - chmod -R 755 /var/run/mysqld/
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R mysql:mysql /var/lib/mysql /var/run/mysqld
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/startup.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: tensorflow/tensorflow:latest-py3
  Name: ""
  Platform: ""
  SourceCode: FROM tensorflow/tensorflow:latest-py3
