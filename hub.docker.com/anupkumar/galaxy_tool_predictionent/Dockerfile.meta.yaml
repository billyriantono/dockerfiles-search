MetaArgs:
- DefaultValue: debian:10.1
  Key: DEFAULT_OS_IMAGE
  ProvidedValue: null
  Value: debian:10.1
Stages:
- As: compiler
  BaseName: ${DEFAULT_OS_IMAGE}
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - "echo \"deb http://ftp.us.debian.org/debian sid main\" >> /etc/apt/sources.list
      && \tapt-get update && \tDEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends
      \t       ccache \t       dumb-init \t       git \t       gzip \t       make
      \t       python \t       python-openssl \t       rsync \t       xz-utils \t
      \      zip \t       ca-certificates \t       openjdk-8-jre-headless \t       unzip
      \t       wget && \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/compile
  - Env:
    - Key: ANDROID_USR_OPT_PATH
      Value: /opt/toolchains/android
    Name: env
  - Env:
    - Key: PLATFORM_MIN_API_VERSION
      Value: "9"
    Name: env
  - Env:
    - Key: PLATFORM_MIN_API_x64_VERSION
      Value: "21"
    Name: env
  - Env:
    - Key: NDK_VERSION
      Value: r14b
    Name: env
  - CmdLine:
    - "mkdir -p ${ANDROID_USR_OPT_PATH}/ && \twget --progress=bar:force:noscroll -O
      ndk.zip \t     https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux-x86_64.zip
      && \tunzip ndk.zip && \trm ndk.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd android-ndk-*/ && \tpython ./build/tools/make_standalone_toolchain.py \t
      \      --arch arm \t       --api ${PLATFORM_MIN_API_VERSION} \t       --install-dir
      ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}
      \t       --force && \tpython ./build/tools/make_standalone_toolchain.py \t       --arch
      arm64 \t       --api ${PLATFORM_MIN_API_x64_VERSION} \t       --install-dir
      ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}
      \t       --force && \tpython ./build/tools/make_standalone_toolchain.py \t       --arch
      x86 \t       --api ${PLATFORM_MIN_API_VERSION} \t       --install-dir ${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}
      \t       --force && \tpython ./build/tools/make_standalone_toolchain.py \t       --arch
      x86_64 \t       --api ${PLATFORM_MIN_API_x64_VERSION} \t       --install-dir
      ${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86_64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}
      \t       --force && \tmkdir -p ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}/arm-linux-androideabi/include
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}/arm-linux-androideabi/lib/pkgconfig
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}/arm-v7a-linux-androideabi/include
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}/arm-v7a-linux-androideabi/lib/pkgconfig
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/toolchains/arm-linux-androideabi-4.9/prebuilt
      && \tln -s ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}
      \t      ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}/aarch64-linux-android/include
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}/aarch64-linux-android/lib/pkgconfig
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/toolchains/aarch64-linux-android-4.9/prebuilt
      && \tln -s ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}
      \t      ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64
      \ && \tmkdir -p ${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}/i686-linux-android/include
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}/i686-linux-android/lib/pkgconfig
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/toolchains/x86-4.9/prebuilt
      && \tln -s ${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}
      \t      ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/toolchains/x86-4.9/prebuilt/linux-x86_64
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86_64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}/x86_64-linux-android/include
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86_64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}/x86_64-linux-android/lib/pkgconfig
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/toolchains/x86_64-4.9/prebuilt
      && \tln -s ${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86_64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}
      \t      ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/toolchains/x86_64-4.9/prebuilt/linux-x86_64
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/platforms/android-${PLATFORM_MIN_API_VERSION}
      && \tln -s ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}/sysroot
      \t      ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/platforms/android-${PLATFORM_MIN_API_VERSION}/arch-arm
      \ && \tln -s ${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}/sysroot
      \t      ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/platforms/android-${PLATFORM_MIN_API_VERSION}/arch-x86
      && \tmkdir -p ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/platforms/android-${PLATFORM_MIN_API_x64_VERSION}
      && \tln -s ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}/sysroot
      \t      ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/platforms/android-${PLATFORM_MIN_API_x64_VERSION}/arch-arm64
      && \tln -s ${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86_64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}/sysroot
      \t      ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/platforms/android-${PLATFORM_MIN_API_x64_VERSION}/arch-x86_64
      && \tmv build   ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/build   &&
      \tmv sources ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/sources && \tmv
      ndk-build ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/ndk-build && \tmv
      source.properties ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/source.properties
      && \tcp ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}/sysroot/usr/include/uchar.h
      \t\t${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}/sysroot/usr/include
      && \tcp ${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86_64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}/sysroot/usr/include/uchar.h
      \t\t${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}/sysroot/usr/include
      && \tcp ${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}/sysroot/usr/include/complex.h
      \t\t${ANDROID_USR_OPT_PATH}/standalone-toolchain-arm-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}/sysroot/usr/include
      && \tcp ${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86_64-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_x64_VERSION}/sysroot/usr/include/complex.h
      \t\t${ANDROID_USR_OPT_PATH}/standalone-toolchain-x86-ndk-${NDK_VERSION}-api-${PLATFORM_MIN_API_VERSION}/sysroot/usr/include
      && \trm -rf /tmp/compile"
    Name: run
    PrependShell: true
  - Key: SDK_VERSION
    Name: arg
    Value: r25.2.5
  - Name: workdir
    Path: /tmp/compile
  - CmdLine:
    - mkdir -p /root/.android && touch /root/.android/repositories.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget --progress=bar:force:noscroll -O sdk.zip \t     https://dl.google.com/android/repository/tools_${SDK_VERSION}-linux.zip
      && \tunzip sdk.zip -d ${ANDROID_USR_OPT_PATH}/android-sdk-linux_x86 && \trm
      sdk.zip && \trm -rf \t      ${ANDROID_USR_OPT_PATH}/android-sdk-linux_x86/tools/apps
      \t      ${ANDROID_USR_OPT_PATH}/android-sdk-linux_x86/tools/lib/monitor-x86
      \t      ${ANDROID_USR_OPT_PATH}/android-sdk-linux_x86/tools/lib/monitor-x86_64
      \t      ${ANDROID_USR_OPT_PATH}/android-sdk-linux_x86/tools/qemu \t&& \tfind
      ${ANDROID_USR_OPT_PATH}/android-sdk-linux_x86 -type f -executable -exec chmod
      o+x {} + && \tyes | ${ANDROID_USR_OPT_PATH}/android-sdk-linux_x86/tools/bin/sdkmanager
      \t        \"build-tools;25.0.3\" \t        platform-tools \t        \"platforms;android-28\""
    Name: run
    PrependShell: true
  - CmdLine:
    - "sed 's/^deb \\(.*\\)/deb-src \\1/' /etc/apt/sources.list \t     > /etc/apt/sources.list.d/debsrc.list
      && \tapt-get update && \t    DEBIAN_FRONTEND=noninteractive apt-get install
      -y --no-install-recommends \t    debhelper \t    dpkg-dev \t    libncurses5
      \t    pkg-config"
    Name: run
    PrependShell: true
  - Env:
    - Key: VANILLA_PATH
      Value: $PATH
    Name: env
  - Env:
    - Key: ANDROID_NDK_HOME
      Value: ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}
    Name: env
  - Name: workdir
    Path: /tmp/compile
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/compile-libraries.sh
    - ./scripts/thirdPartyLibraries/compile-libraries-android-arm.sh
    - ./scripts/thirdPartyLibraries/compile-libraries-android-arm64.sh
    - ./scripts/thirdPartyLibraries/compile-libraries-android-x86.sh
    - ./scripts/thirdPartyLibraries/compile-libraries-android-x86_64.sh
    - ./scripts/thirdPartyLibraries/cleanup-all-libraries-src-android.sh
    - ./scripts/thirdPartyLibraries/patches/configure-freetype.patch
    - ./scripts/thirdPartyLibraries/patches/patch-x86-vorbis-clang.patch
    - ./scripts/thirdPartyLibraries/patches/macros-flac-1.3.3.patch
    - ./scripts/thirdPartyLibraries/patches/patch-mpeg2dec-confac.patch
    - ./scripts/thirdPartyLibraries/patches/forSDL2NetFiles.patch
    - ./
  - Env:
    - Key: ANDROID_STANDALONE_TOOLCH
      Value: ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64
    Name: env
  - Env:
    - Key: ANDROID_STANDALONE_TRIBLE
      Value: arm-linux-androideabi
    Name: env
  - Env:
    - Key: PATH
      Value: $ANDROID_STANDALONE_TOOLCH/bin:$ANDROID_STANDALONE_TOOLCH/$ANDROID_STANDALONE_TRIBLE/bin:$VANILLA_PATH
    Name: env
  - CmdLine:
    - ./cleanup-all-libraries-src-android.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/libiconv.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh libiconv
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/libpng1.6.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh libpng1.6
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/freetype.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh freetype
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/libjpeg-turbo.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh libjpeg-turbo
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/faad2.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh faad2
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/libmad.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh libmad
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/libogg.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh libogg
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/libtheora.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh libtheora
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/libvorbis.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh libvorbis
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/flac.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh flac
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/mpeg2dec.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh mpeg2dec
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/openssl.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh openssl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/curl.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh curl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/fluidsynth-lite.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh fluidsynth-lite
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/a52dec.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh a52dec
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/thirdPartyLibraries/library-rules/libsdl2-net.sh
    - library-rules/
  - CmdLine:
    - ./compile-libraries-android-arm.sh libsdl2-net
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_STANDALONE_TOOLCH
      Value: ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64
    Name: env
  - Env:
    - Key: ANDROID_STANDALONE_TRIBLE
      Value: aarch64-linux-android
    Name: env
  - Env:
    - Key: PATH
      Value: $ANDROID_STANDALONE_TOOLCH/bin:$ANDROID_STANDALONE_TOOLCH/$ANDROID_STANDALONE_TRIBLE/bin:$VANILLA_PATH
    Name: env
  - CmdLine:
    - ./cleanup-all-libraries-src-android.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh libiconv
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh libpng1.6
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh freetype
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh libjpeg-turbo
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh faad2
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh libmad
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh libogg
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh libtheora
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh libvorbis
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh flac
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh mpeg2dec
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh curl
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh fluidsynth-lite
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh a52dec
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-arm64.sh libsdl2-net
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_STANDALONE_TOOLCH
      Value: ${ANDROID_USR_OPT_PATH}/android-ndk-${NDK_VERSION}/toolchains/x86-4.9/prebuilt/linux-x86_64
    Name: env
  - Env:
    - Key: ANDROID_STANDALONE_TRIBLE
      Value: i686-linux-android
    Name: env
  - Env:
    - Key: PATH
      Value: $ANDROID_STANDALONE_TOOLCH/bin:$ANDROID_STANDALONE_TOOLCH/$ANDROID_STANDALONE_TRIBLE/bin:$VANILLA_PATH
    Name: env
  - CmdLine:
    - ./cleanup-all-libraries-src-android.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh libiconv
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh libpng1.6
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh freetype
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh libjpeg-turbo
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh faad2
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh libmad
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh libogg
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh libtheora
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh libvorbis
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh flac
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh mpeg2dec
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh curl
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh fluidsynth-lite
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh a52dec
    Name: run
    PrependShell: true
  - CmdLine:
    - ./compile-libraries-android-x86.sh libsdl2-net
    Name: run
    PrependShell: true
  From:
    Image: ${DEFAULT_OS_IMAGE}
  Name: compiler
  Platform: ""
  SourceCode: FROM ${DEFAULT_OS_IMAGE} AS compiler
