MetaArgs: null
Stages:
- BaseName: gliderlabs/alpine
  Commands:
  - Maintainer: unclephil <koenigphil@gmail.com>
    Name: maintainer
  - CmdLine:
    - "builddeps=' \t\tpython-dev \t\tpy2-pip \t\tmusl-dev \t\topenssl-dev \t\tlibffi-dev
      \t\tgcc \t\t' \t&& apk --no-cache add \topenssh-client \tca-certificates \tpython
      \tpy-paramiko \tpy-yaml \tpy-jinja2 \tpy-httplib2 \t$builddeps \t&& pip install
      --upgrade pip \t&& pip install \t\tansible \t\tsix \t&& apk del --purge $builddeps"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/ansible/ /ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "[local]" >> /etc/ansible/hosts &&     echo "localhost" >> /etc/ansible/hosts
      &&     echo "# empty file ">> /etc/ansible.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /ansible/playbooks
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /ansible/playbooks
  - Env:
    - Key: ANSIBLE_GATHERING
      Value: smart
    Name: env
  - Env:
    - Key: ANSIBLE_HOST_KEY_CHECKING
      Value: "false"
    Name: env
  - Env:
    - Key: ANSIBLE_RETRY_FILES_ENABLED
      Value: "false"
    Name: env
  - Env:
    - Key: ANSIBLE_ROLES_PATH
      Value: /ansible/playbooks/roles
    Name: env
  - Env:
    - Key: ANSIBLE_SSH_PIPELINING
      Value: "True"
    Name: env
  - Env:
    - Key: PATH
      Value: /ansible/bin:$PATH
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: /ansible/lib
    Name: env
  - CmdLine:
    - /bin/sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: gliderlabs/alpine
  Name: ""
  Platform: ""
  SourceCode: FROM gliderlabs/alpine
