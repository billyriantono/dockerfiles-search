MetaArgs: null
Stages:
- BaseName: php:7-fpm
  Commands:
  - Env:
    - Key: BUILD_DEPS
      Value: '"cmake libicu-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev libzip-dev
        libmagickwand-dev"'
    - Key: RUN_DEPS
      Value: '"sudo dumb-init gettext jq zip git unzip locales wget curl             libfreetype6
        libjpeg62-turbo libpng16-16 libzip4 libmagickwand-6.q16-3             socat
        supervisor ca-certificates"'
    - Key: RUN_DEV_DEPS
      Value: '"openssl net-tools bsdtar ruby-full nodejs mysql-client"'
    Name: env
  - CmdLine:
    - set -x     && DEBIAN_FRONTEND=noninteractive apt-get update -qq     && DEBIAN_FRONTEND=noninteractive
      apt-get install -qq -y --no-install-recommends --no-install-suggests apt-utils
      ca-certificates     && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y
      --no-install-recommends --no-install-suggests ${BUILD_DEPS}     && pecl channel-update
      pecl.php.net     && /usr/local/bin/docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN)
      exif     && (rm -rf /usr/local/lib/php/test/exif || true)     && (rm -rf /usr/local/lib/php/doc/exif
      || true)     && /usr/local/bin/docker-php-ext-configure gd --with-gd --with-png-dir=/usr
      --with-zlib-dir=/usr --with-jpeg-dir=/usr --with-freetype-dir=/usr     && /usr/local/bin/docker-php-ext-install
      -j$(getconf _NPROCESSORS_ONLN) gd     && (rm -rf /usr/local/lib/php/test/gd
      || true)     && (rm -rf /usr/local/lib/php/doc/gd || true)     && /usr/local/bin/docker-php-ext-install
      -j$(getconf _NPROCESSORS_ONLN) gettext     && (rm -rf /usr/local/lib/php/test/gettext
      || true)     && (rm -rf /usr/local/lib/php/doc/gettext || true)     && pecl
      install imagick     && docker-php-ext-enable imagick     && (rm -rf /usr/local/lib/php/test/imagick
      || true)     && (rm -rf /usr/local/lib/php/doc/imagick || true)     && /usr/local/bin/docker-php-ext-install
      -j$(getconf _NPROCESSORS_ONLN) intl     && (rm -rf /usr/local/lib/php/test/intl
      || true)     && (rm -rf /usr/local/lib/php/doc/intl || true)     && /usr/local/bin/docker-php-ext-install
      -j$(getconf _NPROCESSORS_ONLN) mysqli     && (rm -rf /usr/local/lib/php/test/mysqli
      || true)     && (rm -rf /usr/local/lib/php/doc/mysqli || true)     && /usr/local/bin/docker-php-ext-configure
      pdo_mysql --with-zlib-dir=/usr     && /usr/local/bin/docker-php-ext-install
      -j$(getconf _NPROCESSORS_ONLN) pdo_mysql     && (rm -rf /usr/local/lib/php/test/pdo_mysql
      || true)     && (rm -rf /usr/local/lib/php/doc/pdo_mysql || true)     && /usr/local/bin/docker-php-ext-configure
      zip --with-zlib-dir=/usr --with-pcre-dir=/usr --with-libzip     && /usr/local/bin/docker-php-ext-install
      -j$(getconf _NPROCESSORS_ONLN) zip     && (rm -rf /usr/local/lib/php/test/zip
      || true)     && (rm -rf /usr/local/lib/php/doc/zip || true)     && pecl install
      xdebug     && docker-php-ext-enable xdebug     && (rm -rf /usr/local/lib/php/test/xdebug
      || true)     && (rm -rf /usr/local/lib/php/doc/xdebug || true)     && DEBIAN_FRONTEND=noninteractive
      apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      ${BUILD_DEPS}     && curl -sL https://deb.nodesource.com/setup_8.x | bash -    &&
      DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends
      --no-install-suggests ${RUN_DEPS} ${RUN_DEV_DEPS}     && DEBIAN_FRONTEND=noninteractive
      apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      apt-utils     && rm -rf /var/lib/apt/lists/*     && update-ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - locale.md
    - /etc/locale.md
  - CmdLine:
    - set -x     && npm i npm@latest -g     && npm install -g grunt-cli webpack-cli     &&
      npm cache clean --force     && curl -sS https://getcomposer.org/installer |
      php -- --install-dir=/usr/local/bin --filename=composer     && composer self-update     &&
      composer clearcache     && gem install sass -v 3.4.25     && rm -rf /etc/supervisor*     &&
      mkdir -p /etc/supervisor/conf.d     && mkdir -p /var/log/supervisor     && mkdir
      -p /run.d     && cp /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini     &&
      adduser --gecos '' --disabled-password coder     && echo "coder ALL=(ALL) NOPASSWD:ALL"
      >> /etc/sudoers     && cat /etc/locale.md | xargs -i sed -i 's/# {}.UTF-8 UTF-8/{}.UTF-8
      UTF-8/' /etc/locale.gen     && locale-gen     && cat /etc/locale.md | xargs
      -i localedef -i {} -f UTF-8 {}     && echo "alias ls='ls --color=auto'" >> /root/.bashrc     &&
      echo "alias ll='ls --color=auto -l'" >> /root/.bashrc     && echo "alias l='ls
      --color=auto -lA'" >> /root/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: '"/home/coder"'
    - Key: TERM
      Value: '"xterm-color"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/supervisord.conf
  - Name: user
    User: coder
  - CmdLine:
    - composer global require hirak/prestissimo     && composer clearcache
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  - Name: volume
    Volumes:
    - /var/www
  - Name: expose
    Ports:
    - "8443"
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - coder-entrypoint.sh
    - /coder-entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - coder-entrypoint.d/*.sh
    - /coder-entrypoint.d/
  - CmdLine:
    - chmod +x /coder-entrypoint.sh && chmod +x /coder-entrypoint.d/*.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - CmdLine:
    - dumb-init
    - /coder-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: php:7-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7-fpm
