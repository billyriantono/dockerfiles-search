MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Labels:
    - Key: title
      Value: '"rAthena - Dockerized server"'
    - Key: maintainer
      Value: '"Carlos Mil치n Figueredo"'
    - Key: version
      Value: '"1.1"'
    - Key: url1
      Value: '"https://calnus.com"'
    - Key: url2
      Value: '"http://www.hispamsx.org"'
    - Key: bbs
      Value: '"telnet://bbs.hispamsx.org"'
    - Key: twitter
      Value: '"@cmilanf"'
    - Key: thanksto1
      Value: '"Beatriz Sebasti치n Pe침a"'
    - Key: thanksto2
      Value: '"Alberto Marcos Gonz치lez"'
    Name: label
  - Labels:
    - Key: DOWNLOAD_OVERRIDE_CONF_URL
      Value: '"If defined, it will download a ZIP file with the import configuration
        overrides. If this is the case, no environment variables applies."'
    - Key: MYSQL_HOST
      Value: '"Hostname of the MySQL database. Ex: calnus-beta.mysql.database.azure.com."'
    - Key: MYSQL_DB
      Value: '"Name of the MySQL database."'
    - Key: MYSQL_USER
      Value: '"Database username for authentication."'
    - Key: MYSQL_PWD
      Value: '"Password for authenticating with database. WARNING: it will be visible
        from Azure Portal."'
    - Key: MYSQL_ACCOUNTSANDCHARS
      Value: '"To whatever to execute the accountsandchars.sql so GM and bot accounts
        get precreated in the database"'
    - Key: SET_CHAR_TO_LOGIN_IP
      Value: '"IP that CHAR server uses to connect to LOGIN."'
    - Key: SET_MAP_TO_CHAR_IP
      Value: '"IP that MAP server uses to connect to CHAR."'
    - Key: SET_CHAR_PUBLIC_IP
      Value: '"Public IP of CHAR server."'
    - Key: SET_MAP_PUBLIC_IP
      Value: '"Public IP of MAP server."'
    - Key: ADD_SUBNET_MAP1
      Value: '"Subnet mapping in format: net-submask:char_ip:map_ip. Check is check
        is if((net-submask & char_ip ) == (net-submask & servip)) => ok"'
    - Key: SET_INTERSRV_USERID
      Value: '"UserID for interserver communication."'
    - Key: SET_INTERSRV_PASSWD
      Value: '"Password for interserver communication."'
    - Key: SET_SERVER_NAME
      Value: '"DisplayName of the rAthena server"'
    - Key: SET_MAX_CONNECT_USER
      Value: '"Maximun number of users allowed to connect concurrently. Default is
        unlimited."'
    - Key: SET_START_ZENNY
      Value: '"Amount of zenny to start with. Default is 0."'
    - Key: SET_START_POINT
      Value: '"Point where newly created characters will start AFTER trainning. Format:
        <map_name>,<x>,<y>{:<map_name>,<x>,<y>...}"'
    - Key: SET_START_POINT_PRE
      Value: '"Point where newly created character will start. Format: <map_name>,<x>,<y>{:<map_name>,<x>,<y>...}"'
    - Key: SET_START_POINT_DORAM
      Value: '"Point where a new character from Doram race will start. Format: <map_name>,<x>,<y>{:<map_name>,<x>,<y>...}"'
    - Key: SET_START_ITMES
      Value: '"Starting items for new characters. For auto-equip, include the position,
        otherwise 0. Format: <id>,<amount>,<position>{:<id>,<amount>,<position>"'
    - Key: SET_START_ITEMS_DORAM
      Value: '"Starting items for new character from Doram race."'
    - Key: SET_PINCODE_ENABLED
      Value: '"Whatever a PINCODE only inputable by mouse is asked to the player.
        If we are testing bots this should be disabled."'
    - Key: SET_ALLOWED_REGS
      Value: '"How many new characters registration are we going to allow per time
        unit."'
    - Key: SET_TIME_ALLOWED
      Value: '"Amount of time in seconds for allowing characters registration"'
    Name: label
  - Env:
    - Key: PACKETVER
      Value: "20151104"
    - Key: PACKET_OBFUSCATION
      Value: "1"
    Name: env
  - CmdLine:
    - mkdir -p /opt/rAthena   && apk update   && apk add --no-cache git make gcc g++
      mariadb-dev mariadb-client-libs zlib-dev pcre-dev libressl-dev pcre libstdc++
      nano dos2unix mysql-client bind-tools linux-headers   && git clone https://github.com/rathena/rathena.git
      /opt/rAthena   && cd /opt/rAthena   && if [ ${PACKET_OBFUSCATION} -neq 1 ];
      then sed -i "s|#define PACKET_OBFUSCATION|//#define PACKET_OBFUSCATION|g" /opt/rAthena/src/config/packets.hpp;
      fi   && if [ ${PACKET_OBFUSCATION} -neq 1 ]; then sed -i "s|#define PACKET_OBFUSCATION_WARN|//#define
      PACKET_OBFUSCATION_WARN|g" /opt/rAthena/src/config/packets.hpp; fi   && ./configure
      --enable-packetver=${PACKETVER} --enable-prere="yes"   && make clean   && make
      server   && chmod a+x login-server && chmod a+x char-server && chmod a+x map-server   &&
      apk del git make gcc g++ mariadb-dev zlib-dev pcre-dev libressl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/local/bin/scripts
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - accountsandchars.sql
    - /root/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - npc/
    - /opt/rAthena/npc/custom/
  - Name: expose
    Ports:
    - 5121/tcp
    - 6121/tcp
    - 6900/tcp
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /opt/rAthena
  - CmdLine:
    - /opt/rAthena/athena-start
    - watch
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
