{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "goofts loking.zhao.moshang@icloud.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "HUMMINGBIRDS_VERSION",
              "Value": "2.3.5"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "echo -e 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' | tee -a /etc/apk/repositories \u0026\u0026     sed  -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g'              /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache texlive-xetex texmf-dist-langchinese texmf-dist-most \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf                  \u0026\u0026     rm -rf ~/* ~/.[^jvp\\.]* /tmp/* /var/tmp/* /var/cache/apk/*              \u0026\u0026     rm -rf /usr/local/share/.[0-9a-zA-Z]* /usr/local/share/*                \u0026\u0026     rm -rf /usr/share/jupyter/lab/staging/build/* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade \u0026\u0026 apk add --no-cache git          \u0026\u0026     git clone https://github.com/goofts/skylarks ~/skylarks      \u0026\u0026     chmod +x ~/skylarks/setup.sh \u0026\u0026 sh ~/skylarks/setup.sh       \u0026\u0026     cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime          \u0026\u0026     rm /usr/bin/vi \u0026\u0026 ln -snf /usr/bin/vim /usr/bin/vi           \u0026\u0026     rm /bin/sh \u0026\u0026 ln -snf /bin/bash /bin/sh                      \u0026\u0026     chown root:root /usr/sbin/nginx \u0026\u0026 chmod u+s /usr/sbin/nginx \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf       \u0026\u0026     rm -rf ~/* ~/.[^jvp\\.]* /tmp/* /var/tmp/* /var/cache/apk/*   \u0026\u0026     rm -rf /usr/local/share/.[0-9a-zA-Z]* /usr/local/share/*     \u0026\u0026     rm -rf /usr/share/jupyter/lab/staging/build/* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/goofts/skylarks ~/skylarks           \u0026\u0026     mkdir ~/.pip \u0026\u0026 mv ~/skylarks/pip.conf ~/.pip                     \u0026\u0026     awk '{cmd=\"pip3 install \"$1;system(cmd)}' ~/skylarks/requirements \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf            \u0026\u0026     rm -rf ~/* ~/.[^jvp\\.]* /tmp/* /var/tmp/* /var/cache/apk/*        \u0026\u0026     rm -rf /usr/local/share/.[0-9a-zA-Z]* /usr/local/share/*          \u0026\u0026     rm -rf /usr/share/jupyter/lab/staging/build/* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install jupyterlab-dash@0.1.0-alpha.3           \u0026\u0026     jupyter labextension install jupyterlab-drawio \u0026\u0026 npm cache clean -f \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf               \u0026\u0026     rm -rf ~/* ~/.[^jvp\\.]* /tmp/* /var/tmp/* /var/cache/apk/*           \u0026\u0026     rm -rf /usr/local/share/.[0-9a-zA-Z]* /usr/local/share/*             \u0026\u0026     rm -rf /usr/share/jupyter/lab/staging/build/* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/goofts/hummingbirds.git /hummingbirds"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "postgres"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo -e \"\\nexport USER=postgres\" | tee -a /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "postgres"
        },
        {
          "Name": "workdir",
          "Path": "/var/lib/postgresql"
        },
        {
          "CmdLine": [
            "go get -u github.com/goofts/skylarks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -snf /var/lib/postgresql/go/src/github.com/goofts/skylarks ~/skylarks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/lib/postgresql/go/src/github.com/goofts/skylarks"
        },
        {
          "CmdLine": [
            "mkdir -p ~/.jupyter ~/.vim/UltiSnips ~/.vim/bundle \u0026\u0026 cp vimrc ~/.vimrc             \u0026\u0026     cp latexmkrc ~/.latexmkrc \u0026\u0026 go build \u0026\u0026 initdb -D /var/lib/postgresql/data         \u0026\u0026     git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim      \u0026\u0026     git clone https://github.com/honza/vim-snippets.git   ~/.vim/bundle/vim-snippets    \u0026\u0026     git clone https://github.com/SirVer/ultisnips.git     ~/.vim/bundle/ultisnips       \u0026\u0026     git clone https://github.com/baskerville/bspwm.git    ~/.vim/bundle/bspwm           \u0026\u0026     supervisord -c /var/lib/postgresql/go/src/github.com/goofts/skylarks/databases.conf \u0026\u0026     cp /var/lib/postgresql/go/src/github.com/goofts/skylarks/skylarks.conf                     /var/lib/postgresql/.jupyter/jupyter_notebook_config.py                             \u0026\u0026     sleep 16 \u0026\u0026 createdb skylarks \u0026\u0026 psql -U postgres -d skylarks -f                           /var/lib/postgresql/go/src/github.com/goofts/skylarks/skylarks.sql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "sh /var/lib/postgresql/go/src/github.com/goofts/skylarks/skylarks.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}