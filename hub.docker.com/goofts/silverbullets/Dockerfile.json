{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "goofts loking.zhao.moshang@icloud.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "HUMMINGBIRDS_VERSION",
              "Value": "1.1.2"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add --no-cache git \u0026\u0026 git clone https://github.com/goofts/silverbullets.git \u0026\u0026 ls -la                \u0026\u0026     chmod +x /root/silverbullets/setup.sh \u0026\u0026 sh /root/silverbullets/setup.sh \u0026\u0026 mkdir -p /usr/lib/gophernotes /julia_depot \u0026\u0026     jupyter labextension install dask-labextension \u0026\u0026 jupyter labextension install transient-display-data                  \u0026\u0026     jupyter labextension install jupyterlab-drawio \u0026\u0026 jupyter labextension install @jupyterlab/hdf5                        \u0026\u0026     jupyter labextension install jupyterlab-dash@0.1.0-alpha.3 \u0026\u0026 jupyter labextension install @krassowski/jupyterlab-lsp  \u0026\u0026     jupyter labextension install @krassowski/jupyterlab_go_to_definition \u0026\u0026 ln -snf /usr/bin/vim /usr/bin/vi               \u0026\u0026     git clone https://github.com/lckr/jupyterlab-variableInspector \u0026\u0026 cd jupyterlab-variableInspector \u0026\u0026 npm install       \u0026\u0026     npm run build \u0026\u0026 jupyter labextension install . \u0026\u0026 cd /root \u0026\u0026 jupyter labextension install @jupyterlab/hub-extension  \u0026\u0026     npm install -g configurable-http-proxy \u0026\u0026 cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime  \u0026\u0026 npm cache clean -f   \u0026\u0026     git clone https://github.com/wireghoul/graudit /graudit_depot \u0026\u0026 ln -s /graudit_depot/graudit /usr/bin/graudit         \u0026\u0026     chgrp -R jupyter /usr/share/jupyter \u0026\u0026 chmod -R 2775 /usr/share/jupyter                                                \u0026\u0026     rm -rf /usr/share/jupyter/lab/staging/build/* /usr/share/jupyter/kernels/*                                             \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/*   \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/lib/jvm/default-jvm/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/usr/lib/gophernotes"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo -e \"\\nexport JAVA_HOME=/usr/lib/jvm/default-jvm\" | tee -a /etc/profile \u0026\u0026     echo -e \"export PATH=\\$JAVA_HOME/bin:\\$PATH\"          | tee -a /etc/profile \u0026\u0026     echo -e \"export GOPATH=/usr/lib/gophernotes\"          | tee -a /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "curl -s https://get.sdkman.io | bash \u0026\u0026 source /root/.sdkman/bin/sdkman-init.sh                                      \u0026\u0026     sdk install kotlin 1.3.50 \u0026\u0026 sdk install scala 2.13.0 \u0026\u0026 mv /root/.sdkman /sdkman                                    \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/sh",
            "-c"
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/sdkman/candidates/scala/2.13.0/bin:/sdkman/candidates/kotlin/1.3.50/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo -e \"\\nexport KOTLIN_HOME=/sdkman/candidates/kotlin/1.3.50\" | tee -a /etc/profile \u0026\u0026     echo -e \"export PATH=\\$KOTLIN_HOME/bin:\\$PATH\"                  | tee -a /etc/profile \u0026\u0026     echo -e \"\\nexport SCALA_HOME=/sdkman/candidates/scala/2.13.0\"   | tee -a /etc/profile \u0026\u0026     echo -e \"export PATH=\\$SCALA_HOME/bin:\\$PATH\"                   | tee -a /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "beakerx install                                                                                                      \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/goofts/spark.git /spark            \u0026\u0026     pip3 install toree \u0026\u0026 jupyter toree install --spark_home=/spark \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf          \u0026\u0026     rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/*      \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e \"\\nexport SPARK_HOME=/spark\"          | tee -a /etc/profile \u0026\u0026     echo -e \"export PATH=\\$SPARK_HOME/bin:\\$PATH\" | tee -a /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_c_kernel                                                                                                     \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m bash_kernel.install                                                                                       \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m sshkernel install                                                                                         \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \u0026\u0026 mv composer.phar /usr/local/bin/composer                         \u0026\u0026     wget https://litipk.github.io/Jupyter-PHP-Installer/dist/jupyter-php-installer.signed.phar.pubkey                    \u0026\u0026     wget https://litipk.github.io/Jupyter-PHP-Installer/dist/jupyter-php-installer.signed.phar                           \u0026\u0026     composer require react/zmq \u0026\u0026 php jupyter-php-installer.signed.phar install                                          \u0026\u0026     composer require nikic/php-parser \u0026\u0026 composer require designsecurity/progpilot                                       \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip2 install pyzmq ipykernel \u0026\u0026 python -m ipykernel install                                                          \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"install.packages('languageserver', repos='http://cran.us.r-project.org')\" | tee -a install.R                   \u0026\u0026     echo \"install.packages('IRkernel', repos='http://cran.us.r-project.org')\" | tee -a install.R                         \u0026\u0026     echo \"IRkernel::installspec(user = FALSE)\" | tee -a install.R \u0026\u0026 Rscript install.R                                   \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -u github.com/gopherdata/gophernotes \u0026\u0026 cp /usr/lib/gophernotes/bin/gophernotes /usr/bin                      \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install cztop iruby \u0026\u0026 iruby register                                                                            \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m ansible_kernel.install                                                                                    \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter hiveql install                                                                                               \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install ijavascript -g --unsafe-perm \u0026\u0026 ijsinstall \u0026\u0026 npm cache clean -f                                         \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf \u0026\u0026 rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/* \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/.local/share/jupyter/kernels /root/.vim/UltiSnips                   \u0026\u0026     mkdir -p /home/goofts/.local/share/jupyter  /home/goofts/.jupyter                  \u0026\u0026     mkdir -p /root/.vim/bundle \u0026\u0026 ln -snf /home /usr/include/silverbullets             \u0026\u0026     git clone https://github.com/goofts/silverbullets.git                              \u0026\u0026     git clone https://github.com/VundleVim/Vundle.vim.git /root/.vim/bundle/Vundle.vim \u0026\u0026     mv /root/silverbullets/headers            /usr/include/unix                        \u0026\u0026     mv /root/silverbullets/lib/*              /usr/lib                                 \u0026\u0026     mv /root/silverbullets/kernels/*          /root/.local/share/jupyter/kernels       \u0026\u0026     mv /root/silverbullets/settings           /root/.jupyter                           \u0026\u0026     mv /root/silverbullets/supervisor         /root/.supervisor                        \u0026\u0026     mv /root/silverbullets/*bullets.sh        /root                                    \u0026\u0026     mv /root/silverbullets/vimrc              /root/.vimrc                             \u0026\u0026     cp -rf /root/.local/share/jupyter/kernels /home/goofts/.local/share/jupyter        \u0026\u0026     cp -rf /root/.jupyter/lab                 /home/goofts/.jupyter                    \u0026\u0026     chown -R goofts:jupyter /home/goofts                                               \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf                             \u0026\u0026     rm -rf /root/silverbullets /root/.[ac]* /tmp/* /var/tmp/* /var/cache/apk/*         \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install @fissio/hub-topbar-buttons \u0026\u0026 npm cache clean -f \u0026\u0026     find /usr/lib/python* -name __pycache__ | xargs rm -rf                        \u0026\u0026     rm -rf ./* ./.[a-zA-Z]* /tmp/* /var/tmp/* /var/cache/apk/*                    \u0026\u0026     rm -rf /usr/local/share/jupyter/kernels/[^p]* /usr/share/jupyter/kernels/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "sh /root/silverbullets.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}