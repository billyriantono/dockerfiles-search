{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gcr.io/gcpug-container/appengine-go:slim",
      "SourceCode": "FROM gcr.io/gcpug-container/appengine-go:slim",
      "Platform": "",
      "From": {
        "Image": "gcr.io/gcpug-container/appengine-go:slim"
      },
      "Commands": [
        {
          "Key": "PROTOC_VERSION",
          "Name": "arg",
          "Value": "3.10.0"
        },
        {
          "Key": "PROTOTOOL_VERSION",
          "Name": "arg",
          "Value": "1.9.0"
        },
        {
          "Key": "GOLANGCI_LINT_VERSION",
          "Name": "arg",
          "Value": "1.21.0"
        },
        {
          "CmdLine": [
            "curl -fo protoc.zip -sSL \"https://github.com/google/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip\" \u0026\u0026 \tmkdir protoc \u0026\u0026     unzip -q protoc.zip -d protoc \u0026\u0026     cp ./protoc/bin/protoc /usr/local/bin/ \u0026\u0026     cp -rf ./protoc/include/google /usr/local/include/ \u0026\u0026     rm protoc.zip protoc -rf \u0026\u0026     cd $(mktemp -d); go mod init tmp; go get -u github.com/99designs/gqlgen; cd - \u0026\u0026     go get -u github.com/golang/protobuf/protoc-gen-go \u0026\u0026     cd $(mktemp -d); go mod init tmp; go get -u github.com/nametake/protoc-gen-gohttp; cd - \u0026\u0026     cd $(mktemp -d); go mod init tmp; go get -u github.com/favadi/protoc-go-inject-tag; cd - \u0026\u0026     curl -sSL https://github.com/uber/prototool/releases/download/v${PROTOTOOL_VERSION}/prototool-$(uname -s)-$(uname -m)  -o /usr/local/bin/prototool \u0026\u0026 chmod +x /usr/local/bin/prototool \u0026\u0026     cd $(mktemp -d); go mod init tmp; go get -u github.com/sonatard/pblint; cd - \u0026\u0026     cd $(mktemp -d); go mod init tmp; go get -u golang.org/x/tools/cmd/goimports; cd - \u0026\u0026     cd $(mktemp -d); go mod init tmp; go get mvdan.cc/gofumpt/gofumports; cd - \u0026\u0026     cd $(mktemp -d); go mod init tmp; go get mvdan.cc/sh/v3/cmd/shfmt; cd - \u0026\u0026     curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v${GOLANGCI_LINT_VERSION} \u0026\u0026     go get -u github.com/sachaos/xerrchk/cmd/xerrchk \u0026\u0026     cd $(mktemp -d); go mod init tmp; go get -u github.com/daisuzu/gsc; cd - \u0026\u0026     curl -sL https://deb.nodesource.com/setup_12.x | bash - \u0026\u0026         apt-get update \u0026\u0026 \tapt-get install -yqq --no-install-suggests --no-install-recommends \t\tnpm \t\tdnsutils \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm -rf ${GOPATH}/src ${GOPATH}/pkg \u0026\u0026     mkdir -p ${GOPATH}/src/github.com/googleapis \u0026\u0026 cd ${GOPATH}/src/github.com/googleapis \u0026\u0026 git clone --depth 1 https://github.com/googleapis/googleapis.git \u0026\u0026     mkdir -p ${GOPATH}/src/github.com/envoyproxy \u0026\u0026 cd ${GOPATH}/src/github.com/envoyproxy \u0026\u0026 git clone --depth 1 https://github.com/envoyproxy/protoc-gen-validate.git \u0026\u0026     cd $GOPATH/src/github.com/envoyproxy/protoc-gen-validate \u0026\u0026 make build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GO111MODULE",
              "Value": "on"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}