MetaArgs: null
Stages:
- BaseName: jacknlliu/ubuntu-init:16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Jack Liu <jacknlliu@gmail.com>"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: ROS_DISTRO
      Value: kinetic
    Name: env
  - CmdLine:
    - apt update -y && apt install -y -q --no-install-recommends apt-utils apt-transport-https
      locales && locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y -q --no-install-recommends python-pip && apt-get --auto-remove
      --yes remove python-openssl && pip2 install -U pyOpenSSL
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.ros.org/ros/ubuntu xenial main" > /etc/apt/sources.list.d/ros-latest.list          &&
      apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654          &&
      apt update -y -q && apt install -y -q --no-install-recommends ros-kinetic-desktop-full     python-rosinstall
      python-rosinstall-generator ninja-build python3-pip python3-setuptools     python3-defusedxml
      python3-dev     ros-kinetic-rosbridge-library ros-kinetic-rosbridge-server ros-kinetic-rosbridge-suite     ros-kinetic-tf2-web-republisher     ros-kinetic-tf2-relay
      ros-kinetic-tf2-geometry-msgs ros-kinetic-tf2-sensor-msgs
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.osrfoundation.org/gazebo/ubuntu xenial main" > /etc/apt/sources.list.d/gazebo-latest.list     &&
      curl http://packages.osrfoundation.org/gazebo.key |apt-key add -     && apt
      update -y -q     && apt upgrade -y -q --no-install-recommends gazebo7
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip && pip3 install --no-cache-dir catkin-tools rospkg
      ws4py transforms3d trollius
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install empy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pendulum; pip2 install pendulum         && pip3 install numpy roslibpy;
      pip2 install numpy roslibpy     && pip3 install scipy pandas pyquaternion; pip2
      install scipy pandas pyquaternion;     pip3 install tldr.py
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y -q --no-install-recommends build-essential gdb tmux     doxygen
      doxygen-gui     && apt install -y -q --no-install-recommends mesa-common-dev
      libglu1-mesa-dev libfontconfig1 qt5-default qtcreator qtdeclarative5-qtquick2-plugin         &&
      apt install -y -q --no-install-recommends libgl1-mesa-glx libgl1-mesa-dri         &&
      apt install -y -q --no-install-recommends mesa-vdpau-drivers xserver-xorg-video-ati
      mesa-utils module-init-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y -q --no-install-recommends wget python-pip pylint clang libxss1
      libxtst6     && export ROBOWAREVERSION="1.2.0-1524709819"      && wget https://github.com/tonyrobotics/RoboWare/raw/master/Studio/roboware-studio_${ROBOWAREVERSION}_amd64.deb
      -O roboware_amd64.deb     && chmod a+x roboware_amd64.deb && apt install -y
      -q --no-install-recommends ./roboware_amd64.deb     && apt install -y -q --no-install-recommends
      -f     && rm -f roboware_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update -y -q && apt install -y -q --no-install-recommends bash-completion     wget
      vim git iputils-ping iproute2 netcat tmux terminator xauth openssh-server sudo
      pcmanfm     tree ranger curl ca-certificates openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y -q --no-install-recommends ros-kinetic-gazebo-ros-control     ros-kinetic-ros-controllers     ros-kinetic-rqt-controller-manager     ros-kinetic-moveit     ros-kinetic-orocos-kdl     ros-kinetic-orocos-kinematics-dynamics     ros-kinetic-pid          &&
      apt install -y -q --no-install-recommends ros-kinetic-rtt ros-kinetic-rtt-*         &&
      apt install -y -q --no-install-recommends libignition-math2-dev ros-kinetic-barrett-hand
      ros-kinetic-barrett-hand-sim         && apt install -y -q --no-install-recommends
      libusb-1.0-0 libusb-1.0-0-dev freeglut3 freeglut3-dev         && apt install
      -y -q --no-install-recommends ros-kinetic-calibration-estimation ros-kinetic-kdl-parser-py          &&
      apt install -y -q --no-install-recommends ros-kinetic-katana-moveit-ikfast-plugin  ros-kinetic-trac-ik-lib
      ros-kinetic-trac-ik-kinematics-plugin         && apt install -y -q --no-install-recommends
      ros-kinetic-video-stream-opencv ros-kinetic-find-object-2d libcgal-dev  libcgal-qt5-dev         &&
      apt install -y -q --no-install-recommends libqwt-dev libqwt-qt5-dev ros-kinetic-rqt-multiplot
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/scripts/container/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/*
    - /opt/scripts/container/
  - CmdLine:
    - chmod -R a+rx /opt/scripts/ && cp /opt/scripts/container/containerinit.sh /etc/my_init.d/
      && chmod u+x /etc/my_init.d/containerinit.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/scripts/container/quick-fix.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/sshd && echo "X11UseLocalhost no" >> /etc/ssh/sshd_config     &&  rm
      -f /etc/service/sshd/down  && /etc/my_init.d/00_regen_ssh_host_keys.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_USER
      Value: ros
    Name: env
  - CmdLine:
    - 'adduser --gecos "ROS User" --home /home/$DOCKER_USER --disabled-password $DOCKER_USER
      &&     usermod -a -G dialout $DOCKER_USER &&     echo "$DOCKER_USER ALL=(ALL)
      NOPASSWD: ALL" > /etc/sudoers.d/99_aptget'
    Name: run
    PrependShell: true
  - Name: user
    User: $DOCKER_USER
  - CmdLine:
    - sudo rosdep init && rosdep update      && echo "source "/opt/ros/$ROS_DISTRO/setup.bash""
      >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $HOME/.config/QtProject
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME && curl https://sh.rustup.rs -sSf > rustup.sh && chmod a+x rustup.sh     &&
      ./rustup.sh -y && rm -f ./rustup.sh     && echo "source $HOME/.cargo/env" >>
      $HOME/.bashrc     && /bin/bash -c "source $HOME/.cargo/env && cargo install
      -f urdf-viz"
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt autoclean     && apt clean all     && apt autoremove -y     && rm -rf /var/lib/apt/lists/*     &&
      rm -rf /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./config/QtCreator.ini
    - /home/$DOCKER_USER/.config/QtProject/
  - CmdLine:
    - chown -R $DOCKER_USER:$DOCKER_USER  /home/$DOCKER_USER/.config/QtProject/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/$DOCKER_USER/.gazebo/models && chown -R $DOCKER_USER:$DOCKER_USER
      /home/$DOCKER_USER/.gazebo
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/$DOCKER_USER/.gazebo/models
  - Name: workdir
    Path: /home/$DOCKER_USER
  - CmdLine:
    - /opt/scripts/container/ros_entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: jacknlliu/ubuntu-init:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM jacknlliu/ubuntu-init:16.04
