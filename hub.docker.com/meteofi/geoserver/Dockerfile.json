{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker.io/openjdk:8-jre-slim",
      "SourceCode": "FROM docker.io/openjdk:8-jre-slim",
      "Platform": "",
      "From": {
        "Image": "docker.io/openjdk:8-jre-slim"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Mikko Rauhala \u003cmikko@meteo.fi\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "GEOSERVER_VERSION",
          "Name": "arg",
          "Value": "\"2.15.1\""
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends libnetcdf-c++4 curl \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NOTO_FONTS",
              "Value": "\"NotoSans-unhinted NotoSerif-unhinted NotoMono-hinted\""
            },
            {
              "Key": "GOOGLE_FONTS",
              "Value": "\"Open%20Sans Roboto Lato Ubuntu\""
            },
            {
              "Key": "GEOSERVER_VERSION",
              "Value": "$GEOSERVER_VERSION"
            },
            {
              "Key": "GEOSERVER_PLUGINS",
              "Value": "\"css grib imagemosaic-jdbc mongodb mysql netcdf pyramid vectortiles wps ysld\""
            },
            {
              "Key": "GEOSERVER_HOME",
              "Value": "\"/usr/share/geoserver\""
            },
            {
              "Key": "GEOSERVER_NODE_OPTS",
              "Value": "'id:$host_name'"
            },
            {
              "Key": "JAVA_OPTS",
              "Value": "\"-XX:+UseG1GC\""
            },
            {
              "Key": "JETTY_VERSION",
              "Value": "\"9.4.12.v20180830\""
            },
            {
              "Key": "POSGRESQL_VERSION",
              "Value": "\"42.2.5\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/fonts/truetype/noto \u0026\u0026     for FONT in ${NOTO_FONTS};     do         curl -sS -O https://noto-website-2.storage.googleapis.com/pkgs/${FONT}.zip \u0026\u0026     \tunzip -o ${FONT}.zip -d /usr/share/fonts/truetype/noto \u0026\u0026     \trm -f ${FONT}.zip ;     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "for FONT in $GOOGLE_FONTS;     do         mkdir -p /usr/share/fonts/truetype/${FONT} \u0026\u0026         curl -sS -o ${FONT}.zip \"https://fonts.google.com/download?family=${FONT}\" \u0026\u0026     \tunzip -o ${FONT}.zip -d /usr/share/fonts/truetype/${FONT} \u0026\u0026     \trm -f ${FONT}.zip ;     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd $JAVA_HOME \u0026\u0026     curl -sS -L -O https://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-amd64-jre.bin \u0026\u0026     echo \"yes\" | sh jai-1_1_3-lib-linux-amd64-jre.bin \u0026\u0026     rm jai-1_1_3-lib-linux-amd64-jre.bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd $JAVA_HOME \u0026\u0026     export _POSIX2_VERSION=199209 \u0026\u0026    curl -sS -L -O https://download.java.net/media/jai-imageio/builds/release/1.1/jai_imageio-1_1-lib-linux-amd64-jre.bin \u0026\u0026     echo \"yes\" | sh jai_imageio-1_1-lib-linux-amd64-jre.bin \u0026\u0026     rm jai_imageio-1_1-lib-linux-amd64-jre.bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd $JAVA_HOME/lib/ext/ \u0026\u0026     curl -L -sS -O https://jdbc.postgresql.org/download/postgresql-${POSGRESQL_VERSION}.jar \u0026\u0026     sed -i 's/^assistive_technologies=/#\u0026/' /etc/java-8-openjdk/accessibility.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS -L -O https://sourceforge.net/projects/geoserver/files/GeoServer/$GEOSERVER_VERSION/geoserver-$GEOSERVER_VERSION-bin.zip \u0026\u0026     unzip geoserver-$GEOSERVER_VERSION-bin.zip \u0026\u0026 mv -v geoserver-$GEOSERVER_VERSION $GEOSERVER_HOME \u0026\u0026     rm geoserver-$GEOSERVER_VERSION-bin.zip \u0026\u0026     sed -e 's/\u003ePARTIAL-BUFFER2\u003c/\u003eSPEED\u003c/g' -i $GEOSERVER_HOME/webapps/geoserver/WEB-INF/web.xml \u0026\u0026     rm -rf $GEOSERVER_HOME/webapps/geoserver/WEB-INF/lib/jai_codec-*.jar \u0026\u0026     rm -rf $GEOSERVER_HOME/webapps/geoserver/WEB-INF/lib/jai_core-*jar \u0026\u0026     rm -rf $GEOSERVER_HOME/webapps/geoserver/WEB-INF/lib/jai_imageio-*.jar \u0026\u0026     rm -rf $GEOSERVER_HOME/webapps/geoserver/WEB-INF/lib/marlin-*.jar \u0026\u0026     echo \"--module=servlets\" \u003e\u003e $GEOSERVER_HOME/start.ini \u0026\u0026     echo \"--module=jndi\"    \u003e\u003e $GEOSERVER_HOME/start.ini \u0026\u0026     echo '[depend]\\nserver\\nplus\\nutil\\n[xml]\\ndata_dir/jetty-jndi.xml\\n[lib]\\nlib/jetty-jndi-${jetty.version}.jar' \u003e $GEOSERVER_HOME/modules/jndi.mod \u0026\u0026     echo '[depend]\\nserver\\n[lib]\\nlib/jetty-plus-${jetty.version}.jar' \u003e $GEOSERVER_HOME/modules/plus.mod \u0026\u0026     echo '[depend]\\nserver\\n[lib]\\nlib/jetty-util-${jetty.version}.jar' \u003e $GEOSERVER_HOME/modules/util.mod \u0026\u0026     echo '[depend]\\nserver\\n[lib]\\nlib/jetty-servlets-${jetty.version}.jar' \u003e $GEOSERVER_HOME/modules/servlets.mod \u0026\u0026     cd  $GEOSERVER_HOME/lib/ \u0026\u0026     curl -sS -L -O https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-plus/${JETTY_VERSION}/jetty-plus-${JETTY_VERSION}.jar \u0026\u0026     curl -sS -L -O https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-jndi/${JETTY_VERSION}/jetty-jndi-${JETTY_VERSION}.jar \u0026\u0026     perl -i -0777 -pe 's/\u003c!-- Uncomment following filter to enable CORS\\s*?(\u003cfilter.*?cross-origin.*?\\/filter\u003e)\\s*?--\u003e/$1/s' $GEOSERVER_HOME/webapps/geoserver/WEB-INF/web.xml \u0026\u0026     perl -i -0777 -pe 's/\u003c!-- Uncomment following filter to enable CORS\\s*?(\u003cfilter-mapping.*?cross-origin.*?\\/filter-mapping\u003e)\\s*?--\u003e/$1/s' $GEOSERVER_HOME/webapps/geoserver/WEB-INF/web.xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd $GEOSERVER_HOME/webapps/geoserver/WEB-INF/lib/ \u0026\u0026     curl -L -sS -O https://github.com/bourgesl/marlin-renderer/releases/download/v0_9_3/marlin-0.9.3-Unsafe.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jetty-jndi.xml",
            "$GEOSERVER_HOME/data_dir/"
          ]
        },
        {
          "CmdLine": [
            "for PLUGIN in ${GEOSERVER_PLUGINS};     do       curl -sS -L -O https://sourceforge.net/projects/geoserver/files/GeoServer/$GEOSERVER_VERSION/extensions/geoserver-$GEOSERVER_VERSION-$PLUGIN-plugin.zip \u0026\u0026       unzip -o geoserver-$GEOSERVER_VERSION-$PLUGIN-plugin.zip -d /usr/share/geoserver/webapps/geoserver/WEB-INF/lib/ \u0026\u0026       rm geoserver-$GEOSERVER_VERSION-$PLUGIN-plugin.zip ;     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Health": {
            "Interval": 30000000000,
            "Test": [
              "CMD-SHELL",
              "curl -f \"http://localhost:8080/geoserver/ows?service=wms\u0026version=1.3.0\u0026request=GetCapabilities\" || exit 1"
            ],
            "Timeout": 10000000000
          },
          "Name": "healthcheck"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p $GEOSERVER_HOME \u0026\u0026     chgrp -R 0 $GEOSERVER_HOME \u0026\u0026     chmod -R g=u $GEOSERVER_HOME /etc/passwd /var/log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "101010"
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "geoserver"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}