MetaArgs: null
Stages:
- BaseName: php:7.1-fpm-alpine
  Commands:
  - Env:
    - Key: GOTLP_VER
      Value: 0.1.5
    Name: env
  - Env:
    - Key: RABBITMQ_C_VER
      Value: 0.8.0
    Name: env
  - CmdLine:
    - "set -x &&     deluser www-data && \taddgroup -g 82 -S www-data && \tadduser
      -u 82 -D -S -s /bin/bash -G www-data www-data"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe &&     apk add --update         bash         bzip2         c-client
      \        git         gzip         icu-libs         imagemagick         imap
      \        libbz2         libjpeg-turbo         libmcrypt         libpng         libxslt
      \        mariadb-client         libmemcached-libs         openssh-client         patch
      \        postgresql-client         rsync         su-exec         tar         wget
      \        yaml         autoconf         cmake         build-base         bzip2-dev
      \        freetype-dev         icu-dev         imagemagick-dev         imap-dev
      \        jpeg-dev         libjpeg-turbo-dev         libmemcached-dev         libmcrypt-dev
      \        libpng-dev         libtool         libxslt-dev         openldap-dev
      \        pcre-dev         postgresql-dev         yaml-dev &&     docker-php-source
      extract &&     docker-php-ext-install         bcmath         bz2         calendar
      \        exif         imap         intl         ldap         mcrypt         mysqli
      \        opcache         pdo_mysql         pdo_pgsql         pgsql         phar
      \        soap         sockets         xmlrpc         xsl         zip &&     docker-php-ext-configure
      gd         --with-gd         --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/
      \        --with-jpeg-dir=/usr/include/ &&       NPROC=$(getconf _NPROCESSORS_ONLN)
      &&       docker-php-ext-install -j${NPROC} gd &&     wget -qO- https://github.com/alanxz/rabbitmq-c/releases/download/v${RABBITMQ_C_VER}/rabbitmq-c-${RABBITMQ_C_VER}.tar.gz
      \        | tar xz -C /tmp/ &&     cd /tmp/rabbitmq-c-${RABBITMQ_C_VER} &&     mkdir
      -p build && cd build &&     cmake ..     \t\t-DCMAKE_INSTALL_PREFIX=/usr     \t\t-DCMAKE_INSTALL_LIBDIR=lib
      \    \t\t-DCMAKE_C_FLAGS=\"$CFLAGS\" &&     cmake --build . --target install
      &&     pecl config-set php_ini \"$PHP_INI_DIR/php.ini\" &&     pecl install
      \        amqp         apcu         oauth         imagick         redis         xdebug
      \        yaml-2.0.0 &&     docker-php-ext-enable         amqp         apcu         oauth
      \        imagick         redis         xdebug         yaml &&     git clone
      https://github.com/php/pecl-php-uploadprogress/ /usr/src/php/ext/uploadprogress/
      &&     docker-php-ext-configure uploadprogress &&     docker-php-ext-install
      uploadprogress &&     git clone --branch php7 https://github.com/php-memcached-dev/php-memcached
      /usr/src/php/ext/memcached/ &&     docker-php-ext-configure memcached &&     docker-php-ext-install
      memcached &&     wget -qO- https://github.com/wodby/gotpl/releases/download/${GOTLP_VER}/gotpl-alpine-linux-amd64-${GOTLP_VER}.tar.gz
      \        | tar xz -C /usr/local/bin &&     wget -qO- https://getcomposer.org/installer
      | php -- --install-dir=/usr/local/bin --filename=composer &&     su-exec www-data
      composer global require hirak/prestissimo:^0.3 &&     wget -qO- https://phar.phpunit.de/phpunit.phar
      > /usr/local/bin/phpunit &&     chmod +x /usr/local/bin/phpunit &&     mkdir
      -p /var/www/html &&     chown -R www-data:www-data /var/www &&     rm -f $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini
      &&     su-exec www-data composer clear-cache &&     docker-php-source delete
      &&     apk del --purge         *-dev         build-base         cmake         autoconf
      \        libtool &&     rm -rf         /usr/src/php.tar.xz         /usr/src/php/ext/memcached
      \        /usr/src/php/ext/uploadprogress         /usr/include/php         /usr/lib/php/build
      \        /var/cache/apk/*         /tmp/*         /root/.composer"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/home/www-data/.composer/vendor/bin:$PATH"'
    Name: env
  - Name: workdir
    Path: /var/www/html
  - Name: expose
    Ports:
    - "9000"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - templates/*
    - /etc/gotpl/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.1-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-fpm-alpine
