MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - echo 'Acquire::ForceIPv4 "true";' | tee /etc/apt/apt.conf.d/99force-ipv4
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get remove docker docker-engine docker.io containerd
      runc &&     apt-get install -y --no-install-recommends         apt-transport-https         ca-certificates         curl         gnupg-agent         software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      $(lsb_release -cs) stable"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y         containerd.io         docker-ce         docker-ce-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - base=https://github.com/docker/machine/releases/download/v0.16.0 &&     curl
      -L $base/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine &&     install
      /tmp/docker-machine /usr/local/bin/docker-machine
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_amd64.zip
      -o /tmp/temp.zip &&     unzip -d /usr/bin /tmp/temp.zip &&     rm /tmp/temp.zip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /tmp/
  - CmdLine:
    - apt-get install -y python3-pip &&     pip3 install -r /tmp/requirements.txt
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/.ansible/plugins/inventory/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/ximon18/ansible-docker-machine-inventory-plugin/master/docker_machine.py
    - .
  - CmdLine:
    - apt-get install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone -b nlnetlabs/gantry https://github.com/ximon18/vrnetlab.git /opt/nlnetlabs/gantry/vrnetlab
    Name: run
    PrependShell: true
  - CmdLine:
    - REG_SHA256="0470b6707ac68fa89d0cd92c83df5932c9822df7176fcf02d131d75f74a36a19"
      &&     curl -fSL "https://github.com/genuinetools/reg/releases/download/v0.16.0/reg-linux-amd64"
      -o "/usr/local/bin/reg" &&     echo "${REG_SHA256}  /usr/local/bin/reg" | sha256sum
      -c - &&     chmod a+x "/usr/local/bin/reg"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /opt/nlnetlabs/gantry
  - CmdLine:
    - ln -s /usr/bin/python3 /usr/bin/python
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/lib/python3.6/dist-packages/ansible
  - CmdLine:
    - patch -p3 < /opt/nlnetlabs/gantry/ansible-51055.patch
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/.docker/machine/certs/
  - CmdLine:
    - openssl req -x509 -newkey rsa:4096 -keyout ca-key.pem -out ca.pem -days 365
      -nodes -subj '/CN=localhost'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/nlnetlabs/gantry
  - Name: volume
    Volumes:
    - /root/.docker/machine
  - Env:
    - Key: GANTRY_INSIDE_DOCKER
      Value: "1"
    Name: env
  - CmdLine:
    - /bin/bash
    - /opt/nlnetlabs/gantry/cli
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
