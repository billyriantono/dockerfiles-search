MetaArgs: null
Stages:
- BaseName: ubuntu:19.04
  Commands:
  - Labels:
    - Key: vendor
      Value: '"NLnet Labs"'
    - Key: license
      Value: '"Apache License, Version 2.0"'
    Name: label
  - Key: BRANCH
    Name: arg
    Value: null
  - Env:
    - Key: APP_PATH
      Value: /app
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: BRANCH
      Value: ${BRANCH:-master}
    Name: env
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - apt-get update &&     apt-get upgrade -y &&     apt-get install --no-install-recommends
      -y         build-essential         curl         gcc         gettext         git         ldnsutils         libevent-dev         libhiredis-dev         libssl-dev=1.1.1b\*         libwww-perl         openssl=1.1.1b\*         postgresql-server-dev-11         python3-gdbm         python3.7         python3.7-dev         python3-pip         swig3.0         sudo
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -ms /bin/bash -G sudo internetnl && echo "internetnl ALL=(ALL) NOPASSWD:ALL"
      > /etc/sudoers.d/internetnl
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/python python /usr/bin/python3.7 1 &&     update-alternatives
      --install /usr/bin/pip pip /usr/bin/pip3 1
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install setuptools
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/build/python-whois
  - CmdLine:
    - curl -fsSLo- 'https://github.com/ralphdolmans/python-whois/tarball/ee546f4'
      | tar zx --strip-components 1
    Name: run
    PrependShell: true
  - CmdLine:
    - python setup.py install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/build/nassl_free_bsd
  - CmdLine:
    - mkdir -p bin/openssl-legacy/freebsd64              bin/openssl-modern/freebsd64              openssl-1.0.2e              openssl-master
      &&     curl -fsSLo- 'https://github.com/ximon18/nassl/tarball/758723b' | tar
      zx --strip-components 1 &&     curl -fsSLo- 'https://zlib.net/zlib-1.2.11.tar.gz'
      | tar zx &&     curl -fsSLo- 'https://github.com/PeterMosmans/openssl/tarball/1.0.2-chacha'
      | tar zx --strip-components 1 -C openssl-1.0.2e &&     curl -fsSLo- 'https://github.com/openssl/openssl/archive/OpenSSL_1_1_1c.tar.gz'
      | tar zx --strip-components 1 -C openssl-master &&     python build_from_scratch.py
      &&     python setup.py install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/build/unbound
  - CmdLine:
    - curl -fsSLo- 'https://github.com/ralphdolmans/unbound/tarball/internetnl' |
      tar zx --strip-components 1 &&     patch -p0 -i ./unbound_1.8.0_patch_unsupported_ds.diff
      &&     ln -s /usr/bin/swig3.0 /usr/bin/swig &&     ./configure --enable-internetnl
      --with-pyunbound --with-libevent --with-libhiredis &&     make &&     make install
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/lib
    Name: env
  - Name: workdir
    Path: /usr/local/etc/unbound
  - CmdLine:
    - 'useradd unbound &&     cp unbound.conf unbound.conf.org &&     sed -e ''s/#
      auto-trust-anchor-file:/auto-trust-anchor-file:/''         -e ''s/# control-enable:
      no/control-enable: yes/''         unbound.conf.org > unbound.conf &&     unbound-control-setup
      &&     unbound-anchor || test $? -eq 1 &&     chown -R unbound: .'
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${APP_PATH}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - python-pip-requirements.txt
    - .
  - CmdLine:
    - pip install --upgrade pip &&     pip install --trusted-host pypi.python.org
      -r ./python-pip-requirements.txt
    Name: run
    PrependShell: true
  - Chown: internetnl:internetnl
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - 'chown -R internetnl: .'
    Name: run
    PrependShell: true
  - Name: user
    User: internetnl
  - CmdLine:
    - sed -i -e "s|LDNS_DANE = .*|LDNS_DANE = '/usr/bin/ldns-dane'|g" ${APP_PATH}/internetnl/settings.py-dist
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s|TIME_ZONE = .*|TIME_ZONE = 'UTC'|g" ${APP_PATH}/internetnl/settings.py-dist
    Name: run
    PrependShell: true
  - CmdLine:
    - make translations
    Name: run
    PrependShell: true
  - CmdLine:
    - /app/docker/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:19.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:19.04
