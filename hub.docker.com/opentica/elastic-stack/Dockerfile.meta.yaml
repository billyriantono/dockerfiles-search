MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - CmdLine:
    - apt-get update -qq  && apt-get install -qqy curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl http://packages.elasticsearch.org/GPG-KEY-elasticsearch | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo deb http://packages.elasticsearch.org/elasticsearch/2.x/debian stable main
      > /etc/apt/sources.list.d/elasticsearch-2.x.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -qq  && apt-get install -qqy \t\telasticsearch=2.2.0  && apt-get
      clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main' > /etc/apt/sources.list.d/java.list
      &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 &&     apt-get
      update &&     echo oracle-java7-installer shared/accepted-oracle-license-v1-1
      select true | /usr/bin/debconf-set-selections &&     DEBIAN_FRONTEND=noninteractive
      apt-get install -y oracle-java7-installer
    Name: run
    PrependShell: true
  - CmdLine:
    - "DEBIAN_FRONTEND=noninteractive apt-get install -y openssh-server && \tmkdir
      /var/run/sshd && chmod 700 /var/run/sshd && \techo 'root:root' |chpasswd"
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y vim less nano maven ntp net-tools
      inetutils-ping curl git telnet
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone https://github.com/vspiewak/log-generator.git && \tcd log-generator
      && \t/usr/share/maven/bin/mvn clean package"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget -N http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
      && \tgunzip GeoLiteCity.dat.gz &&     mv GeoLiteCity.dat /log-generator/GeoLiteCity.dat"
    Name: run
    PrependShell: true
  - Env:
    - Key: LOGSTASH_HOME
      Value: /opt/logstash
    Name: env
  - Env:
    - Key: LOGSTASH_PACKAGE
      Value: logstash-2.2.0.tar.gz
    Name: env
  - CmdLine:
    - mkdir ${LOGSTASH_HOME}  && curl -O https://download.elasticsearch.org/logstash/logstash/${LOGSTASH_PACKAGE}  &&
      tar xzf ${LOGSTASH_PACKAGE} -C ${LOGSTASH_HOME} --strip-components=1  && rm
      -f ${LOGSTASH_PACKAGE}  && groupadd -r logstash  && useradd -r -s /usr/sbin/nologin
      -d ${LOGSTASH_HOME} -c "Logstash service user" -g logstash logstash  && mkdir
      -p /var/log/logstash /etc/logstash/conf.d  && chown -R logstash:logstash ${LOGSTASH_HOME}
      /var/log/logstash
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./logstash-init
    - /etc/init.d/logstash
  - CmdLine:
    - sed -i -e 's#^LS_HOME=$#LS_HOME='$LOGSTASH_HOME'#' /etc/init.d/logstash  &&
      chmod +x /etc/init.d/logstash
    Name: run
    PrependShell: true
  - Env:
    - Key: KIBANA_HOME
      Value: /opt/kibana
    Name: env
  - Env:
    - Key: KIBANA_PACKAGE
      Value: kibana-4.4.0-linux-x64.tar.gz
    Name: env
  - CmdLine:
    - mkdir ${KIBANA_HOME}  && curl -O https://download.elasticsearch.org/kibana/kibana/${KIBANA_PACKAGE}  &&
      tar xzf ${KIBANA_PACKAGE} -C ${KIBANA_HOME} --strip-components=1  && rm -f ${KIBANA_PACKAGE}  &&
      groupadd -r kibana  && useradd -r -s /usr/sbin/nologin -d ${KIBANA_HOME} -c
      "Kibana service user" -g kibana kibana  && mkdir -p /var/log/kibana  && chown
      -R kibana:kibana ${KIBANA_HOME} /var/log/kibana
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./kibana-init
    - /etc/init.d/kibana
  - CmdLine:
    - sed -i -e 's#^KIBANA_HOME=$#KIBANA_HOME='$KIBANA_HOME'#' /etc/init.d/kibana  &&
      chmod +x /etc/init.d/kibana
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./elasticsearch.yml
    - /etc/elasticsearch/elasticsearch.yml
  - CmdLine:
    - mkdir -p /etc/pki/tls/certs && mkdir /etc/pki/tls/private
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./logstash-forwarder.crt
    - /etc/pki/tls/certs/logstash-forwarder.crt
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./logstash-forwarder.key
    - /etc/pki/tls/private/logstash-forwarder.key
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./logstash-beats.crt
    - /etc/pki/tls/certs/logstash-beats.crt
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./logstash-beats.key
    - /etc/pki/tls/private/logstash-beats.key
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./01-lumberjack-input.conf
    - /etc/logstash/conf.d/01-lumberjack-input.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./02-beats-input.conf
    - /etc/logstash/conf.d/02-beats-input.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./10-syslog.conf
    - /etc/logstash/conf.d/10-syslog.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./11-nginx.conf
    - /etc/logstash/conf.d/11-nginx.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./30-output.conf
    - /etc/logstash/conf.d/30-output.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./nginx.pattern
    - ${LOGSTASH_HOME}/patterns/nginx
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./logback
    - ${LOGSTASH_HOME}/patterns/logback
  - CmdLine:
    - chown -R logstash:logstash ${LOGSTASH_HOME}/patterns
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./start.sh
    - /usr/local/bin/start.sh
  - CmdLine:
    - chmod +x /usr/local/bin/start.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5000"
    - "5044"
    - "5601"
    - "9200"
    - "9300"
  - Name: volume
    Volumes:
    - /var/lib/elasticsearch
  - CmdLine:
    - /usr/local/bin/start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
