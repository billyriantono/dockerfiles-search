MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - CmdLine:
    - useradd -u 555 dockerapp    && mkdir /home/dockerapp    && mkdir /home/dockerapp/app     &&
      mkdir /home/dockerapp/data     && mkdir /home/dockerapp/cashe     && mkdir /home/dockerapp/deleted     &&
      chown -R dockerapp:dockerapp /home/dockerapp      && addgroup dockerapp staff
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt update \t&& apt install -y locales \t&& echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen
      \t&& locale-gen en_US.utf8 \t&& /usr/sbin/update-locale LANG=en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - "apt update \t&& apt install -y --no-install-recommends \tapt-utils \tca-certificates
      \tcurl         wget \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update && apt install -y     sudo     pandoc     pandoc-citeproc     libcurl4-gnutls-dev     libcairo2-dev     libxt-dev     libssl-dev     libssh2-1-dev     libssl1.0.0     libxml2-dev     gdebi     libssl-dev     systemd     zip     unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update && apt install -y     libmpfr-dev     gfortran     aptitude     libgdal-dev     libproj-dev     g++     libicu-dev     libpcre3-dev    libbz2-dev     liblzma-dev     libnlopt-dev     build-essential     uchardet
      libuchardet-dev     task-spooler     cmake     cron     git-core
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/docker
  - CmdLine:
    - sudo wget https://mirrors.kernel.org/ubuntu/pool/main/libp/libpng/libpng12-0_1.2.54-1ubuntu1_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo dpkg -i libpng12-0_1.2.54-1ubuntu1_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget https://www.dropbox.com/s/uz4e4d0frk21cvn/microsoft-r-open-3.5.1.tar.gz?dl=1
      -O microsoft-r-open-3.5.1.tar.gz && echo \"9791AAFB94844544930A1D896F2BF1404205DBF2EC059C51AE75EBB3A31B3792
      microsoft-r-open-3.5.1.tar.gz\" > checksum.txt \t&& sha256sum -c --strict checksum.txt
      \t&& tar -xf microsoft-r-open-3.5.1.tar.gz \t&& cd /home/docker/microsoft-r-open
      \t&& ./install.sh -a -u \t&& ls logs && cat logs/*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/docker
  - CmdLine:
    - "rm microsoft-r-open-3.5.1.tar.gz \t&& rm checksum.txt && rm -r microsoft-r-open"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable && apt update &&
      apt install -y libudunits2-dev libgdal-dev libgeos-dev && apt install -y openjdk-11-jdk
      && java -version
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo wget https://www.dropbox.com/s/sgdwyp7kve44gtp/mailsend-go_linux_64-bit.deb?dl=1
      -O mailsend-go_linux_64-bit.deb && dpkg -i mailsend-go_linux_64-bit.deb && rm
      mailsend-go_linux_64-bit.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo R -e "install.packages('rmarkdown', repos='https://cran.amrcloud.net/')"
      && R -e "install.packages(c('shiny'), repos='https://cran.amrcloud.net/')" &&
      R -e "install.packages(c('shinyjs'), repos='https://cran.amrcloud.net/')" &&
      R -e "install.packages(c('shinythemes'), repos='https://cran.amrcloud.net/')"
      && R -e "install.packages(c('dplyr'), repos='https://cran.amrcloud.net/')" &&
      R -e "install.packages(c('data.table'), repos='https://cran.amrcloud.net/')"
      && R -e "install.packages(c('pool'), repos='https://cran.amrcloud.net/')" &&
      R -e "install.packages(c('bcrypt'), repos='https://cran.amrcloud.net/')" &&
      R -e "install.packages(c('binom'), repos='https://cran.amrcloud.net/')" && R
      -e "install.packages(c('RPostgres'), repos='https://cran.amrcloud.net/')" &&
      R -e "install.packages(c('DBI'), repos='https://cran.amrcloud.net/')" && R -e
      "install.packages(c('cronR'), repos='https://cran.amrcloud.net/')" && R -e "install.packages(c('commonmark'),
      repos='https://cran.amrcloud.net/')" && R -e "install.packages(c('httr', 'processx',
      'tidyr', 'ggplot2'), repos='https://cran.amrcloud.net/')" && R -e "install.packages(c('remotes',
      'blastula'), repos='https://cran.amrcloud.net/')"
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
