MetaArgs: null
Stages:
- BaseName: kuzmenkov/docker-baseimage:latest
  Commands:
  - CmdLine:
    - echo "deb http://archive.ubuntu.com/ubuntu `cat /etc/container_environment/DISTRIB_CODENAME`-backports
      main restricted universe" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - (echo "deb http://cran.mtu.edu/bin/linux/ubuntu `cat /etc/container_environment/DISTRIB_CODENAME`/"
      >> /etc/apt/sources.list && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys
      E084DAB9)
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends \tca-certificates
      \tcurl         wget \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/docker
  - CmdLine:
    - "wget https://www.dropbox.com/s/uz4e4d0frk21cvn/microsoft-r-open-3.5.1.tar.gz?dl=1
      -O microsoft-r-open-3.5.1.tar.gz && echo \"9791AAFB94844544930A1D896F2BF1404205DBF2EC059C51AE75EBB3A31B3792
      microsoft-r-open-3.5.1.tar.gz\" > checksum.txt \t&& sha256sum -c --strict checksum.txt
      \t&& tar -xf microsoft-r-open-3.5.1.tar.gz \t&& cd /home/docker/microsoft-r-open
      \t&& ./install.sh -a -u \t&& ls logs && cat logs/*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/docker
  - CmdLine:
    - "rm microsoft-r-open-3.5.1.tar.gz \t&& rm checksum.txt && rm -r microsoft-r-open"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     sudo     pandoc     pandoc-citeproc     libcurl4-gnutls-dev     libcairo2-dev     libxt-dev     libssl-dev     libssh2-1-dev     libssl1.0.0     libxml2-dev     libssl-dev     cron
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     libmpfr-dev     gfortran     aptitude     libgdal-dev     libproj-dev     g++     gdebi-core    libicu-dev     libpcre3-dev    libbz2-dev     liblzma-dev     libnlopt-dev     build-essential     libhiredis-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libudunits2-dev libgdal-dev libgeos-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-add-repository -y ppa:webupd8team/java && apt-get update && echo "oracle-java8-installer
      shared/accepted-oracle-license-v1-1 select true" | sudo debconf-set-selections
      && apt-get install -y oracle-java8-installer && R -e "Sys.setenv(JAVA_HOME =
      '/usr/lib/jvm/java-8-oracle/jre')"
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo java -version
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://www.dropbox.com/s/8v07th1mur5m91n/shiny-server-1.5.9.923-amd64.deb?dl=1
      -O shiny-server-1.5.9.923-amd64.deb && dpkg -i --force-depends shiny-server-1.5.9.923-amd64.deb           &&
      rm shiny-server-1.5.9.923-amd64.deb &&     R -e "install.packages(c('shiny',
      'rmarkdown'), repos='https://cran.rstudio.com/')"           && mkdir -p /srv/shiny-server;
      sync            && mkdir -p  /srv/shiny-server/examples; sync
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/my_init.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - startup.sh
    - /etc/my_init.d/startup.sh
  - CmdLine:
    - chmod +x /etc/my_init.d/startup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/service/shiny-server /var/log/shiny-server ; sync
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - shiny-server.sh
    - /etc/service/shiny-server/run
  - CmdLine:
    - chmod +x /etc/service/shiny-server/run      && cp /var/log/cron/config /var/log/shiny-server/     &&
      chown -R shiny /var/log/shiny-server     && sed -i '113 a <h2><a href="./examples/">Other
      examples of Shiny application</a> </h2>' /srv/shiny-server/index.html
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ncbi-blast+ && R -e "install.packages('curl', repos='https://cran.r-project.org/')"
      && R -e "install.packages('httr', repos='https://cran.r-project.org/')" && R
      -e "install.packages('devtools', repos='https://cran.r-project.org/')" && R
      -e "install.packages('htmlwidgets', repos='https://cran.r-project.org/')" &&
      R -e "source('https://bioconductor.org/biocLite.R'); biocLite(); biocLite('Biostrings');
      biocLite('GenomicRanges')" && sudo su - -c "R -e \"install.packages('miniUI',
      repos='https://cran.r-project.org/');options(unzip = 'internal'); devtools::install_github('daattali/shinyjs')\""
      && R -e "install.packages('crosstalk', repos='https://cran.r-project.org/')"
      && sudo su - -c "R -e \"options(unzip = 'internal'); devtools::install_github('rstudio/DT')\""
      && sudo su - -c "R -e \"options(unzip = 'internal'); devtools::install_github('kuzmenkov111/rBLAST')\""
      && R -e "install.packages('data.table', repos='https://cran.r-project.org/')"
      && R -e "install.packages('future', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('stringi', repos='https://cran.r-project.org/')" && R
      -e "install.packages('shinythemes', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('fst', repos='https://cran.r-project.org/')" && R -e
      "install.packages('msaR', repos='https://cran.r-project.org/')" && R -e "install.packages('shinyWidgets',
      repos='https://cran.r-project.org/')" && R -e "install.packages('shinyjqui',
      repos='https://cran.r-project.org/')"  && R -e "install.packages('shinycssloaders',
      repos='https://cran.r-project.org/')" && R -e "install.packages('dplyr', repos='https://cran.r-project.org/')"
      && R -e "install.packages('RColorBrewer', repos='https://cran.r-project.org/')"
      && R -e "install.packages('stringr', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('ggplot2', repos='https://cran.r-project.org/')" && R
      -e "install.packages('ggrepel', repos='https://cran.r-project.org/')" && sudo
      su - -c "R -e \"options(unzip = 'internal'); devtools::install_github('ropensci/plotly')\""&&
      sudo su - -c "R -e \"options(unzip = 'internal'); devtools::install_github('stefanedwards/lemon')\""&&
      sudo su - -c "R -e \"options(unzip = 'internal'); devtools::install_github('kuzmenkov111/highcharter')\""&&
      R -e "install.packages('shinyjqui', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('fs', repos='https://cran.r-project.org/')" && R -e "install.packages('gggenes',
      repos='https://cran.r-project.org/')" && R -e "install.packages('cronR', repos='https://cran.r-project.org/')"
      && R -e "install.packages('promises', repos='https://cran.r-project.org/')"
      && R -e "install.packages('ipc', repos='https://cran.r-project.org/')" && R
      CMD javareconf && R -e "Sys.setenv(JAVA_HOME = '/usr/lib/jvm/java-8-oracle/jre');
      install.packages('rJava', repos='https://cran.r-project.org/')" && R -e "install.packages('mailR',
      repos='https://cran.r-project.org/')" && R -e "install.packages('curl', repos='https://cran.r-project.org/')"
      && sudo su - -c "R -e \"options(unzip = 'internal'); devtools::install_github('AdeelK93/collapsibleTree');
      devtools::install_github('emitanaka/shinycustomloader')\""
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/lib/shiny-server/bookmarks  && chown -R shiny:shiny /var/lib/shiny-server/bookmarks
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /srv/shiny-server
  - Name: expose
    Ports:
    - "3838"
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  From:
    Image: kuzmenkov/docker-baseimage:latest
  Name: ""
  Platform: ""
  SourceCode: FROM kuzmenkov/docker-baseimage:latest
