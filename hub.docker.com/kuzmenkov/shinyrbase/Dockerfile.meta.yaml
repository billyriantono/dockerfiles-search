MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Key: DEBIAN_FRONTED
    Name: arg
    Value: '''noninteractive'''
  - CmdLine:
    - "useradd docker \t&& mkdir /home/docker \t&& chown docker:docker /home/docker
      \t&& addgroup docker staff"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \t&& locale-gen en_US.utf8 \t&&
      /usr/sbin/update-locale LANG=en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends \tca-certificates
      \tcurl         wget \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     sudo     pandoc     pandoc-citeproc     libcurl4-gnutls-dev     libcairo2-dev     libxt-dev     libssl-dev     libssh2-1-dev     libssl1.0.0     libxml2-dev     libssl-dev     apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     libmpfr-dev     gfortran     aptitude     libgdal-dev     libproj-dev     g++     libicu-dev     libpcre3-dev    libbz2-dev     liblzma-dev     openjdk-7-jdk     libnlopt-dev     build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update -y
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y gcc-4.9
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y g++-4.9
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update -y
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 --slave
      /usr/bin/g++ g++ /usr/bin/g++-4.9
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo update-alternatives --config gcc
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y gfortran-4.9
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-4.9
      60
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo update-alternatives --config gfortran
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/docker
  - CmdLine:
    - sudo add-apt-repository -y 'deb https://cloud.r-project.org/bin/linux/ubuntu
      trusty-cran35/'
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update -y
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y r-base && apt-get install -y r-base-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libudunits2-dev libgdal-dev libgeos-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages('shiny', repos='https://cran.r-project.org/')" && R -e
      "install.packages('rmarkdown', repos='https://cran.r-project.org/')" && R -e
      "install.packages('binom', repos='https://cran.r-project.org/')" && R -e "install.packages('dplyr',
      repos='https://cran.r-project.org/')" && R -e "install.packages('ggplot2', repos='https://cran.r-project.org/')"
      && R -e "install.packages('reshape', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('curl', repos='https://cran.r-project.org/')" && R -e
      "install.packages('httr', repos='https://cran.r-project.org/')" && R -e "install.packages('devtools',
      repos='https://cran.r-project.org/')" && R -e "install.packages('remotes', repos='https://cran.r-project.org/')"
      && R -e "install.packages('formattable', repos='https://cran.r-project.org/')"
      && R -e "install.packages('car', repos='https://cran.r-project.org/')" && R
      -e "install.packages('fmsb', repos='https://cran.r-project.org/')" && R -e "install.packages('igraph',
      repos='https://cran.r-project.org/')" && sudo su - -c "R -e \"install.packages('miniUI',
      repos='https://cran.r-project.org/');options(unzip = 'internal'); remotes::install_github('daattali/shinyjs')\""
      && R -e "install.packages('scales', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('crosstalk', repos='https://cran.r-project.org/')" &&
      sudo su - -c "R -e \"options(unzip = 'internal'); remotes::install_github('rstudio/DT')\""
      && sudo su - -c "R -e \"install.packages(c('raster', 'sp', 'viridis'), repos='https://cran.r-project.org/');options(unzip
      = 'internal'); remotes::install_github('rstudio/leaflet')\"" && sudo su - -c
      "R -e \"options(unzip = 'internal'); remotes::install_github('bhaskarvk/leaflet.extras')\""
      && R -e "install.packages('ggrepel', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('visNetwork', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('purrr', repos='https://cran.r-project.org/')" && sudo
      su - -c "R -e \"options(unzip = 'internal'); remotes::install_github('kuzmenkov111/highcharter')\""
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3838"
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
