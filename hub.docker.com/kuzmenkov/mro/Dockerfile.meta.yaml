MetaArgs: null
Stages:
- BaseName: kuzmenkov/docker-baseimage:latest
  Commands:
  - CmdLine:
    - echo "deb http://archive.ubuntu.com/ubuntu `cat /etc/container_environment/DISTRIB_CODENAME`-backports
      main restricted universe" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - (echo "deb http://cran.mtu.edu/bin/linux/ubuntu `cat /etc/container_environment/DISTRIB_CODENAME`/"
      >> /etc/apt/sources.list && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys
      E084DAB9)
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends \tca-certificates
      \tcurl         wget \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/docker
  - CmdLine:
    - "wget https://www.dropbox.com/s/uz4e4d0frk21cvn/microsoft-r-open-3.5.1.tar.gz?dl=1
      -O microsoft-r-open-3.5.1.tar.gz && echo \"9791AAFB94844544930A1D896F2BF1404205DBF2EC059C51AE75EBB3A31B3792
      microsoft-r-open-3.5.1.tar.gz\" > checksum.txt \t&& sha256sum -c --strict checksum.txt
      \t&& tar -xf microsoft-r-open-3.5.1.tar.gz \t&& cd /home/docker/microsoft-r-open
      \t&& ./install.sh -a -u \t&& ls logs && cat logs/*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/docker
  - CmdLine:
    - "rm microsoft-r-open-3.5.1.tar.gz \t&& rm checksum.txt && rm -r microsoft-r-open"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     sudo     pandoc     pandoc-citeproc     libcurl4-gnutls-dev     libcairo2-dev     libxt-dev     libssl-dev     libssh2-1-dev     libssl1.0.0     libxml2-dev     libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     libmpfr-dev     gfortran     aptitude     libgdal-dev     libproj-dev     g++     gdebi-core    libicu-dev     libpcre3-dev    libbz2-dev     liblzma-dev     libnlopt-dev     build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update -y
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y gcc-4.9
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y g++-4.9
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update -y
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 --slave
      /usr/bin/g++ g++ /usr/bin/g++-4.9
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo update-alternatives --config gcc
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y gfortran-4.9
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-4.9
      60
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo update-alternatives --config gfortran
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libudunits2-dev libgdal-dev libgeos-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-add-repository -y ppa:webupd8team/java && apt-get update && echo "oracle-java8-installer
      shared/accepted-oracle-license-v1-1 select true" | sudo debconf-set-selections
      && apt-get install -y oracle-java8-installer && R -e "Sys.setenv(JAVA_HOME =
      '/usr/lib/jvm/java-8-oracle/jre')"
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo java -version
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages('binom', repos='https://cran.r-project.org/')" && R -e
      "install.packages('dplyr', repos='https://cran.r-project.org/')" && R -e "install.packages('ggplot2',
      repos='https://cran.r-project.org/')" && R -e "install.packages('reshape', repos='https://cran.r-project.org/')"
      && R -e "install.packages('curl', repos='https://cran.r-project.org/')" && R
      -e "install.packages('httr', repos='https://cran.r-project.org/')" && R -e "install.packages('devtools',
      repos='https://cran.r-project.org/')" && R -e "install.packages('remotes', repos='https://cran.r-project.org/')"
      && R -e "install.packages('formattable', repos='https://cran.r-project.org/')"
      && R -e "install.packages('car', repos='https://cran.r-project.org/')" && R
      -e "install.packages('fmsb', repos='https://cran.r-project.org/')" && R -e "install.packages('igraph',
      repos='https://cran.r-project.org/')" && sudo su - -c "R -e \"install.packages('miniUI',
      repos='https://cran.r-project.org/');options(unzip = 'internal'); remotes::install_github('daattali/shinyjs')\""
      && R -e "install.packages('scales', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('crosstalk', repos='https://cran.r-project.org/')" &&
      sudo su - -c "R -e \"options(unzip = 'internal'); remotes::install_github('rstudio/DT')\""
      && sudo su - -c "R -e \"install.packages(c('raster', 'sp', 'viridis'), repos='https://cran.r-project.org/');options(unzip
      = 'internal'); remotes::install_github('rstudio/leaflet')\"" && sudo su - -c
      "R -e \"options(unzip = 'internal'); remotes::install_github('bhaskarvk/leaflet.extras')\""
      && R -e "install.packages('ggrepel', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('visNetwork', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('purrr', repos='https://cran.r-project.org/')" && sudo
      su - -c "R -e \"options(unzip = 'internal'); remotes::install_github('kuzmenkov111/highcharter')\""
    Name: run
    PrependShell: true
  From:
    Image: kuzmenkov/docker-baseimage:latest
  Name: ""
  Platform: ""
  SourceCode: FROM kuzmenkov/docker-baseimage:latest
