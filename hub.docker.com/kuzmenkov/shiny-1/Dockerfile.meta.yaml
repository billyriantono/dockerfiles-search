MetaArgs: null
Stages:
- BaseName: r-base:latest
  Commands:
  - Maintainer: Winston Chang "winston@rstudio.com"
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y -t unstable     sudo     gdebi-core     pandoc     pandoc-citeproc     libcurl4-gnutls-dev     libcairo2-dev/unstable     libxt-dev
      &&     wget --no-verbose https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-12.04/x86_64/VERSION
      -O "version.txt" &&     VERSION=$(cat version.txt)  &&     wget --no-verbose
      "https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-12.04/x86_64/shiny-server-$VERSION-amd64.deb"
      -O ss-latest.deb &&     gdebi -n ss-latest.deb &&     rm -f version.txt ss-latest.deb
      &&     R -e "install.packages(c('shiny', 'rmarkdown'), repos='https://cran.rstudio.com/')"
      &&     cp -R /usr/local/lib/R/site-library/shiny/examples/* /srv/shiny-server/
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     sudo     libcurl4-gnutls-dev     libxt-dev     libssl-dev     libssh2-1-dev     libxml2-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     libmpfr-dev     gfortran     aptitude     libgdal-dev     libproj-dev     g++     gdebi-core    libicu-dev     libpcre3-dev    libbz2-dev     liblzma-dev     libnlopt-dev     build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages('binom', repos='https://cran.r-project.org/')" && R -e
      "install.packages('dplyr', repos='https://cran.r-project.org/')" && R -e "install.packages('ggplot2',
      repos='https://cran.r-project.org/')" && R -e "install.packages('reshape', repos='https://cran.r-project.org/')"
      && R -e "install.packages('curl', repos='https://cran.r-project.org/')" && R
      -e "install.packages('httr', repos='https://cran.r-project.org/')" && R -e "install.packages('devtools',
      repos='https://cran.r-project.org/')" && R -e "install.packages('formattable',
      repos='https://cran.r-project.org/')" && R -e "install.packages('car', repos='https://cran.r-project.org/')"
      && R -e "install.packages('fmsb', repos='https://cran.r-project.org/')" && R
      -e "install.packages('igraph', repos='https://cran.r-project.org/')" && sudo
      su - -c "R -e \"install.packages('miniUI', repos='https://cran.r-project.org/');options(unzip
      = 'internal'); devtools::install_github('daattali/shinyjs')\"" && R -e "install.packages('scales',
      repos='https://cran.r-project.org/')" && R -e "install.packages('crosstalk',
      repos='https://cran.r-project.org/')" && sudo su - -c "R -e \"options(unzip
      = 'internal'); devtools::install_github('rstudio/DT')\"" && sudo su - -c "R
      -e \"install.packages(c('raster', 'sp', 'viridis'), repos='https://cran.r-project.org/');options(unzip
      = 'internal'); devtools::install_github('rstudio/leaflet')\"" && sudo su - -c
      "R -e \"options(unzip = 'internal'); devtools::install_github('bhaskarvk/leaflet.extras')\""
      && R -e "install.packages('ggrepel', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('visNetwork', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('purrr', repos='https://cran.r-project.org/')" && sudo
      su - -c "R -e \"options(unzip = 'internal'); devtools::install_github('kuzmenkov111/highcharter')\""
      && R -e "install.packages('shinyBS', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('data.table', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('maptools', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('rgdal', repos='https://cran.r-project.org/')" && R -e
      "install.packages('googleVis', repos='https://cran.r-project.org/')" && R -e
      "install.packages('future', repos='https://cran.r-project.org/')" && R -e "install.packages('tidyr',
      repos='https://cran.r-project.org/')"&& sudo su - -c "R -e \"options(unzip =
      'internal'); devtools::install_github('daattali/timevis')\""&& R -e "install.packages('shinythemes',
      repos='https://cran.r-project.org/')" && R -e "install.packages('formattable',
      repos='https://cran.r-project.org/')" && R -e "install.packages('fst', repos='https://cran.r-project.org/')"
      && R -e "install.packages('leaflet.minicharts', repos='https://cran.r-project.org/')"
      && R -e "install.packages('RColorBrewer', repos='https://cran.r-project.org/')"
      && R -e "install.packages('shinyWidgets', repos='https://cran.r-project.org/')"
      && R -e "install.packages('shinyjqui', repos='https://cran.r-project.org/')"  &&
      R -e "install.packages('collapsibleTree', repos='https://cran.r-project.org/')"  &&
      R -e "install.packages('RCurl', repos='https://cran.r-project.org/')" && R -e
      "install.packages('shinycssloaders', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('officer', repos='https://cran.r-project.org/')" && R
      -e "install.packages('flextable', repos='https://cran.r-project.org/')" && R
      -e "install.packages('raster', repos='https://cran.r-project.org/')" && R -e
      "install.packages('digest', repos='https://cran.r-project.org/')" && R -e "install.packages('bcrypt',
      repos='https://cran.r-project.org/')" && sudo su - -c "R -e \"options(unzip
      = 'internal'); devtools::install_github('hrbrmstr/qrencoder')\""
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - test_shiny
    - /srv/shiny-server/
  - CmdLine:
    - apt-get install -y nano wget dialog net-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R www-data:www-data /var/lib/nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - default
    - /etc/nginx/sites-available/
  - Name: volume
    Volumes:
    - /etc/nginx/certs
    - /etc/nginx/conf.d
    - /var/log/nginx
    - /var/www/html
  - Name: expose
    Ports:
    - "80"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - shiny-server.sh
    - /usr/bin/shiny-server.sh
  - CmdLine:
    - /usr/bin/shiny-server.sh
    Name: cmd
    PrependShell: false
  From:
    Image: r-base:latest
  Name: ""
  Platform: ""
  SourceCode: FROM r-base:latest
