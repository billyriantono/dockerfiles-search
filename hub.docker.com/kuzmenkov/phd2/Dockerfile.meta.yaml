MetaArgs: null
Stages:
- BaseName: kuzmenkov/docker-baseimage:latest
  Commands:
  - CmdLine:
    - echo "deb http://archive.ubuntu.com/ubuntu `cat /etc/container_environment/DISTRIB_CODENAME`-backports
      main restricted universe" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - (echo "deb http://cran.mtu.edu/bin/linux/ubuntu `cat /etc/container_environment/DISTRIB_CODENAME`/"
      >> /etc/apt/sources.list && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys
      E084DAB9)
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends     ca-certificates     curl         wget     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/docker
  - CmdLine:
    - wget https://www.dropbox.com/s/xrkzdhm1cq0ll1q/microsoft-r-open-3.3.2.tar.gz?dl=1
      -O microsoft-r-open-3.3.2.tar.gz && echo "817aca692adffe20e590fc5218cb6992f24f29aa31864465569057534bce42c7
      microsoft-r-open-3.3.2.tar.gz" > checksum.txt     && sha256sum -c --strict checksum.txt     &&
      tar -xf microsoft-r-open-3.3.2.tar.gz     && cd /home/docker/microsoft-r-open     &&
      ./install.sh -a -u     && ls logs && cat logs/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/docker
  - CmdLine:
    - rm microsoft-r-open-3.3.2.tar.gz     && rm checksum.txt && rm -r microsoft-r-open
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     sudo     pandoc     pandoc-citeproc     libcurl4-gnutls-dev     libcairo2-dev     libxt-dev     libssl-dev     libssh2-1-dev     libssl1.0.0     libxml2-dev     libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     libmpfr-dev     gfortran     aptitude     libgdal-dev     libproj-dev     g++     gdebi-core    libicu-dev     libpcre3-dev    libbz2-dev     liblzma-dev     libnlopt-dev     build-essential
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Makeconf
    - /usr/lib64/microsoft-r/3.3/lib64/R/etc/Makeconf
  - CmdLine:
    - wget https://www.dropbox.com/s/zjydeqye63dm7ra/shiny-server-1.5.5.872-amd64.deb?dl=1
      -O shiny-server-1.5.5.872-amd64.deb && dpkg -i --force-depends shiny-server-1.5.5.872-amd64.deb           &&
      rm shiny-server-1.5.5.872-amd64.deb &&     R -e "install.packages(c('shiny',
      'rmarkdown'), repos='https://cran.rstudio.com/')"           && mkdir -p /srv/shiny-server;
      sync            && mkdir -p  /srv/shiny-server/examples; sync
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/my_init.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - startup.sh
    - /etc/my_init.d/startup.sh
  - CmdLine:
    - chmod +x /etc/my_init.d/startup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/service/shiny-server /var/log/shiny-server ; sync
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - shiny-server.sh
    - /etc/service/shiny-server/run
  - CmdLine:
    - chmod +x /etc/service/shiny-server/run      && cp /var/log/cron/config /var/log/shiny-server/     &&
      chown -R shiny /var/log/shiny-server     && sed -i '113 a <h2><a href="./examples/">Other
      examples of Shiny application</a> </h2>' /srv/shiny-server/index.html
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo R -e "install.packages('binom', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('dplyr', repos='https://cran.r-project.org/')" && R -e
      "install.packages('purrr', repos='https://cran.r-project.org/')" && R -e "install.packages('ggplot2',
      repos='https://cran.r-project.org/')" && R -e "install.packages('reshape', repos='https://cran.r-project.org/')"
      && R -e "install.packages('curl', repos='https://cran.r-project.org/')" && R
      -e "install.packages('httr', repos='https://cran.r-project.org/')" && R -e "install.packages('devtools',
      repos='https://cran.r-project.org/')" && R -e "install.packages('formattable',
      repos='https://cran.r-project.org/')" && R -e "install.packages('car', repos='https://cran.r-project.org/')"
      && R -e "install.packages('fmsb', repos='https://cran.r-project.org/')" && R
      -e "install.packages('igraph', repos='https://cran.r-project.org/')" && sudo
      su - -c "R -e \"install.packages('miniUI', repos='https://cran.r-project.org/');options(unzip
      = 'internal'); devtools::install_github('daattali/shinyjs')\"" && R -e "install.packages('scales',
      repos='https://cran.r-project.org/')" && R -e "install.packages('crosstalk',
      repos='https://cran.r-project.org/')" && sudo su - -c "R -e \"options(unzip
      = 'internal'); devtools::install_github('rstudio/DT')\"" && sudo su - -c "R
      -e \"install.packages(c('raster', 'sp', 'viridis'), repos='https://cran.r-project.org/');options(unzip
      = 'internal'); devtools::install_github('rstudio/leaflet')\"" && sudo su - -c
      "R -e \"options(unzip = 'internal'); devtools::install_github('bhaskarvk/leaflet.extras')\""
      && R -e "install.packages('ggrepel', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('visNetwork', repos='https://cran.r-project.org/')" &&
      sudo su - -c "R -e \"options(unzip = 'internal'); devtools::install_github('kuzmenkov111/highcharter')\""
      && R -e "install.packages('shinyBS', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('data.table', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('geosphere', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('maptools', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('rgdal', repos='https://cran.r-project.org/')" && R -e
      "install.packages('googleVis', repos='https://cran.r-project.org/')" && R -e
      "install.packages('future', repos='https://cran.r-project.org/')" && R -e "install.packages('tidyr',
      repos='https://cran.r-project.org/')"&& sudo su - -c "R -e \"options(unzip =
      'internal'); devtools::install_github('daattali/timevis')\""&& R -e "install.packages('shinythemes',
      repos='https://cran.r-project.org/')" && R -e "install.packages('formattable',
      repos='https://cran.r-project.org/')" && R -e "install.packages('fst', repos='https://cran.r-project.org/')"
      && R -e "install.packages('leaflet.minicharts', repos='https://cran.r-project.org/')"
      && R -e "install.packages('RColorBrewer', repos='https://cran.r-project.org/')"
      && R -e "install.packages('shinyWidgets', repos='https://cran.r-project.org/')"
      && R -e "install.packages('shinyjqui', repos='https://cran.r-project.org/')"  &&
      R -e "install.packages('collapsibleTree', repos='https://cran.r-project.org/')"  &&
      R -e "install.packages('RCurl', repos='https://cran.r-project.org/')" && R -e
      "install.packages('shinycssloaders', repos='https://cran.r-project.org/')" &&
      R -e "install.packages('officer', repos='https://cran.r-project.org/')" && R
      -e "install.packages('flextable', repos='https://cran.r-project.org/')" && R
      -e "install.packages('raster', repos='https://cran.r-project.org/')" && R -e
      "install.packages('digest', repos='https://cran.r-project.org/')" && R -e "install.packages('bcrypt',
      repos='https://cran.r-project.org/')" && R -e "install.packages('radarchart',
      repos='https://cran.r-project.org/')" && sudo su - -c "R -e \"options(unzip
      = 'internal'); devtools::install_github('hrbrmstr/qrencoder')\""
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - shiny-server.conf
    - /etc/shiny-server/shiny-server.conf
  - CmdLine:
    - mkdir /var/lib/shiny-server/bookmarks  && chown -R shiny:shiny /var/lib/shiny-server/bookmarks
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo rm -rf /srv/shiny-server/sample-apps && rm -rf /srv/shiny-server/
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /srv/shiny-server
  - Name: expose
    Ports:
    - "3838"
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  From:
    Image: kuzmenkov/docker-baseimage:latest
  Name: ""
  Platform: ""
  SourceCode: FROM kuzmenkov/docker-baseimage:latest
