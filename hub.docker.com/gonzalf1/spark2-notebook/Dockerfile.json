{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "poad/docker-spark-amazon:2.2",
      "SourceCode": "FROM poad/docker-spark-amazon:2.2",
      "Platform": "",
      "From": {
        "Image": "poad/docker-spark-amazon:2.2"
      },
      "Commands": [
        {
          "Maintainer": "gonzalf1",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/usr/local/spark"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum install -y python27-devel gcc pandoc python35-devel python35-libs python35-setuptools \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/easy_install-3.5 pip \u0026\u0026    pip3 install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://bootstrap.pypa.io/get-pip.py | python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install jupyter \u0026\u0026     pip install notebook \u0026\u0026     pip install jupyterlab \u0026\u0026     pip --no-cache-dir install pandas pyspark \u0026\u0026     pip install py4j jupyter-spark lxml \u0026\u0026     pip install --upgrade beautifulsoup4 html5lib \u0026\u0026     jupyter nbextension install --py jupyter_spark \u0026\u0026     jupyter serverextension enable --py jupyter_spark \u0026\u0026     jupyter nbextension enable --py jupyter_spark \u0026\u0026     jupyter nbextension enable --py widgetsnbextension"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter notebook --generate-config --allow-root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/jupyter_notebook_config.py"
          ]
        },
        {
          "CmdLine": [
            "pip install scipy scikit-learn pygments \u0026\u0026     pip3 install scipy scikit-learn pygments pandas pyspark ipykernel ipython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bootstrap.sh",
            "/etc/bootstrap.sh"
          ]
        },
        {
          "CmdLine": [
            "chown root.root /etc/bootstrap.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 700 /etc/bootstrap.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "18080",
            "7077",
            "8888"
          ]
        },
        {
          "CmdLine": [
            "/etc/bootstrap.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}