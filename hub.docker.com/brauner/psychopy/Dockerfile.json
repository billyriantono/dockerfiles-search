{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "brauner/debian:stable",
      "SourceCode": "FROM brauner/debian:stable",
      "Platform": "",
      "From": {
        "Image": "brauner/debian:stable"
      },
      "Commands": [
        {
          "Maintainer": "Christian Brauner christianvanbrauner[at]gmail.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive \u0026\u0026 export DEBCONF_NONINTERACTIVE_SEEN=true \u0026\u0026 export DEBCONF_DB_OVERRIDE=File{/root/dat} \u0026\u0026 cd /root \u0026\u0026 printf '\\nName: jackd/tweak_rt_limits\\nTemplate: jackd/tweak_rt_limits\\nValue: true\\nOwners: jackd2\\n' \u003e dat \u0026\u0026 printf 'set editing-mode vi\\n\\nset keymap vi-command\\n' \u003e .inputrc \u0026\u0026 cd /etc/dpkg/dpkg.cfg.d \u0026\u0026 printf '\\npath-exclude=/usr/share/locale/*' \u003e\u003e excludes \u0026\u0026 printf '\\npath-include=/usr/share/locale/en*' \u003e\u003e excludes \u0026\u0026 printf '\\npath-include=/usr/share/locale/locale.alias' \u003e\u003e excludes \u0026\u0026 printf '\\npath-exclude=/usr/share/man/*' \u003e\u003e excludes \u0026\u0026 printf '\\npath-include=/usr/share/man/en*' \u003e\u003e excludes \u0026\u0026 printf '\\npath-include=/usr/share/man/man[1-9]/*' \u003e\u003e excludes \u0026\u0026 cd /etc/apt/sources.list.d \u0026\u0026 printf '\\ndeb http://neurodebian.g-node.org data main contrib non-free' \u003e neurodebian.sources.list \u0026\u0026 printf '\\ndeb-src http://neurodebian.g-node.org data main contrib non-free' \u003e\u003e neurodebian.sources.list \u0026\u0026 printf '\\ndeb http://neurodebian.g-node.org wheezy main contrib non-free' \u003e\u003e neurodebian.sources.list \u0026\u0026 printf '\\ndeb-src http://neurodebian.g-node.org wheezy main contrib non-free\\n' \u003e\u003e neurodebian.sources.list \u0026\u0026 apt-key adv --recv-keys --keyserver hkp://pgp.mit.edu:80 2649A5A9 \u0026\u0026 apt-get update -qq -y \u0026\u0026 apt-get install -y --no-install-recommends    alsa-base    alsa-utils    alsa-oss    bash-completion    bzip2    ca-certificates    gcc    g++    gfortran    git    locales    less    make    mupdf    patch    sudo    wget    zip    unzip    i965-va-driver    libegl1-mesa    libgl1-mesa-dri    libgl1-mesa-glx    libopenvg1-mesa    libglu1-mesa-dev    mesa-utils    alsa-base    alsa-utils    alsa-oss    flac    dbus    dbus-x11    iceweasel    jackd    jackd2    libavbin-dev    libavbin0    libusb-1.0-0    libusb-1.0-0-dev    python    python-setuptools    python-numpy    python-scipy    python-pyglet    python-wxgtk2.8    python-wxtools    python-wxversion    python-imaging    python-matplotlib    python-lxml    python-openpyxl    python-pyo    python-optcomplete    python-pypsignifit    python-parallel    python-pp    python-pytest    python-serial    python-sphinx    python-tk    xdg-utils \u0026\u0026 dpkg-reconfigure -p high jackd2 \u0026\u0026 echo 'root:test' | chpasswd \u0026\u0026 useradd -u 1000 -m docker \u0026\u0026 echo 'docker:test' | chpasswd \u0026\u0026 usermod -s /bin/bash docker \u0026\u0026 usermod -a -G 100 docker \u0026\u0026 usermod -a -G sudo docker \u0026\u0026 groupmod -g 91 video \u0026\u0026 usermod -a -G video docker \u0026\u0026 groupmod -g 92 audio \u0026\u0026 usermod -a -G audio docker \u0026\u0026 cd /etc \u0026\u0026 printf '\\nen_IE.UTF-8 UTF-8\\n' \u003e\u003e locale.gen \u0026\u0026 locale-gen \u0026\u0026 cd /root \u0026\u0026 printf 'set editing-mode vi\\n\\nset keymap vi-command\\n' \u003e .inputrc \u0026\u0026 rm -f dat \u0026\u0026 cd /home/docker \u0026\u0026 printf 'set editing-mode vi\\n\\nset keymap vi-command\\n' \u003e .inputrc \u0026\u0026 cd /home/docker \u0026\u0026 git clone git://github.com/labjack/exodriver.git \u0026\u0026 cd exodriver \u0026\u0026 ./install.sh \u0026\u0026 usermod -a -G adm docker \u0026\u0026 cd /home/docker \u0026\u0026 git clone https://github.com/labjack/LabJackPython.git \u0026\u0026 cd LabJackPython \u0026\u0026 python setup.py install \u0026\u0026 cd /home/docker \u0026\u0026 git clone https://github.com/psychopy/psychopy.git \u0026\u0026 cd psychopy \u0026\u0026 python setup.py install \u0026\u0026 apt-get clean \u0026\u0026 cd /var/lib/apt/lists \u0026\u0026 rm -rf *"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_IE.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/docker"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/docker"
        },
        {
          "Name": "user",
          "User": "docker"
        }
      ]
    }
  ]
}