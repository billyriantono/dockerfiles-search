{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:trusty",
      "SourceCode": "FROM ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "ubuntu:trusty"
      },
      "Commands": [
        {
          "Maintainer": "Jean-Michel Ruiz \"jean.ruiz@cismet.de\"",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "de.cismet.cids.integration.base.name",
              "Value": "\"cids-integration-base PostgeSQL image\""
            },
            {
              "Key": "de.cismet.cids.integration.base.version",
              "Value": "\"postgres-9.0.3-2.0\""
            },
            {
              "Key": "de.cismet.cids.integration.base.tag.docker",
              "Value": "\"postgres-9.0.3-2.0\""
            },
            {
              "Key": "de.cismet.cids.integration.base.tag.git",
              "Value": "\"postgres-9.0.3-2.0\""
            },
            {
              "Key": "de.cismet.cids.integration.base.descripton",
              "Value": "\"PostgeSQL 9.0.3 Runtime Image v2\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "POSTGRES_PASSWORD",
              "Value": "postgres"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CIDS_INTEGRATION_BASE_DIR",
              "Value": "/cidsIntegrationBase"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_DATA_DIR",
              "Value": "${CIDS_INTEGRATION_BASE_DIR}/pg_data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IMPORT_DIR",
              "Value": "/import/cidsIntegrationBase"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_VERSION",
              "Value": "9.0.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GEOS_VERSION",
              "Value": "3.3.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROJ4_VERSION",
              "Value": "4.8.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIBXML_VERSION",
              "Value": "2.9.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGIS_VERSION",
              "Value": "1.5.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOCALE",
              "Value": "de_DE"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ENCODING",
              "Value": "UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGCLIENTENCODING",
              "Value": "UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGPORT",
              "Value": "5432"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/"
        },
        {
          "CmdLine": [
            "echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y build-essential gcc-4.7 libreadline6-dev libxml2-dev locales zlib1g-dev curl autoconf xsltproc git libcunit1 libcunit1-doc libcunit1-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "localedef -i $LOCALE -c -f $ENCODING -A /usr/share/locale/locale.alias ${LOCALE}.${ENCODING}     \u0026\u0026 locale-gen ${LOCALE}.${ENCODING}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd src/ ; curl -fsSL https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.bz2 | tar -xj     \u0026\u0026 cd postgresql-${PG_VERSION} ; ./configure CC='gcc-4.7 -m64' --prefix=/usr/local --with-pgport=5432     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 make all     \u0026\u0026 cd contrib ; make install     \u0026\u0026 ldconfig     \u0026\u0026 pwd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd src/ ; curl -fsSL http://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 | tar -xj     \u0026\u0026 cd geos-${GEOS_VERSION} ; ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 ldconfig     \u0026\u0026 pwd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd src/ ; curl -fsSL http://download.osgeo.org/proj/proj-${PROJ4_VERSION}.tar.gz | tar -xz     \u0026\u0026 cd proj-${PROJ4_VERSION} ; ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 ldconfig     \u0026\u0026 pwd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd src/ ; curl -fsSL http://xmlsoft.org/sources/libxml2-${LIBXML_VERSION}.tar.gz | tar -xz     \u0026\u0026 cd libxml2-${LIBXML_VERSION} ; ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd src/ ; curl -fsSL http://download.osgeo.org/postgis/source/postgis-${POSTGIS_VERSION}.tar.gz | tar -xz     \u0026\u0026 cd postgis-${POSTGIS_VERSION} ; ./autogen.sh     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd postgres     \u0026\u0026 useradd -r postgres -g postgres     \u0026\u0026 echo \"postgres:${POSTGRES_PASSWORD}\" | chpasswd -e"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cidsIntegrationBase",
            "${CIDS_INTEGRATION_BASE_DIR}"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p import/cidsIntegrationBase     \u0026\u0026 mkdir -p ${PG_DATA_DIR}     \u0026\u0026 echo ${PG_DATA_DIR}     \u0026\u0026 chown postgres:postgres ${PG_DATA_DIR}     \u0026\u0026 chmod 700 ${PG_DATA_DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "postgres"
        },
        {
          "CmdLine": [
            "initdb   --encoding=${ENCODING}   --locale=${LOCALE}.${ENCODING}   --lc-collate=${LOCALE}.${ENCODING}   --lc-monetary=${LOCALE}.${ENCODING}   --lc-numeric=${LOCALE}.${ENCODING}   --lc-time=${LOCALE}.${ENCODING}   -D ${PG_DATA_DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "echo \"host all all 0.0.0.0/0 md5\" \u003e\u003e ${PG_DATA_DIR}/pg_hba.conf     \u0026\u0026 echo \"listen_addresses='*'\" \u003e\u003e ${PG_DATA_DIR}/postgresql.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "postgres"
        },
        {
          "CmdLine": [
            "pg_ctl -w -D ${PG_DATA_DIR} start   \u0026\u0026 psql -c \"alter role postgres password '${POSTGRES_PASSWORD}'\"   \u0026\u0026 createdb template_postgis   \u0026\u0026 psql template_postgis -f src/postgis-${POSTGIS_VERSION}/postgis/postgis.sql   \u0026\u0026 psql template_postgis -f src/postgis-${POSTGIS_VERSION}/spatial_ref_sys.sql   \u0026\u0026 pg_ctl -w -D ${PG_DATA_DIR} stop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get remove --purge --auto-remove -y build-essential gcc-4.7 libreadline6-dev libxml2-dev zlib1g-dev autoconf xsltproc git libcunit1 libcunit1-doc libcunit1-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/* src/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "import/container_ctl.sh",
            "/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${CIDS_INTEGRATION_BASE_DIR}"
        },
        {
          "CmdLine": [
            "/container_ctl.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}