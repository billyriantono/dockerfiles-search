MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.10-stretch
  Commands:
  - Maintainer: Travis CI GmbH <support+travis-worker-docker-image@travis-ci.org>
    Name: maintainer
  - CmdLine:
    - go get -u github.com/FiloSottile/gvt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/github.com/travis-ci/worker
  - Name: workdir
    Path: /go/src/github.com/travis-ci/worker
  - CmdLine:
    - make deps
    Name: run
    PrependShell: true
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - CmdLine:
    - make build
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10-stretch
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.10-stretch as builder
- BaseName: ubuntu:bionic
  Commands:
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common build-essential git sudo wget                        redis-server
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser --disabled-password --gecos "" travis
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -aG sudo travis
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository -y ppa:rael-gc/rvm
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y rvm
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/share/rvm/ /root/.rvm
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -lc "rvm use 2.4.1 --install --fuzzy"
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -lc "rvm use 2.3.6 --install --fuzzy"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && dpkg
      -i erlang-solutions_1.0_all.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y esl-erlang elixir
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet -O - https://postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo add-apt-repository "deb https://apt.postgresql.org/pub/repos/apt bionic-pgdg
      main"
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y postgresql-9.4
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "local   all             all                                     trust"
      > /etc/postgresql/9.4/main/pg_hba.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "host    all             all             127.0.0.1/32            trust"
      >> /etc/postgresql/9.4/main/pg_hba.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/bin/travis-worker
    - /usr/local/bin/travis-worker
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/travis-ci/worker/systemd.service
    - /app/systemd.service
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/travis-ci/worker/systemd-wrapper
    - /app/systemd-wrapper
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/travis-ci/worker/.docker-entrypoint.sh
    - /docker-entrypoint.sh
  - Name: volume
    Volumes:
    - /var/tmp
  - Name: stopsignal
    Signal: SIGINT
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/local/bin/travis-worker
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
