{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo 'deb http://cran.rstudio.com/bin/linux/ubuntu xenial/' \u003e /etc/apt/sources.list.d/rstudio.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y       python3-pip sudo libnlopt-dev       r-base  icu-devtools zlib1g-dev libncurses5-dev libsasl2-dev       libssl-dev libxml2-dev openjdk-8-jdk  r-cran-rjava libmariadb-client-lgpl-dev libpq-dev texlive-xetex \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install jupyterlab numpy matplotlib pandas"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \u0026\u0026 update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "."
          ]
        },
        {
          "CmdLine": [
            "chmod a+x entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "pip.conf",
            "."
          ]
        },
        {
          "CmdLine": [
            "groupadd --gid=1100 matrix \u0026\u0026     useradd --create-home --uid=1100 --gid=1100 matrix \u0026\u0026     echo 'matrix ALL = (ALL) NOPASSWD: ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app/jupyter \u0026\u0026 chown matrix:matrix /app/jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "packages.R",
            "."
          ]
        },
        {
          "CmdLine": [
            "R CMD javareconf \u0026\u0026       apt-get update \u0026\u0026       apt-get install -y default-jre default-jdk r-base-core icu-devtools zlib1g-dev libncurses5-dev libsasl2-dev       libnlopt-dev libgmp3-dev libglu1-mesa-dev libssl-dev libxml2-dev openjdk-8-jdk  r-cran-rjava       libmariadb-client-lgpl-dev r-cran-rgl libmpfr-dev libpq-dev texlive-xetex libgdal-dev libudunits2-dev       libmagick++-dev mesa-common-dev r-base-dev libcurl4-gnutls-dev \u0026\u0026 apt-get clean \u0026\u0026     Rscript packages.R \u0026\u0026     rm packages.R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JULIA_PKGDIR",
              "Value": "/usr/local/share/julia/site"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JUPYTER",
              "Value": "/usr/local/bin/jupyter"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install  -y      software-properties-common python-software-properties libx11-dev      libpng3 gettext tcl8.5 libpango1.0-0 tk8.5 hdf5-tools libzmq-dev       julia libnettle6 libtool byacc flex \u0026\u0026       rm -rf /tmp/downloaded_packages/ /tmp/*.rds /var/tmp/* \u0026\u0026       rm -rf /var/lib/apt/lists/* \u0026\u0026       apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "julia -e 'ENV[\"JUPYTER\"]=\"/usr/local/bin/jupyter\"; Pkg.init(); Pkg.add(\"IJulia\"); Pkg.build(\"IJulia\")' \u0026\u0026   julia -e 'ENV[\"JUPYTER\"]=\"/usr/local/bin/jupyter\"; Pkg.add(\"Gadfly\"); Pkg.add(\"RDatasets\"); Pkg.add(\"ForwardDiff\")' \u0026\u0026   julia -e 'ENV[\"JUPYTER\"]=\"/usr/local/bin/jupyter\"; Pkg.add(\"Distributions\"); Pkg.add(\"NLsolve\"); Pkg.add(\"Interact\")' \u0026\u0026   julia -e 'ENV[\"JUPYTER\"]=\"/usr/local/bin/jupyter\"; Pkg.add(\"PyCall\"); Pkg.add(\"PyPlot\"); Pkg.add(\"Pandas\"); Pkg.add(\"Winston\")' \u0026\u0026   julia -e 'ENV[\"JUPYTER\"]=\"/usr/local/bin/jupyter\"; Pkg.add(\"QuantEcon\"); Pkg.add(\"Mongo\"); Pkg.add(\"Hive\");' \u0026\u0026   mv /root/.local/share/jupyter/kernels/julia-0.4 /usr/local/share/jupyter/kernels \u0026\u0026   chmod -R a+rX /usr/local/share/julia"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "matrix"
        },
        {
          "Name": "workdir",
          "Path": "/home/matrix"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "sh",
            "-c",
            "/app/entrypoint.sh \u003e\u003e/var/log/stdout.log 2\u003e\u003e/var/log/stderr.log"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}