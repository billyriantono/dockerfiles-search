{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gocd/gocd-agent-centos-7:v18.6.0",
      "SourceCode": "FROM gocd/gocd-agent-centos-7:v18.6.0",
      "Platform": "",
      "From": {
        "Image": "gocd/gocd-agent-centos-7:v18.6.0"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./assets/gcloud.repo",
            "/etc/yum.repos.d/"
          ]
        },
        {
          "CmdLine": [
            "yum install -y epel-release"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rpm -U http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm \u0026\u0026     yum upgrade -y \u0026\u0026     echo \"Installing Gcloud\" \u0026\u0026     yum install -y git wget google-cloud-sdk which \u0026\u0026     yum clean all \u0026\u0026     rm -rf /var/cache/yum"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing Terraform\"  \u0026\u0026     wget https://releases.hashicorp.com/terraform/0.11.7/terraform_0.11.7_linux_amd64.zip \u0026\u0026     unzip /terraform_0.11.7_linux_amd64.zip \u0026\u0026     mv /terraform /usr/bin/. \u0026\u0026     chmod 775 /usr/bin/terraform \u0026\u0026     rm -f /terraform_0.11.7_linux_amd64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing helm\" \u0026\u0026     curl -q https://storage.googleapis.com/kubernetes-helm/helm-v2.9.0-linux-amd64.tar.gz \u003e helm.tar.gz \u0026\u0026     tar xzf helm.tar.gz \u0026\u0026     rm -rf helm.tar.gz \u0026\u0026     mv linux-amd64/helm /usr/local/bin/ \u0026\u0026     chmod u+x /usr/local/bin/helm \u0026\u0026     rm -rf linux-amd64 \u0026\u0026     wget -O - https://github.com/roboll/helmfile/releases/download/v0.40.1/helmfile_linux_amd64 \u003e helmfile_linux_amd64 \u0026\u0026     mv helmfile_linux_amd64 /usr/local/bin/helmfile \u0026\u0026     chmod +x /usr/local/bin/helmfile \u0026\u0026     rm -rf helmfile_linux_amd64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HELM_BIN",
              "Value": "/usr/local/bin/helm"
            },
            {
              "Key": "HELM_PLUGIN_DIR",
              "Value": "/home/go/.helm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"Installing helm\" \u0026\u0026     yum install -y kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Installing Lint tools\" \u0026\u0026     yum install -y yamllint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "su - go -c \"/usr/local/bin/helm init --client-only \u0026\u0026                 /usr/local/bin/helm repo add coreos https://s3-eu-west-1.amazonaws.com/coreos-charts/stable \u0026\u0026                 /usr/local/bin/helm repo add svc-cat https://svc-catalog-charts.storage.googleapis.com \u0026\u0026                 export PATH='$PATH:/usr/local/bin/:HELM_BIN=/usr/local/bin/:HELM_PLUGIN_DIR=/home/go/.helm/' \u0026\u0026                 helm plugin install https://github.com/lrills/helm-unittest\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}