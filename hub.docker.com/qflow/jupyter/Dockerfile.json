{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "Maintainer": "Michal Fojtak \u003cmfojtak@seznam.cz\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y software-properties-common \u0026\u0026 add-apt-repository -y ppa:jonathonf/ffmpeg-3 \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ffmpeg libavfilter-dev libavdevice-dev libavcodec-dev libav-tools x264 x265 \u0026\u0026     apt-get install -y libopencv-dev python-opencv iputils-ping nano cifs-utils wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends     git     build-essential     cmake     libprotobuf-dev     protobuf-compiler     libgoogle-glog-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=/opt/conda/bin:$PATH' \u003e /etc/profile.d/conda.sh \u0026\u0026     wget --quiet https://repo.continuum.io/archive/Anaconda2-4.4.0-Linux-x86_64.sh -O ~/anaconda.sh \u0026\u0026     /bin/bash ~/anaconda.sh -b -p /opt/conda \u0026\u0026     rm ~/anaconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "conda install opencv numba bokeh accelerate libgcc wget \u0026\u0026 conda install -c conda-forge jupyter_contrib_nbextensions jupyter_nbextensions_configurator"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install av jupyter-git tensorflow-gpu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "video.ipynb",
            "/tutorials/video/video.ipynb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "motion.ipynb",
            "/tutorials/video/motion.ipynb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "test.ipynb",
            "/tutorials/video/test.ipynb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "small.mp4",
            "/tutorials/video/small.mp4"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}