{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:2.7",
      "SourceCode": "FROM python:2.7",
      "Platform": "",
      "From": {
        "Image": "python:2.7"
      },
      "Commands": [
        {
          "Maintainer": "Andrew Slotin \u003candrew.slotin@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TESSERA_REV",
              "Value": "2258c712c8726609aaff62470317e36513db7093"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TESSERA_CONFIG",
              "Value": "/var/lib/tessera/config.py"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq update \u0026\u0026    apt-get -qq -y install curl git npm gunicorn \u0026\u0026    ln -s $(which nodejs) /usr/bin/node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config.py",
            "$TESSERA_CONFIG"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/urbanairship/tessera.git /opt/tessera \u0026\u0026    cd /opt/tessera \u0026\u0026 git reset --hard $TESSERA_REV"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/tessera/tessera-frontend/ \u0026\u0026    npm install \u0026\u0026    grunt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/tessera/tessera-server"
        },
        {
          "CmdLine": [
            "pip install -r requirements.txt \u0026\u0026    pip install -r dev-requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "inv db.init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm cache clean -f \u0026\u0026    npm ls -gp | awk -F/ '/node_modules/ \u0026\u0026 !/node_modules.*node_modules/ {print $NF}' | xargs npm -g rm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qq -y purge npm \u0026\u0026    apt-get -qq -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            ":80"
          ]
        },
        {
          "CmdLine": [
            "inv run"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}