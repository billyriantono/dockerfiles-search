MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.11.4
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y     git     make     wget     gcc     zip
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - Env:
    - Key: DOCKER_CHANNEL
      Value: stable
    Name: env
  - Env:
    - Key: DOCKER_VERSION
      Value: 18.09.1
    Name: env
  - CmdLine:
    - wget -O docker.tgz "https://download.docker.com/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz"
      &&     tar --extract --file docker.tgz --strip-components 1 --directory /usr/local/bin/
      &&     rm docker.tgz
    Name: run
    PrependShell: true
  - Env:
    - Key: DEP_VERSION
      Value: 0.5.0
    Name: env
  - CmdLine:
    - wget https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64
      -O /usr/local/bin/dep &&     chmod +x /usr/local/bin/dep
    Name: run
    PrependShell: true
  - Env:
    - Key: GOMETALINTER_VERSION
      Value: 2.0.12
    Name: env
  - CmdLine:
    - curl -sLo- https://github.com/alecthomas/gometalinter/releases/download/v${GOMETALINTER_VERSION}/gometalinter-${GOMETALINTER_VERSION}-linux-amd64.tar.gz
      |     tar -xzC "$GOPATH/bin" --exclude COPYING --exclude README.md --strip-components
      1 -f- &&     ln -s $GOPATH/bin/gometalinter $GOPATH/bin/gometalinter.v2
    Name: run
    PrependShell: true
  - Env:
    - Key: PACKR_VERSION
      Value: 1.21.9
    Name: env
  - CmdLine:
    - wget https://github.com/gobuffalo/packr/releases/download/v${PACKR_VERSION}/packr_${PACKR_VERSION}_linux_amd64.tar.gz
      &&     tar -vxf packr*.tar.gz -C /tmp/ &&     mv /tmp/packr /usr/local/bin/packr
    Name: run
    PrependShell: true
  - Env:
    - Key: KUBECTL_VERSION
      Value: 1.14.0
    Name: env
  - CmdLine:
    - curl -L -o /usr/local/bin/kubectl -LO https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl
      &&     chmod +x /usr/local/bin/kubectl &&     kubectl version --client
    Name: run
    PrependShell: true
  - Env:
    - Key: KSONNET_VERSION
      Value: 0.13.1
    Name: env
  - CmdLine:
    - wget https://github.com/ksonnet/ksonnet/releases/download/v${KSONNET_VERSION}/ks_${KSONNET_VERSION}_linux_amd64.tar.gz
      &&     tar -C /tmp/ -xf ks_${KSONNET_VERSION}_linux_amd64.tar.gz &&     mv /tmp/ks_${KSONNET_VERSION}_linux_amd64/ks
      /usr/local/bin/ks &&     ks version
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM_VERSION
      Value: 2.12.1
    Name: env
  - CmdLine:
    - wget https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz
      &&     tar -C /tmp/ -xf helm-v${HELM_VERSION}-linux-amd64.tar.gz &&     mv /tmp/linux-amd64/helm
      /usr/local/bin/helm &&     helm version --client
    Name: run
    PrependShell: true
  - Env:
    - Key: KUSTOMIZE1_VERSION
      Value: 1.0.11
    Name: env
  - CmdLine:
    - curl -L -o /usr/local/bin/kustomize1 https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE1_VERSION}/kustomize_${KUSTOMIZE1_VERSION}_linux_amd64
      &&     chmod +x /usr/local/bin/kustomize1 &&     kustomize1 version
    Name: run
    PrependShell: true
  - Env:
    - Key: KUSTOMIZE_VERSION
      Value: 2.0.3
    Name: env
  - CmdLine:
    - curl -L -o /usr/local/bin/kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64
      &&     chmod +x /usr/local/bin/kustomize &&     kustomize version
    Name: run
    PrependShell: true
  - Env:
    - Key: AWS_IAM_AUTHENTICATOR_VERSION
      Value: 0.4.0-alpha.1
    Name: env
  - CmdLine:
    - curl -L -o /usr/local/bin/aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/${AWS_IAM_AUTHENTICATOR_VERSION}/aws-iam-authenticator_${AWS_IAM_AUTHENTICATOR_VERSION}_linux_amd64
      &&     chmod +x /usr/local/bin/aws-iam-authenticator
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://install.goreleaser.com/github.com/golangci/golangci-lint.sh  &&     chmod
      +x ./golangci-lint.sh &&     ./golangci-lint.sh -b $GOPATH/bin &&     golangci-lint
      linters
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .golangci.yml
    - ${GOPATH}/src/dummy/.golangci.yml
  - CmdLine:
    - cd ${GOPATH}/src/dummy &&     touch dummy.go     golangci-lint run
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11.4
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.11.4 as builder
- As: argocd-base
  BaseName: debian:9.5-slim
  Commands:
  - CmdLine:
    - groupadd -g 999 argocd &&     useradd -r -u 999 -g argocd argocd &&     mkdir
      -p /home/argocd &&     chown argocd:argocd /home/argocd &&     apt-get update
      &&     apt-get install -y git &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hack/ssh_known_hosts
    - /etc/ssh/ssh_known_hosts
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hack/git-ask-pass.sh
    - /usr/local/bin/git-ask-pass.sh
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/ks
    - /usr/local/bin/ks
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/helm
    - /usr/local/bin/helm
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/kubectl
    - /usr/local/bin/kubectl
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/kustomize1
    - /usr/local/bin/kustomize1
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/kustomize
    - /usr/local/bin/kustomize
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/aws-iam-authenticator
    - /usr/local/bin/aws-iam-authenticator
  - Env:
    - Key: USER
      Value: argocd
    Name: env
  - Name: user
    User: argocd
  - Name: workdir
    Path: /home/argocd
  From:
    Image: debian:9.5-slim
  Name: argocd-base
  Platform: ""
  SourceCode: FROM debian:9.5-slim as argocd-base
- As: argocd-build
  BaseName: golang:1.11.4
  Commands:
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/dep
    - /usr/local/bin/dep
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/packr
    - /usr/local/bin/packr
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gopkg.toml
    - ${GOPATH}/src/dummy/Gopkg.toml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gopkg.lock
    - ${GOPATH}/src/dummy/Gopkg.lock
  - CmdLine:
    - cd ${GOPATH}/src/dummy &&     dep ensure -vendor-only &&     mv vendor/* ${GOPATH}/src/
      &&     rmdir vendor
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /go/src/github.com/argoproj/argo-cd
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - make cli server controller repo-server argocd-util &&     make CLI_NAME=argocd-darwin-amd64
      GOOS=darwin cli
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11.4
  Name: argocd-build
  Platform: ""
  SourceCode: FROM golang:1.11.4 as argocd-build
- BaseName: argocd-base
  Commands:
  - Chown: ""
    From: argocd-build
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/argoproj/argo-cd/dist/argocd*
    - /usr/local/bin/
  From:
    Stage:
      Index: 1
      Named: argocd-base
  Name: ""
  Platform: ""
  SourceCode: FROM argocd-base
