{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7.5.1804",
      "SourceCode": "FROM centos:7.5.1804",
      "Platform": "",
      "From": {
        "Image": "centos:7.5.1804"
      },
      "Commands": [
        {
          "Maintainer": "Pablo Escobar \u003cpablo.escobarlopez@unibas.ch\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "OPENSTRUCTURE_VERSION",
              "Value": "1.8.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENMM_VERSION",
              "Value": "7.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "EIGEN_VERSION",
              "Value": "3.3.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SWIG_VERSION",
              "Value": "3.0.12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "\"/usr/local/lib64/python2.7/site-packages/:${PYTHONPATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "\"/usr/local/lib64/:/usr/local/openmm/lib/:${LD_LIBRARY_PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/usr/local/openmm/bin/:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CPUS_FOR_MAKE",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum makecache fast \u0026\u0026     yum -y install epel-release \u0026\u0026     yum -y install     boost-devel     bzip2     cmake     doxygen     fftw-devel     fftw-static     file     freetype-devel     gcc     gcc-c++     gcc-gfortran     glibc-common     glibc-devel     libjpeg-turbo-devel     libpng-devel     libtiff-devel     make     mesa-libGL-devel     mesa-libGLU-devel     numpy     openblas-devel     pcre-devel     PyQt4     python-devel     qt-devel     strace     wget  \u0026\u0026 yum -y clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src"
        },
        {
          "CmdLine": [
            "wget -O eigen-${EIGEN_VERSION}.tar.bz2 -nc http://bitbucket.org/eigen/eigen/get/${EIGEN_VERSION}.tar.bz2 \u0026\u0026     mkdir -p /tmp/eigen/ \u0026\u0026     tar xf eigen-${EIGEN_VERSION}.tar.bz2 -C /tmp/eigen/ --strip-components=1 \u0026\u0026     mv /tmp/eigen/Eigen /usr/local/include \u0026\u0026     rm -fr /tmp/eigen/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src"
        },
        {
          "CmdLine": [
            "wget -O swig-${SWIG_VERSION}.tar.gz https://sourceforge.net/projects/swig/files/swig/swig-${SWIG_VERSION}/swig-${SWIG_VERSION}.tar.gz \u0026\u0026    tar xvf swig-${SWIG_VERSION}.tar.gz \u0026\u0026    cd swig-${SWIG_VERSION}/ \u0026\u0026    ./configure \u0026\u0026    make -j ${CPUS_FOR_MAKE} \u0026\u0026    make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src"
        },
        {
          "CmdLine": [
            "wget -O openmm-${OPENMM_VERSION}.tar.gz https://github.com/pandegroup/openmm/archive/${OPENMM_VERSION}.tar.gz \u0026\u0026    tar xvf openmm-${OPENMM_VERSION}.tar.gz \u0026\u0026    mkdir /usr/local/src/openmm-${OPENMM_VERSION}/build \u0026\u0026    cd /usr/local/src/openmm-${OPENMM_VERSION}/build \u0026\u0026    cmake .. \u0026\u0026    make -j ${CPUS_FOR_MAKE} \u0026\u0026    make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src"
        },
        {
          "CmdLine": [
            "wget -O openstructure-${OPENSTRUCTURE_VERSION}.tar.gz \"https://git.scicore.unibas.ch/schwede/openstructure/-/archive/${OPENSTRUCTURE_VERSION}/openstructure-${OPENSTRUCTURE_VERSION}.tar.gz\" \u0026\u0026     mkdir /usr/local/src/openstructure-${OPENSTRUCTURE_VERSION}-source \u0026\u0026     tar -xf openstructure-${OPENSTRUCTURE_VERSION}.tar.gz --strip-components=1 -C /usr/local/src/openstructure-${OPENSTRUCTURE_VERSION}-source \u0026\u0026     mkdir /usr/local/src/openstructure-${OPENSTRUCTURE_VERSION}-source/build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src/openstructure-${OPENSTRUCTURE_VERSION}-source/build"
        },
        {
          "CmdLine": [
            "cmake ..    -DENABLE_MM=1    -DOPEN_MM_LIBRARY=/usr/local/openmm/lib/libOpenMM.so    -DOPEN_MM_PLUGIN_DIR=/usr/local/openmm/lib/plugins    -DOPEN_MM_INCLUDE_DIR=/usr/local/openmm/include    -DCOMPILE_TMTOOLS=1    -DENABLE_GFX=ON    -DENABLE_GUI=ON    -DUSE_NUMPY=1    -DUSE_RPATH=1    -DEIGEN3_INCLUDE_DIR=/usr/local/include/Eigen/    -DFFTW_LIBRARY=/usr/lib64/libfftw3f.a    -DQT_QMAKE_EXECUTABLE=/usr/lib64/qt4/bin/qmake    -DOPTIMIZE=1 \u0026\u0026    make -j ${CPUS_FOR_MAKE} \u0026\u0026    make check \u0026\u0026    make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -fr /usr/local/src/openstructure-${OPENSTRUCTURE_VERSION}-source/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/ost"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}