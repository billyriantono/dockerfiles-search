MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Key: user_uid
    Name: arg
    Value: "1000"
  - Key: user_gid
    Name: arg
    Value: "1000"
  - Key: a4c_ver
    Name: arg
    Value: 2.1.0
  - Key: a4c_install_path
    Name: arg
    Value: /opt
  - Key: a4c_src_dir
    Name: arg
    Value: alien4cloud
  - Key: a4c_install_dir
    Name: arg
    Value: a4c
  - Key: a4c_upv_ver
    Name: arg
    Value: ${a4c_ver}-UPV-1.0.0
  - Key: a4c_user
    Name: arg
    Value: a4c
  - Key: a4c_settings_manager_ver
    Name: arg
    Value: 1.0.1
  - Key: tosca_normative_url
    Name: arg
    Value: https://raw.githubusercontent.com/openstack/tosca-parser/master/toscaparser/elements/TOSCA_definition_1_0.yaml
  - Key: tosca_normative_version
    Name: arg
    Value: 1.0.0
  - Key: tosca_normative_name
    Name: arg
    Value: normative-types
  - Key: tosca_indigo_version
    Name: arg
    Value: 3.0.0
  - Key: a4c_upv_gihub_url
    Name: arg
    Value: https://github.com/indigo-dc/alien4cloud
  - Key: a4c_upv_branch
    Name: arg
    Value: ${a4c_upv_ver}
  - Key: a4c_binary_dist_url
    Name: arg
    Value: https://fastconnect.org/maven/service/local/repositories/opensource/content/alien4cloud/alien4cloud-dist/${a4c_ver}/alien4cloud-dist-${a4c_ver}-dist.tar.gz
  - Env:
    - Key: A4C_INSTALL_PATH
      Value: ${a4c_install_path}
    Name: env
  - Env:
    - Key: A4C_SRC_DIR
      Value: ${a4c_src_dir}
    Name: env
  - Env:
    - Key: A4C_INSTALL_DIR
      Value: ${a4c_install_dir}
    Name: env
  - Env:
    - Key: A4C_USER
      Value: ${a4c_user}
    Name: env
  - Env:
    - Key: A4C_SETTINGS_MANAGER_VER
      Value: ${a4c_settings_manager_ver}
    Name: env
  - Env:
    - Key: A4C_PORT_HTTP
      Value: "8088"
    Name: env
  - Env:
    - Key: A4C_PORT_HTTPS
      Value: "8443"
    Name: env
  - Env:
    - Key: A4C_RUNTIME_DIR
      Value: /mnt/a4c_runtime_data
    Name: env
  - Env:
    - Key: A4C_RESET_CONFIG
      Value: "false"
    Name: env
  - Env:
    - Key: A4C_ADMIN_USERNAME
      Value: admin
    Name: env
  - Env:
    - Key: A4C_ADMIN_PASSWORD
      Value: admin
    Name: env
  - Env:
    - Key: A4C_ENABLE_SSL
      Value: "true"
    Name: env
  - Env:
    - Key: A4C_KEY_STORE_PASSWORD
      Value: default
    Name: env
  - Env:
    - Key: A4C_KEY_PASSWORD
      Value: default
    Name: env
  - Env:
    - Key: A4C_PEM_CERT_FILE
      Value: ca.pem
    Name: env
  - Env:
    - Key: A4C_PEM_KEY_FILE
      Value: ca-key.pem
    Name: env
  - Env:
    - Key: A4C_CERTS_ROOT_PATH
      Value: /certs
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - indigodc-orchestrator-plugin
    - '"${a4c_install_path}/indigodc-orchestrator-plugin"'
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/custom_types-2-a4c.py
    - '"${a4c_install_path}"'
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/normative_tosca-2-a4c.py
    - '"${a4c_install_path}"'
  - Chown: ""
    Name: add
    SourcesAndDest:
    - alien4cloud-settings-manager
    - '"${a4c_install_path}/alien4cloud-settings-manager/"'
  - CmdLine:
    - 'apk --no-cache add --virtual build-dependencies     bash su-exec libcurl libssh2
      curl expat pcre2 git zip libxau libbsd     libxdmcp libxcb libx11 libxcomposite
      libxext libxi     libxrender libxtst alsa-lib libbz2 libpng freetype     giflib
      openjdk8-jre openjdk8 maven gdbm xz-libs python3     yaml py3-yaml ruby-dev
      nodejs git npm gcc make libffi-dev     build-base ruby-rdoc python   && npm
      install -g bower   && npm -g install grunt-cli   && gem install compass   &&
      npm install grunt-contrib-compass --save-dev  && echo ''{ "allow_root": true
      }'' > /root/.bowerrc  && cat /root/.bowerrc   && git clone --single-branch  --branch
      ${a4c_upv_branch} ${a4c_upv_gihub_url} "${a4c_install_path}/${a4c_src_dir}"   &&
      cd "${a4c_install_path}/${a4c_src_dir}"   && cd "${a4c_install_path}/${a4c_src_dir}"   &&
      mvn clean install -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true   &&
      cd ${a4c_install_path}   && curl -k -O ${a4c_binary_dist_url}   && mkdir ${a4c_install_path}/${a4c_install_dir}   &&
      tar xvf alien4cloud-dist-${a4c_ver}-dist.tar.gz --strip 1 -C "${a4c_install_path}/${a4c_install_dir}"   &&
      rm alien4cloud-dist-${a4c_ver}-dist.tar.gz   && rm ${a4c_install_path}/${a4c_install_dir}/init/archives/*
      ${a4c_install_path}/${a4c_install_dir}/init/plugins/*   && mv "${a4c_install_path}/${a4c_src_dir}/alien4cloud-ui/target/alien4cloud-ui-${a4c_upv_ver}-standalone.war"     "${a4c_install_path}/${a4c_install_dir}/alien4cloud-ui-${a4c_ver}.war"   &&
      rm -rf "${a4c_install_path}/${a4c_src_dir}"   && curl -k -o ${a4c_install_path}/TOSCA_normative_types_orig.yaml
      ${tosca_normative_url}    && python3 ${a4c_install_path}/normative_tosca-2-a4c.py
      ${tosca_normative_version} ${tosca_normative_name}     < ${a4c_install_path}/TOSCA_normative_types_orig.yaml     >
      ${a4c_install_path}/TOSCA_normative_types_a4c.yaml   && cd "${a4c_install_path}"   &&
      zip -9 -r "${a4c_install_path}/${a4c_install_dir}/init/archives/TOSCA_normative_types_a4c.zip"
      TOSCA_normative_types_a4c.yaml   && rm TOSCA_normative_types_*   && git clone
      -b devel_deep2 https://github.com/indigo-dc/tosca-types  ${a4c_install_path}/indigo-dc-tosca-types   &&
      python3 ${a4c_install_path}/custom_types-2-a4c.py  ${a4c_install_path}/indigo-dc-tosca-types/  ${tosca_indigo_version}  ${tosca_normative_name}:${tosca_normative_version}     <
      ${a4c_install_path}/indigo-dc-tosca-types/custom_types.yaml     > ${a4c_install_path}/indigo-dc-tosca-types/tosca_types_alien.yaml   &&
      rm -rf ${a4c_install_path}/indigo-dc-tosca-types/custom_types.yaml   && cd "${a4c_install_path}/indigo-dc-tosca-types"   &&
      zip -9 -r --exclude=custom* "${a4c_install_path}/${a4c_install_dir}/init/archives/indigo-dc-tosca-types.zip"
      *.* artifacts/ images/   && rm -R "${a4c_install_path}/indigo-dc-tosca-types"   &&
      cd "${a4c_install_path}/indigodc-orchestrator-plugin"   && mvn -e clean package   &&
      cp ${a4c_install_path}/indigodc-orchestrator-plugin/target/alien4cloud-indigodc-provider-*.zip     "${a4c_install_path}/${a4c_install_dir}/init/plugins/"   &&
      cd "${a4c_install_path}/alien4cloud-settings-manager/"   && mvn clean package   &&
      mv "${a4c_install_path}/alien4cloud-settings-manager/target/alien4cloud-settings-manager-${A4C_SETTINGS_MANAGER_VER}-jar-with-dependencies.jar"     "${a4c_install_path}/${a4c_install_dir}/"   &&
      addgroup -g ${user_gid} -S ${a4c_user}   && adduser -D -g "" -u ${user_uid}
      -G ${a4c_user} ${a4c_user}   && chown -R ${a4c_user}:${a4c_user} "${a4c_install_path}"   &&
      chown -R ${a4c_user}:${a4c_user} "/home/${a4c_user}"   && npm list -g --depth=0.
      | awk -F '' '' ''{print $2}'' | awk -F ''@'' ''{print $1}''  | xargs npm remove
      -g   && rm -rf ${a4c_install_path}/indigodc-orchestrator-plugin     "${a4c_install_path}/alien4cloud-settings-manager/"    /usr/lib/ruby     "${a4c_install_path}/indigodc-2-a4c.py"   &&
      rm -rf $HOME/..?* $HOME/.[!.]* $HOME/*   && apk del build-dependencies    &&
      apk --no-cache add openjdk8-jre-base bash su-exec'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - ${A4C_PORT_HTTP}
  - Name: expose
    Ports:
    - ${A4C_PORT_HTTPS}
  - CmdLine:
    - cd "${A4C_INSTALL_PATH}/${A4C_INSTALL_DIR}"   && java -jar "alien4cloud-settings-manager-${A4C_SETTINGS_MANAGER_VER}-jar-with-dependencies.jar"  &&
      sync   && su ${A4C_USER} -s /bin/bash -c '"${A4C_INSTALL_PATH}/${A4C_INSTALL_DIR}/alien4cloud.sh"'
    Name: entrypoint
    PrependShell: true
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
