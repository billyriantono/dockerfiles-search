MetaArgs: null
Stages:
- BaseName: ubuntu:vivid
  Commands:
  - Env:
    - Key: BAMBOO_HOME
      Value: /var/lib/bamboo
    - Key: BAMBOO_INSTALL
      Value: /opt/atlassian/bamboo
    - Key: BAMBOO_UID
      Value: "8085"
    - Key: BAMBOO_USER
      Value: bamboo
    - Key: BAMBOO_GID
      Value: "8085"
    - Key: BAMBOO_GROUP
      Value: bamboo
    - Key: BAMBOO_VERSION
      Value: 5.9.4
    - Key: DOCKER_GID
      Value: "999"
    - Key: DOCKER_GROUP
      Value: docker
    - Key: DOCKER_VERSION
      Value: 1.8.1
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    - Key: JAVA_VERSION
      Value: "8"
    - Key: JAVA_UPDATE
      Value: "60"
    - Key: TINI_VERSION
      Value: 0.5.0
    Name: env
  - CmdLine:
    - set -x  && export DEBIAN_FRONTEND=noninteractive  && apt-get --assume-yes --no-install-recommends
      install         ca-certificates  && apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80
      --recv-keys 7B2C3B0889BF5709A105D03AC2518248EEA14886  && echo deb http://ppa.launchpad.net/webupd8team/java/ubuntu
      vivid main > /etc/apt/sources.list.d/webupd8team-ubuntu-java-vivid.list  &&
      echo oracle-java${JAVA_VERSION}-installer shared/accepted-oracle-license-v1-1
      select true | debconf-set-selections  && echo oracle-java${JAVA_VERSION}-unlimited-jce-policy
      shared/accepted-oracle-license-v1-1 select true | debconf-set-selections  &&
      apt-get update  && apt-get --assume-yes --no-install-recommends install         oracle-java${JAVA_VERSION}-installer=${JAVA_VERSION}u${JAVA_UPDATE}*         oracle-java${JAVA_VERSION}-unlimited-jce-policy=${JAVA_VERSION}u${JAVA_UPDATE}*         oracle-java${JAVA_VERSION}-set-default=${JAVA_VERSION}u${JAVA_UPDATE}*         libapr1         libaprutil1         libtcnative-1         ca-certificates-java         curl         git         openssh-client         wget         xmlstarlet  &&
      sed -i -e 's/java-6-sun/java-${JAVA_VERSION}-oracle/g' /etc/ca-certificates/update.d/jks-keystore  &&
      update-ca-certificates  && mv -v ${JAVA_HOME}/jre/lib/security/cacerts ${JAVA_HOME}/jre/lib/security/cacerts.original  &&
      ln -vs /etc/ssl/certs/java/cacerts ${JAVA_HOME}/jre/lib/security/  && ln -sv
      /usr/lib/x86_64-linux-gnu /usr/lib64  && mkdir -p /tmp  && wget --progress=dot:mega
      -P /tmp https://get.docker.com/builds/$(uname -s)/$(uname -i)/docker-${DOCKER_VERSION}  &&
      mv -v /tmp/docker-${DOCKER_VERSION} /usr/bin/docker  && groupadd -rg ${DOCKER_GID}
      ${DOCKER_GROUP}  && chown -v root:${DOCKER_GROUP} /usr/bin/docker  && chmod
      -v +xs /usr/bin/docker  && wget --progress=dot:mega -P /tmp https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static  &&
      mv -v /tmp/tini-static /usr/bin/tini  && chmod -v +x /usr/bin/tini  && mkdir
      -p ${BAMBOO_INSTALL} ${BAMBOO_HOME}  && groupadd -g ${BAMBOO_GID} ${BAMBOO_GROUP}  &&
      useradd -d ${BAMBOO_INSTALL} -u ${BAMBOO_UID} -g ${BAMBOO_GID} -G ${DOCKER_GROUP}
      -c "Atlassian Bamboo" ${BAMBOO_USER}  && wget --progress=dot:mega -O- "https://www.atlassian.com/software/bamboo/downloads/binary/atlassian-bamboo-${BAMBOO_VERSION}.tar.gz"
      | tar -xz --strip=1 -C "${BAMBOO_INSTALL}"  && echo "bamboo.home=${BAMBOO_HOME}"
      > ${BAMBOO_INSTALL}/atlassian-bamboo/WEB-INF/classes/bamboo-init.properties  &&
      chmod -R 700 ${BAMBOO_INSTALL} ${BAMBOO_HOME}  && chown -R ${BAMBOO_USER}:${BAMBOO_GROUP}         ${BAMBOO_HOME}         ${BAMBOO_INSTALL}         /etc/default/cacerts         /etc/java-${JAVA_VERSION}-oracle         /etc/ssl  &&
      find ${BAMBOO_INSTALL} -name "*.sh" | xargs chmod -v +x  && apt-get clean  &&
      rm -rf         /etc/java-6-sun         /tmp/*         /var/tmp/*         /var/cache/oracle-*         /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/main/container/srv/
    - /srv/
  - CmdLine:
    - set -x  && find /srv/ -name "*.sh" | xargs chmod -v +x
    Name: run
    PrependShell: true
  - Name: user
    User: ${BAMBOO_USER}:${BAMBOO_GROUP}
  - Name: volume
    Volumes:
    - ${BAMBOO_HOME}
  - Name: expose
    Ports:
    - "54663"
    - "8085"
  - Name: workdir
    Path: ${BAMBOO_INSTALL}
  - CmdLine:
    - /srv/bamboo.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - server
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:vivid
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:vivid
