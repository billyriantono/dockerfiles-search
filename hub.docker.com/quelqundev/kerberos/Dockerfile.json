{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "kerberos/base:linux-amd64",
      "SourceCode": "FROM kerberos/base:linux-amd64",
      "Platform": "",
      "From": {
        "Image": "kerberos/base:linux-amd64"
      },
      "Commands": [
        {
          "Key": "APP_ENV",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Env": [
            {
              "Key": "APP_ENV",
              "Value": "${APP_ENV}"
            }
          ],
          "Name": "env"
        },
        {
          "Maintainer": "\"CÃ©dric Verstraeten\" \u003chello@cedric.ws\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "dpkg-divert --local --rename --add /sbin/initctl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /bin/true /sbin/initctl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libcurl4-openssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/quelqundev/machinery -b develop /tmp/machinery \u0026\u0026     cd /tmp/machinery \u0026\u0026 git checkout ${APP_ENV} \u0026\u0026     mkdir build \u0026\u0026 cd build \u0026\u0026     cmake .. \u0026\u0026 make \u0026\u0026 make check \u0026\u0026 make install \u0026\u0026     rm -rf /tmp/machinery \u0026\u0026     chown -Rf www-data.www-data /etc/opt/kerberosio \u0026\u0026     chmod -Rf 777 /etc/opt/kerberosio/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash - \u0026\u0026 apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/baudev/web -b develop /var/www/web \u0026\u0026 cd /var/www/web \u0026\u0026 git checkout ${APP_ENV} \u0026\u0026 chown -Rf www-data.www-data /var/www/web \u0026\u0026 curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026 cd /var/www/web \u0026\u0026 composer install --prefer-source \u0026\u0026 npm install -g bower \u0026\u0026 cd public \u0026\u0026 nodejs /usr/lib/node_modules/bower/bin/bower --allow-root install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /var/www/web/public/capture \u0026\u0026 ln -s /etc/opt/kerberosio/capture/ /var/www/web/public/capture"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/'insideDocker'/'insideDocker' =\u003e false,\\/\\//\" /var/www/web/app/Http/Controllers/SystemController.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/service kerberosio status/supervisorctl status machinery \\| grep \\\"RUNNING\\\"';\\/\\//\" /var/www/web/app/Http/Repositories/System/OSSystem.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -Rf /etc/nginx/conf.d/* \u0026\u0026 rm -Rf /etc/nginx/sites-available/default \u0026\u0026 mkdir -p /etc/nginx/ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./web.conf",
            "/etc/nginx/sites-available/default.conf"
          ]
        },
        {
          "CmdLine": [
            "ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/\"GPCS\"/\"EGPCS\"/g' /etc/php/7.0/fpm/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/\"--daemonize/\"--daemonize --allow-to-run-as-root/g' /etc/init.d/php7.0-fpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/www-data/root/g' /etc/php/7.0/fpm/pool.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/www-data/root/g' /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./run.sh",
            "/runny.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /runny.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /runny.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's/\\r$//' /runny.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8889"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/opt/kerberosio/capture"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/opt/kerberosio/config"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/opt/kerberosio/logs"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/web/config"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/runny.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}