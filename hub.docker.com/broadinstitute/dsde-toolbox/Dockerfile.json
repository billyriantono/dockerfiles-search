{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.9",
      "SourceCode": "FROM alpine:3.9",
      "Platform": "",
      "From": {
        "Image": "alpine:3.9"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "VAULT_VERSION",
              "Value": "0.6.5"
            },
            {
              "Key": "CONSUL_TEMPLATE_VERSION",
              "Value": "0.20.0"
            },
            {
              "Key": "CLOUDSDK_PYTHON_SITEPACKAGES",
              "Value": "1"
            },
            {
              "Key": "VAULT_ADDR",
              "Value": "'https://clotho.broadinstitute.org:8200'"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.json",
            "/etc/consul-template/config/config.json"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "mysql.json",
            "/usr/local/etc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "mytop",
            "/usr/bin/mytop"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "innotop/innotop",
            "/usr/local/bin/innotop"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "innotop/innotop.1",
            "/usr/local/share/man/man1/innotop.1"
          ]
        },
        {
          "CmdLine": [
            "echo \"@community http://dl-cdn.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories \u0026\u0026     echo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk update \u0026\u0026     apk add perl-carp perl-compress-raw-bzip2     perl-compress-raw-zlib  perl-dbd-mysql     perl-dbi  perl-data-dumper@community     perl-exporter     perl-file-temp  perl-getopt-long     perl-io-compress perl-pathtools     perl-socket perl-term-readkey     perl-time-local@community     perl-time-hires     bash     ca-certificates     curl     findutils     jq     make     nodejs     nodejs-npm     tzdata     ruby ruby-io-console ruby-bundler     curl-dev ruby-dev build-base     mysql-client     openssl     python     py-pip     util-linux     vim     wget     postgresql-client \u0026\u0026     wget --no-check-certificate https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip -O /tmp/vault_${VAULT_VERSION}_linux_amd64.zip \u0026\u0026     wget --no-check-certificate https://releases.hashicorp.com/consul-template/${CONSUL_TEMPLATE_VERSION}/consul-template_${CONSUL_TEMPLATE_VERSION}_linux_amd64.zip -O /tmp/consul_template_${CONSUL_TEMPLATE_VERSION}_linux_amd64.zip \u0026\u0026     wget https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip -O /tmp/google-cloud-sdk.zip \u0026\u0026    cd /tmp \u0026\u0026     unzip vault_${VAULT_VERSION}_linux_amd64.zip \u0026\u0026     unzip consul_template_${CONSUL_TEMPLATE_VERSION}_linux_amd64.zip \u0026\u0026     mv consul-template vault /usr/local/bin/ \u0026\u0026     cd /usr/local \u0026\u0026 unzip /tmp/google-cloud-sdk.zip \u0026\u0026     google-cloud-sdk/install.sh --usage-reporting=false --path-update=true --bash-completion=true \u0026\u0026     google-cloud-sdk/bin/gcloud config set --installation component_manager/disable_update_check true \u0026\u0026     rm -rf /tmp/* \u0026\u0026     rm -rf /var/tmp/* \u0026\u0026     pip install google-auth google-auth-httplib2 google-api-python-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "binary2string.sh",
            "create-token.sh",
            "mysql-connect.sh",
            "render-templates.sh",
            "run-mytop.sh",
            "status",
            "envStatus",
            "run-innotop.sh",
            "tokenInfo",
            "vault-edit",
            "gen-all-tokens.sh",
            "configure.rb",
            "render-ctmpls.sh",
            "jenkins-cleanup.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dashboards",
            "/usr/local/dashboards"
          ]
        },
        {
          "CmdLine": [
            "cd /usr/local/dashboards \u0026\u0026     npm install \u0026\u0026     chmod 0755 /usr/local/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Gemfile",
            "/usr/app/"
          ]
        },
        {
          "CmdLine": [
            "cd /usr/app \u0026\u0026 bundle install \u0026\u0026 rm -rf /root/.bundle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/working"
        }
      ]
    }
  ]
}