{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "broadinstitute/gatk:gatkbase-2.0.2",
      "SourceCode": "FROM broadinstitute/gatk:gatkbase-2.0.2",
      "Platform": "",
      "From": {
        "Image": "broadinstitute/gatk:gatkbase-2.0.2"
      },
      "Commands": [
        {
          "Key": "ZIPPATH",
          "Name": "arg",
          "Value": null
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "$ZIPPATH",
            "/gatk"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/gatk"
        },
        {
          "CmdLine": [
            "ln -s $( find /gatk -name \"gatk*local.jar\" ) gatk.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s $( find /gatk -name \"gatk*local.jar\" ) /root/gatk.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s $( find /gatk -name \"gatk*spark.jar\" ) gatk-spark.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "java -jar gatk.jar -h"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /gatkCloneMountPoint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /jars"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir .gradle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/gatk"
        },
        {
          "Env": [
            {
              "Key": "CI",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"source activate gatk\" \u003e /root/run_unit_tests.sh \u0026\u0026     echo \"export TEST_JAR=\\$( find /jars -name \\\"gatk*test.jar\\\" )\" \u003e\u003e /root/run_unit_tests.sh \u0026\u0026     echo \"export TEST_DEPENDENCY_JAR=\\$( find /jars -name \\\"gatk*testDependencies.jar\\\" )\" \u003e\u003e /root/run_unit_tests.sh \u0026\u0026     echo \"export GATK_JAR=$( find /gatk -name \"gatk*local.jar\" )\" \u003e\u003e /root/run_unit_tests.sh \u0026\u0026     echo \"cp -rp /gatkCloneMountPoint/src/main/java/* /gatk/srcdir\" \u003e\u003e /root/run_unit_tests.sh \u0026\u0026     echo \"export SOURCE_DIR=/gatk/srcdir\" \u003e\u003e /root/run_unit_tests.sh \u0026\u0026     echo \"export GRADLE_OPTS=\\\"-Xmx1024m -Dorg.gradle.daemon=false\\\"\" /root/run_unit_tests.sh \u0026\u0026     echo \"export CP_DIR=/gatk/testClasses\" /root/run_unit_tests.sh \u0026\u0026     echo \"ln -s /gatkCloneMountPoint/src/ /gatkCloneMountPoint/scripts/docker/src\" \u003e\u003e /root/run_unit_tests.sh \u0026\u0026     echo \"ln -s /gatkCloneMountPoint/build/ /gatkCloneMountPoint/scripts/docker/build\" \u003e\u003e /root/run_unit_tests.sh \u0026\u0026     echo \"cd /gatk/ \u0026\u0026 /gatkCloneMountPoint/gradlew -b /gatkCloneMountPoint/dockertest.gradle testOnPackagedReleaseJar jacocoTestReportOnPackagedReleaseJar -a -p /gatkCloneMountPoint\" \u003e\u003e /root/run_unit_tests.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "cp -r /root/run_unit_tests.sh /gatk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -r gatk.jar /gatk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -r install_R_packages.R /gatk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOWNLOAD_DIR",
              "Value": "/downloads"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_URL",
              "Value": "https://repo.continuum.io/miniconda/Miniconda3-4.3.30-Linux-x86_64.sh"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_MD5",
              "Value": "= \"0b80a152332a4ce5250f3c09589c7a81\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONDA_PATH",
              "Value": "/opt/miniconda"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $DOWNLOAD_DIR \u0026\u0026     wget -nv -O $DOWNLOAD_DIR/miniconda.sh $CONDA_URL \u0026\u0026     test \"`md5sum $DOWNLOAD_DIR/miniconda.sh | awk -v FS='  ' '{print $1}'` = $CONDA_MD5\" \u0026\u0026     bash $DOWNLOAD_DIR/miniconda.sh -p $CONDA_PATH -b \u0026\u0026     rm $DOWNLOAD_DIR/miniconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/gatk"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_PATH/envs/gatk/bin:$CONDA_PATH/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "conda env create -n gatk -f /gatk/gatkcondaenv.yml \u0026\u0026     echo \"source activate gatk\" \u003e\u003e /gatk/gatkenv.rc \u0026\u0026     conda clean -y -all \u0026\u0026     rm -rf /root/.cache/pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash",
            "--init-file",
            "/gatk/gatkenv.rc"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/gatk:$PATH"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}