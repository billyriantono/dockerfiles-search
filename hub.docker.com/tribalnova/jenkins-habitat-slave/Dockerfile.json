{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins/jnlp-slave",
      "SourceCode": "FROM jenkins/jnlp-slave",
      "Platform": "",
      "From": {
        "Image": "jenkins/jnlp-slave"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"dominique.rochefort@hmhco.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://archive.debian.org/debian jessie non-free\" \u003e\u003e /etc/apt/sources.list \u0026\u0026         echo \"deb [check-valid-until=no] http://archive.debian.org/debian jessie-backports main\" \u003e\u003e /etc/apt/sources.list \u0026\u0026         apt-get update \u0026\u0026         apt-get install -y         apt-utils jq ffmpeg zip dnsutils         python-setuptools         python-dev build-essential         software-properties-common groff"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install libsox-fmt-mp3 sox -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install libttspico0 libttspico-utils libttspico-data -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y ruby ruby-dev \u0026\u0026         gem install sass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install pip \u0026\u0026 pip install awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_PREFIX",
              "Value": "\"/home/jenkins/.npm\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /home/jenkins/.npm \u0026\u0026         curl -sL https://deb.nodesource.com/setup_10.x | bash - \u0026\u0026         apt-get install -y nodejs \u0026\u0026         chown jenkins -R /home/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026         echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \u0026\u0026         apt-get update \u0026\u0026         apt-get install -y yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "init-credentials.sh",
            "/usr/bin/init-credentials.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod a+x /usr/bin/init-credentials.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026     echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' \u003e\u003e /etc/apt/sources.list.d/google.list \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y google-chrome-stable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "CHROME_FILE=`whereis -b google-chrome | awk '{print $2}'` \u0026\u0026     cp $CHROME_FILE \"$CHROME_FILE\".old \u0026\u0026     cat \"$CHROME_FILE\".old | sed 's/exec -a \"$0\" \"$HERE\\/chrome\" \"$@\"/exec -a \"$0\" \"$HERE\\/chrome\" \"$@\" --no-default-browser-check --headless --no-sandbox --user-data-dir/' \u003e $CHROME_FILE \u0026\u0026     rm \"$CHROME_FILE\".old"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bedrock-ca.pem",
            "bedrock-ca.pem"
          ]
        },
        {
          "CmdLine": [
            "install bedrock-ca.pem /usr/local/share/ca-certificates/bedrock-ca.crt \u0026\u0026         update-ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "npm i -g npm@latest"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm i bower grunt-cli gulp-cli -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/home/jenkins/.npm/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /home/jenkins/.ssh \u0026\u0026         ssh-keyscan -H bitbucket.org \u003e\u003e /home/jenkins/.ssh/known_hosts \u0026\u0026         ssh-keyscan -H github.com \u003e\u003e /home/jenkins/.ssh/known_hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm config set @hmh:registry http://npm.tribalnova.com"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/jenkins/.subversion/auth/svn.simple"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch error-notification.token"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jenkins-slave"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}