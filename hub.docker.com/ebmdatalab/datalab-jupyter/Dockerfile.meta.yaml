MetaArgs:
- DefaultValue: null
  Key: ubuntuversion
  ProvidedValue: null
  Value: null
Stages:
- BaseName: ubuntu:$ubuntuversion
  Commands:
  - Key: pythonversion
    Name: arg
    Value: null
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: DEBCONF_NONINTERACTIVE_SEEN
      Value: "true"
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends make build-essential libssl-dev zlib1g-dev
      libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils
      tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ca-certificates git
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y pandoc texlive-xetex bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libgeos-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m app
    Name: run
    PrependShell: true
  - Name: user
    User: app
  - CmdLine:
    - curl https://pyenv.run | bash
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/home/app/.pyenv/shims:/home/app/.pyenv/bin:${PATH}"'
    Name: env
  - Env:
    - Key: PYENV_SHELL
      Value: bash
    Name: env
  - CmdLine:
    - ls -l /home/app/.pyenv/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv install $pythonversion
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv global $pythonversion
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://bootstrap.pypa.io/get-pip.py | python
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /tmp/
  - CmdLine:
    - pip install --requirement /tmp/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter lab build
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m bash_kernel.install
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:$ubuntuversion
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:$ubuntuversion
