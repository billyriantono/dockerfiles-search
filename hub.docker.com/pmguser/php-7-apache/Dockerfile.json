{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.1-apache-stretch",
      "SourceCode": "FROM php:7.2.1-apache-stretch",
      "Platform": "",
      "From": {
        "Image": "php:7.2.1-apache-stretch"
      },
      "Commands": [
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Env": [
            {
              "Key": "LETSENCRYPT_HOME",
              "Value": "/etc/letsencrypt"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -my wget gnupg     \u0026\u0026 echo 'deb http://ftp.debian.org/debian stretch-backports main' \u003e\u003e /etc/apt/sources.list     \u0026\u0026 curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y supervisor     \u0026\u0026 mkdir -p /var/log/supervisor     \u0026\u0026 apt-get install -y dialog     \u0026\u0026 apt-get install -y git     \u0026\u0026 apt-get install -y zip     \u0026\u0026 apt-get install -y unzip     \u0026\u0026 apt-get install -y vim     \u0026\u0026 apt-get install -y apt-utils     \u0026\u0026 apt-get install -y libnotify-bin     \u0026\u0026 apt-get install -y sendmail     \u0026\u0026 apt-get install -y build-essential patch     \u0026\u0026 apt-get install -y rsyslog     \u0026\u0026 a2enmod rewrite     \u0026\u0026 apt-get install -y libmagickwand-dev --no-install-recommends     \u0026\u0026 a2enmod ssl     \u0026\u0026 a2enmod headers     \u0026\u0026 a2enmod actions     \u0026\u0026 apt-get install -y python-certbot-apache -t stretch-backports     \u0026\u0026 pecl install imagick     \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 docker-php-ext-install pcntl     \u0026\u0026 docker-php-ext-install soap     \u0026\u0026 docker-php-ext-install bcmath     \u0026\u0026 apt-get install -y libpq-dev     \u0026\u0026 docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql     \u0026\u0026 docker-php-ext-install mysqli pdo pdo_mysql pdo_pgsql     \u0026\u0026 apt-get install -y libmcrypt-dev     \u0026\u0026 pecl install mcrypt-1.0.1     \u0026\u0026 docker-php-ext-enable mcrypt     \u0026\u0026 apt-get install -y libssl-dev     \u0026\u0026 pecl install mongodb     \u0026\u0026 apt-get install curl -y     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_6.x | bash -     \u0026\u0026 apt-get install -y nodejs     \u0026\u0026 npm install -g bower     \u0026\u0026 apt-get install yarn     \u0026\u0026 php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"     \u0026\u0026 php -r \"if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"     \u0026\u0026 php composer-setup.php --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 chmod -R 755 /var/www/html     \u0026\u0026 chown -R www-data:www-data /var/www/html     \u0026\u0026 chmod -R 644 /etc/cron.d/*     \u0026\u0026 chown -R root:root /etc/cron.d/*     \u0026\u0026 echo \"postfix postfix/main_mailer_type string 'Internet Site'\" | debconf-set-selections     \u0026\u0026 echo \"postfix postfix/mailname string $(hostname -f)\" | debconf-set-selections     \u0026\u0026 apt-get install -y postfix     \u0026\u0026 postconf -e \"inet_interfaces = loopback-only\"     \u0026\u0026 postconf -e \"debug_peer_level = 2\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/php.ini",
            "/usr/local/etc/php"
          ]
        },
        {
          "CmdLine": [
            "ln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/scripts/pmg-*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/pmg-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "America/Chicago"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}