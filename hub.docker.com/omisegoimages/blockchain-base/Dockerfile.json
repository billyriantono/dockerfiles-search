{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "omisegoimages/jenkins-slave-elixir:1.6-otp20",
      "SourceCode": "FROM omisegoimages/jenkins-slave-elixir:1.6-otp20",
      "Platform": "",
      "From": {
        "Image": "omisegoimages/jenkins-slave-elixir:1.6-otp20"
      },
      "Commands": [
        {
          "Maintainer": "Kridsada Thanabulpong \u003csirn@omise.co\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GETHPATH",
              "Value": "\"/go-ethereum\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/usr/local/go/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "\"1.9.2\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     GOLANG_DOWNLOAD_URL=\"https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz\" \u0026\u0026     GOLANG_DOWNLOAD_SHA256=\"de874549d9a8d8d8062be05808509c09a88a248e77ec14eb77453530829ac02b\" \u0026\u0026     curl -fSL -o golang-bin.tar.gz \"${GOLANG_DOWNLOAD_URL}\" \u0026\u0026     echo \"${GOLANG_DOWNLOAD_SHA256}  golang-bin.tar.gz\" | sha256sum -c - \u0026\u0026     tar -xzC /usr/local -f golang-bin.tar.gz \u0026\u0026     rm golang-bin.tar.gz \u0026\u0026     go version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GETH_VERSION",
              "Value": "\"v1.8.6\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     mkdir -p ${GETHPATH} \u0026\u0026     cd ${GETHPATH} \u0026\u0026     git init \u0026\u0026     git remote add origin https://github.com/ethereum/go-ethereum \u0026\u0026     git fetch --depth 1 origin \"${GETH_VERSION}\" \u0026\u0026     git checkout FETCH_HEAD \u0026\u0026     make geth \u0026\u0026     install \"${GETHPATH}/build/bin/geth\" /usr/local/bin \u0026\u0026     geth version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     git clone --recursive https://github.com/ethereum/solidity.git \u0026\u0026     cd solidity \u0026\u0026     git submodule update --init --recursive \u0026\u0026     apt-get -y install cmake libboost-all-dev libz3-dev \u0026\u0026     git checkout v0.4.25 \u0026\u0026     ./scripts/build.sh \u0026\u0026     solc --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     apt-get install -y python3 python3-dev python3-pip libssl-dev \u0026\u0026     update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \u0026\u0026     update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1 \u0026\u0026     pip install populus"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     apt-get install -y libgmp3-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        }
      ]
    }
  ]
}