{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "omisegoimages/base:stretch",
      "SourceCode": "FROM omisegoimages/base:stretch",
      "Platform": "",
      "From": {
        "Image": "omisegoimages/base:stretch"
      },
      "Commands": [
        {
          "Maintainer": "Kridsada Thanabulpong \u003csirn@omise.co\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "OTP_VERSION",
              "Value": "\"20.3.2\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     OTP_DOWNLOAD_URL=\"https://github.com/erlang/otp/archive/OTP-${OTP_VERSION}.tar.gz\" \u0026\u0026     OTP_DOWNLOAD_SHA256=\"9809be52baa23d6fd18ee70b9a9b7c548e44f586db2f46ff5bfe66719cfab10a\" \u0026\u0026     build_deps=\"automake autoconf libreadline-dev libncurses-dev libssl-dev libyaml-dev libxslt-dev libffi-dev libtool unixodbc-dev\" \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y --no-install-recommends $build_deps \u0026\u0026     curl -fsL -o otp-src.tar.gz \"${OTP_DOWNLOAD_URL}\" \u0026\u0026     echo \"${OTP_DOWNLOAD_SHA256}  otp-src.tar.gz\" |sha256sum -c - \u0026\u0026     mkdir -p /usr/local/src/otp \u0026\u0026     tar -xzC /usr/local/src/otp --strip-components=1 -f otp-src.tar.gz \u0026\u0026     rm otp-src.tar.gz \u0026\u0026     cd /usr/local/src/otp \u0026\u0026     ./otp_build autoconf \u0026\u0026     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \u0026\u0026     make -j$(nproc) \u0026\u0026     make install \u0026\u0026     find /usr/local -name examples | xargs rm -rf \u0026\u0026     apt-get purge -y --auto-remove $build_deps \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /usr/local/src/otp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "REBAR3_VERSION",
              "Value": "\"3.5.0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     REBAR3_DOWNLOAD_URL=\"https://github.com/erlang/rebar3/archive/${REBAR3_VERSION}.tar.gz\" \u0026\u0026     REBAR3_DOWNLOAD_SHA256=\"e95e9d1f2ce219f548d4f49ad41409af02069190f19e2b6717585eef6ee77501\" \u0026\u0026     curl -fsL -o rebar3-src.tar.gz \"${REBAR3_DOWNLOAD_URL}\" \u0026\u0026     echo \"${REBAR3_DOWNLOAD_SHA256}  rebar3-src.tar.gz\" |sha256sum -c - \u0026\u0026     mkdir -p /usr/local/src/rebar3 \u0026\u0026     tar -xzC /usr/local/src/rebar3 --strip-components=1 -f rebar3-src.tar.gz \u0026\u0026     rm rebar3-src.tar.gz \u0026\u0026     cd /usr/local/src/rebar3 \u0026\u0026     HOME=$PWD ./bootstrap \u0026\u0026     install -v ./rebar3 /usr/local/bin/ \u0026\u0026     rm -rf /usr/local/src/rebar3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "erl"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}