MetaArgs: null
Stages:
- BaseName: nicoherbigio/adoptopenjdk-openjdk:8u212
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Nico Herbig <nico@nicoherbig.io>"'
    Name: label
  - CmdLine:
    - set -ex     && apt-get update     && apt-get install -y --no-install-recommends
      bash ca-certificates curl fontconfig openssl perl procps wget     && rm -rf
      /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Key: TINI_VERSION
    Name: arg
    Value: 0.18.0
  - Key: TINI_DOWNLOAD_URL
    Name: arg
    Value: https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini
  - CmdLine:
    - set -ex     && curl -fSL ${TINI_DOWNLOAD_URL} -o /sbin/tini     && chmod +x
      /sbin/tini
    Name: run
    PrependShell: true
  - Env:
    - Key: RUN_USER_ID
      Value: "901"
    - Key: RUN_USER
      Value: jira
    Name: env
  - Env:
    - Key: RUN_GROUP_ID
      Value: "901"
    - Key: RUN_GROUP
      Value: jira
    Name: env
  - CmdLine:
    - groupadd -r -g ${RUN_GROUP_ID} ${RUN_GROUP} && useradd -r -g ${RUN_GROUP} -u
      ${RUN_USER_ID} ${RUN_USER}
    Name: run
    PrependShell: true
  - Key: JIRA_VERSION
    Name: arg
    Value: 8.1.0
  - Key: JIRA_DOWNLOAD_URL
    Name: arg
    Value: https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-core-${JIRA_VERSION}.tar.gz
  - Env:
    - Key: JIRA_INSTALL_DIR
      Value: /opt/atlassian/jira
    Name: env
  - Env:
    - Key: JIRA_HOME
      Value: /var/atlassian/jira
    Name: env
  - CmdLine:
    - 'set -ex     && mkdir -p ${JIRA_INSTALL_DIR}     && mkdir -p ${JIRA_HOME}     &&
      curl -fSL ${JIRA_DOWNLOAD_URL} | tar -xz --no-same-owner --strip-components=1
      -C ${JIRA_INSTALL_DIR}     && sed -i -e ''s/JVM_MINIMUM_MEMORY="\([0-9]\+[kmg]\)"/:
      ${JVM_MINIMUM_MEMORY:=\1}/g'' ${JIRA_INSTALL_DIR}/bin/setenv.sh     && sed -i
      -e ''s/JVM_MAXIMUM_MEMORY="\([0-9]\+[kmg]\)"/: ${JVM_MAXIMUM_MEMORY:=\1}/g''
      ${JIRA_INSTALL_DIR}/bin/setenv.sh     && sed -i -e ''s/port="8080"/port="8080"
      secure="${catalinaConnectorSecure}" scheme="${catalinaConnectorScheme}" proxyName="${catalinaConnectorProxyName}"
      proxyPort="${catalinaConnectorProxyPort}"/'' ${JIRA_INSTALL_DIR}/conf/server.xml     &&
      chown -R ${RUN_USER}:${RUN_GROUP} ${JIRA_INSTALL_DIR}     && chown -R ${RUN_USER}:${RUN_GROUP}
      ${JIRA_HOME}'
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${JIRA_HOME}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - set -ex     && chmod +x /usr/local/bin/docker-entrypoint.sh     && ln -s usr/local/bin/docker-entrypoint.sh
      /
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: workdir
    Path: ${JIRA_HOME}
  - CmdLine:
    - /docker-entrypoint.sh
    - -fg
    Name: cmd
    PrependShell: false
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  From:
    Image: nicoherbigio/adoptopenjdk-openjdk:8u212
  Name: ""
  Platform: ""
  SourceCode: FROM nicoherbigio/adoptopenjdk-openjdk:8u212
