MetaArgs: null
Stages:
- BaseName: debian:latest
  Commands:
  - Labels:
    - Key: mantainer
      Value: '"Gius. Camerlingo <gcamerli@gmail.com>"'
    Name: label
  - Labels:
    - Key: version
      Value: '"1.0"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Backup storage to AWS S3 for Docker."'
    Name: label
  - Env:
    - Key: NAME
      Value: backup
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y --no-install-recommends \tcurl \tcron"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /scripts
    - /dockup/
  - CmdLine:
    - chmod 755 /dockup/*.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: S3_BUCKET_NAME
      Value: docker-backups.example.com
    Name: env
  - Env:
    - Key: AWS_ACCESS_KEY_ID
      Value: '**DefineMe**'
    Name: env
  - Env:
    - Key: AWS_SECRET_ACCESS_KEY
      Value: '**DefineMe**'
    Name: env
  - Env:
    - Key: AWS_DEFAULT_REGION
      Value: us-east-1
    Name: env
  - Env:
    - Key: PATHS_TO_BACKUP
      Value: auto
    Name: env
  - Env:
    - Key: BACKUP_NAME
      Value: backup
    Name: env
  - Env:
    - Key: RESTORE
      Value: "false"
    Name: env
  - Env:
    - Key: RESTORE_TAR_OPTION
      Value: --preserve-permissions
    Name: env
  - Env:
    - Key: NOTIFY_BACKUP_SUCCESS
      Value: "false"
    Name: env
  - Env:
    - Key: NOTIFY_BACKUP_FAILURE
      Value: "false"
    Name: env
  - Env:
    - Key: BACKUP_TAR_TRIES
      Value: "5"
    Name: env
  - Env:
    - Key: BACKUP_TAR_RETRY_SLEEP
      Value: "30"
    Name: env
  - Env:
    - Key: TZ
      Value: '"Europe/Paris"'
    Name: env
  - CmdLine:
    - useradd -ms /bin/bash docker
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/docker
    Name: env
  - CmdLine:
    - chown -R docker:docker $HOME
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - healthcheck
    - /usr/local/bin/
  - CmdLine:
    - chmod 744 /usr/local/bin/healthcheck
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - Name: workdir
    Path: /dockup
  - CmdLine:
    - ./run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: debian:latest
  Name: ""
  Platform: ""
  SourceCode: FROM debian:latest
