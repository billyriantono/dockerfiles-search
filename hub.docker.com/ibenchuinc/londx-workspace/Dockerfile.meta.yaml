MetaArgs:
- DefaultValue: "10"
  Key: NODE_VERSION
  ProvidedValue: null
  Value: "10"
Stages:
- BaseName: node:${NODE_VERSION}-alpine
  Commands:
  - Env:
    - Key: PM2
      Value: pm2-runtime
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Key: ALPINE_GLIBC_BASE_URL
    Name: arg
    Value: '"https://github.com/sgerrand/alpine-pkg-glibc/releases/download"'
  - Key: ALPINE_GLIBC_PACKAGE_VERSION
    Name: arg
    Value: '"2.28-r0"'
  - CmdLine:
    - ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     apk add --no-cache --virtual=.build-dependencies tzdata wget ca-certificates
      &&     cp -r -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &&     wget
      -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub  &&     wget         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&     apk add --no-cache         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&         rm "/etc/apk/keys/sgerrand.rsa.pub" &&     /usr/glibc-compat/bin/localedef
      --force --inputfile POSIX --charmap UTF-8 "$LANG" || true &&     echo "export
      LANG=$LANG" > /etc/profile.d/locale.sh &&         apk del glibc-i18n &&         rm
      "/root/.wget-hsts" &&     apk del .build-dependencies &&     rm         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache build-base  wget curl busybox  openssh  git &&     sed -i
      s/#PermitRootLogin.*/PermitRootLogin\ yes/ /etc/ssh/sshd_config &&     echo
      "root:root" | chpasswd &&     ssh-keygen -A
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install pm2@latest -g && pm2 install typescript
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - npm set registry https://registry.npm.taobao.org &&     npm set disturl https://npm.taobao.org/dist
      &&     npm set sass_binary_site https://npm.taobao.org/mirrors/node-sass
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - /usr/sbin/sshd -D -e "$@"
    Name: cmd
    PrependShell: true
  From:
    Image: node:${NODE_VERSION}-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:${NODE_VERSION}-alpine
