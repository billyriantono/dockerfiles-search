{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "trueosiris/docker-baseimage:latest",
      "SourceCode": "FROM trueosiris/docker-baseimage:latest",
      "Platform": "",
      "From": {
        "Image": "trueosiris/docker-baseimage:latest"
      },
      "Commands": [
        {
          "Maintainer": "Tim Chaubet \"tim@chaubet.be\"",
          "Name": "maintainer"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get upgrade -y  \u0026\u0026 apt-get install -y net-tools                        iputils-ping                        iptables                        bridge-utils                        vim                        libltdl7                        dnsutils                        software-properties-common                        python-software-properties                        jq                        apache2                        php7.0                        libapache2-mod-php7.0                        php7.0-mbstring                        zip                        composer                        libsodium18                        php-mcrypt                        php7.0-gmp                        libjs-jquery                        php7.0-mysql  \u0026\u0026 apt-get -f -y install  \u0026\u0026 add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"  \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7EA0A9C3F273FCD8  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --allow-unauthenticated docker-ce  \u0026\u0026 apt-get autoclean -y  \u0026\u0026 apt-get autoremove -y  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 rm -rf /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "www",
            "/tmp/www"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/my_init.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "startup.sh",
            "/etc/my_init.d/startup.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/my_init.d/startup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/service/nodefile /var/log/nodefile ; sync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nodefile.sh",
            "/etc/service/nodefile/run"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/service/nodefile/run     \u0026\u0026 cp /var/log/cron/config /var/log/nodefile/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/service/workerfile /var/log/workerfile ; sync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "workerfile.sh",
            "/etc/service/workerfile/run"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/service/workerfile/run     \u0026\u0026 cp /var/log/cron/config /var/log/workerfile/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/service/apache2  /var/log/apache2 ; sync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apache2.sh",
            "/etc/service/apache2/run"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/service/apache2/run     \u0026\u0026 cp /var/log/cron/config /var/log/apache2/     \u0026\u0026 chown -R www-data /var/log/apache2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "runonce.sh",
            "/sbin/runonce"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /sbin/runonce; sync     \u0026\u0026 /bin/bash -c /sbin/runonce     \u0026\u0026 rm /sbin/runonce"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/synced",
            "/var/run/docker.sock"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apache2.conf",
            "/etc/apache2/apache2.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}