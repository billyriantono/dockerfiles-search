{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "logstash:5.1.1",
      "SourceCode": "FROM\t\tlogstash:5.1.1",
      "Platform": "",
      "From": {
        "Image": "logstash:5.1.1"
      },
      "Commands": [
        {
          "Maintainer": "phirov@163.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"alias ls='ls --color=auto'\" \u003e\u003e $HOME/.bashrc \u0026\u0026 \t\tapt-get update \u0026\u0026                 apt-get install -y cron \u0026\u0026 \t\tlogstash-plugin install logstash-output-mongodb \u0026\u0026                 echo 'PATH=/usr/share/logstash/vendor/jruby/bin:/usr/share/logstash/vendor/bundle/jruby/1.9/bin/:$PATH' \u003e\u003e $HOME/.bashrc \u0026\u0026                 export PATH=/usr/share/logstash/vendor/jruby/bin:/usr/share/logstash/vendor/bundle/jruby/1.9/bin/:$PATH \u0026\u0026 \t\tmkdir -p /opt/logstash/src \u0026\u0026 \t\twget -P /opt/logstash https://github.com/phirov/logstash-input-s3/archive/v3.1.2.tar.gz \u0026\u0026 \t\tcd /opt/logstash \u0026\u0026 \t\ttar xzf v3.1.2.tar.gz \u0026\u0026 \t\tcd /usr/share/logstash \u0026\u0026 \t\tsed -i 's/gem \"logstash-input-s3\"/gem \"logstash-input-s3\", :path =\u003e \"\\/opt\\/logstash\\/logstash-input-s3-3.1.2\"/g' Gemfile \u0026\u0026 \t\tgem build /opt/logstash/logstash-input-s3-3.1.2/logstash-input-s3.gemspec \u0026\u0026 \t\tcd /opt/logstash \u0026\u0026 \t\twget -O src/logstash-filter-environment-3.0.0-p1.tar.gz https://github.com/phirov/logstash-filter-environment/archive/v3.0.0-p1.tar.gz \u0026\u0026 \t\ttar xzf src/logstash-filter-environment-3.0.0-p1.tar.gz \u0026\u0026 \t\tcd /usr/share/logstash \u0026\u0026 \t\techo 'gem \"logstash-filter-environment\", :path =\u003e \"/opt/logstash/logstash-filter-environment-3.0.0-p1\"' \u003e\u003e Gemfile \u0026\u0026 \t\tgem build /opt/logstash/logstash-filter-environment-3.0.0-p1/logstash-filter-environment.gemspec \u0026\u0026 \t\t./bin/logstash-plugin install --no-verify"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-e",
            ""
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}