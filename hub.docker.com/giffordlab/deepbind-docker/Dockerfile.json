{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "kaixhin/cuda-caffe:7.0",
      "SourceCode": "FROM kaixhin/cuda-caffe:7.0",
      "Platform": "",
      "From": {
        "Image": "kaixhin/cuda-caffe:7.0"
      },
      "Commands": [
        {
          "Maintainer": "Matt Edwards \u003cmatted@mit.edu\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y emacs24-nox nano curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh \u003e /root/miniconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod a+x /root/miniconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/root/miniconda.sh -b"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/miniconda2/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "conda install scipy numpy matplotlib=1.3.1 pil # matplotlib=1.3.1 downgrades everything"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "code/libs",
            "/root/deepbind/libs"
          ]
        },
        {
          "CmdLine": [
            "make --directory /root/deepbind/libs/smat/src clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make --directory /root/deepbind/libs/smat/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make --directory /root/deepbind/libs/deepity/deepity_smat clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make --directory /root/deepbind/libs/deepity/deepity_smat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make --directory /root/deepbind/libs/kangaroo/kangaroo_smat clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make --directory /root/deepbind/libs/kangaroo/kangaroo_smat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/root/deepbind/libs/deepity/build/release/bin:/root/deepbind/libs/smat/build/release/bin:/root/deepbind/libs/kangaroo/build/release/bin:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "code/*py",
            "/root/deepbind/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "code/cfg",
            "/root/deepbind/cfg"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "data",
            "/root/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root/deepbind"
        },
        {
          "CmdLine": [
            "python deepbind_train_encode.py top calib,train,test,report"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}