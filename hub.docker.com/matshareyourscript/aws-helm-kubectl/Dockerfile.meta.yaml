MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Labels:
    - Key: org.label-schema.name
      Value: '"aws-helm-kubectl"'
    - Key: org.label-schema.url
      Value: '"https://hub.docker.com/r/matshareyourscript/aws-helm-kubectl/"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/mat-shareyourscript/aws-helm-kubectl"'
    Name: label
  - Env:
    - Key: KUBE_LATEST_VERSION
      Value: '"v1.16.0"'
    Name: env
  - Env:
    - Key: HELM_VERSION
      Value: '"v2.15.2"'
    Name: env
  - Env:
    - Key: AWS_CLI_VERSION
      Value: '"1.16.283"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./configure.sh
    - /opt/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./acm
    - /usr/local/bin/
  - CmdLine:
    - apk add --no-cache       ca-certificates       git       curl       bash       python3       python3-dev       py3-pip       build-base     &&
      pip3 install --upgrade --no-cache-dir awscli==${AWS_CLI_VERSION}     && pip3
      install --upgrade --no-cache-dir boto3     && wget -q https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl
      -O /usr/local/bin/kubectl     && chmod +x /usr/local/bin/kubectl     && wget
      -q https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz
      -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm     && chmod +x /usr/local/bin/helm     &&
      apk --purge del          py3-pip          build-base     && rm -rf /var/cache/apk/*     &&
      chmod 755 /usr/local/bin/acm     && chmod 755 /opt/configure.sh     && /opt/configure.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
