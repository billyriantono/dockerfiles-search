{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:19.03.1-dind",
      "SourceCode": "FROM docker:19.03.1-dind",
      "Platform": "",
      "From": {
        "Image": "docker:19.03.1-dind"
      },
      "Commands": [
        {
          "Maintainer": "Mesosphere Support \u003csupport+jenkins-dind@mesosphere.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "ALPINE_EDGE_COMMUNITY_REPO",
              "Value": "http://dl-cdn.alpinelinux.org/alpine/edge/community"
            },
            {
              "Key": "ALPINE_GLIBC_BASE_URL",
              "Value": "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r2"
            },
            {
              "Key": "ALPINE_GLIBC_PACKAGE",
              "Value": "glibc-2.23-r2.apk"
            },
            {
              "Key": "ALPINE_GLIBC_BIN_PACKAGE",
              "Value": "glibc-bin-2.23-r2.apk"
            },
            {
              "Key": "ALPINE_GLIBC_I18N_PACKAGE",
              "Value": "glibc-i18n-2.23-r2.apk"
            },
            {
              "Key": "ALPINE_GLIBC_RSA_PUB_URL",
              "Value": "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r2/sgerrand.rsa.pub"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/default-jvm"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "SSH_KNOWN_HOSTS",
              "Value": "github.com"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${JAVA_HOME}/bin"
            },
            {
              "Key": "DOCKER_ENGINE_LOGS",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add     bash     bzip2     ca-certificates     git     glib     jq     less     libsm     libstdc++     make     openjdk8     openssh-client     openssl     perl     py-pip     python     python3     tar     unzip     \u0026\u0026 cd /tmp     \u0026\u0026 pip install --upgrade     pip     setuptools     virtualenv     wheel     \u0026\u0026 apk add --update --repository ${ALPINE_EDGE_COMMUNITY_REPO} tini     \u0026\u0026 wget -q -O /etc/apk/keys/sgerrand.rsa.pub \"${ALPINE_GLIBC_RSA_PUB_URL}\"     \u0026\u0026 wget -q \"${ALPINE_GLIBC_BASE_URL}/${ALPINE_GLIBC_PACKAGE}\"                \"${ALPINE_GLIBC_BASE_URL}/${ALPINE_GLIBC_BIN_PACKAGE}\"                \"${ALPINE_GLIBC_BASE_URL}/${ALPINE_GLIBC_I18N_PACKAGE}\"     \u0026\u0026 apk add ${ALPINE_GLIBC_PACKAGE} ${ALPINE_GLIBC_BIN_PACKAGE} ${ALPINE_GLIBC_I18N_PACKAGE}     \u0026\u0026 cd     \u0026\u0026 rm -rf /tmp/* /var/cache/apk/*     \u0026\u0026 /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8     \u0026\u0026 echo 'export PATH=$PATH:${JAVA_HOME}/bin' \u003e\u003e /etc/profile.d/java.sh     \u0026\u0026 ssh-keyscan $SSH_KNOWN_HOSTS | tee /etc/ssh/ssh_known_hosts     \u0026\u0026 echo 'Done'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "wrapper.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/wrapper.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": null,
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}