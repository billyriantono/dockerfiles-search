MetaArgs: null
Stages:
- BaseName: golang:1.9.1-alpine3.6
  Commands:
  - Maintainer: Minio Inc <dev@minio.io>
    Name: maintainer
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GOPATH/bin
    Name: env
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - Name: workdir
    Path: /go/src/github.com/minio/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dockerscripts/docker-entrypoint.sh
    - dockerscripts/healthcheck.sh
    - /usr/bin/
  - CmdLine:
    - 'apk add --no-cache ca-certificates curl &&      apk add --no-cache --virtual
      .build-deps git &&      echo ''hosts: files mdns4_minimal [NOTFOUND=return]
      dns mdns4'' >> /etc/nsswitch.conf &&      go get -v -d github.com/minio/minio
      &&      cd /go/src/github.com/minio/minio &&      go install -v -ldflags "$(go
      run buildscripts/gen-ldflags.go)" &&      rm -rf /go/pkg /go/src /usr/local/go
      && apk del .build-deps'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - /usr/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: volume
    Volumes:
    - /export
  - Health:
      Interval: 30000000000
      Test:
      - CMD-SHELL
      - /usr/bin/healthcheck.sh
      Timeout: 5000000000
    Name: healthcheck
  - CmdLine:
    - minio
    Name: cmd
    PrependShell: false
  From:
    Image: golang:1.9.1-alpine3.6
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.9.1-alpine3.6
