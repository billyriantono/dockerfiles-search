MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04
  Commands:
  - Labels:
    - Key: desc
      Value: '"Configure jupyter lab with GPU support"'
    Name: label
  - CmdLine:
    - apt update &&     apt upgrade -y &&     apt install -y wget git cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget https://repo.continuum.io/archive/Anaconda3-5.2.0-Linux-x86_64.sh -O anaconda.sh
      -q && \tchmod +x anaconda.sh && \t./anaconda.sh -b -p /usr/local/anaconda &&
      \trm anaconda.sh"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/anaconda/bin:$PATH
    Name: env
  - CmdLine:
    - conda update conda &&     conda update anaconda --all
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install tensorflow-gpu
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install pytorch torchvision -c pytorch
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install xgboost
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENCV_VERSION
      Value: 4.0.1
    Name: env
  - CmdLine:
    - apt install build-essential unzip pkg-config -y &&     apt install libjpeg-dev
      libpng-dev libtiff-dev -y &&     apt install libavcodec-dev libavformat-dev
      libswscale-dev libv4l-dev libxvidcore-dev libx264-dev -y &&     apt install
      libatlas-base-dev gfortran -y
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir opencv && cd opencv &&     wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip
      &&     unzip ${OPENCV_VERSION}.zip &&     rm -rf ${OPENCV_VERSION}.zip &&     cd
      opencv-${OPENCV_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p opencv/opencv-${OPENCV_VERSION}/build &&     cd opencv/opencv-${OPENCV_VERSION}/build
      &&     cmake     -D CMAKE_BUILD_TYPE=RELEASE     -D CMAKE_INSTALL_PREFIX=/usr/local     -D
      WITH_FFMPEG=NO     -D WITH_IPP=NO     -D WITH_OPENEXR=NO     -D WITH_TBB=YES     -D
      BUILD_EXAMPLES=NO     -D BUILD_ANDROID_EXAMPLES=NO     -D INSTALL_PYTHON_EXAMPLES=NO     -D
      BUILD_DOCS=NO     -D BUILD_opencv_python2=NO     -D BUILD_opencv_python3=ON     -D
      PYTHON3_EXECUTABLE=/usr/local/anaconda/bin/python     -D PYTHON3_INCLUDE_DIR=/usr/local/anaconda/include/python3.6m/     -D
      PYTHON3_LIBRARY=/usr/local/anaconda/lib/libpython3.6m.so     -D PYTHON_LIBRARY=/usr/local/anaconda/lib/libpython3.6m.so     -D
      PYTHON3_PACKAGES_PATH=/usr/local/anaconda/lib/python3.6/site-packages/     -D
      PYTHON3_NUMPY_INCLUDE_DIRS=/usr/local/anaconda/lib/python3.6/site-packages/numpy/core/include/     ..
      &&     make -j10 &&     make install &&     cd && rm -rf opencv
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install catboost
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install ocl-icd-libopencl1 ocl-icd-opencl-dev libboost-dev libboost-system-dev
      libboost-filesystem-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install lightgbm --install-option=--gpu
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install tqdm plotly ipywidgets hyperopt &&     jupyter nbextension enable
      --py --sys-prefix widgetsnbextension &&     conda install -c conda-forge nodejs
      &&     jupyter labextension install @jupyter-widgets/jupyterlab-manager &&     jupyter
      labextension install @jupyterlab/plotly-extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir working_dir
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.6.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /usr/bin/tini
  - CmdLine:
    - chmod +x /usr/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - jupyter
    - lab
    - --port=8888
    - --no-browser
    - --ip=0.0.0.0
    - --allow-root
    - --notebook-dir=/working_dir
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04
