{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.5.1",
      "SourceCode": "FROM ruby:2.5.1",
      "Platform": "",
      "From": {
        "Image": "ruby:2.5.1"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "v0.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_11.x | bash -     \u0026\u0026 curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list     \u0026\u0026 apt-get update -qq     \u0026\u0026  apt-get install -y nodejs       yarn       wget       build-essential       libpq-dev       postgresql-client       fonts-ipafont-gothic       fonts-ipafont-mincho       libfontconfig       libappindicator1       openjdk-8-jre       openjdk-8-jre-headless       openjdk-8-jdk       openjdk-8-jdk-headless       graphviz       unzip       --no-install-recommends     \u0026\u0026 wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CHROME_VERSION",
          "Name": "arg",
          "Value": "\"google-chrome-stable\""
        },
        {
          "CmdLine": [
            "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -     \u0026\u0026 echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list     \u0026\u0026 apt-get update -qqy     \u0026\u0026 apt-get -qqy install     ${CHROME_VERSION:-google-chrome-stable}     \u0026\u0026 rm /etc/apt/sources.list.d/google-chrome.list     \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CHROME_DRIVER_VERSION",
          "Name": "arg",
          "Value": "\"latest\""
        },
        {
          "CmdLine": [
            "CD_VERSION=$(if [ ${CHROME_DRIVER_VERSION:-latest} = \"latest\" ]; then echo $(wget -qO- https://chromedriver.storage.googleapis.com/LATEST_RELEASE); else echo $CHROME_DRIVER_VERSION; fi)   \u0026\u0026 echo \"Using chromedriver version: \"$CD_VERSION   \u0026\u0026 wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CD_VERSION/chromedriver_linux64.zip   \u0026\u0026 rm -rf /opt/selenium/chromedriver   \u0026\u0026 unzip /tmp/chromedriver_linux64.zip -d /opt/selenium   \u0026\u0026 rm /tmp/chromedriver_linux64.zip   \u0026\u0026 mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CD_VERSION   \u0026\u0026 chmod 755 /opt/selenium/chromedriver-$CD_VERSION   \u0026\u0026 ln -fs /opt/selenium/chromedriver-$CD_VERSION /usr/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":99"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "printf '#!/bin/sh\\nXvfb :99 -screen 0 1280x1024x24 \u0026\\nexec \"$@\"\\n' \u003e /tmp/entrypoint   \u0026\u0026 chmod +x /tmp/entrypoint   \u0026\u0026 mv /tmp/entrypoint /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler rails"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "irb"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}