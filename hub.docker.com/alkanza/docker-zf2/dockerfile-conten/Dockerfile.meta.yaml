MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Alija Sabic <sabic.alija@gmail.com>
    Name: maintainer
  - Key: UID
    Name: arg
    Value: null
  - Key: GID
    Name: arg
    Value: null
  - Key: USERNAME
    Name: arg
    Value: null
  - Key: GROUPNAME
    Name: arg
    Value: null
  - Key: DOWNLOAD_DIR
    Name: arg
    Value: null
  - Key: LOG_DIR
    Name: arg
    Value: null
  - Key: SNORT_INSTALL
    Name: arg
    Value: null
  - Key: SNORT_PROJECT
    Name: arg
    Value: null
  - Key: ECLIPSE_WORKSPACE
    Name: arg
    Value: null
  - Env:
    - Key: UID
      Value: ${UID:-1000}
    - Key: GID
      Value: ${GID:-1000}
    - Key: USERNAME
      Value: ${USERNAME:-developer}
    - Key: GROUPNAME
      Value: ${GROUPNAME:-Developer}
    - Key: DOWNLOAD_DIR
      Value: ${DOWNLOAD_DIR:-/home/temp}
    - Key: LOG_DIR
      Value: ${LOG_DIR:-/home/logs}
    - Key: SNORT_INSTALL
      Value: ${SNORT_INSTALL:-/opt/snort}
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    - Key: NO_AT_BRIDGE
      Value: "1"
    - Key: VER_ZLIB
      Value: 1.2.11
    - Key: VER_PKGCFG
      Value: 0.29.2
    - Key: VER_PCAP
      Value: 1.8.1
    - Key: VER_PCRE
      Value: "8.41"
    - Key: VER_SSL
      Value: 1.1.0g
    - Key: VER_LUAJIT
      Value: 2.0.5
    - Key: VER_HWLOC
      Value: 1.11.8
    - Key: VER_SAFEC
      Value: "10052013"
    - Key: VER_BOOST
      Value: 1.64.0
    - Key: DIR_BOOST
      Value: boost_1_64_0
    - Key: VER_RAGEL
      Value: "6.10"
    - Key: VER_HYPERSCAN
      Value: 4.5.1
    - Key: VER_DAQ
      Value: 2.2.2
    - Key: VER_SNORT
      Value: 3.0.0
    - Key: VER_SNORT_EXTRA
      Value: 1.0.0
    - Key: VER_SNORT_SUB
      Value: "240"
    - Key: TAG_SNORT
      Value: BUILD_240
    - Key: VER_ECLIPSE
      Value: oxygen/R/eclipse-cpp-oxygen-R-linux-gtk-x86_64
    Name: env
  - Env:
    - Key: SNORT_PROJECT
      Value: ${SNORT_PROJECT:-/home/${USERNAME}/snort-project}
    - Key: ECLIPSE_WORKSPACE
      Value: ${ECLIPSE_WORKSPACE:-/home/${USERNAME}/workspace}
    - Key: LUA_PATH
      Value: ${SNORT_INSTALL}/include/snort/lua/\?.lua\;\;
    - Key: SNORT_LUA_PATH
      Value: ${SNORT_INSTALL}/etc/snort
    - Key: URL_ZLIB
      Value: www.zlib.net/zlib-${VER_ZLIB}.tar.gz
    - Key: URL_PKGCFG
      Value: https://pkg-config.freedesktop.org/releases/pkg-config-${VER_PKGCFG}.tar.gz
    - Key: URL_PCAP
      Value: http://www.tcpdump.org/release/libpcap-${VER_PCAP}.tar.gz
    - Key: URL_PCRE
      Value: ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${VER_PCRE}.tar.gz
    - Key: URL_SSL
      Value: https://www.openssl.org/source/openssl-${VER_SSL}.tar.gz
    - Key: URL_LUAJIT
      Value: http://luajit.org/download/LuaJIT-${VER_LUAJIT}.tar.gz
    - Key: URL_HWLOC
      Value: https://www.open-mpi.org/software/hwloc/v1.11/downloads/hwloc-${VER_HWLOC}.tar.gz
    - Key: URL_LIBDNET
      Value: https://github.com/jncornett/libdnet.git
    - Key: URL_LIBDNET_ALT
      Value: https://github.com/dugsong/libdnet.git
    - Key: URL_SAFEC
      Value: http://downloads.sourceforge.net/project/safeclib/libsafec-${VER_SAFEC}.tar.gz
    - Key: URL_BOOST
      Value: https://dl.bintray.com/boostorg/release/${VER_BOOST}/source/${DIR_BOOST}.tar.gz
    - Key: URL_RAGEL
      Value: http://www.colm.net/files/ragel/ragel-${VER_RAGEL}.tar.gz
    - Key: URL_HYPERSCAN
      Value: https://github.com/01org/hyperscan/archive/v${VER_HYPERSCAN}.tar.gz
    - Key: URL_DAQ
      Value: https://www.snort.org/downloads/snortplus/daq-${VER_DAQ}.tar.gz
    - Key: URL_SNORT
      Value: https://www.snort.org/downloads/snortplus/snort-${VER_SNORT}-cmake.tar.gz
    - Key: URL_SNORT_GIT
      Value: https://github.com/snortadmin/snort3.git
    - Key: URL_SNORT_EXTRA
      Value: https://www.snort.org/downloads/snortplus/snort_extra-${VER_SNORT_EXTRA}-cmake.tar.gz
    - Key: URL_ECLIPSE
      Value: http://eclipse.mirror.rafal.ca/technology/epp/downloads/release/${VER_ECLIPSE}.tar.gz
    - Key: DIR_ZLIB
      Value: zlib-${VER_ZLIB}
    - Key: DIR_PKGCFG
      Value: pkg-config-${VER_PKGCFG}
    - Key: DIR_PCAP
      Value: libpcap-${VER_PCAP}
    - Key: DIR_PCRE
      Value: pcre-${VER_PCRE}
    - Key: DIR_SSL
      Value: openssl-${VER_SSL}
    - Key: DIR_LUAJIT
      Value: LuaJIT-${VER_LUAJIT}
    - Key: DIR_HWLOC
      Value: hwloc-${VER_HWLOC}
    - Key: DIR_LIBDNET
      Value: libdnet
    - Key: DIR_SAFEC
      Value: libsafec-${VER_SAFEC}
    - Key: DIR_RAGEL
      Value: ragel-${VER_RAGEL}
    - Key: DIR_HYPERSCAN
      Value: hyperscan-${VER_HYPERSCAN}
    - Key: DIR_DAQ
      Value: daq-${VER_DAQ}
    - Key: DIR_SNORT
      Value: snort-${VER_SNORT}
    - Key: DIR_SNORT_GIT
      Value: snort3
    - Key: DIR_ECLIPSE
      Value: eclipse
    - Key: LOG_ZLIB
      Value: zlib
    - Key: LOG_PKGCFG
      Value: pkgcfg
    - Key: LOG_PCAP
      Value: pcap
    - Key: LOG_PCRE
      Value: pcre
    - Key: LOG_SSL
      Value: openssl
    - Key: LOG_LUAJIT
      Value: luajit
    - Key: LOG_HWLOC
      Value: hwloc
    - Key: LOG_LIBDNET
      Value: libdnet
    - Key: LOG_SAFEC
      Value: safec
    - Key: LOG_RAGEL
      Value: ragel
    - Key: LOG_HYPERSCAN
      Value: hyperscan
    - Key: LOG_DAQ
      Value: daq
    - Key: LOG_SNORT
      Value: snort
    Name: env
  - CmdLine:
    - 'mkdir -p /home/${USERNAME} &&     echo "${USERNAME}:x:${UID}:${GID}:${GROUPNAME},,,:/home/${USERNAME}:/bin/bash"
      >> /etc/passwd &&     echo "${USERNAME}:x:${UID}:" >> /etc/group &&     mkdir
      -p /etc/sudoers.d &&     echo "${USERNAME} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/${USERNAME}
      &&     chmod 0440 /etc/sudoers.d/${USERNAME} &&     chown ${UID}:${GID} -R /home/${USERNAME}
      &&     mkdir -p ${DOWNLOAD_DIR} && mkdir -p ${LOG_DIR}'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y      software-properties-common         &&     add-apt-repository
      ppa:webupd8team/java -y &&     echo oracle-java7-installer shared/accepted-oracle-license-v1-1
      select true | /usr/bin/debconf-set-selections &&     apt-get update && apt-get
      install -y      w3m                                       wget                                      gdb                                       nautilus                                  autoconf                                  autotools-dev                             build-essential                           cmake                                     git-core                                  bison                                     flex                                      python                                    libpcap-dev                               libtool                                   liblzma-dev                               libsqlite3-dev                            cpputest                                  asciidoc                                  source-highlight                          software-properties-common                oracle-java8-installer                    dbus-x11                                  packagekit-gtk3-module                    libcanberra-gtk-module                    libcanberra-gtk3-module            &&     apt-get
      autoremove -y && apt-get clean
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${DOWNLOAD_DIR}
  - CmdLine:
    - wget -qO- ${URL_ZLIB} | tar xz &&     cd ${DIR_ZLIB} &&     ./configure  | tee
      ${LOG_DIR}/${LOG_ZLIB}_configure.log    2>&1 &&     make         | tee ${LOG_DIR}/${LOG_ZLIB}_make.log         2>&1
      &&     make install | tee ${LOG_DIR}/${LOG_ZLIB}_make_install.log 2>&1 &&     cd
      .. && rm -rf ${DIR_ZLIB}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- ${URL_PKGCFG} | tar xz &&     cd ${DIR_PKGCFG} &&     ./configure
      --with-internal-glib | tee ${LOG_DIR}/${LOG_PKGCFG}_configure.log 2>&1 &&     make         |
      tee ${LOG_DIR}/${LOG_PKGCFG}_make.log                          2>&1 &&     make
      install | tee ${LOG_DIR}/${LOG_PKGCFG}_make_install.log                  2>&1
      &&     cd .. && rm -rf ${DIR_PKGCFG}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- ${URL_PCAP} | tar xz &&     cd ${DIR_PCAP} &&     ./configure  | tee
      ${LOG_DIR}/${LOG_PCAP}_configure.log    2>&1 &&     make         | tee ${LOG_DIR}/${LOG_PCAP}_make.log         2>&1
      &&     make install | tee ${LOG_DIR}/${LOG_PCAP}_make_install.log 2>&1 &&     cd
      .. && rm -rf ${DIR_PCAP}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- ${URL_PCRE} | tar xz &&     cd ${DIR_PCRE} &&     ./configure  | tee
      ${LOG_DIR}/${LOG_PCRE}_configure.log    2>&1 &&     make         | tee ${LOG_DIR}/${LOG_PCRE}_make.log         2>&1
      &&     make install | tee ${LOG_DIR}/${LOG_PCRE}_make_install.log 2>&1 &&     cd
      .. && rm -rf ${DIR_PCRE}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- ${URL_SSL} | tar xz &&     cd ${DIR_SSL} &&     ./config     | tee
      ${LOG_DIR}/${LOG_SSL}_configure.log    2>&1 &&     make         | tee ${LOG_DIR}/${LOG_SSL}_make.log         2>&1
      &&     make install | tee ${LOG_DIR}/${LOG_SSL}_make_install.log 2>&1 &&     cd
      .. && rm -rf ${DIR_SSL}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ${URL_LUAJIT} && wget -qO- ${URL_LUAJIT} | tar xz &&     cd ${DIR_LUAJIT}
      &&     ./configure  | tee ${LOG_DIR}/${LOG_LUAJIT}_configure.log    2>&1 &&     make         |
      tee ${LOG_DIR}/${LOG_LUAJIT}_make.log         2>&1 &&     make install | tee
      ${LOG_DIR}/${LOG_LUAJIT}_make_install.log 2>&1 &&     cd .. && rm -rf ${DIR_LUAJIT}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- ${URL_HWLOC} | tar xz &&     cd ${DIR_HWLOC} &&     ./configure  |
      tee ${LOG_DIR}/${LOG_HWLOC}_configure.log    2>&1 &&     make         | tee
      ${LOG_DIR}/${LOG_HWLOC}_make.log         2>&1 &&     make install | tee ${LOG_DIR}/${LOG_HWLOC}_make_install.log
      2>&1 &&     cd .. && rm -rf ${DIR_HWLOC}
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone ${URL_LIBDNET} &&     cd ${DIR_LIBDNET} &&     ./configure  | tee
      ${LOG_DIR}/${LOG_LIBDNET}_configure.log    2>&1 &&     make         | tee ${LOG_DIR}/${LOG_LIBDNET}_make.log         2>&1
      &&     make install | tee ${LOG_DIR}/${LOG_LIBDNET}_make_install.log 2>&1 &&     cd
      .. && rm -rf ${DIR_LIBDNET}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- ${URL_SAFEC} | tar xz &&     cd ${DIR_SAFEC} &&     ./configure  |
      tee ${LOG_DIR}/${LOG_SAFEC}_configure.log    2>&1 &&     make         | tee
      ${LOG_DIR}/${LOG_SAFEC}_make.log         2>&1 &&     make install | tee ${LOG_DIR}/${LOG_SAFEC}_make_install.log
      2>&1 &&     cd .. && rm -rf ${DIR_SAFEC}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- ${URL_RAGEL} | tar xz &&     cd ${DIR_RAGEL} &&     ./configure  |
      tee ${LOG_DIR}/${LOG_RAGEL}_configure.log    2>&1 &&     make         | tee
      ${LOG_DIR}/${LOG_RAGEL}_make.log         2>&1 &&     make install | tee ${LOG_DIR}/${LOG_RAGEL}_make_install.log
      2>&1 &&     cd .. && rm -rf ${DIR_RAGEL}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- ${URL_BOOST} | tar xz &&     wget -qO- ${URL_HYPERSCAN} | tar xz &&     mkdir
      ${DIR_HYPERSCAN}-build && cd ${DIR_HYPERSCAN}-build &&     cmake -DCMAKE_INSTALL_PREFIX=/usr/local           -DBOOST_ROOT=${DOWNLOAD_DIR}/${DIR_BOOST}/           ../${DIR_HYPERSCAN}                  |
      tee ${LOG_DIR}/${LOG_HYPERSCAN}_configure.log    2>&1 &&     make         |
      tee ${LOG_DIR}/${LOG_HYPERSCAN}_make.log         2>&1 &&     make install |
      tee ${LOG_DIR}/${LOG_HYPERSCAN}_make_install.log 2>&1 &&     ./bin/unit-hyperscan
      &&     cd .. && rm -rf ${DIR_HYPERSCAN} && rm -rf ${DIR_HYPERSCAN}-build    &&     rm
      -rf ${DIR_BOOST}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- ${URL_DAQ} | tar xz &&     cd ${DIR_DAQ} &&     ./configure  | tee
      ${LOG_DIR}/${LOG_DAQ}_configure.log    2>&1 &&     make         | tee ${LOG_DIR}/${LOG_DAQ}_make.log         2>&1
      &&     make install | tee ${LOG_DIR}/${LOG_DAQ}_make_install.log 2>&1 &&     ldconfig
      &&     cd .. && rm -rf ${DIR_DAQ}
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone ${URL_SNORT_GIT}   &&     cd ${DIR_SNORT_GIT}          &&     git
      checkout tags/${TAG_SNORT} &&     ./configure_cmake.sh --prefix=${SNORT_INSTALL}                  |
      tee ${LOG_DIR}/${LOG_SNORT}_configure.log    2>&1 &&     cd build &&      make
      -j 8    | tee ${LOG_DIR}/${LOG_SNORT}_make.log         2>&1 &&     make install
      | tee ${LOG_DIR}/${LOG_SNORT}_make_install.log 2>&1 &&     ln -s ${SNORT_INSTALL}/bin/snort
      /usr/sbin/snort                 &&     cd .. && rm -rf ${DIR_SNORT_GIT}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- ${URL_ECLIPSE} | tar xz &&     mv ${DIR_ECLIPSE} /opt/
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ${SNORT_PROJECT} &&     echo ${ECLIPSE_WORKSPACE} &&     mkdir -p ${SNORT_PROJECT}                       &&     mkdir
      -p ${ECLIPSE_WORKSPACE}                   &&     cd ${SNORT_PROJECT}/..                          &&     git
      clone ${URL_SNORT_GIT}                      &&     cd ${SNORT_PROJECT}                             &&     cmake
      -G"Eclipse CDT4 - Unix Makefiles"                      -D_ECLIPSE_VERSION=4.7                                 -DCMAKE_BUILD_TYPE=Debug                               -DCMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT=TRUE           -DCMAKE_ECLIPSE_MAKE_ARGUMENTS=-j4                     ../${DIR_SNORT_GIT}
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 /home/${USERNAME} &&     chown -R ${USERNAME}:${USERNAME} /home/${USERNAME}
      &&     chmod 777 ${DOWNLOAD_DIR}   &&     chmod 777 ${LOG_DIR}
    Name: run
    PrependShell: true
  - Name: user
    User: ${USERNAME}
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
