MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     build-essential     fonts-powerline     git     locales     software-properties-common     tmux     xsel     wget     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     libncurses5-dev     zlib1g-dev     &&
      rm -rf /var/lib/apt/lists/*     && mkdir -p /tools && cd /tools     && wget
      -O - https://github.com/Kitware/CMake/releases/download/v3.14.1/cmake-3.14.1.tar.gz
      | tar -zxvf -     && mv /tools/cmake-3.14.1 /tools/cmake && cd /tools/cmake     &&
      ./configure && make -j8     && wget -c -O - http://releases.llvm.org/7.0.1/clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz
      | tar -Jxvf - -C /tools     && git clone --depth=1 --recursive https://github.com/MaskRay/ccls
      /tools/ccls && cd /tools/ccls     && git submodule update --init     && /tools/cmake/bin/cmake
      -H. -BRelease -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/tools/clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04     &&
      /tools/cmake/bin/cmake --build Release --target install     && rm -rf /tools
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:neovim-ppa/unstable -y     && apt-get update && apt-get
      install -y --no-install-recommends     neovim     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PYENV_ROOT
      Value: /root/.pyenv/
    Name: env
  - Env:
    - Key: PATH
      Value: $PYENV_ROOT/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     libssl-dev     libbz2-dev     libffi-dev     libreadline-dev     libsqlite3-dev     python-openssl     &&
      rm -rf /var/lib/apt/lists/*     && git clone https://github.com/pyenv/pyenv.git
      /root/.pyenv     && git clone https://github.com/pyenv/pyenv-virtualenv.git
      /root/.pyenv/plugins/pyenv-virtualenv     && echo 'eval "$(pyenv init -)"' >>
      /root/.bashrc     && echo 'eval "$(pyenv virtualenv-init -)"' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - . /root/.bashrc     && pyenv install 3.7.0     && pyenv install 2.7.15     &&
      pyenv virtualenv 3.7.0 neovim3     && pyenv virtualenv 2.7.15 neovim2     &&
      pyenv activate neovim3     && pip3 install pynvim flake8 python-language-server     &&
      pyenv activate neovim2     && pip2 install pynvim flake8 python-language-server
    Name: run
    PrependShell: true
  - Env:
    - Key: XDG_CONFIG_HOME
      Value: /root/.config/
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.tmux.conf
    - /root/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./alias.bash
    - /root/
  - CmdLine:
    - echo "source /root/alias.bash" >> /root/.bashrc     && mkdir -p $XDG_CONFIG_HOME     &&
      git clone -b ubuntu https://github.com/arwtyxouymz/dotfiles.git     && mv /dotfiles/.config/nvim/
      $XDG_CONFIG_HOME     && rm -rf /dotfiles     && nvim +UpdateRemotePlugins +qa
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
