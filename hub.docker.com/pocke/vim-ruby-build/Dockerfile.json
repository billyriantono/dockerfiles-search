{
  "MetaArgs": [
    {
      "Key": "os",
      "DefaultValue": "debian",
      "ProvidedValue": null,
      "Value": "debian"
    },
    {
      "Key": "version",
      "DefaultValue": "stretch",
      "ProvidedValue": null,
      "Value": "stretch"
    },
    {
      "Key": "variant",
      "DefaultValue": "-slim",
      "ProvidedValue": null,
      "Value": "-slim"
    },
    {
      "Key": "mirror",
      "DefaultValue": "http://deb.debian.org/debian",
      "ProvidedValue": null,
      "Value": "http://deb.debian.org/debian"
    }
  ],
  "Stages": [
    {
      "Name": "build",
      "BaseName": "${os}:${version}${variant}",
      "SourceCode": "FROM ${os}:${version}${variant} AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "${os}:${version}${variant}"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "mirror",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "version",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "echo \"deb-src ${mirror} ${version} main\" \u003e /etc/apt/sources.list.d/deb-src.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo $'Dpkg::Use-Pty \"0\";\\nquiet \"2\";\\nAPT::Install-Recommends \"0\";' \u003e /etc/apt/apt.conf.d/99autopilot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'Acquire::HTTP::No-Cache \"True\";' \u003e /etc/apt/apt.conf.d/99no-cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "system_ruby",
          "Name": "arg",
          "Value": "ruby2.3"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install lib${system_ruby}:amd64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install lib${system_ruby}:i386"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get build-dep ${system_ruby}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get build-dep vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install build-essential gcc-multilib bison rdfind git curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "all-ruby.patch",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "git clone https://github.com/akr/all-ruby /all-ruby"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/all-ruby"
        },
        {
          "CmdLine": [
            "git apply /tmp/all-ruby.patch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 1.8.7-p374 1.9.3-p551 2.0.0-p648 2.1.10 2.2.10 2.3.7 2.4.4 2.5.1 | xargs -n 1 -P $(nproc) rake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /all-ruby/1.8.7-p374/lib/libruby.so /lib/libruby.so.1.8 \u0026\u0026     ln -s /all-ruby/1.9.3-p551/lib/libruby.so /lib/libruby.so.1.9 \u0026\u0026     ln -s /all-ruby/2.0.0-p648/lib/libruby.so /lib/libruby.so.2.0 \u0026\u0026     ln -s /all-ruby/2.1.10/lib/libruby.so /lib/libruby.so.2.1 \u0026\u0026     ln -s /all-ruby/2.2.10/lib/libruby.so /lib/libruby.so.2.2 \u0026\u0026     ln -s /all-ruby/2.3.7/lib/libruby.so /lib/libruby.so.2.3 \u0026\u0026     ln -s /all-ruby/2.4.4/lib/libruby.so /lib/libruby.so.2.4 \u0026\u0026     ln -s /all-ruby/2.5.1/lib/libruby.so /lib/libruby.so.2.5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "initialize-vim.sh",
            "/bin/"
          ]
        },
        {
          "CmdLine": [
            "git clone --depth 1 https://github.com/vim/vim /vim-on-docker-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /vim-for-rubies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 1.8.7-p374 yes          1.8.7-p374 dynamic          1.9.3-p551 yes          1.9.3-p551 dynamic          2.0.0-p648 yes         2.0.0-p648 dynamic         2.1.10 yes          2.1.10 dynamic          2.2.10 yes          2.2.10 dynamic          2.3.7 yes          2.3.7 dynamic          2.4.4 yes          2.4.4 dynamic          2.5.1 yes          2.5.1 dynamic          | xargs -n 2 -P 4 initialize-vim.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /bin/initialize-vim.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "build-vim.sh",
            "build-vim-all.sh",
            "/bin/"
          ]
        }
      ]
    }
  ]
}