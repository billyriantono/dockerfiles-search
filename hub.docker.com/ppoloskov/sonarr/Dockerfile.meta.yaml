MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Labels:
    - Key: description
      Value: '"Slim (-ish) image for Sonarr 2 based on Alpine"'
    Name: label
  - Labels:
    - Key: url
      Value: '"https://sonarr.tv"'
    Name: label
  - Labels:
    - Key: vcs-ref
      Value: '"https://github.com/ppoloskov/docker-sonarr"'
    Name: label
  - Env:
    - Key: PUID
      Value: "1001"
    Name: env
  - Env:
    - Key: PGID
      Value: "1001"
    Name: env
  - Env:
    - Key: TZ
      Value: '"Europe/Moscow"'
    Name: env
  - Env:
    - Key: SETTINGS
      Value: '"/config/config.xml"'
    Name: env
  - Name: workdir
    Path: /opt
  - CmdLine:
    - apk add --no-cache mono --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing
      &&     apk add --no-cache tzdata sqlite-libs mediainfo curl &&     curl -sL
      http://update.sonarr.tv/v2/master/mono/NzbDrone.master.tar.gz | tar xz &&     apk
      del curl &&     addgroup -g ${PGID} notroot &&     adduser -D -H -G notroot
      -u ${PUID} notroot &&     mkdir /config &&     echo -e '<Config>\n<UrlBase>/sonarr</UrlBase>\n</Config>'
      > $SETTINGS &&     chown -R notroot:notroot /opt /config
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /config
    - /tv
  - Name: expose
    Ports:
    - "8989"
  - Health:
      Test:
      - CMD-SHELL
      - netstat -an | grep 8989 > /dev/null; if [ 0 != $? ]; then exit 1; fi;
    Name: healthcheck
  - Name: user
    User: notroot
  - CmdLine:
    - mono
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /opt/NzbDrone/NzbDrone.exe
    - --nobrowser
    - --data=/config
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
