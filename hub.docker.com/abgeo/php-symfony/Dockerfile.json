{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-apache",
      "SourceCode": "FROM php:7.2-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2-apache"
      },
      "Commands": [
        {
          "Maintainer": "Temuri Takalandze(ABGEO) \u003ctakalandzet@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "APACHE_DOCUMENT_ROOT",
          "Name": "arg",
          "Value": "/var/www/html/public"
        },
        {
          "Env": [
            {
              "Key": "APACHE_DOCUMENT_ROOT",
              "Value": "${APACHE_DOCUMENT_ROOT}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get -y install wget nano lnav git zip unzip sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y zlib1g-dev libicu-dev     \u0026\u0026 docker-php-ext-install pdo_mysql intl zip opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --no-install-recommends --assume-yes --quiet ca-certificates curl git     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Lsf 'https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz' | tar -C '/usr/local' -xvzf -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "go get github.com/mailhog/mhsendmail"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /root/go/bin/mhsendmail /usr/bin/mhsendmail"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'sendmail_path = /usr/bin/mhsendmail --smtp-addr mailhog:1025' \u003e /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd admin -s /bin/bash -m -g www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"admin ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo chown admin:www-data /var/www/html/ -R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get autoclean \u0026\u0026 apt-get autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}