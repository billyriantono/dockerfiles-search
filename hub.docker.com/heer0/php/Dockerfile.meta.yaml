MetaArgs: null
Stages:
- BaseName: debian:stretch-slim
  Commands:
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake
        \t\tpkg-config \t\tre2c"
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y \t\t$PHPIZE_DEPS \t\tca-certificates \t\tcurl
      \t\tlibargon2-0 \t\tlibedit2 \t\tlibsqlite3-0 \t\tlibxml2 \t\txz-utils \t--no-install-recommends
      && rm -r /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 1729F83938DA44E27BA0F4D3DBDB397470D12172 B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.2.0
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://secure.php.net/get/php-7.2.0.tar.xz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"https://secure.php.net/get/php-7.2.0.tar.xz.asc/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"87572a6b924670a5d4aac276aaa4a94321936283df391d702c845ffc112db095"'
    - Key: PHP_MD5
      Value: '""'
    Name: env
  - CmdLine:
    - "set -xe; \t\tfetchDeps=' \t\twget \t'; \tif ! command -v gpg > /dev/null; then
      \t\tfetchDeps=\"$fetchDeps \t\t\tdirmngr \t\t\tgnupg \t\t\"; \tfi; \tapt-get
      update; \tapt-get install -y --no-install-recommends $fetchDeps; \trm -rf /var/lib/apt/lists/*;
      \t\tmkdir -p /usr/src; \tcd /usr/src; \t\twget -O php.tar.xz \"$PHP_URL\"; \t\tif
      [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum
      -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\"
      | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\twget -O php.tar.xz.asc
      \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS;
      do \t\t\tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \t\tdone;
      \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \t\trm -rf \"$GNUPGHOME\";
      \tfi; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      $fetchDeps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - "apt-get update && apt-get install -y \tgit \ttcl \tunzip \twget \t--no-install-recommends
      && rm -r /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget http://sqlite.org/2017/sqlite-src-3190300.zip \t&& unzip sqlite-src-3190300.zip
      \t&& rm -f sqlite-src-3190300.zip \t&& mv sqlite-src-3190300 /opt/sqlite3 \t&&
      cd /opt/sqlite3 \t&& export CFLAGS='-DSQLITE_ENABLE_UPDATE_DELETE_LIMIT=1' \t&&
      ./configure \t&& make \t&& make install"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe \t&& buildDeps=\" \t\t$PHP_EXTRA_BUILD_DEPS \t\tlibargon2-0-dev \t\tlibcurl4-openssl-dev
      \t\tlibedit-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tzlib1g-dev
      \t\" \t&& apt-get update && apt-get install -y $buildDeps --no-install-recommends
      && rm -rf /var/lib/apt/lists/* \t\t&& export CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\"
      \t\tLDFLAGS=\"$PHP_LDFLAGS\" \t&& docker-php-source extract \t&& cd /usr/src/php
      \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& debMultiarch=\"$(dpkg-architecture
      --query DEB_BUILD_MULTIARCH)\" \t&& if [ ! -d /usr/include/curl ]; then \t\tln
      -sT \"/usr/include/$debMultiarch/curl\" /usr/local/include/curl; \tfi \t&& ./configure
      \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"
      \t\t\t\t--with-sqlite3=shared,/usr/local \t\t--with-pdo-sqlite=shared,/usr/local
      \t\t\t\t--disable-cgi \t\t\t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd
      \t\t--with-password-argon2 \t\t\t\t--with-curl \t\t--with-libedit \t\t--with-openssl
      \t\t--with-zlib \t\t\t\t$(test \"$gnuArch\" = 's390x-linux-gnu' && echo '--without-pcre-jit')
      \t\t--with-libdir=\"lib/$debMultiarch\" \t\t\t\t$PHP_EXTRA_CONFIGURE_ARGS \t&&
      make -j \"$(nproc)\" \t&& make install \t&& { find /usr/local/bin /usr/local/sbin
      -type f -executable -exec strip --strip-all '{}' + || true; } \t&& make clean
      \t&& cd / \t&& docker-php-source delete \t\t&& apt-get purge -y --auto-remove
      -o APT::AutoRemove::RecommendsImportant=false $buildDeps \t\t&& pecl update-channels
      \t&& rm -rf /tmp/pear ~/.pearrc"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - docker-php-entrypoint
    - /usr/local/bin/
  - CmdLine:
    - "pecl install redis-3.1.3 \t&& docker-php-ext-enable redis"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y libzip-dev zlib1g-dev \t&& docker-php-ext-install
      -j$(nproc) zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y imagemagick libmagickwand-dev \t&& pecl
      install imagick \t&& docker-php-ext-enable imagick"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable sqlite3 pdo_sqlite
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install -j$(nproc) pcntl
    Name: run
    PrependShell: true
  - CmdLine:
    - "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"
      \t&& php composer-setup.php --install-dir=/usr/local/bin/ --filename=composer
      \t&& php -r \"unlink('composer-setup.php');\""
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y wget
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - php
    - -a
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stretch-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch-slim
