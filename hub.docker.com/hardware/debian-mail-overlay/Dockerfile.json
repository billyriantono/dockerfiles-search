{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Key": "BUILD_CORES",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "SKALIBS_VER",
          "Name": "arg",
          "Value": "2.8.1.0"
        },
        {
          "Key": "EXECLINE_VER",
          "Name": "arg",
          "Value": "2.5.1.0"
        },
        {
          "Key": "S6_VER",
          "Name": "arg",
          "Value": "2.8.0.1"
        },
        {
          "Key": "RSPAMD_VER",
          "Name": "arg",
          "Value": "1.9.4"
        },
        {
          "Key": "GUCCI_VER",
          "Name": "arg",
          "Value": "0.1.0"
        },
        {
          "Key": "SKALIBS_SHA256_HASH",
          "Name": "arg",
          "Value": "\"431c6507b4a0f539b6463b4381b9b9153c86ad75fa3c6bfc9dc4722f00b166ba\""
        },
        {
          "Key": "EXECLINE_SHA256_HASH",
          "Name": "arg",
          "Value": "\"b1a756842947488404db8173bbae179d6e78b6ef551ec683acca540ecaf22677\""
        },
        {
          "Key": "S6_SHA256_HASH",
          "Name": "arg",
          "Value": "\"dbe08f5b76c15fa32a090779b88fb2de9a9a107c3ac8ce488931dd39aa1c31d8\""
        },
        {
          "Key": "RSPAMD_SHA256_HASH",
          "Name": "arg",
          "Value": "\"e4720c1f45defd07dd17b9563d0ddc480c70beadbc1a833235c077960092e030\""
        },
        {
          "Key": "GUCCI_SHA256_HASH",
          "Name": "arg",
          "Value": "\"44199d8edf88442324951cafeaaea047f524deb8d887a0174cacc3aaff139740\""
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"s6 + rspamd image based on Debian\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Hardware \u003ccontact@meshup.net\u003e\""
            },
            {
              "Key": "rspamd_version",
              "Value": "\"Rspamd v$RSPAMD_VER built from source\""
            },
            {
              "Key": "s6_version",
              "Value": "\"s6 v$S6_VER built from source\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "NB_CORES=${BUILD_CORES-$(getconf _NPROCESSORS_CONF)}     \u0026\u0026 BUILD_DEPS=\"     cmake     gcc     make     ragel     wget     pkg-config     liblua5.1-0-dev     libluajit-5.1-dev     libglib2.0-dev     libevent-dev     libsqlite3-dev     libicu-dev     libssl-dev     libhyperscan-dev     libjemalloc-dev     libmagic-dev\"  \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y -q --no-install-recommends     ${BUILD_DEPS}     libevent-2.0-5     libglib2.0-0     libssl1.1     libmagic1     liblua5.1-0     libluajit-5.1-2     libsqlite3-0     libhyperscan4     libjemalloc1     sqlite3     openssl     ca-certificates     gnupg     dirmngr  \u0026\u0026 cd /tmp  \u0026\u0026 SKALIBS_TARBALL=\"skalibs-${SKALIBS_VER}.tar.gz\"  \u0026\u0026 wget -q https://skarnet.org/software/skalibs/${SKALIBS_TARBALL}  \u0026\u0026 CHECKSUM=$(sha256sum ${SKALIBS_TARBALL} | awk '{print $1}')  \u0026\u0026 if [ \"${CHECKSUM}\" != \"${SKALIBS_SHA256_HASH}\" ]; then echo \"${SKALIBS_TARBALL} : bad checksum\" \u0026\u0026 exit 1; fi  \u0026\u0026 tar xzf ${SKALIBS_TARBALL} \u0026\u0026 cd skalibs-${SKALIBS_VER}  \u0026\u0026 ./configure --prefix=/usr --datadir=/etc  \u0026\u0026 make \u0026\u0026 make install  \u0026\u0026 cd /tmp  \u0026\u0026 EXECLINE_TARBALL=\"execline-${EXECLINE_VER}.tar.gz\"  \u0026\u0026 wget -q https://skarnet.org/software/execline/${EXECLINE_TARBALL}  \u0026\u0026 CHECKSUM=$(sha256sum ${EXECLINE_TARBALL} | awk '{print $1}')  \u0026\u0026 if [ \"${CHECKSUM}\" != \"${EXECLINE_SHA256_HASH}\" ]; then echo \"${EXECLINE_TARBALL} : bad checksum\" \u0026\u0026 exit 1; fi  \u0026\u0026 tar xzf ${EXECLINE_TARBALL} \u0026\u0026 cd execline-${EXECLINE_VER}  \u0026\u0026 ./configure --prefix=/usr  \u0026\u0026 make \u0026\u0026 make install  \u0026\u0026 cd /tmp  \u0026\u0026 S6_TARBALL=\"s6-${S6_VER}.tar.gz\"  \u0026\u0026 wget -q https://skarnet.org/software/s6/${S6_TARBALL}  \u0026\u0026 CHECKSUM=$(sha256sum ${S6_TARBALL} | awk '{print $1}')  \u0026\u0026 if [ \"${CHECKSUM}\" != \"${S6_SHA256_HASH}\" ]; then echo \"${S6_TARBALL} : bad checksum\" \u0026\u0026 exit 1; fi  \u0026\u0026 tar xzf ${S6_TARBALL} \u0026\u0026 cd s6-${S6_VER}  \u0026\u0026 ./configure --prefix=/usr --bindir=/usr/bin --sbindir=/usr/sbin  \u0026\u0026 make \u0026\u0026 make install  \u0026\u0026 cd /tmp  \u0026\u0026 RSPAMD_TARBALL=\"${RSPAMD_VER}.tar.gz\"  \u0026\u0026 wget -q https://github.com/vstakhov/rspamd/archive/${RSPAMD_TARBALL}  \u0026\u0026 CHECKSUM=$(sha256sum ${RSPAMD_TARBALL} | awk '{print $1}')  \u0026\u0026 if [ \"${CHECKSUM}\" != \"${RSPAMD_SHA256_HASH}\" ]; then echo \"${RSPAMD_TARBALL} : bad checksum\" \u0026\u0026 exit 1; fi  \u0026\u0026 tar xzf ${RSPAMD_TARBALL} \u0026\u0026 cd rspamd-${RSPAMD_VER}  \u0026\u0026 cmake     -DCMAKE_INSTALL_PREFIX=/usr     -DCONFDIR=/etc/rspamd     -DRUNDIR=/run/rspamd     -DDBDIR=/var/mail/rspamd     -DLOGDIR=/var/log/rspamd     -DPLUGINSDIR=/usr/share/rspamd     -DLIBDIR=/usr/lib/rspamd     -DNO_SHARED=ON     -DWANT_SYSTEMD_UNITS=OFF     -DENABLE_TORCH=ON     -DENABLE_HIREDIS=ON     -DINSTALL_WEBUI=ON     -DENABLE_OPTIMIZATION=ON     -DENABLE_HYPERSCAN=ON     -DENABLE_JEMALLOC=ON     -DJEMALLOC_ROOT_DIR=/jemalloc     .  \u0026\u0026 make -j${NB_CORES}  \u0026\u0026 make install  \u0026\u0026 cd /tmp  \u0026\u0026 GUCCI_BINARY=\"gucci-v${GUCCI_VER}-linux-amd64\"  \u0026\u0026 wget -q https://github.com/noqcks/gucci/releases/download/${GUCCI_VER}/${GUCCI_BINARY}  \u0026\u0026 CHECKSUM=$(sha256sum ${GUCCI_BINARY} | awk '{print $1}')  \u0026\u0026 if [ \"${CHECKSUM}\" != \"${GUCCI_SHA256_HASH}\" ]; then echo \"${GUCCI_BINARY} : bad checksum\" \u0026\u0026 exit 1; fi  \u0026\u0026 chmod +x ${GUCCI_BINARY}  \u0026\u0026 mv ${GUCCI_BINARY} /usr/local/bin/gucci  \u0026\u0026 apt-get purge -y ${BUILD_DEPS}  \u0026\u0026 apt-get autoremove -y  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /tmp/* /var/lib/apt/lists/* /var/cache/debconf/*-old"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}