{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Simple DNS authoritative server with DNSSEC support\"       maintainer=\"Hardware \u003ccontact@meshup.net\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "NSD_VERSION",
          "Name": "arg",
          "Value": "4.2.1"
        },
        {
          "Key": "GPG_SHORTID",
          "Name": "arg",
          "Value": "\"0x7E045F8D\""
        },
        {
          "Key": "GPG_FINGERPRINT",
          "Name": "arg",
          "Value": "\"EDFA A3F2 CA4E 6EB0 5681  AF8E 9F6F 1C2D 7E04 5F8D\""
        },
        {
          "Key": "SHA256_HASH",
          "Name": "arg",
          "Value": "\"d17c0ea3968cb0eb2be79f2f83eb299b7bfcc554b784007616eed6ece828871f\""
        },
        {
          "Env": [
            {
              "Key": "UID",
              "Value": "991"
            },
            {
              "Key": "GID",
              "Value": "991"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual build-dependencies       gnupg       build-base       libevent-dev       openssl-dev       ca-certificates  \u0026\u0026 apk add --no-cache       ldns       ldns-tools       libevent       openssl       tini  \u0026\u0026 cd /tmp  \u0026\u0026 wget -q https://www.nlnetlabs.nl/downloads/nsd/nsd-${NSD_VERSION}.tar.gz  \u0026\u0026 wget -q https://www.nlnetlabs.nl/downloads/nsd/nsd-${NSD_VERSION}.tar.gz.asc  \u0026\u0026 echo \"Verifying both integrity and authenticity of nsd-${NSD_VERSION}.tar.gz...\"  \u0026\u0026 CHECKSUM=$(sha256sum nsd-${NSD_VERSION}.tar.gz | awk '{print $1}')  \u0026\u0026 if [ \"${CHECKSUM}\" != \"${SHA256_HASH}\" ]; then echo \"ERROR: Checksum does not match!\" \u0026\u0026 exit 1; fi  \u0026\u0026 (     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys ${GPG_SHORTID} ||     gpg --keyserver keyserver.pgp.com --recv-keys ${GPG_SHORTID} ||     gpg --keyserver pgp.mit.edu --recv-keys ${GPG_SHORTID}     )  \u0026\u0026 FINGERPRINT=\"$(LANG=C gpg --verify nsd-${NSD_VERSION}.tar.gz.asc nsd-${NSD_VERSION}.tar.gz 2\u003e\u00261   | sed -n \"s#Primary key fingerprint: \\(.*\\)#\\1#p\")\"  \u0026\u0026 if [ -z \"${FINGERPRINT}\" ]; then echo \"ERROR: Invalid GPG signature!\" \u0026\u0026 exit 1; fi  \u0026\u0026 if [ \"${FINGERPRINT}\" != \"${GPG_FINGERPRINT}\" ]; then echo \"ERROR: Wrong GPG fingerprint!\" \u0026\u0026 exit 1; fi  \u0026\u0026 echo \"All seems good, now unpacking nsd-${NSD_VERSION}.tar.gz...\"  \u0026\u0026 tar xzf nsd-${NSD_VERSION}.tar.gz \u0026\u0026 cd nsd-${NSD_VERSION}  \u0026\u0026 ./configure     CFLAGS=\"-O2 -flto -fPIE -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -fstack-protector-strong -Wformat -Werror=format-security\"     LDFLAGS=\"-Wl,-z,now -Wl,-z,relro\"  \u0026\u0026 make \u0026\u0026 make install  \u0026\u0026 apk del build-dependencies  \u0026\u0026 rm -rf /var/cache/apk/* /tmp/* /root/.gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin",
            "/usr/local/bin"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/zones",
            "/etc/nsd",
            "/var/db/nsd"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "53",
            "53/udp"
          ]
        },
        {
          "CmdLine": [
            "run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}