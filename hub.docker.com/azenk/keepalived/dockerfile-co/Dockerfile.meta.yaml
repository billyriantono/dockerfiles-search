MetaArgs: null
Stages:
- BaseName: adoptopenjdk/openjdk8-openj9:alpine
  Commands:
  - Maintainer: Steffen Bleul <sbl@blacklabelops.com>
    Name: maintainer
  - Key: CROWD_VERSION
    Name: arg
    Value: 3.4.3
  - Key: CONTAINER_UID
    Name: arg
    Value: "1000"
  - Key: CONTAINER_GID
    Name: arg
    Value: "1000"
  - Key: BUILD_DATE
    Name: arg
    Value: undefined
  - Env:
    - Key: CROWD_HOME
      Value: /var/atlassian/crowd
    - Key: CROWD_INSTALL
      Value: /opt/crowd
    - Key: CROWD_PROXY_NAME
      Value: ""
    - Key: CROWD_PROXY_PORT
      Value: ""
    - Key: CROWD_PROXY_SCHEME
      Value: ""
    - Key: KEYSTORE
      Value: $JAVA_HOME/jre/lib/security/cacerts
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - splash-context.xml
    - /opt/crowd/webapps/splash.xml
  - CmdLine:
    - export CONTAINER_USER=crowd &&      export CONTAINER_GROUP=crowd &&      addgroup
      -g $CONTAINER_GID $CONTAINER_GROUP &&      adduser -u $CONTAINER_UID             -G
      $CONTAINER_GROUP             -h /home/$CONTAINER_USER             -s /bin/bash             -S
      $CONTAINER_USER &&      apk add --update       bash       ca-certificates       curl       gzip       su-exec       tini       wget       xmlstarlet       &&     wget
      -O /tmp/crowd.tar.gz https://www.atlassian.com/software/crowd/downloads/binary/atlassian-crowd-${CROWD_VERSION}.tar.gz
      &&     tar zxf /tmp/crowd.tar.gz -C /tmp &&     ls -A /tmp &&     mv /tmp/atlassian-crowd-${CROWD_VERSION}
      /tmp/crowd &&     ls -A /tmp &&     mkdir -p /opt &&     mv /tmp/crowd/* /opt/crowd
      &&     mkdir -p ${CROWD_HOME} &&     mkdir -p ${CROWD_INSTALL}/crowd-webapp/WEB-INF/classes
      &&     mkdir -p ${CROWD_INSTALL}/apache-tomcat/lib &&     mkdir -p ${CROWD_INSTALL}/apache-tomcat/webapps/ROOT
      &&     mkdir -p ${CROWD_INSTALL}/apache-tomcat/conf/Catalina/localhost &&     echo
      "crowd.home=${CROWD_HOME}" > ${CROWD_INSTALL}/crowd-webapp/WEB-INF/classes/crowd-init.properties
      &&     mv ${CROWD_INSTALL}/apache-tomcat/webapps/ROOT /opt/crowd/splash-webapp
      &&     mv ${CROWD_INSTALL}/apache-tomcat/conf/Catalina/localhost/* /opt/crowd/webapps
      &&     wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx1.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx2.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der
      &&     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt
      -importcert -alias isrgrootx2 -file /tmp/letsencryptauthorityx2.der &&     keytool
      -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert
      -alias letsencryptauthorityx1 -file /tmp/lets-encrypt-x1-cross-signed.der &&     keytool
      -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert
      -alias letsencryptauthorityx2 -file /tmp/lets-encrypt-x2-cross-signed.der &&     keytool
      -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert
      -alias letsencryptauthorityx3 -file /tmp/lets-encrypt-x3-cross-signed.der &&     keytool
      -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert
      -alias letsencryptauthorityx4 -file /tmp/lets-encrypt-x4-cross-signed.der &&     wget
      -O /home/${CONTAINER_USER}/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class
      &&     chown -R crowd:crowd /home/${CONTAINER_USER} &&     chown -R crowd:crowd
      ${CROWD_HOME} &&     chown -R crowd:crowd ${CROWD_INSTALL} &&     apk del       ca-certificates       gzip       wget
      &&      rm -rf /var/cache/apk/* &&     rm -rf /tmp/* &&     rm -rf /var/log/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CROWD_URL
      Value: http://localhost:8095/crowd
    - Key: LOGIN_BASE_URL
      Value: http://localhost:8095
    - Key: CROWD_CONTEXT
      Value: crowd
    - Key: CROWDID_CONTEXT
      Value: openidserver
    - Key: OPENID_CLIENT_CONTEXT
      Value: openidclient
    - Key: SPLASH_CONTEXT
      Value: ROOT
    Name: env
  - Labels:
    - Key: com.blacklabelops.application.crowd.version
      Value: $CROWD_VERSION
    - Key: com.blacklabelops.application.crowd.userid
      Value: $CONTAINER_UID
    - Key: com.blacklabelops.application.crowd.groupid
      Value: $CONTAINER_GID
    - Key: com.blacklabelops.image.builddate.crowd
      Value: ${BUILD_DATE}
    Name: label
  - Name: workdir
    Path: /var/atlassian/crowd
  - Name: volume
    Volumes:
    - /var/atlassian/crowd
    - /var/cache/shareclasses
  - Name: expose
    Ports:
    - "8095"
  - Health:
      Interval: 60000000000
      Retries: 3
      StartPeriod: 5000000000
      Test:
      - CMD-SHELL
      - curl -f http://localhost:8095/ || exit 1
      Timeout: 30000000000
    Name: healthcheck
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - imagescripts
    - /home/crowd
  - Env:
    - Key: JAVA_OPTS
      Value: '"-Xshareclasses:cacheDir=/var/cache/shareclasses"'
    Name: env
  - CmdLine:
    - /sbin/tini
    - --
    - /home/crowd/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - crowd
    Name: cmd
    PrependShell: false
  From:
    Image: adoptopenjdk/openjdk8-openj9:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM adoptopenjdk/openjdk8-openj9:alpine
