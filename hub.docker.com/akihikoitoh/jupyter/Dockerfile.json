{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "akihikoitoh/jupyter-notebook:latest",
      "SourceCode": "FROM akihikoitoh/jupyter-notebook:latest",
      "Platform": "",
      "From": {
        "Image": "akihikoitoh/jupyter-notebook:latest"
      },
      "Commands": [
        {
          "Maintainer": "ITOH Akihiko",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y build-essential \u0026\u0026 apt-get install -y wget \u0026\u0026 apt-get install -y g++ \u0026\u0026 apt-get install -y ruby"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y software-properties-common python-software-properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python-setuptools     python-numpy     python-scipy     python-matplotlib     python-matplotlib-data     python-pandas     python-sympy     python-nose     python-sklearn     libhdf5-dev     libatlas-dev     libatlas3gf-base     libopenblas-dev     python-all-dev     libblas-dev     libblas3     liblapack-dev     liblapack3     liblapacke     liblapacke-dev     python-dev     libjpeg-dev     libfreetype6     libfreetype6-dev     zlib1g-dev     gfortran     libffi-dev     libssl-dev     python-pyparsing     python-pydot     \u0026\u0026 apt-get build-dep -y python-imaging     \u0026\u0026 apt-get install -y python-imaging"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip     \u0026\u0026 pip install pyopenssl ndg-httpsclient pyasn1     \u0026\u0026 pip install Pillow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install cython     \u0026\u0026 pip install pyyaml     \u0026\u0026 pip install h5py     \u0026\u0026 pip install Theano     \u0026\u0026 pip install chainer     \u0026\u0026 pip install keras     \u0026\u0026 pip install pymatbridge"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c 'echo \"export PYLEARN2_DATA_PATH=/opt/data\" \u003e\u003e /.bashrc'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c 'echo \"export PATH=/opt/pylearn2/pylearn2/scripts:$PATH\" \u003e\u003e /.bashrc'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /tmp \u0026\u0026 mkdir /tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/notebooks"
        },
        {
          "CmdLine": [
            "/notebook.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}