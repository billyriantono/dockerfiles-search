{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Maintainer": "Marian Abaffy \"marian.abaffy@unitedclassifieds.sk\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "9.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "1.3.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHANTOMJS_ARCHIVE",
              "Value": "\"phantomjs.tar.gz\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPIZE_DEPS",
              "Value": "autoconf file g++ gcc libc-dev make pkgconf re2c php7-dev php7-pear     yaml-dev pcre-dev zlib-dev libmemcached-dev cyrus-sasl-dev"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://php.codecasts.rocks/php-alpine.rsa.pub",
            "/etc/apk/keys/php-alpine.rsa.pub"
          ]
        },
        {
          "CmdLine": [
            "echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' \u003e\u003e /etc/apk/repositories \u0026\u0026     apk add --update     curl     bash     git     unzip     wget     openssh-client     openssh     sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"---\u003e Preparing and Installing PHP\" \u0026\u0026     apk add --update     php7     php7-apcu     php7-bcmath     php7-bz2     php7-curl     php7-ctype     php7-exif     php7-gd     php7-imagick     php7-imap     php7-intl     php7-json     php7-mbstring     php7-mcrypt     php7-mysqlnd     php7-pdo_mysql     php7-mongodb     php7-opcache     php7-redis     php7-soap     php7-sqlite3     php7-xdebug     php7-xml     php7-xmlreader     php7-openssl     php7-phar     php7-zip     php7-calendar     php7-dba     php7-ftp     php7-gettext     php7-iconv     php7-imap     php7-ldap     php7-odbc     php7-pcntl     php7-wddx     php7-xmlrpc     php7-xsl     php7-memcached     php7-mongodb     php7-msgpack     php7-xmlwriter     php7-tokenizer     php7-simplexml     php7-zlib \u0026\u0026     sudo unlink /usr/bin/php \u0026\u0026     sudo ln -s /usr/bin/php7 /usr/bin/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/etc/php7/"
          ]
        },
        {
          "CmdLine": [
            "echo -e \"extension=memcached.so\\n\" \u003e /etc/php7/conf.d/20_memcached.ini     \u0026\u0026 echo -e \";extension=mongodb.so\\n\" \u003e /etc/php7/conf.d/mongodb.ini     \u0026\u0026 echo -e \"extension=memcache.so\\n\" \u003e /etc/php7/conf.d/20_memcache.ini     \u0026\u0026 echo -e '\\napc.enable_cli = 1\\napc.enabled = 1' \u003e\u003e /etc/php7/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apk add --no-cache         --virtual .phpize-deps         $PHPIZE_DEPS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 wget https://github.com/websupport-sk/pecl-memcache/archive/NON_BLOCKING_IO_php7.zip     \u0026\u0026 unzip NON_BLOCKING_IO_php7.zip     \u0026\u0026 ls /tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/pecl-memcache-NON_BLOCKING_IO_php7     \u0026\u0026 phpize7     \u0026\u0026 ./configure --with-php-config=/usr/bin/php-config7     \u0026\u0026 make     \u0026\u0026 make test     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"---\u003e Installing Composer\" \u0026\u0026     curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026     echo \"---\u003e Cleaning up\" \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/composer global require jakub-onderka/php-parallel-lint \u0026\u0026     /usr/local/bin/composer global require jakub-onderka/php-var-dump-check \u0026\u0026     /usr/local/bin/composer global require hirak/prestissimo \u0026\u0026     /usr/local/bin/composer global require phpunit/phpunit \u0026\u0026     /usr/local/bin/composer global require phpmd/phpmd \u0026\u0026     /usr/local/bin/composer global require squizlabs/php_codesniffer \u0026\u0026     /usr/local/bin/composer global require symfony/phpunit-bridge"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/composer config --global cache-dir /opt/data/cache/composer/cache-dir"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/composer config --global cache-vcs-dir /opt/data/cache/composer/cache-vcs-dir"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/composer config --global cache-repo-dir /opt/data/cache/composer/cache-repo-dir"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/phpDocumentor/phpDocumentor2/releases/download/v2.9.0/phpDocumentor.phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e \"#!/bin/bash\\n\\nphp /phpDocumentor.phar \\$@\" \u003e\u003e /usr/local/bin/phpdoc \u0026\u0026     chmod +x /usr/local/bin/phpdoc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sn /root/.composer/vendor/bin/parallel-lint /usr/local/bin/parallel-lint \u0026\u0026     ln -sn /root/.composer/vendor/bin/var-dump-check /usr/local/bin/var-dump-check \u0026\u0026     ln -sn /root/.composer/vendor/bin/phpunit /usr/local/bin/phpunit \u0026\u0026     ln -sn /root/.composer/vendor/bin/phpmd /usr/local/bin/phpmd \u0026\u0026     ln -sn /root/.composer/vendor/bin/phpcs /usr/local/bin/phpcs \u0026\u0026     ln -sn /root/.composer/vendor/bin/phpcs /usr/local/bin/phpunit-bridge"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -g 1000 node     \u0026\u0026 adduser -u 1000 -G node -s /bin/sh -D node     \u0026\u0026 apk add --no-cache         libstdc++     \u0026\u0026 apk add --no-cache --virtual .build-deps         binutils-gold         curl         g++         gcc         gnupg         libgcc         linux-headers         make         python   \u0026\u0026 for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     56730D5401028683275BD23C23EFEFE93C4CFFFE   ; do     gpg --keyserver pgp.mit.edu --recv-keys \"$key\" ||     gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" ||     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ;   done     \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     \u0026\u0026 curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     \u0026\u0026 grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     \u0026\u0026 tar -xf \"node-v$NODE_VERSION.tar.xz\"     \u0026\u0026 cd \"node-v$NODE_VERSION\"     \u0026\u0026 ./configure     \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN)     \u0026\u0026 make install     \u0026\u0026 apk del .build-deps     \u0026\u0026 cd ..     \u0026\u0026 rm -Rf \"node-v$NODE_VERSION\"     \u0026\u0026 rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   \u0026\u0026 for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --keyserver pgp.mit.edu --recv-keys \"$key\" ||     gpg --keyserver keysDockerfileerver.pgp.com --recv-keys \"$key\" ||     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ;   done   \u0026\u0026 curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   \u0026\u0026 curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   \u0026\u0026 gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   \u0026\u0026 mkdir -p /opt/yarn   \u0026\u0026 tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1   \u0026\u0026 ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn   \u0026\u0026 ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg   \u0026\u0026 rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   \u0026\u0026 apk del .build-deps-yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install --global gulp-cli     \u0026\u0026 npm install --global webpack@2     \u0026\u0026 npm install --global jsdoc \t\u0026\u0026 npm set registry http://npm.i.etech.sk \t\u0026\u0026 npm set progress=false \t\u0026\u0026 npm config set cache /opt/data/cache/npm/cache --global \t\u0026\u0026 npm config set tmp /opt/data/cache/npm/tmp --global"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '@edge http://nl.alpinelinux.org/alpine/edge/main'\u003e\u003e /etc/apk/repositories \t\u0026\u0026 apk --update add curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Lk -o $PHANTOMJS_ARCHIVE https://github.com/fgrehm/docker-phantomjs2/releases/download/v2.0.0-20150722/dockerized-phantomjs.tar.gz \t\u0026\u0026 tar -xf $PHANTOMJS_ARCHIVE -C /tmp/ \t\u0026\u0026 cp -R /tmp/etc/fonts /etc/ \t\u0026\u0026 cp -R /tmp/lib/* /lib/ \t\u0026\u0026 cp -R /tmp/lib64 / \t\u0026\u0026 cp -R /tmp/usr/lib/* /usr/lib/ \t\u0026\u0026 cp -R /tmp/usr/lib/x86_64-linux-gnu /usr/ \t\u0026\u0026 cp -R /tmp/usr/share/* /usr/share/ \t\u0026\u0026 cp /tmp/usr/local/bin/phantomjs /usr/bin/ \t\u0026\u0026 rm -fr $PHANTOMJS_ARCHIVE  /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}