MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends ca-certificates
      apt-transport-https gnupg2 curl &&         curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub
      | apt-key add - &&         echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64
      /" > /etc/apt/sources.list.d/cuda.list &&         echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64
      /" > /etc/apt/sources.list.d/nvidia-ml.list
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_VERSION
      Value: 9.0.176
    Name: env
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: compute,utility
    Name: env
  - Env:
    - Key: NVIDIA_REQUIRE_CUDA
      Value: '"cuda>=9.0"'
    Name: env
  - Env:
    - Key: NCCL_VERSION
      Value: 2.2.12
    Name: env
  - Env:
    - Key: CUDNN_VERSION
      Value: 7.1.4.18
    Name: env
  - Env:
    - Key: CUDA_PKG_VERSION
      Value: 9-0=$CUDA_VERSION-1
    Name: env
  - Env:
    - Key: ELF_FOLDER
      Value: /go-elf
    Name: env
  - Env:
    - Key: MINICONDA_INSTALL_SCRIPT_NAME
      Value: Miniconda3.sh
    Name: env
  - Labels:
    - Key: com.nvidia.volumes.needed
      Value: '"nvidia_driver"'
    Name: label
  - Labels:
    - Key: com.nvidia.cuda.version
      Value: '"${CUDA_VERSION}"'
    Name: label
  - Labels:
    - Key: com.nvidia.cudnn.version
      Value: '"${CUDNN_VERSION}"'
    Name: label
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION
      &&         ln -s cuda-9.0 /usr/local/cuda
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && echo "/usr/local/nvidia/lib64"
      >> /etc/ld.so.conf.d/nvidia.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/nvidia/lib:/usr/local/nvidia/lib64
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         cuda-libraries-$CUDA_PKG_VERSION         cuda-cublas-9-0=9.0.176.3-1         libnccl2=$NCCL_VERSION-1+cuda9.0
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         libcudnn7=$CUDNN_VERSION-1+cuda9.0
      &&         rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${ELF_FOLDER}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update -y && apt install -y cmake git libboost-all-dev libzmq3-dev
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    - ${ELF_FOLDER}/${MINICONDA_INSTALL_SCRIPT_NAME}
  - CmdLine:
    - chmod +x ${ELF_FOLDER}/${MINICONDA_INSTALL_SCRIPT_NAME}
    Name: run
    PrependShell: true
  - CmdLine:
    - ${ELF_FOLDER}/${MINICONDA_INSTALL_SCRIPT_NAME} -b
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}:/root/miniconda3/bin"'
    Name: env
  - CmdLine:
    - conda install -c pytorch pytorch-nightly cuda90 numpy zeromq pyzmq
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${ELF_FOLDER}
  - CmdLine:
    - git clone https://github.com/pytorch/ELF.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${ELF_FOLDER}/ELF
  - CmdLine:
    - git submodule sync && git submodule update --init --recursive
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c "source activate base && make -j4"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/pytorch/ELF/releases/download/pretrained-go-19x19-v0/pretrained-go-19x19-v0.bin
    - ${ELF_FOLDER}/ELF
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/pytorch/ELF/releases/download/pretrained-go-19x19-v1/pretrained-go-19x19-v1.bin
    - ${ELF_FOLDER}/ELF
  - CmdLine:
    - bash -c "source scripts/devmode_set_pythonpath.sh"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${ELF_FOLDER}/ELF/scripts/elfgames/go/
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
