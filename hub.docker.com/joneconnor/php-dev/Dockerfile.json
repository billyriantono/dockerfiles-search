{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y \tlibfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpng-dev     zlib1g-dev     libssl-dev     libevent-dev     git     --no-install-recommends     \u0026\u0026 apt-get clean \t\u0026\u0026 rm -r /var/lib/apt/lists/*     \u0026\u0026 docker-php-ext-install -j$(nproc) pcntl \t\u0026\u0026 docker-php-ext-install -j$(nproc) mcrypt     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-install -j$(nproc) sockets     \u0026\u0026 docker-php-ext-install -j$(nproc) pdo_mysql     \u0026\u0026 docker-php-ext-install -j$(nproc) mysqli     \u0026\u0026 docker-php-ext-install -j$(nproc) bcmath     \u0026\u0026 docker-php-ext-install -j$(nproc) zip     \u0026\u0026 docker-php-ext-install -j$(nproc) opcache     \u0026\u0026 { \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install event \u0026\u0026 docker-php-ext-enable event"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug \u0026\u0026 docker-php-ext-enable xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/srv"
        }
      ]
    }
  ]
}