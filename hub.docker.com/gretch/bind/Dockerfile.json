{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "add-apt-repositories",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic AS add-apt-repositories",
      "Platform": "",
      "As": "add-apt-repositories",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update      \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y gnupg      \u0026\u0026 apt-key adv --fetch-keys http://www.webmin.com/jcameron-key.asc      \u0026\u0026 echo \"deb http://download.webmin.com/download/repository sarge contrib\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Doino Gretchenliev\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "BIND_USER",
              "Value": "bind"
            },
            {
              "Key": "BIND_VERSION",
              "Value": "9.11.3"
            },
            {
              "Key": "WEBMIN_VERSION",
              "Value": "1.9"
            },
            {
              "Key": "DATA_DIR",
              "Value": "/data"
            },
            {
              "Key": "BIND_LISTEN_PORT",
              "Value": "53"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "add-apt-repositories",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/apt/trusted.gpg",
            "/etc/apt/trusted.gpg"
          ]
        },
        {
          "Chown": "",
          "From": "add-apt-repositories",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/apt/sources.list",
            "/etc/apt/sources.list"
          ]
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y build-dep pam"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export CONFIGURE_OPTS=--disable-audit \u0026\u0026 cd /root \u0026\u0026 apt-get -b source pam \u0026\u0026 dpkg -i libpam-doc*.deb libpam-modules*.deb libpam-runtime*.deb libpam0g*.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo exit 0 \u003e /usr/sbin/policy-rc.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /etc/apt/apt.conf.d/docker-gzip-indexes      \u0026\u0026 apt-get purge apt-show-versions      \u0026\u0026 rm /var/lib/apt/lists/*lz4      \u0026\u0026 apt-get -o Acquire::GzipIndexes=false update      \u0026\u0026 apt-get update      \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y      bind9=1:${BIND_VERSION}* bind9-host=1:${BIND_VERSION}* dnsutils      webmin=${WEBMIN_VERSION}*      \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/sbin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /sbin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "${BIND_LISTEN_PORT}/tcp",
            "${BIND_LISTEN_PORT}/udp",
            "10000/tcp"
          ]
        },
        {
          "CmdLine": [
            "/sbin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/sbin/named"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}