MetaArgs: null
Stages:
- As: builder
  BaseName: golang:alpine
  Commands:
  - CmdLine:
    - apk update &&     apk add git &&     adduser -D -g "" appuser
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go.mod
    - go.sum
    - ./
  - CmdLine:
    - go mod download
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - "CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags \"\t-w -s
      \t-X main.gitRepo=$(git remote get-url --push origin) \t-X main.gitCommit=$(git
      rev-list -1 HEAD) \t-X main.appVersion=$(git tag -l | tail -n1) \t-X main.buildStamp=$(date
      +%Y-%m-%d)\" \t-o fakeserver ."
    Name: run
    PrependShell: true
  From:
    Image: golang:alpine
  Name: builder
  Platform: ""
  SourceCode: FROM golang:alpine as builder
- BaseName: alpine:latest
  Commands:
  - CmdLine:
    - apk --no-cache add ca-certificates
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /app/docker-entrypoint.sh
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /etc/passwd
    - /etc/passwd
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /app/fakeserver
    - .
  - Name: expose
    Ports:
    - "8888"
  - Env:
    - Key: ADDR
      Value: :8888
    Name: env
  - Env:
    - Key: TTL
      Value: "120"
    Name: env
  - Name: user
    User: appuser
  - CmdLine:
    - /app/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
