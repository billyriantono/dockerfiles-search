MetaArgs: null
Stages:
- As: google-cloud-sdk
  BaseName: google/cloud-sdk:218.0.0-alpine
  Commands: null
  From:
    Image: google/cloud-sdk:218.0.0-alpine
  Name: google-cloud-sdk
  Platform: ""
  SourceCode: FROM google/cloud-sdk:218.0.0-alpine as google-cloud-sdk
- BaseName: golang:1.10.4-alpine3.8
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs/
    - /
  - CmdLine:
    - chown root:root /root/.ssh/config && chmod 600 /root/.ssh/config
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://apk.cloudposse.com/ops@cloudposse.com.rsa.pub
    - /etc/apk/keys/
  - CmdLine:
    - echo "@cloudposse https://apk.cloudposse.com/3.8/vendor" >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's|http://dl-cdn.alpinelinux.org|https://alpine.global.ssl.fastly.net|g'
      /etc/apk/repositories &&     echo "@testing https://alpine.global.ssl.fastly.net/alpine/edge/testing"
      >> /etc/apk/repositories &&     echo "@community https://alpine.global.ssl.fastly.net/alpine/edge/community"
      >> /etc/apk/repositories &&     apk update
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - packages.txt
    - /etc/apk/
  - CmdLine:
    - apk add --update $(grep -v '^#' /etc/apk/packages.txt)
    Name: run
    PrependShell: true
  - Env:
    - Key: CLOUDSDK_CONFIG
      Value: /localhost/.config/gcloud/
    Name: env
  - Chown: ""
    From: google-cloud-sdk
    Name: copy
    SourcesAndDest:
    - /google-cloud-sdk/
    - /usr/local/google-cloud-sdk/
  - CmdLine:
    - ln -s /usr/local/google-cloud-sdk/bin/gcloud /usr/local/bin/ &&     ln -s /usr/local/google-cloud-sdk/bin/gsutil
      /usr/local/bin/ &&     ln -s /usr/local/google-cloud-sdk/bin/bq /usr/local/bin/
      &&     gcloud config set core/disable_usage_reporting true --installation &&     gcloud
      config set component_manager/disable_update_check true --installation &&     gcloud
      config set metrics/environment github_docker_image --installation
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /requirements.txt
  - CmdLine:
    - pip install -r /requirements.txt
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /root/.config
  - Env:
    - Key: MAKELINE_PATH
      Value: /makeline
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./
    - ${MAKELINE_PATH}/
  - Name: workdir
    Path: ${MAKELINE_PATH}
  - CmdLine:
    - go get github.com/aroq/uniconf
    Name: run
    PrependShell: true
  - Env:
    - Key: UNIPIPE_PATH
      Value: /unipipe
    Name: env
  - Name: volume
    Volumes:
    - '[${UNIPIPE_PATH}]'
  - Name: workdir
    Path: ${UNIPIPE_PATH}
  - Env:
    - Key: VARIANT_VERSION
      Value: 0.25.1
    Name: env
  - CmdLine:
    - curl --fail -sSL -o variant.tar.gz https://github.com/mumoshu/variant/releases/download/v${VARIANT_VERSION}/variant_${VARIANT_VERSION}_linux_386.tar.gz     &&
      mkdir -p variant &&     tar -zxf variant.tar.gz -C variant     && cp variant/variant
      /usr/local/bin/     && rm -f variant.tar.gz     && rm -fR variant     && chmod
      +x /usr/local/bin/variant
    Name: run
    PrependShell: true
  - Env:
    - Key: FD_VERSION
      Value: 7.1.0
    Name: env
  - CmdLine:
    - curl --fail -sSL -o fd.tar.gz https://github.com/sharkdp/fd/releases/download/v${FD_VERSION}/fd-v${FD_VERSION}-x86_64-unknown-linux-musl.tar.gz     &&
      tar -zxf fd.tar.gz     && cp fd-v${FD_VERSION}-x86_64-unknown-linux-musl/fd
      /usr/local/bin/     && rm -f fd.tar.gz     && rm -fR fd-v${FD_VERSION}-x86_64-unknown-linux-musl     &&
      chmod +x /usr/local/bin/fd
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10.4-alpine3.8
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.10.4-alpine3.8
