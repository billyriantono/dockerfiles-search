{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "manageiq/ruby",
      "SourceCode": "FROM manageiq/ruby",
      "Platform": "",
      "From": {
        "Image": "manageiq/ruby"
      },
      "Commands": [
        {
          "Maintainer": "ManageIQ https://github.com/ManageIQ/manageiq-appliance-build",
          "Name": "maintainer"
        },
        {
          "Key": "REF",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Key": "GHORG",
          "Name": "arg",
          "Value": "container-mgmt"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            },
            {
              "Key": "CONTAINER",
              "Value": "true"
            },
            {
              "Key": "APP_ROOT",
              "Value": "/var/www/miq/vmdb"
            },
            {
              "Key": "APP_ROOT_PERSISTENT",
              "Value": "/persistent"
            },
            {
              "Key": "APPLIANCE_ROOT",
              "Value": "/opt/manageiq/manageiq-appliance"
            },
            {
              "Key": "CONTAINER_SCRIPTS_ROOT",
              "Value": "/opt/manageiq/container-scripts"
            },
            {
              "Key": "IMAGE_VERSION",
              "Value": "${REF}"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "name",
              "Value": "\"manageiq\""
            },
            {
              "Key": "vendor",
              "Value": "\"ManageIQ\""
            },
            {
              "Key": "version",
              "Value": "\"Master\""
            },
            {
              "Key": "release",
              "Value": "${REF}"
            },
            {
              "Key": "url",
              "Value": "\"http://manageiq.org/\""
            },
            {
              "Key": "summary",
              "Value": "\"ManageIQ appliance image\""
            },
            {
              "Key": "description",
              "Value": "\"ManageIQ is a management and automation platform for virtual, private, and hybrid cloud infrastructures.\""
            },
            {
              "Key": "io.k8s.display-name",
              "Value": "\"ManageIQ\""
            },
            {
              "Key": "io.k8s.description",
              "Value": "\"ManageIQ is a management and automation platform for virtual, private, and hybrid cloud infrastructures.\""
            },
            {
              "Key": "io.openshift.tags",
              "Value": "\"ManageIQ,miq,manageiq\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "curl -sSLko /etc/yum.repos.d/manageiq-ManageIQ-Master-epel-7.repo       https://copr.fedorainfracloud.org/coprs/manageiq/ManageIQ-Master/repo/epel-7/manageiq-ManageIQ-Master-epel-7.repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install centos-release-scl-rh \u0026\u0026     yum -y install --setopt=tsflags=nodocs                    chrony                                     cmake                                      cronie                                     file                                       gcc-c++                                    git                                        http-parser                                initscripts                                libcurl-devel                              libtool                                    libxslt-devel                              logrotate                                  lvm2                                       net-tools                                  nmap-ncat                                  nodejs                                     npm                                        openldap-clients                           openscap-scanner                           patch                                      psmisc                                     rh-postgresql95-postgresql-devel                     rh-postgresql95-postgresql-libs                    sqlite-devel                               sysvinit-tools                             which                                      \u0026\u0026                          yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${APPLIANCE_ROOT} \u0026\u0026     curl -L https://github.com/ManageIQ/manageiq-appliance/tarball/${REF} | tar vxz -C ${APPLIANCE_ROOT} --strip 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${APP_ROOT} \u0026\u0026     ln -vs ${APP_ROOT} /opt/manageiq/manageiq \u0026\u0026     curl -L https://github.com/${GHORG}/manageiq/tarball/patched-stable-20180104-0520 | tar vxz -C ${APP_ROOT} --strip 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "${APPLIANCE_ROOT}/setup \u0026\u0026     mkdir ${APP_ROOT}/log/apache \u0026\u0026     mkdir ${APP_ROOT_PERSISTENT} \u0026\u0026     mkdir -p ${CONTAINER_SCRIPTS_ROOT} \u0026\u0026     cp ${APP_ROOT}/config/cable.yml.sample ${APP_ROOT}/config/cable.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${APP_ROOT}"
        },
        {
          "CmdLine": [
            "source /etc/default/evm \u0026\u0026     export RAILS_USE_MEMORY_STORE=\"true\" \u0026\u0026     npm install bower yarn -g \u0026\u0026     gem install bundler --conservative \u0026\u0026     bundle install \u0026\u0026     rake update:ui \u0026\u0026     bin/rails log:clear tmp:clear \u0026\u0026     rake evm:compile_assets \u0026\u0026     rake evm:compile_sti_loader \u0026\u0026     npm cache clean \u0026\u0026     bower cache clean \u0026\u0026     find ${RUBY_GEMS_ROOT}/gems/ -name .git | xargs rm -rvf \u0026\u0026     find ${RUBY_GEMS_ROOT}/gems/ | grep \"\\.s\\?o$\" | xargs rm -rvf \u0026\u0026     rm -rvf ${RUBY_GEMS_ROOT}/gems/rugged-*/vendor/libgit2/build \u0026\u0026     rm -rvf ${RUBY_GEMS_ROOT}/cache/* \u0026\u0026     rm -rvf /root/.bundle/cache \u0026\u0026     rm -rvf ${APP_ROOT}/tmp/cache/assets \u0026\u0026     rm -vf ${APP_ROOT}/log/*.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-assets/entrypoint",
            "/usr/bin"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-assets/container.data.persist",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-assets/appliance-initialize.sh",
            "/bin"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-assets/check-dependent-services.sh",
            "/bin"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-assets/container-scripts",
            "${CONTAINER_SCRIPTS_ROOT}"
          ]
        },
        {
          "CmdLine": [
            "wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 \u0026\u0026     chmod +x /usr/local/bin/dumb-init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/dumb-init",
            "--single-child",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "entrypoint"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}