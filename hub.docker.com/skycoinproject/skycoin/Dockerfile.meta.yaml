MetaArgs:
- DefaultValue: busybox
  Key: IMAGE_FROM
  ProvidedValue: null
  Value: busybox
Stages:
- As: build
  BaseName: golang:1.11-stretch
  Commands:
  - Key: ARCH
    Name: arg
    Value: amd64
  - Key: GOARM
    Name: arg
    Value: null
  - Key: SKYCOIN_VERSION
    Name: arg
    Value: null
  - Key: SCOMMIT
    Name: arg
    Value: null
  - Key: SBRANCH
    Name: arg
    Value: null
  - Key: STAG
    Name: arg
    Value: null
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cmd
    - $GOPATH/src/github.com/SkycoinProject/skycoin/cmd
  - Chown: ""
    Name: add
    SourcesAndDest:
    - src
    - $GOPATH/src/github.com/SkycoinProject/skycoin/src
  - Chown: ""
    Name: add
    SourcesAndDest:
    - vendor
    - $GOPATH/src/github.com/SkycoinProject/skycoin/vendor
  - Chown: ""
    Name: add
    SourcesAndDest:
    - template
    - $GOPATH/src/github.com/SkycoinProject/skycoin/template
  - Chown: ""
    Name: add
    SourcesAndDest:
    - fiber.toml
    - $GOPATH/src/github.com/SkycoinProject/skycoin/fiber.toml
  - CmdLine:
    - 'sh -c     ''if test ${SKYCOIN_VERSION};then         echo "Revision is set to:
      "${SKYCOIN_VERSION};         cd $GOPATH/src/github.com/SkycoinProject/skycoin;         git
      stash;         git checkout ${SKYCOIN_VERSION};      fi'''
    Name: run
    PrependShell: true
  - Env:
    - Key: GOARCH
      Value: '"$ARCH"'
    - Key: GOARM
      Value: '"$GOARM"'
    - Key: CGO_ENABLED
      Value: '"0"'
    - Key: GOOS
      Value: '"linux"'
    - Key: GOLDFLAGS
      Value: '"-X main.Commit=${SCOMMIT} -X main.Branch=${SBRANCH}"'
    Name: env
  - CmdLine:
    - cd $GOPATH/src/github.com/SkycoinProject/skycoin &&     echo "Building with
      GOLDFLAGS=$GOLDFLAGS GOARCH=$GOARCH GOARM=$GOARM CGO_ENABLED=$CGO_ENABLED GOOS=$GOOS
      " &&     go install -ldflags "${GOLDFLAGS}" ./cmd/... &&     sh -c "if test
      -d $GOPATH/bin/linux_arm ; then mv $GOPATH/bin/linux_arm/* $GOPATH/bin/; fi;            if
      test -d $GOPATH/bin/linux_arm64 ; then mv $GOPATH/bin/linux_arm64/* $GOPATH/bin/;
      fi"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c 'mkdir -p /tmp/files/{usr/bin,/usr/local/skycoin/src/gui/static,/usr/local/bin/,/etc/ssl}'
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /go/bin/* /tmp/files/usr/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r  /go/src/github.com/SkycoinProject/skycoin/src/gui/static /tmp/files/usr/local/skycoin/src/gui/
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r  /etc/ssl/certs /tmp/files/etc/ssl/certs
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker_launcher.sh
    - /tmp/files/usr/local/bin/docker_launcher.sh
  From:
    Image: golang:1.11-stretch
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.11-stretch AS build
- BaseName: $IMAGE_FROM
  Commands:
  - Key: BDATE
    Name: arg
    Value: null
  - Key: SCOMMIT
    Name: arg
    Value: null
  - Key: SBRANCH
    Name: arg
    Value: null
  - Key: STAG
    Name: arg
    Value: null
  - Labels:
    - Key: '"org.label-schema.name"'
      Value: '"Skycoin"'
    - Key: '"org.label-schema.description"'
      Value: '"Skycoin core docker image"'
    - Key: '"org.label-schema.vcs-url"'
      Value: '"https://github.com/SkycoinProject/skycoin/tree/develop/docker/images/mainnet"'
    - Key: '"org.label-schema.vendor"'
      Value: '"Skycoin project"'
    - Key: '"org.label-schema.url"'
      Value: '"skycoin.com"'
    - Key: '"org.label-schema.schema-version"'
      Value: '"1.0"'
    - Key: '"org.label-schema.build-date"'
      Value: $BDATE
    - Key: '"org.label-schema.vcs-ref"'
      Value: $SCOMMIT
    - Key: '"org.label-schema.version"'
      Value: $STAG
    - Key: '"org.label-schema.usage"'
      Value: '"https://github.com/SkycoinProject/skycoin/blob/"$SCOMMIT"/docker/images/mainnet/README.md"'
    - Key: '"org.label-schema.docker.cmd"'
      Value: '"docker volume create skycoin-data; docker volume create skycoin-wallet;
        docker run -d -v skycoin-data:/data/.skycoin -v skycoin-wallet:/wallet -p
        6000:6000 -p 6420:6420 --name skycoin-node-stable SkycoinProject/skycoin"'
    Name: label
  - Env:
    - Key: COIN
      Value: '"skycoin"'
    Name: env
  - Env:
    - Key: RPC_ADDR
      Value: '"http://0.0.0.0:6420"'
    - Key: DATA_DIR
      Value: '"/data/.$COIN"'
    - Key: WALLET_DIR
      Value: '"/wallet"'
    - Key: WALLET_NAME
      Value: '"$COIN_cli.wlt"'
    Name: env
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /tmp/files
    - /
  - Name: volume
    Volumes:
    - $WALLET_DIR
  - Name: volume
    Volumes:
    - $DATA_DIR
  - Name: expose
    Ports:
    - "6000"
    - "6420"
  - CmdLine:
    - docker_launcher.sh
    - --web-interface-addr=0.0.0.0
    - --gui-dir=/usr/local/skycoin/src/gui/static
    Name: entrypoint
    PrependShell: false
  From:
    Image: $IMAGE_FROM
  Name: ""
  Platform: ""
  SourceCode: FROM $IMAGE_FROM
