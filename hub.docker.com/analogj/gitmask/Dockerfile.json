{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage",
      "SourceCode": "FROM phusion/baseimage",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage"
      },
      "Commands": [
        {
          "Maintainer": "jason@thesparktree.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:nginx/development \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y build-essential python-dev libffi-dev fcgiwrap curl git unzip libreadline-dev libncurses5-dev libpcre3-dev libssl-dev luajit lua5.1 liblua5.1-0-dev nano perl wget nginx-extras \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://luarocks.org/releases/luarocks-2.2.0.tar.gz \u0026\u0026   tar -xzvf luarocks-2.2.0.tar.gz \u0026\u0026   rm -f luarocks-2.2.0.tar.gz \u0026\u0026   cd luarocks-2.2.0 \u0026\u0026   ./configure \u0026\u0026   make build \u0026\u0026   make install \u0026\u0026   make clean \u0026\u0026   cd .. \u0026\u0026   rm -rf luarocks-2.2.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error --retry 5 https://bootstrap.pypa.io/get-pip.py | sudo python2.7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo pip install --pre github3.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o /usr/local/bin/confd https://github.com/kelseyhightower/confd/releases/download/v0.11.0/confd-0.11.0-linux-amd64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod u+x  /usr/local/bin/confd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./conf.d",
            "/etc/confd/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./templates",
            "/etc/confd/templates"
          ]
        },
        {
          "CmdLine": [
            "cd /srv \u0026\u0026 git clone --depth 1 https://github.com/lukas2511/letsencrypt.sh.git letsencrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./letsencrypt",
            "/srv/letsencrypt"
          ]
        },
        {
          "CmdLine": [
            "mkdir /srv/letsencrypt/.acme-challenges \u0026\u0026 chmod +x /srv/letsencrypt/letsencrypt.sh \u0026\u0026 ln -s /srv/letsencrypt/.acme-challenges /var/www/letsencrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./gitmask",
            "/srv/gitmask"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./git/post-receive.py",
            "/srv/gitmask/post-receive.py"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /srv/gitmask/data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /srv/gitmask \u0026\u0026 \tchmod -R g+ws /srv/gitmask \u0026\u0026     chmod +x /srv/gitmask/run.sh \u0026\u0026     chmod +x /srv/gitmask/git_handler.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/srv/gitmask/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "/srv/gitmask/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}