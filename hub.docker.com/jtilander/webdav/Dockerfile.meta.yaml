MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Env:
    - Key: NGINX_VERSION
      Value: 1.15.1
    Name: env
  - Env:
    - Key: WEBDAV_EXT_SHA
      Value: 430fd774fe838a04f1a5defbf1dd571d42300cf9
    Name: env
  - Env:
    - Key: LDAP_AUTH_SHA
      Value: 42d195d7a7575ebab1c369ad3fc5d78dc2c2669c
    Name: env
  - CmdLine:
    - "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx
      \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf
      \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log
      \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp
      \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
      \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
      \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module
      \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module
      \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module
      \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module
      \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic
      \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic
      \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module
      \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module
      \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio
      \t\t--with-http_v2_module \t\t--add-module=/usr/src/nginx-dav-ext-module \t\t--add-module=/usr/src/nginx-auth-ldap
      \t\" \t&& addgroup -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin
      -G nginx nginx \t&& apk add --no-cache --virtual .build-deps \t\tcurl \t\texpat-dev
      \t\tgcc \t\tgd-dev \t\tgeoip-dev \t\tgettext \t\tgnupg \t\tlibc-dev \t\tlibxslt-dev
      \t\tlinux-headers \t\tmake \t\topenldap-dev \t\tlibressl-dev \t\tpcre-dev \t\tzlib-dev
      \t&& curl -fSsL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz
      \t&& curl -fSsL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o
      nginx.tar.gz.asc \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& rm -r \"$GNUPGHOME\"
      nginx.tar.gz.asc \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f nginx.tar.gz
      \t&& rm nginx.tar.gz \t&& curl -fSsL https://codeload.github.com/arut/nginx-dav-ext-module/zip/$WEBDAV_EXT_SHA
      -o /usr/src/nginx-dav-ext-module.zip \t&& cd /usr/src \t&& unzip /usr/src/nginx-dav-ext-module.zip
      \t&& mv /usr/src/nginx-dav-ext-module-$WEBDAV_EXT_SHA /usr/src/nginx-dav-ext-module
      \t&& rm /usr/src/nginx-dav-ext-module.zip \t&& curl -fSsL https://github.com/kvspb/nginx-auth-ldap/archive/${LDAP_AUTH_SHA}.zip
      -o /usr/src/nginx-auth-ldap.zip \t&& cd /usr/src \t&& unzip /usr/src/nginx-auth-ldap.zip
      \t&& rm nginx-auth-ldap.zip \t&& mv /usr/src/nginx-auth-ldap-${LDAP_AUTH_SHA}
      /usr/src/nginx-auth-ldap \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure
      $CONFIG --with-debug \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx
      objs/nginx-debug \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so
      \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so
      \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&&
      mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \t&&
      ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make install
      \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/
      \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644
      html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug
      \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so
      \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so
      \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx*
      \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION
      \t&& rm -rf /usr/src/nginx-dav-ext-module \t&& rm -rf /usr/src/nginx-auth-ldap
      \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst
      /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx
      /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t| tr ',' '\\n' \t\t\t| sort
      -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print
      \"so:\" $1 }' \t)\" \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps
      \t&& apk del .build-deps \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/
      \t\t&& apk add --no-cache tzdata \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log
      \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk add --no-cache --virtual .htpasswd apache2-utils \t&& mv /usr/bin/htpasswd
      /tmp/ \t&& apk del .htpasswd \t&& mv /tmp/htpasswd /usr/bin/ \t&& apk add --no-cache
      apr apr-util"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk --no-cache add \ttini"
    Name: run
    PrependShell: true
  - Env:
    - Key: WORKER_USERNAME
      Value: nginx
    Name: env
  - CmdLine:
    - mkdir -p /data /tmp/uploads /log /etc/certs.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf.templ
    - /etc/nginx/nginx.conf.templ
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.*.conf.templ
    - /etc/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bad.*
    - /etc/certs.d/
  - Name: stopsignal
    Signal: SIGTERM
  - Name: volume
    Volumes:
    - /data
    - /tmp/uploads
    - /log
    - /etc/certs.d
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - nginx
    Name: cmd
    PrependShell: false
  - Key: VERSION
    Name: arg
    Value: unknown
  - CmdLine:
    - echo "$VERSION" > /version.txt
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
