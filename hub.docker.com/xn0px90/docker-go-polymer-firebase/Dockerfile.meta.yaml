MetaArgs: null
Stages:
- BaseName: node:4-slim
  Commands:
  - Maintainer: xn0px90 <xn0px90@gmail.com>
    Name: maintainer
  - Env:
    - Key: POLYMER_CLI_HOME
      Value: /home/polymer
    Name: env
  - Key: user
    Name: arg
    Value: polymer
  - Key: group
    Name: arg
    Value: polymer
  - Key: uid
    Name: arg
    Value: "1000"
  - Key: gid
    Name: arg
    Value: "1000"
  - CmdLine:
    - groupadd -g ${gid} ${group}     && useradd -d "$POLYMER_CLI_HOME" -u ${uid}
      -g ${gid} -m -s /bin/bash ${user}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends git &&     apt-get
      clean &&     npm install -g gulp bower polymer-cli generator-polymer-init-custom-build
      firebase-tools
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.7.1
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_URL
      Value: https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_SHA256
      Value: 43ad621c9b014cde8db17393dc108378d37bc853aa351a6c74bf6432c1bbd182
    Name: env
  - CmdLine:
    - "curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \t&& echo \"$GOLANG_DOWNLOAD_SHA256
      \ golang.tar.gz\" | sha256sum -c - \t&& tar -C /usr/local -xzf golang.tar.gz
      \t&& rm golang.tar.gz"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go-wrapper
    - /usr/local/bin/
  - CmdLine:
    - go get github.com/derekparker/delve/cmd/dlv
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: user
    User: ${user}
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - mkdir -p /home/${user}/app
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/${user}/app
  - Name: workdir
    Path: /home/${user}/app
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: true
  From:
    Image: node:4-slim
  Name: ""
  Platform: ""
  SourceCode: FROM node:4-slim
