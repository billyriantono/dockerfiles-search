{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm-alpine",
      "SourceCode": "FROM php:7.2-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"Application container\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "Version",
              "Value": "\"v2\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PS1",
              "Value": "'\\[\\033[1;32m\\]üê≥  \\[\\033[1;36m\\][\\u@\\h] \\[\\033[1;34m\\]\\w\\[\\033[0;35m\\] \\[\\033[1;36m\\]# \\[\\033[0m\\]'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.7.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_REDIS_VERSION",
              "Value": "4.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_XDEBUG_VERSION",
              "Value": "2.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm -rf /home/app         \u0026\u0026 mkdir /home/app         \u0026\u0026 chmod 777 /home/app         \u0026\u0026 chown ${USER_ID:-1000}:${GROUP_ID:-1000} /home/app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -g ${GROUP_ID:-1000} app \u0026\u0026     adduser -D -u ${USER_ID:-1000} -h /home/app -G app app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache git openssh-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHPIZE_DEPS",
              "Value": "autoconf     cmake     file     g++     gcc     libc-dev     pcre-dev     make     git     pkgconf     re2c     freetype-dev     libpng-dev      libjpeg-turbo-dev     libxslt-dev"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .persistent-deps     icu-dev     postgresql-dev     libxml2-dev     freetype     libpng     libjpeg-turbo     bzip2-dev     libintl gettext-dev libxslt     bash nano"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 ln -s /usr/lib /usr/local/lib64     \u0026\u0026 apk add --no-cache --virtual .build-deps         $PHPIZE_DEPS     \u0026\u0026 docker-php-ext-configure gd         --with-gd         --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/         --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-configure bcmath --enable-bcmath     \u0026\u0026 docker-php-ext-configure intl --enable-intl     \u0026\u0026 docker-php-ext-configure pcntl --enable-pcntl     \u0026\u0026 docker-php-ext-configure mysqli --with-mysqli     \u0026\u0026 docker-php-ext-configure pdo_mysql --with-pdo-mysql     \u0026\u0026 docker-php-ext-configure pdo_pgsql --with-pgsql     \u0026\u0026 docker-php-ext-configure mbstring --enable-mbstring     \u0026\u0026 docker-php-ext-configure soap --enable-soap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install         gd         bcmath         intl         pcntl         mysqli         pdo_mysql         pdo_pgsql         soap         bz2         calendar         exif         gettext         shmop         sockets         sysvmsg         sysvsem         sysvshm         wddx         xsl         zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug-${PHP_XDEBUG_VERSION}     \u0026\u0026 docker-php-ext-enable xdebug     \u0026\u0026 git clone --branch ${PHP_REDIS_VERSION} https://github.com/phpredis/phpredis /tmp/phpredis         \u0026\u0026 cd /tmp/phpredis         \u0026\u0026 phpize          \u0026\u0026 ./configure          \u0026\u0026 make          \u0026\u0026 make install         \u0026\u0026 make test         \u0026\u0026 echo 'extension=redis.so' \u003e /usr/local/etc/php/conf.d/redis.ini     \u0026\u0026 apk del .build-deps     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 rm -rf /app     \u0026\u0026 mkdir /app     \u0026\u0026 rm -rf /scripts     \u0026\u0026 mkdir /scripts     \u0026\u0026 mkdir -p /scripts/aliases     \u0026\u0026 rm -f /docker-entrypoint.sh     \u0026\u0026 rm -f /usr/local/etc/php-fpm.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./etc/php/php.ini",
            "$PHP_INI_DIR/php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./etc/php/php-fpm.conf",
            "/usr/local/etc/php-fpm.conf"
          ]
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/tmp"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/scripts:/scripts/aliases:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 mkdir -p \"$COMPOSER_HOME\"     \u0026\u0026 php -r \"copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');\"     \u0026\u0026 php -r \"if(hash_file('SHA384','/tmp/composer-setup.php')==='93b54496392c062774670ac18b134c3b3a95e5a5e5c8f1a9f'.    '115f203b75bf9a129d5daa8ba6a13e2cc8a1da0806388a8'){echo 'Verified';}else{unlink('/tmp/composer-setup.php');}\"     \u0026\u0026 php /tmp/composer-setup.php --no-ansi --install-dir=/usr/bin --filename=composer --version=$COMPOSER_VERSION     \u0026\u0026 composer --ansi --version --no-interaction     \u0026\u0026 composer --no-interaction global require 'hirak/prestissimo'     \u0026\u0026 composer clear-cache     \u0026\u0026 rm -rf /tmp/composer-setup.php /tmp/.htaccess     \u0026\u0026 php -v     \u0026\u0026 php-fpm -v     \u0026\u0026 php -m"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./keep-alive.sh",
            "/scripts/keep-alive.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./scheduler.sh",
            "/scripts/scheduler.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./fpm-entrypoint.sh",
            "/fpm-entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./aliases/*",
            "/scripts/aliases/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": null,
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}