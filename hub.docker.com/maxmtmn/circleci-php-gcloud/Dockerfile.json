{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "circleci/php:7.3-zts-stretch-browsers",
      "SourceCode": "FROM circleci/php:7.3-zts-stretch-browsers",
      "Platform": "",
      "From": {
        "Image": "circleci/php:7.3-zts-stretch-browsers"
      },
      "Commands": [
        {
          "Key": "NODE_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "${NODE_VERSION:-10}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export CLOUDSDK_CORE_DISABLE_PROMPTS=1 \u0026\u0026     curl https://sdk.cloud.google.com | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"source /home/circleci/google-cloud-sdk/completion.bash.inc\" \u003e\u003e /home/circleci/.bashrc \u0026\u0026     echo \"source /home/circleci/google-cloud-sdk/path.bash.inc\" \u003e\u003e /home/circleci/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"source /home/circleci/google-cloud-sdk/path.bash.inc \u0026\u0026 gcloud --quiet components install kubectl beta docker-credential-gcr\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get update -y \u0026\u0026 sudo apt-get install -y libpng-dev libmcrypt-dev libxml2-dev libmagickwand-dev libmagickwand-6.q16-3 libmcrypt4 \u0026\u0026     sudo docker-php-ext-install gd bcmath pdo pdo_mysql soap exif zip intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo pecl channel-update pecl.php.net"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo bash -c \"yes '' | sudo pecl install mcrypt || true\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo bash -c \"yes '' | sudo pecl install imagick || true\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo bash -c \"yes '' | sudo pecl install grpc || true\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo bash -c \"yes '' | sudo pecl install protobuf || true\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo docker-php-ext-enable imagick grpc protobuf mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf ~/.nvm \u0026\u0026     git clone https://github.com/creationix/nvm.git ~/.nvm \u0026\u0026     (cd ~/.nvm \u0026\u0026 git checkout `git describe --abbrev=0 --tags`) \u0026\u0026     bash -c \"source ~/.nvm/nvm.sh \u0026\u0026 nvm install $NODE_VERSION\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"source /home/circleci/.nvm/nvm.sh\" \u003e\u003e /home/circleci/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"source ~/.nvm/nvm.sh \u0026\u0026 npm install --global gulp-cli\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"source ~/.nvm/nvm.sh \u0026\u0026 npm install --global bower\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"source ~/.nvm/nvm.sh \u0026\u0026 npm install --global yarn\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get remove -y libpng-dev libmcrypt-dev \u0026\u0026 sudo apt-get clean \u0026\u0026 sudo apt autoremove \u0026\u0026 sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}