MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: '"Wenjie Wang" wjwang.stat@gmail.com'
    Name: maintainer
  - Env:
    - Key: R_BASE_VERSION
      Value: 3.4.4
    Name: env
  - Key: THEANO_VERSION
    Name: arg
    Value: rel-0.8.2
  - Key: LASAGNE_VERSION
    Name: arg
    Value: 37ca13459c95dac314c344b0c7c236270c4a69f1
  - Key: LIFELINES_VERSION
    Name: arg
    Value: v0.14.0
  - Key: TBLOG_VERSION
    Name: arg
    Value: 0.1.0
  - CmdLine:
    - "useradd docker \t&& mkdir /home/docker \t&& chown docker:docker /home/docker
      \t&& addgroup docker staff"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install -y --no-install-recommends \t\twget \t\tca-certificates
      \                bc \t\tbuild-essential \t\tcmake \t\tcurl                 ed
      \                fonts-texgyre \t\tg++ \t\tgfortran \t\tgit       \t\tless \t\tlibffi-dev
      \t\tlibfreetype6-dev \t\tlibhdf5-dev \t\tlibjpeg-dev \t\tliblcms2-dev \t\tlibopenblas-dev
      \t\tliblapack-dev \t\tlibopenjpeg5 \t\tlibpng12-dev \t\tlibssl-dev \t\tlibtiff5-dev
      \t\tlibwebp-dev \t\tlibzmq3-dev                 locales \t\tnano \t\tpkg-config
      \t\tpython-dev \t\tsoftware-properties-common \t\tunzip \t\tzlib1g-dev \t\tqt5-default
      \t\tlibvtk6-dev \t\tzlib1g-dev \t\tlibjpeg-dev \t\tlibwebp-dev \t\tlibpng-dev
      \t\tlibtiff5-dev \t\tlibjasper-dev \t\tlibopenexr-dev \t\tlibgdal-dev \t\tlibdc1394-22-dev
      \t\tlibavcodec-dev \t\tlibavformat-dev \t\tlibswscale-dev \t\tlibtheora-dev
      \t\tlibvorbis-dev \t\tlibxvidcore-dev \t\tlibx264-dev \t\tyasm \t\tlibopencore-amrnb-dev
      \t\tlibopencore-amrwb-dev \t\tlibv4l-dev \t\tlibxine2-dev \t\tlibtbb-dev \t\tlibeigen3-dev
      \t\tpython-dev \t\tpython-tk \t\tpython-numpy \t\tpython3-dev \t\tpython3-tk
      \t\tpython3-numpy \t\tant \t\tdefault-jdk \t\tdoxygen \t\t&& \tapt-get clean
      && \tapt-get autoremove && \trm -rf /var/lib/apt/lists/* && \tupdate-alternatives
      --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \t&& locale-gen en_US.utf8 \t&&
      /usr/sbin/update-locale LANG=en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - echo "deb http://cloud.r-project.org/bin/linux/ubuntu xenial/" >>     /etc/apt/sources.list
      &&     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -y \t&& apt-get install -y --no-install-recommends \t\tlittler
      \                r-cran-littler \t\tr-base=${R_BASE_VERSION}-* \t\tr-base-dev=${R_BASE_VERSION}-*
      \t\tr-recommended=${R_BASE_VERSION}-*         && echo 'options(repos = c(CRAN
      = \"https://cloud.r-project.org/\"),           download.file.method = \"libcurl\")'
      >> /etc/R/Rprofile.site         && echo 'source(\"/etc/R/Rprofile.site\")' >>
      /etc/littler.r \t&& ln -s /usr/share/doc/littler/examples/install.r /usr/local/bin/install.r
      \t&& ln -s /usr/share/doc/littler/examples/install2.r /usr/local/bin/install2.r
      \t&& ln -s /usr/share/doc/littler/examples/installGithub.r /usr/local/bin/installGithub.r
      \t&& ln -s /usr/share/doc/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r
      \t&& install.r docopt \t&& rm -rf /tmp/downloaded_packages/ /tmp/*.rds \t&&
      rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -O https://bootstrap.pypa.io/get-pip.py && \tpython3 get-pip.py && \trm
      get-pip.py"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 --no-cache-dir install     git+https://github.com/CamDavidsonPilon/lifelines.git@${LIFELINES_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 --no-cache-dir install     git+https://github.com/TeamHG-Memex/tensorboard_logger.git@${TBLOG_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip3 --no-cache-dir install     git+https://github.com/Theano/Theano.git@${THEANO_VERSION}
      && \t printf \"[global]\\ndevice=cpu\\nfloatX=float32\\nmode=FAST_RUN                  \\n[lib]\\ncnmem=0.95
      \                 \\n[nvcc]\\nfastmath=True                  \\n[blas]\\nldflags=-L/usr/lib/openblas-base
      -lblas \t         \\n[DebugMode]\\ncheck_finite=1\" \t> /root/.theanorc"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 --no-cache-dir install     git+https://github.com/Lasagne/Lasagne.git@${LASAGNE_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 --no-cache-dir install     git+https://github.com/h5py/h5py.git@2.8.0rc1
      &&     pip3 --no-cache-dir install     git+https://github.com/matplotlib/matplotlib.git@v2.2.2
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 --no-cache-dir install     https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.7.0-cp35-cp35m-linux_x86_64.whl
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root &&     git clone https://github.com/wenjie2wang/statds-spring2018.git     statds-project
      && cd statds-project &&     git submodule update --init --recursive &&     cd
      /root/statds-project && bash fresh-start.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "6006"
  - Name: workdir
    Path: '"/root/statds-project"'
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
