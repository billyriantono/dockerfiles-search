MetaArgs: null
Stages:
- BaseName: debian:latest
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get -y update     && apt-get -y upgrade     && apt-get -y --no-install-recommends
      install                sshpass openssh-client rsync curl                wget
      unzip locales zile byobu git                build-essential                python3
      python3-dev                python3-pip python3-venv python3-wheel python3-setuptools
      python3-psutil libssl-dev libffi-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/python python /usr/bin/python3.7 2
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/ansible/ &&     echo '[local]\nlocalhost ansible_python_interpreter={{ansible_playbook_python}}\n'
      > /etc/ansible/hosts &&     echo '[defaults]\ninterpreter_python=/usr/bin/python3'
      > /etc/ansible/ansible.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install ansible fortiosapi ansible[azure] azure-cli netaddr pexpect asciinema
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/ansible/modules &&     cd /opt/ansible/modules &&     git clone
      https://github.com/networktocode/fortimanager-ansible.git &&     git clone https://github.com/fortinet-solutions-cse/ansible_fgt_modules.git
      &&     cd /opt/ansible/modules/fortimanager-ansible &&     echo 'library        =
      /opt/ansible/modules/' >> /etc/ansible/ansible.cfg &&     pip3 install -r requirements.txt
      &&     cd /tmp &&     git clone https://github.com/jvhoof/cloud-essentials.git
      &&     cd /opt/ansible/modules/fortimanager-ansible &&     rm -rf /tmp/cloud-essentials
    Name: run
    PrependShell: true
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.12.7
    Name: env
  - CmdLine:
    - wget -O terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip   &&
      unzip terraform.zip -d /usr/local/bin   && rm -f terraform.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: PACKER_VERSION
      Value: 1.4.2
    Name: env
  - CmdLine:
    - wget -O packer.zip https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip   &&
      unzip packer.zip -d /usr/local/bin   && rm -f packer.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure locales &&     locale-gen C.UTF-8 &&     /usr/sbin/update-locale
      LANG=C.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get clean     && apt-get purge --auto-remove -y python2.6 python2.6-minimal     &&
      rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  From:
    Image: debian:latest
  Name: ""
  Platform: ""
  SourceCode: FROM debian:latest
