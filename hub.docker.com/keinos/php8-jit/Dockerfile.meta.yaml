MetaArgs: null
Stages:
- BaseName: keinos/alpine:latest
  Commands:
  - Env:
    - Key: PHPIZE_DEPS
      Value: autoconf         dpkg-dev dpkg         file         g++         gcc         libc-dev         make         pkgconf         re2c
    Name: env
  - CmdLine:
    - apk add --no-cache         ca-certificates         curl         tar         xz         libressl
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && addgroup -g 82 -S www-data     && adduser -u 82 -D -S -G www-data
      www-data
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - set -eux;     mkdir -p "$PHP_INI_DIR/conf.d";     [ ! -d /var/www/html ];     mkdir
      -p /var/www/html;     chown www-data:www-data /var/www/html;     chmod 777 /var/www/html
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 8.0.0
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://github.com/php/php-src/archive/master.zip"'
    Name: env
  - CmdLine:
    - set -xe;         apk add --no-cache --virtual .fetch-deps         gnupg         wget     ;         mkdir
      -p /usr/src;     cd /usr/src;         wget -O php.zip "$PHP_URL";         apk
      del --no-network .fetch-deps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - set -xe     && apk add --no-cache --virtual .build-deps         $PHPIZE_DEPS         gd-dev                 argon2-dev         bison         coreutils         curl-dev         freetype-dev         jpeg-dev         libedit-dev         libffi         libffi-dev         libjpeg-turbo-dev         libpng-dev         libressl         libressl-dev         libsodium-dev         libxml2-dev         oniguruma-dev         sqlite-dev         &&
      export         CFLAGS="$PHP_CFLAGS"         CPPFLAGS="$PHP_CPPFLAGS"         LDFLAGS="$PHP_LDFLAGS"     &&
      docker-php-source extract     && cd /usr/src/php/php-src-master     && gnuArch="$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)"     && ./buildconf     && ./configure --help     &&
      ./configure         --build="$gnuArch"         --with-config-file-path="$PHP_INI_DIR"         --with-config-file-scan-dir="$PHP_INI_DIR/conf.d"                 --with-mhash         --with-password-argon2         --with-sodium=shared         --with-openssl=/usr         --with-system-ciphers         --with-ffi         --enable-gd         --with-external-gd         --with-webp         --with-jpeg         --with-xpm         --with-freetype                 --with-curl         --with-libedit         --with-zlib                 --enable-option-checking=fatal         --enable-ftp         --enable-mysqlnd         --enable-mbstring                 --enable-soap         --enable-pcntl         --enable-opcache                 $(test
      "$gnuArch" = 's390x-linux-gnu' && echo '--without-pcre-jit')                 $PHP_EXTRA_CONFIGURE_ARGS     &&
      make -j "$(nproc)"     && find -type f -name '*.a' -delete     && make install     &&
      { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all
      '{}' + || true; }     && make clean         && cp -v php.ini-* "$PHP_INI_DIR/"         &&
      cd /     && docker-php-source delete         && runDeps="$(         scanelf
      --needed --nobanner --format '%n#p' --recursive /usr/local             | tr
      ',' '\n'             | sort -u             | awk 'system("[ -e /usr/local/lib/"
      $1 " ]") == 0 { next } { print "so:" $1 }'     )"     && apk add --no-cache
      $runDeps         && apk del --no-network .build-deps         && rm -rf /tmp/pear
      ~/.pearrc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/docker-php-ext-*
    - scripts/docker-php-entrypoint
    - /usr/local/bin/
  - CmdLine:
    - docker-php-ext-enable sodium
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.ini/docker-php-enable-jit.ini
    - /usr/local/etc/php/conf.d/docker-php-enable-jit.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.ini/docker-php-enable-mb.ini
    - /usr/local/etc/php/conf.d/docker-php-enable-mb.ini
  - Health:
      Interval: 3600000000000
      Retries: 1
      StartPeriod: 600000000000
      Test:
      - CMD-SHELL
      - '[ ''php -r "echo phpversion();"'' ]'
      Timeout: 10000000000
    Name: healthcheck
  - Name: user
    User: www-data
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - php
    - -a
    Name: cmd
    PrependShell: false
  From:
    Image: keinos/alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM keinos/alpine:latest
