{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8",
      "SourceCode": "FROM openjdk:8",
      "Platform": "",
      "From": {
        "Image": "openjdk:8"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "author",
              "Value": "\"Phil Ewels\""
            },
            {
              "Key": "description",
              "Value": "\"Docker image containing all requirements for NGI-ChIPseq pipeline\""
            },
            {
              "Key": "maintainer",
              "Value": "\"phil.ewels@scilifelab.se\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends         g++         gawk         gcc         gfortran         libboost-all-dev         libbz2-dev         libcurl4-openssl-dev         libdbd-mysql         libgsl0-dev         liblzma-dev         libmariadb-client-lgpl-dev         libncurses5-dev         libpcre3-dev         libreadline-dev         libssl-dev         libxml2-dev         make         python-dev         zlib1g-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --set awk /usr/bin/gawk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://bootstrap.pypa.io/get-pip.py -o /opt/get-pip.py \u0026\u0026     python /opt/get-pip.py \u0026\u0026     rm /opt/get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "FASTQC_BIN",
              "Value": "\"fastqc_v0.11.5.zip\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL http://www.bioinformatics.babraham.ac.uk/projects/fastqc/$FASTQC_BIN -o /opt/$FASTQC_BIN \u0026\u0026     unzip /opt/$FASTQC_BIN -d /opt/ \u0026\u0026     chmod 755 /opt/FastQC/fastqc \u0026\u0026     ln -s /opt/FastQC/fastqc /usr/local/bin/fastqc \u0026\u0026     rm /opt/$FASTQC_BIN"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install cutadapt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TRIMGALORE_VERSION",
              "Value": "\"0.4.5\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://github.com/FelixKrueger/TrimGalore/archive/${TRIMGALORE_VERSION}.tar.gz -o /opt/trimgalore_${TRIMGALORE_VERSION}.tar.gz \u0026\u0026     tar xvzf /opt/trimgalore_${TRIMGALORE_VERSION}.tar.gz -C /opt/ \u0026\u0026     ln -s /opt/TrimGalore-${TRIMGALORE_VERSION}/trim_galore /usr/local/bin/trim_galore \u0026\u0026     rm /opt/trimgalore_${TRIMGALORE_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BWA_VERSION",
              "Value": "\"0.7.15\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://downloads.sourceforge.net/project/bio-bwa/bwa-${BWA_VERSION}.tar.bz2 -o /opt/bwa-${BWA_VERSION}.tar.bz2 \u0026\u0026     tar xvjf /opt/bwa-${BWA_VERSION}.tar.bz2 -C /opt/ \u0026\u0026     cd /opt/bwa-${BWA_VERSION};make \u0026\u0026     ln -s /opt/bwa-${BWA_VERSION}/bwa /usr/local/bin/bwa \u0026\u0026     rm /opt/bwa-${BWA_VERSION}.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SAMTOOLS_VERSON",
              "Value": "\"1.6\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VERSON}/samtools-${SAMTOOLS_VERSON}.tar.bz2 -o /opt/samtools-${SAMTOOLS_VERSON}.tar.bz2 \u0026\u0026     tar xvjf /opt/samtools-${SAMTOOLS_VERSON}.tar.bz2 -C /opt/ \u0026\u0026     cd /opt/samtools-${SAMTOOLS_VERSON};make;make install \u0026\u0026     rm /opt/samtools-${SAMTOOLS_VERSON}.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PICARD_VERSION",
              "Value": "\"picard-tools-2.0.1\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://github.com/broadinstitute/picard/releases/download/2.0.1/${PICARD_VERSION}.zip -o /opt/${PICARD_VERSION}.zip \u0026\u0026     unzip /opt/${PICARD_VERSION}.zip -d /opt/ \u0026\u0026     rm /opt/${PICARD_VERSION}.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PICARD_HOME",
              "Value": "/opt/${PICARD_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BEDTOOLS_VERSION",
              "Value": "\"bedtools-2.26.0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://github.com/arq5x/bedtools2/releases/download/v2.26.0/${BEDTOOLS_VERSION}.tar.gz -o /opt/${BEDTOOLS_VERSION}.tar.gz \u0026\u0026     tar xvzf /opt/${BEDTOOLS_VERSION}.tar.gz -C /opt/ \u0026\u0026     cd /opt/bedtools2; make \u0026\u0026     cp /opt/bedtools2/bin/* /usr/local/bin/ \u0026\u0026     rm /opt/${BEDTOOLS_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "R_VERSION",
              "Value": "\"R-3.4.2\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://cran.r-project.org/src/base/R-3/${R_VERSION}.tar.gz -o /opt/${R_VERSION}.tar.gz \u0026\u0026     tar xvzf /opt/${R_VERSION}.tar.gz -C /opt/ \u0026\u0026     cd /opt/${R_VERSION};./configure;make;make install \u0026\u0026     rm /opt/${R_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"r \u003c- getOption('repos'); r['CRAN'] \u003c- 'https://ftp.acc.umu.se/mirror/CRAN/'; options(repos = r);\" \u003e ~/.Rprofile \u0026\u0026     Rscript -e \"install.packages('caTools',dependencies=TRUE)\" \u0026\u0026     Rscript -e \"install.packages('snow',dependencies=TRUE)\" \u0026\u0026     Rscript -e \"install.packages('doMC',dependencies=TRUE)\" \u0026\u0026     Rscript -e \"install.packages('utils',dependencies=TRUE)\" \u0026\u0026     Rscript -e \"install.packages('stringr',dependencies=TRUE)\" \u0026\u0026     Rscript -e \"install.packages('markdown',dependencies=TRUE)\" \u0026\u0026     Rscript -e \"install.packages('evaluate',dependencies=TRUE)\" \u0026\u0026     Rscript -e \"install.packages('ggplot2',dependencies=TRUE)\" \u0026\u0026     Rscript -e \"install.packages('knitr',dependencies=TRUE)\" \u0026\u0026     Rscript -e \"install.packages('RMySQL',dependencies=TRUE)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'source(\"https://bioconductor.org/biocLite.R\")' \u003e /opt/packages.r \u0026\u0026     echo 'biocLite()' \u003e\u003e /opt/packages.r \u0026\u0026     echo 'biocLite(c(\"BSgenome\", \"Rsamtools\", \"ShortRead\", \"GenomicRanges\", \"GenomicFeatures\", \"ensembldb\", \"ChIPpeakAnno\", \"biomaRt\", \"rtracklayer\", \"BSgenome.Hsapiens.UCSC.hg19\", \"org.Hs.eg.db\", \"BSgenome.Mmusculus.UCSC.mm10\", \"org.Mm.eg.db\"))' \u003e\u003e /opt/packages.r \u0026\u0026     Rscript /opt/packages.r \u0026\u0026     mkdir /usr/local/lib/R/site-library"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPP_VERSION",
              "Value": "\"1.15\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHANTOMPEAKQUALTOOLS_VERSION",
              "Value": "\"v.1.1\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://github.com/hms-dbmi/spp/archive/${SPP_VERSION}.tar.gz -o /opt/SPP_${SPP_VERSION}.tar.gz \u0026\u0026     Rscript -e \"install.packages('/opt/SPP_${SPP_VERSION}.tar.gz',dependencies=TRUE)\" \u0026\u0026     rm /opt/SPP_${SPP_VERSION}.tar.gz \u0026\u0026     curl -fsSL https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/phantompeakqualtools/ccQualityControl.${PHANTOMPEAKQUALTOOLS_VERSION}.tar.gz -o /opt/phantompeakqualtools.${PHANTOMPEAKQUALTOOLS_VERSION}.tar.gz \u0026\u0026     tar xvzf /opt/phantompeakqualtools.${PHANTOMPEAKQUALTOOLS_VERSION}.tar.gz -C /opt/ \u0026\u0026     chmod 755 /opt/phantompeakqualtools/* \u0026\u0026     echo 'alias run_spp.R=\"Rscript /opt/phantompeakqualtools/run_spp.R\"' \u003e\u003e ~/.bashrc \u0026\u0026     rm /opt/phantompeakqualtools.${PHANTOMPEAKQUALTOOLS_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/phantompeakqualtools"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEEPTOOLS_VERSION",
              "Value": "\"2.5.4\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install git+git://github.com/fidelram/deepTools.git@$DEEPTOOLS_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGSPLOT_VERSION",
              "Value": "\"2.63\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://github.com/shenlab-sinai/ngsplot/archive/${NGSPLOT_VERSION}.tar.gz -o /opt/ngsplot_${NGSPLOT_VERSION}.tar.gz \u0026\u0026     tar xvzf /opt/ngsplot_${NGSPLOT_VERSION}.tar.gz -C /opt/ \u0026\u0026     rm /opt/ngsplot_${NGSPLOT_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/ngsplot-${NGSPLOT_VERSION}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGSPLOT",
              "Value": "/opt/ngsplot-${NGSPLOT_VERSION}/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL https://export.uppmax.uu.se/b2013064/test-data/ngi-chipseq_test_set.tar.bz2 -o /opt/ngi-chipseq_test_set.tar.bz2 \u0026\u0026     tar xvjf /opt/ngi-chipseq_test_set.tar.bz2 -C /opt/ \u0026\u0026     echo y | ngsplotdb.py install /opt/ngi-chipseq_test_set/ngsplotdb_mm10_75_3.00.tar.gz \u0026\u0026     echo y | ngsplotdb.py install /opt/ngi-chipseq_test_set/ngsplotdb_hg19_75_3.00.tar.gz \u0026\u0026     rm /opt/ngi-chipseq_test_set.tar.bz2 \u0026\u0026     rm -rf /opt/ngi-chipseq_test_set"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install MACS2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MULTIQC_VERSION",
              "Value": "\"v1.4\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install git+git://github.com/ewels/MultiQC.git@$MULTIQC_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /pica /lupus /crex1 /crex2 /proj /scratch /sw           /c3se /local /apps"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}