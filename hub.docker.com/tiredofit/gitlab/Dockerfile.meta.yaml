MetaArgs: null
Stages:
- BaseName: tiredofit/alpine:3.8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Dave Conroy (dave at tiredofit dot ca)"'
    Name: label
  - Env:
    - Key: GITLAB_VERSION
      Value: '"11.11.0"'
    - Key: GITLAB_SHELL_VERSION
      Value: '"9.1.0"'
    - Key: GITLAB_WORKHORSE_VERSION
      Value: '"8.7.0"'
    - Key: GITLAB_PAGES_VERSION
      Value: '"1.5.0"'
    - Key: GITALY_SERVER_VERSION
      Value: '"1.42.0"'
    - Key: GITLAB_USER
      Value: '"git"'
    - Key: GITLAB_HOME
      Value: '"/home/git"'
    - Key: RAILS_ENV
      Value: '"production"'
    - Key: NODE_ENV
      Value: '"production"'
    Name: env
  - Env:
    - Key: GITLAB_INSTALL_DIR
      Value: '"${GITLAB_HOME}/gitlab"'
    - Key: GITLAB_SHELL_INSTALL_DIR
      Value: '"${GITLAB_HOME}/gitlab-shell"'
    - Key: GITLAB_WORKHORSE_INSTALL_DIR
      Value: '"${GITLAB_HOME}/gitlab-workhorse"'
    - Key: GITLAB_PAGES_INSTALL_DIR
      Value: '"${GITLAB_HOME}/gitlab-pages"'
    - Key: GITLAB_GITALY_INSTALL_DIR
      Value: '"${GITLAB_HOME}/gitaly"'
    - Key: GITLAB_DATA_DIR
      Value: '"${GITLAB_HOME}/data"'
    - Key: GITLAB_BUILD_DIR
      Value: '"/usr/src"'
    - Key: GITLAB_RUNTIME_DIR
      Value: '"${GITLAB_CACHE_DIR}/runtime"'
    - Key: GITLAB_LOG_DIR
      Value: '"/var/log"'
    - Key: MODE
      Value: '"START"'
    Name: env
  - CmdLine:
    - 'set -x &&     addgroup -g 1000 -S ${GITLAB_USER} &&     adduser -u 1000 -D
      -S -s /bin/bash -G ${GITLAB_USER} ${GITLAB_USER} &&     sed -i ''/^git/s/!/*/''
      /etc/shadow &&     echo "PS1=''\w\$ ''" >> ${GITHOME_HOME}/.bashrc &&     echo
      "PATH=/usr/local/sbin:/usr/local/bin:\$PATH" >> ${GITLAB_HOME}/.profile &&         apk
      add --update --no-cache -t .gitlab-rundeps         gettext         git         grep         icu-libs         krb5-libs         libcom_err         libc6-compat         libressl         make         mariadb-client         nginx         nodejs         openssh         postgresql-client         python2         re2         rsync         ruby         ruby-bigdecimal         ruby-bundler         ruby-irb         ruby-json         ruby-webrick         shadow         su-exec         sudo         tzdata         zip         &&             apk
      add --update --no-cache -t .gitlab-build-deps         autoconf         build-base         cmake         coreutils         g++         gdbm-dev         go         icu-dev         krb5-dev         libassuan-dev         libffi-dev         libressl-dev         libgcrypt-dev         libxml2-dev         libxslt-dev         linux-headers         mariadb-dev         ncurses-dev         nodejs         npm         patch         postgresql-dev         re2-dev         readline-dev         ruby-dev         sqlite-dev         yaml-dev         zlib-dev         &&         rm
      -rf /etc/nginx/conf.d/default.conf &&     npm install -g yarn@v1.13 &&         apk
      add --update redis postgresql &&     cp /usr/bin/redis-cli /tmp &&     cp /usr/bin/pg_*
      /tmp &&     apk del --purge redis postgresql &&     mv /tmp/redis-cli /usr/bin/
      &&     mv /tmp/pg_* /usr/bin/ &&         GITLAB_CLONE_URL=https://gitlab.com/gitlab-org/gitlab-ce.git
      &&     mkdir -p ${GITLAB_INSTALL_DIR} &&     git clone -q -b v${GITLAB_VERSION}
      --depth 1 ${GITLAB_CLONE_URL} ${GITLAB_INSTALL_DIR} &&     chown -R ${GITLAB_USER}:${GITLAB_USER}
      ${GITLAB_INSTALL_DIR} &&     su-exec git sed -i "/headers\[''Strict-Transport-Security''\]/d"
      ${GITLAB_INSTALL_DIR}/app/controllers/application_controller.rb &&     cd ${GITLAB_INSTALL_DIR}
      &&     chown -R ${GITLAB_USER}:${GITLAB_USER} /usr/lib/ruby/gems/2.5.0/ &&         export
      BUNDLE_FORCE_RUBY_PLATFORM=1 &&     export CPU_COUNT=`awk ''/^processor/{n+=1}END{print
      n}'' /proc/cpuinfo` &&     su-exec git bundle install --jobs $CPU_COUNT --deployment
      --verbose --without development test aws &&         chown -R ${GITLAB_USER}:
      ${GITLAB_HOME} &&         su-exec git cp ${GITLAB_INSTALL_DIR}/config/resque.yml.example
      ${GITLAB_INSTALL_DIR}/config/resque.yml &&     su-exec git cp ${GITLAB_INSTALL_DIR}/config/gitlab.yml.example
      ${GITLAB_INSTALL_DIR}/config/gitlab.yml &&     su-exec git cp ${GITLAB_INSTALL_DIR}/config/database.yml.mysql
      ${GITLAB_INSTALL_DIR}/config/database.yml &&         su-exec git yarn install
      --production --pure-lockfile &&     su-exec git yarn add ajv@^4.0.0 &&         cd
      ${GITLAB_INSTALL_DIR} &&     su-exec git bundle exec rake gitlab:assets:compile
      NO_SOURCEMAPS=false USE_DB=false SKIP_STORAGE_VALIDATION=true &&         su-exec
      git bundle exec rake gettext:compile RAILS_ENV=production &&         cd ${GITLAB_HOME}
      &&     GITLAB_SHELL_URL=https://gitlab.com/gitlab-org/gitlab-shell/repository/archive.tar.gz
      &&     GITLAB_SHELL_VERSION=${GITLAB_SHELL_VERSION:-$(cat ${GITLAB_INSTALL_DIR}/GITLAB_SHELL_VERSION)}
      &&     echo "Downloading gitlab-shell v.${GITLAB_SHELL_VERSION}..." &&     mkdir
      -p ${GITLAB_SHELL_INSTALL_DIR} &&     curl -sSL ${GITLAB_SHELL_URL}?ref=v${GITLAB_SHELL_VERSION}
      | tar xfvz - --strip 1 -C ${GITLAB_SHELL_INSTALL_DIR} &&     chown -R ${GITLAB_USER}:
      ${GITLAB_SHELL_INSTALL_DIR} &&         cd ${GITLAB_SHELL_INSTALL_DIR} &&     su-exec
      git cp -a ${GITLAB_SHELL_INSTALL_DIR}/config.yml.example ${GITLAB_SHELL_INSTALL_DIR}/config.yml
      &&     su-exec git ./bin/compile &&     su-exec git ./bin/install &&         su-exec
      git rm -rf ${GITLAB_HOME}/repositories &&         GITLAB_WORKHORSE_URL=https://gitlab.com/gitlab-org/gitlab-workhorse.git
      &&     GITLAB_WORKHORSE_VERSION=${GITLAB_WORKHOUSE_VERSION:-$(cat ${GITLAB_INSTALL_DIR}/GITLAB_WORKHORSE_VERSION)}
      &&     echo "Cloning gitlab-workhorse v.${GITLAB_WORKHORSE_VERSION}..." &&     su-exec
      git git clone -q -b v${GITLAB_WORKHORSE_VERSION} --depth 1 ${GITLAB_WORKHORSE_URL}
      ${GITLAB_WORKHORSE_INSTALL_DIR} &&     chown -R ${GITLAB_USER}: ${GITLAB_WORKHORSE_INSTALL_DIR}
      &&     cd ${GITLAB_WORKHORSE_INSTALL_DIR} &&     make install &&         GITLAB_PAGES_URL=https://gitlab.com/gitlab-org/gitlab-pages.git
      &&     GITLAB_PAGES_VERSION=${GITLAB_PAGES_VERSION:-$(cat ${GITLAB_INSTALL_DIR}/GITLAB_PAGES_VERSION)}
      &&     echo "Downloading gitlab-pages v.${GITLAB_PAGES_VERSION}..." &&     su-exec
      git git clone -q -b v${GITLAB_PAGES_VERSION} --depth 1 ${GITLAB_PAGES_URL} ${GITLAB_PAGES_INSTALL_DIR}
      &&     chown -R ${GITLAB_USER}: ${GITLAB_PAGES_INSTALL_DIR} &&     cd ${GITLAB_PAGES_INSTALL_DIR}
      &&     make &&     cp -f gitlab-pages /usr/local/bin/ &&         GITLAB_GITALY_URL=https://gitlab.com/gitlab-org/gitaly.git
      &&     echo "Downloading gitaly v.${GITALY_SERVER_VERSION}..." &&     su-exec
      git git clone -q -b v${GITALY_SERVER_VERSION} --depth 1 ${GITLAB_GITALY_URL}
      ${GITLAB_GITALY_INSTALL_DIR} &&     chown -R ${GITLAB_USER}: ${GITLAB_GITALY_INSTALL_DIR}
      &&     su-exec git cp ${GITLAB_GITALY_INSTALL_DIR}/config.toml.example ${GITLAB_GITALY_INSTALL_DIR}/config.toml
      &&     cd ${GITLAB_GITALY_INSTALL_DIR} &&     export BUNDLE_FORCE_RUBY_PLATFORM=1
      &&     make install &&     make clean &&     ln -s /usr/local/bin/gitaly-ssh
      /home/git/gitaly/gitaly-ssh &&         su-exec git sed -i ''s/db:reset/db:setup/''
      ${GITLAB_INSTALL_DIR}/lib/tasks/gitlab/setup.rake &&         rm -rf ${GITLAB_DATA_DIR}/config/secrets.yml
      &&         rm -f ${GITLAB_INSTALL_DIR}/.gitlab_shell_secret ${GITLAB_INSTALL_DIR}/.gitlab_workhorse_secret
      &&         su-exec git mkdir -p ${GITLAB_INSTALL_DIR}/tmp/pids/ ${GITLAB_INSTALL_DIR}/tmp/sockets/
      &&     chmod -R u+rwX ${GITLAB_INSTALL_DIR}/tmp &&         rm -rf ${GITLAB_HOME}/.ssh
      &&     su-exec git ln -sf ${GITLAB_DATA_DIR}/.ssh ${GITLAB_HOME}/.ssh &&         rm
      -rf ${GITLAB_INSTALL_DIR}/log &&     ln -sf ${GITLAB_LOG_DIR}/gitlab ${GITLAB_INSTALL_DIR}/log
      &&         rm -rf ${GITLAB_INSTALL_DIR}/public/uploads &&     su-exec git ln
      -sf ${GITLAB_DATA_DIR}/uploads ${GITLAB_INSTALL_DIR}/public/uploads &&         rm
      -rf ${GITLAB_INSTALL_DIR}/.secret &&     su-exec git ln -sf ${GITLAB_DATA_DIR}/.secret
      ${GITLAB_INSTALL_DIR}/.secret &&         rm -rf ${GITLAB_INSTALL_DIR}/builds
      &&     rm -rf ${GITLAB_INSTALL_DIR}/shared &&         cp ${GITLAB_INSTALL_DIR}/lib/support/init.d/gitlab
      /etc/init.d/gitlab &&     chmod +x /etc/init.d/gitlab &&         rm -rf /etc/nginx/conf.d/default.conf
      &&         sed -i         -e "s|^[#]*UsePAM yes|UsePAM no|"         -e "s|^[#]*UsePrivilegeSeparation
      yes|UsePrivilegeSeparation no|"         -e "s|^[#]*PasswordAuthentication yes|PasswordAuthentication
      no|"         -e "s|^[#]*LogLevel INFO|LogLevel VERBOSE|"         /etc/ssh/sshd_config
      &&         echo "UseDNS no" >> /etc/ssh/sshd_config &&         sudo -u ${GITLAB_USER}
      git config --global core.autocrlf input &&     sudo -u ${GITLAB_USER} git config
      --global gc.auto 0 &&     sudo -u ${GITLAB_USER} git config --global repack.writeBitmaps
      true &&     sudo -u ${GITLAB_USER} git config --global receive.advertisePushOptions
      true &&         echo ${GITLAB_USER}" ALL=(root) NOPASSWD: /usr/sbin/sshd >/etc/sudoers.d/git"
      &&     rm -rf "${GITLAB_HOME}/.ssh" &&     ln -sf "${GITLAB_DATA_DIR}/.ssh"
      "${GITLAB_HOME}/.ssh" &&         npm uninstall -g yarn &&     apk del --purge
      .gitlab-build-deps &&     rm -rf ${GITLAB_INSTALL_DIR}/node_modules &&     rm
      -rf ${GITLAB_HOME}/.bundle &&     rm -rf ${GITLAB_HOME}/.cache &&     rm -rf
      ${GITLAB_HOME}/.yarn &&     rm -rf ${GITLAB_INSTALL_DIR}/*.md &&     rm -rf
      ${GITLAB_INSTALL_DIR}/docker* &&     rm -rf ${GITLAB_INSTALL_DIR}/qa &&     rm
      -rf ${GITLAB_GITALY_INSTALL_DIR}/*.md &&     rm -rf ${GITLAB_GITALY_INSTALL_DIR}/Dockerfile
      &&     rm -rf ${GITLAB_GITALY_INSTALL_DIR}/*.example &&     rm -rf ${GITLAB_GITALY_INSTALL_DIR}/Makefile
      &&     rm -rf ${GITLAB_SHELL_INSTALL_DIR}/*.md &&     rm -rf ${GITLAB_SHELL_INSTALL_DIR}/*.example
      &&     rm -rf ${GITLAB_WORKHORSE_INSTALL_DIR}/_build &&     rm -rf ${GITLAB_WORKHORSE_INSTALL_DIR}/*.md
      &&     rm -rf ${GITLAB_WORKHORSE_INSTALL_DIR}/testdata &&     rm -rf ${GITLAB_PAGES_INSTALL_DIR}/.git
      &&     rm -rf /usr/local/bundle/cache &&     rm -rf /usr/share/vim/vim80/doc/*
      &&     rm -rf /usr/src/* &&     rm -rf /var/cache/apk/*'
    Name: run
    PrependShell: true
  - Env:
    - Key: EXECJS_RUNTIME
      Value: '"Disabled"'
    Name: env
  - Name: workdir
    Path: ${GITLAB_INSTALL_DIR}
  - Name: expose
    Ports:
    - 22/tcp
    - 443/tcp
    - 80/tcp
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install
    - /
  From:
    Image: tiredofit/alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM tiredofit/alpine:3.8
