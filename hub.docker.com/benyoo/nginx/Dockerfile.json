{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "benyoo/alpine:3.9.20190527",
      "SourceCode": "FROM benyoo/alpine:3.9.20190527",
      "Platform": "",
      "From": {
        "Image": "benyoo/alpine:3.9.20190527"
      },
      "Commands": [
        {
          "Maintainer": "from www.dwhd.org by lookback (mondeolove@gmail.com)",
          "Name": "maintainer"
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "${VERSION:-1.16.0}"
        },
        {
          "Key": "AUTOINDEX_NAME_LEN",
          "Name": "arg",
          "Value": "${AUTOINDEX_NAME_LEN:-100}"
        },
        {
          "Env": [
            {
              "Key": "INSTALL_DIR",
              "Value": "/usr/local/nginx"
            },
            {
              "Key": "DATA_DIR",
              "Value": "/data/wwwroot"
            },
            {
              "Key": "TEMP_DIR",
              "Value": "/tmp/nginx"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026         mkdir -p $(dirname ${DATA_DIR}) ${TEMP_DIR} \u0026\u0026         apk update \u0026\u0026         apk --update --no-cache upgrade \u0026\u0026         apk add --no-cache --virtual .build-deps geoip geoip-dev pcre libxslt gd openssl-dev pcre-dev zlib-dev                 build-base linux-headers libxslt-dev gd-dev openssl-dev libstdc++ libgcc patch git tar curl luajit-dev \u0026\u0026         cd ${TEMP_DIR} \u0026\u0026         DOWN_URL=\"http://nginx.org/download\" \u0026\u0026         DOWN_URL=\"${DOWN_URL}/nginx-${VERSION}.tar.gz\" \u0026\u0026         FILE_NAME=${DOWN_URL##*/} \u0026\u0026 mkdir -p ${TEMP_DIR}/${FILE_NAME%%\\.tar*} \u0026\u0026         curl -Lk ${DOWN_URL} | tar xz -C ${TEMP_DIR} --strip-components=1 \u0026\u0026         git clone -b v0.6.4 https://github.com/yaoweibin/ngx_http_substitutions_filter_module.git \u0026\u0026         git clone -b v0.4.3 https://github.com/aperezdc/ngx-fancyindex.git \u0026\u0026         git clone -b v0.3.1rc1 https://github.com/simplresty/ngx_devel_kit.git \u0026\u0026         git clone -b v0.10.13 https://github.com/openresty/lua-nginx-module.git \u0026\u0026         git clone -b v0.1.18 https://github.com/vozlt/nginx-module-vts.git \u0026\u0026         git clone -b v0.3.0 https://github.com/yaoweibin/nginx_upstream_check_module.git \u0026\u0026         git clone https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng.git \u0026\u0026         git clone https://github.com/yzprofile/ngx_http_dyups_module.git \u0026\u0026         git clone https://github.com/cfsego/ngx_log_if.git \u0026\u0026         git clone https://github.com/openresty/headers-more-nginx-module.git \u0026\u0026         git clone https://github.com/ipipdotnet/nginx-ipip-module.git \u0026\u0026         addgroup -g 400 -S www \u0026\u0026         adduser -u 400 -S -h ${DATA_DIR} -s /sbin/nologin -g 'WEB Server' -G www www \u0026\u0026         export LUAJIT_LIB=/usr/lib \u0026\u0026         export LUAJIT_INC=/usr/include/luajit-2.1 \u0026\u0026         CFLAGS=-Wno-unused-but-set-variable ./configure --prefix=${INSTALL_DIR}                 --user=www --group=www                 --error-log-path=/data/wwwlogs/error.log                 --http-log-path=/data/wwwlogs/access.log                 --pid-path=/usr/local/nginx/nginx.pid                 --lock-path=/var/lock/nginx.lock                 --with-pcre                 --with-ipv6                 --with-mail                 --with-mail_ssl_module                 --with-pcre-jit                 --with-file-aio                 --with-compat                 --with-threads                 --with-stream                 --with-stream_ssl_module                 --with-http_ssl_module                 --with-http_flv_module                 --with-http_v2_module                 --with-http_realip_module                 --with-http_gzip_static_module                 --with-http_stub_status_module                 --with-http_sub_module                 --with-http_mp4_module                 --with-http_image_filter_module                 --with-http_addition_module                 --with-http_auth_request_module                 --with-http_dav_module                 --with-http_degradation_module                 --with-http_geoip_module                 --with-http_xslt_module                 --with-http_gunzip_module                 --with-http_secure_link_module                 --with-http_slice_module                 --add-module=./ngx-fancyindex                 --add-module=./ngx_http_substitutions_filter_module                 --add-module=./ngx_devel_kit                 --add-module=./lua-nginx-module                 --add-module=./nginx-module-vts                 --add-module=./nginx_upstream_check_module                 --add-module=./ngx_log_if                 --add-module=./ngx_http_dyups_module                 --add-module=./headers-more-nginx-module                 --add-dynamic-module=./nginx-ipip-module         \u0026\u0026         make -j$(getconf _NPROCESSORS_ONLN) \u0026\u0026         make install \u0026\u0026         runDeps=\"$( scanelf --needed --nobanner --recursive /usr/local/ | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u | xargs -r apk info --installed | sort -u )\" \u0026\u0026         runDeps=\"${runDeps} inotify-tools supervisor logrotate python luajit-dev\" \u0026\u0026         apk del .build-deps \u0026\u0026         apk del build-base git patch \u0026\u0026         apk add --no-cache --virtual .ngx-rundeps $runDeps \u0026\u0026         rm -rf /var/cache/apk/* /tmp/* ${INSTALL_DIR}/conf/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${INSTALL_DIR}/sbin:$PATH"
            },
            {
              "Key": "TERM",
              "Value": "linux"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc",
            "/etc"
          ]
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 mv /etc/entrypoint.sh entrypoint.sh \u0026\u0026 chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "${DATA_DIR}"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}