{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "benyoo/alpine:3.4.20160812",
      "SourceCode": "FROM benyoo/alpine:3.4.20160812",
      "Platform": "",
      "From": {
        "Image": "benyoo/alpine:3.4.20160812"
      },
      "Commands": [
        {
          "Maintainer": "from www.dwhd.org by lookback (mondeolove@gmail.com)",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "MEMCACHED_VERSION",
              "Value": "1.4.33"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MEMCACHED_SHA1",
              "Value": "e343530c55946ccbdd78c488355b02eaf90b3b46"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 \tLOCAL_MIRRORS=${LOCAL_MIRRORS:-http://mirrors.ds.com/alpine} \u0026\u0026 \tNET_MIRRORS=${NET_MIRRORS:-http://dl-cdn.alpinelinux.org/alpine} \u0026\u0026 \tLOCAL_MIRRORS_HTTP_CODE=$(curl -LI -m 10 -o /dev/null -sw %{http_code} ${LOCAL_MIRRORS}) \u0026\u0026 \tif [ \"${LOCAL_MIRRORS_HTTP_CODE}\" == \"200\" ]; then \t\techo -e \"${LOCAL_MIRRORS}/v3.4/main\\n${LOCAL_MIRRORS}/v3.4/community\" \u003e /etc/apk/repositories; else \t\techo -e \"${NET_MIRRORS}/v3.4/main\\n${NET_MIRRORS}/v3.4/community\" \u003e /etc/apk/repositories; fi \u0026\u0026 \taddgroup -g 490 -S memcache \u0026\u0026 \tadduser -S -H -u 490 -G memcache memcache \u0026\u0026 \tapk --update --no-cache upgrade \u0026\u0026 \tapk add --no-cache --virtual .build-deps \t\tgcc libc-dev libevent-dev linux-headers make perl tar \u0026\u0026 \tmkdir -p /usr/src/memcached \u0026\u0026 \tcurl -Lk \"http://memcached.org/files/memcached-$MEMCACHED_VERSION.tar.gz\" | tar xz -C /usr/src/memcached --strip-components=1 \u0026\u0026 \tcd /usr/src/memcached \u0026\u0026 \t./configure \u0026\u0026 \tmake -j$(getconf _NPROCESSORS_ONLN) \u0026\u0026 \tmake install \u0026\u0026 \tcd / \u0026\u0026 rm -rf /usr/src/memcached \u0026\u0026 \trunDeps=\"$( \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" \u0026\u0026 \tapk add --virtual .memcached-rundeps $runDeps \u0026\u0026 \tapk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "memcache"
        },
        {
          "Name": "expose",
          "Ports": [
            "11211"
          ]
        },
        {
          "CmdLine": [
            "memcached"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}