MetaArgs: null
Stages:
- BaseName: centos/systemd
  Commands:
  - Labels:
    - Key: name
      Value: '"Flexbox CentOS 7.4 + PHP 7.2 Image"'
    - Key: maintainer
      Value: '"Alex Karshin <https://flexbox.it>"'
    - Key: license
      Value: '"The Unlicense"'
    - Key: build-date
      Value: '"20180504"'
    - Key: source
      Value: '"https://github.com/flexbox-it/dockerimage-centos-php7-phalcon"'
    Name: label
  - CmdLine:
    - yum clean all; yum -y update --nogpgcheck
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install yum-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm;     rpm
      -Uvh http://rpms.remirepo.net/enterprise/remi-release-7.rpm;     yum-config-manager
      --enable remi-php72
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install --nogpgcheck     epel-release     wget     git     nano     postfix     gcc-c++     make     openssl-devel
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install     php     php-bcmath     php-cli     php-curl     php-devel     php-gd     php-fpm     php-imagick     php-intl     php-mbstring     php-mcrypt     php-mysqlnd     php-opcache
      --nogpgcheck     php-pdo     php-pear     php-pecl-redis     php-pgsql     php-phalcon     php-posix     php-xml     php-zip
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl config-set php_ini /etc/php.ini &&     pecl channel-update pecl.php.net
      &&     pecl install mongodb &&     echo "extension=mongodb" >> /etc/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://phar.phpunit.de/phpunit.phar -L -o phpunit.phar &&     chmod +x
      phpunit.phar &&     mv phpunit.phar /usr/local/bin/phpunit
    Name: run
    PrependShell: true
  - CmdLine:
    - rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install nginx --nogpgcheck
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" &&     php
      -r "if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061')
      { echo 'Installer verified'; } else { echo 'Installer corrupt. Maybe a new version
      was released and you forgot to update the verification hash?'; unlink('composer-setup.php');
      } echo PHP_EOL;" &&     php composer-setup.php &&     php -r "unlink('composer-setup.php');"
      &&     mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://rpm.nodesource.com/setup_9.x | bash - &&     yum
      -y install nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp && mkdir -p /run/php-fpm
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R nginx:nginx /var/lib/php/session && chmod 0777 /var/lib/php/session
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /tmp/start.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php/memory.ini
    - /etc/php.d/01-memory.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php/datetime.ini
    - /etc/php.d/01-datetime.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php/session.ini
    - /etc/php.d/01-session.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php/www.conf
    - /etc/php-fpm.d/www.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - postfix/main.cf
    - /etc/postfix/main.cf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - postfix/main.cf.working
    - /etc/postfix/main.cf.working
  - Name: workdir
    Path: '"/html"'
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Key: user
    Name: arg
    Value: "1000"
  - Key: group
    Name: arg
    Value: "1000"
  - CmdLine:
    - usermod -u $user nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - groupmod -g $group nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - /tmp/start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: centos/systemd
  Name: ""
  Platform: ""
  SourceCode: FROM centos/systemd
