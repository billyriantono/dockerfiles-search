MetaArgs: null
Stages:
- As: build-env
  BaseName: golang:1.10-alpine
  Commands:
  - Name: workdir
    Path: /go/src/github.com/Jleagle/canihave/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/github.com/Jleagle/canihave/
  - CmdLine:
    - apk update && apk add curl git openssh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - dep ensure
    Name: run
    PrependShell: true
  - CmdLine:
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10-alpine
  Name: build-env
  Platform: ""
  SourceCode: FROM golang:1.10-alpine AS build-env
- BaseName: alpine:3.8
  Commands:
  - Name: workdir
    Path: /root/
  - Chown: ""
    From: build-env
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/Jleagle/canihave/canihave
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - templates
    - ./templates
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets
    - ./assets
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - location/GeoLite2-Country.mmdb
    - ./location/GeoLite2-Country.mmdb
  - CmdLine:
    - apk update && apk add ca-certificates bash nano
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - ./canihave
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
