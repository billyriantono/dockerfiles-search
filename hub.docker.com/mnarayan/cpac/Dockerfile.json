{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:trusty",
      "SourceCode": "FROM ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "ubuntu:trusty"
      },
      "Commands": [
        {
          "Maintainer": "John Pellman \u003cjohn.pellman@childmind.org\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "FSLDIR",
              "Value": "/usr/share/fsl/5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FSLOUTPUTTYPE",
              "Value": "NIFTI_GZ"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FSLMULTIFILEQUIT",
              "Value": "TRUE"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FSLTCLSH",
              "Value": "/usr/bin/tclsh"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FSLWISH",
              "Value": "/usr/bin/wish"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FSLBROWSER",
              "Value": "/etc/alternatives/x-www-browser"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANTSPATH",
              "Value": "/opt/ants/bin/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DYLD_FALLBACK_LIBRARY_PATH",
              "Value": "/opt/afni"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/lib/fsl/5.0:${LD_LIBRARY_PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/code:/opt/c3d/bin:/opt/ants/bin:/opt/afni:${FSLDIR}/bin:/usr/local/bin/miniconda/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /scratch \u0026\u0026 mkdir /local-scratch \u0026\u0026 mkdir -p /code \u0026\u0026 mkdir -p /cpac_resources"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y curl \u0026\u0026     curl -sL https://deb.nodesource.com/setup_4.x | bash - \u0026\u0026     apt-get install -y nodejs \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bids-validator"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O- http://neuro.debian.net/lists/trusty.us-ca.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list \u0026\u0026             apt-key adv --recv-keys --keyserver hkp://pgp.mit.edu:80 0xA5D32F012649A5A9 \u0026\u0026             apt-get update \u0026\u0026             apt-get install -y fsl-5.0-core fsl-5.0-doc fsl-atlases fslview \u0026\u0026             apt-get autoclean -y \u0026\u0026             apt-get clean -y \u0026\u0026             apt-get autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://sourceforge.net/projects/c3d/files/c3d/c3d-0.8.2/c3d-0.8.2-Linux-x86_64.tar.gz \u0026\u0026      tar xfz c3d-0.8.2-Linux-x86_64.tar.gz \u0026\u0026      mv c3d-0.8.2-Linux-x86_64 /opt/c3d \u0026\u0026      export PATH=/opt/c3d/bin:$PATH \u0026\u0026      echo '# Path to C3D' \u003e\u003e ~/cpac_env.sh \u0026\u0026      echo 'export PATH=/opt/c3d/bin:$PATH' \u003e\u003e ~/cpac_env.sh \u0026\u0026      rm c3d-0.8.2-Linux-x86_64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y ants \u0026\u0026     apt-get autoclean -y \u0026\u0026     apt-get clean -y \u0026\u0026     apt-get autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "afni_minimal.tar.gz",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "tar xfz /tmp/afni_minimal.tar.gz \u0026\u0026     mv afni_minimal /opt/afni \u0026\u0026     rm /tmp/afni_minimal.tar.gz \u0026\u0026     export PATH=/opt/afni:$PATH \u0026\u0026     export DYLD_FALLBACK_LIBRARY_PATH=/opt/afni \u0026\u0026     echo '# Path to AFNI' \u003e\u003e ~/cpac_env.sh \u0026\u0026     echo 'export PATH=/opt/afni:$PATH' \u003e\u003e ~/cpac_env.sh \u0026\u0026     echo 'export DYLD_FALLBACK_LIBRARY_PATH=/opt/afni' \u003e\u003e ~/cpac_env.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cpac_install.sh",
            "/tmp/cpac_install.sh"
          ]
        },
        {
          "CmdLine": [
            "/tmp/cpac_install.sh -s"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/tmp/cpac_install.sh -p"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/tmp/cpac_install.sh -n cpac"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "version",
            "/code/version"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bids_utils.py",
            "/code/bids_utils.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.py",
            "/code/run.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cpac_templates.tar.gz",
            "/cpac_resources/cpac_templates.tar.gz"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /code/run.py \u0026\u0026 cd /cpac_resources    \u0026\u0026 tar xzvf /cpac_resources/cpac_templates.tar.gz    \u0026\u0026 rm -f /cpac_resources/cpac_templates.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "default_pipeline.yaml",
            "/cpac_resources/default_pipeline.yaml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test_pipeline.yaml",
            "/cpac_resources/test_pipeline.yaml"
          ]
        },
        {
          "CmdLine": [
            "/code/run.py"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}