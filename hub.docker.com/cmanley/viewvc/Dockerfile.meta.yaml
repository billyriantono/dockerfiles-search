MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Labels:
    - Key: Maintainer
      Value: '"Craig Manley https://github.com/cmanley"'
    - Key: Description
      Value: '"ViewVC 1.1.26-1 (CVS & SVN repository viewer) based on nginx and Alpine
        3.8"'
    Name: label
  - CmdLine:
    - "apk update && apk --no-cache add \tcvs \tfcgiwrap \tnginx \tpython3 \tpy-subversion
      \tpy-chardet \tpy-pygments \tshadow \tspawn-fcgi \tsubversion \tsupervisor \ttzdata
      \t&& apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/
      rcs"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/fcgiwrap /usr/sbin/fcgiwrap
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser -D -S -u 82 -h /var/www -G www-data www-data
    Name: run
    PrependShell: true
  - Key: CVSGRAPH_VERSION
    Name: arg
    Value: 1.7.0
  - Key: CVSGRAPH_BASENAME
    Name: arg
    Value: cvsgraph-$CVSGRAPH_VERSION
  - Key: CVSGRAPH_DOWNLOAD_FILE
    Name: arg
    Value: $CVSGRAPH_BASENAME.tar.gz
  - Key: CVSGRAPH_DOWNLOAD_URL
    Name: arg
    Value: https://github.com/cmanley/viewvc-docker/raw/alpine/$CVSGRAPH_DOWNLOAD_FILE
  - Key: CVSGRAPH_DOWNLOAD_SHA256
    Name: arg
    Value: 74438faaefd325c7a8ed289ea5d1657befe1d1859d55f8fbbcc7452f4efd435f
  - CmdLine:
    - "printf \"\\n########## Building cvsgraph ##########\\n\" \t&& cd /tmp \t&&
      apk --no-cache add libgd \t&& NEED='byacc flex gd-dev g++ make freetype-dev
      libjpeg-turbo-dev libpng-dev libwebp-dev wget' \t&& DEL='' \t&& for x in $NEED;
      do \t\tapk list \"$x\"; \t\tif [ $(apk list \"$x\" | grep -F [installed] | wc
      -l) -eq 0 ]; then \t\t\tDEL=\"$DEL $x\" \t\t\t&& echo \"Add temporary package
      $x\" \t\t\t&& apk --no-cache add $x; \t\tfi; \t\techo $?; \tdone \t&& wget -q
      \"$CVSGRAPH_DOWNLOAD_URL\" -O \"$CVSGRAPH_DOWNLOAD_FILE\" \t&& sha256sum \"$CVSGRAPH_DOWNLOAD_FILE\"
      \t&& echo \"$CVSGRAPH_DOWNLOAD_SHA256  $CVSGRAPH_DOWNLOAD_FILE\" | sha256sum
      -c - \t&& tar -xf \"$CVSGRAPH_DOWNLOAD_FILE\" \t&& rm -fr \"$CVSGRAPH_DOWNLOAD_FILE\"
      \t&& cd \"$CVSGRAPH_BASENAME\" \t&& ./configure --prefix=/usr sysconfdir=/etc/cvsgraph
      --disable-nls \t&& make --quiet install \t&& mkdir -p /etc/cvsgraph \t&& cp
      cvsgraph.conf /etc/cvsgraph/ \t&& cd - \t&& rm -fr \"$CVSGRAPH_BASENAME\" \t&&
      rm -fr /usr/share/man \t&& if [ -n \"$DEL\" ]; then echo \"Delete temporary
      package(s) $DEL\" && apk del $DEL; fi"
    Name: run
    PrependShell: true
  - Key: VIEWVC_DOWNLOAD_FILE
    Name: arg
    Value: viewvc_1.1.26-1_all.deb
  - Key: VIEWVC_DOWNLOAD_URL
    Name: arg
    Value: http://ftp.debian.org/debian/pool/main/v/viewvc/$VIEWVC_DOWNLOAD_FILE
  - Key: VIEWVC_DOWNLOAD_SHA256
    Name: arg
    Value: bbe0567fb65c4a1e8c480f5638b7df2758821ba1467f64c6862fc8fad5375ba0
  - CmdLine:
    - "printf \"\\n########## Installing viewvc ##########\\n\" \t&& NEED='binutils
      wget' \t&& DEL='' \t&& for x in $NEED; do \t\tif [ $(apk list \"$x\" | grep
      -F [installed] | wc -l) -eq 0 ]; then \t\t\tDEL=\"$DEL $x\" \t\t\t&& echo \"Add
      temporary package $x\" \t\t\t&& apk --no-cache add $x; \t\tfi; \tdone \t&& cd
      /tmp \t&& wget -q \"$VIEWVC_DOWNLOAD_URL\" -O \"$VIEWVC_DOWNLOAD_FILE\" \t&&
      sha256sum \"$VIEWVC_DOWNLOAD_FILE\" \t&& echo \"$VIEWVC_DOWNLOAD_SHA256  $VIEWVC_DOWNLOAD_FILE\"
      | sha256sum -c - \t&& ar x \"$VIEWVC_DOWNLOAD_FILE\" data.tar.xz && rm \"$VIEWVC_DOWNLOAD_FILE\"
      \t&& tar -xf data.tar.xz -C / ./usr ./etc && rm data.tar.xz \t&& if [ -n \"$DEL\"
      ]; then echo \"Delete temporary package(s) $DEL\" && apk del $DEL; fi \t&& mkdir
      -p /opt/cvs /opt/svn \t&& chgrp www-data /opt/cvs /opt/svn \t&& ln -s /usr/share/viewvc/docroot/images/favicon.ico
      /usr/share/viewvc/favicon.ico \t&& mv /etc/viewvc/viewvc.conf /etc/viewvc/viewvc.conf.dist
      \t&& ALPINE_VERSION=$(cat /etc/alpine-release) \t&& sed -Ei 's/(<td>Powered
      by .+?<\\/a>)/\\1 in an Alpine Linux '$ALPINE_VERSION' based Docker container/'
      /etc/viewvc/templates/include/footer.ezt"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - copy
    - /
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - viewvc
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
