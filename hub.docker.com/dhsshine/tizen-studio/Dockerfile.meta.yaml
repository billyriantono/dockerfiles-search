MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Key: user
    Name: arg
    Value: developer
  - Key: group
    Name: arg
    Value: developer
  - Key: uid
    Name: arg
    Value: "2000"
  - Key: gid
    Name: arg
    Value: "2000"
  - CmdLine:
    - apt-get update   && apt-get install -y   ca-certificates   wget   curl   zip   software-properties-common   apt-transport-https   pciutils   libxcb-xfixes0   libxi6   libpixman-1-0   libxcb-render-util0   python2.7   libwebkitgtk-1.0-0   libxcb-image0   acl   libsdl1.2debian   libv4l-0   libxcb-randr0   libxcb-shape0   libx11-xcb1   libxcb-icccm4   libfontconfig1   libsm6   libjpeg-turbo8   gettext   rpm2cpio   cpio   make   bridge-utils   openvpn   git   ruby   tzdata   virtualenv   python   python-requests   python-pycurl   python-lxml   python3-requests   python3-lxml   python3-yaml   python3-jinja2   &&
      rm -rf /var/lib/apt/lists/*   && rm -rf /etc/apt/sources.list.d/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true
      | debconf-set-selections   && add-apt-repository -y ppa:webupd8team/java   &&
      apt-get update   && apt-get install -y oracle-java8-installer   && rm -rf /var/lib/apt/lists/*   &&
      rm -rf /var/cache/oracle-jdk8-installer
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && apt-get install -y   libunwind8   liblttng-ust0   libcurl3   libssl1.0.0   libuuid1   libkrb5-3   zlib1g   libicu55   &&
      rm -rf /var/lib/apt/lists/*   && rm -rf /etc/apt/sources.list.d/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg   &&
      mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod
      xenial main" > /etc/apt/sources.list.d/dotnetdev.list'   && apt-get update   &&
      apt-get install -y dotnet-sdk-2.1   && rm -rf /var/lib/apt/lists/*   && rm -rf
      /etc/apt/sources.list.d/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF   &&
      sh -c 'echo "deb https://download.mono-project.com/repo/ubuntu stable-xenial
      main" > /etc/apt/sources.list.d/mono-official-stable.list'   && apt-get update   &&
      apt-get install -y nuget mono-devel   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: '''Asia/Seoul'''
    Name: env
  - CmdLine:
    - echo $TZ > /etc/timezone   && rm /etc/localtime   && ln -snf /usr/share/zoneinfo/$TZ
      /etc/localtime   && dpkg-reconfigure -f noninteractive tzdata
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/${user}
    Name: env
  - CmdLine:
    - groupadd -g ${gid} ${group}   && useradd -d "$HOME" -u ${uid} -g ${gid} -m -s
      /bin/bash ${user}
    Name: run
    PrependShell: true
  - Name: user
    User: ${user}
  - Name: workdir
    Path: ${HOME}
  - CmdLine:
    - wget http://download.tizen.org/sdk/Installer/tizen-studio_2.5/web-cli_Tizen_Studio_2.5_ubuntu-64.bin   &&
      chmod +x web-cli_Tizen_Studio_2.5_ubuntu-64.bin   && echo y | ./web-cli_Tizen_Studio_2.5_ubuntu-64.bin
      --accept-license   && rm -rf web-cli_Tizen_Studio_2.5_ubuntu-64.bin
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone git://git.tizen.org/sdk/tools/sdk-build -b tizen
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:$HOME/tizen-studio/tools/ide/bin/:$HOME/tizen-studio/package-manager/:$HOME/sdk-build/
    Name: env
  - CmdLine:
    - virtualenv venv -p python3   && . venv/bin/activate   && pip install requests
      pyyaml lxml jinja2   && deactivate
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
