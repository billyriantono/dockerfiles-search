{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "Maintainer": "Naoki Saito \u003csaito.naoki@nmiri.city.nagoya.jp\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get upgrade -y \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends         sudo git wget curl bzip2 vim ca-certificates         make build-essential libssl-dev zlib1g-dev libbz2-dev         libreadline-dev libsqlite3-dev llvm libncurses5-dev libncursesw5-dev         xz-utils tk-dev less libhdf5-dev g++ graphviz openmpi-bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "USER",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "USER_NAME",
              "Value": "${USER:-\"developer\"}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER_HOME",
              "Value": "/home/$USER_NAME"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "adduser --gecos \",,,\" --disabled-password $USER_NAME \u0026\u0026     passwd -d $USER_NAME \u0026\u0026     usermod -G sudo $USER_NAME \u0026\u0026     echo $USER_NAME ALL=NOPASSWD: ALL \u003e /etc/sudoers.d/$USER_NAME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "mkdir -p $CONDA_DIR \u0026\u0026     echo export PATH=$CONDA_DIR/bin:'$PATH' \u003e /etc/profile.d/conda.sh \u0026\u0026     wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh \u0026\u0026     echo \"c989ecc8b648ab8a64731aaee9ed2e7e *Anaconda3-5.0.1-Linux-x86_64.sh\" | md5sum -c - \u0026\u0026     /bin/bash Anaconda3-5.0.1-Linux-x86_64.sh -f -b -p $CONDA_DIR \u0026\u0026     rm Anaconda3-5.0.1-Linux-x86_64.sh \u0026\u0026     conda install -y python=3.5 \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install jupyter matplotlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$USER_NAME"
        },
        {
          "Name": "workdir",
          "Path": "$USER_HOME"
        },
        {
          "CmdLine": [
            "mkdir $USER_HOME/.jupyter \u0026\u0026     touch $USER_HOME/.jupyter/jupyter_notebook_config.py \u0026\u0026     echo c.NotebookApp.token = \\'\\' \u003e\u003e $USER_HOME/.jupyter/jupyter_notebook_config.py \u0026\u0026     echo c.NotebookApp.password = \\'\\' \u003e\u003e $USER_HOME/.jupyter/jupyter_notebook_config.py \u0026\u0026     echo c.NotebookApp.open_browser = False \u003e\u003e $USER_HOME/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/yyuu/pyenv.git $USER_HOME/.pyenv \u0026\u0026     eval echo 'export PYENV_ROOT=$USER_HOME/.pyenv' \u003e\u003e $USER_HOME/.profile \u0026\u0026     echo 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' \u003e\u003e $USER_HOME/.profile \u0026\u0026     echo 'if which pyenv \u003e /dev/null; then eval \"$(pyenv init -)\"; fi' \u003e\u003e $USER_HOME/.profile"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}