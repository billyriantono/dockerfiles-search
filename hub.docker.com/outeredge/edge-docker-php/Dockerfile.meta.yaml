MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Name: workdir
    Path: /var/www
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /launch.sh
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - apk add --no-cache         bash         bash-completion         ca-certificates         curl         git         git-bash-completion         msmtp         nano         openssh         openssh-sftp-server         python         sudo         supervisor         shadow         tar         unzip         wget
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_VERSION
      Value: "7.1"
    - Key: ENABLE_CRON
      Value: "Off"
    - Key: ENABLE_SSH
      Value: "Off"
    - Key: PHP_DISPLAY_ERRORS
      Value: "Off"
    - Key: PHP_OPCACHE_VALIDATE
      Value: "On"
    - Key: PHP_MAX_CHILDREN
      Value: "20"
    - Key: PHP_TIMEZONE
      Value: Europe/London
    - Key: XDEBUG_ENABLE
      Value: "Off"
    - Key: XDEBUG_HOST
      Value: ""
    - Key: SMTP_HOST
      Value: ""
    - Key: SMTP_PORT
      Value: ""
    - Key: SMTP_USER
      Value: ""
    - Key: SMTP_PASS
      Value: ""
    - Key: SMTP_FROM
      Value: ""
    Name: env
  - CmdLine:
    - apk add --no-cache         php7=~${PHP_VERSION}             php7-bcmath             php7-ctype             php7-curl             php7-dom             php7-fileinfo             php7-fpm             php7-intl             php7-json             php7-mbstring             php7-mcrypt             php7-mysqli             php7-mysqlnd             php7-opcache             php7-openssl             php7-phar             php7-pdo_mysql             php7-redis             php7-xdebug             php7-simplexml             php7-soap             php7-tokenizer             php7-xml             php7-xmlreader             php7-xmlwriter             php7-xsl             php7-zip         nginx         nodejs         nodejs-npm
      &&     npm install gulp-cli -g &&     rm -Rf /var/www/* &&     chmod g=u /etc/passwd
    Name: run
    PrependShell: true
  - Chown: ""
    From: composer:latest
    Name: copy
    SourcesAndDest:
    - /usr/bin/composer
    - /usr/bin/composer
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /
  - CmdLine:
    - /build.sh
    Name: run
    PrependShell: true
  - Name: user
    User: edge
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
