{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "fabioluciano/alpine-base-java",
      "SourceCode": "FROM fabioluciano/alpine-base-java",
      "Platform": "",
      "From": {
        "Image": "fabioluciano/alpine-base-java"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Maintainer",
              "Value": "\"FÃ¡bio Luciano \u003cfabioluciano@php.net\u003e\""
            },
            {
              "Key": "Description",
              "Value": "\"Alpine Java Wildfly\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "wildfly_version",
          "Name": "arg",
          "Value": "\"10.1.0.Final\""
        },
        {
          "Key": "wildfly_url",
          "Name": "arg",
          "Value": "\"http://download.jboss.org/wildfly/${wildfly_version}/wildfly-${wildfly_version}.tar.gz\""
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/supervisor/*",
            "/etc/supervisor.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "apk --update --no-cache add openssh   \u0026\u0026 printf \"password\\npassword\" | adduser wildfly   \u0026\u0026 printf \"\\n\\n\" | ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key   \u0026\u0026 printf \"\\n\\n\" | ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key   \u0026\u0026 printf \"\\n\\n\" | ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key   \u0026\u0026 printf \"\\n\\n\" | ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key   \u0026\u0026 echo \"AllowUsers wildfly\" \u003e\u003e /etc/ssh/sshd_config   \u0026\u0026 curl -L ${wildfly_url} \u003e wildfly.tar.gz \u0026\u0026 directory=$(tar tfz wildfly.tar.gz --exclude '*/*')   \u0026\u0026 tar -xzf wildfly.tar.gz \u0026\u0026 rm wildfly.tar.gz \u0026\u0026 mv $directory wildfly   \u0026\u0026 echo 'JAVA_OPTS=\"$JAVA_OPTS -Duser.timezone=America/Sao_Paulo -Duser.country=BR -Duser.language=pt\"' \u003e\u003e /opt/wildfly/bin/standalone.conf   \u0026\u0026 chown wildfly:wildfly /opt/wildfly -R \u0026\u0026 mkdir -p /var/log/sshd/ /var/log/wildfly/   \u0026\u0026 printf 'export JBOSS_HOME=/opt/wildfly\\nexport PATH=$PATH:$JBOSS_HOME' \u003e /etc/profile.d/jboss.sh   \u0026\u0026 /opt/wildfly/bin/add-user.sh admin admin --silent=true   \u0026\u0026 chmod a+x /usr/local/bin/entrypoint.sh   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/standalone/*",
            "/opt/wildfly/standalone/configuration"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/wildfly/standalone/configuration",
            "/opt/wildfly/standalone/deployments",
            "/opt/wildfly/standalone/tmp",
            "/opt/wildfly/standalone/data",
            "/opt/wildfly/standalone/log"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/wildfly"
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "22/tcp",
            "8080/tcp",
            "8443/tcp",
            "9990/tcp",
            "9993/tcp"
          ]
        }
      ]
    }
  ]
}