MetaArgs: null
Stages:
- BaseName: frolvlad/alpine-glibc:alpine-3.4
  Commands:
  - Maintainer: Micah Hausler <micah@skuid.com>
    Name: maintainer
  - CmdLine:
    - apk --update add curl ca-certificates tar
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_VERSION_MAJOR
      Value: "8"
    Name: env
  - Env:
    - Key: JAVA_VERSION_MINOR
      Value: "77"
    Name: env
  - Env:
    - Key: JAVA_VERSION_BUILD
      Value: "03"
    Name: env
  - Env:
    - Key: JAVA_PACKAGE
      Value: jdk
    Name: env
  - CmdLine:
    - 'mkdir /opt && curl -jksSLH "Cookie: oraclelicense=accept-securebackup-cookie"  http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz     |
      tar -xzf - -C /opt &&    ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR}
      /opt/jdk &&    rm -rf /opt/jdk/*src.zip            /opt/jdk/lib/missioncontrol            /opt/jdk/lib/visualvm            /opt/jdk/lib/*javafx*            /opt/jdk/jre/lib/plugin.jar            /opt/jdk/jre/lib/ext/jfxrt.jar            /opt/jdk/jre/bin/javaws            /opt/jdk/jre/lib/javaws.jar            /opt/jdk/jre/lib/desktop            /opt/jdk/jre/plugin            /opt/jdk/jre/lib/deploy*            /opt/jdk/jre/lib/*javafx*            /opt/jdk/jre/lib/*jfx*            /opt/jdk/jre/lib/amd64/libdecora_sse.so            /opt/jdk/jre/lib/amd64/libprism_*.so            /opt/jdk/jre/lib/amd64/libfxplugins.so            /opt/jdk/jre/lib/amd64/libglass.so            /opt/jdk/jre/lib/amd64/libgstreamer-lite.so            /opt/jdk/jre/lib/amd64/libjavafx*.so            /opt/jdk/jre/lib/amd64/libjfx*.so'
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /opt/jdk
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${JAVA_HOME}/bin
    Name: env
  - Env:
    - Key: ZK_RELEASE
      Value: '"http://www.apache.org/dist/zookeeper/zookeeper-3.4.8/zookeeper-3.4.8.tar.gz"'
    - Key: EXHIBITOR_POM
      Value: '"https://raw.githubusercontent.com/Netflix/exhibitor/master/exhibitor-standalone/src/main/resources/buildscripts/standalone/maven/pom.xml"'
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/lib/mvn/bin
    Name: env
  - Env:
    - Key: MAVEN_VERSION
      Value: 3.3.9
    Name: env
  - CmdLine:
    - apk update     && apk add wget bash     && wget --progress dot:mega http://apache.cs.utah.edu/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz    &&
      tar xfz apache-maven-$MAVEN_VERSION-bin.tar.gz     && rm apache-maven-$MAVEN_VERSION-bin.tar.gz     &&
      mv apache-maven-$MAVEN_VERSION /usr/lib/mvn     && curl -s -Lo /tmp/zookeeper.tgz
      $ZK_RELEASE     && mkdir -p /opt/zookeeper/transactions /opt/zookeeper/snapshots     &&
      tar xzf /tmp/zookeeper.tgz -C /opt/zookeeper --strip-components=1     && rm
      /tmp/zookeeper.tgz     && mkdir -p /opt/exhibitor     && curl -s -Lo /opt/exhibitor/pom.xml
      $EXHIBITOR_POM     && mvn -f /opt/exhibitor/pom.xml package     && ln -s /opt/exhibitor/target/exhibitor*jar
      /opt/exhibitor/exhibitor.jar
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - wrapper.sh
    - /opt/exhibitor/wrapper.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - web.xml
    - /opt/exhibitor/web.xml
  - Name: workdir
    Path: /opt/exhibitor
  - Name: expose
    Ports:
    - "2181"
    - "2281"
    - "2888"
    - "3888"
    - "8080"
    - "8181"
  - Name: volume
    Volumes:
    - /opt/zookeeper/local_configs
  - Labels:
    - Key: name
      Value: '"zookeeper"'
    - Key: version
      Value: '"3.4.8"'
    Name: label
  - CmdLine:
    - bash
    - -ex
    - /opt/exhibitor/wrapper.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: frolvlad/alpine-glibc:alpine-3.4
  Name: ""
  Platform: ""
  SourceCode: FROM frolvlad/alpine-glibc:alpine-3.4
