MetaArgs: null
Stages:
- BaseName: docker:latest
  Commands:
  - Key: HELM_VERSION
    Name: arg
    Value: '"v2.14.2"'
  - Key: CLOUD_SDK_VERSION
    Name: arg
    Value: 255.0.0
  - Env:
    - Key: CLOUD_SDK_VERSION
      Value: $CLOUD_SDK_VERSION
    Name: env
  - Env:
    - Key: HELM_VERSION
      Value: $HELM_VERSION
    Name: env
  - Env:
    - Key: PATH
      Value: /google-cloud-sdk/bin:$PATH
    Name: env
  - CmdLine:
    - apk --no-cache add         make         bash         ca-certificates         curl         gnupg         python         py-crcmod         libc6-compat         openssh-client         php         php-curl         php-openssl         php-json         php-phar         php-dom         php-iconv     &&
      curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz
      &&     tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz &&     rm
      google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz &&     ln -s /lib
      /lib64 &&     gcloud config set core/disable_usage_reporting true &&     gcloud
      config set component_manager/disable_update_check true &&     gcloud config
      set metrics/environment github_docker_image &&     gcloud --version &&     gcloud
      components install kubectl     && wget -q https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz
      -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm     && chmod +x /usr/local/bin/helm     &&
      curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
    Name: run
    PrependShell: true
  From:
    Image: docker:latest
  Name: ""
  Platform: ""
  SourceCode: FROM docker:latest
