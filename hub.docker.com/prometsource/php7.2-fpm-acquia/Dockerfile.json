{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm",
      "SourceCode": "FROM php:7.2-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Lisa Ridley \u003clisa@prometsource.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update -qq   \u0026\u0026 apt-get install wget mysql-client unzip zip -yq     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y libpng-dev libjpeg-dev libpq-dev libbz2-dev libgmp-dev libmemcached-dev     libxml2-dev libtidy-dev libxslt-dev libyaml-dev libmcrypt-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr     \u0026\u0026 docker-php-ext-install gd mbstring opcache pdo pdo_mysql pdo_pgsql zip mysqli bcmath bz2 calendar exif gettext gmp     \u0026\u0026 docker-php-ext-install pcntl shmop soap sockets     \u0026\u0026 docker-php-ext-install sysvmsg sysvsem sysvshm tidy wddx xmlrpc xsl     \u0026\u0026 pecl install memcached mcrypt-1.0.1 yaml     \u0026\u0026 docker-php-ext-enable memcached mcrypt yaml     \u0026\u0026 {         echo 'opcache.memory_consumption=128';         echo 'opcache.interned_strings_buffer=8';         echo 'opcache.max_accelerated_files=4000';         echo 'opcache.revalidate_freq=0';         echo 'opcache.fast_shutdown=1';         echo 'opcache.enable_cli=1';     } \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini     \u0026\u0026 apt-get update -qq \u0026\u0026 apt-get install -yq git golang-go \u0026\u0026     mkdir -p /opt/go \u0026\u0026     export GOPATH=/opt/go \u0026\u0026     go get github.com/mailhog/mhsendmail     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt autoremove -y     \u0026\u0026 pecl install xdebug-2.7.0;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf.d/*",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "chmod 644 /usr/local/etc/php/conf.d/*     \u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 composer --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/docroot"
        }
      ]
    }
  ]
}