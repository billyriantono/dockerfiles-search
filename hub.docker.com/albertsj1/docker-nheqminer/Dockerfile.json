{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04 as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y git curl unzip build-essential fasm libboost-dev libboost-system-dev libboost-log-dev libboost-thread-dev \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "curl -LOs https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.sh \u0026\u0026     chmod +x cmake-3.10.2-Linux-x86_64.sh \u0026\u0026     ./cmake-3.10.2-Linux-x86_64.sh --skip-license --prefix=/usr/local \u0026\u0026     rm cmake-3.10.2-Linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LOs https://github.com/dmikushin/nheqminer/archive/master.zip \u0026\u0026     unzip master.zip \u0026\u0026     rm master.zip \u0026\u0026     cd nheqminer-master \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake -DUSE_CUDA_DJEZO=off .. \u0026\u0026     make -j$(nproc)"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/nheqminer-master/build/nheqminer",
            "/usr/bin"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/nheqminer"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}