{
  "MetaArgs": [
    {
      "Key": "PHP_VERSION",
      "DefaultValue": "7.0",
      "ProvidedValue": null,
      "Value": "7.0"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:${PHP_VERSION}-apache",
      "SourceCode": "FROM php:${PHP_VERSION}-apache",
      "Platform": "",
      "From": {
        "Image": "php:${PHP_VERSION}-apache"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SERVER_NAME",
              "Value": "localhost"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCUMENT_ROOT",
              "Value": "/var/www/html"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DIRECTORY_PERMISSION",
              "Value": "775"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FILE_PERMISSION",
              "Value": "664"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SKIP_PERMISSIONS",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_EXECUTION_TIME",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_INPUT_TIME",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_INPUT_VARS",
              "Value": "1500"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MEMORY_LIMIT",
              "Value": "-1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POST_MAX_SIZE",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UPLOAD_MAX_FILESIZE",
              "Value": "2048M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DATE_TIMEZONE",
              "Value": "America/Los_Angeles"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WHITELIST_IP",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupmod -g 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd dev -m"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -aG www-data dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -aG dev www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     build-essential     apt-utils     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpng-dev     libpq-dev \tzlib1g-dev libicu-dev g++     sqlite3 libsqlite3-dev     libxml2-dev     libssh2-1-dev     libssh2-1 \tlibxslt-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y git vim cron htop zip unzip pwgen curl wget ruby rubygems ruby-dev screen openssl openssh-server supervisor nano ncdu zsh python-certbot-apache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if [ \"${PHP_VERSION}\" = \"7.2.13\" ]; then printf \"\\n\" | pecl install mcrypt-1.0.1; docker-php-ext-enable mcrypt; else docker-php-ext-install mcrypt ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install iconv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mbstring"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mysqli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo_mysql pdo_pgsql pdo_sqlite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install soap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install tokenizer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install xsl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure bcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install bcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install redis-4.2.0     \u0026\u0026 docker-php-ext-enable redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{         echo 'opcache.memory_consumption=128';         echo 'opcache.interned_strings_buffer=8';         echo 'opcache.max_accelerated_files=40000';         echo 'opcache.revalidate_freq=0';         echo 'opcache.validate_timestamps=1';         echo 'opcache.fast_shutdown=1';         echo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install ssh2-1.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \u0026\u0026     php composer-setup.php \u0026\u0026     php -r \"unlink('composer-setup.php');\" \u0026\u0026     mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/apache2/ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/apache2/sites-enabled/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/apache/default.conf",
            "/etc/apache2/sites-available/default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/apache/default-ssl.conf",
            "/etc/apache2/sites-available/default-ssl.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/php/php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod proxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod expires"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2ensite default-ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2ensite default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2disconf javascript-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "service cron start"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/ssh/sshd_config",
            "/etc/ssh/sshd_config"
          ]
        },
        {
          "CmdLine": [
            "service ssh start"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get -y install golang-go"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/go \u0026\u0026 export GOPATH=/opt/go \u0026\u0026 go get github.com/mailhog/mhsendmail"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chsh -s /bin/zsh root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chsh -s /bin/zsh dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y apt-transport-https"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_11.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yarn global add browser-sync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yarn global add gulp gulp-yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yarn global add gulp-scss"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yarn global add gulp-watch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/",
            "/usr/local/bin/build-files"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/build-files/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/certbot.sh",
            "/usr/local/bin/tugboat-cert/certbot.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/tugboat-cert/certbot.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/run.sh",
            "/usr/local/bin/run.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}