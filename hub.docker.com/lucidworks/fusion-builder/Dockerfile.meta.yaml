MetaArgs: null
Stages:
- BaseName: makuk66/docker-oracle-java7
  Commands:
  - Maintainer: Martijn Koster "martijn.koster@lucidworks.com"
    Name: maintainer
  - Env:
    - Key: PHANTOMJS_VERSION
      Value: 2.1.1
    Name: env
  - Env:
    - Key: PHANTOMJS_SHA256_CHECKSUM
      Value: 86dd9a4bf4aee45f1a84c9f61cf1947c1d6dce9b9e8d2a907105da7852460d2f
    Name: env
  - Env:
    - Key: PHANTOMJS_URL
      Value: https://s3.amazonaws.com/lucidworks-build-dependencies-public/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2
    Name: env
  - Env:
    - Key: MAVEN_URL
      Value: https://archive.apache.org/dist/maven/maven-3/3.3.3/binaries/apache-maven-3.3.3-bin.tar.gz
    Name: env
  - Env:
    - Key: JENKINS_GID
      Value: "7000"
    Name: env
  - Env:
    - Key: JENKINS_UID
      Value: "7000"
    Name: env
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive TERM=linux &&   echo 'debconf debconf/frontend
      select Noninteractive' | debconf-set-selections &&   apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install build-essential libssl-dev libcurl4-openssl-dev libexpat1-dev
      gettext libz-dev automake autoconf
    Name: run
    PrependShell: true
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive TERM=linux &&   apt-get -y install ant
      openssh-server   build-essential libxml2-dev libxslt1-dev libxmlsec1-dev python-dev
      python-pip   libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev
      libffi-dev   curl netcat-openbsd net-tools procps lsof rpm gnupg gnupg2 expect   libmysqlclient-dev
      libpq-dev libsvn-dev bzip2 libfreetype6 libfontconfig   unzip zip less vim smbclient
      &&   apt-get clean &&   rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's|session    required     pam_loginuid.so|session    optional     pam_loginuid.so|g'
      /etc/pam.d/sshd &&   mkdir -p /var/run/sshd &&   groupadd --gid $JENKINS_GID
      jenkins &&   adduser --quiet --gecos "" --disabled-password --uid $JENKINS_UID
      --gid $JENKINS_GID jenkins &&   (echo "jenkins:jenkins" | chpasswd)  &&   mkdir
      -p /home/jenkins/.ssh && chown -R jenkins:jenkins /home/jenkins/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install virtualenv awscli beautifulsoup4
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --no-verbose $PHANTOMJS_URL &&   echo "$PHANTOMJS_SHA256_CHECKSUM phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2"
      > phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2.sha256 &&   sha256sum -c
      phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2.sha256 &&   rm phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2.sha256
      &&   tar xjC /opt < phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 &&   rm
      phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 &&   ln -s /opt/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/bin/phantomjs
      /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive TERM=linux &&   wget --no-verbose --output-document=-
      https://get.docker.com/ | sh &&   usermod -aG docker jenkins
    Name: run
    PrependShell: true
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive TERM=linux &&   apt-get -y install locales
      &&   sed -i.bak -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
      &&   locale-gen &&   update-locale LC_ALL="en_US.UTF-8" &&   export LANGUAGE=en_US:en
      &&   export LANG=en_US.UTF-8 &&   export LC_ALL=en_US.UTF-8 &&   dpkg-reconfigure
      locales
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/apache-maven &&   wget -nv --output-document=/opt/apache-maven.tgz
      $MAVEN_URL &&   tar -C /opt/apache-maven --extract --file /opt/apache-maven.tgz
      --strip-components=1 &&   ln -s /opt/apache-maven/bin/mvn /usr/local/bin/mvn
      &&   rm /opt/apache-maven.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://lucid-public-tools.s3.amazonaws.com/git/git-bin-2.11.0.tar.gz
      -o /tmp/git.tar.gz &&   tar -C / --extract --file /tmp/git.tar.gz &&   /usr/bin/git
      --version &&   rm /tmp/git.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /tmp/requirements.txt
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pyenv.sh
    - /tmp/pyenv.sh
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive TERM=linux &&   bash -x /tmp/pyenv.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Name: expose
    Ports:
    - "8764"
  From:
    Image: makuk66/docker-oracle-java7
  Name: ""
  Platform: ""
  SourceCode: FROM    makuk66/docker-oracle-java7
