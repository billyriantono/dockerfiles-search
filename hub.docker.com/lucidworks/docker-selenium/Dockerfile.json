{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial-20170119",
      "SourceCode": "FROM ubuntu:xenial-20170119",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial-20170119"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "UBUNTU_FLAVOR",
              "Value": "\"xenial\""
            },
            {
              "Key": "UBUNTU_DATE",
              "Value": "\"20170119\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://archive.ubuntu.com/ubuntu ${UBUNTU_FLAVOR} main universe\\n\" \u003e /etc/apt/sources.list   \u0026\u0026 echo \"deb http://archive.ubuntu.com/ubuntu ${UBUNTU_FLAVOR}-updates main universe\\n\" \u003e\u003e /etc/apt/sources.list   \u0026\u0026 echo \"deb http://archive.ubuntu.com/ubuntu ${UBUNTU_FLAVOR}-security main universe\\n\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Maintainer": "Team TIP \u003celgalu3+team-tip@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Team TIP \u003celgalu3+team-tip@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "DEBCONF_NONINTERACTIVE_SEEN",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/dkpg/dpkg.cfg.d/01_nodoc",
            "/etc/dkpg/dpkg.cfg.d/01_nodoc"
          ]
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 2EA8F35793D8809A   \u0026\u0026 apt-key update -qqy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5   \u0026\u0026 apt-key update -qqy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32   \u0026\u0026 apt-key update -qqy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A2F683C52980AECF   \u0026\u0026 apt-key update -qqy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy install     libltdl7     netcat-openbsd     pwgen     bc     unzip     bzip2     apt-utils     net-tools     jq     sudo     psmisc     iproute2     iputils-ping     dbus-x11     wget     curl   \u0026\u0026 apt-get -qyy autoremove   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG_WHICH",
              "Value": "en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG_WHERE",
              "Value": "US"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ENCODING",
              "Value": "UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "${LANG_WHICH}_${LANG_WHERE}.${ENCODING}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "${LANGUAGE}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen ${LANGUAGE}   \u0026\u0026 dpkg-reconfigure --frontend noninteractive locales   \u0026\u0026 apt-get -qqy update   \u0026\u0026 apt-get -qqy --no-install-recommends install     language-pack-en   \u0026\u0026 apt-get -qyy autoremove   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "\"Europe/Berlin\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"Setting time zone to '${TZ}'\"   \u0026\u0026 echo ${TZ} \u003e /etc/timezone   \u0026\u0026 dpkg-reconfigure --frontend noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd seluser          --shell /bin/bash           --create-home   \u0026\u0026 usermod -a -G sudo seluser   \u0026\u0026 gpasswd -a seluser video   \u0026\u0026 echo 'ALL ALL = (ALL) NOPASSWD: ALL' \u003e\u003e /etc/sudoers   \u0026\u0026 echo 'seluser:secret' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy install     openjdk-8-jre-headless   \u0026\u0026 sed -i 's/securerandom.source=file:\\/dev\\/urandom/securerandom.source=file:\\/dev\\/.\\/urandom/g'        /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security   \u0026\u0026 sed -i 's/securerandom.source=file:\\/dev\\/random/securerandom.source=file:\\/dev\\/.\\/urandom/g'        /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security   \u0026\u0026 apt-get -qyy autoremove   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-key update -qqy   \u0026\u0026 apt-get -qqy install     haveged rng-tools   \u0026\u0026 service haveged start   \u0026\u0026 update-rc.d haveged defaults   \u0026\u0026 apt-get -qyy autoremove   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "seluser"
        },
        {
          "Name": "workdir",
          "Path": "/home/seluser"
        },
        {
          "Env": [
            {
              "Key": "SEL_MAJOR_VER",
              "Value": "\"2.53\""
            },
            {
              "Key": "SEL_PATCH_LEVEL_VER",
              "Value": "\"1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SEL_VER",
              "Value": "\"${SEL_MAJOR_VER}.${SEL_PATCH_LEVEL_VER}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export SELBASE=\"https://selenium-release.storage.googleapis.com\"   \u0026\u0026 export SELPATH=\"${SEL_MAJOR_VER}/selenium-server-standalone-${SEL_VER}.jar\"   \u0026\u0026 wget -nv ${SELBASE}/${SELPATH}   \u0026\u0026 ln -s \"selenium-server-standalone-${SEL_VER}.jar\"            \"selenium-server-standalone-2.jar\"   \u0026\u0026 ln -s \"selenium-server-standalone-${SEL_VER}.jar\"            \"selenium-server-standalone.jar\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SEL_DIRECTORY",
              "Value": "\"3.0\""
            },
            {
              "Key": "SEL_VER",
              "Value": "\"3.0.1\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export SELBASE=\"https://selenium-release.storage.googleapis.com\"   \u0026\u0026 export SELPATH=\"${SEL_DIRECTORY}/selenium-server-standalone-${SEL_VER}.jar\"   \u0026\u0026 wget -nv ${SELBASE}/${SELPATH}   \u0026\u0026 ln -s \"selenium-server-standalone-${SEL_VER}.jar\"            \"selenium-server-standalone-3.jar\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy --no-install-recommends install     python2.7     python-pip     python-openssl     libssl-dev     libffi-dev   \u0026\u0026 pip install --upgrade pip   \u0026\u0026 pip install --upgrade setuptools   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RUN_DIR",
              "Value": "\"/var/run/sele\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "SHA=\"8be5bc15e83f0f261fa50ef28de814dd14f7c25e\"   \u0026\u0026 pip install --upgrade       \"https://github.com/Supervisor/supervisor/zipball/${SHA}\"   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy --no-install-recommends install     libfontconfig     libfreetype6     xfonts-cyrillic     xfonts-scalable     fonts-liberation     ttf-ubuntu-font-family   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy install     fluxbox   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy --no-install-recommends install     xvfb     xorg   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy install     x11vnc   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "seluser"
        },
        {
          "Env": [
            {
              "Key": "NOVNC_SHA",
              "Value": "\"9223e8f2d1c207fb74cb4b8cc243e59d84f9e2f6\""
            },
            {
              "Key": "WEBSOCKIFY_SHA",
              "Value": "\"cb1508fa495bea4b333173705772c1997559ae4b\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -nv -O noVNC.zip        \"https://github.com/elgalu/noVNC/archive/${NOVNC_SHA}.zip\"   \u0026\u0026 unzip -x noVNC.zip   \u0026\u0026 mv noVNC-${NOVNC_SHA} noVNC   \u0026\u0026 rm noVNC.zip   \u0026\u0026 wget -nv -O websockify.zip       \"https://github.com/kanaka/websockify/archive/${WEBSOCKIFY_SHA}.zip\"   \u0026\u0026 unzip -x websockify.zip   \u0026\u0026 rm websockify.zip   \u0026\u0026 mv websockify-${WEBSOCKIFY_SHA} ./noVNC/utils/websockify"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy --no-install-recommends install     gstreamer1.0-libav   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy --no-install-recommends install     libx264-dev     libvorbis-dev     libx11-dev     gpac   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy --no-install-recommends install     libav-tools   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 apt-get -qqy --no-install-recommends install     `apt-cache depends firefox | awk '/Depends:/{print$2}'`   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "seluser"
        },
        {
          "Env": [
            {
              "Key": "FF_LANG",
              "Value": "\"en-US\""
            },
            {
              "Key": "FF_BASE_URL",
              "Value": "\"https://archive.mozilla.org/pub\""
            },
            {
              "Key": "FF_PLATFORM",
              "Value": "\"linux-x86_64\""
            },
            {
              "Key": "FF_INNER_PATH",
              "Value": "\"firefox/releases\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FF_VER",
              "Value": "\"47.0.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FF_COMP",
              "Value": "\"firefox-${FF_VER}.tar.bz2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FF_URL",
              "Value": "\"${FF_BASE_URL}/${FF_INNER_PATH}/${FF_VER}/${FF_PLATFORM}/${FF_LANG}/${FF_COMP}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -nv \"${FF_URL}\" -O \"firefox.tar.bz2\"   \u0026\u0026 bzip2 -d \"firefox.tar.bz2\"   \u0026\u0026 tar xf \"firefox.tar\"   \u0026\u0026 rm \"firefox.tar\"   \u0026\u0026 mv firefox firefox-for-sel-3   \u0026\u0026 sudo ln -fs /home/seluser/firefox-for-sel-3/firefox /usr/bin/firefox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "FF_VER",
              "Value": "\"47.0.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FF_COMP",
              "Value": "\"firefox-${FF_VER}.tar.bz2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FF_URL",
              "Value": "\"${FF_BASE_URL}/${FF_INNER_PATH}/${FF_VER}/${FF_PLATFORM}/${FF_LANG}/${FF_COMP}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -nv \"${FF_URL}\" -O \"firefox.tar.bz2\"   \u0026\u0026 bzip2 -d \"firefox.tar.bz2\"   \u0026\u0026 tar xf \"firefox.tar\"   \u0026\u0026 rm \"firefox.tar\"   \u0026\u0026 mv firefox firefox-for-sel-2   \u0026\u0026 sudo ln -fs /home/seluser/firefox-for-sel-2/firefox /usr/bin/firefox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "selenium2_firefox_version",
              "Value": "\"47.0.1\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "selenium3_firefox_version",
              "Value": "\"51.0.1\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "GECKOD_VER",
              "Value": "\"0.14.0\""
            },
            {
              "Key": "GECKOD_URL",
              "Value": "\"https://github.com/mozilla/geckodriver/releases/download\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget --no-verbose -O geckodriver.tar.gz      \"${GECKOD_URL}/v${GECKOD_VER}/geckodriver-v${GECKOD_VER}-linux64.tar.gz\"   \u0026\u0026 rm -rf /opt/geckodriver*   \u0026\u0026 tar -C /opt -xvzf geckodriver.tar.gz   \u0026\u0026 chmod +x /opt/geckodriver   \u0026\u0026 rm geckodriver.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CHROME_VERSION_TRIGGER",
              "Value": "\"56.0.2924.87\""
            },
            {
              "Key": "CHROME_URL",
              "Value": "\"https://dl.google.com/linux/direct\""
            },
            {
              "Key": "CHROME_BASE_DEB_PATH",
              "Value": "\"/home/seluser/chrome-deb/google-chrome\""
            },
            {
              "Key": "GREP_ONLY_NUMS_VER",
              "Value": "\"[0-9.]{2,20}\""
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "selenium2_chrome_version",
              "Value": "\"56.0.2924.87\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "selenium3_chrome_version",
              "Value": "\"56.0.2924.87\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get -qqy update   \u0026\u0026 mkdir -p chrome-deb   \u0026\u0026 wget -nv \"${CHROME_URL}/google-chrome-stable_current_amd64.deb\"           -O \"./chrome-deb/google-chrome-stable_current_amd64.deb\"   \u0026\u0026 apt -qyy --no-install-recommends install         \"${CHROME_BASE_DEB_PATH}-stable_current_amd64.deb\"   \u0026\u0026 rm \"${CHROME_BASE_DEB_PATH}-stable_current_amd64.deb\"   \u0026\u0026 rm -rf ./chrome-deb   \u0026\u0026 apt-get -qyy autoremove   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 export CH_STABLE_VER=$(/usr/bin/google-chrome-stable --version | grep -iEo \"${GREP_ONLY_NUMS_VER}\")   \u0026\u0026 echo \"${CH_STABLE_VER}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /opt/google/chrome/google-chrome /opt/google/chrome/google-chrome-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "selenium-node-chrome/opt",
            "/opt"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "lib/*",
            "/usr/lib/"
          ]
        },
        {
          "Name": "user",
          "User": "seluser"
        },
        {
          "Env": [
            {
              "Key": "CHROME_DRIVER_VERSION",
              "Value": "\"2.27\""
            },
            {
              "Key": "CHROME_DRIVER_BASE",
              "Value": "\"chromedriver.storage.googleapis.com\""
            },
            {
              "Key": "CPU_ARCH",
              "Value": "\"64\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CHROME_DRIVER_FILE",
              "Value": "\"chromedriver_linux${CPU_ARCH}.zip\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CHROME_DRIVER_URL",
              "Value": "\"https://${CHROME_DRIVER_BASE}/${CHROME_DRIVER_VERSION}/${CHROME_DRIVER_FILE}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -nv -O chromedriver_linux${CPU_ARCH}.zip ${CHROME_DRIVER_URL}   \u0026\u0026 unzip chromedriver_linux${CPU_ARCH}.zip   \u0026\u0026 rm chromedriver_linux${CPU_ARCH}.zip   \u0026\u0026 mv chromedriver         chromedriver-$CHROME_DRIVER_VERSION   \u0026\u0026 chmod 755 chromedriver-$CHROME_DRIVER_VERSION   \u0026\u0026 ln -s chromedriver-${CHROME_DRIVER_VERSION}            chromedriver   \u0026\u0026 sudo ln -s /home/seluser/chromedriver /usr/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisor/etc/supervisor/supervisord.conf",
            "/etc/supervisor/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "**/etc/supervisor/conf.d/*",
            "/etc/supervisor/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./dns/etc/hosts",
            "/tmp/hosts"
          ]
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_SELENIUM_HUB_PORT",
              "Value": "\"24444\""
            },
            {
              "Key": "DEFAULT_SELENIUM_NODE_CH_PORT",
              "Value": "\"25550\""
            },
            {
              "Key": "DEFAULT_SELENIUM_NODE_FF_PORT",
              "Value": "\"25551\""
            },
            {
              "Key": "DEFAULT_SELENIUM_NODE_RC_CH_PORT",
              "Value": "\"25552\""
            },
            {
              "Key": "DEFAULT_SELENIUM_NODE_RC_FF_PORT",
              "Value": "\"25553\""
            },
            {
              "Key": "DEFAULT_VNC_PORT",
              "Value": "\"25900\""
            },
            {
              "Key": "DEFAULT_NOVNC_PORT",
              "Value": "\"26080\""
            },
            {
              "Key": "DEFAULT_SUPERVISOR_HTTP_PORT",
              "Value": "\"19001\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FIREFOX_VERSION",
              "Value": "\"${FF_VER}\""
            },
            {
              "Key": "USE_SELENIUM",
              "Value": "\"2\""
            },
            {
              "Key": "CHROME_FLAVOR",
              "Value": "\"stable\""
            },
            {
              "Key": "PICK_ALL_RANDOM_PORTS",
              "Value": "\"false\""
            },
            {
              "Key": "RANDOM_PORT_FROM",
              "Value": "\"23100\""
            },
            {
              "Key": "RANDOM_PORT_TO",
              "Value": "\"29999\""
            },
            {
              "Key": "USER",
              "Value": "\"seluser\""
            },
            {
              "Key": "HOME",
              "Value": "\"/home/seluser\""
            },
            {
              "Key": "VNC_STORE_PWD_FILE",
              "Value": "\"/home/seluser/.vnc/passwd\""
            },
            {
              "Key": "BIN_UTILS",
              "Value": "\"/usr/bin\""
            },
            {
              "Key": "MEM_JAVA_PERCENT",
              "Value": "80"
            },
            {
              "Key": "WAIT_FOREGROUND_RETRY",
              "Value": "\"2s\""
            },
            {
              "Key": "WAIT_VNC_FOREGROUND_RETRY",
              "Value": "\"7s\""
            },
            {
              "Key": "XVFB_STARTRETRIES",
              "Value": "0"
            },
            {
              "Key": "XMANAGER_STARTRETRIES",
              "Value": "0"
            },
            {
              "Key": "XMANAGER_STARTSECS",
              "Value": "0"
            },
            {
              "Key": "WAIT_TIMEOUT",
              "Value": "\"45s\""
            },
            {
              "Key": "SCREEN_WIDTH",
              "Value": "1900"
            },
            {
              "Key": "SCREEN_HEIGHT",
              "Value": "1880"
            },
            {
              "Key": "SCREEN_MAIN_DEPTH",
              "Value": "24"
            },
            {
              "Key": "SCREEN_SUB_DEPTH",
              "Value": "32"
            },
            {
              "Key": "DISP_N",
              "Value": "\"-1\""
            },
            {
              "Key": "MAX_DISPLAY_SEARCH",
              "Value": "99"
            },
            {
              "Key": "SCREEN_NUM",
              "Value": "0"
            },
            {
              "Key": "SELENIUM_HUB_PORT",
              "Value": "\"${DEFAULT_SELENIUM_HUB_PORT}\""
            },
            {
              "Key": "SELENIUM_HUB_PROTO",
              "Value": "\"http\""
            },
            {
              "Key": "SELENIUM_HUB_HOST",
              "Value": "\"127.0.0.1\""
            },
            {
              "Key": "SELENIUM_NODE_HOST",
              "Value": "\"127.0.0.1\""
            },
            {
              "Key": "SELENIUM_NODE_CH_PORT",
              "Value": "\"${DEFAULT_SELENIUM_NODE_CH_PORT}\""
            },
            {
              "Key": "SELENIUM_NODE_FF_PORT",
              "Value": "\"${DEFAULT_SELENIUM_NODE_FF_PORT}\""
            },
            {
              "Key": "SELENIUM_NODE_RC_CH_PORT",
              "Value": "\"${DEFAULT_SELENIUM_NODE_RC_CH_PORT}\""
            },
            {
              "Key": "SELENIUM_NODE_RC_FF_PORT",
              "Value": "\"${DEFAULT_SELENIUM_NODE_RC_FF_PORT}\""
            },
            {
              "Key": "SELENIUM_HUB_PARAMS",
              "Value": "\"\""
            },
            {
              "Key": "SELENIUM_NODE_PARAMS",
              "Value": "\"\""
            },
            {
              "Key": "SELENIUM_NODE_PROXY_PARAMS",
              "Value": "\"\""
            },
            {
              "Key": "CHROME_ARGS",
              "Value": "\"--no-sandbox --disable-gpu\""
            },
            {
              "Key": "CHROME_VERBOSELOGGING",
              "Value": "\"true\""
            },
            {
              "Key": "MAX_INSTANCES",
              "Value": "1"
            },
            {
              "Key": "MAX_SESSIONS",
              "Value": "1"
            },
            {
              "Key": "SEL_RELEASE_TIMEOUT_SECS",
              "Value": "19000"
            },
            {
              "Key": "SEL_BROWSER_TIMEOUT_SECS",
              "Value": "16000"
            },
            {
              "Key": "SELENIUM_NODE_REGISTER_CYCLE",
              "Value": "\"1000\""
            },
            {
              "Key": "SEL_CLEANUPCYCLE_MS",
              "Value": "2000"
            },
            {
              "Key": "SEL_NODEPOLLING_MS",
              "Value": "1500"
            },
            {
              "Key": "SEL_UNREGISTER_IF_STILL_DOWN_AFTER",
              "Value": "2500"
            },
            {
              "Key": "no_proxy",
              "Value": "localhost"
            },
            {
              "Key": "HUB_ENV_no_proxy",
              "Value": "localhost"
            },
            {
              "Key": "XVFB_CLI_OPTS_TCP",
              "Value": "\"-nolisten tcp -nolisten inet6\""
            },
            {
              "Key": "XVFB_CLI_OPTS_BASE",
              "Value": "\"-ac -r -cc 4 -accessx -xinerama\""
            },
            {
              "Key": "XVFB_CLI_OPTS_EXT",
              "Value": "\"+extension Composite -extension RANDR +extension GLX\""
            },
            {
              "Key": "VNC_START",
              "Value": "\"true\""
            },
            {
              "Key": "VNC_PORT",
              "Value": "\"${DEFAULT_VNC_PORT}\""
            },
            {
              "Key": "VNC_FROM_PORT",
              "Value": "\"\""
            },
            {
              "Key": "VNC_TO_PORT",
              "Value": "\"\""
            },
            {
              "Key": "VNC_CLI_OPTS",
              "Value": "\"-forever -shared\""
            },
            {
              "Key": "VNC_PASSWORD",
              "Value": "no"
            },
            {
              "Key": "NOVNC_PORT",
              "Value": "\"${DEFAULT_NOVNC_PORT}\""
            },
            {
              "Key": "NOVNC",
              "Value": "\"false\""
            },
            {
              "Key": "SUPERVISOR_HTTP_PORT",
              "Value": "\"${DEFAULT_SUPERVISOR_HTTP_PORT}\""
            },
            {
              "Key": "SUPERVISOR_HTTP_USERNAME",
              "Value": "\"supervisorweb\""
            },
            {
              "Key": "SUPERVISOR_HTTP_PASSWORD",
              "Value": "\"somehttpbasicauthpwd\""
            },
            {
              "Key": "SUPERVISOR_REQUIRED_SRV_LIST",
              "Value": "\"xmanager\""
            },
            {
              "Key": "SUPERVISOR_NOT_REQUIRED_SRV_LIST1",
              "Value": "\"ignoreMe\""
            },
            {
              "Key": "SUPERVISOR_NOT_REQUIRED_SRV_LIST2",
              "Value": "\"ignoreMe\""
            },
            {
              "Key": "SLEEP_SECS_AFTER_KILLING_SUPERVISORD",
              "Value": "3"
            },
            {
              "Key": "SUPERVISOR_STOPWAITSECS",
              "Value": "20"
            },
            {
              "Key": "SUPERVISOR_STOPSIGNAL",
              "Value": "TERM"
            },
            {
              "Key": "SUPERVISOR_KILLASGROUP",
              "Value": "\"false\""
            },
            {
              "Key": "SUPERVISOR_STOPASGROUP",
              "Value": "\"false\""
            },
            {
              "Key": "LOG_LEVEL",
              "Value": "info"
            },
            {
              "Key": "DISABLE_ROLLBACK",
              "Value": "\"false\""
            },
            {
              "Key": "LOGFILE_MAXBYTES",
              "Value": "10MB"
            },
            {
              "Key": "LOGFILE_BACKUPS",
              "Value": "5"
            },
            {
              "Key": "LOGS_DIR",
              "Value": "\"/var/log/cont\""
            },
            {
              "Key": "FFMPEG_FRAME_RATE",
              "Value": "15"
            },
            {
              "Key": "FFMPEG_CODEC_ARGS",
              "Value": "\"-vcodec libx264 -crf 0 -preset ultrafast\""
            },
            {
              "Key": "VIDEO",
              "Value": "\"false\""
            },
            {
              "Key": "GRID",
              "Value": "\"true\""
            },
            {
              "Key": "CHROME",
              "Value": "\"true\""
            },
            {
              "Key": "FIREFOX",
              "Value": "\"true\""
            },
            {
              "Key": "RC_CHROME",
              "Value": "\"false\""
            },
            {
              "Key": "RC_FIREFOX",
              "Value": "\"false\""
            },
            {
              "Key": "VIDEO_FILE_EXTENSION",
              "Value": "\"mp4\""
            },
            {
              "Key": "MP4_INTERLEAVES_MEDIA_DATA_CHUNKS_SECS",
              "Value": "\"500\""
            },
            {
              "Key": "VIDEO_FILE_NAME",
              "Value": "\"\""
            },
            {
              "Key": "VIDEO_CHUNK_SECS",
              "Value": "\"00:05:00\""
            },
            {
              "Key": "VIDEO_CHUNKS_MAX",
              "Value": "999"
            },
            {
              "Key": "VIDEO_STOP_SLEEP_SECS",
              "Value": "\"2\""
            },
            {
              "Key": "WAIT_TIME_OUT_VIDEO_STOP",
              "Value": "\"20s\""
            },
            {
              "Key": "VIDEOS_DIR",
              "Value": "\"/home/seluser/videos\""
            },
            {
              "Key": "XMANAGER",
              "Value": "\"fluxbox\""
            },
            {
              "Key": "FLUXBOX_START_MAX_RETRIES",
              "Value": "5"
            },
            {
              "Key": "TAIL_LOG_LINES",
              "Value": "\"15\""
            },
            {
              "Key": "SHM_TRY_MOUNT_UNMOUNT",
              "Value": "\"false\""
            },
            {
              "Key": "SHM_SIZE",
              "Value": "\"512M\""
            },
            {
              "Key": "ETHERNET_DEVICE_NAME",
              "Value": "\"eth0\""
            },
            {
              "Key": "XMANAGER_STOP_SIGNAL",
              "Value": "\"TERM\""
            },
            {
              "Key": "XVFB_STOP_SIGNAL",
              "Value": "\"TERM\""
            },
            {
              "Key": "XTERM_STOP_SIGNAL",
              "Value": "\"INT\""
            },
            {
              "Key": "SELENIUM_NODE_FIREFOX_STOP_SIGNAL",
              "Value": "\"TERM\""
            },
            {
              "Key": "SELENIUM_NODE_CHROME_STOP_SIGNAL",
              "Value": "\"TERM\""
            },
            {
              "Key": "SELENIUM_HUB_STOP_SIGNAL",
              "Value": "\"TERM\""
            },
            {
              "Key": "VNC_STOP_SIGNAL",
              "Value": "\"TERM\""
            },
            {
              "Key": "NOVNC_STOP_SIGNAL",
              "Value": "\"TERM\""
            },
            {
              "Key": "VIDEO_REC_STOP_SIGNAL",
              "Value": "\"INT\""
            },
            {
              "Key": "DOCKER_SOCK",
              "Value": "\"/var/run/docker.sock\""
            },
            {
              "Key": "TEST_SLEEPS",
              "Value": "\"0.5\""
            },
            {
              "Key": "SEND_ANONYMOUS_USAGE_INFO",
              "Value": "\"true\""
            },
            {
              "Key": "GA_TRACKING_ID",
              "Value": "\"UA-18144954-9\""
            },
            {
              "Key": "GA_ENDPOINT",
              "Value": "https://www.google-analytics.com/collect"
            },
            {
              "Key": "GA_API_VERSION",
              "Value": "\"1\""
            },
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "\"\""
            },
            {
              "Key": "DEBCONF_NONINTERACTIVE_SEEN",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/*",
            "${BIN_UTILS}/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "**/bin/*",
            "${BIN_UTILS}/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "host-scripts/*",
            "/host-scripts/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test/*",
            "/test/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test/run_test.sh",
            "/usr/bin/run_test"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test/selenium_test.sh",
            "/usr/bin/selenium_test"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test/python_test.py",
            "/usr/bin/python_test"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "images",
            "./images"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "LICENSE.md",
            "/home/seluser/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Analytics.md",
            "/home/seluser/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /home/seluser/.vnc   \u0026\u0026 sudo touch /capabilities2.json   \u0026\u0026 sudo chown seluser:seluser /capabilities2.json   \u0026\u0026 generate_capabilities2_json \u003e /capabilities2.json   \u0026\u0026 cp /capabilities2.json /home/seluser/capabilities2.json   \u0026\u0026 cp /capabilities2.json /home/seluser/capabilities2   \u0026\u0026 cp /capabilities2.json /home/seluser/caps2.json   \u0026\u0026 cp /capabilities2.json /home/seluser/caps2   \u0026\u0026 sudo touch /capabilities3.json   \u0026\u0026 sudo chown seluser:seluser /capabilities3.json   \u0026\u0026 generate_capabilities3_json \u003e /capabilities3.json   \u0026\u0026 cp /capabilities3.json /home/seluser/capabilities3.json   \u0026\u0026 cp /capabilities3.json /home/seluser/capabilities3   \u0026\u0026 cp /capabilities3.json /home/seluser/caps3.json   \u0026\u0026 cp /capabilities3.json /home/seluser/caps3   \u0026\u0026 sudo cp /capabilities2.json /capabilities.json   \u0026\u0026 sudo cp /capabilities2.json /home/seluser/capabilities.json   \u0026\u0026 sudo cp /capabilities2.json /home/seluser/caps.json   \u0026\u0026 mkdir -p ${VIDEOS_DIR}   \u0026\u0026 sudo ln -s ${VIDEOS_DIR} /videos   \u0026\u0026 sudo chown seluser:seluser /videos   \u0026\u0026 sudo mkdir -p ${LOGS_DIR}   \u0026\u0026 sudo chown -R seluser:seluser ${LOGS_DIR}   \u0026\u0026 sudo mkdir -p ${RUN_DIR}   \u0026\u0026 sudo chown -R seluser:seluser ${RUN_DIR}   \u0026\u0026 sudo chown -R seluser:seluser /etc/supervisor   \u0026\u0026 sudo chown -R seluser:seluser /test   \u0026\u0026 sudo mkdir -p /tmp/.X11-unix /tmp/.ICE-unix   \u0026\u0026 sudo chmod 1777 /tmp/.X11-unix /tmp/.ICE-unix   \u0026\u0026 echo \"\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "VERSION",
            "/home/seluser/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scm-source.json",
            "/"
          ]
        },
        {
          "CmdLine": [
            "entry.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}