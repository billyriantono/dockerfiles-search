{
  "MetaArgs": [
    {
      "Key": "ALPINE_VERSION",
      "DefaultValue": "3.7",
      "ProvidedValue": null,
      "Value": "3.7"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:$ALPINE_VERSION",
      "SourceCode": "FROM alpine:$ALPINE_VERSION",
      "Platform": "",
      "From": {
        "Image": "alpine:$ALPINE_VERSION"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk --update add pcre libbz2 ca-certificates libressl \u0026\u0026 rm /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -h /etc/nginx -D -s /bin/sh nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.13.12"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add --virtual build_deps build-base zlib-dev pcre-dev libressl-dev     \u0026\u0026 wget -O - https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz | tar xzf -     \u0026\u0026 cd nginx-$NGINX_VERSION \u0026\u0026 ./configure        --prefix=/usr/share/nginx        --sbin-path=/usr/sbin/nginx        --conf-path=/etc/nginx/nginx.conf        --error-log-path=stderr        --http-log-path=/dev/stdout        --pid-path=/var/run/nginx.pid        --lock-path=/var/run/nginx.lock        --http-client-body-temp-path=/var/cache/nginx/client_temp        --http-proxy-temp-path=/var/cache/nginx/proxy_temp        --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp        --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp        --http-scgi-temp-path=/var/cache/nginx/scgi_temp        --user=nginx        --group=nginx        --with-http_addition_module        --with-http_auth_request_module        --with-http_gunzip_module        --with-http_gzip_static_module        --with-http_realip_module        --with-http_ssl_module        --with-http_stub_status_module        --with-http_sub_module        --with-http_v2_module        --with-threads        --with-stream        --with-stream_ssl_module        --without-http_memcached_module        --without-mail_pop3_module        --without-mail_imap_module        --without-mail_smtp_module        --with-pcre-jit        --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security'        --with-ld-opt='-Wl,-z,relro -Wl,--as-needed'     \u0026\u0026 make install     \u0026\u0026 cd .. \u0026\u0026 rm -rf nginx-$NGINX_VERSION     \u0026\u0026 mkdir /var/cache/nginx     \u0026\u0026 rm /etc/nginx/*.default     \u0026\u0026 apk del build_deps \u0026\u0026 rm /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf.d",
            "/etc/nginx/conf.d"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/nginx"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}