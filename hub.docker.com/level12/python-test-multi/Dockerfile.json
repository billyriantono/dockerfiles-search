{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "devteam@level12.io",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y locales \u0026\u0026 locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/src"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/src/.ci/artifacts"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/src/.ci/test-reports"
          ]
        },
        {
          "CmdLine": [
            "apt install gnupg -y     \u0026\u0026 echo \"deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic main\" \u003e\u003e /etc/apt/sources.list.d/python.list     \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F23C5A6CF475977595C89F51BA6932366A755776     \u0026\u0026 apt-get update -q     \u0026\u0026 apt-get install -y curl git          python3.6 python3.6-dev libpython3.6-dev         python3.7 python3.7-dev libpython3.7-dev         python3.8 python3.8-dev libpython3.8-dev python3.8-distutils python3.8-venv     \u0026\u0026 curl -fSL \"https://bootstrap.pypa.io/get-pip.py\" -o get-pip.py     \u0026\u0026 python3.6 get-pip.py     \u0026\u0026 python3.7 get-pip.py     \u0026\u0026 python3.8 get-pip.py     \u0026\u0026 rm get-pip.py     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -q \u0026\u0026 apt-get install -y     libfreetype6     libjpeg-turbo8     libpq5     libxml2     libxslt1.1     libxslt1-dev     libffi6     libcairo2     libpango1.0     libtiff5     libgdk-pixbuf2.0-0     libdbus-glib-1-dev     libsasl2-dev     python-dev     libldap2-dev     libssl-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -q     \u0026\u0026 apt-get install -y apt-transport-https ca-certificates     \u0026\u0026 curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -     \u0026\u0026 curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list \u003e /etc/apt/sources.list.d/mssql-release.list     \u0026\u0026 apt-get update -q     \u0026\u0026 ACCEPT_EULA=Y apt-get install -y msodbcsql17     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y wget     \u0026\u0026 echo \"deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main\" \u003e\u003e /etc/apt/sources.list.d/pgdg.list     \u0026\u0026 wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y postgresql-client-9.6 postgresql-client-10 postgresql-client-11     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     iputils-ping     netcat     fio     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/src"
        },
        {
          "CmdLine": [
            "/opt/src/docker-entry"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}