{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Maintainer": "A. GÃ¶kay Duman \u003caligokayduman@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NPS_VERSION",
              "Value": "1.13.35.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.16.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CPU_CORE",
              "Value": "x64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update     \u0026\u0026 apt upgrade -y     \u0026\u0026 apt install -y apt-transport-https                       apt-utils                       autoconf                       automake                       build-essential                       git                       libcurl4-openssl-dev                       libgeoip-dev                       liblmdb-dev                       libpcre++-dev                       libtool                       libxml2-dev                       libyajl-dev                       pkgconf                       wget                       zlib1g-dev                       libpcre3                       libpcre3-dev                       unzip                       uuid-dev                       libssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd     \u0026\u0026 git clone --depth 1 -b v3/master --single-branch https://github.com/SpiderLabs/ModSecurity     \u0026\u0026 git clone --depth 1 https://github.com/SpiderLabs/ModSecurity-nginx.git     \u0026\u0026 cd ModSecurity     \u0026\u0026 git submodule init     \u0026\u0026 git submodule update     \u0026\u0026 ./build.sh     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd     \u0026\u0026 wget https://github.com/pagespeed/ngx_pagespeed/archive/v${NPS_VERSION}-stable.zip     \u0026\u0026 unzip v${NPS_VERSION}-stable.zip     \u0026\u0026 cd incubator-pagespeed-ngx-${NPS_VERSION}-stable/     \u0026\u0026 wget https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}-${CPU_CORE}.tar.gz     \u0026\u0026 tar -xzvf ${NPS_VERSION}-${CPU_CORE}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -r nginx     \u0026\u0026 mkdir -p /var/cache/nginx     \u0026\u0026 mkdir -p /etc/nginx/modules     \u0026\u0026 chown nginx:root /var/cache/nginx     \u0026\u0026 chown nginx:root /etc/nginx/modules"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd     \u0026\u0026 wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz     \u0026\u0026 tar -xvzf nginx-${NGINX_VERSION}.tar.gz     \u0026\u0026 cd nginx-${NGINX_VERSION}/     \u0026\u0026 ./configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules     --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx     --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module     --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module     --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module     --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail     --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module     --with-cc-opt='-g -O2 -fdebug-prefix-map=/data/builder/debuild/nginx-${NPS_VERSION}/debian/debuild-base/nginx-${NPS_VERSION}=. -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' --with-ld-opt='-Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie'     --add-dynamic-module=$HOME/incubator-pagespeed-ngx-${NPS_VERSION}-stable --add-dynamic-module=$HOME/ModSecurity-nginx     \u0026\u0026 make modules     \u0026\u0026 cp objs/ngx_http_modsecurity_module.so /etc/nginx/modules     \u0026\u0026 cp objs/ngx_pagespeed.so /etc/nginx/modules     \u0026\u0026 make     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}