{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:latest",
      "SourceCode": "FROM python:latest",
      "Platform": "",
      "From": {
        "Image": "python:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "wget --quiet  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash Miniconda3-latest-Linux-x86_64.sh -b"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm Miniconda3-latest-Linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/miniconda3/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "conda install keras"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y \t\tlibblas-dev \t\tliblapack-dev    \tlibatlas-base-dev \t\tgfortran         python3-pip         tk-dev         python-tk         python3-tk         python3-matplotlib         pkg-config         libfreetype6-dev         rsync wget curl zip git zsh vim tmux \t\t\u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U pip         setuptools \t\th5py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install        \tipykernel         jupyter         matplotlib         scikit-image         scikit-learn \txlrd \topenpyxl \tjupyterlab \tnltk \ttextblob \tspacy \tlesscpy         \u0026\u0026     python3 -m ipykernel.kernelspec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U jupyterthemes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jt -t oceans16 -f roboto -fs 12 -tf roboto -tfs 13 -T -nf inconsolata -nfs 12"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/"
          ]
        },
        {
          "CmdLine": [
            "jupyter serverextension enable --py jupyterlab --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run_jupyter.sh",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "TENSORFLOW_VERSION",
              "Value": "1.14.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.14.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jupyter nbextension install https://rawgithub.com/minrk/ipython_extensions/master/nbextensions/gist.js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension enable gist"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O ~/.zshrc http://git.grml.org/f/grml-etc-core/etc/zsh/zshrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"TERM=xterm-256color\" \u003e\u003e ~/.zshrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chsh -s /usr/bin/zsh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "notebooks",
            "/notebooks"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6006"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8889"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"/notebooks\""
        },
        {
          "CmdLine": [
            "/run_jupyter.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}