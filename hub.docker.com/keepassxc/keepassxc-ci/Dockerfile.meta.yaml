MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: REBUILD_COUNTER
      Value: "1"
    Name: env
  - Env:
    - Key: QT5_VERSION
      Value: qt512
    Name: env
  - Env:
    - Key: QT5_PPA_VERSION
      Value: qt-5.12.6
    Name: env
  - CmdLine:
    - set -x     && apt-get update -y     && apt-get -y install --no-install-recommends
      software-properties-common     && add-apt-repository ppa:beineri/opt-${QT5_PPA_VERSION}-xenial     &&
      add-apt-repository ppa:phoerious/keepassxc     && apt-get update -y     && apt-get
      upgrade -y     && apt-get install --no-install-recommends -y         build-essential         clang-4.0         clang-format-4.0         cmake         curl         file         fuse         git         libargon2-0-dev         libclang-common-4.0-dev         libgl1-mesa-dev         libgcrypt20-18-dev         libqrencode-dev         libquazip5-dev         libsodium-dev         libxi-dev         libxtst-dev         libyubikey-dev         libykpers-1-dev         llvm-4.0         locales         ${QT5_VERSION}base         ${QT5_VERSION}imageformats         ${QT5_VERSION}svg         ${QT5_VERSION}tools         ${QT5_VERSION}translations         ${QT5_VERSION}x11extras         xclip         xvfb         zlib1g-dev     &&
      apt-get autoremove --purge     && rm -rf /var/lib/{apt,dpkg,cache,log}/
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && curl https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add
      -     && apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8
      main"     && apt-get update -y     && apt-get install --no-install-recommends
      -y         clang-format-8     && apt-get autoremove --purge     && rm -rf /var/lib/{apt,dpkg,cache,log}/     &&
      ln -s /usr/bin/clang-format-8 /usr/bin/clang-format
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && git clone https://github.com/ncopa/su-exec.git     && (cd su-exec;
      make)     && mv su-exec/su-exec /usr/bin/su-exec     && rm -rf su-exec
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x && locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PATH
      Value: '"/opt/${QT5_VERSION}/bin:${PATH}"'
    Name: env
  - Env:
    - Key: CMAKE_PREFIX_PATH
      Value: '"/opt/${QT5_VERSION}/lib/cmake"'
    Name: env
  - Env:
    - Key: CMAKE_INCLUDE_PATH
      Value: '"/opt/keepassxc-libs/include"'
    Name: env
  - Env:
    - Key: CMAKE_LIBRARY_PATH
      Value: '"/opt/keepassxc-libs/lib/x86_64-linux-gnu"'
    Name: env
  - Env:
    - Key: CPATH
      Value: '"${CMAKE_INCLUDE_PATH}"'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"${CMAKE_LIBRARY_PATH}:/opt/${QT5_VERSION}/lib"'
    Name: env
  - CmdLine:
    - set -x     && echo "/opt/keepassxc-libs/lib/x86_64-linux-gnu" > /etc/ld.so.conf.d/01-keepassxc.conf     &&
      echo "/opt/${QT5_VERSION}/lib" > /etc/ld.so.conf.d/02-${QT5_VERSION}.conf     &&
      ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && curl -fL "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
      > /usr/bin/linuxdeploy     && curl -fL "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage"
      > /usr/bin/linuxdeploy-plugin-qt     && curl -fL "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
      > /usr/bin/appimagetool     && chmod +x /usr/bin/linuxdeploy     && chmod +x
      /usr/bin/linuxdeploy-plugin-qt     && chmod +x /usr/bin/appimagetool
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && groupadd -g 2000 keepassxc     && useradd -u 2000 -g keepassxc
      -d /keepassxc -s /bin/bash keepassxc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - Name: volume
    Volumes:
    - /keepassxc/src
    - /keepassxc/out
  - Name: workdir
    Path: /keepassxc
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - bashx
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
