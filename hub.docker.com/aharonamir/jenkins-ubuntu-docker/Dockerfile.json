{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:trusty",
      "SourceCode": "FROM ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "ubuntu:trusty"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y  software-properties-common \u0026\u0026     add-apt-repository ppa:webupd8team/java -y \u0026\u0026     apt-get update \u0026\u0026     echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \u0026\u0026     apt-get install -y oracle-java8-installer \u0026\u0026     apt-get clean\u0026\u0026     apt-get install oracle-java8-set-default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:ubuntu-toolchain-r/test -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends wget git curl zip make g++-4.9 cmake \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/gcc-4.9 /usr/bin/gcc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/g++-4.9 /usr/bin/g++"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/gcc /usr/bin/cc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/g++ /usr/bin/c++"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-ca-certificates -f"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/var/jenkins_home"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -d \"$JENKINS_HOME\" -u 1000 -m -s /bin/bash jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/jenkins_home"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/jenkins/ref/init.groovy.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fL https://github.com/krallin/tini/releases/download/v0.5.0/tini-static -o /bin/tini \u0026\u0026 chmod +x /bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init.groovy",
            "/usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy"
          ]
        },
        {
          "Key": "JENKINS_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "JENKINS_VERSION",
              "Value": "${JENKINS_VERSION:-2.60.3}"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "JENKINS_SHA",
          "Name": "arg",
          "Value": "2d71b8f87c8417f9303a73d52901a59678ee6c0eefcf7325efed6035ff39372a"
        },
        {
          "Key": "JENKINS_URL",
          "Name": "arg",
          "Value": "https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war"
        },
        {
          "CmdLine": [
            "curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war   \u0026\u0026 echo \"${JENKINS_SHA}  /usr/share/jenkins/jenkins.war\" | sha256sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_UC",
              "Value": "https://updates.jenkins-ci.org"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "chown -R jenkins \"$JENKINS_HOME\" /usr/share/jenkins/ref"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "50000"
          ]
        },
        {
          "Env": [
            {
              "Key": "COPY_REFERENCE_FILE_LOG",
              "Value": "$JENKINS_HOME/copy_reference_file.log"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL https://get.docker.com/ | sh \u0026\u0026     apt-get purge -y docker-ce \u0026\u0026     apt-get install docker-ce"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -aG docker jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"jenkins ALL=(ALL) NOPASSWD:ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins.sh",
            "/usr/local/bin/jenkins.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/tini",
            "--",
            "/usr/local/bin/jenkins.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugins.sh",
            "/usr/local/bin/plugins.sh"
          ]
        }
      ]
    }
  ]
}