{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:8-jre",
      "SourceCode": "FROM java:8-jre",
      "Platform": "",
      "From": {
        "Image": "java:8-jre"
      },
      "Commands": [
        {
          "Key": "GRAYLOG_VERSION",
          "Name": "arg",
          "Value": "2.2.3"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64/jre"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRAYLOG_SERVER_JAVA_OPTS",
              "Value": "\"-Xms1g -Xmx2g -XX:NewRatio=1 -XX:MaxMetaspaceSize=256m -server -XX:+ResizeTLAB -XX:+UseConcMarkSweepGC -XX:+CMSConcurrentMTEnabled -XX:+CMSClassUnloadingEnabled -XX:+UseParNewGC -XX:-OmitStackTraceInFastThrow\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"   \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"   \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"   \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4   \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu   \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc   \u0026\u0026 chmod +x /usr/local/bin/gosu   \u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 apt-get update   \u0026\u0026 apt-get dist-upgrade -y   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 addgroup --gid 1100 graylog   \u0026\u0026 adduser --disabled-password --disabled-login --gecos '' --uid 1100 --gid 1100 graylog   \u0026\u0026 mkdir /usr/share/graylog   \u0026\u0026 wget -O /usr/share/graylog.tgz \"https://packages.graylog2.org/releases/graylog/graylog-${GRAYLOG_VERSION}.tgz\"   \u0026\u0026 tar xfz /usr/share/graylog.tgz --strip-components=1 -C /usr/share/graylog   \u0026\u0026 chown -R graylog:graylog /usr/share/graylog   \u0026\u0026 rm /usr/share/graylog.tgz   \u0026\u0026 setcap 'cap_net_bind_service=+ep' $JAVA_HOME/bin/java"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/share/graylog/plugin   \u0026\u0026 wget https://github.com/sivasamyk/graylog-plugin-output-webhdfs/releases/download/1.0.1/graylog-plugin-output-webhdfs-1.0.1.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/share/graylog/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/share/graylog"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for path in     ./data/journal     ./data/log     ./data/config   ; do     mkdir -p \"$path\";   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config",
            "./data/config"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/share/graylog/data"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "12900",
            "9000"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "graylog"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}