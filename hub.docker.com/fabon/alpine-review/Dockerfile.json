{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "frolvlad/alpine-glibc",
      "SourceCode": "FROM frolvlad/alpine-glibc",
      "Platform": "",
      "From": {
        "Image": "frolvlad/alpine-glibc"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"syobon.hinata.public@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "REVIEW_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/texlive/2019/bin/x86_64-linux:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "mecab_url",
              "Value": "https://drive.google.com/uc?export=download\u0026id=0B4y35FiV1wh7cENtOXlicTFaRUE"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ipadic_url",
              "Value": "https://drive.google.com/uc?export=download\u0026id=0B4y35FiV1wh7MWVlSDBCSXZMTXM"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add perl wget xz tar \u0026\u0026     mkdir /tmp/install-tl \u0026\u0026     wget -qO - ftp://tug.org/historic/systems/texlive/2019/install-tl-unx.tar.gz | tar -xz -C /tmp/install-tl --strip-components=1 \u0026\u0026     {         echo \"selected_scheme scheme-basic\";         echo \"option_doc 0\";         echo \"option_src 0\";     } \u003e /tmp/install-tl/texlive.profile \u0026\u0026     /tmp/install-tl/install-tl --profile=/tmp/install-tl/texlive.profile \u0026\u0026     tlmgr install collection-basic collection-latex collection-latexrecommended collection-fontsrecommended         collection-langcjk ascmac uplatex pxjahyper japanese-otf-uptex pxrubrica ipaex ptex-fontmaps plautopatch platex-tools pxchfon         everypage bigfoot framed wrapfig type1cm \u0026\u0026     kanji-config-updmap-sys ipaex \u0026\u0026     rm -fr /tmp/install-tl \u0026\u0026     apk --no-cache del xz tar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add ruby graphviz gnuplot python3 py3-reportlab ghostscript \u0026\u0026     gem install review -v \"$REVIEW_VERSION\" --no-rdoc --no-ri \u0026\u0026     gem install rake bundler --no-rdoc --no-ri \u0026\u0026     pip3 install aafigure blockdiag \u0026\u0026     echo \"[blockdiag]\" \u003e\u003e \"$HOME/.blockdiagrc\" \u0026\u0026 echo \"fontpath = /usr/share/fonts/ttf-dejavu/DejaVuSerif.ttf\" \u003e\u003e \"$HOME/.blockdiagrc\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if [ \"$(echo \"$REVIEW_VERSION\" | cut -c1-2)\" != \"2.\" ]; then apk --no-cache add openjdk8-jre; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if [ \"$(echo \"$REVIEW_VERSION\" | cut -c1-2)\" != \"2.\" ]; then     apk add --no-cache --virtual .deps build-base curl file ruby-dev \u0026\u0026 mkdir /tmp/mecab \u0026\u0026     curl -L ${mecab_url} | tar -xzf - -C /tmp/mecab --strip-components 1 \u0026\u0026 cd /tmp/mecab \u0026\u0026     ./configure --enable-utf8-only --with-charset=utf8 \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd \u0026\u0026 rm -rf /tmp/mecab \u0026\u0026     gem install mecab --no-rdoc --no-ri \u0026\u0026     mkdir /tmp/mecab-ipadic \u0026\u0026 curl -L ${ipadic_url} | tar -xzf - -C /tmp/mecab-ipadic --strip-components 1 \u0026\u0026 cd /tmp/mecab-ipadic \u0026\u0026     ./configure --with-charset=utf8 \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cd \u0026\u0026 rm -rf /tmp/mecab-ipadic \u0026\u0026     apk del --purge .deps; fi"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}