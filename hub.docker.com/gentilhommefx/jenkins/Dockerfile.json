{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins/jenkins:lts",
      "SourceCode": "FROM jenkins/jenkins:lts",
      "Platform": "",
      "From": {
        "Image": "jenkins/jenkins:lts"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 \tapt install -y \t    apt-transport-https \t    ca-certificates         gnupg2         software-properties-common \t\tzip \t\tautoconf \t\tautomake \t\tlibtool \t\tmake \t\tcurl \t\trsync \t\tbuild-essential \t\tgit \t\tlibkrb5-dev \t\tnetcat-openbsd \u0026\u0026 \tapt-get clean autoclean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 \tapt install -y \t    yarn \u0026\u0026 \tapt-get clean autoclean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://get.docker.com/builds/Linux/x86_64/docker-1.9.1 \u0026\u0026     mv /docker-1.9.1 /usr/local/bin/docker \u0026\u0026     chmod a+x /usr/local/bin/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "N_PREFIX",
              "Value": "/usr/local/n-install"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L https://git.io/n-install | bash -s -- -y lts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$N_PREFIX:$N_PREFIX/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install -g     node-gyp     polymer-cli     gulp-cli     bower     mocha     nightwatch     eslint     esdoc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugins.txt",
            "/usr/share/jenkins/ref/plugins.txt"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/install-plugins.sh \u003c /usr/share/jenkins/ref/plugins.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod a+x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "/jobs",
            "/jobs"
          ]
        },
        {
          "CmdLine": [
            "chown -R jenkins:jenkins /var/jenkins_home/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "/bin/tini",
            "--",
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}