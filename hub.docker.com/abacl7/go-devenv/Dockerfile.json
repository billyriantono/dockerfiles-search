{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "2.7.15"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GO_VERSION",
              "Value": "1.10.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANYENV_HOME",
              "Value": "$HOME/.anyenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANYENV_ENV",
              "Value": "$ANYENV_HOME/envs"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -q -y \u0026\u0026 apt-get -y install curl git jq nkf make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget llvm libncurses5-dev libncursesw5-dev xz-utils software-properties-common zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/riywo/anyenv $ANYENV_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir $ANYENV_ENV"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$ANYENV_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "anyenv install pyenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$ANYENV_ENV/pyenv/bin:$ANYENV_ENV/pyenv/shims:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYENV_ROOT",
              "Value": "$ANYENV_ENV/pyenv"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "anyenv install goenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOENV_ROOT",
              "Value": "$ANYENV_ENV/goenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "$GOENV_ROOT"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOBIN",
              "Value": "$GOPATH/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOBIN:$GOENV_ROOT/shims:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pyenv install $PYTHON_VERSION \u0026\u0026 pyenv global $PYTHON_VERSION \u0026\u0026 pyenv rehash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "goenv install $GO_VERSION \u0026\u0026 goenv global $GO_VERSION \u0026\u0026 goenv rehash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli \u0026\u0026 pip install yamllint \u0026\u0026 apt-add-repository ppa:duggan/jo --yes  \u0026\u0026 apt-get update -q \u0026\u0026 apt-get install jo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://goss.rocks/install | GOSS_DST=/bin sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get github.com/aws/aws-lambda-go/events \u0026\u0026 go get github.com/aws/aws-lambda-go/lambda \u0026\u0026 go get github.com/aws/aws-sdk-go/service/athena \u0026\u0026 go get github.com/golang/lint/golint"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}