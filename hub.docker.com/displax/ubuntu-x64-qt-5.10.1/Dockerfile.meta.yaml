MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"taraujo@displax.com"'
    Name: label
  - CmdLine:
    - apt-get update && apt-get install -y     x11vnc xauth mesa-common-dev libxkbcommon-dev
      libxcb-xvmc0 libxcb-xvmc0-dev     libxslt1-dev libgstreamer-plugins-base0.10-dev
      libxcb1 libxcb1-dev     gcc build-essential cmake bash libxcb1-dev libicu-dev     libssl-dev
      linux-headers-generic curl git libxrender-dev libnss3-dev libpci-dev     libpng3
      libpng-dev libjpeg-turbo8 libjpeg-turbo8-dev libicu55     libgles2-mesa libgles2-mesa-dev
      libfreetype6-dev libsqlite3-dev libgl1-mesa-glx     libgstreamer0.10-0 libgstreamer0.10-dev
      libgl1-mesa-dri g++ libgl1-mesa-dev wget openssh-server     libogg-dev libvorbis-dev
      bzip2 gperf bison ruby flex openjdk-8-jdk     libudev-dev libudev1 libusb-1.0-0-dev
      libusb-1.0-0 libhidapi-hidraw0 libhidapi-dev     ibgstreamer-plugins-base0.10-dev
      libasound2-dev libatkmm-1.6-dev libbz2-dev libcap-dev libcups2-dev     libfontconfig1-dev
      libgcrypt11-dev libglu1-mesa-dev libpulse-dev libx11-dev libx11-xcb-dev     libxcb-composite0
      libxcb-composite0-dev libxcb-cursor-dev libxcb-cursor0 libxcb-damage0 libxcb-damage0-dev
      libxcb-dpms0     libxcb-dpms0-dev libxcb-dri2-0 libxcb-dri2-0-dev libxcb-dri3-0
      libxcb-dri3-dev libxcb-ewmh-dev libxcb-ewmh2     libxcb-glx0 libxcb-glx0-dev
      libxcb-icccm4 libxcb-icccm4-dev libxcb-image0 libxcb-image0-dev libxcb-keysyms1
      libxcb-keysyms1-dev libxcb-present-dev     libxcb-present0 libxcb-randr0 libxcb-randr0-dev
      libxcb-record0 libxcb-record0-dev libxcb-render-util0 libxcb-render-util0-dev     libxcb-screensaver0
      libxcb-screensaver0-dev libxcb-shape0 libxcb-shape0-dev libxcb-shm0 libxcb-shm0-dev
      libxcb-sync-dev libxcb-sync0-dev     libxcb-render0 libxcb-render0-dev libxcb-res0
      libxcb-res0-dev     libxcb-sync1 libxcb-util-dev libxcb-util0-dev libxcb-util1
      libxcb-xevie0 libxcb-xevie0-dev libxcb-xf86dri0 libxcb-xf86dri0-dev      libdrm-dev
      libxcb-xfixes0 libxcb-xfixes0-dev libxcb-xkb-dev libxcb-xkb1 libxcb-xprint0
      libxcb-xprint0-dev libxcb-xv0 libxcb-xv0-dev     libxcomposite-dev libxcursor-dev
      libxdamage-dev libxext-dev libxfixes-dev libxi-dev libxrandr-dev libxrender-dev
      libxslt-dev libxss-dev libxtst-dev     libdbus-1-dev libdbus-glib-1-dev libgnutls30
      python python-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -     && apt-get install
      -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:ubuntu-toolchain-r/test && apt-get update && apt-get
      install -y gcc-8 g++-8
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++
      g++ /usr/bin/g++-8
    Name: run
    PrependShell: true
  - Key: user
    Name: arg
    Value: jenkins
  - Key: group
    Name: arg
    Value: jenkins
  - Key: uid
    Name: arg
    Value: "1000"
  - Key: gid
    Name: arg
    Value: "1000"
  - Key: JENKINS_AGENT_HOME
    Name: arg
    Value: /home/${user}
  - Env:
    - Key: JENKINS_AGENT_HOME
      Value: ${JENKINS_AGENT_HOME}
    Name: env
  - CmdLine:
    - groupadd -g ${gid} ${group}     && useradd -d "${JENKINS_AGENT_HOME}" -u "${uid}"
      -g "${gid}" -m -s /bin/bash "${user}"     && echo "jenkins:qwerty123" | chpasswd
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - '"/tmp"'
  - Env:
    - Key: QT_VERSION
      Value: 5.10.1
    - Key: QT_COMPILER
      Value: gcc_64
    Name: env
  - CmdLine:
    - mkdir /var/run/sshd &&     mkdir $JENKINS_AGENT_HOME/Qt &&     chmod 777 -R
      $JENKINS_AGENT_HOME/Qt &&     mkdir $JENKINS_AGENT_HOME/workspace &&     chmod
      777 -R $JENKINS_AGENT_HOME/workspace
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / && wget http://download.qt.io/official_releases/online_installers/qt-unified-linux-x64-online.run
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - qt-installer-noninteractive.qs
    - /qt-installer-noninteractive.qs
  - CmdLine:
    - chmod a+x qt-unified-linux-x64-online.run
    Name: run
    PrependShell: true
  - CmdLine:
    - ./qt-unified-linux-x64-online.run --platform minimal --verbose --script qt-installer-noninteractive.qs
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - Env:
    - Key: QTDIR
      Value: '"${JENKINS_AGENT_HOME}/Qt/${QT_VERSION}/${QT_COMPILER}"'
    Name: env
  - Env:
    - Key: PATH
      Value: $QTDIR/bin:$PATH
    Name: env
  - CmdLine:
    - wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x linuxdeployqt-continuous-x86_64.AppImage && ./linuxdeployqt-continuous-x86_64.AppImage
      --appimage-extract
    Name: run
    PrependShell: true
  - CmdLine:
    - cp squashfs-root/usr/bin/linuxdeployqt $QTDIR/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y patchelf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./clang-format
    - /usr/local/bin
  - Env:
    - Key: PATH
      Value: $QTDIR/bin:"${JENKINS_AGENT_HOME}/Qt/Tools/QtCreator/bin":$PATH
    Name: env
  - CmdLine:
    - echo "\n" >> /etc/profile     && echo PATH=$PATH >> /etc/profile     && echo
      "\n" >> /etc/profile     && echo QTDIR=$QTDIR >> /etc/profile     && echo export
      PATH >> /etc/profile     && echo export QTDIR >> /etc/profile
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $JENKINS_AGENT_HOME
  - CmdLine:
    - /usr/sbin/sshd
    - -D
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
