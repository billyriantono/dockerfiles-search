{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "ccls-build",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04 AS ccls-build",
      "Platform": "",
      "As": "ccls-build",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'APT::Get::Assume-Yes \"true\";' \u003e\u003e /etc/apt/apt.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --no-install-recommends apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --no-install-recommends         build-essential         cmake         ca-certificates         clang-7         cmake         git         libclang-7-dev         llvm-7-dev         rapidjson-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln --symbolic `(which clang-7)` /usr/local/sbin/clang"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone         --branch 0.20190314         --depth 1         --shallow-submodules          -- https://github.com/MaskRay/ccls.git /tmp/ccls \u0026\u0026     mkdir /tmp/ccls-build \u0026\u0026 cd /tmp/ccls-build \u0026\u0026     cmake /tmp/ccls         -DCMAKE_BUILD_TYPE=Release \u0026\u0026    make \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get remove         apt-utils         build-essential         libclang-7-dev         pinentry-curses         rapidjson-dev     \u0026\u0026 apt-get autoremove \u0026\u0026 apt-get autoclean     \u0026\u0026 rm -rf /tmp/* /var/lib/apt/lists/* /root/.cache/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ls `(clang -print-resource-dir)` -la"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "emacs",
      "BaseName": "silex/emacs:26.2",
      "SourceCode": "FROM silex/emacs:26.2 AS emacs",
      "Platform": "",
      "As": "emacs",
      "From": {
        "Image": "silex/emacs:26.2"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Innokentiy Alaytsev \u003calaitsev@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "USER_ID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "GROUP_ID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'APT::Get::Assume-Yes \"true\";' \u003e\u003e /etc/apt/apt.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --no-install-recommends apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --no-install-recommends         clang-format-7         git         gnupg         pinentry-gtk2         ssh         sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "support_scripts/*",
            "/tmp/support_scripts/"
          ]
        },
        {
          "CmdLine": [
            "chown root /tmp/support_scripts/* \u0026\u0026     chmod 700 /tmp/support_scripts/* \u0026\u0026     mv /tmp/support_scripts/* /usr/local/sbin/ \u0026\u0026     rm -rf /tmp/support_scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "UNAME",
              "Value": "\"emacs\""
            },
            {
              "Key": "GNAME",
              "Value": "\"emacs\""
            },
            {
              "Key": "UHOME",
              "Value": "\"/home/emacs\""
            },
            {
              "Key": "WORKSPACE",
              "Value": "\"/home/emacs/.workspace\""
            },
            {
              "Key": "SHELL",
              "Value": "\"/bin/bash\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd --gid ${GROUP_ID} ${GNAME} \u0026\u0026     useradd          --uid ${USER_ID}         --gid ${GROUP_ID} ${UNAME}         --shell /bin/bash         --create-home \u0026\u0026     usermod --append --groups sudo ${UNAME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "home",
            "${UHOME}"
          ]
        },
        {
          "CmdLine": [
            "chown --recursive ${USER_ID}:${GROUP_ID} ${UHOME}/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "run_as_user mkdir ${WORKSPACE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "${WORKSPACE}"
          ]
        },
        {
          "CmdLine": [
            "run_as_user fc-cache --force --verbose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir --parents /run/user/${USER_ID} \u0026\u0026     chown --recursive ${USER_ID}:${GROUP_ID} /run/user/${USER_ID}/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get remove         apt-utils     \u0026\u0026 apt-get autoremove \u0026\u0026 apt-get autoclean     \u0026\u0026 rm -rf /tmp/* /var/lib/apt/lists/* /root/.cache/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "ccls-build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/ccls",
            "/usr/local/bin/ccls"
          ]
        },
        {
          "Chown": "",
          "From": "ccls-build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/lib/llvm-7/lib/clang/7.0.0",
            "/usr/lib/llvm-7/lib/clang/7.0.0"
          ]
        },
        {
          "CmdLine": [
            "entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "emacs"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}