{
  "MetaArgs": [
    {
      "Key": "fromTag",
      "DefaultValue": "latest",
      "ProvidedValue": null,
      "Value": "latest"
    },
    {
      "Key": "imageRepo",
      "DefaultValue": "alpine",
      "ProvidedValue": null,
      "Value": "alpine"
    }
  ],
  "Stages": [
    {
      "Name": "installer-env",
      "BaseName": "${imageRepo}:${fromTag}",
      "SourceCode": "FROM ${imageRepo}:${fromTag} AS installer-env",
      "Platform": "",
      "As": "installer-env",
      "From": {
        "Image": "${imageRepo}:${fromTag}"
      },
      "Commands": [
        {
          "Key": "PS_VERSION",
          "Name": "arg",
          "Value": "7.0.0-rc.1"
        },
        {
          "Key": "PS_PACKAGE",
          "Name": "arg",
          "Value": "powershell-${PS_VERSION}-linux-alpine-x64.tar.gz"
        },
        {
          "Key": "PS_PACKAGE_URL",
          "Name": "arg",
          "Value": "https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}"
        },
        {
          "Key": "PS_INSTALL_VERSION",
          "Name": "arg",
          "Value": "7"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "${PS_PACKAGE_URL}",
            "/tmp/linux.tar.gz"
          ]
        },
        {
          "Env": [
            {
              "Key": "PS_INSTALL_FOLDER",
              "Value": "/opt/microsoft/powershell/$PS_INSTALL_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${PS_INSTALL_FOLDER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar zxf /tmp/linux.tar.gz -C ${PS_INSTALL_FOLDER}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "${imageRepo}:${fromTag}",
      "SourceCode": "FROM ${imageRepo}:${fromTag}",
      "Platform": "",
      "From": {
        "Image": "${imageRepo}:${fromTag}"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "installer-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/microsoft/powershell",
            "/opt/microsoft/powershell"
          ]
        },
        {
          "Key": "PS_INSTALL_VERSION",
          "Name": "arg",
          "Value": "7"
        },
        {
          "Env": [
            {
              "Key": "PS_INSTALL_FOLDER",
              "Value": "/opt/microsoft/powershell/$PS_INSTALL_VERSION"
            },
            {
              "Key": "DOTNET_SYSTEM_GLOBALIZATION_INVARIANT",
              "Value": "false"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "PSModuleAnalysisCachePath",
              "Value": "/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache     ca-certificates     less         ncurses-terminfo-base         krb5-libs     libgcc     libintl     libssl1.1     libstdc++     tzdata     userspace-rcu     zlib     icu-libs     \u0026\u0026 apk -X https://dl-cdn.alpinelinux.org/alpine/edge/main add --no-cache     lttng-ust         \u0026\u0026 ln -s ${PS_INSTALL_FOLDER}/pwsh /usr/bin/pwsh     \u0026\u0026 chmod a+x,o-w ${PS_INSTALL_FOLDER}/pwsh     \u0026\u0026 pwsh         -NoLogo         -NoProfile         -Command \"           \\$ErrorActionPreference = 'Stop' ;           \\$ProgressPreference = 'SilentlyContinue' ;           while(!(Test-Path -Path \\$env:PSModuleAnalysisCachePath)) {              Write-Host \"'Waiting for $env:PSModuleAnalysisCachePath'\" ;             Start-Sleep -Seconds 6 ;           }\"     \u0026\u0026 mkdir -p /opt/shared/powershell     \u0026\u0026 mkdir -p /root/.config/powershell/     \u0026\u0026 echo '$Env:PSModulePath += \":/opt/shared/powershell/Modules\"' \u003e /root/.config/powershell/Microsoft.PowerShell_profile.ps1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "PS_VERSION",
          "Name": "arg",
          "Value": "7.0.0-rc.1"
        },
        {
          "Key": "IMAGE_NAME",
          "Name": "arg",
          "Value": "skeneventures/powershell-core-7:latest"
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": "\"none\""
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Martyn Skene Ashworth \u003cmartyn@skven.io\u003e\""
            },
            {
              "Key": "readme.md",
              "Value": "\"https://github.com/skene-ventures/docker-images/blob/master/README.md\""
            },
            {
              "Key": "description",
              "Value": "\"This Dockerfile will install the latest release of PowerShell.\""
            },
            {
              "Key": "org.label-schema.usage",
              "Value": "\"https://github.com/PowerShell/PowerShell/tree/master/docker#run-the-docker-image-you-built\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/skene-ventures/docker-powershell-core-7/blob/master/README.md\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/PowerShell/PowerShell-Docker\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"powershell\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"PowerShell\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "${VCS_REF}"
            },
            {
              "Key": "org.label-schema.version",
              "Value": "${PS_VERSION}"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.docker.cmd",
              "Value": "\"docker run ${IMAGE_NAME} pwsh -c '$psversiontable'\""
            },
            {
              "Key": "org.label-schema.docker.cmd.devel",
              "Value": "\"docker run ${IMAGE_NAME}\""
            },
            {
              "Key": "org.label-schema.docker.cmd.test",
              "Value": "\"docker run ${IMAGE_NAME} pwsh -c Invoke-Pester\""
            },
            {
              "Key": "org.label-schema.docker.cmd.help",
              "Value": "\"docker run ${IMAGE_NAME} pwsh -c Get-Help\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "pwsh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}