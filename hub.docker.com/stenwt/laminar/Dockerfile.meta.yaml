MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Name: expose
    Ports:
    - "8080"
  - Labels:
    - Key: org.label-schema.name
      Value: '"laminar"'
    - Key: org.label-schema.description
      Value: '"Fast and lightweight Continuous Integration"'
    - Key: org.label-schema.usage
      Value: '"/usr/doc/UserManual.md"'
    - Key: org.label-schema.url
      Value: '"https://laminar.ohwg.net"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/ohwgiles/laminar"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.docker.cmd
      Value: '"docker run -d -p 8080:8080 laminar"'
    Name: label
  - CmdLine:
    - apk add --no-cache -X http://dl-3.alpinelinux.org/alpine/edge/testing/         sqlite-dev         zlib         capnproto         tini
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - UserManual.md
    - /usr/doc/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /build/laminar
  - CmdLine:
    - apk add --no-cache --virtual .build -X http://dl-3.alpinelinux.org/alpine/edge/testing/         build-base         cmake         capnproto-dev         boost-dev         zlib-dev         rapidjson-dev
      &&     cd /build/laminar &&     cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/
      &&     make -j4 &&     make install &&     apk del .build &&     rm -rf /build
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser -SDh /var/lib/laminar -g 'Laminar' -G users laminar
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/lib/laminar
  - Name: user
    User: laminar
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - laminard
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
