MetaArgs: null
Stages:
- BaseName: ddtry/jdk_full:latest
  Commands:
  - Maintainer: '"swarm_3.9_jdk1.8.0_172_full_mvn3.3.9_git2.20.1_nodejs10.14.2_nrm_yarn_jmeter5.0_k8s_helm2.11.0_helmpush0.7.1"'
    Name: maintainer
  - CmdLine:
    - apk add --no-cache --update-cache wget openssh-client curl unzip bash ttf-dejavu
      coreutils tini jq &&     rm -rf /tmp/* /var/cache/apk/*
    Name: run
    PrependShell: true
  - Key: AGENT_WORKDIR
    Name: arg
    Value: /root/agent
  - Key: swarmVERSION
    Name: arg
    Value: "3.9"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins-slave-dynamic.sh
    - /usr/local/bin/jenkins-slave-dynamic.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkinsGetKubeEnv2.sh
    - /usr/local/bin/jenkinsGetKubeEnv2.sh
  - Env:
    - Key: AGENT_WORKDIR
      Value: ${AGENT_WORKDIR}
    Name: env
  - CmdLine:
    - mkdir /root/.jenkins && mkdir -p ${AGENT_WORKDIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LO https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/${swarmVERSION}/swarm-client-${swarmVERSION}.jar
      &&     mv ./swarm-client-${swarmVERSION}.jar ${AGENT_WORKDIR}/swarm-client.jar
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /root/.jenkins
  - Name: volume
    Volumes:
    - ${AGENT_WORKDIR}
  - Name: workdir
    Path: /root
  - Key: mvn3VERSION
    Name: arg
    Value: 3.3.9
  - Key: gitVERSION
    Name: arg
    Value: 2.20.2-r0
  - Key: nodejsVERSION
    Name: arg
    Value: 10.14.2-r0
  - Key: kubectlVERSION
    Name: arg
    Value: v1.12.4
  - Key: helmVERSION
    Name: arg
    Value: v2.11.0
  - CmdLine:
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/${kubectlVERSION}/bin/linux/amd64/kubectl
      &&     chmod +x ./kubectl &&     mv ./kubectl /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LO https://storage.googleapis.com/kubernetes-helm/helm-${helmVERSION}-linux-amd64.tar.gz
      &&     tar -zxf helm-${helmVERSION}-linux-amd64.tar.gz &&     mv ./linux-amd64/helm
      /usr/local/bin/helm &&     rm -rf linux-amd64 &&     rm -rf helm-${helmVERSION}-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .helm
    - /root/.helm
  - CmdLine:
    - 'apk add --no-cache --update-cache git=${gitVERSION} nodejs=${nodejsVERSION}
      npm yarn libltdl sudo &&     npm install -g coffeescript &&     npm install
      -g nrm &&     wget http://mirrors.sonic.net/apache/maven/maven-3/${mvn3VERSION}/binaries/apache-maven-${mvn3VERSION}-bin.tar.gz
      &&     tar -zxf apache-maven-${mvn3VERSION}-bin.tar.gz &&     mv apache-maven-${mvn3VERSION}
      /usr/local &&     rm -f apache-maven-${mvn3VERSION}-bin.tar.gz &&     ln -s
      /usr/local/apache-maven-${mvn3VERSION}/bin/mvn /usr/bin/mvn &&     ln -s /usr/local/apache-maven-${mvn3VERSION}
      /usr/local/apache-maven &&     echo "root ALL=NOPASSWD: ALL" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Key: ANT_VERSION
    Name: arg
    Value: 1.10.5
  - Env:
    - Key: ANT_HOME
      Value: /opt/ant
    Name: env
  - Key: JMETER_VERSION
    Name: arg
    Value: '"5.0"'
  - Env:
    - Key: JMETER_HOME
      Value: /opt/apache-jmeter-${JMETER_VERSION}
    Name: env
  - Env:
    - Key: JMETER_BIN
      Value: ${JMETER_HOME}/bin
    Name: env
  - Env:
    - Key: MIRROR_HOST
      Value: https://archive.apache.org/dist/jmeter/
    Name: env
  - Env:
    - Key: JMETER_DOWNLOAD_URL
      Value: ${MIRROR_HOST}/binaries/apache-jmeter-${JMETER_VERSION}.tgz
    Name: env
  - Env:
    - Key: JMETER_PLUGINS_DOWNLOAD_URL
      Value: http://repo1.maven.org/maven2
    Name: env
  - Env:
    - Key: JMETER_PLUGINS_FOLDER
      Value: ${JMETER_HOME}/lib/ext
    Name: env
  - CmdLine:
    - mkdir -p $JMETER_HOME &&     cd $JMETER_HOME &&     wget ${JMETER_DOWNLOAD_URL}
      &&     tar -xzf apache-jmeter-${JMETER_VERSION}.tgz -C $JMETER_HOME --strip
      1 &&     rm -f apache-jmeter-${JMETER_VERSION}.tgz &&     rm -f -R $JMETER_HOME/docs/*
      &&     ln -s $JMETER_HOME/bin/jmeter /usr/bin/jmeter &&     ln -s $JMETER_HOME/bin/jmeter-server
      /usr/bin/jmeter-server &&     curl -L --silent ${JMETER_PLUGINS_DOWNLOAD_URL}/com/alibaba/fastjson/1.2.51/fastjson-1.2.51.jar
      -o ${JMETER_PLUGINS_FOLDER}/fastjson-1.2.51.jar &&     curl -L --silent ${JMETER_PLUGINS_DOWNLOAD_URL}/kg/apc/jmeter-plugins-redis/0.3/jmeter-plugins-redis-0.3.jar
      -o ${JMETER_PLUGINS_FOLDER}/jmeter-plugins-redis-0.3.jar &&     curl -L --silent
      ${JMETER_PLUGINS_DOWNLOAD_URL}/org/apache/qpid/qpid-common/0.20/qpid-common-0.20.jar
      -o ${JMETER_HOME}/lib/qpid-common-0.20.jar &&     curl -L --silent ${JMETER_PLUGINS_DOWNLOAD_URL}/commons-beanutils/commons-beanutils/1.8.3/commons-beanutils-1.8.3.jar
      -o ${JMETER_HOME}/lib/commons-beanutils-1.8.3.jar &&     curl -L --silent ${JMETER_PLUGINS_DOWNLOAD_URL}/kg/apc/cmdrunner/2.2/cmdrunner-2.2.jar
      -o ${JMETER_HOME}/lib/cmdrunner-2.2.jar &&     curl -L --silent ${JMETER_PLUGINS_DOWNLOAD_URL}/kg/apc/jmeter-plugins-cmn-jmeter/0.4/jmeter-plugins-cmn-jmeter-0.4.jar
      -o ${JMETER_HOME}/lib/jmeter-plugins-cmn-jmeter-0.4.jar &&     curl -L --silent
      ${JMETER_PLUGINS_DOWNLOAD_URL}/net/sf/json-lib/json-lib/2.4/json-lib-2.4-jdk15.jar
      -o ${JMETER_HOME}/lib/json-lib-2.4-jdk15.jar &&     curl -L --silent ${JMETER_PLUGINS_DOWNLOAD_URL}/redis/clients/jedis/2.2.1/jedis-2.2.1.jar
      -o ${JMETER_HOME}/lib/jedis-2.2.1.jar &&     curl -L --silent ${JMETER_PLUGINS_DOWNLOAD_URL}/com/io7m/xom/xom/1.2.10/xom-1.2.10.jar
      -o ${JMETER_HOME}/lib/xom-1.2.10.jar &&     curl -L --silent ${JMETER_PLUGINS_DOWNLOAD_URL}/commons-pool/commons-pool/1.6/commons-pool-1.6.jar
      -o ${JMETER_HOME}/lib/commons-pool-1.6.jar &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jmeter-results-shanhe-me-cxh.xsl
    - ${JMETER_HOME}/extras/jmeter-results-shanhe-me-cxh.xsl
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jmeter.properties
    - ${JMETER_HOME}/bin/jmeter.properties
  - CmdLine:
    - mkdir -p ${ANT_HOME} &&     cd ${ANT_HOME} &&     wget --no-check-certificate
      https://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz
      &&     tar -zvxf apache-ant-${ANT_VERSION}-bin.tar.gz -C ${ANT_HOME} --strip
      1 &&     rm -f apache-ant-${ANT_VERSION}-bin.tar.gz &&     rm -f -R ${ANT_HOME}/manual/*
      &&     cp $JMETER_HOME/extras/ant-jmeter-1.1.1.jar ${ANT_HOME}/lib/ant-jmeter-1.1.1.jar
      &&     ln -s ${ANT_HOME}/bin/ant /usr/bin/ant &&     rm -rf /tmp/* /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/jenkins/.m2/cicdrepository
    Name: run
    PrependShell: true
  - Env:
    - Key: SONAR_SCANNER_OPTS
      Value: '"-Xmx512m"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sonar-scanner-3.3.0.1492-linux
    - /opt/sonar-scanner
  - CmdLine:
    - ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/bin/sonar-scanner &&     ln
      -s /opt/sonar-scanner/bin/sonar-scanner-debug /usr/bin/sonar-scanner-debug
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - slave
    - /slave
  - Env:
    - Key: S6_VERSION
      Value: v1.22.1.0
    Name: env
  - CmdLine:
    - curl -o /tmp/s6-overlay-amd64.tar.gz -L https://github.com/just-containers/s6-overlay/releases/download/$S6_VERSION/s6-overlay-amd64.tar.gz
      &&     tar xzf /tmp/s6-overlay-amd64.tar.gz -C / &&     rm /tmp/s6-overlay-amd64.tar.gz
      &&     mkdir /etc/services.d/jenkinsSlave/ &&     echo "#!/usr/bin/with-contenv
      sh" >> /etc/services.d/jenkinsSlave/run &&     echo "s6-svwait -t 5000 -u /var/run/s6/services/gossip"
      >> /etc/services.d/jenkinsSlave/run &&     echo "exec jenkins-slave-dynamic.sh"
      >> /etc/services.d/jenkinsSlave/run &&     mkdir /etc/services.d/gossip/ &&     echo
      "#!/usr/bin/with-contenv sh" >> /etc/services.d/gossip/run &&     echo 'exec
      /slave' >> /etc/services.d/gossip/run
    Name: run
    PrependShell: true
  - Env:
    - Key: S6_BEHAVIOUR_IF_STAGE2_FAILS
      Value: "1"
    Name: env
  - Env:
    - Key: webhook
      Value: "8081"
    - Key: memberlist
      Value: "7946"
    Name: env
  - Name: expose
    Ports:
    - ${webhook}
  - Name: expose
    Ports:
    - ${memberlist}
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  From:
    Image: ddtry/jdk_full:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ddtry/jdk_full:latest
