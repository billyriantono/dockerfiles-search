MetaArgs:
- DefaultValue: zokradonh
  Key: docker_repo
  ProvidedValue: null
  Value: zokradonh
Stages:
- BaseName: ${docker_repo}/kopano_base
  Commands:
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: ADDITIONAL_KOPANO_PACKAGES
    Name: arg
    Value: '""'
  - Key: DOWNLOAD_COMMUNITY_PACKAGES
    Name: arg
    Value: "1"
  - Key: KOPANO_REPOSITORY_FLAGS
    Name: arg
    Value: '"trusted=yes"'
  - Key: RELEASE_KEY_DOWNLOAD
    Name: arg
    Value: "0"
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: KOPANO_CORE_REPOSITORY_URL
    Name: arg
    Value: '"file:/kopano/repo/core"'
  - Key: KOPANO_CORE_VERSION
    Name: arg
    Value: newest
  - Env:
    - Key: ADDITIONAL_KOPANO_PACKAGES
      Value: $ADDITIONAL_KOPANO_PACKAGES
    - Key: DOWNLOAD_COMMUNITY_PACKAGES
      Value: $DOWNLOAD_COMMUNITY_PACKAGES
    - Key: KOPANO_CORE_REPOSITORY_URL
      Value: $KOPANO_CORE_REPOSITORY_URL
    - Key: KOPANO_CORE_VERSION
      Value: $KOPANO_CORE_VERSION
    - Key: KOPANO_REPOSITORY_FLAGS
      Value: $KOPANO_REPOSITORY_FLAGS
    - Key: RELEASE_KEY_DOWNLOAD
      Value: $RELEASE_KEY_DOWNLOAD
    Name: env
  - Labels:
    - Key: maintainer
      Value: az@zok.xyz
    - Key: org.label-schema.name
      Value: '"Kopano core container"'
    - Key: org.label-schema.description
      Value: '"Container for running applications out of Kopano Groupware Core"'
    - Key: org.label-schema.url
      Value: '"https://kopano.io"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/zokradonh/kopano-docker"'
    - Key: org.label-schema.version
      Value: $KOPANO_CORE_VERSION
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Name: shell
    Shell:
    - /bin/bash
    - -o
    - pipefail
    - -c
  - CmdLine:
    - ". /kopano/helper/create-kopano-repo.sh &&     if [ ${DOWNLOAD_COMMUNITY_PACKAGES}
      -eq 1 ]; then         dl_and_package_community \"core\";     fi;     echo \"deb
      [${KOPANO_REPOSITORY_FLAGS}] ${KOPANO_CORE_REPOSITORY_URL} ./\" > /etc/apt/sources.list.d/kopano.list;
      \    apt-get update &&     set -x &&     apt-get install --no-install-recommends
      -y         kopano-server-packages \tkopano-grapi kopano-kapid         ${ADDITIONAL_KOPANO_PACKAGES}
      \        &&     set +x &&     rm -rf /var/cache/apt /var/lib/apt/lists &&     touch
      /etc/kopano/admin.cfg &&     cp /usr/share/doc/kopano/example-config/*.cfg /etc/kopano/
      &&     cp /usr/share/doc/kopano/example-config/*.cfg.gz /etc/kopano/ &&     gzip
      -d -f /etc/kopano/*.gz"
    Name: run
    PrependShell: true
  - Env:
    - Key: KOPANO_LOCALE
      Value: '"de_DE.UTF-8"'
    Name: env
  - Env:
    - Key: KOPANO_USERSCRIPT_LOCALE
      Value: '"de_DE.UTF-8"'
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: SERVICE_TO_START
      Value: server
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - defaultconfigs/
    - start-service.sh
    - /kopano/
  - Name: workdir
    Path: /kopano/path
  - CmdLine:
    - /usr/bin/dumb-init
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /kopano/start-service.sh
    Name: cmd
    PrependShell: false
  - Health:
      Interval: 300000000000
      Test:
      - CMD-SHELL
      - /kopano/healthcheck.sh
      Timeout: 60000000000
    Name: healthcheck
  From:
    Image: ${docker_repo}/kopano_base
  Name: ""
  Platform: ""
  SourceCode: FROM ${docker_repo}/kopano_base
