{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "Derek Vance",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PDA_DB_HOST",
              "Value": "db"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PDA_DB_USER",
              "Value": "powerdns"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PDA_DB_PASSWORD",
              "Value": "powerdns"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PDA_DB_NAME",
              "Value": "powerdns"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache -q --no-progress add     git     python3     python3-dev     py-pip     libffi-dev     libxml2-dev     xmlsec-dev     libxslt-dev     zlib-dev     openldap-dev     build-base     mariadb-dev     yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --quiet install -U pip     \u0026\u0026 pip install virtualenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/ngoduykhanh/PowerDNS-Admin.git /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "virtualenv -p python3 flask     \u0026\u0026 source ./flask/bin/activate     \u0026\u0026 pip install mysqlclient     \u0026\u0026 pip install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp configs/development.py config.py     \u0026\u0026 sed -i \"s|LOG_LEVEL = 'DEBUG'|LOG_LEVEL = 'INFO'|g\" /app/config.py;     sed -i \"s|LOG_FILE = 'logfile.log'|LOG_FILE = ''|g\" /app/config.py;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /app/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir logs     \u0026\u0026 rm -rf docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9191/tcp"
          ]
        },
        {
          "CmdLine": [
            "/app/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/app/flask/bin/gunicorn",
            "-t",
            "120",
            "--workers",
            "4",
            "--bind",
            "0.0.0.0:9191",
            "--log-level",
            "info",
            "app:app"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}