MetaArgs:
- DefaultValue: "7.2"
  Key: PHP_VERSION
  ProvidedValue: null
  Value: "7.2"
- DefaultValue: fpm-buster
  Key: PHP_MOD
  ProvidedValue: null
  Value: fpm-buster
- DefaultValue: null
  Key: PHP_BASE_IMAGE_VERSION
  ProvidedValue: null
  Value: null
Stages:
- BaseName: php:${PHP_VERSION}-${PHP_MOD}
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Key: USER_ID
    Name: arg
    Value: "2000"
  - Key: APP_DIR
    Name: arg
    Value: /app
  - Key: USER_HOME
    Name: arg
    Value: /home/user
  - Key: TZ
    Name: arg
    Value: UTC
  - Key: CA_HOSTS_LIST
    Name: arg
    Value: null
  - Key: YII_ENV
    Name: arg
    Value: null
  - Env:
    - Key: APP_DIR
      Value: ${APP_DIR}
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get -y upgrade &&     apt-get -y install --no-install-recommends             g++             git             curl             gnupg2             imagemagick             libcurl3-dev             libicu-dev             libfreetype6-dev             libjpeg-dev             libjpeg62-turbo-dev             libmagickwand-dev             libpq-dev             libpng-dev             libxml2-dev             libzip-dev             zlib1g-dev             openssh-client             nano             unzip             libcurl4-openssl-dev             libssl-dev             netcat             runit
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: ${TZ}
    Name: env
  - Env:
    - Key: USER_HOME
      Value: ${USER_HOME}
    Name: env
  - CmdLine:
    - mkdir -p ${USER_HOME} &&     chgrp -R 0 ${USER_HOME} &&     chmod -R g=u ${USER_HOME}
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH
    Name: env
  - Env:
    - Key: TERM
      Value: linux
    Name: env
  - CmdLine:
    - curl -L https://raw.githubusercontent.com/yiisoft/yii2/master/contrib/completion/bash/yii         -o
      /etc/bash_completion.d/yii
    Name: run
    PrependShell: true
  - Env:
    - Key: PHPFPM_PM_MAX_CHILDREN
      Value: "10"
    Name: env
  - Env:
    - Key: PHPFPM_PM_START_SERVERS
      Value: "5"
    Name: env
  - Env:
    - Key: PHPFPM_PM_MIN_SPARE_SERVERS
      Value: "2"
    Name: env
  - Env:
    - Key: PHPFPM_PM_MAX_SPARE_SERVERS
      Value: "5"
    Name: env
  - CmdLine:
    - rm -f /etc/apache2/sites-available/000-default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - which apache2 2>&1 > /dev/null || (apt-get install --no-install-recommends -y
      apache2 && a2enmod proxy_fcgi &&     sed -i -e 's#^export \([^=]\+\)=\(.*\)$#export
      \1=${\1:=\2}#' /etc/apache2/envvars &&     sed -i -e 's#\(listen *= *\).*$#\1/var/run/php-fpm/fpm.sock#g'         -e
      's#^\(user *= *\).*$#\1${APACHE_RUN_USER}#g'         -e 's#^\(group *= *\).*$#\1${APACHE_RUN_GROUP}#g'         -e
      's#^\(pm.max_children *= *\).*$#\1${PHPFPM_PM_MAX_CHILDREN}#g'         -e 's#^\(pm.start_servers
      *= *\).*$#\1${PHPFPM_PM_START_SERVERS}#g'         -e 's#^\(pm.min_spare_servers
      *= *\).*$#\1${PHPFPM_PM_MIN_SPARE_SERVERS}#g'         -e 's#^\(pm.max_spare_servers
      *= *\).*$#\1${PHPFPM_PM_MAX_SPARE_SERVERS}#g'         /usr/local/etc/php-fpm.d/*.conf)
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - image-files/
    - /
  - CmdLine:
    - a2enmod headers rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - a2disconf serve-cgi-bin
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod remoteip
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/%h/%a/g' /etc/apache2/apache2.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: APACHE_REMOTE_IP_HEADER
      Value: X-Forwarded-For
    Name: env
  - Env:
    - Key: APACHE_REMOTE_IP_TRUSTED_PROXY
      Value: 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
    Name: env
  - Env:
    - Key: APACHE_REMOTE_IP_INTERNAL_PROXY
      Value: 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
    Name: env
  - CmdLine:
    - a2enconf remoteip
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/^ServerTokens OS$/ServerTokens Prod/g' /etc/apache2/conf-available/security.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: APACHE_SERVER_NAME
      Value: __default__
    Name: env
  - CmdLine:
    - a2enconf servername
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e 's/vhost_combined/combined/g' -e 's/other_vhosts_access/access/g'
      /etc/apache2/conf-available/other-vhosts-access-log.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: APACHE_SYSLOG_PORT
      Value: "514"
    Name: env
  - Env:
    - Key: APACHE_SYSLOG_PROGNAME
      Value: httpd
    Name: env
  - CmdLine:
    - mkdir -p /var/lock/apache2 /var/run/php-fpm &&     chgrp -R 0 /run /var/lock/apache2
      /var/log/apache2 /etc/service /var/run/php-fpm &&     chmod -R g=u /etc/passwd
      /run /var/lock/apache2 /var/log/apache2 /etc/service
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /var/log/apache2/*.log &&     ln -s /proc/self/fd/2 /var/log/apache2/error.log
      &&     ln -s /proc/self/fd/1 /var/log/apache2/access.log
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e 's/80/8080/g' -e 's/443/8443/g' /etc/apache2/ports.conf
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
    - "8443"
  - Env:
    - Key: SUPERCRONIC_VERSION
      Value: 0.1.9
    Name: env
  - Env:
    - Key: SUPERCRONIC_SHA1SUM
      Value: 5ddf8ea26b56d4a7ff6faecdd8966610d5cb9d85
    Name: env
  - CmdLine:
    - curl -sSL "https://github.com/aptible/supercronic/releases/download/v${SUPERCRONIC_VERSION}/supercronic-linux-amd64"
      > "/usr/local/bin/supercronic" &&  echo "${SUPERCRONIC_SHA1SUM}" "/usr/local/bin/supercronic"
      | sha1sum -c - &&  chmod a+rx "/usr/local/bin/supercronic"
    Name: run
    PrependShell: true
  - Env:
    - Key: DOC_GENERATE
      Value: "yes"
    Name: env
  - Env:
    - Key: DOC_DIR_SRC
      Value: docs
    Name: env
  - Env:
    - Key: DOC_DIR_DST
      Value: doc
    Name: env
  - CmdLine:
    - pecl channel-update pecl.php.net
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends libonig$([ $(echo "${PHP_VERSION}"
      | cut -f1 -d.) -gt 6 ] && echo "5" || echo "4") libonig-dev &&    docker-php-ext-configure
      gd $([ $(echo "${PHP_VERSION}" | cut -f1 -d.) -gt 6 -a $(echo "${PHP_VERSION}"
      | cut -f2 -d.) -gt 3  ] && echo "--with-freetype --with-jpeg" || echo "--with-freetype-dir=/usr/include/
      --with-png-dir=/usr/include/ --with-jpeg-dir=/usr/include/")
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure bcmath &&     docker-php-ext-install         soap         zip         curl         bcmath         exif         gd         iconv         intl         mbstring         opcache         pdo_mysql         pdo_pgsql
      &&     apt-get remove -y libonig-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "\n" | pecl install imagick &&     docker-php-ext-enable imagick
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends libssl1.1 libssl-dev &&    pecl uninstall
      mongodb &&     pecl install mongodb &&     apt-get remove -y libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 700         /usr/local/bin/docker-php-entrypoint         /usr/local/bin/composer
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php --         --filename=composer.phar         --install-dir=/usr/local/bin
      &&     chmod a+rx "/usr/local/bin/composer"
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require --optimize-autoloader "hirak/prestissimo" &&     composer
      global dumpautoload --optimize &&     composer clear-cache
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install redis$([ $(echo "${PHP_VERSION}" | cut -f1 -d.) -lt 6 ] && echo
      "-4.3.0") &&     docker-php-ext-enable redis
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends libyaml-dev libyaml-0-2 &&     pecl
      install yaml$([ $(echo "${PHP_VERSION}" | cut -f1 -d.) -lt 6 ] && echo "-1.3.2")
      &&     docker-php-ext-enable yaml &&     apt-get remove -y libyaml-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends libgmp-dev libgmpxx4ldbl &&     ln
      -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h &&     docker-php-ext-install
      gmp &&     apt-get remove -y libgmp-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends git unzip libgearman-dev libgearman$([
      $(echo "${PHP_VERSION}" | cut -f1 -d.) -gt 6 ] && echo "8" || echo "7") &&     [
      $(echo "${PHP_VERSION}" | cut -f1 -d.) -gt 6 ] && (git clone https://github.com/wcgallego/pecl-gearman.git
      && cd pecl-gearman && phpize && ./configure && make && make install && cd -
      && rm -rf pecl-gearman) || pecl install gearman &&     apt-get remove -y libgearman-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install pcntl
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_ENABLE_XDEBUG
      Value: "0"
    Name: env
  - CmdLine:
    - pecl install xdebug$([ $(echo "${PHP_VERSION}" | cut -f1 -d.) -lt 6 ] && echo
      "-2.5.5")
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install sockets
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install igbinary$([ $(echo "${PHP_VERSION}" | cut -f1 -d.) -lt 6 ] && echo
      "-2.0.8") &&     docker-php-ext-enable igbinary &&     echo "session.serialize_handler=igbinary"
      >> /usr/local/etc/php/conf.d/docker-php-ext-igbinary.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install apcu$([ $(echo "${PHP_VERSION}" | cut -f1 -d.) -lt 6 ] && echo
      "-4.0.11") &&     docker-php-ext-enable apcu &&     echo "apc.serializer=igbinary"
      >> /usr/local/etc/php/conf.d/docker-php-ext-igbinary.ini &&     echo "apc.enable_cli=1"
      >> /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod g=u /usr/local/etc/php/conf.d/ &&     rm -f /usr/local/etc/php/conf.d/docker-php-ext-exif.ini     /usr/local/etc/php/conf.d/docker-php-ext-gd.ini     /usr/local/etc/php/conf.d/docker-php-ext-gearman.ini     /usr/local/etc/php/conf.d/docker-php-ext-imagick.ini     /usr/local/etc/php/conf.d/docker-php-ext-mongodb.ini     /usr/local/etc/php/conf.d/docker-php-ext-pcntl.ini     /usr/local/etc/php/conf.d/docker-php-ext-pdo_mysql.ini     /usr/local/etc/php/conf.d/docker-php-ext-pdo_pgsql.ini     /usr/local/etc/php/conf.d/docker-php-ext-soap.ini     /usr/local/etc/php/conf.d/docker-php-ext-sockets.ini     /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     /usr/local/etc/php/conf.d/docker-php-ext-zip.ini
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_CGI_FIX_PATHINFO
      Value: "0"
    Name: env
  - Env:
    - Key: PHP_UPLOAD_MAX_FILESIZE
      Value: 2m
    Name: env
  - Env:
    - Key: PHP_POST_MAX_SIZE
      Value: 8m
    Name: env
  - Env:
    - Key: PHP_MAX_EXECUTION_TIME
      Value: "30"
    Name: env
  - Env:
    - Key: PHP_MEMORY_LIMIT
      Value: 64m
    Name: env
  - Env:
    - Key: PHP_REALPATH_CACHE_SIZE
      Value: 256k
    Name: env
  - Env:
    - Key: PHP_REALPATH_CACHE_TTL
      Value: "3600"
    Name: env
  - Env:
    - Key: PHP_DEFAULT_SOCKET_TIMEOUT
      Value: "60"
    Name: env
  - Env:
    - Key: PHP_OPCACHE_ENABLE
      Value: "1"
    Name: env
  - Env:
    - Key: PHP_OPCACHE_ENABLE_CLI
      Value: "1"
    Name: env
  - Env:
    - Key: PHP_OPCACHE_MEMORY
      Value: "64"
    Name: env
  - Env:
    - Key: PHP_OPCACHE_VALIDATE_TIMESTAMP
      Value: "0"
    Name: env
  - Env:
    - Key: PHP_OPCACHE_REVALIDATE_FREQ
      Value: "600"
    Name: env
  - CmdLine:
    - apt-get autoremove -y &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${APP_DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+rx /docker-bin/*.sh &&     /docker-bin/docker-build.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${APP_DIR}
  - Name: user
    User: ${USER_ID}
  - CmdLine:
    - /docker-bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: php:${PHP_VERSION}-${PHP_MOD}
  Name: ""
  Platform: ""
  SourceCode: FROM php:${PHP_VERSION}-${PHP_MOD}
