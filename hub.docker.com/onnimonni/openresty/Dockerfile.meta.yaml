MetaArgs: null
Stages:
- BaseName: onnimonni/alpine-base
  Commands:
  - Maintainer: Onni Hakala <onni.hakala@geniem.com>
    Name: maintainer
  - Key: NGX_MOD_CACHE_PURGE_VERSION
    Name: arg
    Value: '"2.3"'
  - Key: RESTY_VERSION
    Name: arg
    Value: '"1.11.2.1"'
  - Key: RESTY_OPENSSL_VERSION
    Name: arg
    Value: '"1.0.2h"'
  - Key: RESTY_PCRE_VERSION
    Name: arg
    Value: '"8.39"'
  - Key: RESTY_CONFIG_OPTIONS
    Name: arg
    Value: '"    --with-http_addition_module     --with-http_auth_request_module     --with-http_flv_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_mp4_module     --with-http_random_index_module     --with-http_realip_module     --with-http_secure_link_module     --with-http_slice_module     --with-http_ssl_module     --with-http_stub_status_module     --with-http_sub_module     --with-http_v2_module     --with-http_geoip_module=dynamic     --with-http_image_filter_module=dynamic     --with-http_xslt_module=dynamic     --with-file-aio     --with-ipv6     --with-md5-asm     --with-pcre-jit     --with-sha1-asm     --with-stream     --with-stream_ssl_module     --with-threads     --without-http_autoindex_module     --without-http_browser_module     --without-http_userid_module     --without-mail_pop3_module     --without-mail_imap_module     --without-mail_smtp_module     --without-http_split_clients_module     --without-http_uwsgi_module     --without-http_scgi_module     --without-http_referer_module      --user=nginx      --group=nginx     --sbin-path=/usr/sbin     --modules-path=/usr/lib/nginx     --prefix=/etc/nginx     --conf-path=/etc/nginx/nginx.conf     --http-log-path=/var/log/nginx/access.log     --error-log-path=/var/log/nginx/error.log     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx/nginx.lock     --http-fastcgi-temp-path=/tmp/nginx/fastcgi     --http-proxy-temp-path=/tmp/nginx/proxy     --http-client-body-temp-path=/tmp/nginx/client_body     "'
  - Key: _RESTY_CONFIG_DEPS
    Name: arg
    Value: '"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}"'
  - CmdLine:
    - apk add --no-cache --virtual .build-deps         build-base         openssl         gd-dev         geoip-dev         libxslt-dev         linux-headers         make         perl-dev         readline-dev         zlib-dev     &&
      apk add --no-cache         gd         geoip         libgcc         libxslt         zlib     &&
      cd /tmp     && wget -O- https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz
      | tar -zx     && wget -O- https://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz
      | tar -zx     && wget -O- https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz
      | tar -zx     && wget https://github.com/FRiCKLE/ngx_cache_purge/archive/${NGX_MOD_CACHE_PURGE_VERSION}.tar.gz
      -O ngx_cache_purge-${NGX_MOD_CACHE_PURGE_VERSION}.tar.gz     && validate_sha256sum
      ngx_cache_purge-${NGX_MOD_CACHE_PURGE_VERSION}.tar.gz cb7d5f22919c613f1f03341a1aeb960965269302e9eb23425ccaabd2f5dcbbec     &&
      tar -xzf ngx_cache_purge-${NGX_MOD_CACHE_PURGE_VERSION}.tar.gz     && readonly
      NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1)     && echo "using
      up to $NPROC threads"     && cd /tmp/openresty-${RESTY_VERSION}     && ./configure
      -j${NPROC} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS}     && make -j${NPROC}     &&
      make -j${NPROC} install     && rm /etc/nginx/*.default     && rm -rf /tmp/*     &&
      apk del .build-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/nginx/     && ln -sf /usr/lib/nginx /etc/nginx/modules     && addgroup
      -S nginx -g 8889     && adduser -S -G nginx -u 8888 nginx     && ln -sf /dev/stdout
      /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Env:
    - Key: PORT
      Value: "8080"
    - Key: WEB_ROOT
      Value: '"/var/www/project/web"'
    - Key: NGINX_INCLUDE_DIR
      Value: '"/var/www/project/nginx"'
    - Key: NGINX_MAX_BODY_SIZE
      Value: '"5M"'
    - Key: NGINX_TIMEOUT
      Value: '"30"'
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - rootfs
    - /
  From:
    Image: onnimonni/alpine-base
  Name: ""
  Platform: ""
  SourceCode: FROM onnimonni/alpine-base
