MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Max Kratz <account@maxkratz.com>"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update -q &&     apt-get upgrade -yq &&     apt-get install -yq wget
      curl git build-essential vim sudo lsb-release locales bash-completion tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -d /home/ubuntu ubuntu -p $(perl -e 'print crypt("ubuntu", "salt"),"\n"')
      &&     echo "ubuntu ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Name: user
    User: ubuntu
  - Name: workdir
    Path: /home/ubuntu
  - Env:
    - Key: HOME
      Value: /home/ubuntu
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US:en
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - sudo apt install -y curl gnupg lsb-release
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Ls https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | sudo
      apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo sh -c 'echo "deb [arch=amd64,arm64] http://packages.ros.org/ros2/ubuntu
      $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y ros-dashing-desktop
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y python3-argcomplete python3-colcon-common-extensions
    Name: run
    PrependShell: true
  - CmdLine:
    - 'sudo apt install -y python-rosdep python3-vcstool # https://index.ros.org/doc/ros2/Installation/Linux-Development-Setup/'
    Name: run
    PrependShell: true
  - CmdLine:
    - grep -F "source /opt/ros/dashing/setup.bash" ~/.bashrc || echo "source /opt/ros/dashing/setup.bash"
      >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - grep -F ". /opt/ros/dashing/setup.bash" ~/.bashrc || echo ". /opt/ros/dashing/setup.bash"
      >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - set +u
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "source /opt/ros/dashing/setup.bash"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Success installing ROS2 dashing"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/ros/catkin.git
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get -y install cmake python-catkin-pkg python-empy python-nose python-setuptools
      libgtest-dev build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - cd catkin/ && mkdir -p build && cd build && cmake -DCMAKE_BUILD_TYPE=Release
      ../
    Name: run
    PrependShell: true
  - CmdLine:
    - cd catkin/build && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd catkin/build && sudo make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c ". /usr/local/setup.bash"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c ". .bashrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - grep -F "source /usr/local/setup.bash" ~/.bashrc || echo "source /usr/local/setup.bash"
      >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - grep -F ". /usr/local/setup.bash" ~/.bashrc || echo ". /usr/local/setup.bash"
      >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/jbeder/yaml-cpp.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd yaml-cpp/ && mkdir -p build && cd build && cmake DCMAKE_BUILD_TYPE=Release
      ../
    Name: run
    PrependShell: true
  - CmdLine:
    - cd yaml-cpp/build && sudo make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c ". /usr/local/setup.bash"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c ". .bashrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - grep -F "source /usr/local/setup.bash" ~/.bashrc || echo "source /usr/local/setup.bash"
      >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - grep -F ". /usr/local/setup.bash" ~/.bashrc || echo ". /usr/local/setup.bash"
      >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y doxygen
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y python3 python3-pip libboost-dev lcov
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo pip3 install colcon-lcov-result
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get -y install cmake python-catkin-pkg python-empy python-nose python-setuptools
      libgtest-dev build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo pip3 install cpplint
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install libgtest-dev cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - 'cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make # build googletest-suite'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'cd /usr/src/gtest && sudo cp *.a /usr/lib # copy build libraries to /usr/lib'
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
