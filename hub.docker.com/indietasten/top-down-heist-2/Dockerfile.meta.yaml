MetaArgs: null
Stages:
- As: build
  BaseName: microsoft/dotnet:2.2-sdk
  Commands:
  - Env:
    - Key: NODE_VERSION
      Value: 8.11.2
    Name: env
  - Env:
    - Key: NODE_DOWNLOAD_URL
      Value: https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz
    Name: env
  - Env:
    - Key: NODE_DOWNLOAD_SHA
      Value: 67dc4c06a58d4b23c5378325ad7e0a2ec482b48cea802252b99ebe8538a3ab79
    Name: env
  - CmdLine:
    - curl -SL "$NODE_DOWNLOAD_URL" --output nodejs.tar.gz      && echo "$NODE_DOWNLOAD_SHA
      nodejs.tar.gz" | sha256sum -c -      && tar -xzf "nodejs.tar.gz" -C /usr/local
      --strip-components=1      && rm nodejs.tar.gz      && ln -s /usr/local/bin/node
      /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '*.csproj'
    - ./
  - CmdLine:
    - dotnet restore
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ./
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - npm run build
    Name: run
    PrependShell: true
  - CmdLine:
    - dotnet publish -c Release -o out
    Name: run
    PrependShell: true
  From:
    Image: microsoft/dotnet:2.2-sdk
  Name: build
  Platform: ""
  SourceCode: FROM microsoft/dotnet:2.2-sdk AS build
- As: runtime
  BaseName: microsoft/dotnet:2.2-aspnetcore-runtime
  Commands:
  - Name: workdir
    Path: /app
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /app/out
    - .
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - dotnet
    - TopDownHeist.dll
    Name: entrypoint
    PrependShell: false
  From:
    Image: microsoft/dotnet:2.2-aspnetcore-runtime
  Name: runtime
  Platform: ""
  SourceCode: FROM microsoft/dotnet:2.2-aspnetcore-runtime AS runtime
