MetaArgs: null
Stages:
- BaseName: ubuntu:19.10
  Commands:
  - CmdLine:
    - apt-get update &&     apt-get full-upgrade &&     apt-get install -y apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends     gnupg2
      curl ca-certificates &&     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
      | apt-key add - &&     echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64
      /" > /etc/apt/sources.list.d/cuda.list &&     echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64
      /" > /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get purge --autoremove
      -y curl &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_VERSION
      Value: 10.0.130
    Name: env
  - Env:
    - Key: CUDA_PART_VERSION
      Value: "10.0"
    Name: env
  - Env:
    - Key: CUDA_DASH_VERSION
      Value: 10-0
    Name: env
  - Env:
    - Key: CUDA_PKG_VERSION
      Value: $CUDA_DASH_VERSION=$CUDA_VERSION-1
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends     cuda-cudart-$CUDA_PKG_VERSION     cuda-compat-$CUDA_DASH_VERSION
      &&     ln -s cuda-$CUDA_PART_VERSION /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64"
      >> /etc/ld.so.conf.d/nvidia.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/nvidia/lib:/usr/local/nvidia/lib64
    Name: env
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: compute,utility
    Name: env
  - Env:
    - Key: NVIDIA_REQUIRE_CUDA
      Value: '"cuda>=10.0 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=410,driver<411"'
    Name: env
  - Env:
    - Key: NCCL_VERSION
      Value: 2.4.8
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends     cuda-libraries-$CUDA_PKG_VERSION     cuda-nvtx-$CUDA_PKG_VERSION     libnccl2=$NCCL_VERSION-1+cuda$CUDA_PART_VERSION
      &&     apt-mark hold libnccl2 &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDNN_VERSION
      Value: 7.6.4.38
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends     libcudnn7=$CUDNN_VERSION-1+cuda$CUDA_PART_VERSION     &&     apt-mark
      hold libcudnn7 &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     gcc-multilib     tmux     wget     git
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install     numpy     pandas     tqdm     scipy     scikit-learn     tensorflow-gpu
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --no-cache-dir     torch     torchvision
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install     nltk     ipython     jupyter     matplotlib
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     gdb     qemu     qemu-system
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:19.10
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:19.10
