{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "onosproject/onos:1.3",
      "SourceCode": "FROM onosproject/onos:1.3",
      "Platform": "",
      "From": {
        "Image": "onosproject/onos:1.3"
      },
      "Commands": [
        {
          "Maintainer": "Ciena - BluePlanet \u003cblueplant@ciena.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y curl git build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /bp2/save \u0026\u0026     tar -P -zcf /bp2/save/clean.tgz /root/onos"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local"
        },
        {
          "CmdLine": [
            "curl https://storage.googleapis.com/golang/go1.5.1.linux-amd64.tar.gz | tar xzf - -C /usr/local \u0026\u0026     ln -s /usr/local/go/bin/go /usr/local/bin/go"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/build \u0026\u0026     git clone http://github.com/ciena/onosms /root/build/onosms"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/build/onosms"
        },
        {
          "CmdLine": [
            "GOPATH=/root/build/onosms go get github.com/tools/godep \u0026\u0026     GOPATH=/root/build/onosms ./bin/godep restore \u0026\u0026     make bp2/hooks/onos-hook bp2/hooks/onos-wrapper \u0026\u0026     mkdir -p /bp2/hooks \u0026\u0026     cp bp2/hooks/onos-hook /bp2/hooks/onos-hook \u0026\u0026     cp bp2/hooks/onos-wrapper /bp2/hooks/onos-wrapper"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/onos"
        },
        {
          "Env": [
            {
              "Key": "NBI_onos_port",
              "Value": "8181"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NBI_onos_type",
              "Value": "http"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NBI_onos_publish",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NBI_onosssh_port",
              "Value": "8101"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NBI_onosssh_type",
              "Value": "tcp"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NBI_onosshh_publish",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ONOS_APPS",
              "Value": "drivers,openflow,proxyarp,mobility,fwd"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -s /bp2/hooks/onos-hook /bp2/hooks/heartbeat \u0026\u0026     ln -s /bp2/hooks/onos-hook /bp2/hooks/peer-update \u0026\u0026     ln -s /bp2/hooks/onos-hook /bp2/hooks/peer-status"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /usr/local/bin/go \u0026\u0026     rm -rf /usr/local/go \u0026\u0026     rm -rf /root/build \u0026\u0026     apt-get remove -y git build-essential \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get purge -y \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BP2HOOK_heartbeat",
              "Value": "/bp2/hooks/heartbeat"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BP2HOOK_peer-update",
              "Value": "/bp2/hooks/peer-update"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BP2HOOK_peer-status",
              "Value": "/bp2/hooks/peer-status"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/bp2/hooks/onos-wrapper",
            "./bin/onos-service"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}