{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Ethan Gregory Dodge \u003cegd@truthandtransparency.org\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install -y gnupg     \u0026\u0026 echo \"deb http://ppa.launchpad.net/micahflee/ppa/ubuntu bionic main\" | tee -a /etc/apt/sources.list.d/pdf-redact-tools.list     \u0026\u0026 echo \"deb-src http://ppa.launchpad.net/micahflee/ppa/ubuntu bionic main\" | tee -a /etc/apt/sources.list.d/pdf-redact-tools.list     \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7D158F33     \u0026\u0026 apt update \u0026\u0026 apt install -y     pdf-redact-tools     ocrmypdf     $(apt-cache search tesseract-ocr | while read line ; do echo -n $line | cut -f 1 -d ' '; done)     git gcc     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install -y     git gcc libjpeg-dev     zlib1g-dev build-essential     \u0026\u0026 git clone https://github.com/qpdf/qpdf.git /root/qpdf     \u0026\u0026 cd /root/qpdf     \u0026\u0026 /bin/sh /root/qpdf/configure     \u0026\u0026 make --directory /root/qpdf     \u0026\u0026 make install --directory /root/qpdf     \u0026\u0026 rm -rf /root/qpdf     \u0026\u0026 apt purge -y git gcc     libjpeg-dev zlib1g-dev build-essential     \u0026\u0026 apt autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i '/PDF/c\\\u003cpolicy domain=\\\"module\\\" rights=\\\"read|write\\\" pattern=\\\"{PDF}\\\" /\u003e' /etc/ImageMagick-*/policy.xml     \u0026\u0026 sed -i '/memory/c\\\u003cpolicy domain=\\\"resource\\\" name=\\\"memory\\\" value=\\\"4GiB\\\"/\u003e' /etc/ImageMagick-*/policy.xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -r scrubber \u0026\u0026 useradd -r -g scrubber -G audio,video scrubber     \u0026\u0026 mkdir /home/scrubber \u0026\u0026 chown -R scrubber:scrubber /home/scrubber"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scrub.sh",
            "/usr/local/bin/scrub"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "common_functions.sh",
            "/home/scrubber/common_functions.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/scrub"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "scrubber"
        },
        {
          "CmdLine": [
            "/usr/local/bin/scrub"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}