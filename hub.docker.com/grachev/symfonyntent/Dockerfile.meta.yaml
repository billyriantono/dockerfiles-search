MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Key: APT_MIRROR
    Name: arg
    Value: deb.debian.org
  - CmdLine:
    - sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - keys/launchpad-ppa-zfs.asc
    - /go/src/github.com/docker/docker/keys/
  - CmdLine:
    - apt-key add /go/src/github.com/docker/docker/keys/launchpad-ppa-zfs.asc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo deb http://ppa.launchpad.net/zfs-native/stable/ubuntu trusty main > /etc/apt/sources.list.d/zfs.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \tapparmor \tapt-utils \taufs-tools \tautomake
      \tbash-completion \tbinutils-mingw-w64 \tbsdmainutils \tbtrfs-tools \tbuild-essential
      \tclang \tcmake \tcreaterepo \tcurl \tdpkg-sig \tgcc-mingw-w64 \tgit \tiptables
      \tjq \tless \tlibapparmor-dev \tlibcap-dev \tlibltdl-dev \tlibnl-3-dev \tlibprotobuf-c0-dev
      \tlibprotobuf-dev \tlibsystemd-journal-dev \tlibtool \tlibzfs-dev \tmercurial
      \tnet-tools \tpkg-config \tprotobuf-compiler \tprotobuf-c-compiler \tpython-dev
      \tpython-mock \tpython-pip \tpython-websocket \ttar \tubuntu-zfs \tvim \tvim-common
      \txfsprogs \tzip \t--no-install-recommends \t&& pip install awscli==1.10.15"
    Name: run
    PrependShell: true
  - Env:
    - Key: LVM2_VERSION
      Value: 2.02.103
    Name: env
  - CmdLine:
    - "mkdir -p /usr/local/lvm2 \t&& curl -fsSL \"https://mirrors.kernel.org/sourceware/lvm2/LVM2.${LVM2_VERSION}.tgz\"
      \t\t| tar -xzC /usr/local/lvm2 --strip-components=1"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/lvm2 \t&& ./configure \t\t--build=\"$(gcc -print-multiarch)\"
      \t\t--enable-static_link \t&& make device-mapper \t&& make install_device-mapper"
    Name: run
    PrependShell: true
  - Env:
    - Key: OSX_SDK
      Value: MacOSX10.11.sdk
    Name: env
  - Env:
    - Key: OSX_CROSS_COMMIT
      Value: a9317c18a3a457ca0a657f08cc4d0d43c6cf8953
    Name: env
  - CmdLine:
    - "set -x \t&& export OSXCROSS_PATH=\"/osxcross\" \t&& git clone https://github.com/tpoechtrager/osxcross.git
      $OSXCROSS_PATH \t&& ( cd $OSXCROSS_PATH && git checkout -q $OSX_CROSS_COMMIT)
      \t&& curl -sSL https://s3.dockerproject.org/darwin/v2/${OSX_SDK}.tar.xz -o \"${OSXCROSS_PATH}/tarballs/${OSX_SDK}.tar.xz\"
      \t&& UNATTENDED=yes OSX_VERSION_MIN=10.6 ${OSXCROSS_PATH}/build.sh"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /osxcross/target/bin:$PATH
    Name: env
  - Env:
    - Key: SECCOMP_VERSION
      Value: 2.3.1
    Name: env
  - CmdLine:
    - "set -x \t&& export SECCOMP_PATH=\"$(mktemp -d)\" \t&& curl -fsSL \"https://github.com/seccomp/libseccomp/releases/download/v${SECCOMP_VERSION}/libseccomp-${SECCOMP_VERSION}.tar.gz\"
      \t\t| tar -xzC \"$SECCOMP_PATH\" --strip-components=1 \t&& ( \t\tcd \"$SECCOMP_PATH\"
      \t\t&& ./configure --prefix=/usr/local \t\t&& make \t\t&& make install \t\t&&
      ldconfig \t) \t&& rm -rf \"$SECCOMP_PATH\""
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_VERSION
      Value: 1.7.5
    Name: env
  - CmdLine:
    - "curl -fsSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" \t|
      tar -xzC /usr/local"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /go/bin:/usr/local/go/bin:$PATH
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: DOCKER_CROSSPLATFORMS
      Value: "linux/386 linux/arm \tdarwin/amd64 \tfreebsd/amd64 freebsd/386 freebsd/arm
        \twindows/amd64 windows/386 \tsolaris/amd64"
    Name: env
  - Env:
    - Key: GO_TOOLS_COMMIT
      Value: 823804e1ae08dbb14eb807afc7db9993bc9e3cc3
    Name: env
  - CmdLine:
    - "git clone https://github.com/golang/tools.git /go/src/golang.org/x/tools \t&&
      (cd /go/src/golang.org/x/tools && git checkout -q $GO_TOOLS_COMMIT)"
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_LINT_COMMIT
      Value: 32a87160691b3c96046c0c678fe57c5bef761456
    Name: env
  - CmdLine:
    - "git clone https://github.com/golang/lint.git /go/src/github.com/golang/lint
      \t&& (cd /go/src/github.com/golang/lint && git checkout -q $GO_LINT_COMMIT)
      \t&& go install -v github.com/golang/lint/golint"
    Name: run
    PrependShell: true
  - Env:
    - Key: CRIU_VERSION
      Value: "2.9"
    Name: env
  - CmdLine:
    - "mkdir -p /usr/src/criu \t&& curl -sSL https://github.com/xemul/criu/archive/v${CRIU_VERSION}.tar.gz
      | tar -v -C /usr/src/criu/ -xz --strip-components=1 \t&& cd /usr/src/criu \t&&
      make \t&& make install-criu"
    Name: run
    PrependShell: true
  - Env:
    - Key: REGISTRY_COMMIT_SCHEMA1
      Value: ec87e9b6971d831f0eff752ddb54fb64693e51cd
    Name: env
  - Env:
    - Key: REGISTRY_COMMIT
      Value: 47a064d4195a9b56133891bbb13620c3ac83a827
    Name: env
  - CmdLine:
    - "set -x \t&& export GOPATH=\"$(mktemp -d)\" \t&& git clone https://github.com/docker/distribution.git
      \"$GOPATH/src/github.com/docker/distribution\" \t&& (cd \"$GOPATH/src/github.com/docker/distribution\"
      && git checkout -q \"$REGISTRY_COMMIT\") \t&& GOPATH=\"$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH\"
      \t\tgo build -o /usr/local/bin/registry-v2 github.com/docker/distribution/cmd/registry
      \t&& (cd \"$GOPATH/src/github.com/docker/distribution\" && git checkout -q \"$REGISTRY_COMMIT_SCHEMA1\")
      \t&& GOPATH=\"$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH\"
      \t\tgo build -o /usr/local/bin/registry-v2-schema1 github.com/docker/distribution/cmd/registry
      \t&& rm -rf \"$GOPATH\""
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTARY_VERSION
      Value: v0.5.0
    Name: env
  - CmdLine:
    - "set -x \t&& export GOPATH=\"$(mktemp -d)\" \t&& git clone https://github.com/docker/notary.git
      \"$GOPATH/src/github.com/docker/notary\" \t&& (cd \"$GOPATH/src/github.com/docker/notary\"
      && git checkout -q \"$NOTARY_VERSION\") \t&& GOPATH=\"$GOPATH/src/github.com/docker/notary/vendor:$GOPATH\"
      \t\tgo build -o /usr/local/bin/notary-server github.com/docker/notary/cmd/notary-server
      \t&& GOPATH=\"$GOPATH/src/github.com/docker/notary/vendor:$GOPATH\" \t\tgo build
      -o /usr/local/bin/notary github.com/docker/notary/cmd/notary \t&& rm -rf \"$GOPATH\""
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_PY_COMMIT
      Value: e2655f658408f9ad1f62abdef3eb6ed43c0cf324
    Name: env
  - CmdLine:
    - "git clone https://github.com/docker/docker-py.git /docker-py \t&& cd /docker-py
      \t&& git checkout -q $DOCKER_PY_COMMIT \t&& pip install -r test-requirements.txt"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install yamllint==1.5.0
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_SWAGGER_COMMIT
      Value: c28258affb0b6251755d92489ef685af8d4ff3eb
    Name: env
  - CmdLine:
    - "git clone https://github.com/go-swagger/go-swagger.git /go/src/github.com/go-swagger/go-swagger
      \t&& (cd /go/src/github.com/go-swagger/go-swagger && git checkout -q $GO_SWAGGER_COMMIT)
      \t&& go install -v github.com/go-swagger/go-swagger/cmd/swagger"
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.email 'docker-dummy@example.com'
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r docker
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --create-home --gid docker unprivilegeduser
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Name: workdir
    Path: /go/src/github.com/docker/docker
  - Env:
    - Key: DOCKER_BUILDTAGS
      Value: apparmor pkcs11 seccomp selinux
    Name: env
  - CmdLine:
    - ln -sfv $PWD/.bashrc ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source $PWD/hack/make/.integration-test-helpers" >> /etc/bash.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sv $PWD/contrib/completion/bash/docker /etc/bash_completion.d/docker
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - contrib/download-frozen-image-v2.sh
    - /go/src/github.com/docker/docker/contrib/
  - CmdLine:
    - "./contrib/download-frozen-image-v2.sh /docker-frozen-images \tbuildpack-deps:jessie@sha256:25785f89240fbcdd8a74bdaf30dd5599a9523882c6dfc567f2e9ef7cf6f79db6
      \tbusybox:latest@sha256:e4f93f6ed15a0cdd342f5aae387886fba0ab98af0a102da6276eaf24d6e6ade0
      \tdebian:jessie@sha256:f968f10b4b523737e253a97eac59b0d1420b5c19b69928d35801a6373ffe330e
      \thello-world:latest@sha256:8be990ef2aeb16dbcb9271ddfe2610fa6658d13f6dfb8bc72074cc1ca36966a7"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hack/dockerfile/binaries-commits
    - /tmp/binaries-commits
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hack/dockerfile/install-binaries.sh
    - /tmp/install-binaries.sh
  - CmdLine:
    - /tmp/install-binaries.sh tomlv vndr runc containerd tini proxy bindata
    Name: run
    PrependShell: true
  - CmdLine:
    - hack/dind
    Name: entrypoint
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/github.com/docker/docker
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
