{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Mikhail Menshenin \u003cgreggsoft@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y apache2 libapache2-mod-wsgi curl libffi-dev python-cairo python-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://bootstrap.pypa.io/get-pip.py \u003e /tmp/get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python /tmp/get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install Django\u003e=1.4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install simplejson==2.1.6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install django-tagging==0.3.6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pytz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pyparsing==1.5.7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install cairocffi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install whitenoise"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install https://github.com/graphite-project/ceres/tarball/master"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install https://github.com/graphite-project/whisper/tarball/master"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install https://github.com/graphite-project/carbon/tarball/master"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install https://github.com/graphite-project/graphite-web/tarball/master"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /opt/graphite/conf/carbon.conf.example /opt/graphite/conf/carbon.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /opt/graphite/conf/storage-schemas.conf.example /opt/graphite/conf/storage-schemas.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /opt/graphite/conf/graphite.wsgi.example /opt/graphite/conf/graphite.wsgi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /opt/graphite/webapp/graphite/local_settings.py.example /opt/graphite/conf/local_settings.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser --system --quiet --home /opt/graphite --no-create-home --shell /bin/false --force-badname --group --gecos \"Graphite User\" graphite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "apache-graphite.conf",
            "/etc/apache2/sites-available/graphite.conf"
          ]
        },
        {
          "CmdLine": [
            "a2dissite 000-default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2ensite graphite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2003"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/graphite/conf",
            "/opt/graphite/storage/whisper"
          ]
        },
        {
          "CmdLine": [
            "ln -sf /opt/graphite/conf/local_settings.py /opt/graphite/webapp/graphite/local_settings.py \u0026\u0026 PYTHONPATH=/opt/graphite/webapp django-admin.py syncdb --settings=graphite.settings --noinput \u0026\u0026 PYTHONPATH=/opt/graphite/webapp django-admin.py collectstatic --noinput --settings=graphite.settings \u0026\u0026 chown -R graphite:graphite /opt/graphite \u0026\u0026 apache2ctl start \u0026\u0026 /opt/graphite/bin/carbon-cache.py --debug start"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}