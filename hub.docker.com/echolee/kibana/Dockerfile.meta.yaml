MetaArgs: null
Stages:
- BaseName: node:6.9.0
  Commands:
  - CmdLine:
    - groupadd -r kibana && useradd -r -m -g kibana kibana
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y                 apt-transport-https                 ca-certificates                 wget                 libfontconfig                 libfreetype6         --no-install-recommends
      && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - set -x         && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)"         && wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc"         && export GNUPGHOME="$(mktemp -d)"         &&
      gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4         &&
      gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu         &&
      rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc         && chmod +x /usr/local/bin/gosu         &&
      gosu nobody true
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.9.0
    Name: env
  - CmdLine:
    - set -x         && wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini"         &&
      wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc"         &&
      export GNUPGHOME="$(mktemp -d)"         && gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5         && gpg --batch
      --verify /usr/local/bin/tini.asc /usr/local/bin/tini         && rm -r "$GNUPGHOME"
      /usr/local/bin/tini.asc         && chmod +x /usr/local/bin/tini         && tini
      -h
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex;         key='46095ACC8548582C1A2699A9D27D666CD88E42B4';         export
      GNUPGHOME="$(mktemp -d)";         gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key";         gpg --export "$key" > /etc/apt/trusted.gpg.d/elastic.gpg;         rm
      -r "$GNUPGHOME";         apt-key list
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x         && apt-get update         && apt-get install git -y         &&
      git config --global user.name "Echolee"         && git config --global user.email
      759768159@qq.com
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb https://artifacts.elastic.co/packages/5.x/apt stable main' > /etc/apt/sources.list.d/kibana.list
    Name: run
    PrependShell: true
  - Env:
    - Key: KIBANA_VERSION
      Value: 5.1.2
    Name: env
  - CmdLine:
    - 'set -x        && apt-get update        && apt-get install -y --no-install-recommends
      kibana=$KIBANA_VERSION        && rm -rf /var/lib/apt/lists/*                 &&
      sed -ri "s!^(\#\s*)?(server\.host:).*!\2 ''0.0.0.0''!" /etc/kibana/kibana.yml         &&
      grep -q "^server\.host: ''0.0.0.0''\$" /etc/kibana/kibana.yml                 &&
      sed -ri "s!^(\#\s*)?(elasticsearch\.url:).*!\2 ''http://elasticsearch:9200''!"
      /etc/kibana/kibana.yml         && grep -q "^elasticsearch\.url: ''http://elasticsearch:9200''\$"
      /etc/kibana/kibana.yml'
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& cd /usr \t&& git clone https://github.com/Echolee-L/kibana.git
      -b 5.1.2-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& rm -r /usr/share/kibana/src \t&& cp -r -f /usr/kibana/src/ /usr/share/kibana/src
      \t&& rm /usr/share/kibana/package.json \t&& cp -f /usr/kibana/package.json /usr/share/kibana/
      \t&& rm -r /usr/kibana \t&& rm -r /usr/share/kibana/node_modules \t&& cd /usr/share/kibana
      \t&& npm install"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& cd /usr/share/kibana \t&& bin/kibana-plugin install https://github.com/DeanF/health_metric_vis/releases/download/v0.3.5/health_metric_vis-5.1.2.zip
      \t&& chown -R kibana:kibana /usr/share/kibana/optimize/ \t&& cd /usr/share/kibana/plugins
      \t&& git clone https://github.com/Echolee-L/kibana-relational-filter.git \t&&
      git clone https://github.com/Echolee-L/kanban_vis.git \t&& git clone https://github.com/Echolee-L/kbn_c3js_vis.git
      \t&& cd kbn_c3js_vis \t&& npm install"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x         && apt-get -y autoremove         && apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/kibana/bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - Name: expose
    Ports:
    - "5601"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - kibana
    Name: cmd
    PrependShell: false
  From:
    Image: node:6.9.0
  Name: ""
  Platform: ""
  SourceCode: FROM node:6.9.0
