{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Maintainer": "Nikolay Glushchenko \u003cnick@nickalie.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y wget curl software-properties-common apt-transport-https \u0026\u0026     wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026     sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google.list' \u0026\u0026     wget -nc https://dl.winehq.org/wine-builds/winehq.key \u0026\u0026     apt-key add winehq.key \u0026\u0026     rm winehq.key \u0026\u0026     apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/ \u0026\u0026     curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \u0026\u0026     export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" \u0026\u0026     echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \u0026\u0026     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \u0026\u0026     curl -sL https://deb.nodesource.com/setup_10.x | bash - \u0026\u0026     apt-get install -y --no-install-recommends winehq-stable build-essential nodejs git-core ssh openjdk-8-jdk unzip google-cloud-sdk imagemagick yarn google-chrome-stable libpng-dev \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CHROME_BIN",
              "Value": "/usr/bin/google-chrome"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wineboot \u0026\u0026 wineboot -s"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $ANDROID_HOME \u0026\u0026     cd $ANDROID_HOME \u0026\u0026     wget https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -O tools.zip \u0026\u0026     unzip tools.zip \u0026\u0026     rm -f tools.zip \u0026\u0026     mkdir $ANDROID_HOME/licenses \u0026\u0026     echo 8933bad161af4178b1185d1a37fbf41ea5269c55 \u003e $ANDROID_HOME/licenses/android-sdk-license \u0026\u0026     echo d56f5187479451eabf01fb78af6dfcb131a6481e \u003e\u003e $ANDROID_HOME/licenses/android-sdk-license \u0026\u0026     echo 84831b9409646a918e30573bab4c9c91346d8abd \u003e $ANDROID_HOME/licenses/android-sdk-preview-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yes | sdkmanager --licenses"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sdkmanager --verbose \"build-tools;27.0.3\" \u0026\u0026     sdkmanager --verbose 'platform-tools' \u0026\u0026     sdkmanager --verbose 'platforms;android-28' \u0026\u0026     sdkmanager --verbose 'build-tools;28.0.3'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "/opt/gradle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "4.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -O gradle.zip \"https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\" \u0026\u0026 \tunzip gradle.zip \u0026\u0026 \trm gradle.zip \u0026\u0026 \tmv \"gradle-${GRADLE_VERSION}\" \"${GRADLE_HOME}/\" \u0026\u0026 \tln --symbolic \"${GRADLE_HOME}/bin/gradle\" /usr/bin/gradle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yarn global add cordova npx \u0026\u0026     cordova create hello com.example.hello HelloWorld \u0026\u0026     cd hello \u0026\u0026     cordova platform add --save android \u0026\u0026     cordova plugin add --save cordova-plugin-splashscreen \u0026\u0026     cordova plugin add --save cordova-plugin-fullscreen \u0026\u0026     cordova build \u0026\u0026     cd .. \u0026\u0026 rm -rf hello"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}