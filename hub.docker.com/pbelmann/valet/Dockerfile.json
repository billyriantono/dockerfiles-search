{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stable",
      "SourceCode": "FROM debian:stable",
      "Platform": "",
      "From": {
        "Image": "debian:stable"
      },
      "Commands": [
        {
          "Maintainer": "Nathan Olson \"https://github.com/nate-d-olson\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y -q                               git                             build-essential                             wget                             unzip                             zlib1g-dev                             libbz2-dev                             libncurses5-dev                             libarchive-dev                             libexpat1-dev                             openjdk-7-jdk                             openjdk-7-jre                             r-base                             r-base-dev                             r-recommended                             python-setuptools                             python-pip                             perl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'options(repos = list(CRAN = \"http://cran.rstudio.com/\"))' \u003e\u003e /etc/R/Rprofile.site"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://downloads.sourceforge.net/project/bowtie-bio/bowtie2/2.2.2/bowtie2-2.2.2-linux-x86_64.zip;    unzip bowtie2-2.2.2-linux-x86_64.zip \u0026\u0026 rm -rf bowtie2-2.2.2-linux-x86_64.zip;    ln -s `pwd`/bowtie*/bowtie* /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/samtools/samtools/releases/download/1.2/samtools-1.2.tar.bz2;    tar -xaf samtools-1.2.tar.bz2 \u0026\u0026 rm -rf samtools-1.2.tar.bz2 ;    cd samtools-1.2;    make \u0026\u0026 ln -f -s `pwd`/* /usr/local/bin/ \u0026\u0026 cd ../"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/arq5x/bedtools2/releases/download/v2.24.0/bedtools-2.24.0.tar.gz;    tar -xaf bedtools-2.24.0.tar.gz \u0026\u0026 rm -rf bedtools-2.24.0.tar.gz ;    cd bedtools2;    make \u0026\u0026 ln -f -s `pwd`/bin/* /usr/local/bin/ \u0026\u0026 cd ../"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y cpanminus"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cpanm -v JSON File::Basename File::Copy File::Spec File::Spec::Link Getopt::Long List::Util"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget ftp://ftp.sanger.ac.uk/pub/resources/software/reapr/Reapr_1.0.18.tar.gz;    tar -xaf Reapr_1.0.18.tar.gz \u0026\u0026 rm -rf Reapr_1.0.18.tar.gz;    cd Reapr_1.0.18;    ./install.sh \u0026\u0026 ln -f -s `pwd`/reapr /usr/local/bin/ \u0026\u0026 cd ../"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y -q python-numpy python-scipy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/cmhill/VALET.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s VALET/src/py/valet.py valet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x valet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONVERT",
              "Value": "https://github.com/bronze1man/yaml2json/raw/master/builds/linux_386/yaml2json"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/local/bin \u0026\u0026 wget ${CONVERT} \u0026\u0026 chmod 700 yaml2json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JQ",
              "Value": "http://stedolan.github.io/jq/download/linux64/jq"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/local/bin \u0026\u0026 wget --quiet ${JQ} \u0026\u0026 chmod 700 jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "VALIDATOR",
              "Value": "/bbx/validator/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BASE_URL",
              "Value": "https://s3-us-west-1.amazonaws.com/bioboxes-tools/validate-biobox-file"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "0.x.y"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${VALIDATOR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget       --quiet       --output-document -      ${BASE_URL}/${VERSION}/validate-biobox-file.tar.xz     | tar xJf -       --directory ${VALIDATOR}       --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${VALIDATOR}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "Taskfile",
            "/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "validate",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "schema.yaml",
            "/"
          ]
        },
        {
          "CmdLine": [
            "validate"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}