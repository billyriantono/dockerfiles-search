MetaArgs: null
Stages:
- BaseName: python:3-alpine3.7
  Commands:
  - Maintainer: Brian Loudin <loudinb@me.com>
    Name: maintainer
  - Env:
    - Key: PGADMIN_VERSION
      Value: "2.1"
    Name: env
  - Env:
    - Key: UID
      Value: "1000"
    Name: env
  - Env:
    - Key: GID
      Value: "50"
    Name: env
  - Env:
    - Key: SERVER_MODE
      Value: "false"
    Name: env
  - Env:
    - Key: SERVER_PORT
      Value: "5050"
    Name: env
  - Env:
    - Key: MAIL_SERVER
      Value: mail.example.tld
    Name: env
  - Env:
    - Key: MAIL_PORT
      Value: "465"
    Name: env
  - Env:
    - Key: MAIL_USE_SSL
      Value: "false"
    Name: env
  - Env:
    - Key: MAIL_USE_TLS
      Value: "false"
    Name: env
  - Env:
    - Key: MAIL_USERNAME
      Value: username
    Name: env
  - Env:
    - Key: MAIL_PASSWORD
      Value: password
    Name: env
  - Env:
    - Key: MAIL_DEBUG
      Value: "false"
    Name: env
  - Labels:
    - Key: org.label-schema.name
      Value: '"pgAdmin4"'
    - Key: org.label-schema.description
      Value: '"Docker image pgAdmin4"'
    - Key: org.label-schema.url
      Value: '"https://www.pgadmin.org"'
    - Key: org.label-schema.license
      Value: '"PostgreSQL"'
    - Key: org.label-schema.version
      Value: ${PGADMIN_VERSION}
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/Chorss/docker-pgAdmin4"'
    Name: label
  - CmdLine:
    - apk add --no-cache --virtual .run-deps postgresql postgresql-libs openssl shadow
      sudo su-exec bash sudo su-exec bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps gcc musl-dev openssl postgresql-dev  &&
      pip3 --no-cache-dir install https://ftp.postgresql.org/pub/pgadmin/pgadmin4/v${PGADMIN_VERSION}/pip/pgadmin4-${PGADMIN_VERSION}-py2.py3-none-any.whl  &&
      apk del .build-deps  && rm -rf /root/.cache
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup -g ${GID} -S pgadmin  && adduser -D -S -h /pgadmin -s /sbin/nologin
      -u ${UID} -G pgadmin pgadmin  && mkdir -p /data/config /data/logs /data/storage
      /data/sessions /data/misc  && chown -R ${UID}:${GID} /data  && rm -rf /root/.cache
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config_local.py
    - /usr/local/lib/python3.6/site-packages/pgadmin4/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint
    - disable_logfile_when_stdout.patch
    - /
  - CmdLine:
    - chmod 0775 /entrypoint
    Name: run
    PrependShell: true
  - CmdLine:
    - patch -p0 < /disable_logfile_when_stdout.patch
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Name: expose
    Ports:
    - ${SERVER_PORT}
  - CmdLine:
    - /entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - su-exec
    - pgadmin
    - python
    - /usr/local/lib/python3.6/site-packages/pgadmin4/pgAdmin4.py
    Name: cmd
    PrependShell: false
  From:
    Image: python:3-alpine3.7
  Name: ""
  Platform: ""
  SourceCode: FROM python:3-alpine3.7
