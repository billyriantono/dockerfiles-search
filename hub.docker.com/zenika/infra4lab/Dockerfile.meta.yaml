MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - CmdLine:
    - adduser -D ansible
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /work
  - CmdLine:
    - apk add --no-cache putty
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - .
  - CmdLine:
    - apk add --no-cache openssh python3 py3-jinja2 py3-yaml py3-cryptography py3-urllib3
      py3-docutils py3-dateutil rsync  && pip3 --no-cache-dir install --requirement
      requirements.txt  && ln -s python3 /usr/bin/python
    Name: run
    PrependShell: true
  - Env:
    - Key: BOTO_USE_ENDPOINT_HEURISTICS
      Value: "True"
    Name: env
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.12.10
    Name: env
  - CmdLine:
    - apk add --no-cache ca-certificates  && wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip  &&
      unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin/  &&
      rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - Name: volume
    Volumes:
    - /training
  - Name: user
    User: ansible
  - CmdLine:
    - ansible-playbook
    - --inventory
    - localhost
    - --inventory
    - /training/sessions/current/hosts.aws_ec2.yml
    - infra.yml
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
