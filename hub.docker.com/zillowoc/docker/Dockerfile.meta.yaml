MetaArgs: null
Stages:
- BaseName: docker:19.03-git
  Commands:
  - Env:
    - Key: BUILD_DEPS
      Value: '"py-pip alpine-sdk go nodejs-npm"'
    - Key: RUN_DEPS
      Value: '"groff less python bash socat nodejs curl jq"'
    - Key: GOPATH
      Value: /
    - Key: NOMAD_URL
      Value: '"https://releases.hashicorp.com/nomad/0.8.4/nomad_0.8.4_linux_amd64.zip"'
    - Key: CONSUL_URL
      Value: '"https://releases.hashicorp.com/consul/1.2.1/consul_1.2.1_linux_amd64.zip"'
    - Key: CONSUL_TEMPLATE_URL
      Value: '"https://releases.hashicorp.com/consul-template/0.19.5/consul-template_0.19.5_linux_amd64.zip"'
    - Key: LEVANT_URL
      Value: '"https://github.com/jrasell/levant/releases/download/0.2.2/linux-amd64-levant"'
    Name: env
  - Name: workdir
    Path: /
  - CmdLine:
    - "mkdir -p /aws && \tapk -Uuv --no-cache add $RUN_DEPS $BUILD_DEPS && \tnpm install
      -g kongfig && npm cache clean --force && \tpip --no-cache-dir install awscli
      && \tcurl -L $NOMAD_URL > /tmp/nomad.zip && \tunzip -o /tmp/nomad.zip -d /usr/bin
      && \tchmod +x /usr/bin/nomad && \tmkdir /lib64 && ln -s /lib/libc.musl-x86_64.so.1
      /lib64/ld-linux-x86-64.so.2 && \trm -f /tmp/nomad.zip && \tcurl -L $CONSUL_URL
      > /tmp/consul.zip && \tunzip -o /tmp/consul.zip -d /usr/bin && \tchmod +x /usr/bin/consul
      && \trm -f /tmp/consul.zip && \tcurl -L $CONSUL_TEMPLATE_URL > /tmp/consul-template.zip
      && \tunzip -o /tmp/consul-template.zip -d /usr/bin && \tchmod +x /usr/bin/consul-template
      && \trm -f /tmp/consul-template.zip && \tcurl -L $LEVANT_URL -o /tmp/levant
      && \tmv /tmp/levant /usr/bin/levant && \tchmod +x /usr/bin/levant && \tgit clone
      https://github.com/awslabs/amazon-ecr-credential-helper.git src/github.com/awslabs/amazon-ecr-credential-helper
      && \tcd src/github.com/awslabs/amazon-ecr-credential-helper && \tmake && \tmv
      bin/local/docker-credential-ecr-login /bin/ && \tcd / && \trm -rf src/github.com/awslabs/amazon-ecr-credential-helper
      && \tmkdir -p ~/.docker && \techo -e '{ \"credsStore\": \"ecr-login\" }' > ~/.docker/config.json
      && \tapk --purge -v del $BUILD_DEPS && \trm -rf /var/cache/*"
    Name: run
    PrependShell: true
  From:
    Image: docker:19.03-git
  Name: ""
  Platform: ""
  SourceCode: FROM docker:19.03-git
