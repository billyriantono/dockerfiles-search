{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "deployer",
      "BaseName": "php:7.2-cli",
      "SourceCode": "FROM php:7.2-cli AS deployer",
      "Platform": "",
      "As": "deployer",
      "From": {
        "Image": "php:7.2-cli"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "OSTICKET_VERSION",
              "Value": "1.12.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y git-core     \u0026\u0026 git clone -b v${OSTICKET_VERSION} --depth 1 https://github.com/osTicket/osTicket.git     \u0026\u0026 cd osTicket     \u0026\u0026 php manage.php deploy -sv /data/upload     \u0026\u0026 chown -R 82:82 /data/upload     \u0026\u0026 mv /data/upload/setup /data/upload/setup_hidden     \u0026\u0026 chown -R root:root /data/upload/setup_hidden     \u0026\u0026 chmod -R go= /data/upload/setup_hidden"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "php:7.2-fpm-alpine",
      "SourceCode": "FROM php:7.2-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Martin Campbell \u003cmartin@campbellsoftware.co.uk\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/data"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "Chown": "",
          "From": "deployer",
          "Name": "copy",
          "SourcesAndDest": [
            "/data/upload",
            "upload"
          ]
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     apk add --no-cache --update         wget         msmtp         ca-certificates         supervisor         nginx         libpng         c-client         openldap         libintl         libxml2         icu         openssl \u0026\u0026     apk add --no-cache --virtual .build-deps         imap-dev         libpng-dev         curl-dev         openldap-dev         gettext-dev         libxml2-dev         icu-dev         autoconf         g++         make         pcre-dev \u0026\u0026     docker-php-ext-install gd curl ldap mysqli sockets gettext mbstring xml intl opcache \u0026\u0026     docker-php-ext-configure imap --with-imap-ssl \u0026\u0026     docker-php-ext-install imap \u0026\u0026     pecl install apcu \u0026\u0026 docker-php-ext-enable apcu \u0026\u0026     apk del .build-deps \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     wget -nv -O upload/include/i18n/fr.phar https://s3.amazonaws.com/downloads.osticket.com/lang/fr.phar \u0026\u0026     wget -nv -O upload/include/i18n/ar.phar https://s3.amazonaws.com/downloads.osticket.com/lang/ar.phar \u0026\u0026     wget -nv -O upload/include/i18n/pt_BR.phar https://s3.amazonaws.com/downloads.osticket.com/lang/pt_BR.phar \u0026\u0026     wget -nv -O upload/include/i18n/it.phar https://s3.amazonaws.com/downloads.osticket.com/lang/it.phar \u0026\u0026     wget -nv -O upload/include/i18n/es_ES.phar https://s3.amazonaws.com/downloads.osticket.com/lang/es_ES.phar \u0026\u0026     wget -nv -O upload/include/i18n/de.phar https://s3.amazonaws.com/downloads.osticket.com/lang/de.phar \u0026\u0026     mv upload/include/i18n upload/include/i18n.dist \u0026\u0026     wget -nv -O upload/include/plugins/auth-ldap.phar https://s3.amazonaws.com/downloads.osticket.com/plugin/auth-ldap.phar \u0026\u0026     touch /var/log/msmtp.log \u0026\u0026     chown www-data:www-data /var/log/msmtp.log \u0026\u0026     chown nginx:www-data /var/tmp/nginx \u0026\u0026 chmod g+rx /var/tmp/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/",
            "/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data/upload/include/plugins",
            "/data/upload/include/i18n",
            "/var/log/nginx"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/data/bin/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}