MetaArgs: null
Stages:
- BaseName: lucacri/alpine-base:3.10
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"lucacri@gmail.com"'
    Name: label
  - Key: CACHEBUST
    Name: arg
    Value: "20190411"
  - Key: UID
    Name: arg
    Value: "501"
  - Key: GID
    Name: arg
    Value: "501"
  - Key: INSTALL_PHANTOMJS
    Name: arg
    Value: "1"
  - CmdLine:
    - apk upgrade --update-cache &&     apk add curl ca-certificates &&     echo "@community
      http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
      &&     echo "@edge http://nl.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
      &&     echo "@edge http://nl.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories
      &&     apk update &&     apk add         php7         php7-phar         php7-json         php7-openssl         php7-dom         php7-mysqlnd         php7-mysqli         php7-posix         php7-pcntl         php7-pdo         php7-pdo_pgsql         php7-pdo_sqlite         php7-pdo_mysql         php7-common         php7-fpm         php7-bcmath         php7-zip         php7-bz2         php7-curl         php7-gd         php7-intl         php7-sqlite3         php7-ctype         php7-tidy         php7-pgsql         php7-xml         php7-mbstring         php7-session         php7-zlib         php7-opcache         php7-soap         php7-xdebug         php7-imagick         php7-exif         php7-tokenizer         php7-xmlwriter         php7-fileinfo         php7-simplexml         php7-xmlreader         php7-iconv         ghostscript         ghostscript-dev         nano         nodejs         npm         caddy         bzip2         git         curl         fontconfig         openssh         bash         libpng-dev         ffmpeg         yarn         imagemagick         ghostscript-fonts         jpegoptim         optipng         pngquant         gifsicle         shadow         composer@community         caddy         rsync
      &&     ln -sf /usr/bin/php7 /usr/bin/php &&     mkdir -p /usr/share &&     cd
      /usr/share &&     if [ "$INSTALL_PHANTOMJS" = "0" ] ; then     echo "Skipping
      install of PhantomJs" ; else     curl -L https://github.com/Overbryd/docker-phantomjs-alpine/releases/download/2.11/phantomjs-alpine-x86_64.tar.bz2
      | tar xj &&     ln -s /usr/share/phantomjs/phantomjs /usr/bin/phantomjs &&     ln
      -s /usr/share/phantomjs/phantomjs /usr/local/bin/phantomjs &&     phantomjs
      --version ; fi &&     cd /tmp &&     composer selfupdate &&     usermod -u ${UID}
      caddy &&     groupmod -g ${GID} caddy &&     mkdir /var/www-upload &&     chmod
      777 /var/www-upload &&     mkdir -p /tmp/tmp &&     touch /tmp/tmp.tmp &&     rm
      -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Env:
    - Key: ENABLE_CRON
      Value: "1"
    - Key: ENABLE_HORIZON
      Value: "0"
    - Key: ENABLE_CADDY
      Value: "1"
    - Key: ENABLE_FPM
      Value: "1"
    - Key: ENABLE_LOGS
      Value: "1"
    - Key: ENABLE_XDEBUG
      Value: "0"
    - Key: STARTUP_MIGRATE
      Value: "1"
    - Key: STARTUP_CONFIG_CACHE
      Value: "1"
    - Key: STARTUP_ROUTE_CACHE
      Value: "1"
    - Key: STARTUP_OPTIMIZE
      Value: "0"
    - Key: PHP_MAX_CHILDREN
      Value: "2"
    - Key: DEVELOPMENT_WEBSERVER
      Value: "0"
    - Key: DEVELOPMENT_WEBSERVER_NO_SSL
      Value: "0"
    - Key: XDEBUG_IDE_KEY
      Value: PHPSTORM
    - Key: XDEBUG_REMOTE_HOST
      Value: docker.for.mac.localhost
    - Key: PHP_SERVER_NAME
      Value: docker
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - Name: workdir
    Path: /var/www
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  From:
    Image: lucacri/alpine-base:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM lucacri/alpine-base:3.10
