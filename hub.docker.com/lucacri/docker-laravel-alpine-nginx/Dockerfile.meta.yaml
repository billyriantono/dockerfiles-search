MetaArgs: null
Stages:
- BaseName: lucacri/alpine-base:3.9
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"lucacri@gmail.com"'
    Name: label
  - Key: CACHEBUST
    Name: arg
    Value: "20190411"
  - Key: UID
    Name: arg
    Value: "501"
  - Key: GID
    Name: arg
    Value: "501"
  - Key: INSTALL_PHANTOMJS
    Name: arg
    Value: "0"
  - CmdLine:
    - wget -O /etc/apk/keys/php-alpine.rsa.pub https://dl.bintray.com/php-alpine/key/php-alpine.rsa.pub  &&     apk
      upgrade --update-cache &&     apk add curl ca-certificates &&     echo "@php
      https://dl.bintray.com/php-alpine/v3.9/php-7.3" >> /etc/apk/repositories &&     echo
      "@community http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
      &&     echo "@edge http://nl.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
      &&     echo "@edge http://nl.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories
      &&     apk update &&     apk add     php@php     php-phar@php     php-json@php     php-openssl@php     php-dom@php     php-mysqlnd@php     php-mysqli@php     php-posix@php     php-pcntl@php     php-pdo@php     php-pdo_pgsql@php     php-pdo_sqlite@php     php-pdo_mysql@php     php-common@php     php-fpm@php     php-bcmath@php     php-zip@php     php-bz2@php     php-curl@php     php-gd@php     php-intl@php     php-sqlite3@php     php-ctype@php     php-tidy@php     php-pgsql@php     php-xml@php     php-mbstring@php     php-session@php     php-zlib@php     php-opcache@php     php-soap@php     php-xdebug@php     php-imagick@php     php-exif@php     php-xmlreader@php     php-iconv@php     ghostscript     ghostscript-dev     nano     nodejs     npm     bzip2     git     curl     fontconfig     openssh     bash     libpng-dev     ffmpeg     yarn     imagemagick     ghostscript-fonts     jpegoptim     optipng     pngquant     gifsicle     rsync     nginx     shadow     composer@community
      &&     ln -sf /usr/bin/php7 /usr/bin/php &&     mkdir -p /usr/share &&     cd
      /usr/share &&     if [ "$INSTALL_PHANTOMJS" = "0" ] ; then     echo "Skipping
      install of PhantomJs" ; else     curl -L https://github.com/Overbryd/docker-phantomjs-alpine/releases/download/2.11/phantomjs-alpine-x86_64.tar.bz2
      | tar xj &&     ln -s /usr/share/phantomjs/phantomjs /usr/bin/phantomjs &&     ln
      -s /usr/share/phantomjs/phantomjs /usr/local/bin/phantomjs &&     phantomjs
      --version ; fi &&     cd /tmp &&     composer selfupdate &&     mkdir /var/www-upload
      &&     chmod 777 /var/www-upload &&     mkdir -p /tmp/tmp &&     touch /tmp/tmp.tmp
      &&     rm -rf /var/cache/apk/* &&     usermod -u ${UID} nginx &&     groupmod
      -g ${GID} nginx &&     rm /etc/nginx/conf.d/* &&     chown -Rf nginx:nginx /var/tmp/nginx
      &&     chown -Rf nginx:nginx /var/lib/nginx &&     composer global require hirak/prestissimo
      &&     composer global clear-cache
    Name: run
    PrependShell: true
  - Env:
    - Key: ENABLE_CRON
      Value: "1"
    - Key: ENABLE_HORIZON
      Value: "0"
    - Key: ENABLE_WEB
      Value: "1"
    - Key: ENABLE_LOGS
      Value: "1"
    - Key: STARTUP_MIGRATE
      Value: "1"
    - Key: STARTUP_CONFIG_CACHE
      Value: "1"
    - Key: STARTUP_ROUTE_CACHE
      Value: "1"
    - Key: STARTUP_OPTIMIZE
      Value: "1"
    - Key: ENABLE_XDEBUG
      Value: "0"
    - Key: XDEBUG_IDE_KEY
      Value: PHPSTORM
    - Key: XDEBUG_REMOTE_HOST
      Value: docker.for.mac.localhost
    - Key: PHP_MAX_CHILDREN
      Value: "2"
    - Key: ENABLE_OPCACHE
      Value: "1"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - Name: workdir
    Path: /var/www
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  From:
    Image: lucacri/alpine-base:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM lucacri/alpine-base:3.9
