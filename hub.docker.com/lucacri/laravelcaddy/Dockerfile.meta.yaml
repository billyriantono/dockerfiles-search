MetaArgs: null
Stages:
- BaseName: phusion/baseimage:latest
  Commands:
  - Maintainer: '"Luca Critelli" <lucacri@gmail.com>'
    Name: maintainer
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y software-properties-common && LC_ALL=en_US.UTF-8
      add-apt-repository ppa:ondrej/php && apt-get update && apt-get upgrade -y &&
      BUILD_PACKAGES="python3 php7.0-fpm php7.0-zip php7.0-bz2 php7.0-mysql php-memcached
      php7.0-mysql php7.0-curl php7.0-gd php7.0-intl php7.0-mcrypt php7.0-sqlite3
      php7.0-tidy php7.0-pgsql php7.0-xml nano php-mbstring" && apt-get -y install
      $BUILD_PACKAGES && apt-get remove --purge -y software-properties-common && apt-get
      autoremove -y && apt-get clean && apt-get autoclean && echo -n > /var/lib/apt/extended_states
      && rm -rf /var/lib/apt/lists/* && rm -rf /usr/share/man/?? && rm -rf /usr/share/man/??_*
      && find /etc/php/7.0/cli/conf.d/ -name "*.ini" -exec sed -i -re 's/^(\s*)#(.*)/\1;\2/g'
      {} \; && rm /etc/php/7.0/cli/conf.d/20-mcrypt.ini && rm /etc/php/7.0/fpm/conf.d/20-mcrypt.ini
      && phpenmod mcrypt && mkdir /run/php && chmod 777 /run/php && sed -i -e "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g"
      /etc/php/7.0/fpm/php.ini && sed -i -e "s/upload_max_filesize\s*=\s*2M/upload_max_filesize
      = 100M/g" /etc/php/7.0/fpm/php.ini && sed -i -e "s/post_max_size\s*=\s*8M/post_max_size
      = 100M/g" /etc/php/7.0/fpm/php.ini && sed -i -e "s/;daemonize\s*=\s*yes/daemonize
      = no/g" /etc/php/7.0/fpm/php-fpm.conf && mkdir -p /var/www && usermod -u 1000
      www-data && usermod -a -G users www-data && chown -R www-data:www-data /var/www/
      && mkdir -p /etc/service/caddy && mkdir -p /etc/service/phpfpm && mkdir /etc/service/logs
      && mkdir -p /etc/my_init.d && php -r "copy('https://getcomposer.org/installer',
      'composer-setup.php');" && php -r "if (hash_file('SHA384', 'composer-setup.php')
      === 'e115a8dc7871f15d853148a7fbac7da27d6c0030b848d9b3dc09e2a0388afed865e6a3d6b3c0fad45c48e2b5fc1196ae')
      { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php');
      } echo PHP_EOL;" && php composer-setup.php --install-dir=/usr/local/bin --filename=composer
      && php -r "unlink('composer-setup.php');"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./fpmpool.conf
    - /etc/php/7.0/fpm/pool.d/www.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./caddy-0.9
    - /bin/caddy
  - Chown: ""
    Name: add
    SourcesAndDest:
    - logrotate_laravel.conf
    - /etc/logrotate.d/laravel
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./caddy.conf
    - /caddy.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./caddy.sh
    - /etc/service/caddy/run
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./phpfpm.sh
    - /etc/service/phpfpm/run
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./boot.sh
    - /etc/my_init.d/boot.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./logs.sh
    - /etc/service/logs/run
  - CmdLine:
    - chmod +x /etc/service/caddy/run && chmod +x /etc/service/phpfpm/run && chmod
      +x /etc/my_init.d/boot.sh && chmod 777 /etc/service/logs/run
    Name: run
    PrependShell: true
  - Env:
    - Key: APP_ENV
      Value: local
    - Key: APP_DEBUG
      Value: "true"
    - Key: DB_HOST
      Value: db
    - Key: DB_DATABASE
      Value: laravel
    - Key: DB_USERNAME
      Value: laravel
    - Key: DB_PASSWORD
      Value: laravelpass
    - Key: APP_URL
      Value: '"http://laravel.dev"'
    - Key: APP_KEY
      Value: '"kD7qEXQBJUmURfVHvsHyWTVG9UmkZoUR"'
    - Key: DB_TYPE
      Value: pgsql
    - Key: DB_PORT
      Value: "5432"
    - Key: QUEUE_DRIVER
      Value: beanstalkd
    - Key: QUEUE_HOST
      Value: queue
    - Key: CACHE_DRIVER
      Value: redis
    - Key: REDIS_HOST
      Value: redis
    - Key: SESSION_DRIVER
      Value: redis
    - Key: APP_FILESYSTEM
      Value: local
    - Key: MAIL_PRETEND
      Value: "true"
    Name: env
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "80"
  From:
    Image: phusion/baseimage:latest
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:latest
