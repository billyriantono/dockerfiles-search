MetaArgs: null
Stages:
- As: build
  BaseName: alpine:3.11.2
  Commands:
  - Env:
    - Key: REFRESHED_AT
      Value: "2020-01-13"
    - Key: LANG
      Value: en_US.UTF-8
    - Key: HOME
      Value: /opt/app/
    - Key: TERM
      Value: xterm
    - Key: ERLANG_VERSION
      Value: 22.2.2
    Name: env
  - CmdLine:
    - echo "@main http://dl-cdn.alpinelinux.org/alpine/v3.11/main" >> /etc/apk/repositories
      &&     echo "@community http://dl-cdn.alpinelinux.org/alpine/v3.11/community"
      >> /etc/apk/repositories &&     echo "@edge http://dl-cdn.alpinelinux.org/alpine/edge/main"
      >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache --update --available upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --update pcre@edge &&     apk add --no-cache --update       bash       ca-certificates       openssl-dev       ncurses-dev       unixodbc-dev       zlib-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .erlang-build       dpkg-dev       dpkg       binutils       git       autoconf       build-base       perl-dev
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/erlang-build
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - patches
    - /tmp/patches
  - CmdLine:
    - git clone -b OTP-$ERLANG_VERSION --single-branch --depth 1 https://github.com/erlang/otp.git
      . &&     export ERL_TOP=/tmp/erlang-build &&     export PATH=$ERL_TOP/bin:$PATH
      &&     export CPPFlAGS="-D_BSD_SOURCE $CPPFLAGS" &&     ./otp_build autoconf
      &&     ./configure       --prefix=/usr/local       --build="$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)"       --sysconfdir=/etc       --mandir=/usr/share/man       --infodir=/usr/share/info       --without-javac       --without-wx       --without-debugger       --without-observer       --without-jinterface       --without-cosEvent      --without-cosEventDomain       --without-cosFileTransfer       --without-cosNotification       --without-cosProperty       --without-cosTime       --without-cosTransactions       --without-et       --without-gs       --without-ic       --without-megaco       --without-orber       --without-percept       --without-typer       --enable-threads       --enable-shared-zlib       --enable-ssl=dynamic-ssl-lib       --enable-hipe
      &&     make -j4
    Name: run
    PrependShell: true
  - CmdLine:
    - make DESTDIR=/tmp install &&     ln -s /tmp/usr/local/lib/erlang /usr/local/lib/erlang
      &&     /tmp/usr/local/bin/erl -eval "beam_lib:strip_release('/tmp/usr/local/lib/erlang/lib')"
      -s init stop > /dev/null &&     (/usr/bin/strip /tmp/usr/local/lib/erlang/erts-*/bin/*
      || true) &&     rm -rf /tmp/usr/local/lib/erlang/usr/ &&     rm -rf /tmp/usr/local/lib/erlang/misc/
      &&     for DIR in /tmp/usr/local/lib/erlang/erts* /tmp/usr/local/lib/erlang/lib/*;
      do         rm -rf ${DIR}/src/*.erl;         rm -rf ${DIR}/doc;         rm -rf
      ${DIR}/man;         rm -rf ${DIR}/examples;         rm -rf ${DIR}/emacs;         rm
      -rf ${DIR}/c_src;     done &&     rm -rf /tmp/usr/local/lib/erlang/erts-*/lib/
      &&     rm /tmp/usr/local/lib/erlang/erts-*/bin/dialyzer &&     rm /tmp/usr/local/lib/erlang/erts-*/bin/erlc
      &&     rm /tmp/usr/local/lib/erlang/erts-*/bin/typer &&     rm /tmp/usr/local/lib/erlang/erts-*/bin/ct_run
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.11.2
  Name: build
  Platform: ""
  SourceCode: FROM alpine:3.11.2 AS build
- BaseName: alpine:3.11.2
  Commands:
  - Maintainer: Paul Schoenfelder <paulschoenfelder@gmail.com>
    Name: maintainer
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    - Key: HOME
      Value: /opt/app/
    - Key: TERM
      Value: xterm
    - Key: PATH
      Value: /usr/local/bin:${PATH}
    Name: env
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /tmp/usr/local
    - /usr/local
  - Name: workdir
    Path: ${HOME}
  - CmdLine:
    - adduser -s /bin/sh -u 1001 -G root -h "${HOME}" -S -D default &&     chown -R
      1001:0 "${HOME}" &&     echo "@main http://dl-cdn.alpinelinux.org/alpine/v3.11/main"
      >> /etc/apk/repositories &&     echo "@community http://dl-cdn.alpinelinux.org/alpine/v3.11/community"
      >> /etc/apk/repositories &&     echo "@edge http://dl-cdn.alpinelinux.org/alpine/edge/main"
      >> /etc/apk/repositories &&     apk --no-cache --update --available upgrade
      &&     apk add --no-cache --update pcre@edge &&     apk add --no-cache --update       bash       ca-certificates       openssl       ncurses       unixodbc       zlib
      &&     update-ca-certificates --fresh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.11.2
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.11.2
