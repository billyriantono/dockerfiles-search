MetaArgs: null
Stages:
- BaseName: alpine:3.9
  Commands:
  - CmdLine:
    - "set -x \t&& addgroup -g 82 -S www-data \t&& adduser -u 82 -D -S -G www-data
      www-data"
    Name: run
    PrependShell: true
  - Key: HTTPD_PREFIX
    Name: arg
    Value: /usr/local/apache2
  - Env:
    - Key: PATH
      Value: $HTTPD_PREFIX/bin:$PATH
    Name: env
  - CmdLine:
    - "mkdir -p \"$HTTPD_PREFIX\" \t&& chown www-data:www-data \"$HTTPD_PREFIX\""
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HTTPD_PREFIX
  - Key: HTTPD_VERSION
    Name: arg
    Value: 2.4.39
  - Key: HTTPD_SHA256
    Name: arg
    Value: b4ca9d05773aa59b54d66cd8f4744b945289f084d3be17d7981d1783a5decfa2
  - Key: HTTPD_PATCHES
    Name: arg
    Value: '""'
  - Env:
    - Key: APACHE_DIST_URLS
      Value: "https://www.apache.org/dyn/closer.cgi?action=download&filename= \thttps://www-us.apache.org/dist/
        \thttps://www.apache.org/dist/ \thttps://archive.apache.org/dist/"
    Name: env
  - CmdLine:
    - "set -eux; \t\trunDeps=' \t\tapr-dev \t\tapr-util-dev \t\tapr-util-ldap \t\tperl
      \t'; \tapk add --no-cache --virtual .build-deps \t\t$runDeps \t\tca-certificates
      \t\tcoreutils \t\tdpkg-dev dpkg \t\tgcc \t\tgnupg \t\tlibc-dev \t\tlibxml2-dev
      \t\tlua-dev \t\tmake \t\tnghttp2-dev \t\topenssl \t\topenssl-dev \t\tpcre-dev
      \t\ttar \t\tzlib-dev \t; \t\tddist() { \t\tlocal f=\"$1\"; shift; \t\tlocal
      distFile=\"$1\"; shift; \t\tlocal success=; \t\tlocal distUrl=; \t\tfor distUrl
      in $APACHE_DIST_URLS; do \t\t\tif wget -O \"$f\" \"$distUrl$distFile\" && [
      -s \"$f\" ]; then \t\t\t\tsuccess=1; \t\t\t\tbreak; \t\t\tfi; \t\tdone; \t\t[
      -n \"$success\" ]; \t}; \t\tddist 'httpd.tar.bz2' \"httpd/httpd-$HTTPD_VERSION.tar.bz2\";
      \techo \"$HTTPD_SHA256 *httpd.tar.bz2\" | sha256sum -c -; \t\tddist 'httpd.tar.bz2.asc'
      \"httpd/httpd-$HTTPD_VERSION.tar.bz2.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\";
      \tfor key in \t\tA93D62ECC3C8EA12DB220EC934EA76E6791485A8 \t\tB9E8213AEFB861AF35A41F2C995E35221AD84DFF
      \t; do \t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";
      \tdone; \tgpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2; \tcommand -v
      gpgconf && gpgconf --kill all || :; \trm -rf \"$GNUPGHOME\" httpd.tar.bz2.asc;
      \t\tmkdir -p src; \ttar -xf httpd.tar.bz2 -C src --strip-components=1; \trm
      httpd.tar.bz2; \tcd src; \t\tpatches() { \t\twhile [ \"$#\" -gt 0 ]; do \t\t\tlocal
      patchFile=\"$1\"; shift; \t\t\tlocal patchSha256=\"$1\"; shift; \t\t\tddist
      \"$patchFile\" \"httpd/patches/apply_to_$HTTPD_VERSION/$patchFile\"; \t\t\techo
      \"$patchSha256 *$patchFile\" | sha256sum -c -; \t\t\tpatch -p0 < \"$patchFile\";
      \t\t\trm -f \"$patchFile\"; \t\tdone; \t}; \tpatches $HTTPD_PATCHES; \t\tgnuArch=\"$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)\"; \t./configure \t\t--build=\"$gnuArch\" \t\t--prefix=\"$HTTPD_PREFIX\"
      \t\t--enable-mods-shared=reallyall \t\t--enable-mpms-shared=all \t; \tmake -j
      \"$(nproc)\"; \tmake install; \t\tcd ..; \trm -r src man manual; \t\tsed -ri
      \t\t-e 's!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g' \t\t-e 's!^(\\s*ErrorLog)\\s+\\S+!\\1
      /proc/self/fd/2!g' \t\t-e 's!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'
      \t\t\"$HTTPD_PREFIX/conf/httpd.conf\" \t\t\"$HTTPD_PREFIX/conf/extra/httpd-ssl.conf\"
      \t; \t\trunDeps=\"$runDeps $( \t\tscanelf --needed --nobanner --format '%n#p'
      --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[
      -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk
      add --virtual .httpd-rundeps $runDeps; \tapk del .build-deps; \t\thttpd -v"
    Name: run
    PrependShell: true
  - Key: PHPIZE_DEPS
    Name: arg
    Value: "\"\t\tautoconf \t\tdpkg-dev dpkg \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev
      \t\tmake \t\tpkgconf \t\tre2c\""
  - CmdLine:
    - "apk add --no-cache \t\tca-certificates \t\tcurl \t\ttar \t\txz \t\topenssl"
    Name: run
    PrependShell: true
  - Key: PHP_INI_DIR
    Name: arg
    Value: /usr/local/etc/php
  - CmdLine:
    - "set -eux; \tmkdir -p \"$PHP_INI_DIR/conf.d\"; \t[ ! -d /var/www/html ]; \tmkdir
      -p /var/www/html; \tchown www-data:www-data /var/www/html; \tchmod 777 /var/www/html"
    Name: run
    PrependShell: true
  - Key: PHP_EXTRA_CONFIGURE_ARGS
    Name: arg
    Value: '"--with-apxs2 --disable-cgi --with-gd --with-pdo_mysql"'
  - Key: PHP_CFLAGS
    Name: arg
    Value: '"-fstack-protector-strong -fpic -fpie -O2"'
  - Key: PHP_CPPFLAGS
    Name: arg
    Value: '"$PHP_CFLAGS"'
  - Key: PHP_LDFLAGS
    Name: arg
    Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
  - Key: GPG_KEYS
    Name: arg
    Value: '"1729F83938DA44E27BA0F4D3DBDB397470D12172 B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F"'
  - Key: PHP_VERSION
    Name: arg
    Value: 7.2.17
  - Key: PHP_URL
    Name: arg
    Value: '"https://www.php.net/get/php-7.2.17.tar.xz/from/this/mirror"'
  - Key: PHP_ASC_URL
    Name: arg
    Value: '"https://www.php.net/get/php-7.2.17.tar.xz.asc/from/this/mirror"'
  - Key: PHP_SHA256
    Name: arg
    Value: '"a3e5f51a9ae08813b3925bea3a4de02cd4906fcccf75646e267a213bb63bcf84"'
  - Key: PHP_MD5
    Name: arg
    Value: '""'
  - CmdLine:
    - "set -xe; \t\tapk add --no-cache --virtual .fetch-deps \t\tgnupg \t\twget \t;
      \t\tmkdir -p /usr/src; \tcd /usr/src; \t\twget -O php.tar.xz \"$PHP_URL\"; \t\tif
      [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum
      -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\"
      | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\twget -O php.tar.xz.asc
      \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS;
      do \t\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";
      \t\tdone; \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \t\tcommand -v
      gpgconf > /dev/null && gpgconf --kill all; \t\trm -rf \"$GNUPGHOME\"; \tfi;
      \t\tapk del --no-network .fetch-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - "set -xe \t&& apk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\targon2-dev
      \t\tcoreutils \t\tcurl-dev \t\tlibedit-dev \t\tlibsodium-dev \t\tlibxml2-dev
      \t\topenssl-dev \t\tsqlite-dev \t\tfreetype-dev         libjpeg-turbo-dev         libpng-dev
      \        libmcrypt-dev \t\t&& export CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\"
      \t\tLDFLAGS=\"$PHP_LDFLAGS\"     && chmod +x /usr/local/bin/docker-php-source
      \t&& docker-php-source extract \t&& cd /usr/src/php \t&& gnuArch=\"$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\"
      \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t\t\t--enable-option-checking=fatal
      \t\t\t\t--with-mhash \t\t\t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd
      \t\t--with-password-argon2 \t\t--with-sodium=shared \t\t\t\t--with-curl \t\t--with-libedit
      \t\t--with-openssl \t\t--with-zlib \t\t--with-freetype-dir=/usr/include/         --with-jpeg-dir=/usr/include/
      \t\t\t\t$(test \"$gnuArch\" = 's390x-linux-gnu' && echo '--without-pcre-jit')
      \t\t\t\t$PHP_EXTRA_CONFIGURE_ARGS \t&& make -j \"$(nproc)\" \t&& find -type
      f -name '*.a' -delete \t&& make install \t&& { find /usr/local/bin /usr/local/sbin
      -type f -perm +0111 -exec strip --strip-all '{}' + || true; } \t&& make clean
      \t\t&& cp -v php.ini-* \"$PHP_INI_DIR/\" \t\t&& pecl update-channels     &&
      pecl install -o -f redis-4.0.1      && pecl install -o -f yar-2.0.5      \t&&
      cd / \t&& docker-php-source delete \t\t&& runDeps=\"$( \t\tscanelf --needed
      --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t|
      sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next
      } { print \"so:\" $1 }' \t)\" \t&& apk add --no-cache $runDeps \t\t&& apk del
      --no-network .build-deps \t\t&& pecl update-channels \t&& rm -rf /tmp/pear ~/.pearrc"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - docker-php-entrypoint
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - httpd-foreground
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - httpd.conf
    - /usr/local/apache2/conf/httpd.conf
  - CmdLine:
    - chmod -R +x /usr/local/bin/     && docker-php-ext-enable sodium redis yar
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /var/www/html
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - httpd-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
