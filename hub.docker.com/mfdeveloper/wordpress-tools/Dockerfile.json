{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-alpine",
      "SourceCode": "FROM php:7.2-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.2-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Michel Felipe\u003cmfelipeof@gmail.com\u003e\""
            },
            {
              "Key": "description",
              "Value": "\"PHP tools to use in wordpress installations for development environments\""
            },
            {
              "Key": "version",
              "Value": "\"1.0-php7.2-alpine\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk --no-cache add git subversion openssh mercurial tini bash patch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"memory_limit=-1\" \u003e \"$PHP_INI_DIR/conf.d/memory-limit.ini\"  \u0026\u0026 echo \"date.timezone=${PHP_TIMEZONE:-UTC}\" \u003e \"$PHP_INI_DIR/conf.d/date_timezone.ini\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex; \t\tapk add --no-cache --virtual .build-deps \t\tlibjpeg-turbo-dev \t\tlibpng-dev \t\tzlib-dev; \tdocker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \tdocker-php-ext-install gd mysqli opcache zip; \trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --virtual .wordpress-phpexts-rundeps $runDeps; \tapk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache \t\tless \t\tmysql-client \t\tunzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex; \tmkdir -p /var/www/html; \tchmod -R 777 /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_CLI_GPG_KEY",
              "Value": "63AF7AA15067C05616FDDD88A3A2E8F226F0BC06"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_CLI_VERSION",
              "Value": "1.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_CLI_SHA512",
              "Value": "8dd68c98c6fa00e1acc5e036f9393c8b052937045b5232e4aa0eb4f15773908eae48760607bc853a4f951bd5ba69e5050337e5d9dcfa48df87a12cebb1de3432"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_CODING_STANDARDS_VERSION",
              "Value": "1.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "${HOME}/.composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.6.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPUNIT_VERSION",
              "Value": "6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \t\tapk add --no-cache --virtual .fetch-deps \t\tgnupg \t; \t\tcurl -o /usr/local/bin/wp.gpg -fSLk \"https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t( gpg --keyserver hkps://hkps.pool.sks-keyservers.net --recv-keys \"$WORDPRESS_CLI_GPG_KEY\" \t|| gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$WORDPRESS_CLI_GPG_KEY\" \t|| gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$WORDPRESS_CLI_GPG_KEY\" \t|| gpg --keyserver pool.sks-keyservers.net --recv-keys \"$WORDPRESS_CLI_GPG_KEY\" \t|| gpg --keyserver pgp.mit.edu --recv-keys \"$WORDPRESS_CLI_GPG_KEY\" \t|| gpg --keyserver keyserver.pgp.com --recv-keys \"$WORDPRESS_CLI_GPG_KEY\" ); \tgpg --batch --decrypt --output /usr/local/bin/wp /usr/local/bin/wp.gpg; \trm -rf \"$GNUPGHOME\" /usr/local/bin/wp.gpg; \t\techo \"$WORDPRESS_CLI_SHA512 */usr/local/bin/wp\" | sha512sum -c -; \tchmod +x /usr/local/bin/wp; \t\tapk del .fetch-deps; \t\twp --allow-root --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "curl -s -f -L -k -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/b107d959a5924af895807021fcef4ffec5a76aa9/web/installer  \u0026\u0026 php -r \"     \\$signature = '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061';     \\$hash = hash('SHA384', file_get_contents('/tmp/installer.php'));     if (!hash_equals(\\$signature, \\$hash)) {         unlink('/tmp/installer.php');         echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL;         exit(1);     }\"  \u0026\u0026 php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION}  \u0026\u0026 composer --ansi --version --no-interaction  \u0026\u0026 rm -rf /tmp/* /tmp/.htaccess"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${PATH}:${COMPOSER_HOME}/vendor/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "composer global require phpunit/phpunit ^\"${PHPUNIT_VERSION}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require squizlabs/php_codesniffer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require dealerdirect/phpcodesniffer-composer-installer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require wp-coding-standards/wpcs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "wp",
            "shell",
            "--allow-root",
            "--path=/var/www/html"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}