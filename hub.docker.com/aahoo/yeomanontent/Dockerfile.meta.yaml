MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Shane Frasier <jeremy.frasier@beta.dhs.gov>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update         -qq     && apt-get install         -qq         --yes         --no-install-recommends         --no-install-suggests       apt-utils       build-essential       curl       git       libc6-dev       libfontconfig1       libreadline-dev       libssl-dev       libssl-doc       libxml2-dev       libxslt1-dev       libyaml-dev       make       unzip       wget       zlib1g-dev       autoconf       automake       bison       gawk       libffi-dev       libgdbm-dev       libncurses5-dev       libsqlite3-dev       libtool       pkg-config       sqlite3       libbz2-dev       llvm       libncursesw5-dev       nodejs       npm       net-tools       fonts-liberation       libappindicator3-1       libasound2       libatk-bridge2.0-0       libgtk-3-0       libnspr4       libnss3       libxss1       libxtst6       lsb-release       xdg-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qq --yes locales && locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US:en
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb     &&
      dpkg -i google-chrome-stable_current_amd64.deb     && rm google-chrome-stable_current_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/google-chrome-stable /usr/bin/chrome
    Name: run
    PrependShell: true
  - Env:
    - Key: PYENV_RELEASE
      Value: 1.2.2
    - Key: PYENV_PYTHON_VERSION
      Value: 3.6.4
    - Key: PYENV_ROOT
      Value: /opt/pyenv
    - Key: PYENV_REPO
      Value: https://github.com/pyenv/pyenv
    Name: env
  - CmdLine:
    - wget ${PYENV_REPO}/archive/v${PYENV_RELEASE}.zip       --no-verbose     && unzip
      v$PYENV_RELEASE.zip -d $PYENV_ROOT     && mv $PYENV_ROOT/pyenv-$PYENV_RELEASE/*
      $PYENV_ROOT/     && rm -r $PYENV_ROOT/pyenv-$PYENV_RELEASE
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PYENV_ROOT/bin:$PYENV_ROOT/versions/${PYENV_PYTHON_VERSION}/bin:$PATH
    Name: env
  - CmdLine:
    - echo 'eval "$(pyenv init -)"' >> /etc/profile     && eval "$(pyenv init -)"     &&
      pyenv install $PYENV_PYTHON_VERSION     && pyenv local ${PYENV_PYTHON_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2     &&
      tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2 -C /usr/local/share/     && ln
      -s /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --global pa11y@4.13.2 --ignore-scripts
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install puppeteer
    Name: run
    PrependShell: true
  - Env:
    - Key: SCANNER_HOME
      Value: /home/scanner
    Name: env
  - CmdLine:
    - mkdir $SCANNER_HOME     && groupadd -r scanner     && useradd -r -c "Scanner
      user" -g scanner scanner     && chown -R scanner:scanner ${SCANNER_HOME}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $SCANNER_HOME
  - Name: volume
    Volumes:
    - /data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $SCANNER_HOME
  - CmdLine:
    - pip install --upgrade     -r requirements.txt     -r requirements-gatherers.txt     -r
      requirements-scanners.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - ./scan_wrap.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
