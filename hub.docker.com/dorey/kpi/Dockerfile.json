{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "kobotoolbox/koboform_base:latest",
      "SourceCode": "FROM kobotoolbox/koboform_base:latest",
      "Platform": "",
      "From": {
        "Image": "kobotoolbox/koboform_base:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "KPI_LOGS_DIR",
              "Value": "/srv/logs"
            },
            {
              "Key": "KPI_WHOOSH_DIR",
              "Value": "/srv/whoosh"
            },
            {
              "Key": "GRUNT_BUILD_DIR",
              "Value": "/srv/grunt_build"
            },
            {
              "Key": "GRUNT_FONTS_DIR",
              "Value": "/srv/grunt_fonts"
            },
            {
              "Key": "WEBPACK_STATS_PATH",
              "Value": "/srv/webpack-stats.json"
            },
            {
              "Key": "DJANGO_SETTINGS_MODULE",
              "Value": "kobo.settings"
            },
            {
              "Key": "NGINX_STATIC_DIR",
              "Value": "/srv/static"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./apt_requirements.txt",
            "\"${KPI_SRC_DIR}/\""
          ]
        },
        {
          "CmdLine": [
            "if ! diff \"${KPI_SRC_DIR}/apt_requirements.txt\" /srv/tmp/base_apt_requirements.txt; then         apt-get update -qq \u0026\u0026         apt-get install -qqy $(cat \"${KPI_SRC_DIR}/apt_requirements.txt\") \u0026\u0026         apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./requirements.txt",
            "\"${KPI_SRC_DIR}/\""
          ]
        },
        {
          "CmdLine": [
            "if ! diff \"${KPI_SRC_DIR}/requirements.txt\" /srv/tmp/base_requirements.txt; then         pip-sync \"${KPI_SRC_DIR}/requirements.txt\" 1\u003e/dev/null     ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./package.json",
            "\"${KPI_SRC_DIR}/\""
          ]
        },
        {
          "CmdLine": [
            "if ! diff \"${KPI_SRC_DIR}/package.json\" /srv/tmp/base_package.json; then         npm install --quiet || npm install --quiet     ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./bower.json",
            "./.bowerrc",
            "\"${KPI_SRC_DIR}/\""
          ]
        },
        {
          "CmdLine": [
            "if ! diff \"${KPI_SRC_DIR}/bower.json\" /srv/tmp/base_bower.json \u0026\u0026             ! diff \"${KPI_SRC_DIR}/.bowerrc\" /srv/tmp/base_bowerrc; then         bower install --quiet --allow-root --config.interactive=false     ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./Gruntfile.js",
            "${KPI_SRC_DIR}/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./webpack*",
            "${KPI_SRC_DIR}/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./.eslintrc",
            "${KPI_SRC_DIR}/.eslintrc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./helper/webpack-config.js",
            "${KPI_SRC_DIR}/helper/webpack-config.js"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./test",
            "${KPI_SRC_DIR}/test"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./jsapp",
            "${KPI_SRC_DIR}/jsapp"
          ]
        },
        {
          "CmdLine": [
            "mkdir \"${GRUNT_BUILD_DIR}\" \u0026\u0026     mkdir \"${GRUNT_FONTS_DIR}\" \u0026\u0026     ln -s \"${GRUNT_BUILD_DIR}\" \"${KPI_SRC_DIR}/jsapp/compiled\" \u0026\u0026     rm -rf \"${KPI_SRC_DIR}/jsapp/fonts\" \u0026\u0026     ln -s \"${GRUNT_FONTS_DIR}\" \"${KPI_SRC_DIR}/jsapp/fonts\" \u0026\u0026     ln -s \"${WEBPACK_STATS_PATH}\" webpack-stats.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "grunt copy \u0026\u0026 npm run build-production"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf \"${KPI_SRC_DIR}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "\"${KPI_SRC_DIR}\""
          ]
        },
        {
          "CmdLine": [
            "ln -s \"${KPI_NODE_PATH}\" \"${KPI_SRC_DIR}/node_modules\" \u0026\u0026     ln -s \"${BOWER_COMPONENTS_DIR}/\" \"${KPI_SRC_DIR}/jsapp/xlform/components\" \u0026\u0026     ln -s \"${GRUNT_BUILD_DIR}\" \"${KPI_SRC_DIR}/jsapp/compiled\" \u0026\u0026     ln -s \"${GRUNT_FONTS_DIR}\" \"${KPI_SRC_DIR}/jsapp/fonts\" \u0026\u0026     ln -s \"${WEBPACK_STATS_PATH}\" webpack-stats.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python manage.py collectstatic --noinput"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git submodule init \u0026\u0026     git submodule update \u0026\u0026     python manage.py compilemessages"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p \"${KPI_LOGS_DIR}/\" \"${KPI_WHOOSH_DIR}/\" \"${KPI_SRC_DIR}/emails\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "\"${KPI_LOGS_DIR}/\"",
            "\"${KPI_WHOOSH_DIR}/\"",
            "\"${KPI_SRC_DIR}/emails\""
          ]
        },
        {
          "CmdLine": [
            "echo 'source /etc/profile' \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "C_FORCE_ROOT",
              "Value": "\"true\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -s \"${KPI_SRC_DIR}/docker/init.bash\" /etc/my_init.d/10_init_kpi.bash \u0026\u0026     rm -rf /etc/service/wsgi \u0026\u0026     mkdir -p /etc/service/uwsgi \u0026\u0026     ln -s \"${KPI_SRC_DIR}/docker/run_uwsgi.bash\" /etc/service/uwsgi/run \u0026\u0026     mkdir -p /etc/service/celery \u0026\u0026     ln -s \"${KPI_SRC_DIR}/docker/run_celery.bash\" /etc/service/celery/run \u0026\u0026     mkdir -p /etc/service/celery_sync_kobocat_xforms \u0026\u0026     ln -s \"${KPI_SRC_DIR}/docker/run_celery_sync_kobocat_xforms.bash\" /etc/service/celery_sync_kobocat_xforms/run"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        }
      ]
    }
  ]
}