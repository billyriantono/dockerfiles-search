MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Maintainer: MaxDuke <maxduke@gmail.com>
    Name: maintainer
  - Key: TZ
    Name: arg
    Value: '''Asia/Shanghai'''
  - Env:
    - Key: TZ
      Value: ${TZ}
    Name: env
  - Env:
    - Key: SS_LIBEV_VERSION
      Value: v3.3.3
    Name: env
  - Env:
    - Key: V2RAY_PLUGIN_VERSION
      Value: v1.2.0
    Name: env
  - Env:
    - Key: SS_DOWNLOAD_URL
      Value: https://github.com/shadowsocks/shadowsocks-libev.git
    Name: env
  - Env:
    - Key: SS_DIR
      Value: shadowsocks-libev-$SS_VER
    Name: env
  - Env:
    - Key: PLUGIN_OBFS_DOWNLOAD_URL
      Value: https://github.com/shadowsocks/simple-obfs.git
    Name: env
  - Env:
    - Key: PLUGIN_V2RAY_DOWNLOAD_URL
      Value: https://github.com/shadowsocks/v2ray-plugin/releases/download/${V2RAY_PLUGIN_VERSION}/v2ray-plugin-linux-amd64-${V2RAY_PLUGIN_VERSION}.tar.gz
    Name: env
  - Env:
    - Key: LINUX_HEADERS_DOWNLOAD_URL
      Value: http://dl-cdn.alpinelinux.org/alpine/v3.7/main/x86_64/linux-headers-4.4.6-r2.apk
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - CmdLine:
    - set -ex  && apk upgrade  && apk add bash tzdata  && apk add --no-cache --virtual
      .build-deps       autoconf       automake       build-base       c-ares-dev       curl       libev-dev       libtool       libsodium-dev       mbedtls-dev       pcre-dev       tar       git  &&
      curl -sSL ${LINUX_HEADERS_DOWNLOAD_URL} > /linux-headers-4.4.6-r2.apk  && apk
      add --virtual .build-deps-kernel /linux-headers-4.4.6-r2.apk  && git clone ${SS_DOWNLOAD_URL}  &&
      (cd shadowsocks-libev  && git checkout tags/${SS_LIBEV_VERSION} -b ${SS_LIBEV_VERSION}  &&
      git submodule update --init --recursive  && ./autogen.sh  && ./configure --prefix=/usr
      --disable-documentation  && make install)  && git clone ${PLUGIN_OBFS_DOWNLOAD_URL}  &&
      (cd simple-obfs  && git submodule update --init --recursive  && ./autogen.sh  &&
      ./configure --disable-documentation  && make install)  && curl -o v2ray_plugin.tar.gz
      -sSL ${PLUGIN_V2RAY_DOWNLOAD_URL}  && tar -zxf v2ray_plugin.tar.gz  && mv v2ray-plugin_linux_amd64
      /usr/bin/v2ray-plugin  && ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime  &&
      echo ${TZ} > /etc/timezone  && adduser -h /tmp -s /sbin/nologin -S -D -H shadowsocks  &&
      apk add --no-cache       ca-certificates       rng-tools       $(scanelf --needed
      --nobanner /usr/bin/ss-* /usr/local/bin/obfs-*       | awk '{ gsub(/,/, "\nso:",
      $2); print "so:" $2 }'       | sort -u)  && cd ..  && apk del .build-deps .build-deps-kernel  &&
      rm -rf /linux-headers-4.4.6-r2.apk         shadowsocks-libev         simple-obfs         v2ray_plugin.tar.gz         /etc/service         /var/cache/apk/*  &&
      chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /ss-local/conf
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
