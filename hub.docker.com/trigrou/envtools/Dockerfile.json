{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04.1",
      "SourceCode": "FROM ubuntu:14.04.1",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04.1"
      },
      "Commands": [
        {
          "Maintainer": "trigrou",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/lib/:/usr/local/lib64/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/usr/local/bin/:/usr/local/lib/python/site-packages"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"\" \u003e\u003e /etc/apt/sources.list ;    echo \"deb http://us-west-2.ec2.archive.ubuntu.com/ubuntu/ trusty universe\" \u003e\u003e/etc/apt/sources.list ;    echo \"deb-src http://us-west-2.ec2.archive.ubuntu.com/ubuntu/ trusty universe\" \u003e\u003e/etc/apt/sources.list ;    echo \"deb http://us-west-2.ec2.archive.ubuntu.com/ubuntu/ trusty multiverse\" \u003e\u003e/etc/apt/sources.list ;    echo \"deb-src http://us-west-2.ec2.archive.ubuntu.com/ubuntu/ trusty multiverse\" \u003e\u003e/etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update --fix-missing \u0026\u0026 apt-get install -y     p7zip-full     ccache     cmake     g++     git     libgif-dev     libwebp-dev     libpng12-dev     libtiff5-dev     libjpeg-dev     libopenjpeg-dev     libboost-dev libboost-filesystem-dev libboost-regex-dev libboost-system-dev libboost-thread-dev libboost-python-dev    software-properties-common     python     wget     libtbb-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"/usr/local/lib64/\" \u003e/etc/ld.so.conf.d/lib64.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"/usr/local/lib/\" \u003e/etc/ld.so.conf.d/lib.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://download.savannah.nongnu.org/releases/openexr/ilmbase-2.2.0.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xvfz ilmbase-2.2.0.tar.gz \u0026\u0026 cd ilmbase-2.2.0 \u0026\u0026 ./configure \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://download.savannah.nongnu.org/releases/openexr/openexr-2.2.0.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xvfz openexr-2.2.0.tar.gz \u0026\u0026 cd openexr-2.2.0 \u0026\u0026 ./configure --disable-ilmbasetest \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/ \u0026\u0026 wget \"https://github.com/OpenImageIO/oiio/archive/Release-1.5.16.tar.gz\" \u0026\u0026 tar xvfz Release-1.5.16.tar.gz \u0026\u0026 cd oiio-Release-1.5.16 \u0026\u0026 mkdir release \u0026\u0026 cd release/ \u0026\u0026 cmake ../ -DCMAKE_BUILD_TYPE=Release \u0026\u0026 make install \u0026\u0026 cd ../.. \u0026\u0026 rm -fr oiio-Release-1.5.16 \u0026\u0026 rm -fr Release-1.5.16.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /root/envtools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./",
            "/root/envtools/"
          ]
        },
        {
          "CmdLine": [
            "mkdir /root/envtools/release \u0026\u0026 cd /root/envtools/release \u0026\u0026 cmake -DCMAKE_BUILD_TYPE=Release  ../ \u0026\u0026 make -j6 install"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}