MetaArgs: null
Stages:
- BaseName: pdonorio/py3api
  Commands:
  - Maintainer: '"Paolo D''Onorio De Meo <p.donoriodemeo@cineca.it>"'
    Name: maintainer
  - Env:
    - Key: GLOBUSFTP
      Value: http://toolkit.globus.org/ftppub/gt6/installers
    Name: env
  - Env:
    - Key: GLOBUSGSIDEB
      Value: $GLOBUSFTP/repo/globus-toolkit-repo_latest_all.deb
    Name: env
  - CmdLine:
    - apt-get update -qq && apt-get install -y     globus-proxy-utils globus-simple-ca
      myproxy     libffi-dev     libfuse2     && apt-get clean autoclean && apt-get
      autoremove -y &&     rm -rf /var/lib/cache /var/lib/log
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir --upgrade pip     py2neo==2.0.9 neomodel==2.0.2      https://github.com/mdantonio/PyVCF/archive/master.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: IRODS4VERSION
      Value: "1.10"
    Name: env
  - Env:
    - Key: IRODSVERSION
      Value: 4.$IRODS4VERSION
    Name: env
  - Env:
    - Key: OSVERSION
      Value: ubuntu14
    Name: env
  - Env:
    - Key: IRODSFTP
      Value: '"ftp://ftp.renci.org/pub/irods"'
    Name: env
  - Env:
    - Key: IRODSRELEASES
      Value: '"$IRODSFTP/releases/$IRODSVERSION/$OSVERSION"'
    Name: env
  - Env:
    - Key: IRODSPKG
      Value: '"icommands"'
    Name: env
  - Env:
    - Key: IRODSDEB
      Value: $IRODSRELEASES/irods-${IRODSPKG}-${IRODSVERSION}-${OSVERSION}-x86_64.deb
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget -q $IRODSDEB && dpkg -i irods*.deb && rm *.deb
    Name: run
    PrependShell: true
  - Env:
    - Key: GSIVERSION
      Value: "1.4"
    Name: env
  - Env:
    - Key: IRODSGSI
      Value: '"$IRODSFTP/plugins/irods_auth_plugin_gsi/$GSIVERSION"'
    Name: env
  - CmdLine:
    - wget $IRODSGSI/irods-auth-plugin-gsi-${GSIVERSION}-${OSVERSION}-x86_64.deb     &&
      ar vx irods-auth*.deb && tar xf data.tar.xz -C / && rm -rf *
    Name: run
    PrependShell: true
  - Env:
    - Key: IRODS_USER
      Value: irods
    Name: env
  - CmdLine:
    - useradd -ms /bin/bash $IRODS_USER
    Name: run
    PrependShell: true
  - Env:
    - Key: GSI_USER
      Value: guest
    Name: env
  - CmdLine:
    - useradd -ms /bin/bash $GSI_USER
    Name: run
    PrependShell: true
  - Env:
    - Key: GSI_ADMIN
      Value: rodsminer
    Name: env
  - CmdLine:
    - useradd -ms /bin/bash $GSI_ADMIN
    Name: run
    PrependShell: true
  - Env:
    - Key: UWSGI_LOGS
      Value: /var/log/uwsgi
    Name: env
  - Env:
    - Key: UWSGI_RUN
      Value: /var/run/uwsgi
    Name: env
  - CmdLine:
    - mkdir -p $UWSGI_LOGS
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $UWSGI_RUN
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R www-data:www-data $UWSGI_LOGS $UWSGI_RUN
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - init.sh
    - /usr/sbin/init
  - CmdLine:
    - sleep
    - infinity
    Name: cmd
    PrependShell: false
  - CmdLine:
    - echo "echo '\nRun Flask server with the command:'\necho '$ ./boot devel'\necho
      ''\necho 'Run tests with $ nose2 -F [test.FOLDER]'\n"     >> /home/$IRODS_USER/.bashrc
    Name: run
    PrependShell: true
  - Name: user
    User: $IRODS_USER
  From:
    Image: pdonorio/py3api
  Name: ""
  Platform: ""
  SourceCode: FROM pdonorio/py3api
