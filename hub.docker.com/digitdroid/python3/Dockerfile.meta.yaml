MetaArgs:
- DefaultValue: 3.6.7-slim-stretch
  Key: PY3_IMAGE
  ProvidedValue: null
  Value: 3.6.7-slim-stretch
Stages:
- BaseName: python:$PY3_IMAGE
  Commands:
  - Key: GOSU_VER
    Name: arg
    Value: "1.11"
  - Key: GOSU_KEY
    Name: arg
    Value: B42F6819007F00F88E364FD4036A9C25BF357DD4
  - Key: TINI_VER
    Name: arg
    Value: v0.18.0
  - Key: TINI_KEY
    Name: arg
    Value: 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7
  - Key: TINI_SUBREAPER
    Name: arg
    Value: "true"
  - Key: KEY_SERVERS
    Name: arg
    Value: '''ha.pool.sks-keyservers.net keyserver.ubuntu.com'''
  - Env:
    - Key: GOSU_VERSION
      Value: $GOSU_VER
    - Key: TINI_VERSION
      Value: $TINI_VER
    - Key: TINI_SUBREAPER
      Value: $TINI_SUBREAPER
    Name: env
  - CmdLine:
    - 'set -ex     && fetchDeps=''ca-certificates gpg dirmngr wget''     && apt-get
      update     && apt-get install -q -y --no-install-recommends $fetchDeps     &&
      rm -rf /var/lib/apt/lists/*     && wget -q -O /usr/local/bin/gosu        "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)"     && wget -q -O /usr/local/bin/gosu.asc        "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc"     && export GNUPGHOME="$(mktemp -d)"     && for
      server in $(/bin/echo -e $KEY_SERVERS | perl -MList::Util=shuffle -e ''print
      shuffle(<>);'') ; do             gpg --no-tty --keyserver "$server" --recv-keys
      $GOSU_KEY && break || : ;        done     && gpg --no-tty --batch --verify /usr/local/bin/gosu.asc
      /usr/local/bin/gosu     && rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc     &&
      chmod +x /usr/local/bin/gosu     && gosu nobody:root bash -c ''whoami && id'''
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -ex     && wget -q -O /usr/local/bin/tini         "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-$(dpkg
      --print-architecture)"     && wget -q -O /usr/local/bin/tini.asc         "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-$(dpkg
      --print-architecture).asc"     && export GNUPGHOME="$(mktemp -d)"     && for
      server in $(/bin/echo -e $KEY_SERVERS | perl -MList::Util=shuffle -e ''print
      shuffle(<>);'') ; do             gpg --no-tty --keyserver "$server" --recv-keys
      $TINI_KEY && break || : ;        done     && gpg --no-tty --batch --verify /usr/local/bin/tini.asc
      /usr/local/bin/tini     && rm -rf "$GNUPGHOME" /usr/local/bin/tini.asc     &&
      chmod +x /usr/local/bin/tini     && tini -vvv -- bash -c ''true'''
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && apt-get update -y     && apt-get install -q -y --no-install-recommends         git
      gcc make gettext libcurl4-openssl-dev         libc6-dev zlib1g-dev libpq-dev
      libexpat1-dev         libxml2-dev libxslt1-dev libjansson-dev libpcre3-dev         libpng-dev
      libfreetype6-dev libjpeg-dev libffi-dev libmagic-dev     && rm -rf /var/cache/apt/*     &&
      rm -rf /usr/share/doc/*     && rm -rf /usr/share/man/*     && rm -rf /var/lib/apt/lists/*     &&
      useradd --uid 1000 --no-create-home --user-group app     && mkdir -p /app     &&
      mkdir -p /venv     && chown app.app -R /app     && chown app.app -R /venv     &&
      gosu app python -m venv /venv     && gosu app /venv/bin/pip install --no-cache-dir
      --upgrade pip setuptools wheel
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '"C.UTF-8"'
    - Key: LC_COLLATE
      Value: C
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: TERM
      Value: '"xterm-256color"'
    - Key: PATH
      Value: '"/venv/bin:${PATH}"'
    - Key: XDG_CACHE_HOME
      Value: '"/venv/cache"'
    - Key: PYTHONENV
      Value: '"/venv"'
    - Key: PYTHONBUFFERED
      Value: "1"
    - Key: PYTHONHASHSEED
      Value: random
    - Key: PIP_TIMEOUT
      Value: "60"
    - Key: PIP_DISABLE_PIP_VERSION_CHECK
      Value: "true"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - tini
    - --
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /app
  - CmdLine:
    - python
    Name: cmd
    PrependShell: false
  From:
    Image: python:$PY3_IMAGE
  Name: ""
  Platform: ""
  SourceCode: FROM python:$PY3_IMAGE
