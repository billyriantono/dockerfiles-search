MetaArgs: null
Stages:
- BaseName: phusion/passenger-ruby19
  Commands:
  - Maintainer: derek.roberts@gmail.com
    Name: maintainer
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - adduser --disabled-password --gecos '' autossh
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927;     echo
      "deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse"       |
      sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list;     apt-get update;     apt-get
      install -y       lynx       mongodb-org-shell=3.2.9       mongodb-org-tools=3.2.9;     apt-get
      autoclean;     apt-get clean;     rm -rf       /var/tmp/*       /var/lib/apt/lists/*       /tmp/*       /usr/share/doc/       /usr/share/doc-base/       /usr/share/man/
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /etc/service/sshd/down;   sed -i     -e 's/#HostKey \/etc/HostKey \/config/'     -e
      's/#PermitRootLogin.*/PermitRootLogin no/'     /etc/ssh/sshd_config;   (       echo
      '';       echo '# Set authorized_keys file for autossh user only';       echo
      '# ';       echo 'Match User autossh';       echo 'AuthorizedKeysFile /config/authorized_keys';   )
      | tee -a /etc/ssh/sshd_config;   (       echo '';       echo '# Keep connections
      alive, 60 second interval';       echo '# ';       echo 'Host *';       echo
      'ServerAliveInterval 60';   ) | tee -a /etc/ssh/ssh_config
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - sed -i -e 's/localhost:27017/composerdb:27017/' config/mongoid.yml;     chown
      -R app:app /app/;     /sbin/setuser app bundle install --path vendor/bundle
    Name: run
    PrependShell: true
  - CmdLine:
    - SRV=rails;     mkdir -p /etc/service/${SRV}/;     (       echo '#!/bin/bash';       echo
      '#';       echo 'set -eu';       echo '';       echo '';       echo '# Stop
      any old instances';       echo '#';       echo 'PIDFILE=/app/tmp/pids/server.pid';       echo
      '[ ! -s ${PIDFILE} ]|| \';       echo '  kill $( cat ${PIDFILE}) || true';       echo
      '';       echo '';       echo '# Start rails, removing pidfile on exit or failure';       echo
      '#';       echo 'cd /app/';       echo '/sbin/setuser app bundle exec rails
      server -p 3002 || \';       echo '  rm ${PIDFILE}';     )        >> /etc/service/${SRV}/run;     chmod
      +x /etc/service/${SRV}/run
    Name: run
    PrependShell: true
  - CmdLine:
    - SRV=support;     mkdir -p /etc/service/${SRV}/;     (       echo '#!/bin/bash';       echo
      '#';       echo 'set -eu';       echo '';       echo '';       echo '# Handle
      ssh config, if necessary';       echo '#';       echo 'touch /config/authorized_keys';       echo
      '[ -s /config/ssh_host_rsa_key ]|| \';       echo '  ssh-keygen -b 4096 -t rsa
      -f /config/ssh_host_rsa_key -q -N ""';       echo '';       echo '';       echo
      '# Stop any old instances';       echo '#';       echo 'PIDFILE=/app/tmp/pids/delayed_job.pid';       echo
      '[ ! -s ${PIDFILE} ]|| \';       echo '  kill $( cat ${PIDFILE}) || true';       echo
      '';       echo '';       echo '# Start delayed job, removing pidfile on exit
      or failure';       echo "#";       echo 'cd /app/';       echo '/sbin/setuser
      app bundle exec /app/script/delayed_job run || \';       echo '  rm ${PIDFILE}';     )        >>
      /etc/service/${SRV}/run;     chmod +x /etc/service/${SRV}/run
    Name: run
    PrependShell: true
  - CmdLine:
    - 'SCRIPT=/mongoMaintenance.sh;   (     echo ''#!/bin/bash'';     echo ''#'';     echo
      ''set -eu'';     echo '''';     echo '''';     echo ''# Mongo eval command with
      server, database and port'';     echo ''#'';     echo ''EVAL="/usr/bin/mongo
      composerdb/query_composer_development --eval"'';     echo '''';     echo '''';     echo
      ''# Set indexes to prevent duplicates'';     echo ''#'';     echo ''${EVAL}
      "db.endpoints.ensureIndex({ base_url : 1 }, { unique: true });"'';     echo
      ''${EVAL} "db.queries.ensureIndex({ title : 1 }, { unique: true });"'';     echo
      ''${EVAL} "db.users.ensureIndex({ username : 1 }, { unique: true });"'';     echo
      '''';     echo '''';     echo ''# Maintenance account'';     echo ''#'';     echo
      ''${EVAL} ''"''"''db.users.insert({ '';     echo ''  "first_name" : "HDC", "last_name"
      : "Maintenance", "username" : '';     echo ''  "maintenance", "email" : "admin@hdcbc.ca",
      "encrypted_password" : '';     echo ''  "\$2a\$10\$mWm0Lp5dcbtX1IzH2C0ayOefiAxO7ZlNCPJqFT10ZlZBQeK31PnbW",
      '';     echo ''  "agree_license" : true, "approved" : true, admin : "false"
      '';     echo ''});''"''";     echo '''';     echo ''# Dump DB'';     echo ''#'';     echo
      ''mongodump --host composerdb --db query_composer_development --out /private/'';   )      >>
      ${SCRIPT};   chmod +x ${SCRIPT};   (     echo ''# Run database dump script (boot,
      2 PST = 10 UTC)'';     echo ''@reboot ''${SCRIPT};     echo ''0 10 * * * ''${SCRIPT};   )     |
      crontab -'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "2774"
    - "3002"
  - Name: volume
    Volumes:
    - /config
    - /private
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  From:
    Image: phusion/passenger-ruby19
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/passenger-ruby19
