{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update;   apt-get install -y --no-install-recommends     build-essential     curl     libfreetype6-dev     libpng12-dev     libzmq3-dev     pkg-config     python     python-dev     rsync     software-properties-common     unzip;   apt-get clean autoclean;   apt-get autoremove -y;   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://bootstrap.pypa.io/get-pip.py;   python get-pip.py;   rm get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install     ipykernel     jupyter     matplotlib     numpy     scipy     sklearn     pandas     Pillow     tensorflow;   python -m ipykernel.kernelspec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6006"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install pandas"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update;   apt-get install -y     wget     git     libhdf5-dev     g++     graphviz;   apt-get clean autoclean;   apt-get autoremove -y;   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install h5py git+git://github.com/fchollet/keras.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install gensim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update;   apt-get install -y     git     software-properties-common     ipython3     libssl-dev     libzmq3-dev     python-zmq     python-pip;   apt-get clean autoclean;   apt-get autoremove -y;   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/torch/distro.git /root/torch --recursive;   cd /root/torch; bash install-deps; ./install.sh -b"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LUA_PATH",
              "Value": "'/root/.luarocks/share/lua/5.1/?.lua;/root/.luarocks/share/lua/5.1/?/init.lua;/root/torch/install/share/lua/5.1/?.lua;/root/torch/install/share/lua/5.1/?/init.lua;./?.lua;/root/torch/install/share/luajit-2.1.0-beta1/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_CPATH",
              "Value": "'/root/.luarocks/lib/lua/5.1/?.so;/root/torch/install/lib/lua/5.1/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/torch/install/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/root/torch/install/lib:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DYLD_LIBRARY_PATH",
              "Value": "/root/torch/install/lib:$DYLD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_CPATH",
              "Value": "'/root/torch/install/lib/?.so;'$LUA_CPATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/facebook/iTorch.git ;   cd iTorch ; luarocks make ;   cd .. ; rm -rf iTorch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install git+git://github.com/ptone/pyosc.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update;   apt-get install -y     libopenblas-dev     libboost-python-dev     liblapack-dev;   git clone https://github.com/davisking/dlib.git /root/dlib;   cd /root/dlib; mkdir build; cd build; cmake ..; cmake --build .;   cd /root/dlib; python setup.py install;   cd /root ; rm -rf dlib;   apt-get clean autoclean;   apt-get autoremove -y;   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/DmitryUlyanov/Multicore-TSNE.git ;   cd Multicore-TSNE ;   pip --no-cache-dir install -r requirements.txt ;   python setup.py install ;   cd .. ; rm -rf Multicore-TSNE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install     scikit-image"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install   cython   git+git://github.com/gatagat/lapjv.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/deepmind/torch-hdf5 ;   cd torch-hdf5 ;   luarocks make hdf5-0-0.rockspec ;   cd .. ;   rm -rf torch-hdf5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update;   apt-get install -y     libprotobuf-dev     protobuf-compiler ;  luarocks install loadcaffe"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}