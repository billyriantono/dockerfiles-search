{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache",
      "SourceCode": "FROM php:7.1-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo 'Europe/Warsaw' \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     openssh-client     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpng12-dev     zlib1g-dev     libssl-dev     libxrender-dev     python-setuptools     g++     gdebi     libmemcached-dev     libcurl4-openssl-dev     imagemagick     libmagickwand-6.q16-dev --no-install-recommends     wget     sendmail     git     ruby     nodejs     npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/lib/x86_64-linux-gnu/ImageMagick-6.8.9/bin-Q16/MagickWand-config /usr/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install -j$(nproc) iconv mcrypt \u0026\u0026     docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-install gd \u0026\u0026     docker-php-ext-install opcache \u0026\u0026     docker-php-ext-install zip \u0026\u0026     docker-php-ext-install pdo_mysql \u0026\u0026     docker-php-ext-install mysqli \u0026\u0026     docker-php-ext-install mbstring"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl channel-update pecl.php.net \u0026\u0026     pecl install redis \u0026\u0026     apt-get install -y libssl-dev \u0026\u0026 pecl install mongodb \u0026\u0026     pecl install xdebug \u0026\u0026     pecl install imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=mongodb.so\" \u003e /usr/local/etc/php/conf.d/ext-mongodb.ini \u0026\u0026     echo \"extension=redis.so\" \u003e /usr/local/etc/php/conf.d/ext-redis.ini \u0026\u0026     echo \"extension=imagick.so\" \u003e /usr/local/etc/php/conf.d/ext-imagick.ini \u0026\u0026     echo \"zend_extension=xdebug.so\" \u003e /usr/local/etc/php/conf.d/ext-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends unzip libpcre3 libpcre3-dev     \u0026\u0026 cd /tmp     \u0026\u0026 curl -sSL -o php7.zip https://github.com/websupport-sk/pecl-memcache/archive/php7.zip     \u0026\u0026 unzip php7     \u0026\u0026 cd pecl-memcache-php7     \u0026\u0026 /usr/local/bin/phpize     \u0026\u0026 ./configure --with-php-config=/usr/local/bin/php-config     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 echo \"extension=memcache.so\" \u003e /usr/local/etc/php/conf.d/ext-memcache.ini     \u0026\u0026 rm -rf /tmp/pecl-memcache-php7 php7.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libmemcached-dev   \u0026\u0026 git clone https://github.com/php-memcached-dev/php-memcached /usr/src/php/ext/memcached   \u0026\u0026 cd /usr/src/php/ext/memcached \u0026\u0026 git checkout -b php7 origin/php7   \u0026\u0026 docker-php-ext-configure memcached   \u0026\u0026 docker-php-ext-install memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_USER",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_RUN_GROUP",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_LOG_DIR",
              "Value": "/var/log/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_LOCK_DIR",
              "Value": "/var/lock/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APACHE_PID_FILE",
              "Value": "/var/run/apache2.pid"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/log/supervisor/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install supervisor-stdout"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./supervisor.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/supervisor/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/supervisor/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s#logfile=/tmp/supervisord.log ;#logfile=/var/log/supervisor/supervisord.log ;#g\" /etc/supervisord.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s#;\\[include\\]#\\[include\\]#g\" /etc/supervisord.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s#;files = relative/directory/\\*.ini#files = /etc/supervisor/conf.d/\\*.conf#g\" /etc/supervisord.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz -O wkhtmltox.tar.xz \u0026\u0026     tar xf wkhtmltox.tar.xz \u0026\u0026     mv wkhtmltox/bin/* /usr/local/bin/ \u0026\u0026     rm -Rf wkhtmltox*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./start.sh",
            "/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3306"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}