MetaArgs: null
Stages:
- As: requirements
  BaseName: jupyter/base-notebook
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - "set -xe \t&& baseDeps='build-essential \t\t\tcurl \t\t\tautoconf \t\t\tdpkg-dev
      \t\t\tgit \t\t\tmake \t\t\tg++ \t\t\tgcc \t\t\tlibcurl4-openssl-dev \t\t\tlibssl-dev
      \t\t\tlibncurses5-dev \t\t\tlibncursesw5-dev' \t&& runtimeDeps='libodbc1 \t\t\tlibsctp1
      \t\t\tlibwxgtk3.0' \t&& buildDeps='unixodbc-dev \t\t\tlibsctp-dev \t\t\tlibwxgtk3.0-dev'
      \t&& apt-get update \t&& apt-get install -y --no-install-recommends $baseDeps
      \t&& apt-get install -y --no-install-recommends $runtimeDeps \t&& apt-get install
      -y --no-install-recommends $buildDeps"
    Name: run
    PrependShell: true
  - Env:
    - Key: OTP_VERSION
      Value: '"21.2.5"'
    Name: env
  - CmdLine:
    - "set -xe \t&& OTP_DOWNLOAD_URL=\"https://github.com/erlang/otp/archive/OTP-${OTP_VERSION}.tar.gz\"
      \t&& OTP_DOWNLOAD_SHA256=\"3ff578ab020a714be25d6787b81938df016db375692d4126a28f1303e6e9c165\"
      \t&& curl -fSL -o otp-src.tar.gz \"$OTP_DOWNLOAD_URL\" \t&& echo \"$OTP_DOWNLOAD_SHA256
      \ otp-src.tar.gz\" | sha256sum -c - \t&& export ERL_TOP=\"/usr/src/otp_src_${OTP_VERSION%%@*}\"
      \t&& mkdir -vp $ERL_TOP \t&& tar -xzf otp-src.tar.gz -C $ERL_TOP --strip-components=1
      \t&& rm otp-src.tar.gz \t&& ( cd $ERL_TOP \t  && ./otp_build autoconf \t  &&
      gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t  && ./configure
      --build=\"$gnuArch\" \t  && make -j$(nproc) \t  && make install ) \t&& find
      /usr/local -name examples | xargs rm -rf \t&& apt-get purge -y --auto-remove
      $buildDeps \t&& rm -rf $ERL_TOP /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: REBAR_VERSION
      Value: '"2.6.4"'
    Name: env
  - CmdLine:
    - "set -xe \t&& REBAR_DOWNLOAD_URL=\"https://github.com/rebar/rebar/archive/${REBAR_VERSION}.tar.gz\"
      \t&& REBAR_DOWNLOAD_SHA256=\"577246bafa2eb2b2c3f1d0c157408650446884555bf87901508ce71d5cc0bd07\"
      \t&& mkdir -p /usr/src/rebar-src \t&& curl -fSL -o rebar-src.tar.gz \"$REBAR_DOWNLOAD_URL\"
      \t&& echo \"$REBAR_DOWNLOAD_SHA256 rebar-src.tar.gz\" | sha256sum -c - \t&&
      tar -xzf rebar-src.tar.gz -C /usr/src/rebar-src --strip-components=1 \t&& rm
      rebar-src.tar.gz \t&& cd /usr/src/rebar-src \t&& ./bootstrap \t&& install -v
      ./rebar /usr/local/bin/ \t&& rm -rf /usr/src/rebar-src"
    Name: run
    PrependShell: true
  - Env:
    - Key: REBAR3_VERSION
      Value: '"3.8.0"'
    Name: env
  - CmdLine:
    - "set -xe \t&& REBAR3_DOWNLOAD_URL=\"https://github.com/erlang/rebar3/archive/${REBAR3_VERSION}.tar.gz\"
      \t&& REBAR3_DOWNLOAD_SHA256=\"fc4d08037d39bcc651a4a749f8a5b1a10b2205527df834c2aee8f60725c3f431\"
      \t&& mkdir -p /usr/src/rebar3-src \t&& curl -fSL -o rebar3-src.tar.gz \"$REBAR3_DOWNLOAD_URL\"
      \t&& echo \"$REBAR3_DOWNLOAD_SHA256 rebar3-src.tar.gz\" | sha256sum -c - \t&&
      tar -xzf rebar3-src.tar.gz -C /usr/src/rebar3-src --strip-components=1 \t&&
      rm rebar3-src.tar.gz \t&& cd /usr/src/rebar3-src \t&& HOME=$PWD ./bootstrap
      \t&& install -v ./rebar3 /usr/local/bin/ \t&& rm -rf /usr/src/rebar3-src"
    Name: run
    PrependShell: true
  - Env:
    - Key: ELIXIR_VERSION
      Value: '"v1.8.1"'
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "set -xe \t&& ELIXIR_DOWNLOAD_URL=\"https://github.com/elixir-lang/elixir/archive/${ELIXIR_VERSION}.tar.gz\"
      \t&& ELIXIR_DOWNLOAD_SHA256=\"de8c636ea999392496ccd9a204ccccbc8cb7f417d948fd12692cda2bd02d9822\"
      \t&& curl -fSL -o elixir-src.tar.gz $ELIXIR_DOWNLOAD_URL \t&& echo \"$ELIXIR_DOWNLOAD_SHA256
      \ elixir-src.tar.gz\" | sha256sum -c - \t&& mkdir -p /usr/local/src/elixir \t&&
      tar -xzC /usr/local/src/elixir --strip-components=1 -f elixir-src.tar.gz \t&&
      rm elixir-src.tar.gz \t&& cd /usr/local/src/elixir \t&& make install clean"
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - CmdLine:
    - iex
    Name: cmd
    PrependShell: false
  From:
    Image: jupyter/base-notebook
  Name: requirements
  Platform: ""
  SourceCode: FROM jupyter/base-notebook as requirements
- BaseName: requirements
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - "set -ex; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends
      \    libblas-dev     liblapack-dev     libatlas-base-dev \t\tgit \t&& rm -rf
      /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - CmdLine:
    - "set -xe \t&& git clone https://github.com/pprzetacznik/IElixir.git ielixir
      \  && cd ielixir   && ls -alh   && mix local.hex --force   && mix local.rebar
      --force   && mix deps.get   && mix deps.compile   && ./install_script.sh   &&
      conda install --quiet --yes 'jupyter_console'"
    Name: run
    PrependShell: true
  - CmdLine:
    - start-notebook.sh
    Name: cmd
    PrependShell: false
  From:
    Stage:
      Index: 0
      Named: requirements
  Name: ""
  Platform: ""
  SourceCode: FROM requirements
