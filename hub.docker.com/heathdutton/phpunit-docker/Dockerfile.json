{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "Julien Breux \u003cjulien.breux@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PEAR_PACKAGES",
              "Value": "foo     GULP_VERSION 3.9.1     BOWER_VERSION 1.8.0     NPM_VERSION 3.7.1     NODE_SASS_PLATFORM alpine"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "apk --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing add         bash         ca-certificates         git         curl         unzip         redis         php7         php7-xml         php7-exif         php7-zip         php7-xmlreader         php7-zlib         php7-opcache         php7-mcrypt         php7-openssl         php7-curl         php7-json         php7-dom         php7-phar         php7-mbstring         php7-bcmath         php7-pdo         php7-pdo_pgsql         php7-pdo_sqlite         php7-pdo_mysql         php7-soap         php7-simplexml         php7-xdebug         php7-pcntl         php7-ctype         php7-session         php7-tokenizer         php7-xmlwriter         php7-posix         php7-redis     \u0026\u0026 php --version     \u0026\u0026 php -r \"copy('https://pear.php.net/go-pear.phar', 'go-pear.phar');\"     \u0026\u0026 php go-pear.phar     \u0026\u0026 php -r \"unlink('go-pear.phar');\"     \u0026\u0026 php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"     \u0026\u0026 php composer-setup.php --install-dir=/usr/bin --filename=composer     \u0026\u0026 php -r \"unlink('composer-setup.php');\"     \u0026\u0026 composer require \"phpunit/phpunit:~6.0.6\" --prefer-source --no-interaction     \u0026\u0026 composer require \"phpunit/php-invoker\" --prefer-source --no-interaction     \u0026\u0026 ln -s /tmp/vendor/bin/phpunit /usr/local/bin/phpunit     \u0026\u0026 sed -i 's/nn and/nn, Julien Breux (Docker) and/g' /tmp/vendor/phpunit/phpunit/src/Runner/Version.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk -v --update add         openssh         python         py-pip     \u0026\u0026 pip install packaging==16.8 appdirs==1.4.0 awsebcli==3.7.8 --upgrade --user     \u0026\u0026 ln -s ~/.local/bin/eb /usr/local/bin/eb     \u0026\u0026 apk -v --purge del py-pip     \u0026\u0026 rm /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add         nodejs         nodejs-npm         make     \u0026\u0026 npm install --global --unsafe-perm \"npm@latest\"     \u0026\u0026 npm install --global --unsafe-perm \"bower@${BOWER_VERSION}\"     \u0026\u0026 npm install --global --unsafe-perm \"gulp@${GULP_VERSION}\"     \u0026\u0026 npm install --global --unsafe-perm \"node-sass@latest\"     \u0026\u0026 rm -rf /root/.npm     \u0026\u0026 find / -depth -type d -name test* -exec rm -rf {} \\;     \u0026\u0026 find / -depth -type f -name *.md -exec rm -f {} \\;     \u0026\u0026 find / -depth -type f -name *.yml -exec rm -f {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add rsync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Expression": "RUN [ $PEAR_PACKAGES != \"foo\" ] \u0026\u0026 pear install $PEAR_PACKAGES",
          "Name": "onbuild"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "/usr/local/bin/phpunit"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--help"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}