{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "CmdLine": [
            "groupadd -r mongodb \u0026\u0026 useradd -r -g mongodb mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update       \u0026\u0026 apt-get install -y --no-install-recommends       numactl       \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \u0026\u0026 chmod +x /usr/local/bin/gosu \u0026\u0026 gosu nobody true \u0026\u0026 apt-get purge -y --auto-remove ca-certificates wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "0C49F3730359A14518585931BC711F9BA15703C6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; export GNUPGHOME=\"$(mktemp -d)\"; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; done; gpg --export $GPG_KEYS \u003e /etc/apt/trusted.gpg.d/mongodb.gpg; rm -r \"$GNUPGHOME\"; apt-key list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MONGO_MAJOR",
              "Value": "3.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_VERSION",
              "Value": "3.4.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_PACKAGE",
              "Value": "mongodb-org"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://repo.mongodb.org/apt/debian jessie/mongodb-org/$MONGO_MAJOR main\" \u003e /etc/apt/sources.list.d/mongodb-org.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${MONGO_PACKAGE}=$MONGO_VERSION ${MONGO_PACKAGE}-server=$MONGO_VERSION ${MONGO_PACKAGE}-shell=$MONGO_VERSION ${MONGO_PACKAGE}-mongos=$MONGO_VERSION ${MONGO_PACKAGE}-tools=$MONGO_VERSION python-pip cron \u0026\u0026 pip install awscli \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /var/lib/mongodb \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 mkdir /backup \u0026\u0026 mv /etc/mongod.conf /etc/mongod.conf.orig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker_entrypoint.sh",
            "/docker_entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "backup.sh",
            "/backup.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "restore.sh",
            "/restore.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "sync.sh",
            "/sync.sh"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/backup",
            "/var/log/"
          ]
        },
        {
          "CmdLine": [
            "/docker_entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "backup"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}