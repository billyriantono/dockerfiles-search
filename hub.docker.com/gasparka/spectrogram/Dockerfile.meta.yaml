MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y build-essential                                             cmake                                             g++                                             libi2c-dev                                             libusb-1.0-0-dev                                             avahi-daemon                                             libavahi-client-dev                                             wget                                             qtbase5-dev                                             libqt5svg5-dev                      &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./SoapySDR
    - ./tmp
  - CmdLine:
    - mkdir tmp/build && cd tmp/build && cmake -DCMAKE_INSTALL_PREFIX=/usr .. && make
      install -j8 && rm -rf /tmp
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./SoapyRemote
    - ./tmp
  - CmdLine:
    - mkdir tmp/build && cd tmp/build && cmake -DCMAKE_INSTALL_PREFIX=/usr .. && make
      install -j8 && rm -rf /tmp
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./LimeSuite
    - ./tmp
  - CmdLine:
    - cd tmp/build && cmake -DCMAKE_INSTALL_PREFIX=/usr .. && make install -j8 &&
      cd ../udev-rules/ && sh install.sh && rm -rf /tmp
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./gqrx
    - ./tmp
  - CmdLine:
    - mkdir tmp/build && cd tmp/build && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_STANDARD_LIBRARIES="-lSoapySDR"
      .. && make install -j8 && rm -rf /tmp
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./LimeSDR-Mini_GW/LimeSDR-Mini_bitstreams/LimeSDR-Mini_lms7_trx_HW_1.2_auto.rpd
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./gqrx/default.conf
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker_entrypoint.sh
    - /
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /docker_entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
