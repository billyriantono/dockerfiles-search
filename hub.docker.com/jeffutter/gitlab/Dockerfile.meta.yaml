MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update; apt-get -y -q install lsb-release software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:git-core/ppa;  apt-add-repository -y ppa:brightbox/ruby-ng;  apt-add-repository
      -y ppa:chris-lea/node.js;  echo deb http://us.archive.ubuntu.com/ubuntu/ $(lsb_release
      -cs) universe multiverse >> /etc/apt/sources.list;  echo deb http://us.archive.ubuntu.com/ubuntu/
      $(lsb_release -cs)-updates main restricted universe >> /etc/apt/sources.list;  echo
      deb http://security.ubuntu.com/ubuntu $(lsb_release -cs)-security main restricted
      universe >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo udev hold | dpkg --set-selections;  echo initscripts hold | dpkg --set-selections;  echo
      upstart hold | dpkg --set-selections;  apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y -q nginx ruby2.1 ruby2.1-dev make cmake pkg-config git-core
      openssh-server redis-server checkinstall libgit2-dev libxml2-dev libxslt-dev
      libicu-dev logrotate libpq-dev sudo git openssl nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "install: --no-rdoc --no-ri" > /etc/gemrc;  echo "update: --no-rdoc --no-ri
      " >> /etc/gemrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser --disabled-login --gecos 'GitLab' git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/git;  su git -c "git clone https://github.com/gitlabhq/gitlab-shell.git";  cd
      gitlab-shell;  su git -c "git checkout v1.9.7";  su git -c "cp config.yml.example
      config.yml";  su git -c "./bin/install"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/git;  su git -c "git clone https://github.com/gitlabhq/gitlabhq.git
      gitlab";  cd /home/git/gitlab;  su git -c "git checkout 7-2-stable"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/git/gitlab;  chown -R git tmp/;  chown -R git log/;  chmod -R u+rwX
      log/;  chmod -R u+rwX tmp/;  su git -c "mkdir /home/git/gitlab-satellites";  su
      git -c "mkdir tmp/pids/";  su git -c "mkdir tmp/sockets/";  chmod -R u+rwX tmp/pids/;  chmod
      -R u+rwX tmp/sockets/;  su git -c "mkdir public/uploads";  chmod -R u+rwX public/uploads;  su
      git -c "cp config/unicorn.rb.example config/unicorn.rb";  su git -c 'sed -ie
      "s/127.0.0.1:8080/0.0.0.0:8080/g" config/unicorn.rb';  su git -c "cp config/initializers/rack_attack.rb.example
      config/initializers/rack_attack.rb";  su git -c 'sed -ie "s/# config.middleware.use
      Rack::Attack/config.middleware.use Rack::Attack/" config/application.rb';  su
      git -c "git config --global user.name 'GitLab'";  su git -c "git config --global
      user.email 'gitlab@localhost'";  su git -c "git config --global core.autocrlf
      input"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/git/gitlab;  sed -i -e 's/\$@/-c 5 \$@/g' bin/background_jobs
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/git/gitlab;  su git -c "bundle install --deployment --without development
      test mysql aws"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/git/gitlab;  cp config/database.yml.postgresql config/database.yml
      ;  cp config/gitlab.yml.example config/gitlab.yml ;  sed -ie "/acts_as_taggable_on/d"
      app/models/issue.rb ;  sed -ie "/acts_as_taggable_on/d" app/models/project.rb
      ;  sed -ie "/acts_as_taggable_on/d" app/models/merge_request.rb ;  su git -c
      "bundle exec rake assets:clean RAILS_ENV=production";  su git -c "bundle exec
      rake assets:precompile RAILS_ENV=production";  su git -c "git checkout app/models/issue.rb"
      ;  su git -c "git checkout app/models/project.rb" ;  su git -c "git checkout
      app/models/merge_request.rb"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/git/gitlab;  cp lib/support/init.d/gitlab /etc/init.d/gitlab;  chmod
      +x /etc/init.d/gitlab;  update-rc.d gitlab defaults 21
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/git/gitlab;  cp lib/support/logrotate/gitlab /etc/logrotate.d/gitlab
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ie "s/session    required     pam_loginuid.so/#session    required     pam_loginuid.so/"
      /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "22"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - gitlab/database.yml
    - /home/git/gitlab/config/database.yml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - gitlab/gitlab.yml
    - /home/git/gitlab/config/gitlab.yml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - gitlab-shell/config.yml
    - /home/git/gitlab-shell/config.yml
  - CmdLine:
    - chown git:git /home/git/gitlab/config/database.yml /home/git/gitlab/config/gitlab.yml
      /home/git/gitlab-shell/config.yml
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /start.sh
  - CmdLine:
    - chmod +x /start.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
