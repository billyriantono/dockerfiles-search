MetaArgs: null
Stages:
- BaseName: mkenney/devenv-base:latest
  Commands:
  - CmdLine:
    - set -x     && git clone https://github.com/mkenney/.dotfiles.git /root/.dotfiles     &&
      chmod +rx /root     && /root/.dotfiles/init.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && cd /root/.vim/bundle/YouCompleteMe     && ./install.py     &&
      cd /root/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/gocode     &&
      go build     && cd /root/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/tern_runtime     &&
      npm install --production     && cd /root/.vim/bundle/command-t/ruby/command-t     &&
      ruby extconf.rb     && make
    Name: run
    PrependShell: true
  - CmdLine:
    - 'set -x     && groupadd dev     && useradd dev -s /bin/bash -m -g dev -G root     &&
      echo "dev:password" | chpasswd     && echo "dev ALL=(ALL:ALL) NOPASSWD: ALL"
      >> /etc/sudoers     && rsync -a /root/.dotfiles/ /home/dev/.dotfiles/     &&
      chown -R dev:dev /home/dev/.dotfiles     && sudo -u dev /home/dev/.dotfiles/init.sh'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/devenv
    - /usr/local/bin/devenv
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - _image
    - /_image
  - CmdLine:
    - set -x     && cp -R /_image/network /home/dev/network     && chown -R dev:dev
      /home/dev/network     && cp -f /_image/network/sshd_config /etc/ssh/sshd_config     &&
      /etc/init.d/ssh start     && cp -f /_image/network/mountenv /usr/local/bin     &&
      chmod 0755 /usr/local/bin/mountenv     && cp -f /_image/network/umountenv /usr/local/bin     &&
      chmod 0755 /usr/local/bin/umountenv     && chmod 777 /mnt
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && groupadd dba -g 201 -o     && useradd oracle -u 102 -o -s /bin/bash
      -m -g dba     && echo "oracle:password" | chpasswd     && cd /_image     &&
      dpkg -i oracle-instantclient${ORACLE_VERSION_SHORT}-basic_${ORACLE_VERSION_LONG}_amd64.deb     &&
      dpkg -i oracle-instantclient${ORACLE_VERSION_SHORT}-devel_${ORACLE_VERSION_LONG}_amd64.deb     &&
      dpkg -i oracle-instantclient${ORACLE_VERSION_SHORT}-sqlplus_${ORACLE_VERSION_LONG}_amd64.deb     &&
      mkdir -p /oracle/product     && ln -s $ORACLE_HOME /oracle/product/latest     &&
      mkdir -p /oracle/product/latest/network/admin     && rm -f /oracle-instantclient${ORACLE_VERSION_SHORT}-basic_${ORACLE_VERSION_LONG}_amd64.deb     &&
      rm -f /oracle-instantclient${ORACLE_VERSION_SHORT}-devel_${ORACLE_VERSION_LONG}_amd64.deb     &&
      rm -f /oracle-instantclient${ORACLE_VERSION_SHORT}-sqlplus_${ORACLE_VERSION_LONG}_amd64.deb
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php/conf.d
    Name: env
  - Env:
    - Key: server_env
      Value: dev
    Name: env
  - CmdLine:
    - set -x     && apt-get install -qqy         libaio1         libicu-dev         libpcre3-dev         libvpx-dev         libwebp-dev         libxpm-dev         libxml2-dev         php-pear
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && cp /usr/include/oracle/${ORACLE_VERSION_SHORT}/client64/* /oracle/product/latest/     &&
      cd /oracle/product/latest     && ln -s lib/libnnz11.so       libnnz.so     &&
      ln -s lib/libnnz11.so       libnnz11.so     && ln -s lib/libclntsh.so.11.1 libclntsh.so     &&
      ln -s lib/libclntsh.so.11.1 libclntsh.so.11.1     && echo "instantclient,/oracle/product/latest"
      | pecl install oci8-2.1.1.tgz     && echo "extension=oci8.so" > $PHP_INI_DIR/oci8.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && docker-php-source extract     && docker-php-ext-configure gd         --enable-gd-jis-conv         --with-freetype-dir=/usr/include/         --with-jpeg-dir=/usr/include/         --with-webp-dir=/usr/include/         --with-xpm-dir=/usr/include/     &&
      NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1)     && docker-php-ext-install
      -j$NPROC         gd         iconv         intl         mbstring         mcrypt         mysqli         pdo_mysql         pdo_pgsql         pcntl         soap         sockets         zip
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && echo "memory_limit=-1"           > $PHP_INI_DIR/memory_limit.ini     &&
      echo "date.timezone=${TIMEZONE}" > $PHP_INI_DIR/date_timezone.ini     && echo
      "error_reporting=E_ALL"     > $PHP_INI_DIR/error_reporting.ini     && echo "display_errors=On"         >
      $PHP_INI_DIR/display_errors.ini     && echo "log_errors=On"             > $PHP_INI_DIR/log_errors.ini     &&
      echo "report_memleaks=On"        > $PHP_INI_DIR/report_memleaks.ini     && echo
      "error_log=syslog"          > $PHP_INI_DIR/error_log.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && yes | pecl install xdebug     && echo "zend_extension=$(find /usr/local/lib/php/extensions/
      -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.coverage_enable=on"
      >> /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.default_enable=on"
      >> /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.remote_autostart=on"
      >> /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.remote_enable=on"
      >> /usr/local/etc/php/conf.d/xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer     && /usr/local/bin/composer config -g secure-http false
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/.composer/vendor/bin:$PATH
    Name: env
  - CmdLine:
    - set -x     && composer global require "codeception/codeception:*"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && apt-get -q -y install graphviz     && pear channel-discover pear.phpdoc.org     &&
      pear install phpdoc/phpDocumentor
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /_image/RpStandard
    - /usr/local/phpcs/RpStandard
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /_image/phpcs-ruleset.xml
    - /usr/local/phpcs/phpcs-ruleset.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /_image/phpmd-ruleset.xml
    - /usr/local/phpmd/phpmd-ruleset.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /_image/run-phpcs-checks
    - /run-phpcs-checks
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /_image/run-phpmd-checks
    - /run-phpmd-checks
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /_image/run-phpsyntax-checks
    - /run-phpsyntax-checks
  - CmdLine:
    - set -x     && cd /usr/local/bin     && curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar     &&
      curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar     && mkdir
      -p /usr/local/phpcs     && cd /usr/local/bin     && curl -OL http://static.phpmd.org/php/latest/phpmd.phar     &&
      mkdir -p /usr/local/phpmd     && chmod +x /usr/local/bin/php*.phar     && chmod
      0755 /run-phpcs-checks     && chmod 0755 /run-phpmd-checks     && chmod 0755
      /run-phpsyntax-checks
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl
      -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl     &&
      chmod +x ./kubectl     && mv ./kubectl /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && pip install --upgrade --user awscli     && sudo -u dev pip install
      --upgrade --user awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && curl -OL https://releases.hashicorp.com/terraform/0.9.4/terraform_0.9.4_linux_amd64.zip     &&
      unzip terraform_0.9.4_linux_amd64.zip     && mv /terraform /usr/local/bin/terraform     &&
      chmod 0755 /usr/local/bin/terraform     && rm -f terraform_0.9.4_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && echo "set tags=/src/tags.devenv,./tags.devenv"          | tee
      /root/.vimrc        >> /home/dev/.vimrc            && echo "export ORACLE_HOME=$(echo
      $ORACLE_HOME)"          | tee /root/.bash_profile >> /home/dev/.bash_profile     &&
      echo "export LD_LIBRARY_PATH=$(echo $LD_LIBRARY_PATH)"  | tee /root/.bash_profile
      >> /home/dev/.bash_profile     && echo "export TNS_ADMIN=$(echo $TNS_ADMIN)"              |
      tee /root/.bash_profile >> /home/dev/.bash_profile     && echo "export CFLAGS=$(echo
      $CFLAGS)"                    | tee /root/.bash_profile >> /home/dev/.bash_profile     &&
      echo "export NLS_LANG=$(echo $NLS_LANG)"                | tee /root/.bash_profile
      >> /home/dev/.bash_profile     && echo "export LANG=$(echo $LANG)"                        |
      tee /root/.bash_profile >> /home/dev/.bash_profile     && echo "export LANGUAGE=$(echo
      $LANGUAGE)"                | tee /root/.bash_profile >> /home/dev/.bash_profile     &&
      echo "export LC_ALL=$(echo $LC_ALL)"                    | tee /root/.bash_profile
      >> /home/dev/.bash_profile     && echo "export TERM=xterm"                                |
      tee /root/.bash_profile >> /home/dev/.bash_profile     && echo "export PATH=$(echo
      $PATH)"                        | tee /root/.bash_profile >> /home/dev/.bash_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && rsync -ac /_image/powerline/ /usr/share/powerline/     && mkdir
      -p /usr/local/powerline     && ln -s /usr/share/powerline/bindings/tmux/powerline.conf
      /usr/local/powerline/powerline.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && apt-get install -qqy postgresql-client
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && apt-get install -qqy         mysql-client
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && updatedb     && apt-get clean     && rm -rf /var/lib/apt/lists/*     &&
      cp /_image/attach.sh /     && cp /_image/build-tags.sh /     && cp /_image/init.sh
      /     && rm -rf /_image
    Name: run
    PrependShell: true
  - Name: user
    User: dev
  - Name: volume
    Volumes:
    - /src
  - Name: workdir
    Path: /src
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: mkenney/devenv-base:latest
  Name: ""
  Platform: ""
  SourceCode: FROM mkenney/devenv-base:latest
