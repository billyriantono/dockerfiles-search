{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.9.18",
      "SourceCode": "FROM phusion/baseimage:0.9.18",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.9.18"
      },
      "Commands": [
        {
          "Maintainer": "needo \u003cneedo@superhero.org\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "usermod -u 99 nobody \u0026\u0026 usermod -g 100 nobody \u0026\u0026 add-apt-repository \"deb http://us.archive.ubuntu.com/ubuntu/ trusty universe multiverse\" \u0026\u0026 add-apt-repository \"deb http://us.archive.ubuntu.com/ubuntu/ trusty-updates universe multiverse\" \u0026\u0026 apt-get update -q \u0026\u0026 apt-get install -qy ca-certificates wget unrar unzip git build-essential libssl-dev libffi-dev autoconf automake bzip2 file g++ gcc imagemagick libbz2-dev libc6-dev libcurl4-openssl-dev libevent-dev libgeoip-dev libglib2.0-dev libjpeg-dev liblzma-dev libmagickcore-dev libmagickwand-dev libmysqlclient-dev libncurses-dev libpng-dev libpq-dev libreadline-dev libsqlite3-dev libtool libwebp-dev libxml2-dev libxslt-dev libyaml-dev make patch xz-utils zlib1g-dev \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man /usr/share/groff /usr/share/info /usr/share/lintian /usr/share/linda /var/cache/man \u0026\u0026 (( find /usr/share/doc -depth -type f ! -name copyright -print0|xargs -0 rm || true )) \u0026\u0026 (( find /usr/share/doc -empty|xargs rmdir || true ))"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/sickrage \u0026\u0026 cd /tmp \u0026\u0026 wget https://github.com/SickRage/SickRage/archive/2016.04.01-1.zip -O sickrage.zip \u0026\u0026 unzip sickrage.zip \u0026\u0026 rm sickrage.zip \u0026\u0026 mv SickRage-*/* /opt/sickrage/ \u0026\u0026 chown -R nobody:users /opt/sickrage"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "2.7.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "7.1.2"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "install_python.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /install_python.sh \u0026\u0026 /bin/bash /install_python.sh \u0026\u0026 rm -f /install_python.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8081"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/downloads"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/tv"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/my_init.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "edge.sh",
            "/etc/my_init.d/edge.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/my_init.d/edge.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/service/sickrage"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "sickrage.sh",
            "/etc/service/sickrage/run"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/service/sickrage/run"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}