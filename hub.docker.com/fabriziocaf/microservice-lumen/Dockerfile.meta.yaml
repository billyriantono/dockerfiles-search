MetaArgs: null
Stages:
- BaseName: php:7.3.8-fpm-alpine
  Commands:
  - Labels:
    - Key: mantainer
      Value: '"developer@fabriziocafolla.com"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Production container"'
    Name: label
  - Env:
    - Key: build_deps
      Value: "autoconf \t\tlibzip-dev         libxslt-dev         freetype-dev         libjpeg-turbo-dev
        \        libpng-dev         freetype-dev"
    Name: env
  - Env:
    - Key: persistent_deps
      Value: "build-base \t\tlibxslt \t\tlibjpeg-turbo \t\tlibpng \t\tfreetype \t\tunzip
        \t\tphp-xml \t\tphp-zip \t\tgit         mysql-client"
    Name: env
  - Name: workdir
    Path: /var/www
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./
    - /var/www
  - CmdLine:
    - chown -R www-data:www-data ./*     && chown -R www-data:www-data ./.*     &&
      find . -type f -exec chmod 644 {} \;     && find . -type d -exec chmod 775 {}
      \;
    Name: run
    PrependShell: true
  - CmdLine:
    - apk upgrade && apk update &&     apk add --no-cache --virtual .build-dependencies
      $build_deps
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache --virtual .persistent-dependencies $persistent_deps
      &&     printf "\n" | pecl install -o -f redis &&     rm -rf /tmp/pear &&     docker-php-ext-enable
      redis
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update &&     docker-php-ext-configure gd         --with-gd         --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/         --with-jpeg-dir=/usr/include/
      &&         NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) &&         docker-php-ext-install
      -j${NPROC} gd &&     docker-php-ext-install mysqli pdo pdo_mysql         xsl         mbstring         zip         opcache         pcntl
      &&         apk del .build-dependencies
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer &&     composer install --no-dev &&     rm -rf /usr/local/bin/composer*
      &&     cp .env.example .env
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  From:
    Image: php:7.3.8-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3.8-fpm-alpine
