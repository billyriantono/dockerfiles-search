{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "continuumio/miniconda3",
      "SourceCode": "FROM continuumio/miniconda3",
      "Platform": "",
      "From": {
        "Image": "continuumio/miniconda3"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install --no-install-recommends -y         apt-utils         dialog         build-essential         vim         curl         unzip         git     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 apt-get clean -y     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/opt/conda/bin/conda config --prepend channels conda-forge     \u0026\u0026 /opt/conda/bin/conda config --prepend channels pytorch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "environment.yml",
            "/tmp/conda-tmp/"
          ]
        },
        {
          "CmdLine": [
            "/opt/conda/bin/conda env update -n base -f /tmp/conda-tmp/environment.yml     \u0026\u0026 rm -rf /tmp/conda-tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter notebook --allow-root --generate-config -y     \u0026\u0026 echo \"c.NotebookApp.password = ''\" \u003e\u003e ~/.jupyter/jupyter_notebook_config.py     \u0026\u0026 echo \"c.NotebookApp.token = ''\" \u003e\u003e ~/.jupyter/jupyter_notebook_config.py     \u0026\u0026 jupyter contrib nbextension install --system     \u0026\u0026 jupyter nbextensions_configurator enable --system     \u0026\u0026 jupyter nbextension enable --py widgetsnbextension     \u0026\u0026 jupyter labextension install @jupyter-widgets/jupyterlab-manager     \u0026\u0026 jupyter labextension install @jupyterlab/toc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/notebook.json",
            "/root/.jupyter/nbconfig/notebook.json"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/entry-point.sh",
            "/entry-point.sh"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /home/user \u0026\u0026     chmod a+x /entry-point.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/user"
        },
        {
          "Name": "expose",
          "Ports": [
            "4545"
          ]
        },
        {
          "CmdLine": [
            "/entry-point.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "shell"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}