MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Env:
    - Key: VERSION
      Value: 1.5.0
    Name: env
  - Env:
    - Key: MYCONTROLLER_URL
      Value: '"https://github.com/mycontroller-org/mycontroller/releases/download/${VERSION}.Final/mycontroller-dist-standalone-${VERSION}-bundle.tar.gz"'
    Name: env
  - Labels:
    - Key: org.label-schema.maintainer
      Value: '"me codar nl"'
    - Key: org.label-schema.name
      Value: '"mycontroller"'
    - Key: org.label-schema.description
      Value: '"Mycontroller running on Alpine Linux"'
    - Key: org.label-schema.version
      Value: '"${VERSION}"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/githubcdr/docker-mycontroller"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - apk add --update --no-cache s6 ca-certificates openjdk8-jre-base wget tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget $MYCONTROLLER_URL -O mycontroller.tar.gz \t&& tar zxf mycontroller.tar.gz
      -C /usr/local \t&& rm -f /tmp/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/root/
    - /
  - CmdLine:
    - chmod +x /service/*/run
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 1883/tcp
    - 8443/tcp
  - CmdLine:
    - /bin/s6-svscan
    - /service
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
