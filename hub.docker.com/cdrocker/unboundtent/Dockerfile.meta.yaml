MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Labels:
    - Key: version
      Value: '"44"'
    Name: label
  - Env:
    - Key: color_prompt
      Value: "yes"
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Env:
    - Key: TERM
      Value: xterm-color
    Name: env
  - Env:
    - Key: NO_PROXY
      Value: 127.0.0.1
    Name: env
  - Env:
    - Key: no_proxy
      Value: 127.0.0.1
    Name: env
  - CmdLine:
    - apt-get update -q
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install apt-utils locales iputils-ping iputils-arping iputils-tracepath
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install mc nano vim curl wget -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install build-essential -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install git subversion -y
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp && echo "go1.12.5" > $HOME/.go_version &&      wget -q https://storage.googleapis.com/golang/getgo/installer_linux
      &&     chmod +x installer_linux &&     ./installer_linux &&     . /root/.bash_profile
      &&     rm /tmp/installer_linux
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install python3 python3-setuptools python3-virtualenv python3-venv python3-pip
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/python3 /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/pip3 /usr/bin/pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ipdb ipython
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install oci-cli awscli boto3
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     git clone -q https://github.com/ansible/ansible.git -b "v2.8.0"
      --single-branch --depth 1 &&     cd /tmp/ansible && python setup.py build install
      && rm -rf /tmp/ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://releases.hashicorp.com/terraform/0.12.19/terraform_0.12.19_linux_amd64.zip
      > terraform_0.12.19_linux_amd64.zip &&     unzip terraform_0.12.19_linux_amd64.zip
      -d /bin &&     rm -f terraform_0.12.19_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp     && wget -q https://releases.hashicorp.com/packer/1.5.1/packer_1.5.1_linux_amd64.zip     &&
      unzip packer_1.5.1_linux_amd64.zip     && mv packer /usr/local/bin/     && rm
      -rf packer_1.5.1_linux_amd64.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - locale-gen
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/.bashrc
    - /root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/.bashrc_orig
    - /root
  - CmdLine:
    - chmod 600 /root/.bashrc /root/.bashrc_orig
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
