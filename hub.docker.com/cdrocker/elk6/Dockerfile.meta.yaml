MetaArgs: null
Stages:
- BaseName: anapsix/alpine-java:latest
  Commands:
  - Env:
    - Key: VERSION
      Value: 6.2.3
    Name: env
  - Env:
    - Key: PKGS
      Value: '"s6 ca-certificates openssl wget unzip git tar nodejs coreutils"'
    Name: env
  - Env:
    - Key: ES_URL
      Value: '"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${VERSION}.tar.gz"'
    Name: env
  - Env:
    - Key: LS_URL
      Value: '"https://artifacts.elastic.co/downloads/logstash/logstash-${VERSION}.tar.gz"'
    Name: env
  - Env:
    - Key: K_URL
      Value: '"https://artifacts.elastic.co/downloads/kibana/kibana-${VERSION}-linux-x86_64.tar.gz"'
    Name: env
  - Env:
    - Key: GEOCITY_URL
      Value: '"http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz"'
    Name: env
  - Labels:
    - Key: org.label-schema.maintainer
      Value: '"me codar nl"'
    - Key: org.label-schema.name
      Value: '"elk6"'
    - Key: org.label-schema.description
      Value: '"Docker version of Elasticsearch, Logstash and Kibana 6 based on Alpine
        Linux"'
    - Key: org.label-schema.version
      Value: '"${VERSION}"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/githubcdr/docker-elk"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - "apk    add --update --no-cache ${PKGS} \t&& mkdir -p /opt/elasticsearch /opt/kibana
      /opt/logstash/patterns /opt/logstash/databases /var/lib/elasticsearch \t&& adduser
      -D -h /opt/elasticsearch elasticsearch \t&& adduser -D -h /opt/logstash logstash
      \t&& adduser -D -h /opt/kibana kibana \t&& wget -q $ES_URL -O elasticsearch.tar.gz
      \t&& wget -q $LS_URL -O logstash.tar.gz \t&& wget -q  $K_URL -O kibana.tar.gz
      \t&& wget -q $GEOCITY_URL -O geocity.gz \t&& tar -zxf elasticsearch.tar.gz --strip-components=1
      -C /opt/elasticsearch \t&& tar -zxf logstash.tar.gz --strip-components=1 -C
      /opt/logstash \t&& tar -zxf kibana.tar.gz --strip-components=1 -C /opt/kibana
      \t&& gunzip -c geocity.gz > /opt/logstash/databases/GeoLiteCity.dat \t&& git
      clone https://github.com/logstash-plugins/logstash-patterns-core.git \t&& cp
      -a logstash-patterns-core/patterns/* /opt/logstash/patterns/ \t&& /opt/logstash/bin/logstash-plugin
      install logstash-input-beats \t&& /opt/elasticsearch/bin/elasticsearch-plugin
      install ingest-user-agent \t&& /opt/elasticsearch/bin/elasticsearch-plugin install
      ingest-geoip \t&& ln -s /opt/jdk/bin/java /usr/bin/java \t&& rm -rf /tmp/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/root/
    - /
  - CmdLine:
    - chmod a+x /service/*/run
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 5044/tcp
    - 5601/tcp
    - 9200/tcp
    - 9300/tcp
  - Name: volume
    Volumes:
    - /var/lib/elasticsearch
  - CmdLine:
    - /bin/s6-svscan
    - /service
    Name: entrypoint
    PrependShell: false
  From:
    Image: anapsix/alpine-java:latest
  Name: ""
  Platform: ""
  SourceCode: FROM anapsix/alpine-java:latest
