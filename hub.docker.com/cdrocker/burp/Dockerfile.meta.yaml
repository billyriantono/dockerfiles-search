MetaArgs: null
Stages:
- As: build
  BaseName: alpine:latest
  Commands:
  - Labels:
    - Key: org.label-schema.maintainer
      Value: '"me codar nl"'
    - Key: org.label-schema.name
      Value: '"burp"'
    - Key: org.label-schema.description
      Value: '"Docker version of Burp based on Alpine Linux"'
    - Key: org.label-schema.version
      Value: '"1.0"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/githubcdr/docker-burp"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - "apk add --update --no-cache git ca-certificates alpine-sdk autoconf \t   automake
      openssl openssl-dev uthash uthash-dev librsync librsync-dev acl-dev ncurses-dev
      zlib-dev \t&& mkdir /app /conf \t&& git clone git://github.com/grke/burp.git
      \t&& cd burp \t&& autoreconf -vif \t&& sed -i '/LT_INIT(disable-static)/d' ./configure
      \t&& ./configure --prefix=/app --sysconfdir=/conf \t&& make \t&& make install-strip
      \t&& make install-configs"
    Name: run
    PrependShell: true
  From:
    Image: alpine:latest
  Name: build
  Platform: ""
  SourceCode: FROM alpine:latest AS build
- BaseName: alpine:latest
  Commands:
  - CmdLine:
    - "mkdir /app /conf \t&& apk add --update --no-cache bash librsync uthash openssl
      ca-certificates ncurses libacl"
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /app
    - /app
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /conf
    - /conf
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
