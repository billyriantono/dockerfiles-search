{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:cli",
      "SourceCode": "FROM php:cli",
      "Platform": "",
      "From": {
        "Image": "php:cli"
      },
      "Commands": [
        {
          "Maintainer": "mamiefurax \u003cmamiefurax@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "\"Europe/Paris\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 \tapt-get install --no-install-recommends -qy libmcrypt-dev zlib1g-dev sudo zlib1g-dev libidn11-dev curl libcurl3 libpcre3-dev libcurl4-openssl-dev libevent-dev php-http php5-dev wget git ssh graphviz libicu-dev \u0026\u0026 \tapt-get autoremove -yq --purge \u0026\u0026 \trm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/* \u0026\u0026 \tdocker-php-ext-install mcrypt \u0026\u0026 \tdocker-php-ext-install zip \u0026\u0026 \tdocker-php-ext-install mbstring \u0026\u0026 \tdocker-php-ext-install intl \u0026\u0026 \tpecl install raphf \u0026\u0026 \tpecl install propro \u0026\u0026 \techo \"extension=raphf.so\" \u003e\u003e /usr/local/etc/php/conf.d/pecl-http.ini \u0026\u0026      \techo \"extension=propro.so\" \u003e\u003e /usr/local/etc/php/conf.d/pecl-http.ini \u0026\u0026      \tpecl install pecl_http \u0026\u0026      \techo \"extension=http.so\" \u003e\u003e /usr/local/etc/php/conf.d/pecl-http.ini \u0026\u0026 \tpecl install xdebug \u0026\u0026 \techo \"zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20131226/xdebug.so\" \u003e /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026 \tpecl install -f xhprof \u0026\u0026 \techo \"extension=xhprof.so\" \u003e /usr/local/etc/php/conf.d/xhprof.ini \u0026\u0026 \techo \"date.timezone = $TZ\" \u003e /usr/local/etc/php/conf.d/timezone.ini \u0026\u0026 \techo \"phar.readonly = Off\" \u003e /usr/local/etc/php/conf.d/phar.ini \u0026\u0026 \techo \"display_errors = On\" \u003e\u003e /usr/local/etc/php/conf.d/errors_reporting.ini \u0026\u0026 \techo \"error_reporting = E_ALL\" \u003e\u003e /usr/local/etc/php/conf.d/errors_reporting.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O -L https://phar.phpunit.de/phpunit.phar \u0026\u0026 \tcurl -O -L https://getcomposer.org/composer.phar \u0026\u0026 \tcurl -O -L https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar \u0026\u0026 \tcurl -O -L https://github.com/Behat/Behat/releases/download/v3.0.15/behat.phar \u0026\u0026 \tcurl -O -L http://get.sensiolabs.org/php-cs-fixer.phar \u0026\u0026 \tchmod +x /phpunit.phar /composer.phar /behat.phar /php-cs-fixer.phar /phpcs.phar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /Symfony2-coding-standard \u0026\u0026 git clone git://github.com/escapestudios/Symfony2-coding-standard.git /Symfony2-coding-standard"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/phpcs.phar --config-set installed_paths /Symfony2-coding-standard"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export VERSION=`php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\"`     \u0026\u0026 curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/${VERSION}     \u0026\u0026 tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp     \u0026\u0026 mv /tmp/blackfire-*.so `php -r \"echo ini_get('extension_dir');\"`/blackfire.so     \u0026\u0026 echo \"extension=blackfire.so\\nblackfire.agent_socket=8707\" \u003e /usr/local/etc/php/conf.d/blackfire.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"memory_limit=-1\" \u003e /usr/local/etc/php/conf.d/memory-limit.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app"
          ]
        }
      ]
    }
  ]
}