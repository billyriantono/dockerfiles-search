{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "padlock-cloud",
      "BaseName": "golang:alpine",
      "SourceCode": "FROM golang:alpine as padlock-cloud",
      "Platform": "",
      "As": "padlock-cloud",
      "From": {
        "Image": "golang:alpine"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/go/src/github.com/maklesoft/padlock-cloud"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk --no-cache add git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -u github.com/kardianos/govendor \u0026\u0026     govendor sync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "CGO_ENABLED=0 GOOS=linux go build -a -v -installsuffix cgo -o padlock-cloud main.go"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Key": "user",
          "Name": "arg",
          "Value": "padlock-cloud"
        },
        {
          "Key": "uid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "group",
          "Name": "arg",
          "Value": "padlock-cloud"
        },
        {
          "Key": "gid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "WORKDIR",
          "Name": "arg",
          "Value": "/opt/padlock-cloud"
        },
        {
          "Env": [
            {
              "Key": "PC_CONFIG_PATH",
              "Value": "\"\""
            },
            {
              "Key": "PC_LOG_FILE",
              "Value": "${WORKDIR}/logs/info.log"
            },
            {
              "Key": "PC_ERR_FILE",
              "Value": "${WORKDIR}/logs/error.log"
            },
            {
              "Key": "PC_NOTIFY_ERRORS",
              "Value": "\"\""
            },
            {
              "Key": "PC_LEVELDB_PATH",
              "Value": "${WORKDIR}/db"
            },
            {
              "Key": "PC_EMAIL_SERVER",
              "Value": "\"\""
            },
            {
              "Key": "PC_EMAIL_PORT",
              "Value": "\"\""
            },
            {
              "Key": "PC_EMAIL_USER",
              "Value": "\"\""
            },
            {
              "Key": "PC_EMAIL_PASSWORD",
              "Value": "\"\""
            },
            {
              "Key": "PC_PORT",
              "Value": "8080"
            },
            {
              "Key": "PC_ASSETS_PATH",
              "Value": "${WORKDIR}/assets"
            },
            {
              "Key": "PC_TLS_CERT",
              "Value": "\"\""
            },
            {
              "Key": "PC_TLS_KEY",
              "Value": "\"\""
            },
            {
              "Key": "PC_BASE_URL",
              "Value": "http://localhost"
            },
            {
              "Key": "PC_CORS",
              "Value": "1"
            },
            {
              "Key": "PC_TEST",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup -g ${gid} -S ${group} \u0026\u0026    adduser -u ${uid} -D -S -G ${group} ${user}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${WORKDIR} \u0026\u0026 mkdir -p ${WORKDIR}/db \u0026\u0026 mkdir -p ${WORKDIR}/logs \u0026\u0026    mkdir -p ${WORKDIR}/ssl \u0026\u0026 touch ${WORKDIR}/logs/info.log \u0026\u0026 touch ${WORKDIR}/logs/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk --no-cache add su-exec ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${WORKDIR}"
        },
        {
          "Chown": "",
          "From": "padlock-cloud",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/github.com/maklesoft/padlock-cloud/padlock-cloud",
            "/usr/local/bin"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "assets",
            "./assets"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$WORKDIR/assets",
            "$WORKDIR/db",
            "$WORKDIR/logs",
            "$WORKDIR/ssl"
          ]
        },
        {
          "CmdLine": [
            "/bin/sh",
            "./docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "8080",
            "8443"
          ]
        },
        {
          "CmdLine": [
            "padlock-cloud",
            "runserver"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}