{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "benboarder/mypost-ui-ngx:latest",
      "SourceCode": "FROM benboarder/mypost-ui-ngx:latest",
      "Platform": "",
      "From": {
        "Image": "benboarder/mypost-ui-ngx:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "name",
              "Value": "\"mypost-ui-testing\""
            },
            {
              "Key": "maintainer",
              "Value": "\"DDCTeamWookie \u003cDLDDCTeamWookie@auspost.com.au\u003e\""
            },
            {
              "Key": "version",
              "Value": "\"1.0\""
            },
            {
              "Key": "description",
              "Value": "\"The headless docker container for MyPost Consumer UI automated testing\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "\"/usr/share/zoneinfo/Australia/Melbourne\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "warn"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "display-chromium",
            "/usr/bin/display-chromium"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "xvfb-chromium",
            "/usr/bin/xvfb-chromium"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "xvfb-chromium-webgl",
            "/usr/bin/xvfb-chromium-webgl"
          ]
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y       xvfb       libosmesa6       libgconf-2-4  \u0026\u0026 wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb  \u0026\u0026 (dpkg -i google-chrome-stable_current_amd64.deb; apt-get -fy install; rm google-chrome-stable_current_amd64.deb; apt-get clean; rm -rf /var/lib/apt/lists/* )  \u0026\u0026 mv /usr/bin/google-chrome /usr/bin/google-chrome.real  \u0026\u0026 mv /opt/google/chrome/google-chrome /opt/google/chrome/google-chrome.real  \u0026\u0026 rm /etc/alternatives/google-chrome  \u0026\u0026 ln -s /opt/google/chrome/google-chrome.real /etc/alternatives/google-chrome  \u0026\u0026 ln -s /usr/bin/xvfb-chromium /usr/bin/google-chrome  \u0026\u0026 ln -s /usr/bin/xvfb-chromium /usr/bin/chromium-browser  \u0026\u0026 ln -s /usr/lib/x86_64-linux-gnu/libOSMesa.so.6 /opt/google/chrome/libosmesa.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends     bzip2     unzip     xz-utils     libgconf-2-4     apt-utils     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 mkdir /protractor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "webdriver-versions.js",
            "./"
          ]
        },
        {
          "CmdLine": [
            "npm install -g protractor@4.0.14 minimist@1.2.0 \u0026\u0026     webdriver-manager update \u0026\u0026     echo 'deb http://deb.debian.org/debian jessie-backports main' \u003e /etc/apt/sources.list.d/jessie-backports.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo '#!/bin/sh';     echo 'set -e';     echo;     echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"';   } \u003e /usr/local/bin/docker-java-home   \u0026\u0026 chmod +x /usr/local/bin/docker-java-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8u131"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_DEBIAN_VERSION",
              "Value": "8u131-b11-1~bpo8+1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CA_CERTIFICATES_JAVA_VERSION",
              "Value": "20161107~bpo8+1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y     openjdk-8-jdk=\"$JAVA_DEBIAN_VERSION\"     ca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\"   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/var/lib/dpkg/info/ca-certificates-java.postinst configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "protractor.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "environment",
            "/etc/sudoers.d/"
          ]
        },
        {
          "Env": [
            {
              "Key": "DBUS_SESSION_BUS_ADDRESS",
              "Value": "/dev/null"
            },
            {
              "Key": "SCREEN_RES",
              "Value": "1280x1024x24"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/protractor"
        },
        {
          "CmdLine": [
            "/protractor.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "$USER_ID"
        }
      ]
    }
  ]
}