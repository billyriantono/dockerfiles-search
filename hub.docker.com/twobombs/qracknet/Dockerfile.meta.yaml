MetaArgs: null
Stages:
- BaseName: twobombs/cudacluster
  Commands:
  - CmdLine:
    - git clone --recursive https://github.com/vm6502q/qrack.git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --recursive https://github.com/SoftwareQuTech/SimulaQron.git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --recursive https://github.com/vm6502q/ProjectQ.git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --recursive https://github.com/XanaduAI/pennylane-pq.git
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y install build-essential cmake openssh-server wget
      vim-common pocl-opencl-icd opencl-headers curl libfreetype6-dev && apt-get clean
      all
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | tee -a
      /etc/apt/sources.list.d/elastic-7.x.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install metricbeat filebeat auditbeat && filebeat
      modules enable elasticsearch && filebeat modules enable system && filebeat modules
      enable osquery
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - metricbeat.yml
    - /etc/metricbeat/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - filebeat.yml
    - /etc/filebeat/filebeat_new.yml
  - CmdLine:
    - cd /qrack/include && mkdir CL
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /qrack && mkdir _build && cd _build && cmake -DENABLE_COMPLEX8=OFF .. &&
      make all && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python3 python3-pip python3-tk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install language-pack-en
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '"en_US.UTF-8"'
    Name: env
  - CmdLine:
    - pip3 install pybind11
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /ProjectQ && pip3 install --user .
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /ProjectQ && pip3 install --user  --global-option="--with-qracksimulator"
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install simulaqron
    Name: run
    PrependShell: true
  - CmdLine:
    - simulaqron set backend projectq
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pennylane_pq
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install qiskit
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/gdrive-org/gdrive/releases/download/2.1.0/gdrive-linux-x64
      && chmod +x gdrive-linux-x64
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O- -q https://s3tools.org/repo/deb-all/stable/s3tools.key | apt-key add
      -
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://s3tools.org/repo/deb-all/stable/s3tools.list -O /etc/apt/sources.list.d/s3tools.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A9B1F3ED19ED2FDED5A5FBC6D49459D8C762B6E6
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run-node
    - /root/
  - CmdLine:
    - chmod 744 /root/run-node
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/logs && mv /var/log/*.log /root/logs/
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
    - "80"
    - 8801-8811
  - CmdLine:
    - /root/run-node
    Name: entrypoint
    PrependShell: true
  From:
    Image: twobombs/cudacluster
  Name: ""
  Platform: ""
  SourceCode: FROM twobombs/cudacluster
