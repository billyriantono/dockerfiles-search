MetaArgs: null
Stages:
- As: static
  BaseName: node:9.4
  Commands:
  - Name: workdir
    Path: /usr/src/teamlogger/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - package-lock.json
    - /usr/src/teamlogger/
  - CmdLine:
    - set -x     && npm install -g gulp-cli     && npm install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/nouvelles/static/
    - /usr/src/teamlogger/src/nouvelles/static/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gulpfile.js
    - /usr/src/teamlogger/
  - CmdLine:
    - gulp build
    Name: run
    PrependShell: true
  From:
    Image: node:9.4
  Name: static
  Platform: ""
  SourceCode: FROM node:9.4 as static
- BaseName: python:3.6-slim-stretch
  Commands:
  - Env:
    - Key: APP_PATH
      Value: /usr/src/teamlogger/
    Name: env
  - Env:
    - Key: LOGS_PATH
      Value: /var/log/
    Name: env
  - Env:
    - Key: APP_STATIC_ROOT
      Value: /srv/teamlogger/static/
    Name: env
  - Env:
    - Key: APP_MEDIA_ROOT
      Value: /srv/teamlogger/media/
    Name: env
  - Env:
    - Key: PYTHONUNBUFFERED
      Value: "1"
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: ${APP_PATH}
    Name: env
  - Env:
    - Key: DJANGO_SETTINGS_MODULE
      Value: teamlogger.settings.production
    Name: env
  - Name: workdir
    Path: ${APP_PATH}
  - CmdLine:
    - "apt-get update &&     apt-get upgrade -y &&     apt-get install -y \tgit \tnginx
      \tsupervisor"
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "daemon off;" >> /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/conf/nginx.conf
    - /etc/nginx/sites-available/default
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/conf/supervisord.conf
    - /etc/supervisor/conf.d/
  - Name: expose
    Ports:
    - "8000"
  - Name: volume
    Volumes:
    - ${LOGS_PATH}
    - ${APP_PATH}
    - ${APP_STATIC_ROOT}
    - ${APP_MEDIA_ROOT}
  - Name: stopsignal
    Signal: SIGTERM
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/requirements_prod.txt
    - src/requirements.txt
    - ${APP_PATH}/
  - CmdLine:
    - pip install --no-cache-dir -r requirements_prod.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/
    - ${APP_PATH}
  - CmdLine:
    - mkdir -p ${APP_STATIC_ROOT} ${APP_MEDIA_ROOT}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/docker-start-server.sh
    - ${APP_PATH}/
  - CmdLine:
    - chmod +x docker-start-server.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: static
    Name: copy
    SourcesAndDest:
    - /usr/src/teamlogger/src/nouvelles/static/
    - ${APP_PATH}/src/nouvelles/static/
  - CmdLine:
    - ./docker-start-server.sh
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.6-slim-stretch
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-slim-stretch
