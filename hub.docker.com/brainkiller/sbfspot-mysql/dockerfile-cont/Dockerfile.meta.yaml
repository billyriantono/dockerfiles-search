MetaArgs: null
Stages:
- BaseName: rails
  Commands:
  - Env:
    - Key: DISCOURSE_VERSION
      Value: 1.5.2
    Name: env
  - Env:
    - Key: HOMEDIR
      Value: /var/www/discourse
    Name: env
  - CmdLine:
    - curl --silent --location https://deb.nodesource.com/setup_4.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -yqq --no-install-recommends     libxml2     nodejs     wget     runit     &&
      npm install uglify-js -g     && npm install svgo -g     && apt-get install -yqq
      --no-install-recommends     advancecomp jhead jpegoptim libjpeg-turbo-progs
      optipng
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /jemalloc && cd /jemalloc     && wget http://www.canonware.com/download/jemalloc/jemalloc-3.6.0.tar.bz2     &&
      tar -xjf jemalloc-3.6.0.tar.bz2 && cd jemalloc-3.6.0 && ./configure && make     &&
      mv lib/libjemalloc.so.1 /usr/lib && cd / && rm -rf /jemalloc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install-imagemagick
    - /tmp/install-imagemagick
  - CmdLine:
    - /tmp/install-imagemagick
    Name: run
    PrependShell: true
  - CmdLine:
    - ruby -e "v='`convert -version`'; ['png','tiff','jpeg','freetype'].each{ |f|
      ((STDERR.puts('no ' + f +  ' support in imagemagick')); exit(-1)) unless v.include?(f)}"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install-pngcrush
    - /tmp/install-pngcrush
  - CmdLine:
    - /tmp/install-pngcrush
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install-gifsicle
    - /tmp/install-gifsicle
  - CmdLine:
    - /tmp/install-gifsicle
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install-pngquant
    - /tmp/install-pngquant
  - CmdLine:
    - /tmp/install-pngquant
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install-nginx
    - /tmp/install-nginx
  - CmdLine:
    - /tmp/install-nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd discourse -s /bin/bash -m -U &&    mkdir -p /var/www && cd /var/www
      &&    git clone https://github.com/discourse/discourse.git &&    cd discourse
      &&    git remote set-branches --add origin tests-passed &&    chown -R discourse:discourse
      $HOMEDIR &&    cd $HOMEDIR &&    bundle install --deployment     --without test
      --without development &&    find $HOMEDIR/vendor/bundle -name tmp -type d -exec
      rm -rf {} +
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd $HOMEDIR     && mkdir -p tmp/pids \t&& mkdir -p tmp/sockets \t&& touch tmp/.gitkeep
      \t&& mkdir -p                    /shared/log/rails \t&& bash -c \"touch -a           /shared/log/rails/{production,production_errors,unicorn.stdout,unicorn.stderr}.log\"
      \t&& bash -c \"ln    -s           /shared/log/rails/{production,production_errors,unicorn.stdout,unicorn.stderr}.log
      $HOMEDIR/log\" \t&& bash -c \"mkdir -p           /shared/{uploads,backups}\"
      \t&& bash -c \"ln    -s           /shared/{uploads,backups} $HOMEDIR/public\"
      \t&& chown -R discourse ."
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/conf.d/discourse.conf
  - CmdLine:
    - sed -i "s/pid \/run\/nginx.pid\;/daemon off\;/" /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/nginx/sites-enabled/default     && mkdir -p /var/nginx/cache
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - service
    - /etc/service
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - policy.xml
    - /usr/local/etc/ImageMagick-6/policy.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rake
    - /usr/local/bin/rake
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: RAILS_ENV
      Value: production
    Name: env
  - Env:
    - Key: RUBY_GC_MALLOC_LIMIT
      Value: "90000000"
    Name: env
  - Env:
    - Key: DISCOURSE_DB_HOST
      Value: postgres
    Name: env
  - Env:
    - Key: DISCOURSE_REDIS_HOST
      Value: redis
    Name: env
  - Env:
    - Key: UNICORN_WORKERS
      Value: "3"
    Name: env
  - Env:
    - Key: UNICORN_SIDEKIQS
      Value: "1"
    Name: env
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /usr/bin/runsvdir
    - -P
    - /etc/service
    Name: cmd
    PrependShell: false
  From:
    Image: rails
  Name: ""
  Platform: ""
  SourceCode: FROM rails
