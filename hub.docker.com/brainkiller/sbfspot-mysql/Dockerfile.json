{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:latest",
      "SourceCode": "FROM debian:latest",
      "Platform": "",
      "From": {
        "Image": "debian:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SBFSPOT_HOME",
              "Value": "/home/sbfspot"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SMADATA",
              "Value": "/var/smadata"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SBFSPOTDIR",
              "Value": "/opt/sbfspot"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "user",
          "Name": "arg",
          "Value": "sbfspot"
        },
        {
          "Key": "group",
          "Name": "arg",
          "Value": "sbfspot"
        },
        {
          "Key": "uid",
          "Name": "arg",
          "Value": "2000"
        },
        {
          "Key": "gid",
          "Name": "arg",
          "Value": "2000"
        },
        {
          "CmdLine": [
            "groupadd -g ${gid} ${group} \t\u0026\u0026 useradd -d \"$SBFSPOT_HOME\" -u ${uid} -g ${gid} -m -s /bin/bash ${user}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends \tbluetooth \tlibbluetooth-dev \tlibboost-all-dev \tsqlite3 \tlibsqlite3-dev \tlibcurl3-dev \tdefault-libmysqlclient-dev \tmake \tg++ \tgit \tmercurial \tca-certificates \tpatch \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$SBFSPOT_HOME/"
        },
        {
          "CmdLine": [
            "git clone https://github.com/SBFspot/SBFspot.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$SBFSPOT_HOME/SBFspot/SBFspot"
        },
        {
          "CmdLine": [
            "make mysql \t\u0026\u0026 make install_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$SBFSPOT_HOME/SBFspot/SBFspotUploadDaemon"
        },
        {
          "CmdLine": [
            "make mysql \t\u0026\u0026 make install_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$SBFSPOT_HOME"
        },
        {
          "CmdLine": [
            "apt-get -y purge \tg++ \tmake \tmercurial \tgit \tpatch \t\u0026\u0026 apt-get -y autoremove \t\u0026\u0026 apt-get -y autoclean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /usr/local/bin/sbfspot.3 $SBFSPOTDIR \t\u0026\u0026 cp $SBFSPOT_HOME/SBFspot/SBFspot/CreateSQLiteDB.sql $SBFSPOTDIR \t\u0026\u0026 cp $SBFSPOT_HOME/SBFspot/SBFspot/CreateMySQL*.sql $SBFSPOTDIR \t\u0026\u0026 rm -rf $SBFSPOT_HOME/SBFspot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start.sh",
            "$SBFSPOTDIR/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x $SBFSPOTDIR/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir $SMADATA \u0026\u0026 chown -R ${user}:${group} $SMADATA"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/smadata",
            "/opt/sbfspot"
          ]
        },
        {
          "Name": "user",
          "User": "${user}"
        },
        {
          "CmdLine": [
            "/opt/sbfspot/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}