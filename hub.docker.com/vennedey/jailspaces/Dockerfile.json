{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Falco Vennedey \"jailspaces@vennedey.net\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DATADIR",
              "Value": "/data"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "http://nginx.org/keys/nginx_signing.key",
            "/tmp/nginx.key"
          ]
        },
        {
          "CmdLine": [
            "apt-key add /tmp/nginx.key \u0026\u0026 rm /tmp/nginx.key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://nginx.org/packages/mainline/debian/ jessie nginx\" \u003e\u003e /etc/apt/sources.list \t\u0026\u0026 echo \"deb http://ftp.fr.debian.org/debian/ jessie main contrib non-free\" \u003e\u003e /etc/apt/sources.list \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install --no-install-recommends --no-install-suggests -y \t\t\t\t\t\tca-certificates \t\t\t\t\t\tnginx \t\t\t\t\t\tnginx-module-xslt \t\t\t\t\t\tnginx-module-geoip \t\t\t\t\t\tnginx-module-image-filter \t\t\t\t\t\tnginx-module-perl \t\t\t\t\t\tnginx-module-njs \t\t\t\t\t\tgettext-base \t\t\t\t\t\tphp5-fpm \t\t\t\t\t\tpython \t\t\t\t\t\tmembers \t\t\t\t\t\twget \t\t\t\t\t\tsudo \t\t\t\t\t\tcron \t\t\t\t\t\tunattended-upgrades \t\t\t\t\t\tvim \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/apt-unattended-upgrade/",
            "/etc/apt/apt.conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/login.defs",
            "/etc/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p $DATADIR /root/init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -b $DATADIR -s /bin/bash -M cert"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/68b32/acme-tiny/master/acme_tiny.py",
            "/usr/local/bin"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/68b32/CertWatch/master/CertWatch",
            "/usr/local/bin/CertWatch"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/sudo",
            "/etc/sudoers.d/cert"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/certconf",
            "/root/init/certconf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/etc-CertWatch",
            "/etc/CertWatch"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/cert.cron",
            "/root/init/cert.cron"
          ]
        },
        {
          "CmdLine": [
            "crontab -u cert /root/init/cert.cron"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown cert:cert /usr/local/bin/acme_tiny.py \u0026\u0026     chmod 700 /usr/local/bin/acme_tiny.py \u0026\u0026     chown cert:cert /usr/local/bin/CertWatch \u0026\u0026     chmod 555 /usr/local/bin/CertWatch \u0026\u0026     chmod 444 /etc/CertWatch \u0026\u0026     chown root:root /etc/sudoers.d/* \u0026\u0026     chmod 440 /etc/sudoers.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd webspaceuser"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/68b32/jailspaces-js/master/js",
            "/usr/local/sbin/"
          ]
        },
        {
          "CmdLine": [
            "chown root:cert /usr/local/sbin/js \u0026\u0026 chmod 550 /usr/local/sbin/js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/jailspaces/conf/",
            "/etc/jailspaces/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/acme_fallback.conf",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/php.ini",
            "/etc/php5/fpm/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/php-fpm.conf",
            "/etc/php5/fpm/php-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/docker-init.sh",
            "/usr/local/sbin/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$DATADIR"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/sbin/docker-init.sh \"$DATADIR\""
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}