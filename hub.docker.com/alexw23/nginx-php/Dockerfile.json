{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alexw23/nginx:latest",
      "SourceCode": "FROM alexw23/nginx:latest",
      "Platform": "",
      "From": {
        "Image": "alexw23/nginx:latest"
      },
      "Commands": [
        {
          "Maintainer": "Marcin Ryzycki \u003cmarcin@m12.io\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files/config/install*",
            "/config/"
          ]
        },
        {
          "CmdLine": [
            "rpm --rebuilddb \u0026\u0026 yum update -y \u0026\u0026   `# Install yum-utils (provides yum-config-manager) + some basic web-related tools...`   yum install -y yum-utils wget patch mysql tar bzip2 unzip openssh-clients rsync \u0026\u0026   `# Install PHP 5.6`   rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm \u0026\u0026   yum-config-manager -q --enable remi \u0026\u0026   yum-config-manager -q --enable remi-php56 \u0026\u0026   yum install -y php-fpm php-bcmath php-cli php-gd php-intl php-mbstring                   php-pecl-imagick php-mcrypt php-mysql php-opcache php-pdo \u0026\u0026   yum install -y --disablerepo=epel php-pecl-redis php-pecl-yaml \u0026\u0026   `# Install libs required to build some gem/npm packages (e.g. PhantomJS requires zlib-devel, libpng-devel)`   yum install -y ImageMagick GraphicsMagick gcc gcc-c++ libffi-devel libpng-devel zlib-devel \u0026\u0026   `# Install common tools needed/useful during Web App development`   `# Install Ruby 2`   yum install -y ruby ruby-devel \u0026\u0026   `# Install/compile other software (Git, NodeJS)`   source /config/install.sh \u0026\u0026   yum clean all \u0026\u0026 rm -rf /tmp/yum* \u0026\u0026   `# Install common npm packages: grunt, gulp, bower, browser-sync`   npm install -g gulp grunt-cli bower browser-sync \u0026\u0026   `# Update RubyGems, install Bundler`   echo 'gem: --no-document' \u003e /etc/gemrc \u0026\u0026 gem update --system \u0026\u0026 gem install bundler \u0026\u0026   `# Disable SSH strict host key checking: needed to access git via SSH in non-interactive mode`   echo -e \"StrictHostKeyChecking no\" \u003e\u003e /etc/ssh/ssh_config \u0026\u0026   curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026   chown www /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "STATUS_PAGE_ALLOWED_IP",
              "Value": "127.0.0.1"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}