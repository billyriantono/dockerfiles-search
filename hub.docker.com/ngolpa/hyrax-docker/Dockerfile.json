{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "vendor",
              "Value": "\"OPeNDAP Incorporated\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "org.opendap.hyrax.version",
              "Value": "\"1.14.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "org.opendap.hyrax.release-date",
              "Value": "\"2017-12-04\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "org.opendap.hyrax.version.is-production",
              "Value": "\"true\""
            }
          ],
          "Name": "label"
        },
        {
          "Maintainer": "support@opendap.org",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Key": "USE_NCWMS",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "USE_NCWMS",
              "Value": "${USE_NCWMS:-\"false\"}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -e \u0026\u0026     if [ $USE_NCWMS = \"true\" ];then echo \"NCWMS: ENABLED\"; else echo \"NCWMS: DISABLED\"; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "DEVELOPER_MODE",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "DEVELOPER_MODE",
              "Value": "${DEVELOPER_MODE:-\"false\"}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -e \u0026\u0026     if [ $DEVELOPER_MODE = \"true\" ];then echo \"DEVELOPER_MODE: ENABLED\"; else echo \"DEVELOPER_MODE: DISABLED\"; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e     \u0026\u0026 yum -y install        tomcat        unzip         which     \u0026\u0026 yum -y update     \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CATALINA_HOME",
              "Value": "/usr/share/tomcat"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CATALINA_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"CATALINA_HOME: $CATALINA_HOME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Adding OPeNDAP Public Security Key\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "OPENDAP_PUBLIC_KEY_FILE",
              "Value": "\"security_at_opendap.org.pub.asc\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENDAP_PUBLIC_KEY_URL",
              "Value": "\"https://www.opendap.org/${OPENDAP_PUBLIC_KEY_FILE}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -e     \u0026\u0026 curl -s $OPENDAP_PUBLIC_KEY_URL \u003e $OPENDAP_PUBLIC_KEY_FILE     \u0026\u0026 gpg --import $OPENDAP_PUBLIC_KEY_FILE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HYRAX_VERSION",
              "Value": "1.14"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIBDAP_VERSION",
              "Value": "3.19.1-1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BES_VERSION",
              "Value": "3.19.1-1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OLFS_VERSION",
              "Value": "1.17.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIBDAP_RPM",
              "Value": "\"https://www.opendap.org/pub/binary/hyrax-${HYRAX_VERSION}/centos-7.x/libdap-${LIBDAP_VERSION}.el7.centos.x86_64.rpm\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BES_RPM",
              "Value": "\"https://www.opendap.org/pub/binary/hyrax-${HYRAX_VERSION}/centos-7.x/bes-${BES_VERSION}.static.el7.centos.x86_64.rpm\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OLFS_WAR_URL",
              "Value": "\"https://www.opendap.org/pub/olfs/olfs-${OLFS_VERSION}-webapp.tgz\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -e     \u0026\u0026 echo \"Retrieving, verifying, and installing libdap. rpm: $LIBDAP_RPM\"     \u0026\u0026 curl -s $LIBDAP_RPM \u003e ./libdap.rpm     \u0026\u0026 curl -s $LIBDAP_RPM.sig \u003e ./libdap.rpm.sig     \u0026\u0026 gpg -v --verify ./libdap.rpm.sig ./libdap.rpm     \u0026\u0026 ls -l ./libdap*     \u0026\u0026 yum -y install ./libdap.rpm     \u0026\u0026 rm -f libdap.*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e     \u0026\u0026 echo \"Retrieving, verifying, and installing besd. rpm: $BES_RPM\"     \u0026\u0026 curl -s ${BES_RPM} \u003e ./bes.rpm     \u0026\u0026 curl -s ${BES_RPM}.sig \u003e ./bes.rpm.sig     \u0026\u0026 gpg -v --verify ./bes.rpm.sig ./bes.rpm     \u0026\u0026 ls -l ./bes*     \u0026\u0026 yum -y install ./bes.rpm     \u0026\u0026 rm -f bes.*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"besdaemon is here: \"`which besdaemon`"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e     \u0026\u0026 echo \"Retrieving And Installing OLFS-${OLFS_VERSION}\"     \u0026\u0026 curl -sfSL ${OLFS_WAR_URL} \u003e olfs-${OLFS_VERSION}.tgz     \u0026\u0026 curl -sfSL ${OLFS_WAR_URL}.sig \u003e olfs-${OLFS_VERSION}.tgz.sig     \u0026\u0026 echo \"Verifying tarball...\"     \u0026\u0026 gpg --verify olfs-${OLFS_VERSION}.tgz.sig olfs-${OLFS_VERSION}.tgz     \u0026\u0026 echo \"Unpacking tarball...\"     \u0026\u0026 tar -C /dev/shm -xzf olfs-${OLFS_VERSION}.tgz     \u0026\u0026 echo \"Unpacking warfile...\"     \u0026\u0026 unzip -o /dev/shm/olfs-${OLFS_VERSION}-webapp/opendap.war -d ${CATALINA_HOME}/webapps/opendap/     \u0026\u0026 echo \"Cleaning up.\"     \u0026\u0026 rm -rf /dev/shm/* olfs-${OLFS_VERSION}.tgz*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e     \u0026\u0026 mkdir -p ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs     \u0026\u0026 chown -R tomcat:tomcat ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs     \u0026\u0026 chmod 700 ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/logs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NCWMS_WAR_URL",
              "Value": "http://search.maven.org/remotecontent?filepath=uk/ac/rdg/resc/ncWMS/2.2.2/ncWMS-2.2.2.war"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -e     \u0026\u0026 if [ $USE_NCWMS = \"true\" ]; then         echo \"Installing ncWMS...\";         curl -sfSL ${NCWMS_WAR_URL} -o /dev/shm/ncWMS.war;         unzip -o /dev/shm/ncWMS.war -d ${CATALINA_HOME}/webapps/ncWMS2/;         rm -rf /dev/shm/*;     else         echo \"ncWMS will NOT be installed.\";     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e     \u0026\u0026 if [ ${DEVELOPER_MODE} = \"true\" ] \u0026\u0026 [ $USE_NCWMS = \"true\" ]; then         echo \"DEVELOPER MODE: Adding ncWMS admin credentials\";         sed -i 'sX\u003c/tomcat-users\u003eX\u003crole rolename=\"ncWMS-admin\"/\u003e \u003cuser username=\"admin\" password=\"admin\" roles=\"ncWMS-admin\"/\u003e \u003c/tomcat-users\u003eX' ${CATALINA_HOME}/conf/tomcat-users.xml;     else         echo \"No ncWMS admin credentials installed.\";     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ncWMS_config.xml",
            "/root/.ncWMS2/config.xml"
          ]
        },
        {
          "CmdLine": [
            "chmod +r /root/.ncWMS2/config.xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "olfs_viewers.xml",
            "/tmp/olfs_viewers.xml"
          ]
        },
        {
          "CmdLine": [
            "set -e     \u0026\u0026 if [ $USE_NCWMS = \"true\" ]; then         mv /tmp/olfs_viewers.xml ${CATALINA_HOME}/webapps/opendap/WEB-INF/conf/viewers.xml;     else         echo \"Skipping OLFS/ncWMS confguration installation.\";     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -e \u0026\u0026 chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8443"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "10022"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "11002"
          ]
        },
        {
          "CmdLine": [
            "set -e \u0026\u0026 chown -R bes /etc/bes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "-"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}