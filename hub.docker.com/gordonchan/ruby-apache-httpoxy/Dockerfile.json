{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.3.1-alpine",
      "SourceCode": "FROM ruby:2.3.1-alpine",
      "Platform": "",
      "From": {
        "Image": "ruby:2.3.1-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Gordon Chan \u003cgithub.com/gchan\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 addgroup -g 82 -S www-data   \u0026\u0026 adduser -u 82 -D -S -G www-data www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HTTPD_PREFIX",
              "Value": "/usr/local/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$HTTPD_PREFIX/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$HTTPD_PREFIX\"   \u0026\u0026 chown www-data:www-data \"$HTTPD_PREFIX\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$HTTPD_PREFIX"
        },
        {
          "Env": [
            {
              "Key": "HTTPD_VERSION",
              "Value": "2.4.23"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HTTPD_SHA1",
              "Value": "5101be34ac4a509b245adb70a56690a84fcc4e7f"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HTTPD_BZ2_URL",
              "Value": "https://www.apache.org/dist/httpd/httpd-$HTTPD_VERSION.tar.bz2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 runDeps='     apr-dev     apr-util-dev   '   \u0026\u0026 apk add --no-cache --virtual .build-deps     $runDeps     ca-certificates     gcc     gnupg     libc-dev     make     openssl     openssl-dev     pcre-dev     tar     \u0026\u0026 wget -O httpd.tar.bz2 \"$HTTPD_BZ2_URL\"   \u0026\u0026 echo \"$HTTPD_SHA1 *httpd.tar.bz2\" | sha1sum -c -   \u0026\u0026 wget -O httpd.tar.bz2.asc \"$HTTPD_BZ2_URL.asc\"   \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"   \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys A93D62ECC3C8EA12DB220EC934EA76E6791485A8   \u0026\u0026 gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2   \u0026\u0026 rm -r \"$GNUPGHOME\" httpd.tar.bz2.asc     \u0026\u0026 mkdir -p src   \u0026\u0026 tar -xvf httpd.tar.bz2 -C src --strip-components=1   \u0026\u0026 rm httpd.tar.bz2   \u0026\u0026 cd src     \u0026\u0026 ./configure     --prefix=\"$HTTPD_PREFIX\"     --enable-mods-shared=reallyall   \u0026\u0026 make -j\"$(getconf _NPROCESSORS_ONLN)\"   \u0026\u0026 make install     \u0026\u0026 cd ..   \u0026\u0026 rm -r src     \u0026\u0026 sed -ri     -e 's!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'     -e 's!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'     \"$HTTPD_PREFIX/conf/httpd.conf\"     \u0026\u0026 runDeps=\"$runDeps $(     scanelf --needed --nobanner --recursive /usr/local       | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'       | sort -u       | xargs -r apk info --installed       | sort -u   )\"   \u0026\u0026 apk add --virtual .httpd-rundeps $runDeps   \u0026\u0026 apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./httpd-foreground",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./httpd.conf",
            "/usr/local/apache2/conf/httpd.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /httpoxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/httpoxy"
          ]
        },
        {
          "CmdLine": [
            "httpd-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}