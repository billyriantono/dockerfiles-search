{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.0-apache",
      "SourceCode": "FROM php:7.0-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.0-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"deb http://ftp.debian.org/debian jessie-backports main\" \u003e\u003e /etc/apt/sources.list     \u0026\u0026 apt-get update     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends         less         libpng12-dev         libjpeg-dev         libxml2-dev         mariadb-client         unzip         sudo         vim         zip     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get -t jessie-backports install -y         python-certbot-apache     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr     \u0026\u0026 docker-php-ext-install         exif         gd         mysqli         opcache         soap         zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"memory_limit = 512M\" \u003e /usr/local/etc/php/php.ini     \u0026\u0026 {         echo 'opcache.memory_consumption=128';         echo 'opcache.interned_strings_buffer=8';         echo 'opcache.max_accelerated_files=4000';         echo 'opcache.revalidate_freq=2';         echo 'opcache.fast_shutdown=1';         echo 'opcache.enable_cli=1';     } \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl         -o /usr/local/bin/wp https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar         -o /run.sh https://raw.githubusercontent.com/visiblevc/wordpress-starter/master/run.sh         -o /composer-installer.php https://getcomposer.org/installer     \u0026\u0026 chmod +x /usr/local/bin/wp /run.sh     \u0026\u0026 php /composer-installer.php --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 sed -i \"s/AllowOverride None/AllowOverride All/g\" /etc/apache2/apache2.conf     \u0026\u0026 echo \"ServerName localhost\" \u003e\u003e /etc/apache2/apache2.conf     \u0026\u0026 a2enmod rewrite expires     \u0026\u0026 service apache2 restart"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug-stable     \u0026\u0026 docker-php-ext-enable xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{         echo \"xdebug.remote_host=172.22.0.1\";         echo \"xdebug.remote_port=9000\";         echo \"xdebug.default_enable=1\";         echo \"xdebug.remote_enable=1\";         echo \"xdebug.remote_connect_back=1\";         echo \"xdebug.profiler_enable=0\";         echo \"xdebug.profiler_enable_trigger=1\";         echo \"xdebug.profiler_output_dir=\\\"/tmp\\\"\";     } \u003e /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /app \u0026\u0026 rm -fr /var/www/html \u0026\u0026 ln -s /app /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$PATH:/app/vendor/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}