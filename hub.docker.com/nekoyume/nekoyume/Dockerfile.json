{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6-slim",
      "SourceCode": "FROM python:3.6-slim",
      "Platform": "",
      "From": {
        "Image": "python:3.6-slim"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends \t\tbuild-essential \t\tlibgmp-dev         pkg-config         dh-autoreconf         wget \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/eficode/wait-for/raw/master/wait-for"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x wait-for"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv wait-for /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "setup.py",
            "/app"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "setup.cfg",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "python -c 'from setup import *; print_install_requires()'         \u003e /tmp/requirements.txt \u0026\u0026     pip install -r /tmp/requirements.txt \u0026\u0026     rm /tmp/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "pip install --trusted-host pypi.python.org -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Key": "_COMMIT_HASH",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "8080"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "_COMMIT_HASH",
              "Value": "${_COMMIT_HASH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "bash",
            "-c"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nekoyume init \u0026\u0026 honcho start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}