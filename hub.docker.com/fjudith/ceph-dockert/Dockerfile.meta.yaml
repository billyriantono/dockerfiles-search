MetaArgs:
- DefaultValue: 10.17.0-slim
  Key: NODE_VERSION
  ProvidedValue: null
  Value: 10.17.0-slim
Stages:
- BaseName: node:${NODE_VERSION}
  Commands:
  - Key: GITHUB_ACCOUNT
    Name: arg
    Value: telefonicaid
  - Key: GITHUB_REPOSITORY
    Name: arg
    Value: iotagent-json
  - Key: DOWNLOAD
    Name: arg
    Value: latest
  - Key: SOURCE_BRANCH
    Name: arg
    Value: master
  - Env:
    - Key: GITHUB_ACCOUNT
      Value: ${GITHUB_ACCOUNT}
    Name: env
  - Env:
    - Key: GITHUB_REPOSITORY
      Value: ${GITHUB_REPOSITORY}
    Name: env
  - Env:
    - Key: DOWNLOAD
      Value: ${DOWNLOAD}
    Name: env
  - Maintainer: FIWARE IoTAgent Team. Telef√≥nica I+D
    Name: maintainer
  - CmdLine:
    - "if [ \"${DOWNLOAD}\" = \"latest\" ] ; \tthen \t\tRELEASE=\"${SOURCE_BRANCH}\";
      \t\techo \"INFO: Building Latest Development from ${SOURCE_BRANCH} branch.\";
      \telif [ \"${DOWNLOAD}\" = \"stable\" ]; \tthen \t\tRELEASE=$(curl -s https://api.github.com/repos/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/releases/latest
      | grep 'tag_name' | cut -d\\\" -f4); \t\techo \"INFO: Building Latest Stable
      Release: ${RELEASE}\"; \telse \t \tRELEASE=\"${DOWNLOAD}\"; \t \techo \"INFO:
      Building Release: ${RELEASE}\"; \tfi && \tRELEASE_CONCAT=$(echo \"$SOURCE_BRANCH\"
      | tr / -); \tapt-get update && \tapt-get install -y  --no-install-recommends
      unzip && \twget --no-check-certificate -O source.zip https://github.com/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/archive/\"${RELEASE}\".zip
      && \tunzip source.zip && \trm source.zip && \tmv \"${GITHUB_REPOSITORY}-${RELEASE_CONCAT}\"
      /opt/iotajson && \tapt-get clean && \tapt-get remove -y unzip && \tapt-get -y
      autoremove"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/iotajson
  - CmdLine:
    - "apt-get update && \tapt-get install -y git && \tnpm install pm2@3.2.2 -g &&
      \techo \"INFO: npm install --production...\" && \tnpm install --production &&
      \tapt-get clean && \tapt-get remove -y git && \tapt-get -y autoremove && \tchmod
      +x docker/entrypoint.sh"
    Name: run
    PrependShell: true
  - Name: user
    User: node
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - Name: expose
    Ports:
    - ${IOTA_HTTP_PORT:-7896}
    - ${IOTA_NORTH_PORT:-4041}
  - CmdLine:
    - docker/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - '-- '
    - config.js
    Name: cmd
    PrependShell: false
  From:
    Image: node:${NODE_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM node:${NODE_VERSION}
