MetaArgs:
- DefaultValue: 8.12.0-slim
  Key: NODE_VERSION
  ProvidedValue: null
  Value: 8.12.0-slim
Stages:
- BaseName: node:${NODE_VERSION}
  Commands:
  - Key: GITHUB_ACCOUNT
    Name: arg
    Value: ging
  - Key: GITHUB_REPOSITORY
    Name: arg
    Value: fiware-pep-proxy
  - Key: DOWNLOAD_TYPE
    Name: arg
    Value: latest
  - Maintainer: FIWARE Wilma PEP Proxy Team. DIT-UPM
    Name: maintainer
  - Name: workdir
    Path: /opt
  - Env:
    - Key: GITHUB_ACCOUNT
      Value: ${GITHUB_ACCOUNT}
    Name: env
  - Env:
    - Key: GITHUB_REPOSITORY
      Value: ${GITHUB_REPOSITORY}
    Name: env
  - Name: workdir
    Path: /
  - CmdLine:
    - "if [ ${DOWNLOAD_TYPE} = \"latest\" ] ; then RELEASE=\"master\"; else RELEASE=$(curl
      -s https://api.github.com/repos/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/releases/latest
      | grep 'tag_name' | cut -d\\\" -f4); fi &&     if [ ${DOWNLOAD_TYPE} = \"latest\"
      ] ; then echo \"INFO: Building Latest Development\"; else echo \"INFO: Building
      Release: ${RELEASE}\"; fi &&   \tapt-get update &&   \tapt-get install -y  --no-install-recommends
      unzip &&   \tcurl https://github.com/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/archive/\"${RELEASE}\".zip
      -L -s -o source.zip  &&   \tunzip source.zip && \trm source.zip && \tmv \"${GITHUB_REPOSITORY}\"-\"${RELEASE}\"
      /opt/fiware-pep-proxy && \trm -rf \"${GITHUB_REPOSITORY}\"-\"${RELEASE}\" &&
      \tapt-get clean && \tapt-get remove -y unzip &&     apt-get -y autoremove"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.js.template
    - /opt/fiware-pep-proxy/config.js
  - Name: workdir
    Path: /opt/fiware-pep-proxy
  - CmdLine:
    - "apt-get install -y  --no-install-recommends make gcc g++ python && \tnpm install
      --production --silent && \trm -rf /root/.npm/cache/* && \tapt-get clean && \tapt-get
      remove -y make gcc g++ python  && \tapt-get -y autoremove"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - ${PEP_PROXY_PORT:-1027}
  - CmdLine:
    - npm
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: node:${NODE_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM node:${NODE_VERSION}
