{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.0.6-fpm-alpine",
      "SourceCode": "FROM php:7.0.6-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.0.6-fpm-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Jason King \u003cjking@cab408.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk add --no-cache nginx mysql-client supervisor curl     bash redis imagemagick-dev zlib-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache libtool build-base autoconf     \u0026\u0026 docker-php-ext-install       -j$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1)       iconv gd mbstring fileinfo curl xmlreader xmlwriter spl ftp mysqli opcache     \u0026\u0026 pecl install imagick     \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 apk del libtool build-base autoconf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "WP_ROOT",
              "Value": "/usr/src/wordpress"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WP_VERSION",
              "Value": "4.7.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WP_SHA1",
              "Value": "7b687f1af589c337124e6247229af209ec1d52c3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WP_DOWNLOAD_URL",
              "Value": "https://wordpress.org/wordpress-$WP_VERSION.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o wordpress.tar.gz -SL $WP_DOWNLOAD_URL     \u0026\u0026 echo \"$WP_SHA1 *wordpress.tar.gz\" | sha1sum -c -     \u0026\u0026 tar -xzf wordpress.tar.gz -C $(dirname $WP_ROOT)     \u0026\u0026 rm wordpress.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -D deployer -s /bin/bash -G www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "wp-config.php",
            "$WP_ROOT"
          ]
        },
        {
          "CmdLine": [
            "chown -R deployer:www-data $WP_ROOT     \u0026\u0026 chmod 640 $WP_ROOT/wp-config.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cron.conf",
            "/etc/crontabs/deployer"
          ]
        },
        {
          "CmdLine": [
            "chmod 600 /etc/crontabs/deployer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar     \u0026\u0026 chmod +x wp-cli.phar     \u0026\u0026 mv wp-cli.phar /usr/local/bin/wp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vhost.conf",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 chown -R www-data:www-data /var/lib/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "stop-supervisor.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}