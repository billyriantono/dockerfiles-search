{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos7",
      "SourceCode": "FROM centos:centos7",
      "Platform": "",
      "From": {
        "Image": "centos:centos7"
      },
      "Commands": [
        {
          "Maintainer": "Jan Weitz \u003cme@janweitz.de\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum --quiet install -y tar       git       gcc       gcc-c++       make       cmake       openssl-static       libcurl-devel       libuuid-devel       c-ares-devel \u0026\u0026       cd /tmp \u0026\u0026 curl -s -O http://git.warmcat.com/cgi-bin/cgit/libwebsockets/snapshot/libwebsockets-1.3-chrome37-firefox30.tar.gz \u0026\u0026       tar xzf libwebsockets-1.3-chrome37-firefox30.tar.gz \u0026\u0026       cd libwebsockets-1.3-chrome37-firefox30 \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 cp lib/libwebsockets.so* /lib64/ \u0026\u0026       cd /tmp \u0026\u0026 git clone http://git.eclipse.org/gitroot/mosquitto/org.eclipse.mosquitto.git mosquitto \u0026\u0026 cd mosquitto \u0026\u0026       git pull \u0026\u0026 git checkout 1.4 \u0026\u0026       sed -i 's/WITH_WEBSOCKETS:=no/WITH_WEBSOCKETS:=yes/' config.mk \u0026\u0026       make binary \u0026\u0026 cp src/mosquitto /usr/local/bin/ \u0026\u0026 cp mosquitto.conf /usr/local/etc/ \u0026\u0026       cd /tmp \u0026\u0026 git clone https://github.com/weitzj/mosquitto-auth-plug.git \u0026\u0026 cd mosquitto-auth-plug \u0026\u0026       cp config.mk.in config.mk \u0026\u0026       sed -i 's/BACKEND_MYSQL ?= yes/BACKEND_MYSQL ?= no/' config.mk \u0026\u0026       sed -i 's/BACKEND_HTTP ?= no/BACKEND_HTTP ?= yes/' config.mk \u0026\u0026       sed -i 's/MOSQUITTO_SRC =/MOSQUITTO_SRC = \\/tmp\\/mosquitto/' config.mk \u0026\u0026       make \u0026\u0026 cp auth-plug.so /lib64/ \u0026\u0026       useradd mosquitto \u0026\u0026       yum --quiet remove -y tar       git       gcc       gcc-c++       make       cmake       openssl-static       libcurl-devel       libuuid-devel       c-ares-devel \u0026\u0026       rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}