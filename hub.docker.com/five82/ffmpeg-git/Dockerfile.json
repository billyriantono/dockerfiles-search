{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "export MAKEFLAGS=\"-j4\" \u0026\u0026 apk --no-cache update \u0026\u0026 apk --no-cache upgrade \u0026\u0026 apk add --no-cache --update   autoconf   automake   binutils   bzip2-dev   cmake   file   fortify-headers   g++   gcc   gmp   isl   libatomic   libc-dev   libgomp   libmagic   libtool   make   mpc1   mpfr3   musl-dev   nasm   yasm \u0026\u0026 apk add --no-cache --update   libgcc   libstdc++   freetype-dev \u0026\u0026 apk add --no-cache --update   bash   coreutils   curl   git \u0026\u0026 mkdir -p /input /output /ffmpeg/ffmpeg_sources \u0026\u0026 cd /ffmpeg/ffmpeg_sources \u0026\u0026 git clone https://github.com/sekrit-twc/zimg.git \u0026\u0026 git clone --depth 1 https://github.com/xiph/opus.git \u0026\u0026 git clone --depth 1 https://git.videolan.org/git/x264 \u0026\u0026 git clone https://github.com/videolan/x265.git \u0026\u0026 curl -O https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 \u0026\u0026 tar xjf ffmpeg-snapshot.tar.bz2 \u0026\u0026 cd /ffmpeg/ffmpeg_sources/zimg \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure \u0026\u0026 make ${MAKEFLAGS} \u0026\u0026 make install \u0026\u0026 cd /ffmpeg/ffmpeg_sources/opus \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure --disable-shared \u0026\u0026 make ${MAKEFLAGS} \u0026\u0026 make install \u0026\u0026 cd /ffmpeg/ffmpeg_sources/x264 \u0026\u0026 ./configure --bindir=\"$HOME/bin\" --enable-static --enable-pic \u0026\u0026 make ${MAKEFLAGS} \u0026\u0026 make install \u0026\u0026 cd /ffmpeg/ffmpeg_sources/x265/build/linux \u0026\u0026 mkdir -p 8bit 10bit \u0026\u0026 cd 10bit \u0026\u0026 cmake -G \"Unix Makefiles\" ../../../source -DHIGH_BIT_DEPTH=ON -DEXPORT_C_API=OFF -DENABLE_SHARED=OFF -DENABLE_CLI=OFF \u0026\u0026 make ${MAKEFLAGS} \u0026\u0026 cd ../8bit \u0026\u0026 ln -sf ../10bit/libx265.a libx265_main10.a \u0026\u0026 cmake -G \"Unix Makefiles\" ../../../source -DEXTRA_LIB=\"x265_main10.a\" -DEXTRA_LINK_FLAGS=-L. -DLINKED_10BIT=ON \u0026\u0026 make ${MAKEFLAGS} \u0026\u0026 mv libx265.a libx265_main.a \u0026\u0026 ar -M \u003c/app/libx265.mri \u0026\u0026 make install \u0026\u0026 cd /ffmpeg/ffmpeg_sources/ffmpeg \u0026\u0026 ./configure --pkg-config-flags=\"--static\" --extra-libs=\"-lpthread -lm\" --disable-debug --disable-doc --disable-ffplay --enable-ffprobe --enable-gpl --enable-libfreetype --enable-libzimg --enable-libopus --enable-libx264 --enable-libx265 \u0026\u0026 make ${MAKEFLAGS} \u0026\u0026 make install \u0026\u0026 hash -r \u0026\u0026 rm -rf /ffmpeg \u0026\u0026 apk del   autoconf   automake   binutils   bzip2-dev   cmake   file   fortify-headers   g++   gcc   gmp   isl   libatomic   libc-dev   libgomp   libmagic   libtool   make   mpc1   mpfr3   musl-dev   nasm   yasm \u0026\u0026 apk del   coreutils   git \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ffmpeg"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}