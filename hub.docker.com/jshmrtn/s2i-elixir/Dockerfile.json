{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jshmrtn/s2i-erlang:21",
      "SourceCode": "FROM jshmrtn/s2i-erlang:21",
      "Platform": "",
      "From": {
        "Image": "jshmrtn/s2i-erlang:21"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ERLANG_VERSION",
              "Value": "21"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELIXIR_VERSION",
              "Value": "1.6.6"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "io.k8s.description",
              "Value": "\"Platform for building and running an elixir app\""
            },
            {
              "Key": "io.k8s.display-name",
              "Value": "\"build-elixir\""
            },
            {
              "Key": "io.openshift.tags",
              "Value": "\"builder,erlang,elixir\""
            },
            {
              "Key": "com.redhat.dev-mode",
              "Value": "\"DEV_MODE:false\""
            },
            {
              "Key": "com.redhat.deployments-dir",
              "Value": "\"/opt/app-root/src\""
            },
            {
              "Key": "name",
              "Value": "\"jshmrtn/s2i-elixir\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Jonatan MÃ¤nnchen \u003cmaennchen@joshmartin.ch\u003e\""
            },
            {
              "Key": "version",
              "Value": "\"$ELIXIR_VERSION-otp-$ERLANG_VERSION\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "0"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 yum install -y --setopt=tsflags=nodocs     autoconf     epel-release     gcc     gcc-c++     git     glibc-devel     make     ncurses-devel     openssl-devel     wxBase   \u0026\u0026 curl -LO \"https://github.com/elixir-lang/elixir/archive/v${ELIXIR_VERSION}.tar.gz\"   \u0026\u0026 tar xf v${ELIXIR_VERSION}.tar.gz   \u0026\u0026 rm -rf v${ELIXIR_VERSION}.tar.gz   \u0026\u0026 cd elixir-${ELIXIR_VERSION}   \u0026\u0026 make clean test   \u0026\u0026 make install   \u0026\u0026 cd ..   \u0026\u0026 rm -rf elixir-${ELIXIR_VERSION}   \u0026\u0026 yum remove -y     autoconf     epel-release     gcc-c++     java-1.8.0-openjdk-devel     ncurses-devel     openssl-devel     wxBase   \u0026\u0026 yum clean all -y   \u0026\u0026 mix local.hex --force   \u0026\u0026 mix local.rebar --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./s2i/bin/",
            "$STI_SCRIPTS_PATH"
          ]
        },
        {
          "CmdLine": [
            "chown -R 1001:0 /opt/app-root \u0026\u0026 chmod -R ug+rwx /opt/app-root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "1001"
        },
        {
          "Env": [
            {
              "Key": "MIX_ENV",
              "Value": "prod"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "$STI_SCRIPTS_PATH/usage"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}