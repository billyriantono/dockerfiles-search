{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openshift/base-centos7",
      "SourceCode": "FROM openshift/base-centos7",
      "Platform": "",
      "From": {
        "Image": "openshift/base-centos7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ERLANG_VERSION",
              "Value": "21.1"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "io.k8s.description",
              "Value": "\"Platform for building and running an erlang app\""
            },
            {
              "Key": "io.k8s.display-name",
              "Value": "\"build-erlang\""
            },
            {
              "Key": "io.openshift.tags",
              "Value": "\"builder,erlang\""
            },
            {
              "Key": "com.redhat.dev-mode",
              "Value": "\"DEV_MODE:false\""
            },
            {
              "Key": "com.redhat.deployments-dir",
              "Value": "\"/opt/app-root/src\""
            },
            {
              "Key": "name",
              "Value": "\"jshmrtn/s2i-erlang\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Jonatan MÃ¤nnchen \u003cmaennchen@joshmartin.ch\u003e\""
            },
            {
              "Key": "version",
              "Value": "\"$ERLANG_VERSION\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 yum install -y --setopt=tsflags=nodocs     git     autoconf     epel-release     gcc     gcc-c++     git     glibc-devel     java-1.8.0-openjdk-devel     make     ncurses-devel     openssl-devel     wxBase   \u0026\u0026 curl -LO http://erlang.org/download/otp_src_${ERLANG_VERSION}.tar.gz   \u0026\u0026 tar xf otp_src_${ERLANG_VERSION}.tar.gz   \u0026\u0026 rm -rf otp_src_${ERLANG_VERSION}.tar.gz   \u0026\u0026 cd otp_src_${ERLANG_VERSION}   \u0026\u0026 export ERL_TOP=`pwd`   \u0026\u0026 LIBS=\"/usr/lib64/libcrypto.so\" ./configure --enable-static-nifs   \u0026\u0026 make   \u0026\u0026 make release_tests   \u0026\u0026 make install   \u0026\u0026 yum remove -y     autoconf     epel-release     gcc     gcc-c++     git     glibc-devel     java-1.8.0-openjdk-devel     make     ncurses-devel     openssl-devel     wxBase   \u0026\u0026 yum clean all -y   \u0026\u0026 cd ..   \u0026\u0026 rm -rf otp_src_${ERLANG_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "localedef -i en_US -f UTF-8 en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_CTYPE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./s2i/bin/",
            "$STI_SCRIPTS_PATH"
          ]
        },
        {
          "CmdLine": [
            "chown -R 1001:0 /opt/app-root \u0026\u0026 chmod -R ug+rwx /opt/app-root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "1001"
        },
        {
          "CmdLine": [
            "$STI_SCRIPTS_PATH/usage"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}