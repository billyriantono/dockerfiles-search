{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.4.3",
      "SourceCode": "FROM ruby:2.4.3",
      "Platform": "",
      "From": {
        "Image": "ruby:2.4.3"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "APPDIR",
              "Value": "\"/caras-app/\""
            },
            {
              "Key": "LANG",
              "Value": "\"C.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "${APPDIR}"
        },
        {
          "CmdLine": [
            "apt-get update -qq  \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install apt-transport-https  \u0026\u0026 curl -sL https://deb.nodesource.com/setup_6.x | bash -  \u0026\u0026 curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -  \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list  \u0026\u0026 apt-get update -qq  \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends    libmagic-dev    libreadline-dev    nmap    nodejs    postgresql-client    rsync    yarn  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*  \u0026\u0026 printf \"install: --no-document\\nupdate: --no-document\\n\" \u003e\u003e ~/.gemrc  \u0026\u0026 gem install bundler  \u0026\u0026 bundle config build.nokogiri --use-system-libraries  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/cache/apt-archive/* /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./",
            "${APPDIR}"
          ]
        },
        {
          "CmdLine": [
            "cp ${APPDIR}/containers/app/docker-entrypoint.sh /usr/local/bin  \u0026\u0026 chmod +x /usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "bin/carash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}