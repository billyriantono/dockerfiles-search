{
  "MetaArgs": [
    {
      "Key": "CUDA_V",
      "DefaultValue": "9.0",
      "ProvidedValue": null,
      "Value": "9.0"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:${CUDA_V}-devel",
      "SourceCode": "FROM nvidia/cuda:${CUDA_V}-devel",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:${CUDA_V}-devel"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CUDA_VERSION",
              "Value": "${CUDA_V}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CUDNN_VERSION",
              "Value": "7.0.5.15"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends       bzip2       g++       git       graphviz       libgl1-mesa-glx       libhdf5-dev       openmpi-bin       cuda-command-line-tools-9-0       wget \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "com.nvidia.cudnn.version",
              "Value": "\"${CUDNN_VERSION}\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         libcudnn7=$CUDNN_VERSION-1+cuda9.0         libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0 \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget --quiet --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-4.4.10-Linux-x86_64.sh \u0026\u0026     /bin/bash /Miniconda3-4.4.10-Linux-x86_64.sh -f -b -p $CONDA_DIR \u0026\u0026     rm Miniconda3-4.4.10-Linux-x86_64.sh \u0026\u0026     echo export PATH=$CONDA_DIR/bin:'$PATH' \u003e /etc/profile.d/conda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda update -n base conda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda update openssl ca-certificates certifi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda config --add channels conda-forge"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "geo"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \u0026\u0026     chown $NB_USER $CONDA_DIR -R \u0026\u0026     mkdir -p /src \u0026\u0026     chown $NB_USER /src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "Key": "python_version",
          "Name": "arg",
          "Value": "3.6"
        },
        {
          "CmdLine": [
            "conda install -y python=${python_version}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda config --set always_yes yes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install https://cntk.ai/PythonWheel/GPU/cntk-2.1-cp36-cp36m-linux_x86_64.whl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir Cython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -c conda-forge     bcolz     h5py     matplotlib     mkl     nose     notebook     pygpu     pyyaml     six     jupyterlab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install     python-dotenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -c conda-forge     numpy     scipy     pandas     tqdm     colorcet     seaborn     networkx     bokeh     datashader"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -c ioam holoviews"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -c pyviz geoviews"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -c conda-forge     Pillow     scikit-image"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -c conda-forge     scikit-learn     six     theano"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install     sklearn_pandas     tensorflow-gpu     tensorboardX     jupyter-tensorboard     livelossplot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install     deap     update_checker     tqdm     stopit     xgboost     scikit-mdr     skrebate     tpot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -c conda-forge     pytorch torchvision cuda90 -c pytorch     \u0026\u0026 conda clean -ya"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install git+https://github.com/pytorch/tnt.git@master"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install torchsummary"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://github.com/keras-team/keras.git /src \u0026\u0026 pip install -e /src[tests] \u0026\u0026     pip install git+git://github.com/keras-team/keras.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -c conda-forge     geopandas     shapely     dask"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install     obspy     pynoddy     gempy     segyio     bruges     welly     fiona     rasterio     simpeg     git+https://github.com/kinverarity1/lasio.git@master     mplstereonet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda clean -yt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "theanorc",
            "/home/$NB_USER/.theanorc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/home/$NB_USER/.jupyter/jupyter_notebook_config.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "smoke.py",
            "/home/$NB_USER/smoke.py"
          ]
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "'/src/:$PYTHONPATH'"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/$NB_USER"
        },
        {
          "Name": "expose",
          "Ports": [
            "6006"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "jupyter lab --port=8888 --ip=0.0.0.0"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}