MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: name
      Value: '"bilby Base Enterprise Linux 7"'
    - Key: maintainer
      Value: '"Gregory Ashton <gregory.ashton@ligo.org>"'
    - Key: date
      Value: '"20190104"'
    Name: label
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update --fix-missing && apt-get install -y libglib2.0-0 libxext6 libsm6
      libxrender1 libgl1-mesa-glx dh-autoreconf build-essential libarchive-dev wget
      curl git libhdf5-serial-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh
      -O ~/miniconda.sh && /bin/bash ~/miniconda.sh -b -p /opt/conda && rm ~/miniconda.sh
      && /opt/conda/bin/conda clean -tipsy && ln -s /opt/conda/etc/profile.d/conda.sh
      /etc/profile.d/conda.sh && echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc
      && echo "conda activate base" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip && LC_ALL=C pip install --upgrade setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y numpy scipy matplotlib pandas
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -c conda-forge deepdish
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install future pycondor>=0.5 configargparse flake8 mock pipenv coverage
      pytest-cov coverage-badge
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install sphinx numpydoc nbsphinx sphinx_rtd_theme sphinx-tabs
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install corner lalsuite astropy gwpy theano
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install cpnest dynesty emcee nestle ptemcee pymc3 pymultinest kombine
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libblas3 libblas-dev liblapack3 liblapack-dev libatlas3-base
      libatlas-base-dev cmake build-essential gfortran
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/farhanferoz/MultiNest.git && (cd MultiNest/MultiNest_v3.11_CMake/multinest
      && mkdir build && cd build && cmake .. && make)
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '$HOME/MultiNest/MultiNest_v3.11_CMake/multinest/lib:'
    Name: env
  - CmdLine:
    - git clone https://github.com/PolyChord/PolyChordLite.git && (cd PolyChordLite
      && make pypolychord  MPI= && python setup.py install)
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/jellis18/PTMCMCSampler.git && (cd PTMCMCSampler
      && python setup.py install)
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir roq_basis     && cd roq_basis     && wget https://git.ligo.org/lscsoft/ROQ_data/raw/master/IMRPhenomPv2/4s/B_linear.npy     &&
      wget https://git.ligo.org/lscsoft/ROQ_data/raw/master/IMRPhenomPv2/4s/B_quadratic.npy     &&
      wget https://git.ligo.org/lscsoft/ROQ_data/raw/master/IMRPhenomPv2/4s/fnodes_linear.npy     &&
      wget https://git.ligo.org/lscsoft/ROQ_data/raw/master/IMRPhenomPv2/4s/fnodes_quadratic.npy     &&
      wget https://git.ligo.org/lscsoft/ROQ_data/raw/master/IMRPhenomPv2/4s/params.dat
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
