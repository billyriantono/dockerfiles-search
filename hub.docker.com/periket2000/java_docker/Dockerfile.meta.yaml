MetaArgs: null
Stages:
- BaseName: alpine:3.6
  Commands:
  - CmdLine:
    - apk --update add git build-base curl tar gzip &&     ALPINE_GLIBC_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases/download"
      &&     ALPINE_GLIBC_PACKAGE_VERSION="2.25-r0" &&     ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     apk add --no-cache --virtual=.build-dependencies wget ca-certificates
      &&     wget         "https://raw.githubusercontent.com/andyshinn/alpine-pkg-glibc/master/sgerrand.rsa.pub"         -O
      "/etc/apk/keys/sgerrand.rsa.pub" &&     wget         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&     apk add --no-cache         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&         rm "/etc/apk/keys/sgerrand.rsa.pub" &&     /usr/glibc-compat/bin/localedef
      --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true &&     echo "export
      LANG=C.UTF-8" > /etc/profile.d/locale.sh &&         apk del glibc-i18n &&         rm
      "/root/.wget-hsts" &&     apk del .build-dependencies &&     rm         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: JAVA_VERSION_MAJOR
      Value: "8"
    Name: env
  - Env:
    - Key: JAVA_VERSION_MINOR
      Value: "131"
    Name: env
  - Env:
    - Key: JAVA_VERSION_BUILD
      Value: "11"
    Name: env
  - Env:
    - Key: JAVA_PACKAGE
      Value: jdk
    Name: env
  - CmdLine:
    - 'mkdir /opt && curl -jksSLH "Cookie: oraclelicense=accept-securebackup-cookie"  http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/d54c1d3a095b4ff2b6607d096fa80163/jdk-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz     |
      tar -xzf - -C /opt &&    ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR}
      /opt/jdk &&    rm -rf /opt/jdk/*src.zip            /opt/jdk/lib/missioncontrol            /opt/jdk/lib/visualvm            /opt/jdk/lib/*javafx*            /opt/jdk/jre/lib/plugin.jar            /opt/jdk/jre/lib/ext/jfxrt.jar            /opt/jdk/jre/bin/javaws            /opt/jdk/jre/lib/javaws.jar            /opt/jdk/jre/lib/desktop            /opt/jdk/jre/plugin            /opt/jdk/jre/lib/deploy*            /opt/jdk/jre/lib/*javafx*            /opt/jdk/jre/lib/*jfx*            /opt/jdk/jre/lib/amd64/libdecora_sse.so            /opt/jdk/jre/lib/amd64/libprism_*.so            /opt/jdk/jre/lib/amd64/libfxplugins.so            /opt/jdk/jre/lib/amd64/libglass.so            /opt/jdk/jre/lib/amd64/libgstreamer-lite.so            /opt/jdk/jre/lib/amd64/libjavafx*.so            /opt/jdk/jre/lib/amd64/libjfx*.so'
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /opt/jdk
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${JAVA_HOME}/bin
    Name: env
  - Env:
    - Key: MAVEN_VERSION
      Value: 3.3.9
    Name: env
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/lib/maven
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/lib/maven/bin:$JAVA_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - apk --no-cache add --virtual build-dependencies wget &&     cd /tmp &&     wget
      -q http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
      -O - | tar xzf - &&     mv /tmp/apache-maven-$MAVEN_VERSION /usr/lib/maven &&     ln
      -s /usr/lib/maven/bin/mvn /usr/bin/mvn &&     rm -rf /tmp/* &&     apk del --purge
      build-dependencies
    Name: run
    PrependShell: true
  - Env:
    - Key: PROJECT_DIR
      Value: /usr/local/javaenv
    Name: env
  - CmdLine:
    - mkdir -p ${PROJECT_DIR}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.sh
    - ${PROJECT_DIR}/init-container.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - env.sh
    - ${PROJECT_DIR}/env.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/*
    - ${PROJECT_DIR}/
  - CmdLine:
    - adduser -S java-user -u 1000     && addgroup -S java-user -g 1000     && chown
      java-user:java-user ${PROJECT_DIR}     && chown java-user:java-user ${PROJECT_DIR}/*.sh     &&
      chmod +x ${PROJECT_DIR}/*.sh
    Name: run
    PrependShell: true
  - Name: user
    User: java-user
  - CmdLine:
    - ${PROJECT_DIR}/init-container.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.6
