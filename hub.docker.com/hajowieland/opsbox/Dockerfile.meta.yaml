MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Env:
    - Key: ANSIBLE_VERSION
      Value: 2.7.9
    Name: env
  - Env:
    - Key: AWSCLI_VERSION
      Value: 1.16.131
    Name: env
  - Env:
    - Key: HELM_VERSION
      Value: v2.13.0
    Name: env
  - Env:
    - Key: JINJA2_VERSION
      Value: "2.10"
    Name: env
  - Env:
    - Key: KUBECTL_VERSION
      Value: v1.13.4
    Name: env
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.11.13
    Name: env
  - CmdLine:
    - apk update     && apk add --no-cache  bash bash-completion coreutils curl gcc
      git     jq less libc6-compat libffi-dev make musl-dev openssl openssh-client     openssl-dev
      python3 python3-dev py3-virtualenv sshpass tar unzip vim &&     rm -rf /var/cache/apk/*
      &&     mkdir -p /etc/bash_completion.d/ /etc/profile.d/
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
      &&     chmod +x /usr/bin/kubectl &&     kubectl completion bash > /etc/bash_completion.d/kubectl.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin &&     curl https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      -o terraform_${TERRAFORM_VERSION}_linux_amd64.zip &&     unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      &&     rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install ansible==${ANSIBLE_VERSION} Jinja2==${JINJA2_VERSION} &&     rm
      -rf /root/.cache &&     find / -type f -regex '.*\.py[co]' -delete
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install awscli==${AWSCLI_VERSION} boto &&     rm -rf /root/.cache &&     find
      / -type f -regex '.*\.py[co]' -delete &&     ln -s /usr/local/aws/bin/aws_bash_completer
      /etc/bash_completion.d/aws.sh &&     ln -s /usr/local/aws/bin/aws_completer
      /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q http://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz
      -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm   && chmod +x /usr/local/bin/helm
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /start.sh
  - CmdLine:
    - chmod +x /start.sh &&     mkdir /mnt/opsbox &&     ln -s /mnt/opsbox/.aws /root/.aws
      &&     ln -s /mnt/opsbox/.kube /root/.kube
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opsbox
  - Name: volume
    Volumes:
    - /opsbox
    - /mnt/opsbox
  - CmdLine:
    - /start.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
