MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.9.2-alpine3.6
  Commands:
  - Key: VIPS_VERSION
    Name: arg
    Value: 8.5.9
  - Key: IMAGINARY_VERSION
    Name: arg
    Value: 1.0.10
  - Env:
    - Key: VIPS_DIR
      Value: /vips
    Name: env
  - Env:
    - Key: PKG_CONFIG_PATH
      Value: ${VIPS_DIR}/lib/pkgconfig:$PKG_CONFIG_PATH
    Name: env
  - CmdLine:
    - apk update && apk add --no-cache openssl ca-certificates && mkdir -p ${GOPATH}/src
      &&     wget -O- https://github.com/jcupitt/libvips/releases/download/v${VIPS_VERSION}/vips-${VIPS_VERSION}.tar.gz
      | tar xzC /tmp &&     wget -O- https://github.com/h2non/imaginary/archive/v${IMAGINARY_VERSION}.tar.gz
      | tar xzC ${GOPATH}/src &&     echo "@testing http://dl-3.alpinelinux.org/alpine/edge/testing"
      >> /etc/apk/repositories  &&     apk update && apk upgrade && apk add --no-cache     build-base
      git vips-dev@testing gobject-introspection-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/vips-${VIPS_VERSION} &&     ./configure         --disable-static         --disable-dependency-tracking         --without-python         --prefix=${VIPS_DIR}
      &&     make &&     make install &&     cd ${GOPATH}/src/imaginary-${IMAGINARY_VERSION}
      &&     go get -u github.com/golang/dep/cmd/dep &&     dep ensure &&     go build
      -o $GOPATH/bin/imaginary
    Name: run
    PrependShell: true
  From:
    Image: golang:1.9.2-alpine3.6
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.9.2-alpine3.6 as builder
- BaseName: alpine:3.6
  Commands:
  - CmdLine:
    - apk update     apk upgrade &&     echo "@testing http://dl-3.alpinelinux.org/alpine/edge/testing"
      >> /etc/apk/repositories &&     apk add --no-cache         openssl ca-certificates
      gobject-introspection vips@testing &&     rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /vips/lib/
    - /usr/local/lib
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/bin/imaginary
    - /usr/bin/imaginary
  - Env:
    - Key: PORT
      Value: "9000"
    Name: env
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - /usr/bin/imaginary
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.6
