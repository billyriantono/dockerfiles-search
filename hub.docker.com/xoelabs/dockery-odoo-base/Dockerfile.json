{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "pyflame-build",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch as pyflame-build",
      "Platform": "",
      "As": "pyflame-build",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get -qq update \u0026\u0026 apt-get -qq install -y        autoconf automake autotools-dev g++ pkg-config python-dev python3-dev libtool make        git-core \u003e /dev/null     \u0026\u0026 git clone https://github.com/uber/pyflame.git \u003e /dev/null     \u0026\u0026 cd pyflame     \u0026\u0026 ./autogen.sh \u003e /dev/null     \u0026\u0026 ./configure \u003e /dev/null     \u0026\u0026 make \u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "base-build",
      "BaseName": "python:3.7-slim-stretch",
      "SourceCode": "FROM python:3.7-slim-stretch AS base-build",
      "Platform": "",
      "As": "base-build",
      "From": {
        "Image": "python:3.7-slim-stretch"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "set -ex;         apt-get update;     apt-get install -y --no-install-recommends         apt-transport-https         ca-certificates         node-less         locales         fontconfig         lbzip2         libfreetype6         libjpeg62-turbo         liblcms2-2         libldap-2.4-2         libsasl2-2         libtiff5         libx11-6         libxext6         libxml2         libxrender1         libxslt1.1         tcl         tk         zlib1g         zlibc         git-core         curl                 libpng16-16 libssl1.1 xfonts-75dpi xfonts-base;         apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;     rm -rf /var/lib/apt/lists/*;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PSQL_VERSION",
              "Value": "11"
            },
            {
              "Key": "PSQL_REPO_KEY",
              "Value": "B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8"
            },
            {
              "Key": "WKHTMLTOX_VERSION",
              "Value": "0.12.5"
            },
            {
              "Key": "WKHTMLTOPDF_CHECKSUM",
              "Value": "1140b0ab02aa6e17346af2f14ed0de807376de475ba90e1db3975f112fbd20bb"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex;         savedAptMark=\"$(apt-mark showmanual)\";     apt-get update;     apt-get install -y --no-install-recommends curl $(command -v gpg \u003e /dev/null || echo 'gnupg dirmngr');         echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' \u003e\u003e /etc/apt/sources.list.d/postgresql.list;         export GNUPGHOME=\"$(mktemp -d)\";         gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"${PSQL_REPO_KEY}\";         gpg --armor --export \"${PSQL_REPO_KEY}\" | apt-key add -;         gpgconf --kill all;         rm -rf \"$GNUPGHOME\";         curl --silent --show-error --location --output wkhtmltox.deb https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/${WKHTMLTOX_VERSION}/wkhtmltox_${WKHTMLTOX_VERSION}-1.stretch_amd64.deb;         echo \"${WKHTMLTOPDF_CHECKSUM}  wkhtmltox.deb\" | sha256sum -c -;     apt-mark auto '.*' \u003e /dev/null;     [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark;         apt-get update;     apt-get install -y --no-install-recommends         postgresql-client-${PSQL_VERSION};                 dpkg -i ./wkhtmltox.deb;         rm wkhtmltox.deb;         rm /usr/local/bin/wkhtmltoimage;         rm /usr/local/lib/libwkhtmltox.so*;         wkhtmltopdf --version;         apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;     rm -rf /var/lib/apt/lists/*;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ODOO_BCKP_DIR",
              "Value": "\"/var/lib/odoo-backups\""
            },
            {
              "Key": "ODOO_PRST_DIR",
              "Value": "\"/var/lib/odoo-persist\""
            },
            {
              "Key": "APP_UID",
              "Value": "\"9001\""
            },
            {
              "Key": "APP_GID",
              "Value": "\"9001\""
            },
            {
              "Key": "ODOO_VERSION",
              "Value": "master"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "set -ex;         savedAptMark=\"$(apt-mark showmanual)\";     apt-get update;     apt-get install -y --no-install-recommends         build-essential         bzip2         libgeoip-dev         xz-utils         libevent-dev         libssl-dev         libxml2-dev         libxslt1-dev        libjpeg-dev         libfreetype6-dev         liblcms2-dev         libtiff5-dev         tk-dev         tcl-dev         linux-headers-amd64         libpq-dev         libldap2-dev         libsasl2-dev;         pip --quiet --quiet install --no-cache-dir --requirement /requirements.txt;     pip --quiet --quiet install --no-cache-dir phonenumbers;     find /usr/local -depth         \\(             \\( -type d -a \\( -name test -o -name tests \\) \\)             -o             \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\)         \\) -exec rm -rf '{}' +;         apt-mark auto '.*' \u003e /dev/null;     [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark;     apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;     rm -rf /var/lib/apt/lists/*;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "pyflame-build",
          "Name": "copy",
          "SourcesAndDest": [
            "/pyflame/src/pyflame",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/pyflame"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex;         savedAptMark=\"$(apt-mark showmanual)\";     apt-get update;     apt-get install -y --no-install-recommends wget;         wget --quiet http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz -O /tmp/GeoLite2-City.tar.gz;     mkdir -p /usr/share/GeoIP;     tar -xf /tmp/GeoLite2-City.tar.gz -C /tmp/;     find /tmp/GeoLite2-City_* | grep \"GeoLite2-City.mmdb\" | xargs -I{} mv {} /usr/share/GeoIP/GeoLite2-City.mmdb;     rm -rf /tmp/*;     pip --quiet --quiet install --no-cache-dir geoip2;         apt-mark auto '.*' \u003e /dev/null;     [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark;     apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;     rm -rf /var/lib/apt/lists/*;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --quiet --quiet install --no-cache-dir python-json-logger; \tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -c 'shopt -s dotglob  \u0026\u0026 chmod +x /patches  \u0026\u0026 chmod +x /entrypoint.sh  \u0026\u0026 chmod +x /entrypoint.d/*  \u0026\u0026 chmod +x /entrypoint.db.d/*  \u0026\u0026 shopt -u dotglob'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup --system --gid $APP_UID odoo;     adduser --system --uid $APP_GID --ingroup odoo --home /opt/odoo --disabled-login --shell /sbin/nologin odoo;     mkdir -p \"${ODOO_PRST_DIR}\" \"${ODOO_BCKP_DIR}\";     chown -R odoo:odoo \"${ODOO_PRST_DIR}\" \"${ODOO_BCKP_DIR}\";     rm /var/log/faillog var/log/lastlog;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \u0026\u0026     dpkg-reconfigure --frontend=noninteractive locales \u0026\u0026     update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "${ODOO_PRST_DIR}",
            "${ODOO_BCKP_DIR}"
          ]
        },
        {
          "Name": "user",
          "User": "odoo"
        },
        {
          "CmdLine": [
            "pip --quiet --quiet install --no-cache-dir --user Werkzeug==0.14.1;     find /usr/local -depth         \\(             \\( -type d -a \\( -name test -o -name tests \\) \\)             -o             \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\)         \\) -exec rm -rf '{}' +;"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}