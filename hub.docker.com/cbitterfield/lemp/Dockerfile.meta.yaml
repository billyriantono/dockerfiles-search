MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Name: user
    User: root
  - Labels:
    - Key: Description
      Value: '"Development environment for LEMP stack, based on Ubuntu 18.04 LTS.
        Includes .htaccess support and popular PHP7 features, including composer and
        mail() function."'
    Name: label
  - Labels:
    - Key: License
      Value: '"GNU Public License 3.0"'
    Name: label
  - Labels:
    - Key: Usage
      Value: '"docker run -d -p [HOST WWW PORT NUMBER]:80 -p [HOST WWW TLS PORT NUMBER]:443
        -p [HOST DB PORT NUMBER]:3306 -v [HOST WWW DOCUMENT ROOT]:/data -v cbitterfield/lemp"'
    Name: label
  - Labels:
    - Key: Version
      Value: '"2.0"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"Colin Bitterfield <colin@bitterfield.com>"'
    Name: label
  - Labels:
    - Key: Author
      Value: '"Colin Bitterfield <colin@bitterfield.com>"'
    Name: label
  - Key: WEBSITE
    Name: arg
    Value: mywebsite.local
  - Key: WEBSITE_UID
    Name: arg
    Value: "1500"
  - Key: WEBSITE_USER
    Name: arg
    Value: '''dev_site'''
  - Key: LEMP_GRP
    Name: arg
    Value: "1000"
  - Key: DATE_TIMEZONE
    Name: arg
    Value: UTC
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - debconf.selections
    - /tmp/debconf.selections
  - CmdLine:
    - debconf-set-selections /tmp/debconf.selections
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /data
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /data/html
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /data/mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /data/examples
    Name: run
    PrependShell: true
  - CmdLine:
    - (mkdir /data/logs; mkdir /data/logs/nginx;mkdir /data/logs/mysql)
    Name: run
    PrependShell: true
  - CmdLine:
    - (mkdir /data/conf;mkdir /data/conf/nginx;mkdir /data/conf/nginx/sites-available;mkdir
      /data/conf/nginx/sites-enabled;mkdir /data/conf/nginx/conf.d; mkdir /data/conf/mysql;
      mkdir /data/conf/mysql/conf.d;mkdir /data/conf/nginx/tls)
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /.data
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /.data/html
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /.data/mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /.data/conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /.data/examples
    Name: run
    PrependShell: true
  - CmdLine:
    - (mkdir /.data/logs; mkdir /.data/logs/nginx;mkdir /.data/logs/mysql)
    Name: run
    PrependShell: true
  - CmdLine:
    - (mkdir /.data/conf/nginx; mkdir /.data/conf/nginx/sites-available;mkdir /.data/conf/nginx/sites-enabled;mkdir
      /.data/conf/nginx/conf.d; mkdir /.data/conf/mysql; mkdir /.data/conf/mysql/conf.d;mkdir
      /.data/conf/nginx/tls)
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zip unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install debconf-utils sudo bind9-host -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install git nodejs npm composer nano tree vim curl ftp ssh certbot -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install software-properties-common -y
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:deadsnakes/ppa -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install python3.8 -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install postfix -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install php-fpm php-mysql libfcgi0ldbl -y
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install \tphp7.2 \tphp7.2-bz2 \tphp7.2-cgi \tphp7.2-cli \tphp7.2-common
      \tphp7.2-curl \tphp7.2-dev \tphp7.2-enchant \tphp7.2-fpm \tphp7.2-gd \tphp7.2-gmp
      \tphp7.2-imap \tphp7.2-interbase \tphp7.2-intl \tphp7.2-json \tphp7.2-ldap \tphp7.2-mbstring
      \tphp7.2-mysql \tphp7.2-odbc \tphp7.2-opcache \tphp7.2-pgsql \tphp7.2-phpdbg
      \tphp7.2-pspell \tphp7.2-readline \tphp7.2-recode \tphp7.2-snmp \tphp7.2-sqlite3
      \tphp7.2-sybase \tphp7.2-tidy \tphp7.2-xmlrpc \tphp7.2-xsl \tphp7.2-zip -y"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install nginx nginx-extras -y
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/include \/etc\/nginx\/conf.d/c \\tinclude \/data\/conf\/nginx_conf.d\/http_*.conf;'
      /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/include \/etc\/nginx\/modules-enabled/c include \/data\/conf\/nginx\/conf.d\/pre_http_*.conf;'
      /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/include \/etc\/nginx\/sites-enabled/c \\tinclude \/data\/conf\/nginx\/sites-enabled\/*.conf;'
      /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/error_log \/var\/log\/nginx\/error.log;/c \\tinclude \/data\/conf\/nginx\/conf.d\/error_default.conf;'
      /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - unlink /etc/nginx/sites-enabled/default
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - default_site.conf
    - /.data/conf/nginx/sites-available/default_site.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dev_site.conf
    - /.data/conf/nginx/sites-available/dev_site.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dev_site_tls.conf
    - /.data/conf/nginx/sites-available/dev_site_tls.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - phpmyadmin_tls.conf
    - /.data/conf/nginx/sites-available/phpmyadmin_tls.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - index.php
    - /.data/html/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - http_nginx.conf
    - /.data/conf/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pre_http_nginx.conf
    - /.data/conf/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - secure_headers_nginx_example.conf
    - /.data/examples/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lemp_service.sh
    - /.data/examples/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - LICENSE
    - /.data/examples/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - README.md
    - /.data/examples/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - set_environment.sh
    - /.data/examples/
  - CmdLine:
    - apt-get install mariadb-common mariadb-server mariadb-client -y
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '!includedir /data/conf/mysql/' >> /etc/mysql/my.cnf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker_mysql.cnf
    - /etc/mysql/mariadb.conf.d/99-mysqld_datadir.cnf
  - CmdLine:
    - apt-get install libmcrypt-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - pear config-set php_ini   /etc/php/7.2/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl config-set php_ini  /etc/php/7.2/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl channel-update pecl.php.net
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '' | pecl install mcrypt-1.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install phpmyadmin -y
    Name: run
    PrependShell: true
  - Env:
    - Key: LOG_LEVEL
      Value: '"info"'
    Name: env
  - Env:
    - Key: TERM
      Value: '"xterm-256color"'
    Name: env
  - Env:
    - Key: LOG_STDOUT
      Value: '"**notdefined**"'
    Name: env
  - Env:
    - Key: MYSQL_ROOT_PASS
      Value: '"**notdefined**"'
    Name: env
  - Env:
    - Key: MYSQL_DATABASE
      Value: '"**notdefined**"'
    Name: env
  - Env:
    - Key: MYSQL_USER
      Value: '"**notdefined**"'
    Name: env
  - Env:
    - Key: MYSQL_USER_PASS
      Value: '"**notdefined**"'
    Name: env
  - Env:
    - Key: SITE_PASS
      Value: '"**notdefined**"'
    Name: env
  - Env:
    - Key: SSH_PUBLIC
      Value: '"**notdefined**"'
    Name: env
  - Env:
    - Key: TLS
      Value: '"**Boolean**"'
    Name: env
  - CmdLine:
    - groupadd -g $LEMP_GRP lemp
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --comment 'Default Development Website' --no-create-home --home-dir
      /data/html  --uid $WEBSITE_UID --user-group  --shell /bin/bash $WEBSITE_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -a -G sudo dev_site
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -a -G dev_site www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -a -G lemp www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -a -G lemp mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -a -G lemp dev_site
    Name: run
    PrependShell: true
  - CmdLine:
    - passwd --lock dev_site
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R root:lemp /.data
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R $WEBSITE_USER:www-data /.data/html
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R mysql:mysql /.data/mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 775 /.data
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lemp-start
    - /usr/sbin/
  - CmdLine:
    - chmod +x /usr/sbin/lemp-start
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Name: expose
    Ports:
    - "22"
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  - Name: expose
    Ports:
    - "3306"
  - CmdLine:
    - apt autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/sbin/lemp-start
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
