{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Erle Carrara \u003ccarrara.erle@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GDAL_VERSION",
              "Value": "2.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GDAL_VERSION_PYTHON",
              "Value": "2.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install         wget         libcurl4-openssl-dev         build-essential         libpq-dev         ogdi-bin         libogdi3.2-dev         libjasper-runtime         libjasper-dev         libjasper1         libgeos-dev         libproj-dev         libpoppler-dev         libsqlite3-dev         libspatialite-dev         python3         python3-dev         python3-numpy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://bootstrap.pypa.io/get-pip.py \u0026\u0026     python3 get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://download.osgeo.org/gdal/$GDAL_VERSION/gdal-${GDAL_VERSION}.tar.gz -O /tmp/gdal-${GDAL_VERSION}.tar.gz \u0026\u0026     tar -x -f /tmp/gdal-${GDAL_VERSION}.tar.gz -C /tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/gdal-${GDAL_VERSION} \u0026\u0026     ./configure         --prefix=/usr         --with-python         --with-geos         --with-sfcgal         --with-geotiff         --with-jpeg         --with-png         --with-expat         --with-libkml         --with-openjpeg         --with-pg         --with-curl         --with-spatialite \u0026\u0026     make -j $(nproc) \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /tmp/gdal-${GDAL_VERSION} -rf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}