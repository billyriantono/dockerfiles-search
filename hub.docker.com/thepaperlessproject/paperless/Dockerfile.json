{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"The Paperless Project https://github.com/the-paperless-project/paperless\""
            },
            {
              "Key": "contributors",
              "Value": "\"Guy Addadi \u003caddadi@gmail.com\u003e, Pit Kleyersburg \u003cpitkley@googlemail.com\u003e,         Sven Fischer \u003cgit-dev@linux4tw.de\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Pipfile*",
            "/usr/src/paperless/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/docker-entrypoint.sh",
            "/sbin/docker-entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/gunicorn.conf",
            "/usr/src/paperless/"
          ]
        },
        {
          "Env": [
            {
              "Key": "PAPERLESS_EXPORT_DIR",
              "Value": "/export"
            },
            {
              "Key": "PAPERLESS_CONSUMPTION_DIR",
              "Value": "/consume"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache       bash       curl       ghostscript       gnupg       imagemagick       libmagic       libpq       optipng       poppler       python3       shadow       sudo       tesseract-ocr       unpaper \u0026\u0026     apk add --no-cache --virtual .build-dependencies       g++       gcc       jpeg-dev       musl-dev       poppler-dev       postgresql-dev       python3-dev       zlib-dev \u0026\u0026     python3 -m ensurepip \u0026\u0026     rm -r /usr/lib/python*/ensurepip \u0026\u0026     cd /usr/src/paperless \u0026\u0026     pip3 install --upgrade pip pipenv \u0026\u0026     pipenv install --system --deploy \u0026\u0026     apk del .build-dependencies \u0026\u0026     mkdir -p $PAPERLESS_CONSUMPTION_DIR \u0026\u0026     addgroup -g 1000 paperless \u0026\u0026     adduser -D -u 1000 -G paperless -h /usr/src/paperless paperless \u0026\u0026     chown -Rh paperless:paperless /usr/src/paperless \u0026\u0026     mkdir -p $PAPERLESS_EXPORT_DIR \u0026\u0026     chmod 755 /sbin/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/paperless/src"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/src/paperless/data",
            "/usr/src/paperless/media",
            "/consume",
            "/export"
          ]
        },
        {
          "CmdLine": [
            "/sbin/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--help"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/",
            "/usr/src/paperless/src/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "data/",
            "/usr/src/paperless/data/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "media/",
            "/usr/src/paperless/media/"
          ]
        },
        {
          "CmdLine": [
            "sudo -HEu paperless /usr/src/paperless/src/manage.py collectstatic --clear --no-input"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}