MetaArgs: null
Stages:
- BaseName: debian:buster-slim
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"RogueThorn"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Utopia Mining Image"'
    Name: label
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - Env:
    - Key: LC_ALL
      Value: '"C"'
    Name: env
  - Key: DATE_ARG
    Name: arg
    Value: null
  - Key: SOURCE_BRANCH_ARG
    Name: arg
    Value: null
  - Key: SOURCE_COMMIT_ARG
    Name: arg
    Value: null
  - Key: DOCKER_REPO_ARG
    Name: arg
    Value: null
  - Key: CACHE_TAG_ARG
    Name: arg
    Value: null
  - Key: IMAGE_NAME_ARG
    Name: arg
    Value: null
  - Key: MICROSCAN_ARG
    Name: arg
    Value: null
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt -y update && \tapt -y upgrade && \tapt -y dist-upgrade && \tmkdir /usr/share/man/man1
      && \tapt install -y --no-install-recommends ca-certificates apt-utils wget screen
      nano libslang2 libglib2.0-0"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt purge -y apt-utils libapt-inst2.0 && \tfind /var/cache -type f -print0
      | xargs -0 rm -f && \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man/*
      && \tchown -R root:root /opt/bot/ /etc/init.d/bot && \tchmod -R +x /opt/bot/
      /etc/init.d/bot && \tchmod -R 700 /opt/bot/ /etc/init.d/bot && \tupdate-rc.d
      bot defaults && \tgroupadd -g 1000 utopia &&\tuseradd -u 1000 -r -g utopia -d
      /app -s /bin/false -c \"Docker image user\" utopia"
    Name: run
    PrependShell: true
  - CmdLine:
    - "export DATE_ENV=\"$DATE_ARG\" && \texport SUM_ENV=\"$SUM_ARG\" && \texport
      SOURCE_BRANCH_ENV=\"$SOURCE_BRANCH_ARG\" && \texport SOURCE_COMMIT_ENV=\"$SOURCE_COMMIT_ARG\"
      && \texport DOCKER_REPO_ENV=\"$DOCKER_REPO_ARG\" && \texport CACHE_TAG_ENV=\"$CACHE_TAG_ARG\"
      && \texport IMAGE_NAME_ENV=\"$IMAGE_NAME_ARG\" && \techo \"docker=1\" >> /opt/bot/.env
      && \techo \"date=\\\"$DATE_ENV\\\"\" >> /opt/bot/.env && \techo \"branch=\\\"$SOURCE_BRANCH_ENV\\\"\"
      >> /opt/bot/.env && \techo \"commit=\\\"$SOURCE_COMMIT_ENV\\\"\" >> /opt/bot/.env
      && \techo \"repo=\\\"$DOCKER_REPO_ENV\\\"\" >> /opt/bot/.env && \techo \"tag=\\\"$CACHE_TAG_ENV\\\"\"
      >> /opt/bot/.env && \techo \"image=\\\"$IMAGE_NAME_ENV\\\"\" >> /opt/bot/.env"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://get.aquasec.com/microscanner
    - /
  - CmdLine:
    - "chmod +x /microscanner && \texport MICROSCAN_ENV=\"$MICROSCAN_ARG\" && \t/microscanner
      $MICROSCAN_ENV --continue-on-failure && \trm -rf /microscanner"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /app/
  - CmdLine:
    - /opt/bot/entry.sh
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /app/
  - Name: stopsignal
    Signal: SIGTERM
  From:
    Image: debian:buster-slim
  Name: ""
  Platform: ""
  SourceCode: FROM  debian:buster-slim
