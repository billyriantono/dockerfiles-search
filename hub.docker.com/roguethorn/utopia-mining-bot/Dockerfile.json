{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:buster-slim",
      "SourceCode": "FROM  debian:buster-slim",
      "Platform": "",
      "From": {
        "Image": "debian:buster-slim"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"RogueThorn\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Utopia Mining Image\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "\"C\""
            }
          ],
          "Name": "env"
        },
        {
          "Key": "DATE_ARG",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "SOURCE_BRANCH_ARG",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "SOURCE_COMMIT_ARG",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "DOCKER_REPO_ARG",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "CACHE_TAG_ARG",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "IMAGE_NAME_ARG",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "MICROSCAN_ARG",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt -y update \u0026\u0026 \tapt -y upgrade \u0026\u0026 \tapt -y dist-upgrade \u0026\u0026 \tmkdir /usr/share/man/man1 \u0026\u0026 \tapt install -y --no-install-recommends ca-certificates apt-utils wget screen nano libslang2 libglib2.0-0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt purge -y apt-utils libapt-inst2.0 \u0026\u0026 \tfind /var/cache -type f -print0 | xargs -0 rm -f \u0026\u0026 \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man/* \u0026\u0026 \tchown -R root:root /opt/bot/ /etc/init.d/bot \u0026\u0026 \tchmod -R +x /opt/bot/ /etc/init.d/bot \u0026\u0026 \tchmod -R 700 /opt/bot/ /etc/init.d/bot \u0026\u0026 \tupdate-rc.d bot defaults \u0026\u0026 \tgroupadd -g 1000 utopia \u0026\u0026\tuseradd -u 1000 -r -g utopia -d /app -s /bin/false -c \"Docker image user\" utopia"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DATE_ENV=\"$DATE_ARG\" \u0026\u0026 \texport SUM_ENV=\"$SUM_ARG\" \u0026\u0026 \texport SOURCE_BRANCH_ENV=\"$SOURCE_BRANCH_ARG\" \u0026\u0026 \texport SOURCE_COMMIT_ENV=\"$SOURCE_COMMIT_ARG\" \u0026\u0026 \texport DOCKER_REPO_ENV=\"$DOCKER_REPO_ARG\" \u0026\u0026 \texport CACHE_TAG_ENV=\"$CACHE_TAG_ARG\" \u0026\u0026 \texport IMAGE_NAME_ENV=\"$IMAGE_NAME_ARG\" \u0026\u0026 \techo \"docker=1\" \u003e\u003e /opt/bot/.env \u0026\u0026 \techo \"date=\\\"$DATE_ENV\\\"\" \u003e\u003e /opt/bot/.env \u0026\u0026 \techo \"branch=\\\"$SOURCE_BRANCH_ENV\\\"\" \u003e\u003e /opt/bot/.env \u0026\u0026 \techo \"commit=\\\"$SOURCE_COMMIT_ENV\\\"\" \u003e\u003e /opt/bot/.env \u0026\u0026 \techo \"repo=\\\"$DOCKER_REPO_ENV\\\"\" \u003e\u003e /opt/bot/.env \u0026\u0026 \techo \"tag=\\\"$CACHE_TAG_ENV\\\"\" \u003e\u003e /opt/bot/.env \u0026\u0026 \techo \"image=\\\"$IMAGE_NAME_ENV\\\"\" \u003e\u003e /opt/bot/.env"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://get.aquasec.com/microscanner",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /microscanner \u0026\u0026 \texport MICROSCAN_ENV=\"$MICROSCAN_ARG\" \u0026\u0026 \t/microscanner $MICROSCAN_ENV --continue-on-failure \u0026\u0026 \trm -rf /microscanner"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "/opt/bot/entry.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/app/"
        },
        {
          "Name": "stopsignal",
          "Signal": "SIGTERM"
        }
      ]
    }
  ]
}