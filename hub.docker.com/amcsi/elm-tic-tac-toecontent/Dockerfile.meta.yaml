MetaArgs: null
Stages:
- BaseName: ruby:2.3.1
  Commands:
  - Env:
    - Key: PHANTOMJS_VERSION
      Value: 2.1.1
    Name: env
  - Env:
    - Key: GOCD_VERSION
      Value: 16.7.0
    - Key: GOCD_RELEASE
      Value: go-agent
    - Key: GOCD_REVISION
      Value: "3819"
    - Key: GOCD_HOME
      Value: /opt/go-agent
    - Key: PATH
      Value: $GOCD_HOME:$PATH
    Name: env
  - Env:
    - Key: GOCD_REPO
      Value: https://download.go.cd/binaries/${GOCD_VERSION}-${GOCD_REVISION}/generic
    - Key: GOCD_RELEASE_ARCHIVE
      Value: ${GOCD_RELEASE}-${GOCD_VERSION}-${GOCD_REVISION}.zip
    - Key: SERVER_WORK_DIR
      Value: ${GOCD_HOME}/work
    Name: env
  - CmdLine:
    - cd /tmp &&     curl -L -O https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2
      &&     tar xjf /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C /tmp
      &&     mv /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/bin/phantomjs /usr/local/bin
      &&     rm -rf /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends zip unzip nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/log/go-agent /var/run/go-agent &&    cd /opt && curl -sSL ${GOCD_REPO}/${GOCD_RELEASE_ARCHIVE}
      -O && unzip ${GOCD_RELEASE_ARCHIVE} && rm ${GOCD_RELEASE_ARCHIVE} &&    mv /opt/${GOCD_RELEASE}-${GOCD_VERSION}
      ${GOCD_HOME} &&    chmod 774 ${GOCD_HOME}/*.sh &&    mkdir -p ${GOCD_HOME}/work
      &&    gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://httpredir.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64/jre
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u102
    Name: env
  - Env:
    - Key: JAVA_DEBIAN_VERSION
      Value: 8u102-b14.1-1~bpo8+1
    Name: env
  - Env:
    - Key: CA_CERTIFICATES_JAVA_VERSION
      Value: "20140324"
    Name: env
  - CmdLine:
    - "set -x     && apt-get update \t&& apt-get install -y     python-dev \t\topenjdk-8-jre-headless=\"$JAVA_DEBIAN_VERSION\"
      \t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \t&& [ \"$JAVA_HOME\"
      = \"$(docker-java-home)\" ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - /var/lib/dpkg/info/ca-certificates-java.postinst configure
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py &&    python get-pip.py &&    rm
      get-pip.py &&    pip install awscli &&    pip install docker-compose
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gocd-entrypoint.sh
    - /usr/bin/docker-entrypoint.sh
  - CmdLine:
    - chmod +x /usr/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ruby:2.3.1
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2.3.1
