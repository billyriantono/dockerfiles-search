{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2",
      "SourceCode": "FROM php:7.2",
      "Platform": "",
      "From": {
        "Image": "php:7.2"
      },
      "Commands": [
        {
          "Maintainer": "Attila Szeremi \u003cattila+webdev@szeremi.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "cd /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y   curl   wget   gnupg   zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_9.x | bash - \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y nodejs \u0026\u0026   node --version \u0026\u0026   npm --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/docker-php-pecl-install",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-php-ext-install   zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-pecl-install swoole"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "composer.json",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "composer.lock",
            "."
          ]
        },
        {
          "CmdLine": [
            "mkdir -p database/seeds"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p database/factories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer install --no-scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package.json",
            "."
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package-lock.json",
            "."
          ]
        },
        {
          "CmdLine": [
            "npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "resources/assets",
            "resources/assets"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "webpack.mix.js",
            "."
          ]
        },
        {
          "CmdLine": [
            "npm run production"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "mkdir -p bootstrap/cache \u0026\u0026 chmod a+rwx bootstrap/cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer install --optimize-autoloader"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm run production"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c",
            "mkdir -p storage/framework/{cache,sessions,views} \u0026\u0026 chmod -R a+rwx storage/framework/{cache,sessions,views}"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "chmod a+rw database/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bin/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}