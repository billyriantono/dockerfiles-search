MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Env:
    - Key: ANSIBLE_VERSION
      Value: 2.8.3
    Name: env
  - Env:
    - Key: BUILD_PACKAGES
      Value: bash   curl   tar   openssh-client   sshpass   git   python   py-boto   py-dateutil   py-httplib2   py-jinja2   py-paramiko   py-pip   py-yaml   libxslt-dev   libxml2-dev   rpm   ca-certificates
    Name: env
  - CmdLine:
    - set -x &&         echo "==> Adding build-dependencies..."  &&     apk --update
      add --virtual build-dependencies       gcc       musl-dev       libffi-dev       openssl-dev       python-dev
      &&         echo "==> Upgrading apk and system..."  &&     apk update && apk
      upgrade &&             echo "==> Adding Python runtime..."  &&     apk add --no-cache
      ${BUILD_PACKAGES} &&     pip install --upgrade pip &&     pip install setuptools==1.4.1
      &&     pip install python-keyczar docker-py &&     pip install 'ansible[azure]'
      &&     pip install --upgrade tornado chardet requests docopt cryptography f5-sdk
      bigsuds netaddr objectpath isoparser lxml deepdiff git+https://github.com/F5Networks/f5-common-python.git
      &&         echo "==> Installing Ansible..."  &&     pip install ansible==${ANSIBLE_VERSION}
      &&         echo "==> Cleaning up..."  &&     apk del build-dependencies &&     rm
      -rf /var/cache/apk/* &&         echo "==> Adding hosts for convenience..."  &&     mkdir
      -p /etc/ansible /ansible &&     echo "[local]" >> /etc/ansible/hosts &&     echo
      "localhost" >> /etc/ansible/hosts &&         echo "==> Galaxy install F5 app
      services..."  &&     ansible-galaxy --roles-path=/ansible.galaxy install f5devcentral.f5app_services_package
    Name: run
    PrependShell: true
  - Env:
    - Key: ANSIBLE_GATHERING
      Value: smart
    Name: env
  - Env:
    - Key: ANSIBLE_HOST_KEY_CHECKING
      Value: "false"
    Name: env
  - Env:
    - Key: ANSIBLE_RETRY_FILES_ENABLED
      Value: "false"
    Name: env
  - Env:
    - Key: ANSIBLE_CONFIG
      Value: /ansible/ansible.cfg
    Name: env
  - Env:
    - Key: ANSIBLE_ROLES_PATH
      Value: /ansible/roles:/ansible.galaxy
    Name: env
  - Env:
    - Key: ANSIBLE_SSH_PIPELINING
      Value: "True"
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: /ansible/lib
    Name: env
  - Env:
    - Key: PATH
      Value: /ansible/bin:$PATH
    Name: env
  - Env:
    - Key: ANSIBLE_LIBRARY
      Value: /ansible/library
    Name: env
  - Name: workdir
    Path: /ansible/
  - CmdLine:
    - ansible-playbook
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
