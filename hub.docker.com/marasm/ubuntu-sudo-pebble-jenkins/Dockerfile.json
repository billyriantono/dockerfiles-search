{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:wily",
      "SourceCode": "FROM ubuntu:wily",
      "Platform": "",
      "From": {
        "Image": "ubuntu:wily"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026    apt-get install -y openjdk-8-jdk wget git curl sudo zip python2.7-dev python-pip libfreetype6-dev bash-completion libsdl1.2debian libfdt1 libpixman-1-0 libglib2.0-dev \u0026\u0026    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/var/jenkins_home"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_VERSION",
              "Value": "1.623"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SHA",
              "Value": "db873da98bddcea47e815442e28f1164442efd5a"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_UC",
              "Value": "https://updates.jenkins-ci.org"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PEBBLE_SDK_VERSION",
              "Value": "pebble-sdk-4.4-linux64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/pebble-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://s3.amazonaws.com/assets.getpebble.com/pebble-tool/${PEBBLE_SDK_VERSION}.tar.bz2         | tar -v -C /opt/pebble-dev/ -xj"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/pebble-dev/${PEBBLE_SDK_VERSION}"
        },
        {
          "CmdLine": [
            "/bin/bash -c \"         pip install virtualenv \u0026\u0026         virtualenv --no-site-packages .env \u0026\u0026         source .env/bin/activate \u0026\u0026         pip install -r requirements.txt \u0026\u0026         deactivate \" \u0026\u0026     rm -r /root/.cache/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -d \"$JENKINS_HOME\" -u 1000 -m -s /bin/bash jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +w /etc/sudoers \u0026\u0026    echo \"jenkins   ALL=(ALL)       NOPASSWD:ALL\" \u003e\u003e /etc/sudoers \u0026\u0026    chmod -w /etc/sudoers \u0026\u0026    chmod -R 777 /opt/pebble-dev/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/jenkins_home"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/jenkins/ref/init.groovy.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/jenkins/ref/.pebble-sdk/ \u0026\u0026     touch /usr/share/jenkins/ref/.pebble-sdk/ACCEPT_LICENSE \u0026\u0026    touch /usr/share/jenkins/ref/.pebble-sdk/NO_TRACKING"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugins.sh",
            "/usr/local/bin/plugins.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugins.txt",
            "/plugins.txt"
          ]
        },
        {
          "CmdLine": [
            "plugins.sh /plugins.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fL https://github.com/krallin/tini/releases/download/v0.5.0/tini-static -o /bin/tini \u0026\u0026 chmod +x /bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init.groovy",
            "/usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy"
          ]
        },
        {
          "CmdLine": [
            "curl -fL http://mirrors.jenkins-ci.org/war/$JENKINS_VERSION/jenkins.war -o /usr/share/jenkins/jenkins.war   \u0026\u0026 echo \"$JENKINS_SHA /usr/share/jenkins/jenkins.war\" | sha1sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R jenkins \"$JENKINS_HOME\" /usr/share/jenkins/ref"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "50000"
          ]
        },
        {
          "Env": [
            {
              "Key": "COPY_REFERENCE_FILE_LOG",
              "Value": "$JENKINS_HOME/copy_reference_file.log"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/pebble-dev/${PEBBLE_SDK_VERSION}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins.sh",
            "/usr/local/bin/jenkins.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/tini",
            "--",
            "/usr/local/bin/jenkins.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}