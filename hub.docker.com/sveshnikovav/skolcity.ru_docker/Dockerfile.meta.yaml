MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tlibpcre3-dev
        \t\tmake \t\tpkg-config \t\tre2c"
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y \t\t$PHPIZE_DEPS \t\tca-certificates \t\tcurl
      \t\tlibedit2 \t\tlibsqlite3-0 \t\tlibxml2 \t\txz-utils \t--no-install-recommends
      && rm -r /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data
    Name: env
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 0BD78B5F97500D450838F95DFE857D9A90D90EC1 0B96609E270F565C13292B24C13C70B87267B52D
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: php-5.6.34
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"http://php.net/get/php-5.6.34.tar.gz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '""'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '""'
    - Key: PHP_MD5
      Value: '""'
    Name: env
  - CmdLine:
    - "set -xe; \t\tfetchDeps=' \t\twget \t'; \tif ! command -v gpg > /dev/null; then
      \t\tfetchDeps=\"$fetchDeps \t\t\tdirmngr \t\t\tgnupg2 \t\t\"; \tfi; \tapt-get
      update; \tapt-get install -y --no-install-recommends $fetchDeps; \trm -rf /var/lib/apt/lists/*;
      \t\tmkdir -p /usr/src; \tcd /usr/src; \t\twget -O php.tar.gz \"$PHP_URL\"; \t\tif
      [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum
      -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\"
      | md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\twget -O php.tar.xz.asc
      \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS;
      do \t\t\tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \t\tdone;
      \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \t\trm -rf \"$GNUPGHOME\";
      \tfi; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      $fetchDeps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - "set -xe \t&& buildDeps=\" \t\t$PHP_EXTRA_BUILD_DEPS \t\tlibcurl4-openssl-dev
      \t\tlibedit-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tsudo \t\tlibcurl4-openssl-dev
      \t\tcurl \t\tpython-pip \t\tapt-transport-https\t\t\tapt-utils \t\tlibmcrypt-dev
      \t\tzip \t\tunzip \t\tpostgresql-server-dev-all \t\tlibfreetype6-dev \t\ttzdata
      \t\tlibturbojpeg \t\tlibpng12-dev \t\tsupervisor \t\tcron \t\tlocales \t\tlibjpeg-turbo8-dev
      \t\tphp-pear \t\tlsof \t\" \t&& apt-get update && apt-get install -y $buildDeps
      --no-install-recommends && rm -rf /var/lib/apt/lists/* \t\t&& export CFLAGS=\"$PHP_CFLAGS\"
      \t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \t\tLDFLAGS=\"$PHP_LDFLAGS\" \t&& docker-php-source
      extract \t&& cd /usr/src/php \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"
      \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\"
      \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t\t\t--disable-cgi
      \t\t\t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd \t\t\t\t--with-curl
      \t\t--with-libedit \t\t--with-openssl \t\t--enable-soap \t\t--enable-zip \t\t--with-zlib
      \t\t--enable-maintainer-zts\t\t\t\t--with-pcre-regex=/usr \t\t--with-libdir=\"lib/$gnuArch\"
      \t\t\t\t$PHP_EXTRA_CONFIGURE_ARGS \t&& make -j \"$(nproc)\" \t&& make install
      \t&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all
      '{}' + || true; } \t&& make clean \t&& docker-php-source delete"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - docker-php-entrypoint
    - /usr/local/bin/
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /var/www/html
  - CmdLine:
    - "set -ex \t&& cd /usr/local/etc \t&& if [ -d php-fpm.d ]; then \t\tsed 's!=NONE/!=!g'
      php-fpm.conf.default | tee php-fpm.conf > /dev/null; \t\tcp php-fpm.d/www.conf.default
      php-fpm.d/www.conf; \telse \t\tmkdir php-fpm.d; \t\tcp php-fpm.conf.default
      php-fpm.d/www.conf; \tfi \t&& { \t\techo '[global]'; \t\techo 'include=etc/php-fpm.d/*.conf';
      \t} | tee php-fpm.conf \t&& { \t\techo '[global]'; \t\techo 'error_log = /proc/self/fd/2';
      \t\techo; \t\techo '[www]'; \t\techo '; if we send this to /proc/self/fd/1,
      it never appears'; \t\techo 'access.log = /proc/self/fd/2'; \t\techo; \t\techo
      '; Ensure worker stdout and stderr are sent to the main error log.'; \t\techo
      'catch_workers_output = yes'; \t} | tee php-fpm.d/docker.conf \t&& { \t\techo
      '[global]'; \t\techo 'daemonize = no'; \t\techo; \t\techo '[www]'; \t\techo
      'listen = 9000'; \t} | tee php-fpm.d/zz-docker.conf"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - "echo \"Europe/Moscow\" > /etc/timezone && \tdpkg-reconfigure -f noninteractive
      tzdata && \tsed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
      && \tsed -i -e 's/# ru_RU.UTF-8 UTF-8/ru_RU.UTF-8 UTF-8/' /etc/locale.gen &&
      \techo 'LANG=\"ru_RU.UTF-8\"'>/etc/default/locale && \tdpkg-reconfigure --frontend=noninteractive
      locales && \tupdate-locale LANG=ru_RU.UTF-8 && \tdocker-php-ext-install curl
      iconv mcrypt calendar mysqli && \tdocker-php-ext-configure gd --with-freetype-dir=/usr/include/
      --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ && \tdocker-php-ext-install
      mbstring pdo_mysql tokenizer pdo_pgsql gd exif bcmath opcache sockets &&\tpecl
      install timezonedb && \tpecl install pthreads-2.0.10"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .crontab
    - /etc/cron.d/cron
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - schedule.sh
    - /root/schedule.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - CmdLine:
    - chmod 644 /etc/cron.d/cron && chmod 744 /root/schedule.sh && usermod  -u 1000
      www-data && groupmod -g 1000 www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y wget memcached && wget http://pecl.php.net/get/memcache-2.2.7.tgz
      && tar -zxvf memcache-2.2.7.tgz && \tcd memcache-2.2.7 && phpize && ./configure
      && make && make install &&\techo \"extension=memcache.so\" > $PHP_INI_DIR/conf.d/memcache.ini
      && cd .. && rm -R memcache-2.2.7"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - www.conf
    - /usr/local/etc/php-fpm.d/
  - CmdLine:
    - "echo \"memory_limit=-1\" > $PHP_INI_DIR/conf.d/memory-limit.ini && \techo \"extension=timezonedb.so\"
      > $PHP_INI_DIR/conf.d/timezonedb.ini && \techo \"extension=pthreads.so\" > $PHP_INI_DIR/conf.d/pthreads.ini
      && \techo \"date.timezone=europe/moscow\" > $PHP_INI_DIR/conf.d/date.timezone.ini
      && \techo \"mbstring.func_overload=2\" > $PHP_INI_DIR/conf.d/mbstring.func_overload.ini
      && \techo \"mbstring.internal_encoding=UTF-8\" > $PHP_INI_DIR/conf.d/mbstring.internal_encoding.ini
      && \techo \"opcache.revalidate_freq=0\" > $PHP_INI_DIR/conf.d/opcache.revalidate_freq.ini
      && \techo \"opcache.max_accelerated_files=100000\" > $PHP_INI_DIR/conf.d/opcache.max_accelerated_files.ini
      && \techo \"max_input_vars=100000\" > $PHP_INI_DIR/conf.d/max_input_vars.ini
      && \techo \"upload_max_filesize=500M\" > $PHP_INI_DIR/conf.d/upload_max_filesize.ini
      && \techo \"error_log=/var/log/schedule.log\\nlog_errors=On\\nerror_reporting=E_ALL\"
      > $PHP_INI_DIR/conf.d/error_log.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/supervisord
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
