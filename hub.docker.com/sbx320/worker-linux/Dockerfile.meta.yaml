MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /compat
  - CmdLine:
    - "apt-get update && apt-get install -y \tsoftware-properties-common \tca-certificates
      \tgit \twget \tssh"
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:ubuntu-toolchain-r/test
    Name: run
    PrependShell: true
  - CmdLine:
    - echo deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-6.0 main > /etc/apt/sources.list.d/llvm.list
      && wget -O - http://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \tclang-6.0 \tclang-tidy-6.0 \tninja-build
      \tmake \tzsh \tbuild-essential \tcurl \tsubversion \tcmake \tlibssl-dev && \tapt-get
      clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0
      100
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 100
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/cc cc /usr/bin/clang 40
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 40
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install /usr/bin/cpp cpp /usr/bin/clang++ 40
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --set cc /usr/bin/clang
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --set c++ /usr/bin/clang++
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --set cpp /usr/bin/clang++
    Name: run
    PrependShell: true
  - Env:
    - Key: SSL_VER
      Value: 1.0.2o
    - Key: PREFIX
      Value: /usr/local
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - CmdLine:
    - curl -sL http://www.openssl.org/source/openssl-$SSL_VER.tar.gz | tar xz &&     cd
      openssl-$SSL_VER &&     ./Configure no-shared --prefix=$PREFIX --openssldir=$PREFIX/ssl
      no-zlib linux-x86_64 -fPIC &&     make depend 2> /dev/null && make -j$(nproc)
      && make install &&     cd .. && rm -rf openssl-$SSL_VER
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENSSL_LIB_DIR
      Value: $PREFIX/lib
    - Key: OPENSSL_INCLUDE_DIR
      Value: $PREFIX/include
    - Key: OPENSSL_DIR
      Value: $PREFIX
    - Key: OPENSSL_STATIC
      Value: "1"
    Name: env
  - Env:
    - Key: CXX
      Value: '"clang++ -fPIC -i/compat/glibc_version.h -I/compat"'
    Name: env
  - Env:
    - Key: CC
      Value: '"clang -fPIC -i/compat/glibc_version.h"'
    Name: env
  - Env:
    - Key: CPP
      Value: '"clang -E"'
    Name: env
  - Env:
    - Key: LINK
      Value: '"clang++ -L/compat"'
    Name: env
  - CmdLine:
    - "mkdir /libcpp && \tcd /libcpp && \tsvn co http://llvm.org/svn/llvm-project/llvm/branches/release_60
      llvm && \tcd llvm/projects && \tsvn co http://llvm.org/svn/llvm-project/libcxx/branches/release_60
      libcxx && \tsvn co http://llvm.org/svn/llvm-project/libcxxabi/branches/release_60
      libcxxabi && \tcd .. && \tmkdir build && \tcd build && \tcmake -G \"Unix Makefiles\"
      \        -DLIBCXX_ENABLE_SHARED=NO         -DLIBCXX_INCLUDE_BENCHMARKS=NO         -DLIBCXX_ENABLE_STATIC=YES
      \        -DLIBCXXABI_ENABLE_SHARED=NO         -DLIBCXXABI_ENABLE_STATIC=YES
      \t\t-DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON         -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=YES
      \t\t-DCMAKE_INSTALL_PREFIX=/usr/ \t\t-DCMAKE_BUILD_TYPE=Release \t\t/libcpp/llvm
      && \tmake cxx && \tmake install-cxx install-cxxabi && \tcp /libcpp/llvm/projects/libcxxabi/include/*
      /usr/include/c++/v1/ && \trm -rf /libcpp"
    Name: run
    PrependShell: true
  - CmdLine:
    - objcopy --redefine-syms=/compat/glibc_version.redef /usr/local/lib/libssl.a
      /compat/libssl.a
    Name: run
    PrependShell: true
  - CmdLine:
    - objcopy --redefine-syms=/compat/glibc_version.redef /usr/local/lib/libcrypto.a
      /compat/libcrypto.a
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/sbx320/binaries/blob/master/dump_syms?raw=true -O /usr/bin/dump_syms
      && chmod +x /usr/bin/dump_syms
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
