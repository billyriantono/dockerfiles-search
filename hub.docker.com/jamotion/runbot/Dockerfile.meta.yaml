MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: Renzo Meister <rm@jamotion.ch>
    Name: maintainer
  - Env:
    - Key: PG_VERSION
      Value: "9.4"
    - Key: PG_USER
      Value: postgres
    - Key: USERMAP_GID
      Value: "5050"
    - Key: USERMAP_UID
      Value: "5050"
    - Key: PG_HOME
      Value: '"/var/lib/postgresql"'
    Name: env
  - Env:
    - Key: PG_CONFDIR
      Value: '"/etc/postgresql/${PG_VERSION}/main"'
    - Key: PG_BINDIR
      Value: '"/usr/lib/postgresql/${PG_VERSION}/bin"'
    - Key: PG_DATADIR
      Value: '"${PG_HOME}/${PG_VERSION}/main"'
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --force-yes wget
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key
      add -  && echo 'deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main'
      > /etc/apt/sources.list.d/pgdg.list  && apt-get update  && apt-get install -y
      postgresql-${PG_VERSION} postgresql-client-${PG_VERSION} postgresql-contrib-${PG_VERSION}  &&
      rm -rf ${PG_HOME}  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends     ca-certificates curl nodejs npm
      python-support python-pyinotify  python-pip wget git fonts-dejavu poppler-utils
      antiword     && npm install -g less less-plugin-clean-css     && ln -s /usr/bin/nodejs
      /usr/bin/node     && curl -o wkhtmltox.deb -SL http://download.gna.org/wkhtmltopdf/0.12/0.12.1/wkhtmltox-0.12.1_linux-trusty-amd64.deb     &&
      echo '7dd0e9be7e4fa2a58aa7066460927cdb8ba07492 wkhtmltox.deb' | sha1sum -c -     &&
      dpkg --force-depends -i wkhtmltox.deb     && apt-get -y install -f --no-install-recommends     &&
      apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      -o APT::AutoRemove::SuggestsImportant=false npm     && rm -rf /var/lib/apt/lists/*
      wkhtmltox.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends wget && sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/
      $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'     && wget
      --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key
      add -     && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O - http://nginx.org/keys/nginx_signing.key | sudo apt-key add -     &&
      echo "deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx" > /etc/apt/sources.list.d/nginx.list     &&
      echo "deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx" >> /etc/apt/sources.list.d/nginx.list     &&
      apt-get update     && apt-get install nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup --gid=5000 odoo && adduser --system --uid=5000 --gid=5000 --home /var/lib/odoo
      --shell /bin/bash odoo
    Name: run
    PrependShell: true
  - Env:
    - Key: ODOO_VERSION
      Value: "8.0"
    Name: env
  - Env:
    - Key: ODOO_RELEASE
      Value: "20160207"
    Name: env
  - CmdLine:
    - set -x;         curl -o odoo.deb -SL http://nightly.odoo.com/${ODOO_VERSION}/nightly/deb/odoo_${ODOO_VERSION}.${ODOO_RELEASE}_all.deb         &&
      dpkg --force-depends -i odoo.deb         && apt-get -y install -f --no-install-recommends         &&
      rm -rf /var/lib/apt/lists/* odoo.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libevent-dev python-all-dev python-gevent python-psycopg2
      python-matplotlib font-manager
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://pypi.python.org/packages/source/p/psycogreen/psycogreen-1.0.tar.gz     &&
      tar xvvf psycogreen-1.0.tar.gz     && cd psycogreen-1.0     && python setup.py
      install     && easy_install greenlet     && easy_install gevent-psycopg2     &&
      easy_install PyWebDAV     && pip install gdata unidecode unirest ftputil xlrd
      docker-py pyserial     && cd ..     && rm -rf psycogreen-1.0*
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R odoo.odoo /usr/lib/python2.7/dist-packages/openerp
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install git+https://github.com/aeroo/aeroolib.git@master
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install openssh-server
      pwgen
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/sshd     && sed -i "s/UsePrivilegeSeparation.*/UsePrivilegeSeparation
      no/g" /etc/ssh/sshd_config     && sed -i "s/UsePAM.*/UsePAM no/g" /etc/ssh/sshd_config     &&
      sed -i "s/PermitRootLogin.*/PermitRootLogin yes/g" /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen fr_FR     && locale-gen en_US.UTF-8     && dpkg-reconfigure locales     &&
      update-locale LANG=en_US.UTF-8     && update-locale LC_ALL=en_US.UTF-8     &&
      echo 'LANG="en_US.UTF-8"' > /etc/default/locale
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bin
    - /opt/odoo/bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/start
    - /start
  - CmdLine:
    - chmod 755 /start
    Name: run
    PrependShell: true
  - Env:
    - Key: AUTHORIZED_KEYS
      Value: '**None**'
    Name: env
  - Name: volume
    Volumes:
    - /opt/odoo/custom_addons
    - /opt/odoo/data
    - /usr/local/share/fonts
    - /etc/odoo
    - /var/log/odoo
  - Name: expose
    Ports:
    - "2022"
    - "8069"
    - "8071"
    - "8072"
  - Env:
    - Key: OPENERP_SERVER
      Value: /etc/odoo/odoo-server.conf
    Name: env
  - CmdLine:
    - /start
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
