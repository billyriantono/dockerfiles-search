MetaArgs: null
Stages:
- BaseName: python:3.6-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Lyuben Bahtarliev <lyuben.bahtarliev@akat-t.com>"'
    Name: label
  - Name: workdir
    Path: /opt/malwarescan
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - ./
  - CmdLine:
    - "clear && echo -e \"\\n[$(date)] Starting... \\n\" && apk update \t&& echo -e
      \"\\n[$(date)] Processing build dependencies... \\n\" \t&& apk -q --no-progress
      --no-cache add \topenssl         nano         sudo         git         unzip
      \        postgresql-libs         libxslt         supervisor         libcap         shadow
      \t&& addgroup -g 1000 -S malwarescan \t&& adduser -u 1000 -s /bin/bash -h /opt/malwarescan
      -S malwarescan -G malwarescan \t&& chown malwarescan:malwarescan -R /opt/malwarescan"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo -e \"\\n[$(date)] Processing python dependencies from requirements.txt...
      \\n\"     && apk -q --no-progress --no-cache add --virtual .build-deps \tgcc
      \tmusl-dev \tlibffi-dev \tlibxslt-dev \tpostgresql-dev \ttzdata \tzlib-dev \t&&
      cp -pfrv /usr/share/zoneinfo/Europe/Sofia /etc/localtime \t&& echo \"Europe/Sofia\"
      > /etc/timezone \t&& pip -q --no-cache-dir install --no-use-pep517 -r requirements.txt
      \t&& apk --purge del .build-deps     && rm -rf /var/cache/apk/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - "echo -e \"\\n[$(date)] Installing MalwareScan package... \\n\"     && for i
      in `ls -1 *.zip`; do unzip -o $i; rm -rfv $i; done \t&& chown malwarescan:malwarescan
      -R /opt/malwarescan \t&& pip -q --no-cache-dir install --no-use-pep517 --editable
      .\t&& touch /opt/malwarescan/.firstrun     && echo -e \"\\n[$(date)] Finished!\\n\""
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /bin/sh
    - ./docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: python:3.6-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-alpine
