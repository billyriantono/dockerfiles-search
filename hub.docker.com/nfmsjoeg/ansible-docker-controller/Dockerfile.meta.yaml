MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Env:
    - Key: ANSIBLE_VERSION
      Value: 2.5.0b2
    Name: env
  - Env:
    - Key: BUILD_PACKAGES
      Value: bash   curl   tar   openssh-client   sshpass   git   python   py-boto   py-dateutil   py-httplib2   py-jinja2   py-paramiko   py-pip   py-setuptools   py-yaml   ca-certificates
    Name: env
  - CmdLine:
    - apk --update add --virtual build-dependencies   gcc   musl-dev   libffi-dev   openssl-dev   python-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x &&   apk update && apk upgrade &&   apk add --no-cache ${BUILD_PACKAGES}
      &&   pip install --upgrade pip &&   pip install python-keyczar docker-py ansible==${ANSIBLE_VERSION}
      &&   apk del build-dependencies &&   rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/ansible /ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "[local]" >> /etc/ansible/hosts &&   echo "localhost" >> /etc/ansible/hosts
    Name: run
    PrependShell: true
  - Env:
    - Key: ANSIBLE_GATHERING
      Value: smart
    Name: env
  - Env:
    - Key: ANSIBLE_HOST_KEY_CHECKING
      Value: "false"
    Name: env
  - Env:
    - Key: ANSIBLE_RETRY_FILES_ENABLED
      Value: "false"
    Name: env
  - Env:
    - Key: ANSIBLE_ROLES_PATH
      Value: /ansible/playbooks/roles
    Name: env
  - Env:
    - Key: ANSIBLE_SSH_PIPELINING
      Value: "True"
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: /ansible/lib
    Name: env
  - Env:
    - Key: PATH
      Value: /ansible/bin:$PATH
    Name: env
  - Env:
    - Key: ANSIBLE_LIBRARY
      Value: /ansible/library
    Name: env
  - Name: workdir
    Path: /ansible/playbooks
  - CmdLine:
    - ansible-playbook
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
