{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "microsoft/mssql-server-linux:2017-latest",
      "SourceCode": "FROM microsoft/mssql-server-linux:2017-latest",
      "Platform": "",
      "From": {
        "Image": "microsoft/mssql-server-linux:2017-latest"
      },
      "Commands": [
        {
          "Key": "FLYWAY_VERSION",
          "Name": "arg",
          "Value": "5.1.4"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y openjdk-8-jdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y ca-certificates-java"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y ant"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-ca-certificates -f"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export JAVA_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /flyway   \u0026\u0026 cd /flyway   \u0026\u0026 curl -L https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/${FLYWAY_VERSION}/flyway-commandline-${FLYWAY_VERSION}.tar.gz -o flyway-commandline-${FLYWAY_VERSION}.tar.gz   \u0026\u0026 tar -xzf flyway-commandline-${FLYWAY_VERSION}.tar.gz --strip-components=1   \u0026\u0026 rm flyway-commandline-${FLYWAY_VERSION}.tar.gz   \u0026\u0026 ln -s /flyway/flyway /usr/local/bin/flyway"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /flyway/sql/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh -c \"until (/opt/mssql/bin/sqlservr); do sleep 1; done \u0026 until (/opt/mssql-tools/bin/sqlcmd -l 40 -S localhost -U sa -P ${SA_PASSWORD} -d tempdb -q \\\"If(db_id('${DATABASE}') IS NULL) CREATE DATABASE ${DATABASE}\\\"); do sleep 1; done; until (flyway info -user='sa' -password='${SA_PASSWORD}' -url='jdbc:sqlserver://localhost:1433;databaseName=${DATABASE}'); do sleep 5; done; if [ -z \\\"$(ls -A /flyway/sql)\\\" ]; then echo 0; else flyway migrate -user='sa' -password='${SA_PASSWORD}' -url='jdbc:sqlserver://localhost:1433;databaseName=${DATABASE}'; flyway info -user='sa' -password='${SA_PASSWORD}' -url='jdbc:sqlserver://localhost:1433;databaseName=${DATABASE}'; fi; wait\""
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}