{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "groupadd -r mongodb \u0026\u0026 useradd -r -g mongodb mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y --no-install-recommends     ca-certificates     jq     numactl   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JSYAML_VERSION",
              "Value": "3.10.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex;     apt-get update;   apt-get install -y --no-install-recommends     wget   ;   rm -rf /var/lib/apt/lists/*;     dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\";   wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";   wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\";   export GNUPGHOME=\"$(mktemp -d)\";   gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;   gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;   rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc;   chmod +x /usr/local/bin/gosu;   gosu nobody true;     wget -O /js-yaml.js \"https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js\";     apt-get purge -y --auto-remove wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /docker-entrypoint-initdb.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "DFFA3DCF326E302C4787673A01C4E7FAAAB2461C   42F3E95A2C4F08279C4960ADD68FA50FEA312927"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex;   export GNUPGHOME=\"$(mktemp -d)\";   for key in $GPG_KEYS; do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";   done;   gpg --export $GPG_KEYS \u003e /etc/apt/trusted.gpg.d/mongodb.gpg;   rm -r \"$GNUPGHOME\";   apt-key list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "MONGO_PACKAGE",
          "Name": "arg",
          "Value": "mongodb-org"
        },
        {
          "Key": "MONGO_REPO",
          "Name": "arg",
          "Value": "repo.mongodb.org"
        },
        {
          "Env": [
            {
              "Key": "MONGO_PACKAGE",
              "Value": "${MONGO_PACKAGE}"
            },
            {
              "Key": "MONGO_REPO",
              "Value": "${MONGO_REPO}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_MAJOR",
              "Value": "3.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_VERSION",
              "Value": "3.2.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y     ${MONGO_PACKAGE}=$MONGO_VERSION     ${MONGO_PACKAGE}-server=$MONGO_VERSION     ${MONGO_PACKAGE}-shell=$MONGO_VERSION     ${MONGO_PACKAGE}-mongos=$MONGO_VERSION     ${MONGO_PACKAGE}-tools=$MONGO_VERSION   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 rm -rf /var/lib/mongodb   \u0026\u0026 mv /etc/mongod.conf /etc/mongod.conf.orig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /data/db /data/configdb   \u0026\u0026 chown -R mongodb:mongodb /data/db /data/configdb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data/db",
            "/data/configdb"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "27017"
          ]
        },
        {
          "CmdLine": [
            "mongod"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}