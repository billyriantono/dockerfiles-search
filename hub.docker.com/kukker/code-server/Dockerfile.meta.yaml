MetaArgs: null
Stages:
- BaseName: ubuntu:19.04
  Commands:
  - CmdLine:
    - apt-get clean && apt-get update && apt-get install --no-install-recommends -y     gpg     curl     wget     lsb-release     add-apt-key     ca-certificates     dumb-init     tmux     net-tools     nano     openssh-client     git     sudo     gdb     pkg-config     build-essential     nodejs     npm     python3     python3-dev     python3-setuptools     python3-pip     python3-wheel     python3-pylint-common     chromium-browser     bsdtar     openssl     locales     net-tools     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://get.docker.com/ | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - 'export DOCKER_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest
      | grep ''tag_name'' | cut -d\" -f4) # "'
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname
      -s`-`uname -m` > /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM_VERSION
      Value: '"v2.14.3"'
    Name: env
  - CmdLine:
    - wget -q https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz
      -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm     && chmod +x /usr/local/bin/helm
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL "https://storage.googleapis.com/kubernetes-release/release/$(curl -s
      https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      -o /usr/local/bin/kubectl && chmod +x /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install --upgrade setuptools     && python3 -m pip install wheel     &&
      python3 -m pip install -U pylint autopep8 flake8
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://dl.google.com/go/go1.13.linux-amd64.tar.gz | tar -zx -C /usr/local
    Name: run
    PrependShell: true
  - CmdLine:
    - localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - Env:
    - Key: DISABLE_TELEMETRY
      Value: "true"
    Name: env
  - CmdLine:
    - export CODE_VERSION=2.1688-vsc1.39.2     && export CODE_ARCH=linux-x86_64     &&
      curl -sL https://github.com/cdr/code-server/releases/download/${CODE_VERSION}/code-server${CODE_VERSION}-${CODE_ARCH}.tar.gz
      | tar --strip-components=1 -zx -C /usr/local/bin code-server${CODE_VERSION}-${CODE_ARCH}/code-server
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd --gid 1024 -r coder     && useradd -m -r coder -g coder -s /bin/bash     &&
      echo "coder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/nopasswd
    Name: run
    PrependShell: true
  - Name: user
    User: coder
  - Env:
    - Key: PATH
      Value: '"${PATH}:/usr/local/go/bin:/home/coder/go/bin"'
    Name: env
  - Env:
    - Key: VSCODE_USER
      Value: '"/home/coder/.local/share/code-server/User"'
    Name: env
  - Env:
    - Key: VSCODE_EXTENSIONS
      Value: '"/home/coder/.local/share/code-server/extensions"'
    Name: env
  - CmdLine:
    - mkdir -p ${VSCODE_USER}
    Name: run
    PrependShell: true
  - Chown: coder:coder
    From: ""
    Name: copy
    SourcesAndDest:
    - settings.json
    - /home/coder/.local/share/code-server/User/
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/go     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-vscode/vsextensions/Go/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/go extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/python     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-python/vsextensions/python/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/python extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/yaml     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/redhat/vsextensions/vscode-yaml/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/yaml extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/kubernetes     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-kubernetes-tools/vsextensions/vscode-kubernetes-tools/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/kubernetes extension
    Name: run
    PrependShell: true
  - CmdLine:
    - helm init --client-only
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/browser-debugger     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/msjsdiag/vsextensions/debugger-for-chrome/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/browser-debugger
      extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/browser-preview     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/auchenberg/vsextensions/vscode-browser-preview/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/browser-preview
      extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/gitlens     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/eamodio/vsextensions/gitlens/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/gitlens extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/docker     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-azuretools/vsextensions/vscode-docker/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/docker extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/remote     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-vscode-remote/vsextensions/vscode-remote-extensionpack/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/remote extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/swagger     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/42Crunch/vsextensions/vscode-openapi/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/swagger extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/plantuml     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/jebbs/vsextensions/plantuml/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/plantuml extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/intellicode     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/VisualStudioExptTeam/vsextensions/vscodeintellicode/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/intellicode extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/jinjahtml     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/samuelcolvin/vsextensions/jinjahtml/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/jinjahtml extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${VSCODE_EXTENSIONS}/dotenv     && curl -JLs https://marketplace.visualstudio.com/_apis/public/gallery/publishers/mikestead/vsextensions/dotenv/latest/vspackage
      | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/dotenv extension
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/coder/project
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/coder/project
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - dumb-init
    - code-server
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:19.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:19.04
