MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Myung ju Kim <ming3772@gmail.com>
    Name: maintainer
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential git
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python python-dev python3 python3-dev python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nginx supervisor
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install glances
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "\ndaemon off;" >> /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R www-data:www-data /var/lib/nginx
    Name: run
    PrependShell: true
  - Env:
    - Key: UWSGIVERSION
      Value: 2.0.11.2
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends             build-essential             libjansson-dev             libpcre3-dev             libssl-dev             libxml2-dev             wget             zlib1g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src &&     wget --quiet -O - http://projects.unbit.it/downloads/uwsgi-${UWSGIVERSION}.tar.gz
      |     tar zxvf -
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src/uwsgi-${UWSGIVERSION} && make
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/src/uwsgi-${UWSGIVERSION}/uwsgi /usr/local/bin/uwsgi
    Name: run
    PrependShell: true
  - CmdLine:
    - PYTHON=/usr/local/python3.4/bin/python3.4
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src/uwsgi-${UWSGIVERSION} && ./uwsgi --build-plugin "plugins/python
      python34"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/lib/uwsgi/plugins
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/src/uwsgi-${UWSGIVERSION}/*.so /usr/local/lib/uwsgi/plugins
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install uwsgi
    Name: run
    PrependShell: true
  - Env:
    - Key: VERSION
      Value: "7"
    Name: env
  - Env:
    - Key: UPDATE
      Value: "80"
    Name: env
  - Env:
    - Key: BUILD
      Value: "15"
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-${VERSION}-oracle
    Name: env
  - Env:
    - Key: JRE_HOME
      Value: ${JAVA_HOME}/jre
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install ca-certificates curl -y && \tcurl --silent
      --location --retry 3 --cacert /etc/ssl/certs/GeoTrust_Global_CA.pem \t--header
      \"Cookie: oraclelicense=accept-securebackup-cookie;\" \thttp://download.oracle.com/otn-pub/java/jdk/\"${VERSION}\"u\"${UPDATE}\"-b\"${BUILD}\"/server-jre-\"${VERSION}\"u\"${UPDATE}\"-linux-x64.tar.gz
      \t| tar xz -C /tmp && \tmkdir -p /usr/lib/jvm && mv /tmp/jdk1.${VERSION}.0_${UPDATE}
      \"${JAVA_HOME}\" && \tapt-get autoclean && apt-get --purge -y autoremove &&
      \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "update-alternatives --install \"/usr/bin/java\" \"java\" \"${JRE_HOME}/bin/java\"
      1 && \tupdate-alternatives --install \"/usr/bin/javac\" \"javac\" \"${JAVA_HOME}/bin/javac\"
      1 && \tupdate-alternatives --set java \"${JRE_HOME}/bin/java\" && \tupdate-alternatives
      --set javac \"${JAVA_HOME}/bin/javac\""
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq &&     apt-get install -qq -y ca-certificates curl nodejs
      git make g++ &&     ln -s /usr/bin/nodejs /usr/local/bin/node &&     curl -skLN
      https://npmjs.org/install.sh | /bin/bash &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g bower
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get install -y python-software-properties sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y redis-server
    Name: run
    PrependShell: true
  - CmdLine:
    - sysctl vm.overcommit_memory=1 > /dev/null
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R redis:redis /var/lib/redis
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-psycopg2
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libpq-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python3-lxml
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libxml2-dev libxslt-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libmemcached-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: PROJECT_DIR
      Value: /home/ubuntu/workspace/ward
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - ${PROJECT_DIR}
  - CmdLine:
    - chown -R www-data:www-data ${PROJECT_DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${PROJECT_DIR} && bower --allow-root install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${PROJECT_DIR} && pip3 install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${PROJECT_DIR}/www && python3 manage.py migrate --noinput
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ${PROJECT_DIR}/www && python3 manage.py collectstatic --noinput
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/uwsgi/sites-available
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s ${PROJECT_DIR}/conf/nginx-app.conf /etc/nginx/sites-enabled/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s ${PROJECT_DIR}/conf/uwsgi.ini /var/uwsgi/sites-available/
    Name: run
    PrependShell: true
  - CmdLine:
    - cp ${PROJECT_DIR}/conf/celeryd.conf /etc/default/celeryd
    Name: run
    PrependShell: true
  - CmdLine:
    - cp ${PROJECT_DIR}/conf/celerybeat.conf /etc/default/celerybeat
    Name: run
    PrependShell: true
  - CmdLine:
    - cp ${PROJECT_DIR}/conf/redis.conf /etc/redis/redis.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s ${PROJECT_DIR}/conf/supervisor-app.conf /etc/supervisor/conf.d/
    Name: run
    PrependShell: true
  - CmdLine:
    - cp ${PROJECT_DIR}/conf/celeryd /etc/init.d/
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /etc/init.d/celeryd
    Name: run
    PrependShell: true
  - CmdLine:
    - update-rc.d celeryd defaults
    Name: run
    PrependShell: true
  - CmdLine:
    - update-rc.d celeryd enable
    Name: run
    PrependShell: true
  - CmdLine:
    - chown root:root /etc/init.d/celeryd
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 /etc/init.d/celeryd
    Name: run
    PrependShell: true
  - CmdLine:
    - cp ${PROJECT_DIR}/conf/celerybeat /etc/init.d/
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /etc/init.d/celerybeat
    Name: run
    PrependShell: true
  - CmdLine:
    - update-rc.d celerybeat defaults
    Name: run
    PrependShell: true
  - CmdLine:
    - update-rc.d celerybeat enable
    Name: run
    PrependShell: true
  - CmdLine:
    - chown root:root /etc/init.d/celerybeat
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 /etc/init.d/celerybeat
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
    - /var/log
    - /etc/nginx/site-enabled
    - /var/log/nginx
    - /etc/uwsgi/apps-enabled
    - /var/log/uwsgi
    - /var/log/celery
    - /var/log/supervisor
    - /var/lib/redis
    - /etc/redis
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  - CmdLine:
    - supervisord
    - -n
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
