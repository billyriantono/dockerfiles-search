MetaArgs: null
Stages:
- As: node
  BaseName: node:8
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app
  - Name: workdir
    Path: /app
  - Env:
    - Key: METEOR_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - CmdLine:
    - curl https://install.meteor.com/ | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - meteor npm install  && set +e  && meteor add rocketchat:lib  && set -e  && meteor
      build --server-only .
    Name: run
    PrependShell: true
  From:
    Image: node:8
  Name: node
  Platform: ""
  SourceCode: FROM node:8 AS node
- BaseName: rocketchat/base:8
  Commands:
  - CmdLine:
    - mkdir -p /app
    Name: run
    PrependShell: true
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /app/app.tar.gz
    - /app/app.tar.gz
  - CmdLine:
    - set -x  && cd /app  && tar xzvf app.tar.gz  && rm -rf app.tar.gz  && cd /app/bundle/programs/server  &&
      npm install  && npm cache clear --force  && chown -R rocketchat:rocketchat /app
    Name: run
    PrependShell: true
  - Name: user
    User: rocketchat
  - Name: volume
    Volumes:
    - /app/uploads
  - Name: workdir
    Path: /app/bundle
  - Env:
    - Key: DEPLOY_METHOD
      Value: docker
    - Key: NODE_ENV
      Value: production
    - Key: MONGO_URL
      Value: mongodb://mongo:27017/rocketchat
    - Key: HOME
      Value: /tmp
    - Key: PORT
      Value: "3000"
    - Key: ROOT_URL
      Value: http://localhost:3000
    - Key: Accounts_AvatarStorePath
      Value: /app/uploads
    Name: env
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - node
    - main.js
    Name: cmd
    PrependShell: false
  From:
    Image: rocketchat/base:8
  Name: ""
  Platform: ""
  SourceCode: FROM rocketchat/base:8
