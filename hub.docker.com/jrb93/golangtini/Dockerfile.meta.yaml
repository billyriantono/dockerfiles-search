MetaArgs: null
Stages:
- BaseName: jrb93/alpinetini:3.6
  Commands:
  - Labels:
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.name
      Value: '"golangtini"'
    - Key: org.label-schema.version
      Value: '"1.1.0"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/jrb93/golangtini"'
    Name: label
  - Env:
    - Key: GOLANG_VERSION
      Value: '"1.9.2"'
    - Key: GOPATH
      Value: '"/go"'
    - Key: PATH
      Value: '"$GOPATH/bin:/usr/local/go/bin:$PATH"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '*.patch'
    - go-wrapper
    - /tmp/
  - CmdLine:
    - "set -eux; \tmkdir /go-alpine-patches/; \tmv /tmp/*.patch /go-alpine-patches/;
      \tmv /tmp/go-wrapper /usr/local/bin/; \tapk add --no-cache ca-certificates git;
      \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl
      \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go
      env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGO386=\"$(go env GO386)\" \t\tGOARM=\"$(go
      env GOARM)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\"
      \t; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\";
      \techo '665f184bf8ac89986cfd5a4460736976f60b57df6b320ad71ad4cef53bb143dc *go.tgz'
      | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src;
      \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch
      -p2 -i \"$p\"; \tdone; \t./make.bash; \t\texport PATH=\"/usr/local/go/bin:$PATH\";
      \tmkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"; \tgo
      version; \t\trm -rf /go-alpine-patches; \tapk del --no-cache .build-deps"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH
  From:
    Image: jrb93/alpinetini:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM jrb93/alpinetini:3.6
