MetaArgs: null
Stages:
- BaseName: 32bit/ubuntu:16.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
      &&   echo "deb http://download.mono-project.com/repo/ubuntu xenial main" | sudo
      tee /etc/apt/sources.list.d/mono-xamarin.list &&   apt-get -qq update &&   apt-get
      -qq -y --no-install-recommends install     ant     build-essential     default-jdk     doxygen     gdb     git     gksu     gtk-sharp2     iputils-tracepath     libcanberra-gtk-module:i386     libgtk2.0-0     mono-complete     mosquitto     mosquitto-clients     npm     python-pip     python-serial     rlwrap     screen     srecord     uml-utilities     unzip     valgrind     wget     smitools     snmp     snmp-mibs-downloader     >
      /dev/null   && apt-get -qq clean
    Name: run
    PrependShell: true
  - CmdLine:
    - npm -q install coap-cli@0.5.1 -g   && sudo ln -s /usr/bin/nodejs /usr/bin/node
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -nv https://launchpad.net/gcc-arm-embedded/5.0/5-2015-q4-major/+download/gcc-arm-none-eabi-5_2-2015q4-20151219-linux.tar.bz2
      &&   tar xjf gcc-arm-none-eabi-5_2-2015q4-20151219-linux.tar.bz2 -C /tmp/ &&   cp
      -f -r /tmp/gcc-arm-none-eabi-5_2-2015q4/* /usr/local/ &&   rm -rf /tmp/gcc-arm-none-eabi-*
      gcc-arm-none-eabi-*-linux.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -nv http://simonduq.github.io/resources/mspgcc-4.7.2-compiled.tar.bz2 &&   tar
      xjf mspgcc*.tar.bz2 -C /tmp/ &&   cp -f -r /tmp/msp430/* /usr/local/ &&   rm
      -rf /tmp/msp430 mspgcc*.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -nv http://simonduq.github.io/resources/ba-elf-gcc-4.7.4-part1.tar.bz2
      &&   wget -nv http://simonduq.github.io/resources/ba-elf-gcc-4.7.4-part2.tar.bz2
      &&   wget -nv http://simonduq.github.io/resources/jn516x-sdk-4163-1416.tar.bz2
      &&   mkdir /tmp/jn516x-sdk /tmp/ba-elf-gcc &&   tar xjf jn516x-sdk-*.tar.bz2
      -C /tmp/jn516x-sdk &&   tar xjf ba-elf-gcc-*part1.tar.bz2 -C /tmp/ba-elf-gcc
      &&   tar xjf ba-elf-gcc-*part2.tar.bz2 -C /tmp/ba-elf-gcc &&   cp -f -r /tmp/jn516x-sdk
      /usr/ &&   cp -f -r /tmp/ba-elf-gcc /usr/ &&   rm -rf jn516x*.bz2 ba-elf-gcc*.bz2
      /tmp/ba-elf-gcc* /tmp/jn516x-sdk*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/usr/ba-elf-gcc/bin:${PATH}"'
    Name: env
  - CmdLine:
    - wget -nv https://developer.nordicsemi.com/nRF5_IoT_SDK/nRF5_IoT_SDK_v0.9.x/nrf5_iot_sdk_3288530.zip
      &&     mkdir /usr/nrf52-sdk &&     unzip -q nrf5_iot_sdk_3288530.zip -d /usr/nrf52-sdk
      &&     rm nrf5_iot_sdk_3288530.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: NRF52_SDK_ROOT
      Value: /usr/nrf52-sdk
    Name: env
  - CmdLine:
    - pip -q install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip -q install setuptools && pip -q install sphinx_rtd_theme sphinx
    Name: run
    PrependShell: true
  - CmdLine:
    - 'export uid=1000 gid=1000 &&     mkdir -p /home/user &&     echo "user:x:${uid}:${gid}:user,,,:/home/user:/bin/bash"
      >> /etc/passwd &&     echo "user:x:${uid}:" >> /etc/group &&     echo "user
      ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers &&     chmod 0440 /etc/sudoers &&     chown
      ${uid}:${gid} -R /home/user &&     usermod -aG dialout user'
    Name: run
    PrependShell: true
  - Name: user
    User: user
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/default-java
    Name: env
  - Env:
    - Key: HOME
      Value: /home/user
    Name: env
  - Env:
    - Key: CONTIKI_NG
      Value: ${HOME}/contiki-ng
    Name: env
  - Env:
    - Key: COOJA
      Value: ${CONTIKI_NG}/tools/cooja
    Name: env
  - Env:
    - Key: PATH
      Value: '"${HOME}:${PATH}"'
    Name: env
  - Name: workdir
    Path: ${HOME}
  - CmdLine:
    - echo "#!/bin/bash\nant -Dbasedir=${COOJA} -f ${COOJA}/build.xml run" > ${HOME}/cooja
      &&   chmod +x ${HOME}/cooja
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --quiet https://github.com/renode/renode.git   && cd ${HOME}/renode   &&
      git checkout v1.3   && ./build.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${HOME}/renode:${PATH}"'
    Name: env
  - Name: workdir
    Path: ${CONTIKI_NG}
  - CmdLine:
    - bash --login
    Name: cmd
    PrependShell: true
  From:
    Image: 32bit/ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM 32bit/ubuntu:16.04
