MetaArgs:
- DefaultValue: someversion
  Key: IMAGE_VERSION
  ProvidedValue: null
  Value: someversion
Stages:
- BaseName: hilbert/base:${IMAGE_VERSION}
  Commands:
  - Maintainer: Oleksandr Motsak <malex984+hilbert.mng@gmail.com>
    Name: maintainer
  - CmdLine:
    - update.sh  && DEBIAN_FRONTEND=noninteractive curl -sL https://deb.nodesource.com/setup_4.x
      | sudo -E bash -  && install.sh nodejs  && clean.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - update.sh &&     install.sh nginx rsync wakeonlan openssh-client &&     clean.sh
      &&     rm -fR /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default
      /root/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 -b 'master' https://github.com/hilbert/hilbert-ui.git /usr/local/hilbert-ui     &&
      cd /usr/local/hilbert-ui/client && npm install && cd /usr/local/hilbert-ui/server
      && npm install
    Name: run
    PrependShell: true
  - Env:
    - Key: HILBERT_CLI_PATH
      Value: /usr/local/bin
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - '"https://cloud.imaginary.org/index.php/s/WSGU4yEaR4RaH3T/download?path=%2F&files=hilbert"'
    - /usr/local/bin/hilbert
  - CmdLine:
    - chmod a+x /usr/local/bin/hilbert
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - shellcheck
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.sh
    - run.sh
    - /usr/local/
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Key: GIT_NOT_CLEAN_CHECK
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: someday
  - Key: VCS_REF
    Name: arg
    Value: HEAD
  - Key: VCS_URL
    Name: arg
    Value: '"https://github.com/hilbert/hilbert-docker-images"'
  - Key: DOCKERFILE
    Name: arg
    Value: '"/images/mng/Dockerfile"'
  - Labels:
    - Key: org.label-schema.description
      Value: '"Hilbert Dashboard UI (including Hilbert server tool)"'
    - Key: org.label-schema.build-date
      Value: '"${BUILD_DATE}"'
    - Key: org.label-schema.vcs-ref
      Value: '"${VCS_REF}"'
    - Key: org.label-schema.vcs-url
      Value: '"${VCS_URL}"'
    - Key: org.label-schema.version
      Value: '"${IMAGE_VERSION}"'
    - Key: com.microscaling.docker.dockerfile
      Value: '"${DOCKERFILE}"'
    - Key: IMAGE_VERSION
      Value: '"${IMAGE_VERSION}"'
    - Key: GIT_NOT_CLEAN_CHECK
      Value: '"${GIT_NOT_CLEAN_CHECK}"'
    - Key: org.label-schema.name
      Value: '"Hilbert"'
    - Key: org.label-schema.vendor
      Value: '"IMAGINARY gGmbH"'
    - Key: org.label-schema.url
      Value: '"https://hilbert.github.io"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: com.microscaling.license
      Value: '"Apache-2.0"'
    Name: label
  - Expression: LABEL org.label-schema.build-date=""       org.label-schema.name=""       org.label-schema.description=""       org.label-schema.vendor=""       org.label-schema.url=""       org.label-schema.vcs-ref=""       org.label-schema.vcs-url=""       org.label-schema.version=""       org.label-schema.schema-version=""       com.microscaling.license=""       com.microscaling.docker.dockerfile=""       IMAGE_VERSION=""       GIT_NOT_CLEAN_CHECK=""
    Name: onbuild
  From:
    Image: hilbert/base:${IMAGE_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM hilbert/base:${IMAGE_VERSION}
