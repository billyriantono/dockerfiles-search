MetaArgs:
- DefaultValue: someversion
  Key: IMAGE_VERSION
  ProvidedValue: null
  Value: someversion
Stages:
- BaseName: hilbert/base:${IMAGE_VERSION}
  Commands:
  - Maintainer: Oleksandr Motsak <malex984+hilbert.omd@gmail.com>
    Name: maintainer
  - CmdLine:
    - gpg --keyserver keys.gnupg.net --recv-keys F8C1CA08A57B9ED7 &&     gpg --armor
      --export F8C1CA08A57B9ED7 | apt-key add - &&     echo 'deb http://labs.consol.de/repo/stable/ubuntu
      trusty main' >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - update.sh && install.sh     ssl-cert libpython2.7 net-tools netcat xinetd at     time
      traceroute libsnmp-python dialog dnsutils     fping graphviz libapache2-mod-fcgid
      libapache2-mod-proxy-html     apache2-mpm-prefork apache2-utils     libboost-program-options1.54.0
      libboost-system1.54.0 libdbi1     libevent-1.4-2 libnet-snmp-perl libpango1.0-0
      libreadline5     libsnmp-perl mysql-server patch php5-cli     php5-cgi libradiusclient-ng2
      php5-gd php5-mcrypt     php5-sqlite php-pear pyro rsync smbclient snmp unzip
      xvfb python-ldap && wget "http://files.omdistro.org/releases/1.30/omd-1.30.trusty.amd64.deb"
      -P /tmp/ && dpkg -i /tmp/omd-1.30.trusty.amd64.deb && install.sh -fy && clean.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo yes | omd setup
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod proxy && a2enmod proxy_http
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "APACHE_ULIMIT_MAX_FILES=true" >> /etc/apache2/envvars
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ServerName basic-docker-omd > /etc/apache2/conf-available/docker-servername.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enconf docker-servername
    Name: run
    PrependShell: true
  - CmdLine:
    - omd create default || true
    Name: run
    PrependShell: true
  - CmdLine:
    - omd config default set TMPFS "off" &&  omd config default set ADMIN_MAIL "malex984+omd@gmail.com"
      &&  omd config default set LIVESTATUS_TCP "on" &&  omd config default set MKEVENTD
      "on"  &&  omd config default set NAGIOS_THEME "classicui"  &&  omd config default
      set NAGVIS_URLS "nagios"  &&  omd config default set NSCA "on"  &&  omd config
      default set PNP4NAGIOS "on"  &&  omd config default set APACHE_TCP_ADDR "0.0.0.0"  &&  omd
      config default set CORE "nagios"  &&  omd config default set CRONTAB "on"  &&  omd
      config default set DEFAULT_GUI "welcome"  &&  omd config default set DOKUWIKI_AUTH
      "off"
    Name: run
    PrependShell: true
  - CmdLine:
    - omd config default show
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser default crontab
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R default.default /omd/sites/default
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "514"
  - Name: expose
    Ports:
    - "6556"
  - Name: expose
    Ports:
    - "5667"
  - Name: expose
    Ports:
    - "5000"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - omd_entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/omd_entrypoint.sh
    Name: run
    PrependShell: true
  - Key: GIT_NOT_CLEAN_CHECK
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: someday
  - Key: VCS_REF
    Name: arg
    Value: HEAD
  - Key: VCS_URL
    Name: arg
    Value: '"https://github.com/hilbert/hilbert-docker-images"'
  - Key: DOCKERFILE
    Name: arg
    Value: '"/images/omd/Dockerfile"'
  - Labels:
    - Key: org.label-schema.description
      Value: '"containes pre-cofigured OMD service instance"'
    - Key: org.label-schema.build-date
      Value: '"${BUILD_DATE}"'
    - Key: org.label-schema.vcs-ref
      Value: '"${VCS_REF}"'
    - Key: org.label-schema.vcs-url
      Value: '"${VCS_URL}"'
    - Key: org.label-schema.version
      Value: '"${IMAGE_VERSION}"'
    - Key: com.microscaling.docker.dockerfile
      Value: '"${DOCKERFILE}"'
    - Key: IMAGE_VERSION
      Value: '"${IMAGE_VERSION}"'
    - Key: GIT_NOT_CLEAN_CHECK
      Value: '"${GIT_NOT_CLEAN_CHECK}"'
    - Key: org.label-schema.name
      Value: '"Hilbert"'
    - Key: org.label-schema.vendor
      Value: '"IMAGINARY gGmbH"'
    - Key: org.label-schema.url
      Value: '"https://hilbert.github.io"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: com.microscaling.license
      Value: '"Apache-2.0"'
    Name: label
  - Expression: LABEL org.label-schema.build-date=""       org.label-schema.name=""       org.label-schema.description=""       org.label-schema.vendor=""       org.label-schema.url=""       org.label-schema.vcs-ref=""       org.label-schema.vcs-url=""       org.label-schema.version=""       org.label-schema.schema-version=""       com.microscaling.license=""       com.microscaling.docker.dockerfile=""       IMAGE_VERSION=""       GIT_NOT_CLEAN_CHECK=""
    Name: onbuild
  From:
    Image: hilbert/base:${IMAGE_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM hilbert/base:${IMAGE_VERSION}
