{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins/jenkins:lts",
      "SourceCode": "FROM jenkins/jenkins:lts",
      "Platform": "",
      "From": {
        "Image": "jenkins/jenkins:lts"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "MAINTAINER",
              "Value": "\"Stephen Steiner \u003cssteiner@juniper.net\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_OPTS",
              "Value": "'-Xmx4096m -Djenkins.install.runSetupWizard=false -Dhudson.model.DirectoryBrowserSupport.CSP=allow-same-origin'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_USER",
              "Value": "admin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_PASS",
              "Value": "admin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/var/tmp"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/var/tmp/requirements.txt"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugins.txt",
            "/usr/share/jenkins/ref/plugins.txt"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "basic-security.groovy",
            "/var/jenkins_home/init.groovy.d/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026     apt-get install -yqq apt-utils git-core maven openjdk-8-jdk curl libssl-dev build-essential libssl-dev libffi-dev python-dev         sshpass \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoremove -y  \u0026\u0026     rm -rf /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "( curl https://bootstrap.pypa.io/get-pip.py | python ) \u0026\u0026     ( curl -fsSL get.docker.com | bash ) \u0026\u0026     pip install -r requirements.txt \u0026\u0026     rm -rf /var/tmp/requirements.txt \u0026\u0026     usermod -aG docker jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "xargs /usr/local/bin/install-plugins.sh \u003c /usr/share/jenkins/ref/plugins.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /var/run/docker.sock \u0026\u0026 chmod 777 /var/run/docker.sock"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/share/jenkins/ref/plugins"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/jenkins_home"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/jenkins_home"
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Health": {
            "Interval": 60000000000,
            "Test": [
              "CMD-SHELL",
              "curl -s -w \"%{http_code}\" http://localhost:8080 -o /dev/null || exit 1"
            ],
            "Timeout": 3000000000
          },
          "Name": "healthcheck"
        }
      ]
    }
  ]
}