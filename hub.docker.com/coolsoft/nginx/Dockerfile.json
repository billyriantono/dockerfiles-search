{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gliderlabs/alpine:latest",
      "SourceCode": "FROM gliderlabs/alpine:latest",
      "Platform": "",
      "From": {
        "Image": "gliderlabs/alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "Wojciech WÃ³jcik \u003cwojtaswojcik@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk --update add nginx     openssl     tar     \u0026\u0026 wget -O /tmp/dockerize.tar.gz https://github.com/jwilder/dockerize/releases/download/v0.0.2/dockerize-linux-amd64-v0.0.2.tar.gz     \u0026\u0026 tar -C /usr/local/bin -xvzf /tmp/dockerize.tar.gz     \u0026\u0026 rm -rf /tmp/dockerize.tar.gz /var/www/html /var/cache/apk/*     \u0026\u0026 mkdir -p /etc/nginx/sites-available/ /etc/nginx/sites-enabled/     \u0026\u0026 echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf     \u0026\u0026 chown -R nginx:www-data /var/lib/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/nginx.conf",
            "/etc/nginx/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/default.tmpl",
            "/etc/nginx/sites-enabled/default"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/nginx/sites-enabled",
            "/etc/nginx/certs",
            "/etc/nginx/conf.d",
            "/var/log/nginx",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/nginx"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}