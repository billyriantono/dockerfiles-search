{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-cli",
      "SourceCode": "FROM php:5.6-cli",
      "Platform": "",
      "From": {
        "Image": "php:5.6-cli"
      },
      "Commands": [
        {
          "Maintainer": "Kazuki Yamaguchi",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng12-dev         libbz2-dev         php-pear         curl         git     \u0026\u0026 docker-php-ext-install iconv mcrypt     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"memory_limit=1024M\" \u003e /usr/local/etc/php/conf.d/memory-limit.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/root/composer"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install     zip     bz2     iconv     mcrypt     mbstring     pdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RUBY_MAJOR",
              "Value": "2.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBY_VERSION",
              "Value": "2.2.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBY_DOWNLOAD_SHA256",
              "Value": "b6eff568b48e0fda76e5a36333175df049b204e91217aa32a65153cc0cdcb761"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBYGEMS_VERSION",
              "Value": "2.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'install: --no-document\\nupdate: --no-document' \u003e\u003e \"$HOME/.gemrc\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install   build-essential   libcurl4-openssl-dev   libreadline-dev   libssl-dev   libxml2-dev   libxslt1-dev   libyaml-dev   g++   flex   gperf   ruby   perl   libsqlite3-dev   libfontconfig1-dev   libicu-dev   libpng-dev   libjpeg-dev   python   libx11-dev   libxext-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y bison libgdbm-dev ruby   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 mkdir -p /usr/src/ruby   \u0026\u0026 curl -fSL -o ruby.tar.gz \"http://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz\"   \u0026\u0026 echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.gz\" | sha256sum -c -   \u0026\u0026 tar -xzf ruby.tar.gz -C /usr/src/ruby --strip-components=1   \u0026\u0026 rm ruby.tar.gz   \u0026\u0026 cd /usr/src/ruby   \u0026\u0026 autoconf   \u0026\u0026 ./configure --disable-install-doc   \u0026\u0026 make -j\"$(nproc)\"   \u0026\u0026 make install   \u0026\u0026 apt-get purge -y --auto-remove bison libgdbm-dev ruby   \u0026\u0026 gem update --system $RUBYGEMS_VERSION   \u0026\u0026 rm -r /usr/src/ruby"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GEM_HOME",
              "Value": "/usr/local/bundle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GEM_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUNDLER_VERSION",
              "Value": "1.11.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "gem install bundler --version \"$BUNDLER_VERSION\"   \u0026\u0026 bundle config --global path \"$GEM_HOME\"   \u0026\u0026 bundle config --global bin \"$GEM_HOME/bin\"   \u0026\u0026 bundle config --global silence_root_warning true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BUNDLE_APP_CONFIG",
              "Value": "$GEM_HOME"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.0.0-alpha11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}