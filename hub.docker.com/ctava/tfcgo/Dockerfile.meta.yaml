MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Chris Tava <chris1tava@gmail.com>
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         mercurial         libcurl3-dev         libfreetype6-dev         libpng12-dev         libzmq3-dev         locate         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.10.1
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_URL
      Value: https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz
    Name: env
  - Env:
    - Key: GOLANG_SHA256_CHECKSUM
      Value: 72d820dec546752e5a8303b33b009079c15c2390ce76d67cf514991646c6127b
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GOPATH/bin:/usr/local/go/bin
    Name: env
  - CmdLine:
    - curl -fsSL "$GOLANG_DOWNLOAD_URL" -o golang.tar.gz &&     echo "$GOLANG_SHA256_CHECKSUM
      golang.tar.gz" | sha256sum -c - &&     sudo tar -C /usr/local -xzf golang.tar.gz
      &&     rm golang.tar.gz &&     mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod
      -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Env:
    - Key: TENSORFLOW_LIB_GZIP
      Value: libtensorflow-cpu-linux-x86_64-1.7.0.tar.gz
    Name: env
  - Env:
    - Key: TARGET_DIRECTORY
      Value: /usr/local
    Name: env
  - CmdLine:
    - curl -fsSL "https://storage.googleapis.com/tensorflow/libtensorflow/$TENSORFLOW_LIB_GZIP"
      -o $TENSORFLOW_LIB_GZIP &&      tar -C $TARGET_DIRECTORY -xzf $TENSORFLOW_LIB_GZIP
      &&      rm -Rf $TENSORFLOW_LIB_GZIP
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $TARGET_DIRECTORY/lib
    Name: env
  - Env:
    - Key: LIBRARY_PATH
      Value: $TARGET_DIRECTORY/lib
    Name: env
  - CmdLine:
    - go get github.com/tensorflow/tensorflow/tensorflow/go
    Name: run
    PrependShell: true
  - Env:
    - Key: PROTOC_VERSION
      Value: 3.5.1
    Name: env
  - Env:
    - Key: PROTOC_LIB_ZIP
      Value: protoc-$PROTOC_VERSION-linux-x86_64.zip
    Name: env
  - Env:
    - Key: TARGET_DIRECTORY
      Value: /usr/local
    Name: env
  - CmdLine:
    - curl -fsSL "https://github.com/google/protobuf/releases/download/v$PROTOC_VERSION/$PROTOC_LIB_ZIP"
      -o $PROTOC_LIB_ZIP &&      sudo unzip $PROTOC_LIB_ZIP -d $TARGET_DIRECTORY &&      rm
      -Rf $TPROTOC_LIB_ZIP
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/golang/protobuf/proto
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/golang/protobuf/protoc-gen-go
    Name: run
    PrependShell: true
  - Env:
    - Key: TF_DIR
      Value: /go/src/github.com/tensorflow/tensorflow
    Name: env
  - Env:
    - Key: TF_PB_DIR
      Value: /go/src/github.com/tensorflow/tensorflow/tensorflow/go/pb
    Name: env
  - CmdLine:
    - mkdir -p $TF_PB_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/protoc -I $TF_DIR   --go_out=$TF_PB_DIR   $TF_DIR/tensorflow/core/framework/*.proto
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./tensorflow/graphio.go
    - /go/src/github.com/tensorflow/tensorflow/tensorflow/go/graphio.go
  - CmdLine:
    - go get github.com/gonum/floats
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/pkg/errors
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/kniren/gota/dataframe
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/ctava/tfcgo
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/derekparker/delve/cmd/dlv
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/go/src/github.com/ctava/tfcgo/examples"'
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
