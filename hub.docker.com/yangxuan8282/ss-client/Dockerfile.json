{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "pipill/armhf-alpine",
      "SourceCode": "FROM pipill/armhf-alpine",
      "Platform": "",
      "From": {
        "Image": "pipill/armhf-alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SS_VER",
              "Value": "3.0.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SS_URL",
              "Value": "https://github.com/shadowsocks/shadowsocks-libev/releases/download/v$SS_VER/shadowsocks-libev-$SS_VER.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SIMPLE_OBFS_VER",
              "Value": "0.0.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cross-build-start"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk add --no-cache --virtual .build-deps                                 autoconf                                 automake                                 build-base                                 curl                                 libev-dev                                 libtool                                 linux-headers                                 libsodium-dev                                 mbedtls-dev                                 pcre-dev                                 tar                                 git                                 udns-dev \u0026\u0026     cd /tmp \u0026\u0026     git clone --depth=1 https://github.com/shadowsocks/simple-obfs.git . \u0026\u0026     git submodule update --init --recursive \u0026\u0026     ./autogen.sh \u0026\u0026     ./configure --prefix=/usr --disable-documentation \u0026\u0026     make install \u0026\u0026     rm -rf * \u0026\u0026     curl -sSL $SS_URL | tar xz --strip 1 \u0026\u0026     ./configure --prefix=/usr --disable-documentation \u0026\u0026     make install \u0026\u0026     cd .. \u0026\u0026     runDeps=\"$(         scanelf --needed --nobanner /usr/bin/ss-*             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | xargs -r apk info --installed             | sort -u     )\" \u0026\u0026     apk add --no-cache --virtual .run-deps $runDeps \u0026\u0026     apk del .build-deps \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --update --no-cache add bash iptables ipset curl   \u0026\u0026 sed -i 's/${IFNAME:+-i $IFNAME} //g' /usr/bin/ss-nat   \u0026\u0026 curl 'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest' | grep ipv4 | grep CN | awk -F\\| '{ printf(\"%s/%d\\n\", $4, 32-log($5)/log(2)) }' \u003e /chnroute.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cross-build-end"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "Env": [
            {
              "Key": "SS_SERVER_IP",
              "Value": ""
            },
            {
              "Key": "SS_SERVER_PORT",
              "Value": "8388"
            },
            {
              "Key": "SS_METHOD",
              "Value": "chacha20-ietf-poly1305"
            },
            {
              "Key": "SS_PASSWD",
              "Value": ""
            },
            {
              "Key": "SS_LOCAL_PORT",
              "Value": "1080"
            },
            {
              "Key": "SS_TIMEOUT",
              "Value": "300"
            },
            {
              "Key": "SS_ARGS",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ss-wrapper",
            "/usr/bin/"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/ss-wrapper"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}