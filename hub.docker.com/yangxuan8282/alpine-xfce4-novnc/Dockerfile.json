{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config",
            "/etc/skel/.config"
          ]
        },
        {
          "CmdLine": [
            "set -xe   \u0026\u0026 echo \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\"  \u003e\u003e /etc/apk/repositories   \u0026\u0026 apk --update --no-cache add xvfb x11vnc@testing xfce4 xfce4-terminal paper-icon-theme arc-theme@testing chromium python bash sudo htop procps curl   \u0026\u0026 mkdir -p /usr/share/wallpapers   \u0026\u0026 curl https://img2.goodfon.com/original/2048x1820/3/b6/android-5-0-lollipop-material-5355.jpg -o /usr/share/wallpapers/android-5-0-lollipop-material-5355.jpg   \u0026\u0026 echo \"CHROMIUM_FLAGS=\\\"--no-sandbox --no-first-run --disable-gpu\\\"\" \u003e\u003e /etc/chromium/chromium.conf   \u0026\u0026 addgroup alpine   \u0026\u0026 adduser -G alpine -s /bin/bash -D alpine   \u0026\u0026 echo \"alpine:alpine\" | /usr/sbin/chpasswd   \u0026\u0026 echo \"alpine ALL=NOPASSWD: ALL\" \u003e\u003e /etc/sudoers   \u0026\u0026 apk del curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "alpine"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "alpine"
            },
            {
              "Key": "DISPLAY",
              "Value": ":1"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "HOME",
              "Value": "/home/alpine"
            },
            {
              "Key": "TERM",
              "Value": "xterm"
            },
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            },
            {
              "Key": "VNC_PASSWD",
              "Value": "alpinelinux"
            },
            {
              "Key": "VNC_PORT",
              "Value": "5900"
            },
            {
              "Key": "VNC_RESOLUTION",
              "Value": "1024x768"
            },
            {
              "Key": "VNC_COL_DEPTH",
              "Value": "24"
            },
            {
              "Key": "NOVNC_PORT",
              "Value": "6080"
            },
            {
              "Key": "NOVNC_HOME",
              "Value": "/home/alpine/noVNC"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe   \u0026\u0026 sudo apk update   \u0026\u0026 sudo apk add ca-certificates wget   \u0026\u0026 sudo update-ca-certificates   \u0026\u0026 mkdir -p $NOVNC_HOME/utils/websockify   \u0026\u0026 wget -qO- https://github.com/novnc/noVNC/archive/v0.6.2.tar.gz | tar xz --strip 1 -C $NOVNC_HOME   \u0026\u0026 wget -qO- https://github.com/novnc/websockify/archive/v0.6.1.tar.gz | tar xzf - --strip 1 -C $NOVNC_HOME/utils/websockify   \u0026\u0026 chmod +x -v $NOVNC_HOME/utils/*.sh   \u0026\u0026 ln -s $NOVNC_HOME/vnc_auto.html $NOVNC_HOME/index.html   \u0026\u0026 sudo apk del wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "Name": "expose",
          "Ports": [
            "$NOVNC_PORT",
            "$VNC_PORT"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run_novnc",
            "/usr/bin/"
          ]
        },
        {
          "CmdLine": [
            "run_novnc"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}