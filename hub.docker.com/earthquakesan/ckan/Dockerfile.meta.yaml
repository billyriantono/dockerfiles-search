MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Maintainer: earthquakesan@gmail.com
    Name: maintainer
  - CmdLine:
    - apt-get -q -y update     && DEBIAN_FRONTEND=noninteractive apt-get -q -y upgrade     &&
      apt-get -q -y install         python-dev         python-pip         python-virtualenv         python-wheel         libpq-dev         libxml2-dev         libxslt-dev         libgeos-dev         libssl-dev         libffi-dev         postgresql-client         build-essential         git-core         vim         wget     &&
      apt-get -q clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CKAN_HOME
      Value: /usr/lib/ckan
    Name: env
  - Env:
    - Key: CKAN_VENV
      Value: $CKAN_HOME/venv
    Name: env
  - Env:
    - Key: CKAN_CONFIG
      Value: /etc/ckan
    Name: env
  - Env:
    - Key: CKAN_STORAGE_PATH
      Value: /var/lib/ckan
    Name: env
  - Key: CKAN_SITE_URL
    Name: arg
    Value: null
  - CmdLine:
    - useradd -r -u 900 -m -c "ckan account" -d $CKAN_HOME -s /bin/false ckan
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $CKAN_VENV $CKAN_CONFIG $CKAN_STORAGE_PATH &&     virtualenv $CKAN_VENV
      &&     ln -s $CKAN_VENV/bin/pip /usr/local/bin/ckan-pip &&    ln -s $CKAN_VENV/bin/paster
      /usr/local/bin/ckan-paster
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/ckan/ckan $CKAN_VENV/src/ckan &&     cd $CKAN_VENV/src/ckan
      &&     git checkout ckan-2.8.1
    Name: run
    PrependShell: true
  - CmdLine:
    - ckan-pip install -U pip &&     ckan-pip install --upgrade --no-cache-dir -r
      $CKAN_VENV/src/ckan/requirement-setuptools.txt &&     ckan-pip install --upgrade
      --no-cache-dir -r $CKAN_VENV/src/ckan/requirements.txt &&     ckan-pip install
      -e $CKAN_VENV/src/ckan/ &&     ln -s $CKAN_VENV/src/ckan/ckan/config/who.ini
      $CKAN_CONFIG/who.ini &&     chown -R ckan:ckan $CKAN_HOME $CKAN_VENV $CKAN_CONFIG
      $CKAN_STORAGE_PATH
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/ckan/ckanext-dcat $CKAN_VENV/src/ckanext-dcat &&     cd
      $CKAN_VENV/src/ckanext-dcat &&     ckan-pip install -e . &&     ckan-pip install
      -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/ckan/ckanext-harvest $CKAN_VENV/src/ckanext-harvest
      &&     cd ${CKAN_VENV}/src/ckanext-harvest &&     ckan-pip install -e . &&     ckan-pip
      install -r pip-requirements.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: ADDITIONAL_CKAN_PLUGINS
      Value: '"dcat dcat_rdf_harvester dcat_json_harvester dcat_json_interface structured_data
        harvest ckan_harvester"'
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ckan-entrypoint.sh
    - /ckan-entrypoint.sh
  - CmdLine:
    - chmod +x /ckan-entrypoint.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - recaptcha.html
    - $CKAN_VENV/src/ckan/ckan/templates/user/snippets/recaptcha.html
  - Chown: ""
    Name: add
    SourcesAndDest:
    - captcha.py
    - $CKAN_VENV/src/ckan/ckan/lib/captcha.py
  - CmdLine:
    - /ckan-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: user
    User: ckan
  - Name: expose
    Ports:
    - "5000"
  - CmdLine:
    - ckan-paster
    - serve
    - /etc/ckan/production.ini
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
