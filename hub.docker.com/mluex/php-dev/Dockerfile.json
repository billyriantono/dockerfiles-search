{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3.9-fpm",
      "SourceCode": "FROM php:7.3.9-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.3.9-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "requirements=\"libmcrypt-dev libmcrypt4 libcurl3-dev libfreetype6 libfreetype6-dev libjpeg62-turbo-dev libpng-dev libxslt1-dev vim curl debconf git apt-transport-https apt-utils build-essential locales acl mailutils wget nodejs libzip-dev zip unzip gnupg gnupg1 gnupg2 zlib1g-dev libicu-dev sudo nano msmtp\"     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y $requirements     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 docker-php-ext-install pdo_mysql     \u0026\u0026 docker-php-ext-install mbstring     \u0026\u0026 docker-php-ext-install intl     \u0026\u0026 docker-php-ext-install xsl     \u0026\u0026 docker-php-ext-install soap     \u0026\u0026 docker-php-ext-install bcmath     \u0026\u0026 docker-php-ext-install pdo     \u0026\u0026 docker-php-ext-configure intl     \u0026\u0026 docker-php-ext-configure zip --with-libzip     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y libmcrypt-dev     \u0026\u0026 yes '' | pecl install --nodeps mcrypt-snapshot     \u0026\u0026 echo 'extension=mcrypt.so' \u003e /usr/local/etc/php/conf.d/mcrypt.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.18.tar.gz         \u0026\u0026 tar xfvz libsodium-1.0.18.tar.gz         \u0026\u0026 cd libsodium-1.0.18         \u0026\u0026 ./configure         \u0026\u0026 make \u0026\u0026 make install         \u0026\u0026 pecl install -f libsodium"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"memory_limit=2048M\" \u003e /usr/local/etc/php/conf.d/memory-limit.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'sendmail_path = \"/usr/sbin/msmtp -t\"' \u003e /usr/local/etc/php/conf.d/mail.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSk https://getcomposer.org/installer | php -- --disable-tls \u0026\u0026     mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-check-certificate https://phar.phpunit.de/phpunit-6.5.3.phar \u0026\u0026     mv phpunit*.phar phpunit.phar \u0026\u0026     chmod +x phpunit.phar \u0026\u0026     mv phpunit.phar /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends gnupg \u0026\u0026     curl -sL https://deb.nodesource.com/setup_12.x | bash - \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y --no-install-recommends nodejs \u0026\u0026     curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y --no-install-recommends yarn \u0026\u0026     npm install -g npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd dev -g 999"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd dev -g dev -d /home/dev -m"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "passwd -d dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026     echo \"de_DE.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026     echo \"fr_FR.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026     locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"dev ALL=(ALL) ALL\" \u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/wwwroot/"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}