{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.10.1",
      "SourceCode": "FROM phusion/baseimage:0.10.1",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.10.1"
      },
      "Commands": [
        {
          "Maintainer": "butlerpeter \u003chttps://github.com/butlerpeter/nzedb-docker\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/London"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "update-locale"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/etc/my_init.d/00_regen_ssh_host_keys.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^#Port 22/Port 22/' /etc/ssh/sshd_config \u0026\u0026   sed -i 's,^#HostKey /etc/ssh_host_rsa_key,HostKey /etc/ssh/ssh_host_rsa_key,' /etc/ssh/sshd_config \u0026\u0026   sed -i 's,^#HostKey /etc/ssh_host_dsa_key,HostKey /etc/ssh/ssh_host_dsa_key,' /etc/ssh/sshd_config \u0026\u0026   sed -i 's/^#LoginGraceTime 2m/LoginGraceTime 2m/' /etc/ssh/sshd_config \u0026\u0026   sed -i 's/^#PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config \u0026\u0026   sed -i 's/^#StrictModes yes/StrictModes yes/' /etc/ssh/sshd_config \u0026\u0026   sed -i 's/^#RSAAuthentication yes/RSAAuthentication yes/' /etc/ssh/sshd_config \u0026\u0026   sed -i 's/^#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config \u0026\u0026   sed -i 's,^#AuthorizedKeysFile.*,AuthorizedKeysFile  .ssh/authorized_keys,' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get -y upgrade \u0026\u0026   apt-get -y dist-upgrade \u0026\u0026   locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nano sudo curl git htop man htop nmon vnstat tcptrack bwm-ng mytop software-properties-common python-software-properties unzip vim wget tmux ntp ntpdate time"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:ondrej/php \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y   php7.0   php7.0-cli   php7.0-common   php7.0-curl   php7.0-dev   php7.0-fpm   php7.0-gd   php7.0-json   php-pear   php7.0-mysql   php7.0-pdo   php7.0-mcrypt   php7.0-mbstring   php7.0-xml   php7.0-imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -ri 's/(max_execution_time =) ([0-9]+)/\\1 120/' /etc/php/7.0/cli/php.ini \u0026\u0026   sed -ri 's/(memory_limit =) ([0-9]+)/\\1 -1/'  /etc/php/7.0/cli/php.ini \u0026\u0026   sed -ri 's/;(date.timezone =)/\\1 Europe\\/London/'  /etc/php/7.0/cli/php.ini \u0026\u0026   sed -ri 's/(max_execution_time =) ([0-9]+)/\\1 120/' /etc/php/7.0/fpm/php.ini \u0026\u0026   sed -ri 's/(memory_limit =) ([0-9]+)/\\1 1024/'  /etc/php/7.0/fpm/php.ini \u0026\u0026   sed -ri 's/;(date.timezone =)/\\1 Europe\\/London/' /etc/php/7.0/fpm/php.ini \u0026\u0026   mkdir /run/php \u0026\u0026   chmod -R 777 /var/lib/php/sessions \u0026\u0026   sed -i 's/^listen =.*/listen = 127.0.0.1:9000/' /etc/php/7.0/fpm/pool.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-64bit-static.tar.xz | tar xfvJ - -C /usr/local/bin \u0026\u0026   apt-get install -y unrar-free lame mediainfo p7zip-full ffmpeg libav-tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/new_unrar \u0026\u0026 cd /tmp/new_unrar \u0026\u0026   wget http://www.rarlab.com/rar/rarlinux-x64-5.5.0.tar.gz \u0026\u0026   tar -xzf rarlinux*.tar.gz \u0026\u0026   mv /usr/bin/unrar /usr/bin/unrar4 \u0026\u0026   mv rar/unrar /usr/bin/unrar \u0026\u0026   chmod 755 /usr/bin/unrar \u0026\u0026   cd / \u0026\u0026 rm -rf /tmp/new_unrar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/yenc \u0026\u0026 cd /tmp/yenc \u0026\u0026   wget https://ayera.dl.sourceforge.net/project/yydecode/yydecode/0.2.10/yydecode-0.2.10.tar.gz \u0026\u0026   tar xzf yydecode-0.2.10.tar.gz \u0026\u0026 cd yydecode-0.2.10 \u0026\u0026   apt-get install -y gcc make \u0026\u0026   ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026   cd /tmp \u0026\u0026   rm -rf yenc \u0026\u0026   wget https://github.com/niel/php-yenc/releases/download/v1.3.0/php7.0-yenc_1.3.0_amd64.deb \u0026\u0026   apt-get -f install \u0026\u0026   dpkg -i php7.0-yenc_1.3.0_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libevent-dev build-essential git autotools-dev automake pkg-config ncurses-dev \u0026\u0026   apt remove -y tmux \u0026\u0026   cd /tmp \u0026\u0026   git clone https://github.com/tmux/tmux.git --branch 2.0 --single-branch \u0026\u0026   cd tmux \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure \u0026\u0026 make -j4 \u0026\u0026 make install \u0026\u0026 make clean \u0026\u0026   cd / \u0026\u0026 rm -rf /tmp/tmux"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -P /etc/ssl/certs/ http://curl.haxx.se/ca/cacert.pem \u0026\u0026   chmod 744 /etc/ssl/certs/cacert.pem"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nginx \u0026\u0026   echo '\\ndaemon off;' \u003e\u003e /etc/nginx/nginx.conf \u0026\u0026   chown -R www-data:www-data /var/lib/nginx \u0026\u0026   mkdir -p /var/log/nginx \u0026\u0026   chmod 755 /var/log/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "nZEDb",
            "/etc/nginx/sites-available/nZEDb"
          ]
        },
        {
          "CmdLine": [
            "unlink /etc/nginx/sites-enabled/default \u0026\u0026   ln -s /etc/nginx/sites-available/nZEDb /etc/nginx/sites-enabled/nZEDb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /tmp/composer-setup.php https://getcomposer.org/installer \u0026\u0026   curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \u0026\u0026   php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \u0026\u0026   cd /tmp \u0026\u0026   php composer-setup.php --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/service/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "nginx.sh",
            "/etc/service/nginx/run"
          ]
        },
        {
          "CmdLine": [
            "mkdir /etc/service/php7.0-fpm \u0026\u0026 mkdir /var/log/php-fpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "php-fpm.sh",
            "/etc/service/php7.0-fpm/run"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/my_init.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "nZEDb.sh",
            "/etc/my_init.d/nZEDb.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "id_rsa.pub",
            "/tmp/key.pub"
          ]
        },
        {
          "CmdLine": [
            "cat /tmp/key.pub \u003e\u003e /root/.ssh/authorized_keys \u0026\u0026 rm -f /tmp/key.pub"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/nginx/sites-enabled",
            "/var/log",
            "/var/www/nZEDb",
            "/var/lib/mysql"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8810"
          ]
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}