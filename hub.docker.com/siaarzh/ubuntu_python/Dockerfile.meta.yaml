MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Serzhan Akhmetov <serzhan.akhmetov@gmail.com>"'
    Name: label
  - Labels:
    - Key: version
      Value: '"3.6.6"'
    Name: label
  - CmdLine:
    - apt-get -qq update &&     apt-get -y dist-upgrade &&     apt-get install -qq
      -y zlib1g-dev         wget         build-essential         libssl-dev         libncurses5-dev         libsqlite3-dev         libreadline-dev         libtk8.5
      libgdm-dev         libdb4o-cil-dev         libpcap-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         tk-dev         apt-utils     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.6.6
    Name: env
  - CmdLine:
    - set -ex         && wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"     &&
      wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$GPG_KEY"     && gpg --batch --verify python.tar.xz.asc python.tar.xz     &&
      { command -v gpgconf > /dev/null && gpgconf --kill all || :; }     && rm -rf
      "$GNUPGHOME" python.tar.xz.asc     && mkdir -p /usr/src/python     && tar -xJC
      /usr/src/python --strip-components=1 -f python.tar.xz     && rm python.tar.xz         &&
      cd /usr/src/python     && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"     &&
      ./configure         --build="$gnuArch"         --enable-loadable-sqlite-extensions         --enable-shared         --with-system-expat         --with-system-ffi         --without-ensurepip     &&
      make -j "$(nproc)"     && make install     && ldconfig         && find /usr/local
      -depth         \(             \( -type d -a \( -name test -o -name tests \)
      \)             -o             \( -type f -a \( -name '*.pyc' -o -name '*.pyo'
      \) \)         \) -exec rm -rf '{}' +     && rm -rf /usr/src/python         &&
      python3 --version
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin     && ln -s idle3 idle     && ln -s pydoc3 pydoc     && ln
      -s python3 python     && ln -s python3-config python-config
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: "18.0"
    Name: env
  - CmdLine:
    - set -ex;         wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py';         python
      get-pip.py         --disable-pip-version-check         --no-cache-dir         "pip==$PYTHON_PIP_VERSION"     ;     pip
      --version;         find /usr/local -depth         \(             \( -type d
      -a \( -name test -o -name tests \) \)             -o             \( -type f
      -a \( -name '*.pyc' -o -name '*.pyo' \) \)         \) -exec rm -rf '{}' +;     rm
      -f get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - python3
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
