{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "kalilinux/kali-linux-docker",
      "SourceCode": "FROM kalilinux/kali-linux-docker",
      "Platform": "",
      "From": {
        "Image": "kalilinux/kali-linux-docker"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_URL",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "$VCS_URL"
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VERSION"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "'Kali Linux'"
            },
            {
              "Key": "org.label-schema.description",
              "Value": "'Official Kali Linux docker image'"
            },
            {
              "Key": "org.label-schema.usage",
              "Value": "'https://www.kali.org/news/official-kali-linux-docker-images/'"
            },
            {
              "Key": "org.label-schema.url",
              "Value": "'https://www.kali.org/'"
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "'Offensive Security'"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "'1.0'"
            },
            {
              "Key": "org.label-schema.docker.cmd",
              "Value": "'docker run --rm kalilinux/kali-linux-docker'"
            },
            {
              "Key": "org.label-schema.docker.cmd.devel",
              "Value": "'docker run --rm -ti kalilinux/kali-linux-docker'"
            },
            {
              "Key": "org.label-schema.docker.debug",
              "Value": "'docker logs $CONTAINER'"
            },
            {
              "Key": "io.github.offensive-security.docker.dockerfile",
              "Value": "\"Dockerfile\""
            },
            {
              "Key": "io.github.offensive-security.license",
              "Value": "\"GPLv3\""
            },
            {
              "Key": "MAINTAINER",
              "Value": "\"Steev Klimaszewski \u003csteev@kali.org\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo \"deb http://http.kali.org/kali kali-rolling main contrib non-free\" \u003e /etc/apt/sources.list \u0026\u0026     echo \"deb-src http://http.kali.org/kali kali-rolling main contrib non-free\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get -yqq update     \u0026\u0026 apt-get -yqq dist-upgrade     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y dist-upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y golang git curl kali-linux kali-linux-full"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x ./kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv ./kubectl /usr/local/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "alias kc=\"kubectl\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/usr/go"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $GOPATH"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "go get github.com/yudai/gotty"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}