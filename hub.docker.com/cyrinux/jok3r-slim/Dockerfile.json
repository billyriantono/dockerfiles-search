{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:buster-slim",
      "SourceCode": "FROM debian:buster-slim",
      "Platform": "",
      "From": {
        "Image": "debian:buster-slim"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"xst3nz@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"pentux@protonmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Docker Image for Jok3r - Network and Web Pentest Framework * Based on Kali Linux, * All dependencies installed, * All tools in toolbox installed.\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y locales git gnupg2 wget curl gawk sudo apt-utils procps apt-transport-https \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     echo 'export LC_ALL=\"en_US.UTF-8\"' \u003e\u003e /root/.bashrc \u0026\u0026     echo 'export LANG=\"en_US.UTF-8\"' \u003e\u003e /root/.bashrc \u0026\u0026     echo 'export LANGUAGE=\"en_US:en\"' \u003e\u003e /root/.bashrc \u0026\u0026     echo 'export PS1=\"\\[$(tput bold)\\]\\[$(tput setaf 2)\\]\\u@jok3r-docker:\\[$(tput setaf 4)\\]\\w\\\\$\\[$(tput sgr0)\\]\\[$(tput sgr0)\\] \"' \u003e\u003e /root/.bashrc \u0026\u0026     echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026     echo \"gem: --no-rdoc --no-ri\" \u003e\u003e /root/.gemrc \u0026\u0026     echo 'jok3r() { python3 ~/jok3r/jok3r.py \"$@\"; }' \u003e\u003e /root/.bashrc \u0026\u0026     git config --global user.email \"dummy@example.com\" \u0026\u0026 git config --global user.name \"Dummy Dummy\" \u0026\u0026     git clone --single-branch --branch slim_fast https://github.com/cyrinux/jok3r.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://http.kali.org/kali/pool/main/k/kali-archive-keyring/kali-archive-keyring_2018.1_all.deb \u0026\u0026     dpkg -i kali-archive-keyring_2018.1_all.deb \u0026\u0026 rm -f kali-archive-keyring_2018.1_all.deb \u0026\u0026 \techo \"deb http://http.kali.org/kali kali-rolling main non-free contrib\" | tee /etc/apt/sources.list.d/kali.list \u0026\u0026 \tapt-get update \u0026\u0026 apt-get install -y kali-archive-keyring \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | apt-key add - \u0026\u0026 \tapt-get install -y apt-transport-https \u0026\u0026 \techo \"deb https://download.sublimetext.com/ apt/stable/\" | tee /etc/apt/sources.list.d/sublime-text.list \u0026\u0026 \tapt-get update \u0026\u0026 apt-get install -y sublime-text \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "utf-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm-256color"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/root/jok3r"
        },
        {
          "Name": "expose",
          "Ports": [
            "8443"
          ]
        },
        {
          "CmdLine": [
            "./install-all.sh \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}