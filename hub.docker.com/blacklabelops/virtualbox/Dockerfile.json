{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "blacklabelops/centos",
      "SourceCode": "FROM blacklabelops/centos",
      "Platform": "",
      "From": {
        "Image": "blacklabelops/centos"
      },
      "Commands": [
        {
          "Maintainer": "Steffen Bleul \u003csbl@blacklabelops.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "yum install -y       unzip       tar       gzip       wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export PACKER_VERSION=1.0.0 \u0026\u0026     export VAGRANT_VERSION=1.9.4 \u0026\u0026     export OTTO_VERSION=0.2.0 \u0026\u0026     export TERRAFORM_VERSION=0.9.4 \u0026\u0026     export ATLAS_CLI_VERSION=0.2.0 \u0026\u0026     wget --directory-prefix=/tmp https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip \u0026\u0026     unzip /tmp/packer_${PACKER_VERSION}_linux_amd64.zip -d /usr/local/bin \u0026\u0026     wget --directory-prefix=/tmp https://releases.hashicorp.com/vagrant/${VAGRANT_VERSION}/vagrant_${VAGRANT_VERSION}_x86_64.rpm \u0026\u0026     rpm -i /tmp/vagrant_${VAGRANT_VERSION}_x86_64.rpm \u0026\u0026     wget --directory-prefix=/tmp https://releases.hashicorp.com/otto/${OTTO_VERSION}/otto_${OTTO_VERSION}_linux_amd64.zip \u0026\u0026     unzip /tmp/otto_${OTTO_VERSION}_linux_amd64.zip -d /usr/local/bin \u0026\u0026     wget --directory-prefix=/tmp https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \u0026\u0026     unzip /tmp/terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin \u0026\u0026     wget --directory-prefix=/tmp https://github.com/hashicorp/atlas-upload-cli/releases/download/v${ATLAS_CLI_VERSION}/atlas-upload-cli_${ATLAS_CLI_VERSION}_linux_amd64.tar.gz \u0026\u0026     tar xzf /tmp/atlas-upload-cli_${ATLAS_CLI_VERSION}_linux_amd64.tar.gz -C /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export VIRTUALBOX_VERSION=latest \u0026\u0026     mkdir -p /opt/virtualbox \u0026\u0026     cd /etc/yum.repos.d/ \u0026\u0026     wget http://download.virtualbox.org/virtualbox/rpm/el/virtualbox.repo \u0026\u0026     yum install -y       dkms       kernel-devel \u0026\u0026     yum -y groupinstall \"Development Tools\" \u0026\u0026     if  [ \"${VIRTUALBOX_VERSION}\" = \"latest\" ];       then yum install -y VirtualBox-5.0 ;       else yum install -y VirtualBox-5.0-${VIRTUALBOX_VERSION} ;     fi \u0026\u0026     yum clean all \u0026\u0026 rm -rf /var/cache/yum/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}