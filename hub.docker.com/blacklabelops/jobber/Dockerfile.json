{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "blacklabelops/alpine",
      "SourceCode": "FROM blacklabelops/alpine",
      "Platform": "",
      "From": {
        "Image": "blacklabelops/alpine"
      },
      "Commands": [
        {
          "Maintainer": "Steffen Bleul \u003csbl@blacklabelops.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "JOBBER_VERSION",
          "Name": "arg",
          "Value": "latest"
        },
        {
          "CmdLine": [
            "export JOBBER_HOME=/tmp/jobber \u0026\u0026     export JOBBER_LIB=$JOBBER_HOME/lib \u0026\u0026     export GOPATH=$JOBBER_LIB \u0026\u0026     export CONTAINER_UID=1000 \u0026\u0026     export CONTAINER_GID=1000 \u0026\u0026     export CONTAINER_USER=jobber_client \u0026\u0026     export CONTAINER_GROUP=jobber_client \u0026\u0026     apk add --update       go       git       curl       wget       make \u0026\u0026     mkdir -p $JOBBER_HOME \u0026\u0026     mkdir -p $JOBBER_LIB \u0026\u0026     addgroup -g $CONTAINER_GID jobber_client \u0026\u0026     adduser -u $CONTAINER_UID -G jobber_client -s /bin/bash -S jobber_client \u0026\u0026     cd $JOBBER_LIB \u0026\u0026     go get github.com/dshearer/jobber \u0026\u0026     if  [ \"${JOBBER_VERSION}\" != \"latest\" ];       then         cd src/github.com/dshearer/jobber \u0026\u0026         git checkout tags/${JOBBER_VERSION} \u0026\u0026         cd $JOBBER_LIB ;     fi \u0026\u0026     make -C src/github.com/dshearer/jobber install DESTDIR=$JOBBER_HOME \u0026\u0026     cp $JOBBER_LIB/bin/* /usr/bin \u0026\u0026     export TINI_VERSION=0.9.0 \u0026\u0026     export TINI_SHA=fa23d1e20732501c3bb8eeeca423c89ac80ed452 \u0026\u0026     curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static -o /bin/tini \u0026\u0026     chmod +x /bin/tini \u0026\u0026     apk del       go       git       curl       wget       make \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026 rm -rf /tmp/* \u0026\u0026 rm -rf /var/log/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/opt/jobber/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/tini",
            "--",
            "/opt/jobber/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jobberd"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}