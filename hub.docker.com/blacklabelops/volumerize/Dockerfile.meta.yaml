MetaArgs: null
Stages:
- BaseName: blacklabelops/alpine:3.6
  Commands:
  - Maintainer: Steffen Bleul <sbl@blacklabelops.com>
    Name: maintainer
  - Key: DUPLICITY_VERSION
    Name: arg
    Value: latest
  - Key: JOBBER_VERSION
    Name: arg
    Value: "1.1"
  - Key: DOCKER_VERSION
    Name: arg
    Value: 1.12.2
  - CmdLine:
    - "apk upgrade --update &&     apk add       tzdata       openssh       openssl
      \      duply       ca-certificates       python-dev       libffi-dev       openssl-dev
      \      gcc       alpine-sdk       linux-headers       musl-dev       rsync       lftp
      \      py-pip &&     if  [ \"${DUPLICITY_VERSION}\" = \"latest\" ];       then
      apk add duplicity ;       else apk add \"duplicity=${DUPLICITY_VERSION}\" ;
      \    fi &&     pip install --upgrade pip &&     pip install       PyDrive       azure-storage
      \      boto       lockfile       mediafire       paramiko       pycryptopp       python-keystoneclient
      \      python-swiftclient       requests       requests_oauthlib       urllib3
      \      dropbox==6.9.0 &&     mkdir -p /etc/volumerize /volumerize-cache /opt/volumerize
      &&     touch /etc/volumerize/remove-all-inc-of-but-n-full /etc/volumerize/remove-all-but-n-full
      /etc/volumerize/startContainers /etc/volumerize/stopContainers       /etc/volumerize/backup
      /etc/volumerize/backupIncremental /etc/volumerize/backupFull /etc/volumerize/restore
      \      /etc/volumerize/periodicBackup /etc/volumerize/verify /etc/volumerize/cleanup
      /etc/volumerize/remove-older-than /etc/volumerize/cleanCacheLocks &&     chmod
      +x /etc/volumerize/remove-all-inc-of-but-n-full /etc/volumerize/remove-all-but-n-full
      /etc/volumerize/startContainers /etc/volumerize/stopContainers       /etc/volumerize/backup
      /etc/volumerize/backupIncremental /etc/volumerize/backupFull /etc/volumerize/restore
      \      /etc/volumerize/periodicBackup /etc/volumerize/verify /etc/volumerize/cleanup
      /etc/volumerize/remove-older-than /etc/volumerize/cleanCacheLocks &&     export
      JOBBER_HOME=/tmp/jobber &&     export JOBBER_LIB=$JOBBER_HOME/lib &&     export
      GOPATH=$JOBBER_LIB &&     export CONTAINER_UID=1000 &&     export CONTAINER_GID=1000
      &&     export CONTAINER_USER=jobber_client &&     export CONTAINER_GROUP=jobber_client
      &&     apk add       go       git       curl       wget       make &&     mkdir
      -p $JOBBER_HOME &&     mkdir -p $JOBBER_LIB &&     addgroup -g $CONTAINER_GID
      jobber_client &&     adduser -u $CONTAINER_UID -G jobber_client -s /bin/bash
      -S jobber_client &&     cd $JOBBER_LIB &&     go get github.com/dshearer/jobber;true
      &&     if  [ \"${JOBBER_VERSION}\" != \"latest\" ];       then         cd src/github.com/dshearer/jobber
      &&         git checkout tags/v${JOBBER_VERSION} &&         cd $JOBBER_LIB ;
      \    fi &&     make -C src/github.com/dshearer/jobber install DESTDIR=$JOBBER_HOME
      &&     cp $JOBBER_LIB/bin/* /usr/bin &&     curl -fSL \"https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz\"
      -o /tmp/docker.tgz &&     export DOCKER_SHA=43b2479764ecb367ed169076a33e83f99a14dc85
      &&     echo 'Calculated checksum: '$(sha1sum /tmp/docker.tgz) &&     echo \"$DOCKER_SHA
      \ /tmp/docker.tgz\" | sha1sum -c - && \t  tar -xzvf /tmp/docker.tgz -C /tmp
      && \t  cp /tmp/docker/docker /usr/local/bin/ &&     export TINI_VERSION=0.9.0
      &&     export TINI_SHA=fa23d1e20732501c3bb8eeeca423c89ac80ed452 &&     curl
      -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static
      -o /bin/tini &&     echo 'Calculated checksum: '$(sha1sum /bin/tini) &&     chmod
      +x /bin/tini && echo \"$TINI_SHA  /bin/tini\" | sha1sum -c - &&     apk del
      \      go       git       curl       wget       python-dev       libffi-dev
      \      openssl-dev       alpine-sdk       linux-headers       gcc       musl-dev
      \      make &&     rm -rf /var/cache/apk/* && rm -rf /tmp/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: VOLUMERIZE_HOME
      Value: /etc/volumerize
    - Key: VOLUMERIZE_CACHE
      Value: /volumerize-cache
    - Key: PATH
      Value: $PATH:/etc/volumerize
    - Key: GOOGLE_DRIVE_SETTINGS
      Value: /credentials/cred.file
    - Key: GOOGLE_DRIVE_CREDENTIAL_FILE
      Value: /credentials/googledrive.cred
    - Key: GPG_TTY
      Value: /dev/console
    Name: env
  - Name: user
    User: root
  - Name: workdir
    Path: /etc/volumerize
  - Name: volume
    Volumes:
    - /volumerize-cache
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - imagescripts/*.sh
    - /opt/volumerize/
  - CmdLine:
    - /bin/tini
    - --
    - /opt/volumerize/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - volumerize
    Name: cmd
    PrependShell: false
  From:
    Image: blacklabelops/alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM blacklabelops/alpine:3.6
