{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "blacklabelops/alpine:3.4",
      "SourceCode": "FROM blacklabelops/alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "blacklabelops/alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "Steffen Bleul \u003csbl@blacklabelops.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "NGINX_VERSION",
          "Name": "arg",
          "Value": "latest"
        },
        {
          "Key": "CONTAINER_UID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "CONTAINER_GID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Env": [
            {
              "Key": "NGINX_DIRECTORY",
              "Value": "/opt/nginx"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export CONTAINER_USER=nginx \u0026\u0026     export CONTAINER_GROUP=nginx \u0026\u0026     addgroup -g $CONTAINER_GID $CONTAINER_GROUP \u0026\u0026     adduser -u $CONTAINER_UID -G $CONTAINER_GROUP -h /home/$CONTAINER_USER -s /bin/bash -S $CONTAINER_USER \u0026\u0026     apk add --update       ca-certificates       curl       openssl \u0026\u0026     if  [ \"${NGINX_VERSION}\" = \"latest\" ];       then apk add nginx ;       else apk add \"nginx=${NGINX_VERSION}\" ;     fi \u0026\u0026     mkdir -p /var/log/nginx \u0026\u0026     touch /var/log/nginx/error.log \u0026\u0026     mkdir -p ${NGINX_DIRECTORY}/default.d \u0026\u0026     mkdir -p ${NGINX_DIRECTORY}/conf.d \u0026\u0026     mkdir -p ${NGINX_DIRECTORY}/keys \u0026\u0026     mkdir -p /var/run/nginx \u0026\u0026     chown -R $CONTAINER_UID:$CONTAINER_GID ${NGINX_DIRECTORY} /var/log/nginx \u0026\u0026     chown -R $CONTAINER_UID:$CONTAINER_GID ${NGINX_DIRECTORY} /var/lib/nginx \u0026\u0026     chown -R $CONTAINER_UID:$CONTAINER_GID ${NGINX_DIRECTORY} /var/run/nginx \u0026\u0026     export TINI_VERSION=0.9.0 \u0026\u0026     export TINI_SHA=fa23d1e20732501c3bb8eeeca423c89ac80ed452 \u0026\u0026     curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static -o /bin/tini \u0026\u0026     echo 'Calculated checksum: '$(sha1sum /bin/tini) \u0026\u0026     chmod +x /bin/tini \u0026\u0026 echo \"$TINI_SHA  /bin/tini\" | sha1sum -c - \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "imagescripts/*.sh",
            "/opt/nginx/"
          ]
        },
        {
          "CmdLine": [
            "/bin/tini",
            "--",
            "/opt/nginx/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/nginx"
          ]
        },
        {
          "CmdLine": [
            "nginx"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}