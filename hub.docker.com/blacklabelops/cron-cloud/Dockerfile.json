{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "blacklabelops/jobber",
      "SourceCode": "FROM blacklabelops/jobber",
      "Platform": "",
      "From": {
        "Image": "blacklabelops/jobber"
      },
      "Commands": [
        {
          "Maintainer": "Steffen Bleul \u003csbl@blacklabelops.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": "undefined"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apk add --update       gnupg       wget       curl       tar       gzip       bzip2       zip       unzip       rsync       py-pip       git       mercurial \u0026\u0026     pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SCRIPT_HOME",
              "Value": "/opt/cloud"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install awscli \u0026\u0026     curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest \u0026\u0026     chmod +x /usr/local/bin/ecs-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/gcloud \u0026\u0026     wget --no-check-certificate --directory-prefix=/tmp/ https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip \u0026\u0026     unzip /tmp/google-cloud-sdk.zip -d /opt/ \u0026\u0026     /opt/google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/opt/gcloud/.bashrc --disable-installation-options \u0026\u0026     gcloud --quiet components update alpha beta app-engine-python kubectl bq core gsutil gcloud \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install tutum"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "17.09.0-ce"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_MACHINE_VERSION",
              "Value": "v0.13.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L -o /tmp/docker-${DOCKER_VERSION}.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \u0026\u0026 tar -xz -C /tmp -f /tmp/docker-${DOCKER_VERSION}.tgz \u0026\u0026 mv /tmp/docker/docker /usr/local/bin \u0026\u0026     chmod +x /usr/local/bin/docker \u0026\u0026     pip install docker-compose docker-cloud \u0026\u0026     curl -L https://github.com/docker/machine/releases/download/${DOCKER_MACHINE_VERSION}/docker-machine-`uname -s`-`uname -m` \u003e/usr/local/bin/docker-machine \u0026\u0026     chmod +x /usr/local/bin/docker-machine \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026 rm -rf /tmp/* \u0026\u0026 rm -rf /var/log/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "com.blacklabelops.application.jobber-cloud.docker.version",
              "Value": "$DOCKER_VERSION"
            },
            {
              "Key": "com.blacklabelops.application.jobber-cloud.docker-machine.version",
              "Value": "$DOCKER_MACHINE_VERSION"
            },
            {
              "Key": "com.blacklabelops.image.builddate.jobber-cloud",
              "Value": "${BUILD_DATE}"
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "imagescripts",
            "/opt/cloud"
          ]
        },
        {
          "CmdLine": [
            "/opt/cloud/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jobberd"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}