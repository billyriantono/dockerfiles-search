{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "blacklabelops/java:openjre.8",
      "SourceCode": "FROM blacklabelops/java:openjre.8",
      "Platform": "",
      "From": {
        "Image": "blacklabelops/java:openjre.8"
      },
      "Commands": [
        {
          "Maintainer": "Steffen Bleul \u003csbl@blacklabelops.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "BITBUCKET_VERSION",
          "Name": "arg",
          "Value": "5.8.1"
        },
        {
          "Key": "CONTAINER_UID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "CONTAINER_GID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Env": [
            {
              "Key": "BITBUCKET_HOME",
              "Value": "/var/atlassian/bitbucket"
            },
            {
              "Key": "BITBUCKET_INSTALL",
              "Value": "/opt/bitbucket"
            },
            {
              "Key": "BITBUCKET_PROXY_NAME",
              "Value": ""
            },
            {
              "Key": "BITBUCKET_PROXY_PORT",
              "Value": ""
            },
            {
              "Key": "BITBUCKET_PROXY_SCHEME",
              "Value": ""
            },
            {
              "Key": "BITBUCKET_BACKUP_CLIENT",
              "Value": "/opt/backupclient/bitbucket-backup-client"
            },
            {
              "Key": "BITBUCKET_BACKUP_CLIENT_HOME",
              "Value": "/opt/backupclient"
            },
            {
              "Key": "BITBUCKET_BACKUP_CLIENT_VERSION",
              "Value": "300300300"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export MYSQL_DRIVER_VERSION=5.1.44 \u0026\u0026     export CONTAINER_USER=bitbucket \u0026\u0026      export CONTAINER_GROUP=bitbucket \u0026\u0026      addgroup -g $CONTAINER_GID $CONTAINER_GROUP \u0026\u0026      adduser -u $CONTAINER_UID             -G $CONTAINER_GROUP             -h /home/$CONTAINER_USER             -s /bin/bash             -S $CONTAINER_USER \u0026\u0026      apk add --update       ca-certificates       gzip       curl       openssh       util-linux       git       perl       wget        ttf-dejavu       git-daemon \u0026\u0026     export XMLSTARLET_VERSION=1.6.1-r1              \u0026\u0026      wget --directory-prefix=/tmp https://github.com/menski/alpine-pkg-xmlstarlet/releases/download/${XMLSTARLET_VERSION}/xmlstarlet-${XMLSTARLET_VERSION}.apk \u0026\u0026     apk add --allow-untrusted /tmp/xmlstarlet-${XMLSTARLET_VERSION}.apk \u0026\u0026     wget -O /tmp/bitbucket.tar.gz https://www.atlassian.com/software/stash/downloads/binary/atlassian-bitbucket-${BITBUCKET_VERSION}.tar.gz \u0026\u0026     tar zxf /tmp/bitbucket.tar.gz -C /tmp \u0026\u0026     mv /tmp/atlassian-bitbucket-${BITBUCKET_VERSION} /tmp/bitbucket \u0026\u0026     mkdir -p ${BITBUCKET_HOME} \u0026\u0026     mkdir -p /opt \u0026\u0026     mv /tmp/bitbucket /opt/bitbucket \u0026\u0026     rm -f                                                     ${BITBUCKET_INSTALL}/lib/mysql-connector-java*.jar \u0026\u0026      wget -O /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz                                                    http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz \u0026\u0026     tar xzf /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz                                                    -C /tmp \u0026\u0026     cp /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar           ${BITBUCKET_INSTALL}/lib/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar                                \u0026\u0026      export KEYSTORE=$JAVA_HOME/jre/lib/security/cacerts \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file /tmp/lets-encrypt-x1-cross-signed.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file /tmp/lets-encrypt-x2-cross-signed.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file /tmp/lets-encrypt-x3-cross-signed.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file /tmp/lets-encrypt-x4-cross-signed.der \u0026\u0026     wget -O /home/${CONTAINER_USER}/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class \u0026\u0026     chown -R bitbucket:bitbucket /home/${CONTAINER_USER} \u0026\u0026     chown -R bitbucket:bitbucket ${BITBUCKET_HOME} \u0026\u0026     chown -R bitbucket:bitbucket ${BITBUCKET_INSTALL}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${BITBUCKET_BACKUP_CLIENT_HOME} \u0026\u0026     wget -O /tmp/bitbucket-backup-distribution.zip       https://marketplace.atlassian.com/download/plugins/com.atlassian.stash.backup.client/version/${BITBUCKET_BACKUP_CLIENT_VERSION} \u0026\u0026     unzip -d ${BITBUCKET_BACKUP_CLIENT_HOME} /tmp/bitbucket-backup-distribution.zip \u0026\u0026     mv /opt/backupclient/$(ls /opt/backupclient/) /opt/backupclient/bitbucket-backup-client \u0026\u0026     chown -R bitbucket:bitbucket ${BITBUCKET_BACKUP_CLIENT_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del       ca-certificates       gzip       util-linux       wget \u0026\u0026      rm -rf /var/cache/apk/* \u0026\u0026     rm -rf /tmp/* \u0026\u0026     rm -rf /var/log/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "bitbucket"
        },
        {
          "Name": "workdir",
          "Path": "/var/atlassian/bitbucket"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/atlassian/bitbucket"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7990",
            "7990"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7999",
            "7999"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "7992",
            "7992"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "imagescripts/docker-entrypoint.sh",
            "/home/bitbucket/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "imagescripts/ps_opt_p_enabled_for_alpine.sh",
            "/usr/bin/ps"
          ]
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--",
            "/home/bitbucket/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "bitbucket"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}