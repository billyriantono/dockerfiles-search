{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "golang:buster",
      "SourceCode": "FROM golang:buster as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "golang:buster"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "$GOPATH/src/image-server"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "$GOPATH/src/image-server"
          ]
        },
        {
          "Env": [
            {
              "Key": "GO111MODULE",
              "Value": "on"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPROXY",
              "Value": "https://goproxy.io"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y wget build-essential pkg-config --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y  -q libjpeg-dev libpng-dev libtiff-dev libwebp-dev libgif-dev libx11-dev --no-install-recommends;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd \u0026\u0026     \twget http://www.imagemagick.org/download/ImageMagick.tar.gz \u0026\u0026     \ttar -xvf ImageMagick.tar.gz \u0026\u0026     \tcd ImageMagick* \u0026\u0026     \t./configure --prefix=/usr     \t    --without-magick-plus-plus     \t    --without-perl     \t    --disable-openmp     \t    --with-gvc=no     \t    --disable-docs \u0026\u0026     \tmake -j$(nproc) \u0026\u0026 make install \u0026\u0026     \tldconfig /usr/local/lib \u0026\u0026     export CGO_CFLAGS=\"-I`pkg-config --cflags MagickWand`\";     export CGO_LDFLAGS=\"-I`pkg-config --libs MagickWand`\";     export CGO_CFLAGS_ALLOW='-Xpreprocessor';     rm -rf $GOPATH/pkg/linux_amd64/gopkg.in/gographics/imagick.v3;     cd $GOPATH/src/image-server \u0026\u0026 go install -tags no_pkgconfig -v gopkg.in/gographics/imagick.v3/imagick;     go build -o app;     mv app  /opt/app;"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "debian:buster-slim",
      "SourceCode": "FROM debian:buster-slim",
      "Platform": "",
      "From": {
        "Image": "debian:buster-slim"
      },
      "Commands": [
        {
          "Maintainer": "buzzxu \u003cdownloadxu@163.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/app",
            "/app"
          ]
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y wget build-essential pkg-config fontconfig libjemalloc-dev     libjpeg-dev libpng-dev libtiff-dev libwebp-dev     libgif-dev libx11-dev --no-install-recommends \u0026\u0026     cd  /tmp \u0026\u0026 \twget http://www.imagemagick.org/download/ImageMagick.tar.gz \u0026\u0026 \ttar -xvf ImageMagick.tar.gz \u0026\u0026 \tcd ImageMagick* \u0026\u0026 \t./configure --prefix=/usr \t    --without-magick-plus-plus \t    --without-perl \t    --with-jemalloc \t    --disable-openmp \t    --with-gvc=no \t    --disable-docs \u0026\u0026 \tmake -j$(nproc) \u0026\u0026 make install \u0026\u0026 \tldconfig /usr/local/lib \u0026\u0026 \trm /etc/localtime \u0026\u0026     ln -sv /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \u0026\u0026     echo \"Asia/Shanghai\" \u003e /etc/timezone \u0026\u0026     mkdir -p /data/images \u0026\u0026     apt-get remove --purge -y wget build-essential pkg-config \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get autoclean \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/conf.yml",
            "/app/conf.yml"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/run.sh",
            "/app/run.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/default.png",
            "/data/images"
          ]
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Shanghai"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}