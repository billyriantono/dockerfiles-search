MetaArgs: null
Stages:
- BaseName: node:carbon-alpine
  Commands:
  - Name: expose
    Ports:
    - "8080"
  - Env:
    - Key: STI_SCRIPTS_PATH
      Value: /usr/libexec/s2i
    - Key: NODEJS_VERSION
      Value: "8"
    - Key: NPM_RUN
      Value: start
    - Key: APP_ROOT
      Value: /opt/app-root
    - Key: HOME
      Value: /opt/app-root/src
    - Key: NPM_CONFIG_PREFIX
      Value: $HOME/.npm-global
    - Key: PATH
      Value: $APP_ROOT/bin:$HOME/bin:$HOME/node_modules/.bin/:$HOME/.npm-global/bin/:$PATH
    - Key: DEBUG_PORT
      Value: "5858"
    - Key: NODE_ENV
      Value: production
    - Key: DEV_MODE
      Value: "false"
    Name: env
  - Env:
    - Key: SUMMARY
      Value: '"Platform for building and running Node.js $NODEJS_VERSION applications"'
    - Key: DESCRIPTION
      Value: '"Node.js $NODEJS_VERSION available as docker container is a base platform
        for building and running various Node.js $NODEJS_VERSION applications and
        frameworks. Node.js is a platform built on Chrome''s JavaScript runtime for
        easily building fast, scalable network applications. Node.js uses an event-driven,
        non-blocking I/O model that makes it lightweight and efficient, perfect for
        data-intensive real-time applications that run across distributed devices."'
    Name: env
  - Labels:
    - Key: summary
      Value: '"$SUMMARY"'
    - Key: description
      Value: '"$DESCRIPTION"'
    - Key: io.k8s.description
      Value: '"$DESCRIPTION"'
    - Key: io.k8s.display-name
      Value: '"Node.js $NODEJS_VERSION"'
    - Key: io.openshift.expose-services
      Value: '"8080:http"'
    - Key: io.openshift.tags
      Value: '"builder,nodejs,node$NODEJS_VERSION"'
    - Key: io.openshift.s2i.scripts-url
      Value: '"image://$STI_SCRIPTS_PATH"'
    - Key: io.s2i.scripts-url
      Value: '"image://$STI_SCRIPTS_PATH"'
    - Key: com.redhat.dev-mode
      Value: '"DEV_MODE:false"'
    - Key: com.redhat.deployments-dir
      Value: '"$HOME"'
    - Key: com.redhat.dev-mode.port
      Value: '"DEBUG_PORT:5858"'
    - Key: com.redhat.component
      Value: '"alpine-node$NODEJS_VERSION-docker"'
    - Key: name
      Value: '"s2i-node-alpine"'
    - Key: version
      Value: '"$NODEJS_VERSION"'
    - Key: maintainer
      Value: '"SoftwareCollections.org <sclorg@redhat.com>"'
    - Key: help
      Value: '"For more information visit https://github.com/sclorg/s2i-nodejs-container"'
    - Key: usage
      Value: '"s2i build <SOURCE-REPOSITORY> s2i-node-alpine:$NODEJS_VERSION <APP-NAME>"'
    Name: label
  - CmdLine:
    - mkdir /src &&     mkdir /opt/usr &&     mkdir -p $APP_ROOT &&     mkdir -p $HOME
      &&     mkdir -p $HOME/.npm-global &&     mkdir -p $STI_SCRIPTS_PATH &&     apk
      update &&     apk add findutils         gettext         bash         python         make         gcc         clang         g++         linux-headers         binutils-gold         libstdc++
      &&     rm -rf /var/cache/apk/* &&     npm install -g nodemon
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./s2i/bin/
    - $STI_SCRIPTS_PATH
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./root/
    - /
  - Env:
    - Key: BASH_ENV
      Value: $APP_ROOT/etc/scl_enable
    - Key: ENV
      Value: $APP_ROOT/etc/scl_enable
    - Key: PROMPT_COMMAND
      Value: '". $APP_ROOT/etc/scl_enable"'
    Name: env
  - CmdLine:
    - adduser -u 1001 -S -G root -h ${HOME} -s /sbin/nologin default &&     chown
      -R 1001:0 $APP_ROOT &&     chown -R 1001:0 $STI_SCRIPTS_PATH &&     chown -R
      1001:0 /opt/usr &&     chown -R 1001:0 /src
    Name: run
    PrependShell: true
  - Name: user
    User: "1001"
  - Name: workdir
    Path: ${HOME}
  - CmdLine:
    - $STI_SCRIPTS_PATH/usage
    Name: cmd
    PrependShell: true
  From:
    Image: node:carbon-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:carbon-alpine
