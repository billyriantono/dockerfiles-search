{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "mariadb:10.3",
      "SourceCode": "FROM mariadb:10.3",
      "Platform": "",
      "From": {
        "Image": "mariadb:10.3"
      },
      "Commands": [
        {
          "Maintainer": "jarrysix",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Vendor",
              "Value": "\"jarrysix\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "License",
              "Value": "\"GPLv2\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "Version",
              "Value": "1.0.0"
            }
          ],
          "Name": "label"
        },
        {
          "Expression": "RUN echo \"正在使用jarrysix的基础镜像\"",
          "Name": "onbuild"
        },
        {
          "Env": [
            {
              "Key": "MYSQL_ROOT_PASSWORD",
              "Value": "\"123456\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "\"/tmp\""
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y wget gcc \tlibpcre3-dev libssl-dev zlib1g.dev make \u0026\u0026\techo \"2.Install nginx\" \u0026\u0026\twget -O - \"https://nginx.org/download/nginx-1.17.0.tar.gz\" | tar xzf - \u0026\u0026\tcd nginx* \u0026\u0026 ./configure --prefix=/usr/local/nginx \t\t\t\t--with-http_stub_status_module \t\t\t\t--with-http_ssl_module \t\t\t\t--with-http_flv_module \t\t\t\t--with-http_mp4_module \t\t\t\t--with-http_gzip_static_module \t\t\t\t--with-http_realip_module \t\t\t\t\u0026\u0026 make install \u0026\u0026\techo \"3.Install redis\" \u0026\u0026\twget -O - \"http://download.redis.io/releases/redis-5.0.5.tar.gz\" | tar xzf - \u0026\u0026    cd redis* \u0026\u0026 cp redis.conf /etc/ \u0026\u0026 make install \u0026\u0026 rm -rf ../* \u0026\u0026    echo \"3. Initialize ..\" \u0026\u0026    apt-get remove -y gcc wget libpcre3-dev libssl-dev zlib1g.dev make gnupg gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-boot.sh",
            "/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data",
            "/var/lib/mysql"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3306",
            "443",
            "6379",
            "80"
          ]
        },
        {
          "CmdLine": [
            "sh",
            "/docker-boot.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}