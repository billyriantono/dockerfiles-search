MetaArgs: null
Stages:
- BaseName: alpine:3.9
  Commands:
  - Labels:
    - Key: MAINTAINER
      Value: dockerfiles@nearpod.com
    Name: label
  - Key: KUBECTL_VERSION
    Name: arg
    Value: '"v1.13.3"'
  - Key: KUBECTL_USER
    Name: arg
    Value: kubectl
  - Env:
    - Key: KUBECTL_VERSION
      Value: $KUBECTL_VERSION
    Name: env
  - Env:
    - Key: HOME
      Value: /config
    Name: env
  - CmdLine:
    - set -ex;     apk add --no-cache bash bash-completion curl ca-certificates;     if
      [ "${KUBECTL_VERSION}"="stable" ]; then       curl -q -sSL "https://storage.googleapis.com/kubernetes-release/release/$(curl
      -q -sSL https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      -o /usr/local/bin/kubectl;     else       curl -q -sSL "https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
      -o /usr/local/bin/kubectl;     fi;     chmod +x /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /config
  - CmdLine:
    - set -ex;     WORKDIR="$PWD";     addgroup -g 1000 "$KUBECTL_USER";     adduser
      -D -h "$WORKDIR" -u 1000 -G "$KUBECTL_USER" "$KUBECTL_USER";     [ `id -u "$KUBECTL_USER"`
      -eq 1000 ];     [ `id -g "$KUBECTL_USER"` -eq 1000 ];     kubectl version --client;     echo
      'if [ -f /etc/profile.d/bash_completion.sh ]; then source /etc/profile.d/bash_completion.sh;
      source <(kubectl completion bash) ; fi' >> $WORKDIR/.bashrc
    Name: run
    PrependShell: true
  - Name: user
    User: kubectl
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
