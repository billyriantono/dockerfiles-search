{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo 'hosts: files dns' \u003e\u003e /etc/nsswitch.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache tzdata bash curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Stockholm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INFLUXDB_VERSION",
              "Value": "1.6.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk add --no-cache --virtual .build-deps wget gnupg tar ca-certificates \u0026\u0026     update-ca-certificates \u0026\u0026     for key in     05CE15085FC09D18E99EFB22684A14CF2582E0C5 ;     do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ||     gpg --keyserver pgp.mit.edu --recv-keys \"$key\" ||     gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" ;     done \u0026\u0026     wget --no-verbose https://dl.influxdata.com/influxdb/releases/influxdb-${INFLUXDB_VERSION}-static_linux_amd64.tar.gz.asc \u0026\u0026     wget --no-verbose https://dl.influxdata.com/influxdb/releases/influxdb-${INFLUXDB_VERSION}-static_linux_amd64.tar.gz \u0026\u0026     gpg --batch --verify influxdb-${INFLUXDB_VERSION}-static_linux_amd64.tar.gz.asc influxdb-${INFLUXDB_VERSION}-static_linux_amd64.tar.gz \u0026\u0026     mkdir -p /usr/src \u0026\u0026     tar -C /usr/src -xzf influxdb-${INFLUXDB_VERSION}-static_linux_amd64.tar.gz \u0026\u0026     rm -f /usr/src/influxdb-*/influxdb.conf \u0026\u0026     chmod +x /usr/src/influxdb-*/* \u0026\u0026     cp -a /usr/src/influxdb-*/* /usr/bin/ \u0026\u0026     rm -rf *.tar.gz* /usr/src /root/.gnupg \u0026\u0026     apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "influxdb.conf",
            "/etc/influxdb/influxdb.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8086"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/influxdb"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "healthcheck",
            "/healthcheck"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init-influxdb.sh",
            "/init-influxdb.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x healthcheck"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x init-influxdb.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Health": {
            "Interval": 30000000000,
            "Test": [
              "CMD-SHELL",
              "/healthcheck || exit 1"
            ],
            "Timeout": 5000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "sh",
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "influxd"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}