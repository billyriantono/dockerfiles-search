{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2",
      "SourceCode": "FROM php:7.2",
      "Platform": "",
      "From": {
        "Image": "php:7.2"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"m.pich@outlook.com\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         git         jq         libfreetype6-dev         libjpeg62-turbo-dev         libmemcached-dev         libpng-dev         gnupg         build-essential         zip unzip         zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash -       \u0026\u0026 apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm i -g npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -      \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list      \u0026\u0026 apt-get update \u0026\u0026 apt-get install yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /tmp/composer-setup.php https://getcomposer.org/installer   \u0026\u0026 curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   \u0026\u0026 php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\"   \u0026\u0026 php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --snapshot   \u0026\u0026 rm -f /tmp/composer-setup.*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require hirak/prestissimo:^0.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-source extract   \u0026\u0026 docker-php-ext-configure gd       --with-gd       --with-freetype-dir=/usr/include/       --with-jpeg-dir=/usr/include/       --with-png-dir=/usr/include/   \u0026\u0026 NPROC=$(getconf _NPROCESSORS_ONLN)   \u0026\u0026 docker-php-ext-install -j${NPROC} gd         mysqli         opcache         pdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install memcached-3.0.3   \u0026\u0026 docker-php-ext-enable memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-source delete"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}