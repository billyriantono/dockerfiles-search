{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder-caddy",
      "BaseName": "golang:1.9-alpine3.6",
      "SourceCode": "FROM golang:1.9-alpine3.6 as builder-caddy",
      "Platform": "",
      "As": "builder-caddy",
      "From": {
        "Image": "golang:1.9-alpine3.6"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"ulrich.schreiner@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "CADDY_VERSION",
              "Value": "v0.10.10"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "caddy-build",
            "/caddy-build"
          ]
        },
        {
          "CmdLine": [
            "apk --no-cache update     \u0026\u0026 apk --no-cache --update add git bash     \u0026\u0026 cd /caddy-build     \u0026\u0026 env OS=linux ARCH=amd64 ./build_caddy.sh     \u0026\u0026 ls -la /caddy-build/caddy"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Maintainer": "Abner G Jacobsen - http://daspanel.com \u003cadmin@daspanel.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "builder-caddy",
          "Name": "copy",
          "SourcesAndDest": [
            "/caddy-build/caddy",
            "/usr/sbin/caddy"
          ]
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_URL",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "S6_OVERLAY_VERSION",
          "Name": "arg",
          "Value": "v1.19.1.1"
        },
        {
          "Key": "DASPANEL_IMG_NAME",
          "Name": "arg",
          "Value": "load-balancer-caddy"
        },
        {
          "Key": "DASPANEL_OS_VERSION",
          "Name": "arg",
          "Value": "alpine3.6"
        },
        {
          "Env": [
            {
              "Key": "S6_BEHAVIOUR_IF_STAGE2_FAILS",
              "Value": "2"
            },
            {
              "Key": "TZ",
              "Value": "\"UTC\""
            },
            {
              "Key": "DASPANEL_WAIT_FOR_API",
              "Value": "\"YES\""
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VERSION"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "$VCS_URL"
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"load-balancer-caddy\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"This service provides HTTP load balancer to Daspanel sites.\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/00_base     \u0026\u0026 wget -O /tmp/opt-daspanel.zip \"https://github.com/daspanel/rootfs-base/releases/download/0.1.0/opt-daspanel.zip\"     \u0026\u0026 unzip -o -d / /tmp/opt-daspanel.zip     \u0026\u0026 wget -O /tmp/alpine-s6.zip \"https://github.com/daspanel/rootfs-base/releases/download/0.1.0/alpine-s6.zip\"     \u0026\u0026 unzip -o -d / /tmp/alpine-s6.zip     \u0026\u0026 wget https://github.com/just-containers/s6-overlay/releases/download/$S6_OVERLAY_VERSION/s6-overlay-amd64.tar.gz --no-check-certificate -O /tmp/s6-overlay.tar.gz     \u0026\u0026 tar xvfz /tmp/s6-overlay.tar.gz -C /     \u0026\u0026 rm -f /tmp/s6-overlay.tar.gz     \u0026\u0026 chmod 0755 /usr/sbin/caddy     \u0026\u0026 setcap \"cap_net_bind_service=+ep\" /usr/sbin/caddy     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        }
      ]
    }
  ]
}