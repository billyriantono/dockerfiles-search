MetaArgs: null
Stages:
- BaseName: alpine:3.6
  Commands:
  - Maintainer: Abner G Jacobsen - http://daspanel.com <admin@daspanel.com>
    Name: maintainer
  - Key: VERSION
    Name: arg
    Value: null
  - Key: VCS_URL
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: S6_OVERLAY_VERSION
    Name: arg
    Value: v1.19.1.1
  - Key: DASPANEL_IMG_NAME
    Name: arg
    Value: svc-api
  - Key: DASPANEL_OS_VERSION
    Name: arg
    Value: alpine3.6
  - Key: PYTHON_VERSION
    Name: arg
    Value: "2.7"
  - Key: CADDY_PLUGINS
    Name: arg
    Value: '"http.cors,http.expires,http.ipfilter,http.ratelimit,http.realip"'
  - Key: CADDY_URL
    Name: arg
    Value: '"https://caddyserver.com/download/linux/amd64?plugins=${CADDY_PLUGINS}"'
  - Key: INSTALL_PATH
    Name: arg
    Value: /opt/daspanel/apps/apiserver
  - Env:
    - Key: S6_BEHAVIOUR_IF_STAGE2_FAILS
      Value: "2"
    - Key: TZ
      Value: '"UTC"'
    - Key: DASPANEL_WAIT_FOR_API
      Value: '"YES"'
    Name: env
  - Labels:
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.version
      Value: $VERSION
    - Key: org.label-schema.vcs-url
      Value: $VCS_URL
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.name
      Value: '"daspanel/svc-api"'
    - Key: org.label-schema.description
      Value: '"Docker container running Daspanel API server."'
    Name: label
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs
    - /
  - CmdLine:
    - set -x     && sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/00_base     &&
      wget -O /tmp/opt-daspanel.zip "https://github.com/daspanel/rootfs-base/releases/download/0.1.0/opt-daspanel.zip"     &&
      unzip -o -d / /tmp/opt-daspanel.zip     && wget -O /tmp/alpine-s6.zip "https://github.com/daspanel/rootfs-base/releases/download/0.1.0/alpine-s6.zip"     &&
      unzip -o -d / /tmp/alpine-s6.zip     && wget https://github.com/just-containers/s6-overlay/releases/download/$S6_OVERLAY_VERSION/s6-overlay-amd64.tar.gz
      --no-check-certificate -O /tmp/s6-overlay.tar.gz     && tar xvfz /tmp/s6-overlay.tar.gz
      -C /     && rm -f /tmp/s6-overlay.tar.gz     && sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/${DASPANEL_IMG_NAME}/10_install_python${PYTHON_VERSION}     &&
      sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/${DASPANEL_IMG_NAME}/00_buildenv${PYTHON_VERSION}     &&
      export PYCURL_SSL_LIBRARY=openssl     && sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/${DASPANEL_IMG_NAME}/20_pip${PYTHON_VERSION}_install
      "--compile pycurl==7.43.0"     && sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/${DASPANEL_IMG_NAME}/20_pip${PYTHON_VERSION}_install
      "gunicorn==19.7.1 setproctitle gevent"     && mkdir -p ${INSTALL_PATH}     &&
      wget --no-check-certificate -O /tmp/api-src.zip https://github.com/daspanel/api-server/archive/master.zip     &&
      unzip -o -d /tmp /tmp/api-src.zip     && mv /tmp/api-server-master/api_server
      ${INSTALL_PATH}/.     && mv /tmp/api-server-master/requirements ${INSTALL_PATH}/.     &&
      sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/${DASPANEL_IMG_NAME}/20_pip${PYTHON_VERSION}_install
      "-r ${INSTALL_PATH}/requirements/dev.txt "     && sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/${DASPANEL_IMG_NAME}/09_cleanbuildenv     &&
      rm -rf /tmp/*     && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  - CmdLine: []
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "8080"
  From:
    Image: alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.6
