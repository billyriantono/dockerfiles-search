{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder-caddy",
      "BaseName": "golang:1.9-alpine3.6",
      "SourceCode": "FROM golang:1.9-alpine3.6 as builder-caddy",
      "Platform": "",
      "As": "builder-caddy",
      "From": {
        "Image": "golang:1.9-alpine3.6"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"ulrich.schreiner@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "CADDY_VERSION",
              "Value": "v0.10.10"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "caddy-build",
            "/caddy-build"
          ]
        },
        {
          "CmdLine": [
            "apk --no-cache update     \u0026\u0026 apk --no-cache --update add git bash     \u0026\u0026 cd /caddy-build     \u0026\u0026 env OS=linux ARCH=amd64 ./build_caddy.sh     \u0026\u0026 ls -la /caddy-build/caddy"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "daspanel/engine-base-dev:dev",
      "SourceCode": "FROM daspanel/engine-base-dev:dev",
      "Platform": "",
      "From": {
        "Image": "daspanel/engine-base-dev:dev"
      },
      "Commands": [
        {
          "Maintainer": "Abner G Jacobsen - http://daspanel.com \u003cadmin@daspanel.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "builder-caddy",
          "Name": "copy",
          "SourcesAndDest": [
            "/caddy-build/caddy",
            "/usr/sbin/caddy"
          ]
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_URL",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "S6_OVERLAY_VERSION",
          "Name": "arg",
          "Value": "v1.19.1.1"
        },
        {
          "Key": "DASPANEL_IMG_NAME",
          "Name": "arg",
          "Value": "engine-php71"
        },
        {
          "Key": "DASPANEL_OS_VERSION",
          "Name": "arg",
          "Value": "alpine3.6"
        },
        {
          "Key": "GOTTY_URL",
          "Name": "arg",
          "Value": "\"https://github.com/yudai/gotty/releases/download/v2.0.0-alpha.3/gotty_2.0.0-alpha.3_linux_amd64.tar.gz\""
        },
        {
          "Key": "WP_CLI_VERSION",
          "Name": "arg",
          "Value": "\"1.4.1\""
        },
        {
          "Key": "WPCLI_URL",
          "Name": "arg",
          "Value": "\"https://github.com/wp-cli/wp-cli/releases/download/v${WP_CLI_VERSION}/wp-cli-${WP_CLI_VERSION}.phar\""
        },
        {
          "Key": "PHP_MINIMAL",
          "Name": "arg",
          "Value": "\"php7-fpm php7 php7-common php7-pear php7-phar php7-posix     php7-mbstring php7-ctype php7-iconv php7-bcmath php7-bz2 php7-calendar     php7-gettext php7-pspell php7-recode php7-gmp php7-fileinfo php7-session     php7-zip php7-zlib php7-intl php7-mcrypt     php7-json php7-dom php7-soap php7-xsl php7-xml     php7-tokenizer php7-xmlwriter php7-simplexml php7-xmlreader     php7-curl php7-openssl php7-sockets php7-imap php7-ftp     php7-mysqlnd php7-mysqli     php7-pdo php7-pdo_mysql php7-pdo_pgsql php7-pdo_sqlite     php7-exif php7-gd     php7-apcu php7-opcache php7-pcntl     php7-redis@testing php7-memcached\""
        },
        {
          "Key": "PECL_MINIMAL",
          "Name": "arg",
          "Value": "\"yaml-2.0.0\""
        },
        {
          "Key": "PHP_MODULES",
          "Name": "arg",
          "Value": "\"php7-pgsql php7-sqlite3 php7-memcached php7-mailparse     php7-enchant     php7-tidy     php7-ldap     php7-zmq     php7-amqp     php7-mailparse     php7-pdo_dblib\""
        },
        {
          "Key": "PHP_MODULES_EXTRA",
          "Name": "arg",
          "Value": "\"ffmpeg php7-imagick\""
        },
        {
          "Key": "PHP_XDEBUG",
          "Name": "arg",
          "Value": "\"php7-xdebug\""
        },
        {
          "Key": "PHP_PHPDBG",
          "Name": "arg",
          "Value": "\"php7-phpdbg\""
        },
        {
          "Key": "PHP_MODULES_BANNED",
          "Name": "arg",
          "Value": "\"php7-sysvsem php7-sysvshm php7-xmlrpc php7-shmop     php7-snmp php7-sysvmsg php7-odbc php7-pdo_odbc php7-ldap php7-apache2     php7-cgi php7-dba php7-embed php7-litespeed php7-doc\""
        },
        {
          "Env": [
            {
              "Key": "S6_BEHAVIOUR_IF_STAGE2_FAILS",
              "Value": "2"
            },
            {
              "Key": "TZ",
              "Value": "\"UTC\""
            },
            {
              "Key": "DASPANEL_WAIT_FOR_API",
              "Value": "\"YES\""
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VERSION"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "$VCS_URL"
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"daspanel/engine-php71\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"This service provides HTTP php 7.1 engine server to Daspanel sites.\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm-256color"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VAR_PREFIX",
              "Value": "/var/run"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOG_PREFIX",
              "Value": "/var/log/php-fpm7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TEMP_PREFIX",
              "Value": "/tmp"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CACHE_PREFIX",
              "Value": "/var/cache"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PAGER",
              "Value": "'more'"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/00_base     \u0026\u0026 wget -O /tmp/opt-daspanel.zip \"https://github.com/daspanel/rootfs-base/releases/download/0.1.0/opt-daspanel.zip\"     \u0026\u0026 unzip -o -d / /tmp/opt-daspanel.zip     \u0026\u0026 wget -O /tmp/alpine-s6.zip \"https://github.com/daspanel/rootfs-base/releases/download/0.1.0/alpine-s6.zip\"     \u0026\u0026 unzip -o -d / /tmp/alpine-s6.zip     \u0026\u0026 wget https://github.com/just-containers/s6-overlay/releases/download/$S6_OVERLAY_VERSION/s6-overlay-amd64.tar.gz --no-check-certificate -O /tmp/s6-overlay.tar.gz     \u0026\u0026 tar xvfz /tmp/s6-overlay.tar.gz -C /     \u0026\u0026 rm -f /tmp/s6-overlay.tar.gz     \u0026\u0026 addgroup -g 82 -S www-data     \u0026\u0026 adduser -u 82 -D -S -h /home/www-data -s /sbin/nologin -G www-data www-data     \u0026\u0026 sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/99_install_pkgs \"git\"     \u0026\u0026 echo '@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing' \u003e\u003e /etc/apk/repositories     \u0026\u0026 echo '@community http://nl.alpinelinux.org/alpine/edge/community' \u003e\u003e /etc/apk/repositories     \u0026\u0026 sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/${DASPANEL_IMG_NAME}/00_buildenv     \u0026\u0026 sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/99_install_pkgs \"${PHP_MINIMAL}\"     \u0026\u0026 sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/99_install_pkgs \"${PHP_MODULES}\"     \u0026\u0026 sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/99_install_pkgs \"${PHP_MODULES_EXTRA}\"     \u0026\u0026 sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/99_install_pkgs \"${PHP_PHPDBG}\"     \u0026\u0026 sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/99_install_pkgs \"${PHP_XDEBUG}\"     \u0026\u0026 curl -sS https://getcomposer.org/installer -o /tmp/composer-install     \u0026\u0026 php /tmp/composer-install --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 rm /tmp/composer-install     \u0026\u0026 curl -sSL https://phar.phpunit.de/phpunit-6.2.phar -o /usr/local/bin/phpunit     \u0026\u0026 chmod +x /usr/local/bin/phpunit     \u0026\u0026 sed -i -e 's/\\(PHP -C\\) -n/\\1/g' /usr/bin/pecl     \u0026\u0026 mkdir -p /tmp/pear/cache     \u0026\u0026 sh /opt/daspanel/bootstrap/${DASPANEL_OS_VERSION}/${DASPANEL_IMG_NAME}/09_cleanbuildenv     \u0026\u0026 curl --progress-bar --show-error --fail --location         --header \"Accept: application/tar+gzip, application/x-gzip, application/octet-stream\" -o /usr/local/bin/wp         \"${WPCLI_URL}\"     \u0026\u0026 chmod 0755 /usr/local/bin/wp     \u0026\u0026 curl --silent --show-error --fail --location         --header \"Accept: application/tar+gzip, application/x-gzip, application/octet-stream\" -o /tmp/gotty.tar.gz         \"${GOTTY_URL}\"     \u0026\u0026 tar -C /usr/sbin -xvzf /tmp/gotty.tar.gz     \u0026\u0026 chmod 0755 /usr/sbin/gotty     \u0026\u0026 mkdir /lib64     \u0026\u0026 ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2     \u0026\u0026 chmod 0755 /usr/sbin/caddy     \u0026\u0026 setcap \"cap_net_bind_service=+ep\" /usr/sbin/caddy     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        }
      ]
    }
  ]
}