{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "daspanel/alpine-base",
      "SourceCode": "FROM daspanel/alpine-base",
      "Platform": "",
      "From": {
        "Image": "daspanel/alpine-base"
      },
      "Commands": [
        {
          "Maintainer": "Abner G Jacobsen - http://daspanel.com \u003cadmin@daspanel.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "S6_BEHAVIOUR_IF_STAGE2_FAILS",
              "Value": "2"
            },
            {
              "Key": "TZ",
              "Value": "\"UTC\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk add --no-cache libssl1.0 libcurl     \u0026\u0026 apk add --no-cache --update --virtual=.build-deps         bash gcc musl-dev git         libressl-dev curl curl-dev python-dev libffi-dev     \u0026\u0026 apk add --no-cache --update python     \u0026\u0026 curl \"https://bootstrap.pypa.io/get-pip.py\" | python     \u0026\u0026 export PYCURL_SSL_LIBRARY=openssl     \u0026\u0026 pip install --compile pycurl     \u0026\u0026 pip install setproctitle gevent gunicorn     \u0026\u0026 apk --purge -v del .build-deps     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 rm -rf /tmp/src     \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        }
      ]
    }
  ]
}