MetaArgs: null
Stages:
- BaseName: ruby:2.6.2
  Commands:
  - Maintainer: Sharetribe Team <team@sharetribe.com>
    Name: maintainer
  - Env:
    - Key: REFRESHED_AT
      Value: "2019-04-12"
    Name: env
  - CmdLine:
    - echo 'deb http://deb.debian.org/debian stretch main' > /etc/apt/sources.list     &&
      echo 'deb http://security.debian.org stretch/updates main' >> /etc/apt/sources.list     &&
      apt-get update     && apt-get dist-upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ~/.gnupg   && chmod 600 ~/.gnupg   && echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     56730D5401028683275BD23C23EFEFE93C4CFFFE   ;
      do     gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;   done
    Name: run
    PrependShell: true
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 7.8.0
    Name: env
  - CmdLine:
    - curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz"   &&
      curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   && gpg
      --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep " node-v$NODE_VERSION-linux-x64.tar.xz\$"
      SHASUMS256.txt | sha256sum -c -   && tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz"
      -C /usr/local --strip-components=1   && rm "node-v$NODE_VERSION-linux-x64.tar.xz"
      SHASUMS256.txt.asc SHASUMS256.txt   && ln -s /usr/local/bin/node /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sfSL   -o /usr/sbin/secure-environment   "https://github.com/convox/secure-environment/releases/download/v0.0.1/secure-environment"   &&
      echo "4e4c1ed98f1ff4518c8448814c74d6d05ba873879e16817cd6a02ee5013334ea */usr/sbin/secure-environment"   |
      sha256sum -c -   && chmod 755 /usr/sbin/secure-environment
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nginx memcached mysql-client
    Name: run
    PrependShell: true
  - Env:
    - Key: BUNDLE_BIN
      Value: ""
    Name: env
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - "useradd -m -s /bin/bash app \t&& mkdir /opt/app /opt/app/client /opt/app/log
      /opt/app/tmp && chown -R app:app /opt/app"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile
    - /opt/app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile.lock
    - /opt/app
  - Env:
    - Key: RAILS_ENV
      Value: production
    Name: env
  - Name: user
    User: app
  - CmdLine:
    - bundle install --deployment --without test,development
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - /opt/app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - client/package.json
    - /opt/app/client/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - client/customloaders/customfileloader
    - /opt/app/client/customloaders/customfileloader
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: error
    Name: env
  - Env:
    - Key: NPM_CONFIG_PRODUCTION
      Value: "true"
    Name: env
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /opt/app
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - script/startup.sh
    Name: cmd
    PrependShell: false
  - CmdLine:
    - script/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: user
    User: root
  - CmdLine:
    - mkdir -p           app/assets/webpack           public/assets           public/webpack     &&
      chown -R app:app        app/assets/javascripts        app/assets/webpack        client/app/        public/assets        public/webpack
    Name: run
    PrependShell: true
  - Name: user
    User: app
  - CmdLine:
    - script/prepare-assets.sh
    Name: run
    PrependShell: true
  From:
    Image: ruby:2.6.2
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2.6.2
