MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1-alpine
  Commands:
  - Name: workdir
    Path: /usr/src/app
  - CmdLine:
    - apk add --update --no-cache   git ca-certificates tzdata curl   && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./go.mod
    - ./go.*
    - ./
  - CmdLine:
    - go mod download
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - CGO_ENABLED=0 go build -o /go/bin/deploykit ./cmd/deploykit
    Name: run
    PrependShell: true
  From:
    Image: golang:1-alpine
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1-alpine AS builder
- BaseName: alpine:3.9
  Commands:
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/share/zoneinfo
    - /usr/share/zoneinfo
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /etc/ssl/certs/ca-certificates.crt
    - /etc/ssl/certs/
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /go/bin/deploykit
    - /bin/deploykit
  - Env:
    - Key: PORT
      Value: "8080"
    Name: env
  - Name: expose
    Ports:
    - $PORT
  - Name: expose
    Ports:
    - "6060"
  - Health:
      Interval: 5000000000
      Retries: 5
      StartPeriod: 2000000000
      Test:
      - CMD-SHELL
      - curl -sS http://localhost:$PORT/health || exit 1
      Timeout: 5000000000
    Name: healthcheck
  - CmdLine:
    - addgroup -g 1000 -S deploykit &&     adduser -u 1000 -S deploykit -G deploykit
    Name: run
    PrependShell: true
  - Name: user
    User: deploykit
  - CmdLine:
    - deploykit
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
