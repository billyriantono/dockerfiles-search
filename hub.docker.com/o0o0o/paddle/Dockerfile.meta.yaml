MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04
  Commands:
  - Maintainer: PaddlePaddle Authors <paddle-dev@baidu.com>
    Name: maintainer
  - Key: UBUNTU_MIRROR
    Name: arg
    Value: null
  - CmdLine:
    - /bin/bash -c 'if [[ -n ${UBUNTU_MIRROR} ]]; then sed -i 's#http://archive.ubuntu.com/ubuntu#${UBUNTU_MIRROR}#g'
      /etc/apt/sources.list; fi'
    Name: run
    PrependShell: true
  - Key: WITH_GPU
    Name: arg
    Value: null
  - Key: WITH_AVX
    Name: arg
    Value: null
  - Key: WITH_DOC
    Name: arg
    Value: null
  - Env:
    - Key: WOBOQ
      Value: "OFF"
    Name: env
  - Env:
    - Key: WITH_GPU
      Value: ${WITH_GPU:-ON}
    Name: env
  - Env:
    - Key: WITH_AVX
      Value: ${WITH_AVX:-ON}
    Name: env
  - Env:
    - Key: WITH_DOC
      Value: ${WITH_DOC:-OFF}
    Name: env
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./paddle/scripts/docker/root/
    - /root/
  - CmdLine:
    - apt-get update &&     apt-get install -y --allow-downgrades patchelf     git
      python-pip python-dev python-opencv openssh-server bison     libnccl2=2.1.2-1+cuda8.0
      libnccl-dev=2.1.2-1+cuda8.0     wget unzip unrar tar xz-utils bzip2 gzip coreutils
      ntp     curl sed grep graphviz libjpeg-dev zlib1g-dev      python-matplotlib
      gcc-4.8 g++-4.8     automake locales clang-format swig cmake      liblapack-dev
      liblapacke-dev     clang-3.8 llvm-3.8 libclang-3.8-dev     net-tools libtool
      ccache &&     apt-get clean -y
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz |     tar
      -xz -C /usr/local &&     mkdir /root/gopath &&     mkdir /root/gopath/bin &&     mkdir
      /root/gopath/src
    Name: run
    PrependShell: true
  - Env:
    - Key: GOROOT
      Value: /usr/local/go
    - Key: GOPATH
      Value: /root/gopath
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${GOROOT}/bin:${GOPATH}/bin
    Name: env
  - CmdLine:
    - curl -s -q https://glide.sh/get | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- http://paddlepaddledeps.cdn.bcebos.com/TensorRT-4.0.0.3.Ubuntu-16.04.4.x86_64-gnu.cuda-8.0.cudnn7.0.tar.gz
      |     tar -xz -C /usr/local &&     cp -rf /usr/local/TensorRT/include /usr &&     cp
      -rf /usr/local/TensorRT/lib /usr
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global credential.helper store
    Name: run
    PrependShell: true
  - CmdLine:
    - localedef -i en_US -f UTF-8 en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install -U pip &&     pip install -U wheel &&     pip install -U docopt
      PyYAML sphinx==1.5.6 &&     pip install sphinx-rtd-theme==0.1.9 recommonmark
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pre-commit 'ipython==5.3.0' &&     pip install 'ipykernel==4.6.0'
      'jupyter==1.0.0' &&     pip install opencv-python
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pylint pytest astroid isort LinkChecker
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./python/requirements.txt
    - /root/
  - CmdLine:
    - pip install -r /root/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libssl-dev libffi-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install certifi urllib3[secure]
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/woboq/woboq_codebrowser /woboq &&     (cd /woboq      cmake
      -DLLVM_CONFIG_EXECUTABLE=/usr/bin/llvm-config-3.8            -DCMAKE_BUILD_TYPE=Release
      .      make)
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:root' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/^PermitRootLogin\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  From:
    Image: nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04
