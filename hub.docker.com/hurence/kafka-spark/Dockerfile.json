{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:6",
      "SourceCode": "FROM centos:6",
      "Platform": "",
      "From": {
        "Image": "centos:6"
      },
      "Commands": [
        {
          "Maintainer": "Hurence",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "yum clean all;     rpm --rebuilddb;     yum install -y curl which tar sudo openssh-server openssh-clients rsync wget git svn telnet nano vim;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum groupinstall -y 'Development Tools';"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jre-8u131-linux-x64.rpm\" \u0026\u0026 yum -y localinstall jre-8u131-linux-x64.rpm \u0026\u0026 rm jre-8u131-linux-x64.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm -rf /var/cache/yum/x86_64/6/extras/packages \u0026\u0026 rm -rf /tmp \u0026\u0026 yum -y install epel-release \u0026\u0026 yum -y install nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "default.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "cd /usr/local;     git clone https://github.com/edenhill/librdkafka.git;     cd librdkafka/;      ./configure;     make;     make install;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local;     git clone https://github.com/edenhill/kafkacat.git;     cd kafkacat/;      ./configure;     make;     make install;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$LD_LIBRARY_PATH:/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sudo yum install -y zlib-devel  bzip2-devel openssl-devel ncurses-devel sqlite-devel python-devel libpcap-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt;     wget --no-check-certificate https://www.python.org/ftp/python/2.7.6/Python-2.7.6.tar.xz;     tar xf Python-2.7.6.tar.xz;     cd Python-2.7.6;     ./configure --prefix=/usr/local;     make \u0026\u0026 make altinstall;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://bootstrap.pypa.io/get-pip.py | python2.7 -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /tmp;     cd /tmp;     git clone https://github.com/apache/incubator-metron.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/incubator-metron/metron-sensors/pycapa;     pip install six;     /usr/local/bin/pip install -r requirements.txt;     python2.7 setup.py install;     rm -rf /tmp/incubator-metron"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s http://apache.crihan.fr/dist/kafka/0.10.0.0/kafka_2.11-0.10.0.0.tgz | tar --owner=root --group=root -xz -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local \u0026\u0026 ln -s kafka_2.11-0.10.0.0 kafka"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KAFKA_HOME",
              "Value": "/usr/local/kafka"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "2181",
            "9092"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "server.properties",
            "$KAFKA_HOME/config/server.properties"
          ]
        },
        {
          "CmdLine": [
            "curl -s http://d3kbcqa49mib13.cloudfront.net/spark-2.1.0-bin-hadoop2.7.tgz | tar --owner=root --group=root -xz -C /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local \u0026\u0026 ln -s spark-2.1.0-bin-hadoop2.7 spark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/usr/local/spark"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$SPARK_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "4040"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bootstrap.sh",
            "/etc/bootstrap.sh"
          ]
        },
        {
          "CmdLine": [
            "chown root.root /etc/bootstrap.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 700 /etc/bootstrap.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/etc/bootstrap.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}