{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Maintainer": "Ingo MÃ¼ller \u003cingo.mueller@inf.ethz.ch\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y         build-essential         bison         cmake         flex         pkg-config         python3-pip         wget         xz-utils     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/clang+llvm-7.0.1/ \u0026\u0026     cd /opt/clang+llvm-7.0.1/ \u0026\u0026     wget http://releases.llvm.org/7.0.1/clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz -O -          | tar -x -I xz --strip-components=1 \u0026\u0026     for file in bin/*;     do         ln -s $PWD/$file /usr/bin/$(basename $file)-7.0;     done \u0026\u0026     cp /opt/clang+llvm-7.0.1/lib/libomp.so /opt/clang+llvm-7.0.1/lib/libomp.so.5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/arrow \u0026\u0026     cd /tmp/arrow \u0026\u0026     wget https://github.com/apache/arrow/archive/apache-arrow-0.14.0.tar.gz -O -         | tar -xz --strip-components=1 \u0026\u0026     pip3 install -r /tmp/arrow/python/requirements-build.txt \u0026\u0026     mkdir -p /tmp/arrow/cpp/build \u0026\u0026     cd /tmp/arrow/cpp/build \u0026\u0026     CXX=clang++-7.0 CC=clang-7.0         cmake             -DCMAKE_BUILD_TYPE=Debug             -DCMAKE_CXX_STANDARD=17             -DCMAKE_INSTALL_PREFIX=/tmp/arrow/dist             -DCMAKE_INSTALL_LIBDIR=lib             -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=ON             -DARROW_WITH_RAPIDJSON=ON             -DARROW_PARQUET=ON             -DARROW_PYTHON=ON             -DARROW_FLIGHT=OFF             -DARROW_GANDIVA=OFF             -DARROW_BUILD_UTILITIES=OFF             -DARROW_CUDA=OFF             -DARROW_ORC=OFF             -DARROW_JNI=OFF             -DARROW_TENSORFLOW=OFF             -DARROW_HDFS=OFF             -DARROW_BUILD_TESTS=OFF             -DARROW_RPATH_ORIGIN=ON             .. \u0026\u0026     make install \u0026\u0026     cd /tmp/arrow/python \u0026\u0026     PYARROW_WITH_PARQUET=1 ARROW_HOME=/tmp/arrow/dist         python3 setup.py build_ext --bundle-arrow-cpp bdist_wheel \u0026\u0026     mkdir -p /opt/arrow-0.14/share \u0026\u0026     cp /tmp/arrow/python/dist/*.whl /opt/arrow-*/share \u0026\u0026    cp -r /tmp/arrow/dist/* /opt/arrow-*/ \u0026\u0026     cd / \u0026\u0026 rm -rf /tmp/arrow"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}