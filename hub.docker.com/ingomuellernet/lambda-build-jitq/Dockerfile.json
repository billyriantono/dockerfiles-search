{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "lambci/lambda:build-python3.7",
      "SourceCode": "FROM lambci/lambda:build-python3.7",
      "Platform": "",
      "From": {
        "Image": "lambci/lambda:build-python3.7"
      },
      "Commands": [
        {
          "Maintainer": "Ingo MÃ¼ller \u003cingo.mueller@inf.ethz.ch\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "touch /var/lib/rpm/* \u0026\u0026     yum install -y         gcc72         gcc72-c++         wget         xz         zlib-devel         libcurl-devel         openssl-devel         libuuid-devel         pulseaudio-libs-devel         graphviz-devel         \u0026\u0026     yum remove -y         cmake         \u0026\u0026     yum -y clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/clang+llvm-7.0.1/ \u0026\u0026     cd /opt/clang+llvm-7.0.1/ \u0026\u0026     wget --progress=dot:giga http://releases.llvm.org/7.0.1/clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz -O -          | tar -x -I xz --strip-components=1 \u0026\u0026     for file in bin/*;     do         ln -s $PWD/$file /usr/bin/$(basename $file)-7.0;     done \u0026\u0026     mv /opt/clang+llvm-7.0.1/lib/libomp.so{,.5} \u0026\u0026     ln -s libomp.so.5 /opt/clang+llvm-7.0.1/lib/libomp.so \u0026\u0026     mv /usr/bin/clang{,-3.6} \u0026\u0026 mv /usr/bin/clang++{,-3.6} \u0026\u0026     update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-7.0 100 \u0026\u0026     update-alternatives --install /usr/bin/clang clang /usr/bin/clang-7.0 100"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CMAKE_PREFIX_PATH",
              "Value": "$CMAKE_PREFIX_PATH:/opt/clang+llvm-7.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /opt/cmake-3.14.5/ \u0026\u0026     cd /opt/cmake-3.14.5/ \u0026\u0026     wget -nv https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz -O -         | tar -xz --strip-components=1 \u0026\u0026     for file in bin/*;     do         ln -s $PWD/$file /usr/bin/$(basename $file);     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ \u0026\u0026     wget --progress=dot:giga https://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.gz -O -         | tar -xz \u0026\u0026     cd /tmp/boost_1_70_0 \u0026\u0026     ./bootstrap.sh --prefix=/opt/boost-1.70.0 --with-toolset=clang \u0026\u0026     ./b2 -j$(nproc)         toolset=clang cxxflags=\"-std=c++17 -D_GLIBCXX_USE_CXX11_ABI\"         --with-regex         --with-filesystem         --with-program_options         --with-system         --with-stacktrace         install \u0026\u0026     cd / \u0026\u0026     rm -rf /tmp/boost_1_70_0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CMAKE_PREFIX_PATH",
              "Value": "$CMAKE_PREFIX_PATH:/opt/boost-1.70.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/aws-sdk-cpp \u0026\u0026     cd /tmp/aws-sdk-cpp \u0026\u0026     wget --progress=dot:giga https://github.com/aws/aws-sdk-cpp/archive/1.7.138.tar.gz -O -         | tar -xz --strip-components=1 \u0026\u0026     mkdir -p /tmp/aws-sdk-cpp/build \u0026\u0026     cd /tmp/aws-sdk-cpp/build \u0026\u0026     CXX=clang++-7.0 CC=clang-7.0 CXXFLAGS=-D_GLIBCXX_USE_CXX11_ABI         cmake             -DBUILD_ONLY=\"s3\"             -DCMAKE_BUILD_TYPE=Release             -DCPP_STANDARD=17             -DENABLE_TESTING=OFF             -DCUSTOM_MEMORY_MANAGEMENT=OFF             -DCMAKE_INSTALL_PREFIX=/opt/aws-sdk-cpp-1.7/             -DAWS_DEPS_INSTALL_DIR:STRING=/opt/aws-sdk-cpp-1.7/             .. \u0026\u0026     make -j$(nproc) install \u0026\u0026     rm -rf /tmp/aws-sdk-cpp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CMAKE_PREFIX_PATH",
              "Value": "$CMAKE_PREFIX_PATH:/opt/aws-sdk-cpp-1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/arrow \u0026\u0026     cd /tmp/arrow \u0026\u0026     wget --progress=dot:giga https://github.com/apache/arrow/archive/apache-arrow-0.14.0.tar.gz -O -         | tar -xz --strip-components=1 \u0026\u0026     {         echo 'diff --git a/cpp/cmake_modules/BuildUtils.cmake b/cpp/cmake_modules/BuildUtils.cmake';         echo 'index ecfa593a0..c2b744766 100644';         echo '--- a/cpp/cmake_modules/BuildUtils.cmake';         echo '+++ b/cpp/cmake_modules/BuildUtils.cmake';         echo '@@ -251,6 +251,13 @@ function(ADD_ARROW_LIB LIB_NAME)';         echo '                                      SOVERSION';         echo '                                      \"${ARROW_SO_VERSION}\")';         echo '';         echo '+    target_link_libraries(${LIB_NAME}_objlib';         echo '+                          LINK_PUBLIC';         echo '+                          \"$\u003cBUILD_INTERFACE:${ARG_SHARED_LINK_LIBS}\u003e\"';         echo '+                          \"$\u003cINSTALL_INTERFACE:${ARG_SHARED_INSTALL_INTERFACE_LIBS}\u003e\"';         echo '+                          LINK_PRIVATE';         echo '+                          ${ARG_SHARED_PRIVATE_LINK_LIBS})';         echo '+';         echo '     target_link_libraries(${LIB_NAME}_shared';         echo '                           LINK_PUBLIC';         echo '                           \"$\u003cBUILD_INTERFACE:${ARG_SHARED_LINK_LIBS}\u003e\"';     } | patch -p1 \u0026\u0026     pip3 install -r /tmp/arrow/python/requirements-build.txt \u0026\u0026     mkdir -p /tmp/arrow/cpp/build \u0026\u0026     cd /tmp/arrow/cpp/build \u0026\u0026     CXXFLAGS=\"-Wl,-rpath=/opt/boost-1.70.0/lib/ -D_GLIBCXX_USE_CXX11_ABI\"         CXX=clang++-7.0 CC=clang-7.0             cmake                 -DCMAKE_BUILD_TYPE=Release                 -DCMAKE_CXX_STANDARD=17                 -DCMAKE_INSTALL_PREFIX=/tmp/arrow/dist                 -DCMAKE_INSTALL_LIBDIR=lib                 -DARROW_WITH_RAPIDJSON=ON                 -DARROW_PARQUET=ON                 -DARROW_PYTHON=ON                 -DARROW_FLIGHT=OFF                 -DARROW_GANDIVA=OFF                 -DARROW_BUILD_UTILITIES=OFF                 -DARROW_CUDA=OFF                 -DARROW_ORC=OFF                 -DARROW_JNI=OFF                 -DARROW_TENSORFLOW=OFF                 -DARROW_HDFS=OFF                 -DARROW_BUILD_TESTS=OFF                 -DARROW_RPATH_ORIGIN=ON                 .. \u0026\u0026     make -j$(nproc) install \u0026\u0026     cd /tmp/arrow/python \u0026\u0026     CXXFLAGS=\"-Wl,-rpath=/opt/boost-1.70.0/lib/ -D_GLIBCXX_USE_CXX11_ABI\"         CXX=clang++-7.0 CC=clang-7.0         PYARROW_WITH_PARQUET=1 ARROW_HOME=/tmp/arrow/dist             python3 setup.py build_ext --bundle-arrow-cpp bdist_wheel \u0026\u0026     mkdir -p /opt/arrow-0.14/share \u0026\u0026     cp /tmp/arrow/python/dist/*.whl /opt/arrow-*/share \u0026\u0026    cp -r /tmp/arrow/dist/* /opt/arrow-*/ \u0026\u0026     cd / \u0026\u0026 rm -rf /tmp/arrow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CMAKE_PREFIX_PATH",
              "Value": "$CMAKE_PREFIX_PATH:/opt/arrow-0.14"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}