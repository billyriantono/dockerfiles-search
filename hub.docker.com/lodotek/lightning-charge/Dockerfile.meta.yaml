MetaArgs: null
Stages:
- As: builder
  BaseName: node:8.9-slim
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends autoconf automake
      build-essential git libtool libgmp-dev   libsqlite3-dev python python3 wget
      zlib1g-dev
    Name: run
    PrependShell: true
  - Key: TESTRUNNER
    Name: arg
    Value: null
  - Key: LIGHTNINGD_VERSION
    Name: arg
    Value: master
  - CmdLine:
    - git clone https://github.com/ElementsProject/lightning.git /opt/lightningd     &&
      cd /opt/lightningd     && git checkout $LIGHTNINGD_VERSION     && DEVELOPER=$TESTRUNNER
      ./configure     && make
    Name: run
    PrependShell: true
  - Env:
    - Key: BITCOIN_VERSION
      Value: 0.16.1
    Name: env
  - Env:
    - Key: BITCOIN_URL
      Value: https://bitcoincore.org/bin/bitcoin-core-$BITCOIN_VERSION/bitcoin-$BITCOIN_VERSION-x86_64-linux-gnu.tar.gz
    Name: env
  - Env:
    - Key: BITCOIN_SHA256
      Value: 10b31d17351ff4c7929cf955e4d24a2398b0ce91509f707faf8596940c12432a
    Name: env
  - Env:
    - Key: BITCOIN_ASC_URL
      Value: https://bitcoincore.org/bin/bitcoin-core-$BITCOIN_VERSION/SHA256SUMS.asc
    Name: env
  - Env:
    - Key: BITCOIN_PGP_KEY
      Value: 01EA5486DE18A882D4C2684590C8019E36C2E964
    Name: env
  - CmdLine:
    - mkdir /opt/bitcoin && cd /opt/bitcoin     && wget -qO bitcoin.tar.gz "$BITCOIN_URL"     &&
      echo "$BITCOIN_SHA256 bitcoin.tar.gz" | sha256sum -c -     && gpg --keyserver
      keyserver.ubuntu.com --recv-keys "$BITCOIN_PGP_KEY"     && wget -qO bitcoin.asc
      "$BITCOIN_ASC_URL"     && gpg --verify bitcoin.asc     && BD=bitcoin-$BITCOIN_VERSION/bin     &&
      tar -xzvf bitcoin.tar.gz $BD/bitcoind $BD/bitcoin-cli --strip-components=1
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/charged
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package*.json
    - ./
  - CmdLine:
    - npm install    && test -n "$TESTRUNNER" || {       cp -r node_modules node_modules.dev       &&
      npm prune --production       && mv -f node_modules node_modules.prod       &&
      mv -f node_modules.dev node_modules; }
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - npm run dist     && rm -rf src     && test -n "$TESTRUNNER" || (rm -rf test
      node_modules && mv -f node_modules.prod node_modules)
    Name: run
    PrependShell: true
  From:
    Image: node:8.9-slim
  Name: builder
  Platform: ""
  SourceCode: FROM node:8.9-slim as builder
- BaseName: node:8.9-slim
  Commands:
  - Name: workdir
    Path: /opt/charged
  - Key: TESTRUNNER
    Name: arg
    Value: null
  - Env:
    - Key: HOME
      Value: /tmp
    Name: env
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends inotify-tools libgmp-dev
      libsqlite3-dev       $(test -n "$TESTRUNNER" && echo jq)     && rm -rf /var/lib/apt/lists/*     &&
      ln -s /opt/charged/bin/charged /usr/bin/charged     && mkdir /data     && ln
      -s /data/lightning /tmp/.lightning
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /opt/lightningd/cli/lightning-cli
    - /usr/bin
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /opt/lightningd/lightningd/lightning*
    - /usr/bin/
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /opt/bitcoin/bin
    - /usr/bin
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /opt/charged
    - /opt/charged
  - CmdLine:
    - bin/docker-entrypoint.sh
    Name: cmd
    PrependShell: true
  - Name: expose
    Ports:
    - "9112"
    - "9735"
  From:
    Image: node:8.9-slim
  Name: ""
  Platform: ""
  SourceCode: FROM node:8.9-slim
