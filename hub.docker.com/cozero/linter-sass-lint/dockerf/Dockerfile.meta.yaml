MetaArgs: null
Stages:
- BaseName: centos:latest
  Commands:
  - CmdLine:
    - groupadd -r sentry && useradd -r -m -g sentry sentry
    Name: run
    PrependShell: true
  - CmdLine:
    - yum update -y && yum install epel-release -y && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y     gcc     git     libffi-devel     libjpeg-devel     libpqxx-devel     libxml2-devel     libxslt-devel     libyaml-devel     openldap-devel     python-devel     python-pip     wget     g++     gcc-c++     openssl-devel     make     libldap2-dev     libsasl2-dev     &&
      yum clean all
    Name: run
    PrependShell: true
  - Env:
    - Key: PIP_NO_CACHE_DIR
      Value: "off"
    Name: env
  - Env:
    - Key: PIP_DISABLE_PIP_VERSION_CHECK
      Value: "on"
    Name: env
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - set -x     && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(if
      [ `arch` = 'x86_64' ]; then echo 'amd64'; else echo `arch`; fi)"     && wget
      -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(if
      [ `arch` = 'x86_64' ]; then echo 'amd64'; else echo `arch`; fi).asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     && gpg --batch --verify
      /usr/local/bin/gosu.asc /usr/local/bin/gosu     && rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc     &&
      chmod +x /usr/local/bin/gosu     && gosu nobody true
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.14.0
    Name: env
  - CmdLine:
    - set -x     && wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini"     &&
      wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5     && gpg --batch --verify
      /usr/local/bin/tini.asc /usr/local/bin/tini     && rm -r "$GNUPGHOME" /usr/local/bin/tini.asc     &&
      chmod +x /usr/local/bin/tini     && tini -h
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && pip install librabbitmq==1.6.1     && python -c 'import librabbitmq'
    Name: run
    PrependShell: true
  - Env:
    - Key: SENTRY_VERSION
      Value: 8.22.0
    Name: env
  - CmdLine:
    - mkdir -p /usr/src/sentry
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /usr/src/sentry/
  - CmdLine:
    - set -x     && wget -O /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl
      "https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry-${SENTRY_VERSION}-py27-none-any.whl"     &&
      wget -O /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc "https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc"     &&
      wget -O /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl
      "https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl"     &&
      wget -O /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc
      "https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys D8749766A66DD714236A932C3B2D400CE5BBCA60     && gpg --batch --verify
      /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl     &&
      gpg --batch --verify /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc
      /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl     &&
      pip install     /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl     /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl     &&
      pip install setuptools -U     && pip install -r /usr/src/sentry/requirements.txt     &&
      sentry --help     && sentry plugins list     && rm -r "$GNUPGHOME" /usr/src/sentry
    Name: run
    PrependShell: true
  - CmdLine:
    - yum clean all     && yum remove -y     kernel-headers     wget     g++     gcc-c++     openssl-devel     make
    Name: run
    PrependShell: true
  - Env:
    - Key: SENTRY_CONF
      Value: /etc/sentry
    - Key: SENTRY_FILESTORE_DIR
      Value: /var/lib/sentry/files
    Name: env
  - CmdLine:
    - mkdir -p $SENTRY_CONF && mkdir -p $SENTRY_FILESTORE_DIR
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sentry.conf.py
    - /etc/sentry/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.yml
    - /etc/sentry/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - Name: expose
    Ports:
    - "9000"
  - Name: volume
    Volumes:
    - /var/lib/sentry/files
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - run
    - web
    Name: cmd
    PrependShell: false
  From:
    Image: centos:latest
  Name: ""
  Platform: ""
  SourceCode: FROM centos:latest
