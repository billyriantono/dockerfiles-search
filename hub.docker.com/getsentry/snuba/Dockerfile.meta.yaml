MetaArgs: null
Stages:
- BaseName: python:3.7-slim
  Commands:
  - CmdLine:
    - groupadd -r snuba && useradd -r -g snuba snuba
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/snuba
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/snuba
  - Env:
    - Key: PIP_NO_CACHE_DIR
      Value: "off"
    - Key: PIP_DISABLE_PIP_VERSION_CHECK
      Value: "on"
    - Key: PYTHONDONTWRITEBYTECODE
      Value: "1"
    Name: env
  - CmdLine:
    - set -ex;     apt-get update;     apt-get install --no-install-recommends -y         libexpat1         libffi6         liblz4-1         libpcre3     ;     rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.11"
    Name: env
  - CmdLine:
    - set -ex;         LIBRDKAFKA_VERSION=0.11.5;     buildDeps='         bzip2         dirmngr         git         g++         gcc         libc6-dev         liblz4-dev         libpcre3-dev         gnupg         make         wget     ';     apt-get
      update;     apt-get install -y --no-install-recommends multiarch-support libtinfo5
      libexpat1 libffi6 liblz4-1 libpcre3 $buildDeps;     rm -rf /var/lib/apt/lists/*;         wget
      -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)";     wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc";     export GNUPGHOME="$(mktemp -d)";     for key
      in       B42F6819007F00F88E364FD4036A9C25BF357DD4     ; do       gpg --batch
      --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key" ||       gpg
      --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key" ||       gpg
      --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ;     done;     gpg
      --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;     rm -rf "$GNUPGHOME"
      /usr/local/bin/gosu.asc;     chmod +x /usr/local/bin/gosu;     gosu nobody true;         mkdir
      -p /usr/src/librdkafka;     cd /usr/src/librdkafka;     wget -O v${LIBRDKAFKA_VERSION}.tar.gz
      https://github.com/edenhill/librdkafka/archive/v${LIBRDKAFKA_VERSION}.tar.gz;     tar
      xf v${LIBRDKAFKA_VERSION}.tar.gz --strip-components=1;     ./configure --prefix=/usr;     make;     PREFIX=/usr
      make install;     rm -r /usr/src/librdkafka;         apt-get purge -y --auto-remove
      $buildDeps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /usr/src/snuba
  - CmdLine:
    - chown -R snuba:snuba /usr/src/snuba/
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex;         buildDeps='         git         gcc         libc6-dev         liblz4-dev         libpcre3-dev         make         wget     ';     apt-get
      update;     apt-get install -y $buildDeps --no-install-recommends;     rm -rf
      /var/lib/apt/lists/*;         make install-python-dependencies;     mkdir /tmp/uwsgi-dogstatsd;     wget
      -O - https://github.com/DataDog/uwsgi-dogstatsd/archive/bc56a1b5e7ee9e955b7a2e60213fc61323597a78.tar.gz         |
      tar -xvz -C /tmp/uwsgi-dogstatsd --strip-components=1;     uwsgi --build-plugin
      /tmp/uwsgi-dogstatsd;     rm -rf /tmp/uwsgi-dogstatsd .uwsgi_plugins_builder;     mkdir
      -p /var/lib/uwsgi;     mv dogstatsd_plugin.so /var/lib/uwsgi/;     uwsgi --need-plugin=/var/lib/uwsgi/dogstatsd
      --help > /dev/null;     snuba --help;         apt-get purge -y --auto-remove
      $buildDeps
    Name: run
    PrependShell: true
  - Key: SNUBA_VERSION_SHA
    Name: arg
    Value: null
  - Env:
    - Key: SNUBA_RELEASE
      Value: $SNUBA_VERSION_SHA
    - Key: FLASK_DEBUG
      Value: "0"
    - Key: PYTHONUNBUFFERED
      Value: "1"
    - Key: UWSGI_ENABLE_METRICS
      Value: "true"
    - Key: UWSGI_NEED_PLUGIN
      Value: /var/lib/uwsgi/dogstatsd
    - Key: UWSGI_STATS_PUSH
      Value: dogstatsd:127.0.0.1:8126
    - Key: UWSGI_DOGSTATSD_EXTRA_TAGS
      Value: service:snuba
    Name: env
  - Name: expose
    Ports:
    - "1218"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker_entrypoint.sh
    - ./
  - CmdLine:
    - ./docker_entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - api
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.7-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.7-slim
