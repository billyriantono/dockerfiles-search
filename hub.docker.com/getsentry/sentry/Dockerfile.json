{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "sdist",
      "BaseName": "python:2.7.16-slim-buster",
      "SourceCode": "FROM python:2.7.16-slim-buster as sdist",
      "Platform": "",
      "As": "sdist",
      "From": {
        "Image": "python:2.7.16-slim-buster"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends     dirmngr     gnupg     wget     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "for key in       B42F6819007F00F88E364FD4036A9C25BF357DD4       595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7       94AE36675C464D64BAFA68DD7434390BDBE9B9C5       FD3A5288F042B6850C66B31F09FE44734EB7990E       71DCFD284A79C3B38668286BC97EC7A07EDE3FC1       DD8F2338BAE7501E3DD5AC78C273792F7D83545D       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       B9AE9905FFD7803F25714661B63B535A4C206CA9       77984A986EBC2AA786BC0F66B01FBB92821C587A       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       4ED778F539E3634C779C87C6D7062848A1AB005C       A48C2BEE680E841632CD4E44F07496B3EB3C1762       B9E2F5981AA6E0CD28160D9FF13993A75599653C     ; do       gpg --batch --keyserver hkps://mattrobenolt-keyserver.global.ssl.fastly.net:443 --recv-keys \"$key\";     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -r /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "0.18.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini\"     \u0026\u0026 wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini.asc\"     \u0026\u0026 gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini     \u0026\u0026 rm /usr/local/bin/tini.asc     \u0026\u0026 chmod +x /usr/local/bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".nvmrc",
            "/usr/src/sentry/"
          ]
        },
        {
          "CmdLine": [
            "cd /usr/src/sentry     \u0026\u0026 export NODE_VERSION=\"$(cat .nvmrc)\"     \u0026\u0026 wget \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\"     \u0026\u0026 wget \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     \u0026\u0026 gpg --batch --verify SHASUMS256.txt.asc     \u0026\u0026 grep \" node-v$NODE_VERSION-linux-x64.tar.gz\\$\" SHASUMS256.txt.asc | sha256sum -c -     \u0026\u0026 tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1     \u0026\u0026 rm -r \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "SOURCE_COMMIT",
          "Name": "arg",
          "Value": "\"unknown\""
        },
        {
          "Env": [
            {
              "Key": "SENTRY_BUILD",
              "Value": "$SOURCE_COMMIT"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/usr/src/sentry/"
          ]
        },
        {
          "CmdLine": [
            "export YARN_CACHE_FOLDER=\"$(mktemp -d)\"     \u0026\u0026 cd /usr/src/sentry     \u0026\u0026 python setup.py bdist_wheel     \u0026\u0026 rm -r \"$YARN_CACHE_FOLDER\"     \u0026\u0026 mv /usr/src/sentry/dist /dist"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "python:2.7.16-slim-buster",
      "SourceCode": "FROM python:2.7.16-slim-buster",
      "Platform": "",
      "From": {
        "Image": "python:2.7.16-slim-buster"
      },
      "Commands": [
        {
          "CmdLine": [
            "groupadd -r sentry \u0026\u0026 useradd -r -m -g sentry sentry"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "sdist",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/gosu",
            "/usr/local/bin/tini",
            "/usr/local/bin/"
          ]
        },
        {
          "Env": [
            {
              "Key": "PIP_NO_CACHE_DIR",
              "Value": "off"
            },
            {
              "Key": "PIP_DISABLE_PIP_VERSION_CHECK",
              "Value": "1"
            },
            {
              "Key": "PIP_USE_PEP517",
              "Value": "off"
            },
            {
              "Key": "SENTRY_CONF",
              "Value": "/etc/sentry"
            },
            {
              "Key": "SENTRY_FILESTORE_DIR",
              "Value": "/var/lib/sentry/files"
            },
            {
              "Key": "UWSGI_PROFILE_OVERRIDE",
              "Value": "ssl=false;xml=false;routing=false"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "sdist",
          "Name": "copy",
          "SourcesAndDest": [
            "/dist/*.whl",
            "/tmp/dist/"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 buildDeps=\"\"     \u0026\u0026 buildDeps=\"$buildDeps       gcc       g++     \"     \u0026\u0026 buildDeps=\"$buildDeps       libmaxminddb-dev     \"    \u0026\u0026 buildDeps=\"$buildDeps       make     \"     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends $buildDeps     \u0026\u0026 pip install /tmp/dist/*.whl     \u0026\u0026 pip install librabbitmq==1.6.1 maxminddb==1.4.1     \u0026\u0026 rm -rf /tmp/dist     \u0026\u0026 apt-get purge -y --auto-remove $buildDeps     \u0026\u0026 apt-get install -y --no-install-recommends       libjpeg-dev       libffi-dev       libmaxminddb-dev       libxmlsec1-dev       libxslt-dev       libyaml-dev       pkg-config         \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 python -c 'import librabbitmq'     \u0026\u0026 python -c 'import maxminddb.extension; maxminddb.extension.Reader'     \u0026\u0026 mkdir -p $SENTRY_CONF \u0026\u0026 mkdir -p $SENTRY_FILESTORE_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker/docker-entrypoint.sh",
            "./docker/sentry.conf.py",
            "./docker/config.yml",
            "$SENTRY_CONF/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/sentry/files"
          ]
        },
        {
          "CmdLine": [
            "exec $SENTRY_CONF/docker-entrypoint.sh $0 $@"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "run",
            "web"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}