MetaArgs:
- DefaultValue: x86_64
  Key: BUILD_ARCH
  ProvidedValue: null
  Value: x86_64
Stages:
- As: sentry-build
  BaseName: getsentry/rust-musl-cross:$BUILD_ARCH-musl
  Commands:
  - Key: BUILD_ARCH
    Name: arg
    Value: null
  - Env:
    - Key: BUILD_TARGET
      Value: $BUILD_ARCH-unknown-linux-musl
    Name: env
  - Name: workdir
    Path: /work
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Cargo.toml
    - Cargo.lock
    - build.rs
    - ./
  - CmdLine:
    - mkdir -p src     && echo "fn main() {}" > src/main.rs     && cargo build --release
      --target=$BUILD_TARGET --locked
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - src
    - src/
  - CmdLine:
    - touch src/main.rs && cargo build --target=$BUILD_TARGET --release --features
      managed
    Name: run
    PrependShell: true
  - CmdLine:
    - cp target/$BUILD_TARGET/release/sentry-cli /usr/local/bin/sentry-cli
    Name: run
    PrependShell: true
  From:
    Image: getsentry/rust-musl-cross:$BUILD_ARCH-musl
  Name: sentry-build
  Platform: ""
  SourceCode: FROM getsentry/rust-musl-cross:$BUILD_ARCH-musl AS sentry-build
- BaseName: alpine:3.7
  Commands:
  - Name: workdir
    Path: /work
  - CmdLine:
    - apk add --no-cache ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - Chown: ""
    From: sentry-build
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/sentry-cli
    - /bin
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
