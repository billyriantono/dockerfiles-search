{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "golang:alpine",
      "SourceCode": "FROM golang:alpine as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "golang:alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "addgroup -S -g 500 recursivecall         \u0026\u0026     adduser -S -u 500 -G recursivecall recursivecall   \u0026\u0026     mkdir -p $GOPATH/src/recursivecall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH/src/recursivecall"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "./"
          ]
        },
        {
          "CmdLine": [
            "CGO_ENABLED=0 go build -installsuffix cgo -ldflags '-w -s' -o recursivecall"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "scratch",
      "SourceCode": "FROM scratch",
      "Platform": "",
      "From": {
        "Scratch": true
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/recursivecall/recursivecall",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/passwd",
            "/etc/group",
            "/etc/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "Name": "user",
          "User": "recursivecall:recursivecall"
        },
        {
          "CmdLine": [
            "./recursivecall"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}