{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3-alpine",
      "SourceCode": "FROM python:3-alpine",
      "Platform": "",
      "From": {
        "Image": "python:3-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apk add --no-cache --purge -u sudo nodejs npm curl ca-certificates openssh-client openssl     \u0026\u0026 apk --update add --virtual .build-dependencies python-dev libffi-dev openssl-dev build-base git     \u0026\u0026 pip install --no-cache --upgrade pyyaml ara[server]     \u0026\u0026 mkdir -p /workingdir/conf/server     \u0026\u0026 mkdir -p /workingdir/www/logs     \u0026\u0026 cd /workingdir \u0026\u0026 git clone https://github.com/ansible-community/ara-web \u0026\u0026 cd ara-web     \u0026\u0026 npm install     \u0026\u0026 apk del --purge .build-dependencies     \u0026\u0026 rm -rf /var/cache/apk/* /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "settings.yaml",
            "/workingdir/conf/server/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3000",
            "8000"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/workingdir/conf"
          ]
        },
        {
          "Env": [
            {
              "Key": "ARA_SETTINGS",
              "Value": "\"/workingdir/conf/server/settings.yaml\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ARA_WEB_PUBLIC_IP",
              "Value": "\"localhost\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/workingdir/ara-web"
        },
        {
          "CmdLine": [
            "/usr/local/bin/ara-manage migrate \u0026\u0026 sed -i \"s/.*apiURL.*/\\ \\\"apiURL\\\"\\:\\ \\\"http\\:\\/\\/${ARA_WEB_PUBLIC_IP}\\:8000\\\"/g\" /workingdir/ara-web/public/config.json \u0026\u0026 /usr/local/bin/ara-manage runserver 0.0.0.0:8000 \u0026 npm start"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}