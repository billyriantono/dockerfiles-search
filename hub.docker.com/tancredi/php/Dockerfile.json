{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.5-fpm-alpine",
      "SourceCode": "FROM php:5.5-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:5.5-fpm-alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOTLP_VER",
              "Value": "0.1.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RABBITMQ_C_VER",
              "Value": "0.8.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WALTER_VER",
              "Value": "1.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP_ROOT",
              "Value": "/var/www/html"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "deluser www-data \u0026\u0026     addgroup -g 82 -S www-data \u0026\u0026     adduser -u 82 -D -S -s /bin/bash -G www-data www-data \u0026\u0026     sed -i '/^www-data/s/!/*/' /etc/shadow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026     apk add --update         bash         bzip2         ca-certificates         c-client         freetype         git         gzip         icu-libs         imap         libbz2         libjpeg-turbo         libltdl         libmcrypt         libpng         libxslt         make         mariadb-client         libmemcached-libs         openssh         openssh-client         openssl         patch         postgresql-client         rsync         su-exec         tar         wget         yaml         autoconf         cmake         build-base         bzip2-dev         freetype-dev         icu-dev         imap-dev         jpeg-dev         libjpeg-turbo-dev         libmemcached-dev         libmcrypt-dev         libpng-dev         libtool         libxslt-dev         openldap-dev         pcre-dev         postgresql-dev         yaml-dev \u0026\u0026     docker-php-source extract \u0026\u0026     docker-php-ext-install         bcmath         bz2         calendar         exif         imap         intl         ldap         mcrypt         mysql         mysqli         opcache         pcntl         pdo_mysql         pdo_pgsql         pgsql         phar         soap         sockets         xmlrpc         xsl         zip \u0026\u0026     docker-php-ext-configure gd         --with-gd         --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/         --with-jpeg-dir=/usr/include/ \u0026\u0026       NPROC=$(getconf _NPROCESSORS_ONLN) \u0026\u0026       docker-php-ext-install -j${NPROC} gd \u0026\u0026     wget -qO- https://github.com/alanxz/rabbitmq-c/releases/download/v${RABBITMQ_C_VER}/rabbitmq-c-${RABBITMQ_C_VER}.tar.gz         | tar xz -C /tmp/ \u0026\u0026     cd /tmp/rabbitmq-c-${RABBITMQ_C_VER} \u0026\u0026     mkdir -p build \u0026\u0026 cd build \u0026\u0026     cmake ..             -DCMAKE_INSTALL_PREFIX=/usr             -DCMAKE_INSTALL_LIBDIR=lib             -DCMAKE_C_FLAGS=\"$CFLAGS\" \u0026\u0026     cmake --build . --target install \u0026\u0026     pecl config-set php_ini \"$PHP_INI_DIR/php.ini\" \u0026\u0026     pecl install         amqp         apcu-4.0.11         oauth-1.2.3         memcached-2.2.0         mongodb         redis         uploadprogress         xdebug         yaml-1.3.0 \u0026\u0026     docker-php-ext-enable         amqp         apcu         oauth         memcached         mongodb         uploadprogress         redis         xdebug         yaml \u0026\u0026     wget -qO- https://github.com/wodby/gotpl/releases/download/${GOTLP_VER}/gotpl-alpine-linux-amd64-${GOTLP_VER}.tar.gz         | tar xz -C /usr/local/bin \u0026\u0026     wget -qO- https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026     su-exec www-data composer global require hirak/prestissimo:^0.3 \u0026\u0026     wget -qO- https://phar.phpunit.de/phpunit-5.7.phar \u003e /usr/local/bin/phpunit \u0026\u0026     chmod +x /usr/local/bin/phpunit \u0026\u0026     wget -qO- https://github.com/walter-cd/walter/releases/download/v${WALTER_VER}/walter_${WALTER_VER}_linux_amd64.tar.gz         | tar xz -C /tmp/ \u0026\u0026     mv /tmp/walter_linux_amd64/walter /usr/local/bin \u0026\u0026     mkdir -p $APP_ROOT \u0026\u0026     chown -R www-data:www-data /var/www \u0026\u0026     rm -f $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini \u0026\u0026     echo -e \"Host *\\n\\tStrictHostKeyChecking no\\n\" \u003e\u003e /etc/ssh/ssh_config \u0026\u0026     sed -i '/PermitUserEnvironment/c\\PermitUserEnvironment yes' /etc/ssh/sshd_config \u0026\u0026     su-exec www-data echo \"export PATH=/home/www-data/.composer/vendor/bin:$PATH\" \u003e /home/www-data/.profile \u0026\u0026     truncate -s 0 /etc/crontabs/root \u0026\u0026     su-exec www-data composer clear-cache \u0026\u0026     docker-php-source delete \u0026\u0026     apk del --purge         *-dev         autoconf         build-base         cmake         libtool \u0026\u0026     rm -rf         /usr/src/php.tar.xz         /usr/src/php/ext/memcached         /usr/src/php/ext/uploadprogress         /usr/include/php         /usr/lib/php/build         /var/cache/apk/*         /tmp/*         /root/.composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/home/www-data/.composer/vendor/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$APP_ROOT"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "templates",
            "/etc/gotpl/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-php-entrypoint",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "actions",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "${PHP_INI_DIR}"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}