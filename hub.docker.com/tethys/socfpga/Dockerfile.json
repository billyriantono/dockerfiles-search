{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tethys/build-yocto",
      "SourceCode": "FROM tethys/build-yocto",
      "Platform": "",
      "From": {
        "Image": "tethys/build-yocto"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Key": "PRJROOT",
          "Name": "arg",
          "Value": "\"FPGA-SoC\""
        },
        {
          "Key": "PRJLINX",
          "Name": "arg",
          "Value": "${PRJROOT}\"-Linux\""
        },
        {
          "Key": "ROOT_VER",
          "Name": "arg",
          "Value": "\"v0.8.0\""
        },
        {
          "Key": "ZYBO",
          "Name": "arg",
          "Value": "\"ZYBO\""
        },
        {
          "Key": "ZYBO7",
          "Name": "arg",
          "Value": "\"ZYBO\"\"-Z7\""
        },
        {
          "Key": "PYNQ",
          "Name": "arg",
          "Value": "\"PYNQ-Z1\""
        },
        {
          "Key": "DE0",
          "Name": "arg",
          "Value": "\"DE0-Nano-SoC\""
        },
        {
          "Key": "PRJRFS",
          "Name": "arg",
          "Value": "\"debian9-rootfs\""
        },
        {
          "Key": "DISTRO",
          "Name": "arg",
          "Value": "\"stretch\""
        },
        {
          "CmdLine": [
            "curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash     \u0026\u0026 apt-get update \u0026\u0026 apt-get -y upgrade     \u0026\u0026 apt-get -y install         nano vim          bc crossbuild-essential-armhf  device-tree-compiler libssl1.0-dev         qemu-user-static debootstrap binfmt-support         flex bison         git-lfs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth=1 --branch ${ROOT_VER}  git://github.com/ikwzm/${PRJLINX}     \u0026\u0026 cd ${PRJLINX}     \u0026\u0026 git lfs pull     \u0026\u0026  echo \"\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "for i in ${PYNQ} ${DE0} ${ZYBO7} ${ZYBO};  do git clone --depth=1 https://github.com/ikwzm/${PRJROOT}-U-Boot-${i}.git ; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p  ${PRJLINX}/${PRJRFS}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${PRJLINX}     \u0026\u0026 echo \"sudo debootstrap --arch=armhf --foreign ${DISTRO}                      ${PRJRFS}         \" \u003e prebuild.sh     \u0026\u0026 echo \"sudo cp /usr/bin/qemu-arm-static                                       ${PRJRFS}/usr/bin \" \u003e\u003e prebuild.sh     \u0026\u0026 echo \"sudo cp /etc/resolv.conf                                               ${PRJRFS}/etc     \" \u003e\u003e prebuild.sh     \u0026\u0026 echo \"sudo cp scripts/build-debian9-rootfs-with-qemu.sh                      ${PRJRFS}         \" \u003e\u003e prebuild.sh     \u0026\u0026 echo \"sudo cp linux-image-4.14.34-armv7-fpga_4.14.34-armv7-fpga-1_armhf.deb  ${PRJRFS}         \" \u003e\u003e prebuild.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R build /home/build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "build"
        },
        {
          "CmdLine": [
            "echo \"export targetdir=debian9-rootfs\" \u003e\u003e /home/build/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export distro=stretch\" \u003e\u003e /home/build/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        }
      ]
    }
  ]
}