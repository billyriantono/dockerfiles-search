{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "fedora:27",
      "SourceCode": "FROM fedora:27",
      "Platform": "",
      "From": {
        "Image": "fedora:27"
      },
      "Commands": [
        {
          "Maintainer": "Tristan CAREL \u003ctristan.carel@epfl.ch\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo 'check-update'  ;  dnf check-update -yv  ;  echo 'distro-sync'  ;  dnf distro-sync -yv  ;  echo 'install C Dev Tools'  ;  dnf group install -yv 'C Development Tools and Libraries'  \u0026\u0026 echo 'install Dev tools'  \u0026\u0026 dnf group install -yv 'Development Tools'  \u0026\u0026 dnf install -y     bzip2     bzip2-devel     cmake     fftw-devel     fftw-libs     graphviz     hdf5     hdf5-devel     hostname     libgomp     libSM     libXext     libXrender     ncurses     ncurses-devel     ncurses-libs     pandoc     readline     readline-devel     wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex;     dnf -y install dpkg gnupg;     dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\";     wget -O /usr/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";     wget -O /tmp/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\";     export GNUPGHOME=\"$(mktemp -d)\";     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;     gpg --batch --verify /tmp/gosu.asc /usr/bin/gosu;     rm -r \"$GNUPGHOME\" /tmp/gosu.asc;     chmod +x /usr/bin/gosu;     gosu nobody true;     dnf -y remove dpkg gnupg;     dnf clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "MINICONDA_VERSION",
          "Name": "arg",
          "Value": "2-4.3.21"
        },
        {
          "CmdLine": [
            "echo 'export PATH=/opt/conda/bin:$PATH' \u003e /etc/profile.d/conda.sh  \u0026\u0026 wget --quiet https://repo.continuum.io/miniconda/Miniconda${MINICONDA_VERSION}-Linux-x86_64.sh -O ~/miniconda.sh  \u0026\u0026 /bin/bash ~/miniconda.sh -b -p /opt/conda  \u0026\u0026 rm ~/miniconda.sh  \u0026\u0026 /opt/conda/bin/pip install jupyterlab matplotlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/opt/conda/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone https://github.com/nrnhines/nrn.git /opt/src/nrn  \u0026\u0026 cd /opt/src/nrn  \u0026\u0026 git checkout ee80eb94d3f34e86299a0498b5c1b87f8e8bcaa3  \u0026\u0026 cd /opt/src/nrn  \u0026\u0026 ./build.sh  \u0026\u0026 ./configure      --prefix /opt/nrn      --with-nrnpython=/opt/conda/bin/python      --without-iv  \u0026\u0026 make  \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/opt/nrn/lib/python"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/opt/nrn/x86_64/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint",
            "/usr/bin/"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jupyter",
            "lab",
            "--no-browser",
            "--allow-root",
            "--notebook-dir=/opt/src/notebooks"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}