{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "buildpack-deps",
      "SourceCode": "FROM buildpack-deps",
      "Platform": "",
      "From": {
        "Image": "buildpack-deps"
      },
      "Commands": [
        {
          "CmdLine": [
            "groupadd -r mongodb \u0026\u0026 useradd -r -g mongodb mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv D68FA50FEA312927 \u0026\u0026     echo \"deb http://repo.mongodb.org/apt/debian jessie/mongodb-org/3.2 main\" \u003e /etc/apt/sources.list.d/mongodb-org.list \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y git zlib1g-dev libbz2-dev libsnappy-dev scons numactl gnupg mongodb-org-tools \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ROCKSDB_VERSION",
              "Value": "4.11.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -O rocksdb-v${ROCKSDB_VERSION}.tar.gz https://github.com/facebook/rocksdb/archive/v${ROCKSDB_VERSION}.tar.gz \u0026\u0026     tar xvzf rocksdb-v${ROCKSDB_VERSION}.tar.gz \u0026\u0026     rm -f rocksdb-v${ROCKSDB_VERSION}.tar.gz \u0026\u0026     cd rocksdb-${ROCKSDB_VERSION} \u0026\u0026     CXXFLAGS=\"-flto -Os -s\" make -j$(nproc) --max-load shared_lib \u0026\u0026     INSTALL_PATH=/usr make install \u0026\u0026     cd .. \u0026\u0026     rm -fr rocksdb-${ROCKSDB_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MONGO_VERSION",
              "Value": "3.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -O mongo-rocks-r${MONGO_VERSION}.tar.gz https://github.com/mongodb-partners/mongo-rocks/archive/r${MONGO_VERSION}.tar.gz \u0026\u0026     tar xvzf mongo-rocks-r${MONGO_VERSION}.tar.gz \u0026\u0026     rm -f mongo-rocks-r${MONGO_VERSION}.tar.gz \u0026\u0026     git clone -b \"r${MONGO_VERSION}\" --single-branch --depth 1 https://github.com/mongodb/mongo.git mongo-r${MONGO_VERSION} \u0026\u0026     mkdir -p mongo-r${MONGO_VERSION}/src/mongo/db/modules/ \u0026\u0026     ln -sf /src/mongo-rocks-r${MONGO_VERSION} mongo-r${MONGO_VERSION}/src/mongo/db/modules/rocks \u0026\u0026     cd mongo-r${MONGO_VERSION} \u0026\u0026     CXXFLAGS=\"-flto -Os -s\" scons         CPPPATH=/usr/local/include         LIBPATH=/usr/local/lib         -j$(nproc)         --release         --prefix=/usr         --opt         mongod         install \u0026\u0026     cd .. \u0026\u0026     mkdir -p /data/db /data/configdb \u0026\u0026     chown -R mongodb:mongodb /data/db /data/configdb \u0026\u0026     rm -fr mongo-rocks-r${MONGO_VERSION} mongo-r${MONGO_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data/db",
            "/data/configdb"
          ]
        },
        {
          "Env": [
            {
              "Key": "MONGO_DATABASE",
              "Value": "dev"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "27017"
          ]
        },
        {
          "CmdLine": [
            "mongod"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}