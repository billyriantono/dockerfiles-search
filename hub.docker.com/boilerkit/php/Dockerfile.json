{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm-alpine3.7",
      "SourceCode": "FROM php:7.2-fpm-alpine3.7",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm-alpine3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PHPIZE_DEPS",
              "Value": "$PHPIZE_DEPS"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --update --virtual .phpize-deps $PHPIZE_DEPS     freetype-dev     libpng-dev     libtool     libxml2-dev     postgresql-dev         \u0026\u0026 apk add --no-cache --update       gmp-dev       icu-dev       imagemagick-dev       imap-dev       libjpeg-turbo-dev       libzip-dev         \u0026\u0026 apk add --no-cache --update       git       hiredis       postgresql       shadow       wget       zsh         \u0026\u0026 docker-php-ext-configure gd         --with-freetype-dir=/usr/include/         --with-png-dir=/usr/include/         --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd         \u0026\u0026 docker-php-ext-install intl         \u0026\u0026 docker-php-ext-install soap         \u0026\u0026 docker-php-ext-install bcmath         \u0026\u0026 docker-php-ext-install gmp         \u0026\u0026 docker-php-ext-configure imap --with-imap --with-imap-ssl     \u0026\u0026 docker-php-ext-install imap         \u0026\u0026 docker-php-ext-configure zip --with-libzip     \u0026\u0026 docker-php-ext-install zip         \u0026\u0026 docker-php-ext-install pdo_pgsql         \u0026\u0026 pecl install imagick-3.4.3     \u0026\u0026 docker-php-ext-enable imagick         \u0026\u0026 pecl install redis     \u0026\u0026 docker-php-ext-enable redis         \u0026\u0026 pecl install xdebug     \u0026\u0026 docker-php-ext-enable xdebug         \u0026\u0026 apk del .phpize-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS \"https://getcomposer.org/installer\" | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/www/.composer     \u0026\u0026 chown -R www-data:www-data /var/www/.composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$PATH:./vendor/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "CmdLine": [
            "chsh --shell /bin/zsh root   \u0026\u0026 chsh --shell /bin/zsh www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        }
      ]
    }
  ]
}