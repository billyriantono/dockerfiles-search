{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "dockerkun/rb_jemalloc_node_circle:2.6.2",
      "SourceCode": "FROM dockerkun/rb_jemalloc_node_circle:2.6.2",
      "Platform": "",
      "From": {
        "Image": "dockerkun/rb_jemalloc_node_circle:2.6.2"
      },
      "Commands": [
        {
          "CmdLine": [
            "if grep -q Debian /etc/os-release \u0026\u0026 grep -q jessie /etc/os-release; then     echo \"deb http://http.us.debian.org/debian/ jessie-backports main\" | sudo tee -a /etc/apt/sources.list     \u0026\u0026 echo \"deb-src http://http.us.debian.org/debian/ jessie-backports main\" | sudo tee -a /etc/apt/sources.list     \u0026\u0026 sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless   ; elif grep -q Ubuntu /etc/os-release \u0026\u0026 grep -q Trusty /etc/os-release; then     echo \"deb http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main\" | sudo tee -a /etc/apt/sources.list     \u0026\u0026 echo \"deb-src http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main\" | sudo tee -a /etc/apt/sources.list     \u0026\u0026 sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A     \u0026\u0026 sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless   ; else     sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless   ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "PHANTOMJS_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/phantomjs-latest.tar.bz2\"   \u0026\u0026 sudo apt-get install libfontconfig   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/phantomjs.tar.bz2 ${PHANTOMJS_URL}   \u0026\u0026 tar -x -C /tmp -f /tmp/phantomjs.tar.bz2   \u0026\u0026 sudo mv /tmp/phantomjs-*-linux-x86_64/bin/phantomjs /usr/local/bin   \u0026\u0026 rm -rf /tmp/phantomjs.tar.bz2 /tmp/phantomjs-*   \u0026\u0026 phantomjs --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "FIREFOX_URL=\"https://s3.amazonaws.com/circle-downloads/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\"   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/firefox.deb $FIREFOX_URL   \u0026\u0026 echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  /tmp/firefox.deb' | sha256sum -c   \u0026\u0026 sudo dpkg -i /tmp/firefox.deb || sudo apt-get -f install    \u0026\u0026 sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3   \u0026\u0026 rm -rf /tmp/firefox.deb   \u0026\u0026 firefox --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error --location --fail --retry 3 --output /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb       \u0026\u0026 (sudo dpkg -i /tmp/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)        \u0026\u0026 rm -rf /tmp/google-chrome-stable_current_amd64.deb       \u0026\u0026 sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g'            \"/opt/google/chrome/google-chrome\"       \u0026\u0026 google-chrome --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE)       \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip\"       \u0026\u0026 cd /tmp       \u0026\u0026 unzip chromedriver_linux64.zip       \u0026\u0026 rm -rf chromedriver_linux64.zip       \u0026\u0026 sudo mv chromedriver /usr/local/bin/chromedriver       \u0026\u0026 sudo chmod +x /usr/local/bin/chromedriver       \u0026\u0026 chromedriver --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y libgconf-2-4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":99"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "printf '#!/bin/sh\\nXvfb :99 -screen 0 1280x1024x24 \u0026\\nexec \"$@\"\\n' \u003e /tmp/entrypoint   \u0026\u0026 chmod +x /tmp/entrypoint         \u0026\u0026 sudo mv /tmp/entrypoint /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "com.circleci.preserve-entrypoint",
              "Value": "true"
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}