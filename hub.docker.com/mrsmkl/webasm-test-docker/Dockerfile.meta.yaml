MetaArgs: null
Stages:
- BaseName: ubuntu:17.04
  Commands:
  - Maintainer: Sami Mäkelä
    Name: maintainer
  - CmdLine:
    - apt-get update &&   apt-get install -y wget ocaml opam libzarith-ocaml-dev m4
      pkg-config zlib1g-dev apache2 psmisc sudo &&   opam init -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl &&   curl -sL https://deb.nodesource.com/setup_8.x |
      bash - &&   apt-get install -y nodejs &&   npm install -g ethereumjs-testrpc
      &&   cd bin &&   wget https://github.com/ethereum/solidity/releases/download/v0.4.18/solc-static-linux
      &&   mv solc-static-linux solc &&   chmod 744 solc
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://dist.ipfs.io/go-ipfs/v0.4.11/go-ipfs_v0.4.11_linux-amd64.tar.gz
      &&   tar xf go-ipfs_v0.4.11_linux-amd64.tar.gz &&   cd go-ipfs &&   ./install.sh
      &&   ipfs init
    Name: run
    PrependShell: true
  - CmdLine:
    - eval `opam config env` &&    opam install cryptokit yojson -y
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O getparity.sh https://get.parity.io &&    bash getparity.sh -r stable
      &&    (parity --chain dev &) &&    sleep 10 &&    killall parity
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/mrsmkl/webasm-solidity &&   cd  webasm-solidity
      &&   git submodule init &&   git submodule update &&   cd ocaml-offchain/interpreter
      &&   eval `opam config env` &&   make &&   cd ../../node &&   npm install &&   cd
      .. &&   ./compile.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://gethstore.blob.core.windows.net/builds/geth-linux-amd64-1.7.2-1db4ecdc.tar.gz
      &&   tar xf geth-linux-amd64-1.7.2-1db4ecdc.tar.gz &&   cp geth-linux-amd64-1.7.2-1db4ecdc/geth
      /bin/geth
    Name: run
    PrependShell: true
  - CmdLine:
    - cd webasm-solidity &&   git pull &&   chmod 755 kovan.sh dev.sh rinkeby.sh &&   cd
      node &&   cp app.html /var/www/html/index.html &&   cp socketio.js /var/www/html/
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22448"
    - "4001"
    - "80"
  From:
    Image: ubuntu:17.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:17.04
