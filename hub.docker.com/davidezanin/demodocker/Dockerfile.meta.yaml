MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"davide.zanin@supsi.ch"'
    Name: label
  - Key: FEND_RELEASE
    Name: arg
    Value: 1.0.0
  - Key: SERVER_RELEASE
    Name: arg
    Value: 7.2.8
  - Key: A_DB_USER
    Name: arg
    Value: '''docker'''
  - Key: A_DB_PASS
    Name: arg
    Value: '''docker'''
  - Key: A_DB_NAME
    Name: arg
    Value: '''docker'''
  - Key: A_TZ
    Name: arg
    Value: '''Europe/Rome'''
  - Key: A_REPO_PATH
    Name: arg
    Value: '''https://github.com/dzanin'''
  - Key: A_FEND_NAME_REPO
    Name: arg
    Value: '''dockerdemoFE'''
  - Key: A_SERVER_NAME_REPO
    Name: arg
    Value: '''dockerdemo'''
  - Env:
    - Key: FEND_RELEASE_VERSION
      Value: ${FEND_RELEASE}
    Name: env
  - Env:
    - Key: SERVER_RELEASE_VERSION
      Value: ${SERVER_RELEASE}
    Name: env
  - Env:
    - Key: REPO_PATH
      Value: ${A_REPO_PATH}
    Name: env
  - Env:
    - Key: FEND_NAME_REPO
      Value: ${A_FEND_NAME_REPO}
    Name: env
  - Env:
    - Key: SERVER_NAME_REPO
      Value: ${A_SERVER_NAME_REPO}
    Name: env
  - Env:
    - Key: DB_USER
      Value: ${A_DB_USER}
    Name: env
  - Env:
    - Key: DB_PASS
      Value: ${A_DB_PASS}
    Name: env
  - Env:
    - Key: DB_NAME
      Value: ${A_DB_NAME}
    Name: env
  - Env:
    - Key: TZ
      Value: ${A_TZ}
    Name: env
  - CmdLine:
    - echo $TZ > /etc/timezone &&     apt-get update && apt-get install -y tzdata
      &&     rm /etc/localtime &&     ln -snf /usr/share/zoneinfo/$TZ /etc/localtime
      &&     dpkg-reconfigure -f noninteractive tzdata &&     apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update &&    apt-get -y install python3.7 &&    apt-get -y install
      python3-pip &&    DEBIAN_FRONTEND=noninteractive apt-get -y install postgresql
      postgresql-contrib &&    apt-get -y install wget &&    wget ${REPO_PATH}/${SERVER_NAME_REPO}/archive/${SERVER_RELEASE_VERSION}.tar.gz
      &&    mv ${SERVER_RELEASE_VERSION}.tar.gz server.tar.gz &&    wget ${REPO_PATH}/${FEND_NAME_REPO}/archive/${FEND_RELEASE_VERSION}.tar.gz
      &&    mv ${FEND_RELEASE_VERSION}.tar.gz html.tar.gz &&    tar xvzf server.tar.gz
      &&    tar xvzf html.tar.gz &&    mkdir -p /usr/src/swisstopo/server &&    mkdir
      -p /usr/src/swisstopo/html &&    mv ${SERVER_NAME_REPO}-${SERVER_RELEASE_VERSION}/*
      /usr/src/swisstopo/server/  &&    mv ${FEND_NAME_REPO}-${FEND_RELEASE_VERSION}/*
      /usr/src/swisstopo/html/ &&    apt-get -y install nginx &&    apt-get -y install
      nano
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/swisstopo/server
  - CmdLine:
    - "python3.7 -m pip install -r requirements.txt &&     set -eux; \t groupadd -r
      ${DB_USER} --gid=1001; \t useradd -r -g ${DB_USER} --uid=1001 --no-create-home
      ${DB_USER};"
    Name: run
    PrependShell: true
  - Name: user
    User: postgres
  - CmdLine:
    - /etc/init.d/postgresql start &&    psql --command "CREATE USER ${DB_USER} WITH
      PASSWORD '${DB_PASS}'; SET TIME ZONE '${TZ}';" &&    createdb -O ${DB_USER}
      ${DB_NAME} &&    psql -U postgres -d ${DB_NAME} -a -f config/table.sql
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /etc/postgresql
    - /var/log/postgresql
    - /var/lib/postgresql
  - Name: user
    User: root
  - CmdLine:
    - chmod +x config/my_wrapper_script.sh &&    rm /etc/nginx/sites-enabled/default
      &&    chown -R $USER:$USER /usr/src/swisstopo/html &&    mv config/example.com
      /etc/nginx/sites-available/ &&    mv config/proxy.conf /etc/nginx/proxy.conf
      &&    ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - ./config/my_wrapper_script.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
