{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jdk",
      "SourceCode": "FROM openjdk:8-jdk",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jdk"
      },
      "Commands": [
        {
          "Maintainer": "Timoteo Ponce \u003ctimo.slack@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SBT_VERSION",
              "Value": "0.13.11"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SBT_HOME",
              "Value": "/usr/local/sbt"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${JAVA_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${SBT_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "8.13.0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y curl git xvfb apt-transport-https   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL \"http://dl.bintray.com/sbt/native-packages/sbt/$SBT_VERSION/sbt-$SBT_VERSION.tgz\" | gunzip | tar -x -C /usr/local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh -c 'echo \"deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google.list'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y google-chrome-stable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd --gid 1000 node   \u0026\u0026 useradd --uid 1000 --gid node --shell /bin/bash --create-home node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -kSLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\"   \u0026\u0026 chmod -R a+rwx /usr/local/lib/   \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.xz\"   \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs \u0026\u0026 mkdir -p /usr/local/lib \u0026\u0026 mkdir -p /usr/local/node_modules   \u0026\u0026 chown -R node /usr/local/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "node"
        },
        {
          "CmdLine": [
            "npm install -g bower gulp polymer-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/share/ca-certificates/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "trust-certs/",
            "/usr/local/share/ca-certificates/"
          ]
        },
        {
          "CmdLine": [
            "ls -1 /usr/local/share/ca-certificates | while read cert; do   openssl x509 -outform der -in /usr/local/share/ca-certificates/$cert -out $cert.der;   $JAVA_HOME/bin/keytool -import -alias $cert -keystore $JAVA_HOME/jre/lib/security/cacerts -trustcacerts -file $cert.der -storepass changeit -noprompt;   rm $cert.der;   done"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}