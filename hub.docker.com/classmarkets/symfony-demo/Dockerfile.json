{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7-fpm-alpine",
      "SourceCode": "FROM php:7-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7-fpm-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "curl https://getcomposer.org/composer.phar \u003e /usr/local/bin/composer \u0026\u0026     chmod 0755 /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Env": [
            {
              "Key": "SYMFONY_ENV",
              "Value": "prod"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "composer.json",
            "/app/composer.json"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "composer.lock",
            "/app/composer.lock"
          ]
        },
        {
          "CmdLine": [
            "composer install --no-scripts --no-autoloader"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "app/config/nginx",
            "/etc/nginx/conf.d"
          ]
        },
        {
          "CmdLine": [
            "composer dump-autoload --optimize \u0026\u0026     composer run-script post-install-cmd \u0026\u0026     echo -e '\\ndoctrine: {dbal: {path: \"%kernel.root_dir%/data/blog.sqlite\" }}' \u003e\u003e app/config/config_prod.yml \u0026\u0026     rm -rf app/cache/* \u0026\u0026     chown -R www-data.www-data app/cache app/logs app/data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "www-data"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app/web",
            "/etc/nginx/conf.d"
          ]
        }
      ]
    }
  ]
}