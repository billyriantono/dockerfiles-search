{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "vgteam/alpine-docker-base",
      "SourceCode": "FROM vgteam/alpine-docker-base",
      "Platform": "",
      "From": {
        "Image": "vgteam/alpine-docker-base"
      },
      "Commands": [
        {
          "Maintainer": "Victors Gold Devops Team",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "APP_PATH",
              "Value": "/app"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEPLOY_KEY",
              "Value": "git-readonly.key"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${APP_PATH} \u0026\u0026     mkdir -p /root/.ssh \u0026\u0026     echo \"StrictHostKeyChecking=no\" \u003e\u003e /root/.ssh/config \u0026\u0026     echo \"Host bitbucket.org\" \u003e\u003e /root/.ssh/config \u0026\u0026     echo \"   HostName bitbucket.org\" \u003e\u003e /root/.ssh/config \u0026\u0026     echo \"   IdentityFile /root/.ssh/${DEPLOY_KEY}\" \u003e\u003e ~/.ssh/config \u0026\u0026     echo \"   User git\" \u003e\u003e /root/.ssh/config \u0026\u0026     echo \"   Port 22\" \u003e\u003e /root/.ssh/config \u0026\u0026     echo '@testing http://nl.alpinelinux.org/alpine/edge/testing' \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./${DEPLOY_KEY}",
            "/root/.ssh/"
          ]
        },
        {
          "CmdLine": [
            "apk --update add --no-cache          bash         git         curl         openssh         nginx \u0026\u0026     update-ca-certificates \u0026\u0026     chmod 0600 /root/.ssh/${DEPLOY_KEY} \u0026\u0026     rm -rf /usr/share/man /tmp/* /var/cache/apk/* \u0026\u0026     rm -f /etc/localtime \u0026\u0026     ln -s /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf.d/*.conf",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/"
          ]
        },
        {
          "CmdLine": [
            "sed -i \"s#__APP_PATH__#$APP_PATH#g\" /etc/nginx/conf.d/default.conf \u0026\u0026     sed -i \"s#__APP_PATH__#$APP_PATH#g\" /etc/nginx/nginx.conf \u0026\u0026     chown nginx: -R /var/lib/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$APP_PATH"
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "sh",
            "-c",
            "nginx -g 'daemon off;'"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}