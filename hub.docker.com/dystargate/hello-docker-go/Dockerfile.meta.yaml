MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.12
  Commands:
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - Name: workdir
    Path: /hello-docker-go
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - export PROJECT=$(head -n1 go.mod | awk '{ print $2 }') && go build --mod=vendor
      -ldflags "-s -w" -o /tmp/hello-docker-go
    Name: run
    PrependShell: true
  From:
    Image: golang:1.12
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.12 AS builder
- BaseName: alpine:3.7
  Commands:
  - CmdLine:
    - sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories
      && apk update && apk add --no-cache tzdata ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo 'Asia/Shanghai'
      >/etc/timezone
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /tmp/hello-docker-go
    - /hello-docker-go
  - Name: expose
    Ports:
    - "9090"
  - CmdLine:
    - /hello-docker-go
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
