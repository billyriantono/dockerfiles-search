{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Maintainer": "Lebedevsd \u003clebedevsd@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     add-apt-repository ppa:webupd8team/java -y \u0026\u0026     apt-get update \u0026\u0026     echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \u0026\u0026     apt-get install -y oracle-java8-installer \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get install build-essential -y \u0026\u0026     apt-get install -y libgtk2.0-dev \u0026\u0026     apt-get install -y libssl-dev \u0026\u0026     apt-get install -y xsltproc \u0026\u0026     apt-get install -y lib32ncurses5 \u0026\u0026     apt-get install -y lib32z1 \u0026\u0026     apt-get install -y libxml2-dev \u0026\u0026     apt-get install -y libcap-dev \u0026\u0026     apt-get install zip -y \u0026\u0026     apt-get install curl -y \u0026\u0026     apt-get install expect -y \u0026\u0026     apt-get install python -y \u0026\u0026     apt-get install scons -y \u0026\u0026     apt-get install libssl-dev -y \u0026\u0026     apt-get install git-core -y \u0026\u0026     apt-get install doxygen -y \u0026\u0026     apt-get install graphviz -y \u0026\u0026     apt-get install texlive -y \u0026\u0026     apt-get install ant -y \u0026\u0026     apt-get -y install --reinstall locales \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ~/repo \u0026\u0026     cd ~/repo \u0026\u0026     curl https://storage.googleapis.com/git-repo-downloads/repo \u003e ./repo \u0026\u0026     cp repo /usr/local/bin \u0026\u0026     chmod a+x /usr/local/bin/repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ~/uncrustify \u0026\u0026     cd ~/uncrustify \u0026\u0026     git clone http://github.com/bengardner/uncrustify.git \u0026\u0026     cd uncrustify \u0026\u0026     git checkout uncrustify-0.61 \u0026\u0026     ./configure \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ~/junit \u0026\u0026     cd ~/junit \u0026\u0026     curl -L http://search.maven.org/remotecontent?filepath=junit/junit/4.9/junit-4.9.jar \u003e junit-4.9.jar \u0026\u0026     cp junit-4.9.jar /usr/share/java/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CLASSPATH",
              "Value": "/usr/share/java/junit-4.9.jar"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "APP_USER",
          "Name": "arg",
          "Value": "dockerBuilder"
        },
        {
          "CmdLine": [
            "useradd --user-group --create-home --shell /bin/false ${APP_USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${APP_USER}"
        }
      ]
    }
  ]
}