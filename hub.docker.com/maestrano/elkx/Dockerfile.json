{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage",
      "SourceCode": "FROM phusion/baseimage",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage"
      },
      "Commands": [
        {
          "Maintainer": "Maestrano \u003cit@maestrano.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ELK_VERSION",
              "Value": "5.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_VERSION",
              "Value": "${ELK_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_VERSION",
              "Value": "${ELK_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XPACK_VERSION",
              "Value": "${ELK_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_CURATOR_VERSION",
              "Value": "5.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "set -x  \u0026\u0026 apt-get update -qq  \u0026\u0026 apt-get install -qqy --no-install-recommends ca-certificates curl  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 curl -L -o /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"  \u0026\u0026 curl -L -o /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"  \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"  \u0026\u0026 gpg --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4  \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu  \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc  \u0026\u0026 chmod +x /usr/local/bin/gosu  \u0026\u0026 gosu nobody true  \u0026\u0026 apt-get update -qq  \u0026\u0026 apt-get install -qqy openjdk-8-jdk python-pip  \u0026\u0026 apt-get clean  \u0026\u0026 set +x"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ES_VERSION",
              "Value": "${ELK_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_HOME",
              "Value": "/opt/elasticsearch"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_PACKAGE",
              "Value": "elasticsearch-${ES_VERSION}.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_GID",
              "Value": "991"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_UID",
              "Value": "991"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir ${ES_HOME}  \u0026\u0026 curl -O https://artifacts.elastic.co/downloads/elasticsearch/${ES_PACKAGE}  \u0026\u0026 tar xzf ${ES_PACKAGE} -C ${ES_HOME} --strip-components=1  \u0026\u0026 rm -f ${ES_PACKAGE}  \u0026\u0026 groupadd -r elasticsearch -g ${ES_GID}  \u0026\u0026 useradd -r -s /usr/sbin/nologin -M -c \"Elasticsearch service user\" -u ${ES_UID} -g elasticsearch elasticsearch  \u0026\u0026 mkdir -p /var/log/elasticsearch /etc/elasticsearch /etc/elasticsearch/scripts /var/lib/elasticsearch  \u0026\u0026 chown -R elasticsearch:elasticsearch ${ES_HOME} /var/log/elasticsearch /var/lib/elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elasticsearch/elasticsearch.init",
            "/etc/init.d/elasticsearch"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e 's#^ES_HOME=$#ES_HOME='$ES_HOME'#' /etc/init.d/elasticsearch  \u0026\u0026 chmod +x /etc/init.d/elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install elasticsearch-curator==${ES_CURATOR_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_HOME",
              "Value": "/opt/logstash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_PACKAGE",
              "Value": "logstash-${LOGSTASH_VERSION}.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_GID",
              "Value": "992"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_UID",
              "Value": "992"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir ${LOGSTASH_HOME}  \u0026\u0026 curl -O https://artifacts.elastic.co/downloads/logstash/${LOGSTASH_PACKAGE}  \u0026\u0026 tar xzf ${LOGSTASH_PACKAGE} -C ${LOGSTASH_HOME} --strip-components=1  \u0026\u0026 rm -f ${LOGSTASH_PACKAGE}  \u0026\u0026 groupadd -r logstash -g ${LOGSTASH_GID}  \u0026\u0026 useradd -r -s /usr/sbin/nologin -d ${LOGSTASH_HOME} -c \"Logstash service user\" -u ${LOGSTASH_UID} -g logstash logstash  \u0026\u0026 mkdir -p /var/log/logstash /etc/logstash/conf.d  \u0026\u0026 chown -R logstash:logstash ${LOGSTASH_HOME} /var/log/logstash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "logstash/logstash.init",
            "/etc/init.d/logstash"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e 's#^LS_HOME=$#LS_HOME='$LOGSTASH_HOME'#' /etc/init.d/logstash  \u0026\u0026 chmod +x /etc/init.d/logstash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KIBANA_HOME",
              "Value": "/opt/kibana"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_PACKAGE",
              "Value": "kibana-${KIBANA_VERSION}-linux-x86_64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_GID",
              "Value": "993"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_UID",
              "Value": "993"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir ${KIBANA_HOME}  \u0026\u0026 curl -O https://artifacts.elastic.co/downloads/kibana/${KIBANA_PACKAGE}  \u0026\u0026 tar xzf ${KIBANA_PACKAGE} -C ${KIBANA_HOME} --strip-components=1  \u0026\u0026 rm -f ${KIBANA_PACKAGE}  \u0026\u0026 groupadd -r kibana -g ${KIBANA_GID}  \u0026\u0026 useradd -r -s /usr/sbin/nologin -d ${KIBANA_HOME} -c \"Kibana service user\" -u ${KIBANA_UID} -g kibana kibana  \u0026\u0026 mkdir -p /var/log/kibana  \u0026\u0026 chown -R kibana:kibana ${KIBANA_HOME} /var/log/kibana"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "kibana/kibana.init",
            "/etc/init.d/kibana"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e 's#^KIBANA_HOME=$#KIBANA_HOME='$KIBANA_HOME'#' /etc/init.d/kibana  \u0026\u0026 chmod +x /etc/init.d/kibana"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XPACK_PACKAGE",
              "Value": "x-pack-${XPACK_VERSION}.zip"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "curl -O https://artifacts.elastic.co/downloads/packs/x-pack/${XPACK_PACKAGE}  \u0026\u0026 gosu elasticsearch ${ES_HOME}/bin/elasticsearch-plugin install       -Edefault.path.conf=/etc/elasticsearch       file:///tmp/${XPACK_PACKAGE} --batch  \u0026\u0026 gosu kibana ${KIBANA_HOME}/bin/kibana-plugin install       file:///tmp/${XPACK_PACKAGE}  \u0026\u0026 gosu logstash ${LOGSTASH_HOME}/bin/logstash-plugin install       file:///tmp/${XPACK_PACKAGE}  \u0026\u0026 rm -f ${XPACK_PACKAGE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elasticsearch/elasticsearch.yml",
            "/etc/elasticsearch/elasticsearch.yml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elasticsearch/log4j2.properties",
            "/etc/elasticsearch/log4j2.properties"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elasticsearch/jvm.options",
            "/etc/elasticsearch/jvm.options"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elasticsearch/elasticsearch.default",
            "/etc/default/elasticsearch"
          ]
        },
        {
          "CmdLine": [
            "chmod -R +r /etc/elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elasticsearch/curator.yml",
            "/etc/elasticsearch/curator.yml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elasticsearch/curator_action.yml",
            "/etc/elasticsearch/curator_action.yml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cron/es_curator.sh",
            "/etc/cron.daily/es_curator.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 775 /etc/cron.daily/es_curator.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/pki/tls/certs \u0026\u0026 mkdir /etc/pki/tls/private"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "logstash/certs/logstash-beats.crt",
            "/etc/pki/tls/certs/logstash-beats.crt"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "logstash/certs/logstash-beats.key",
            "/etc/pki/tls/private/logstash-beats.key"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "logstash/logstash.yml",
            "${LOGSTASH_HOME}/config/logstash.yml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "logstash/conf.d",
            "/etc/logstash/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "logstash/patterns",
            "${LOGSTASH_HOME}/patterns"
          ]
        },
        {
          "CmdLine": [
            "chown -R logstash:logstash ${LOGSTASH_HOME}/patterns"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R +r /etc/logstash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "kibana/kibana.yml",
            "${KIBANA_HOME}/config/kibana.yml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elasticsearch/elasticsearch.logrotate",
            "/etc/logrotate.d/elasticsearch"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "logstash/logstash.logrotate",
            "/etc/logrotate.d/logstash"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "kibana/kibana.logrotate",
            "/etc/logrotate.d/kibana"
          ]
        },
        {
          "CmdLine": [
            "chmod 644 /etc/logrotate.d/elasticsearch  \u0026\u0026 chmod 644 /etc/logrotate.d/logstash  \u0026\u0026 chmod 644 /etc/logrotate.d/kibana"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/local/bin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5044",
            "5601",
            "9200",
            "9300"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/elasticsearch"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "healthcheck.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Health": {
            "Test": [
              "CMD-SHELL",
              "bash /usr/local/bin/healthcheck.sh"
            ],
            "Timeout": 5000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}