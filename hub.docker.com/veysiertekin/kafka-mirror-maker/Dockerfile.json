{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:centos7",
      "SourceCode": "FROM centos:centos7",
      "Platform": "",
      "From": {
        "Image": "centos:centos7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/opt/java"
            },
            {
              "Key": "JAVA_VERSION_MAJOR",
              "Value": "\"11\""
            },
            {
              "Key": "JAVA_VERSION_MINOR",
              "Value": "\"28\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt   \u0026\u0026 curl --fail --silent --location --retry 3   https://download.java.net/openjdk/jdk${JAVA_VERSION_MAJOR}/ri/openjdk-${JAVA_VERSION_MAJOR}+${JAVA_VERSION_MINOR}_linux-x64_bin.tar.gz   | gunzip   | tar -x -C /opt   \u0026\u0026 ln -s /opt/jdk-${JAVA_VERSION_MAJOR} ${JAVA_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O http://kozyatagi.mirror.guzel.net.tr/apache/kafka/2.3.0/kafka_2.11-2.3.0.tgz \u0026\u0026 \ttar xzvf kafka_2.11-2.3.0.tgz \u0026\u0026 \tmv kafka_2.11-2.3.0 /etc/kafka"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install gettext"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${JAVA_HOME}/bin:${JAVA_HOME}/sbin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WHITELIST",
              "Value": "*"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DESTINATION",
              "Value": "\"localhost:6667\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOURCE",
              "Value": "\"localhost:6667\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GROUPID",
              "Value": "\"_mirror_maker\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NUM_STREAMS",
              "Value": "\"1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JMX_PORT",
              "Value": "\"9999\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KAFKA_HEAP_OPTS",
              "Value": "\"-XX:MaxRAMPercentage=70 -XshowSettings:vm -XX:+ExitOnOutOfMemoryError\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /etc/mirror-maker/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/mirror-maker/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./consumer.config",
            "/tmp/mirror-maker/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./producer.config",
            "/tmp/mirror-maker/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./run.sh",
            "/etc/mirror-maker/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/mirror-maker/run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/etc/mirror-maker/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}