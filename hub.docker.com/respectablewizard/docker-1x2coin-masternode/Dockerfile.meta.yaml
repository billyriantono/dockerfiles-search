MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: respectableWizard <respectableWizard@gmail.com>
    Name: maintainer
  - Key: USER_ID
    Name: arg
    Value: null
  - Key: GROUP_ID
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Env:
    - Key: USER
      Value: 1x2coin
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${USER}
    Name: env
  - Env:
    - Key: PORT
      Value: "9214"
    Name: env
  - Env:
    - Key: USER_ID
      Value: ${USER_ID:-1000}
    Name: env
  - Env:
    - Key: GROUP_ID
      Value: ${GROUP_ID:-1000}
    Name: env
  - CmdLine:
    - "groupadd -g ${GROUP_ID} ${USER} \t&& useradd -u ${USER_ID} -g ${USER} -s /bin/bash
      -m -d ${HOME} ${USER}"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.11"
    Name: env
  - CmdLine:
    - set -x     && apt-get update      && apt-get install -y --no-install-recommends
      ca-certificates wget software-properties-common curl jq     && wget -O /usr/local/bin/gosu
      "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)"     && wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc"     && export GNUPGHOME="$(mktemp -d)"     && gpg
      --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     &&
      gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     && rm -r
      "$GNUPGHOME" /usr/local/bin/gosu.asc     && chmod +x /usr/local/bin/gosu     &&
      apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     && gosu nobody
      true
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tools/get-node.sh
    - ./get-node.sh
  - CmdLine:
    - chmod +x ./get-node.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ./get-node.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - ${PORT}
  - Name: volume
    Volumes:
    - ${HOME}
  - Name: workdir
    Path: ${HOME}
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./bin
    - /usr/local/bin
  - CmdLine:
    - chmod 777 /usr/local/bin/start-unprivileged.sh     /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start-unprivileged.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
