{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Maintainer",
              "Value": "\"Daniel P. Clark \u003c6ftdan@gmail.com\u003e\""
            },
            {
              "Key": "Version",
              "Value": "\"1.1.2\""
            },
            {
              "Key": "Description",
              "Value": "\"Remote pair programming environment with Ruby, NodeJS, Yarn, Rust, VIM, RVM, neovim, tmux, SSH, and FishShell.\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUST_VERSION",
              "Value": "1.27.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBY_VERSION",
              "Value": "2.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VIM_VERSION",
              "Value": "v8.1.0005"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RACER_VERSION",
              "Value": "2.0.14"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"debconf debconf/frontend select Teletype\" | debconf-set-selections \u0026\u0026    apt-get update \u0026\u0026    apt-get install -y sudo openssh-client git build-essential         ctags man curl direnv software-properties-common libpq-dev        libncurses5-dev libgnome2-dev libgnomeui-dev wget pkg-config         libgtk2.0-dev libatk1.0-dev libbonoboui2-dev libssl-dev         libcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev         ruby-dev lua5.1 liblua5.1-0-dev libperl-dev nano tzdata         locales cmake ghc-mod \u0026\u0026    curl -sL https://deb.nodesource.com/setup_9.x | bash - ;    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - ;    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list ;    apt-get update \u0026\u0026    apt-get install -y nodejs yarn \u0026\u0026    apt-get clean -y \u0026\u0026    apt-get autoremove -y \u0026\u0026    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/vim/vim.git \u0026\u0026    cd vim \u0026\u0026    git checkout $VIM_VERSION \u0026\u0026    ./configure --with-features=huge                 --enable-multibyte                 --enable-rubyinterp=yes                 --enable-pythoninterp=yes                 --with-python-config-dir=/usr/lib/python2.7/config                 --enable-perlinterp=yes                 --enable-luainterp=yes                 --enable-gui=gtk2 --enable-cscope --prefix=/usr \u0026\u0026    make VIMRUNTIMEDIR=/usr/share/vim/vim81 \u0026\u0026    make install \u0026\u0026    cd .. \u0026\u0026    rm -rf vim \u0026\u0026    update-alternatives --install /usr/bin/editor editor /usr/bin/vim 1 \u0026\u0026    update-alternatives --set editor /usr/bin/vim \u0026\u0026    update-alternatives --install /usr/bin/vi vi /usr/bin/vim 1 \u0026\u0026    update-alternatives --set vi /usr/bin/vim \u0026\u0026    curl -sO https://static.rust-lang.org/dist/rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz \u0026\u0026    tar -xzf rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz \u0026\u0026    ./rust-$RUST_VERSION-x86_64-unknown-linux-gnu/install.sh --without=rust-docs \u0026\u0026    rm -rf rust-$RUST_VERSION-x86_64-unknown-linux-gnu rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz \u0026\u0026    mkdir /home/dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/phildawes/racer.git \u0026\u0026    cd racer \u0026\u0026    git checkout $RACER_VERSION \u0026\u0026    cargo build --release \u0026\u0026    mkdir /home/dev/bin \u0026\u0026    mv ./target/release/racer /home/dev/bin \u0026\u0026    cd .. \u0026\u0026    rm -rf racer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://raw.githubusercontent.com/danielpclark/ruby-pair/master/.vimrc \u003e /home/dev/.vimrc;    git clone https://github.com/VundleVim/Vundle.vim.git /home/dev/.vim/bundle/Vundle.vim;    HOME=/home/dev vim +PluginInstall +qall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/dev/.vim/bundle/YouCompleteMe \u0026\u0026    ./install.py --clang-completer                   --js-completer                      --rust-completer \u0026\u0026    cd /home/dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/dev/.vim/bundle/vimproc \u0026\u0026 make \u0026\u0026    cd /home/dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L --create-dirs -o /home/dev/.vim/bundle/dbext.vim/dbext_2500.zip http://www.vim.org/scripts/download_script.php\\?src_id=24935 \u0026\u0026    cd /home/dev/.vim/bundle/dbext.vim/ \u0026\u0026    unzip dbext_2500.zip \u0026\u0026    rm dbext_2500.zip \u0026\u0026    cd -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:neovim-ppa/unstable \u0026\u0026    apt-get update \u0026\u0026    apt-get install -y tmux neovim \u0026\u0026    git clone git://github.com/zolrath/wemux.git /usr/local/share/wemux \u0026\u0026    ln -s /usr/local/share/wemux/wemux /usr/local/bin/wemux \u0026\u0026    cp /usr/local/share/wemux/wemux.conf.example /usr/local/etc/wemux.conf \u0026\u0026    echo \"host_list=(dev)\" \u003e\u003e /usr/local/etc/wemux.conf \u0026\u0026    apt-get install -y fish \u0026\u0026    mkdir -p /home/dev/.config/fish \u0026\u0026    curl -L --create-dirs -o /home/dev/.config/fish/functions/fish_prompt.fish https://raw.githubusercontent.com/danielpclark/fish_prompt/master/fish_prompt.fish \u0026\u0026    echo \"set PATH /home/dev/bin:$PATH\" \u003e\u003e /home/dev/.config/fish/fish.config \u0026\u0026    apt-get install -y ack-grep \u0026\u0026    apt-get install -y openssh-server \u0026\u0026    mkdir -p /var/run/sshd \u0026\u0026    echo \"AllowAgentForwarding yes\" \u003e\u003e /etc/ssh/sshd_config \u0026\u0026    apt-get clean -y \u0026\u0026    apt-get autoremove -y \u0026\u0026    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US en_US.UTF-8 \u0026\u0026 dpkg-reconfigure locales \u0026\u0026    useradd dev -d /home/dev -m -s /usr/bin/fish \u0026\u0026    adduser dev sudo \u0026\u0026    mkdir -p /etc/container_environment \u0026\u0026    echo /home/dev \u003e /etc/container_environment/HOME \u0026\u0026    echo '%sudo ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers \u0026\u0026    chown -R dev.dev /home/dev \u0026\u0026    chown -R dev.dev /var/lib/gems"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "dev"
        },
        {
          "CmdLine": [
            "ln -s /home/dev/.vim /home/dev/.config/nvim ;    ln -s /home/dev/.vimrc /home/dev/.config/nvim/init.vim ;    sudo apt-get update \u0026\u0026    gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \u0026\u0026    curl -SL https://get.rvm.io | bash -s stable --ruby=$RUBY_VERSION \u0026\u0026    curl -L --create-dirs -o /home/dev/.config/fish/functions/rvm.fish https://raw.github.com/lunks/fish-nuggets/master/functions/rvm.fish \u0026\u0026    echo \"rvm default\" \u003e\u003e /home/dev/.config/fish/config.fish \u0026\u0026    sudo apt-get clean -y \u0026\u0026    sudo apt-get autoremove -y \u0026\u0026    sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O /home/dev/ngrok.zip https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip \u0026\u0026    unzip -d /home/dev/bin /home/dev/ngrok.zip \u0026\u0026    rm /home/dev/ngrok.zip \u0026\u0026    sudo curl -SL -o /etc/banner https://raw.githubusercontent.com/danielpclark/ruby-pair/master/banner \u0026\u0026    curl -SL -o /home/dev/bin/ssh_key_adder.rb https://raw.githubusercontent.com/danielpclark/ruby-pair/master/ssh_key_adder.rb \u0026\u0026    chmod +x /home/dev/bin/ssh_key_adder.rb \u0026\u0026    sudo rm -f /etc/service/sshd/down \u0026\u0026    echo '#!/bin/bash\\nsudo /usr/sbin/sshd\\nif [ -z \"$1\" ]; then\\n  exec /usr/bin/fish -l\\nelse \\n  /home/dev/bin/ngrok authtoken $1\\n  exec /home/dev/bin/ngrok tcp 22\\nfi' \u003e /home/dev/bin/boot.sh \u0026\u0026    chmod +x /home/dev/bin/boot.sh \u0026\u0026    sudo locale-gen \"en_US.UTF-8\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c \"source ~/.rvm/scripts/rvm;rvm use $RUBY_VERSION;gem install rake bundler github-auth git-duet seeing_is_believing --no-rdoc --no-ri\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "dev"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/dev"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "shell",
          "Shell": [
            "/usr/bin/fish",
            "-l",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "/home/dev/bin/ssh_key_adder.rb $AUTHORIZED_GH_USERS;    exec /home/dev/bin/boot.sh $NGROK"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}