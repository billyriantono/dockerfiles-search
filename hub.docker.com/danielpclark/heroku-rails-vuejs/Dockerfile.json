{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.10.0",
      "SourceCode": "FROM phusion/baseimage:0.10.0",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.10.0"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Maintainer",
              "Value": "\"Daniel P. Clark \u003c6ftdan@gmail.com\u003e\""
            },
            {
              "Key": "Version",
              "Value": "\"1.0\""
            },
            {
              "Key": "Description",
              "Value": "\"Ruby on Rails with VueJS.\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c",
            "-l"
          ]
        },
        {
          "Env": [
            {
              "Key": "WORKDIR_PATH",
              "Value": "/app/user"
            },
            {
              "Key": "RUBY_VERSION",
              "Value": "2.5.0"
            },
            {
              "Key": "RACK_ENV",
              "Value": "production"
            },
            {
              "Key": "RAILS_ENV",
              "Value": "production"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "RAILS_LOG_TO_STDOUT",
              "Value": "true"
            },
            {
              "Key": "RAILS_SERVE_STATIC_FILES",
              "Value": "true"
            },
            {
              "Key": "DATABASE_URL",
              "Value": "postgresql:does_not_exist"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$WORKDIR_PATH/bin:$PATH"
            },
            {
              "Key": "BUNDLE_APP_CONFIG",
              "Value": "/app/heroku/ruby/.bundle/config"
            },
            {
              "Key": "POST_RUN_SCRIPT_PATH",
              "Value": "/app/.post-run.d"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./init.sh",
            "/usr/bin/init.sh"
          ]
        },
        {
          "CmdLine": [
            "set -ex ;    mkdir -p $WORKDIR_PATH ;    echo \"debconf debconf/frontend select Teletype\" | debconf-set-selections ;    curl -sL https://deb.nodesource.com/setup_9.x | bash - ;    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - ;    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list ;    apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         tzdata nodejs yarn libpq-dev         ;     apt-get clean -y ;    apt-get autoremove -y ;    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ;    gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 ;    curl -sSL https://get.rvm.io | bash -s stable --ruby=$RUBY_VERSION ;    apt-get clean -y ;    apt-get autoremove -y ;    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* ;    echo \"source /usr/local/rvm/scripts/rvm\" \u003e\u003e $(getent passwd $(whoami) | cut -d: -f6)/.bashrc ;    source /usr/local/rvm/scripts/rvm ;    rvm default $RUBY_VERSION ;    rvm use $RUBY_VERSION ;    gem install bundler --no-ri --no-rdoc ;    bundle config github.https true ;    bundle config --global frozen 1 ;    chmod +x /usr/bin/init.sh ;    mkdir -p $POST_RUN_SCRIPT_PATH"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "$WORKDIR_PATH"
          ]
        },
        {
          "CmdLine": [
            "set -ex ;    if [ -f $WORKDIR_PATH/Gemfile ]; then bundle install --without development test --jobs 4; fi ;    if [ -f $WORKDIR_PATH/yarn.lock ]; then yarn install; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$WORKDIR_PATH"
        },
        {
          "CmdLine": [
            "echo \"Before your first Rails deploy:\" \u0026\u0026    echo \"Be sure to add 'webpack', 'babel-loader', and 'extract-text-webpack-plugin' with yarn.\" \u0026\u0026     echo \"Be sure to add 'RUN init.sh' in the container using this one.\" \u0026\u0026    echo \"Make sure you 'heroku stack:set container'.\" \u0026\u0026    echo \"And lastly you need to add any environment variables you want to use from Heroku\" \u0026\u0026    echo \"in your CMD.  For example CMD POSTGRES_URL=\\$POSTGRES_URLâ€¦\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}