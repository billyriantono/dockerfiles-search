MetaArgs: null
Stages:
- BaseName: centos:latest
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Federico Lelli"'
    Name: label
  - Env:
    - Key: JDK_VERSION
      Value: "11"
    Name: env
  - Env:
    - Key: GRADLE_VERSION
      Value: "5.1"
    Name: env
  - Env:
    - Key: HUGO_VERSION
      Value: "0.53"
    Name: env
  - Env:
    - Key: HELM_VERSION
      Value: 2.12.3
    Name: env
  - Env:
    - Key: DRAFT_VERSION
      Value: 0.16.0
    Name: env
  - Env:
    - Key: SKAFFOLD_VERSION
      Value: 0.22.0
    Name: env
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.11.11
    Name: env
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: com.mooltiverse.service.description
      Value: '"Operations tools used at Mooltiverse"'
    - Key: com.mooltiverse.service.product.name
      Value: '"ops-centos"'
    - Key: com.mooltiverse.service.product.version
      Value: '"${VERSION}"'
    - Key: com.mooltiverse.service.product.flavor
      Value: '"centos"'
    - Key: com.mooltiverse.service.product.url
      Value: '"https://github.com/mooltiverse/tools"'
    - Key: com.mooltiverse.service.product.vendor.name
      Value: '"Mooltiverse"'
    - Key: com.mooltiverse.service.product.vendor.url
      Value: '"https://www.mooltiverse.com/"'
    Name: label
  - Labels:
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.build-date
      Value: '"${BUILD_DATE}"'
    - Key: org.label-schema.name
      Value: '"ops-centos"'
    - Key: org.label-schema.description
      Value: '"Operations tools used at Mooltiverse"'
    - Key: org.label-schema.usage
      Value: '"https://github.com/mooltiverse/tools"'
    - Key: org.label-schema.url
      Value: '"https://github.com/mooltiverse/tools"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/mooltiverse/tools"'
    - Key: org.label-schema.vcs-ref
      Value: '"${VCS_REF}"'
    - Key: org.label-schema.vendor
      Value: '"Mooltiverse"'
    - Key: org.label-schema.version
      Value: '"${VERSION}"'
    - Key: org.label-schema.docker.cmd
      Value: '"docker run -v ~:/home/user -v /mnt/data:/mnt/data /bin/bash"'
    Name: label
  - CmdLine:
    - yum -y install             curl             device-mapper-persistent-data             gcc-c++             git             gnupg2             make             mc             sudo             wget             which             yum-utils             zip
      unzip &&     localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias
      en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - CmdLine:
    - useradd -c "Docker default user" -b /home/user -d /home/user -u 1000 -m -s /bin/bash
      user
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -aG wheel user
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "user ALL=(ALL:ALL) SETENV: NOPASSWD: ALL" >> /etc/sudoers.d/user'
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /etc/sudoers /etc/sudoers.orig &&     sed -i 's/^Defaults    always_set_home/#Defaults    always_set_home/g'
      /etc/sudoers &&     sed -i 's/^Defaults    env_reset/#Defaults    env_reset/g'
      /etc/sudoers &&     sed -i 's/^Defaults    secure_path/#Defaults    secure_path/g'
      /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/user/.config && chown user.user /home/user/.config
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install https://centos7.iuscommunity.org/ius-release.rpm &&     yum -y
      update &&     yum -y install python36u python36u-libs python36u-devel python36u-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install java-${JDK_VERSION}-openjdk
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/jre-${JDK_VERSION}-openjdk
    Name: env
  - CmdLine:
    - yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      &&     yum install -y docker-ce docker-ce-cli containerd.io &&     usermod -aG
      docker user
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname
      -s)-$(uname -m)" -o /usr/local/bin/docker-compose &&     chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "[google-cloud-sdk]" >> /etc/yum.repos.d/google-cloud-sdk.repo &&     echo
      "name=Google Cloud SDK" >> /etc/yum.repos.d/google-cloud-sdk.repo &&     echo
      "baseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64" >>
      /etc/yum.repos.d/google-cloud-sdk.repo &&     echo "enabled=1" >> /etc/yum.repos.d/google-cloud-sdk.repo
      &&     echo "gpgcheck=1" >> /etc/yum.repos.d/google-cloud-sdk.repo &&     echo
      "repo_gpgcheck=1" >> /etc/yum.repos.d/google-cloud-sdk.repo &&     echo "gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg"
      >> /etc/yum.repos.d/google-cloud-sdk.repo &&     echo "       https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
      >> /etc/yum.repos.d/google-cloud-sdk.repo &&     yum install -y google-cloud-sdk
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "[kubernetes]" >> /etc/yum.repos.d/kubernetes.repo &&     echo "name=Kubernetes"
      >> /etc/yum.repos.d/kubernetes.repo &&     echo "baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64"
      >> /etc/yum.repos.d/kubernetes.repo &&     echo "enabled=1" >> /etc/yum.repos.d/kubernetes.repo
      &&     echo "gpgcheck=1" >> /etc/yum.repos.d/kubernetes.repo &&     echo "repo_gpgcheck=1"
      >> /etc/yum.repos.d/kubernetes.repo &&     echo "gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg"
      >> /etc/yum.repos.d/kubernetes.repo &&     echo "       https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
      >> /etc/yum.repos.d/kubernetes.repo &&     yum install -y kubeadm kubectl kubelet
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/awscli &&     cd /opt/awscli && wget -q https://s3.amazonaws.com/aws-cli/awscli-bundle.zip
      &&     cd /opt/awscli && unzip awscli-bundle.zip &&     /opt/awscli/awscli-bundle/install
      -i /opt/awscli/current &&     ln -s /opt/awscli/current /opt/awscli/latest &&     rm
      -rf /opt/awscli/awscli-bundle.zip /opt/awscli/awscli-bundle &&     /opt/awscli/current/bin/aws
      --version
    Name: run
    PrependShell: true
  - Env:
    - Key: AWS_HOME
      Value: /opt/awscli/current
    Name: env
  - CmdLine:
    - rpm --import https://packages.microsoft.com/keys/microsoft.asc &&     sh -c
      'echo -e "[azure-cli]\nname=Azure CLI\nbaseurl=https://packages.microsoft.com/yumrepos/azure-cli\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc"
      > /etc/yum.repos.d/azure-cli.repo' &&     sudo yum install -y azure-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/gradle/ &&     cd /opt/gradle && wget -q https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip
      &&     cd /opt/gradle && unzip -q /opt/gradle/gradle-${GRADLE_VERSION}-bin.zip
      -d /opt/gradle/ &&     rm -f /opt/gradle/gradle-${GRADLE_VERSION}-bin.zip &&     ln
      -s /opt/gradle/gradle-${GRADLE_VERSION} /opt/gradle/current &&     ln -s /opt/gradle/gradle-${GRADLE_VERSION}
      /opt/gradle/latest
    Name: run
    PrependShell: true
  - Env:
    - Key: GRADLE_HOME
      Value: /opt/gradle/current
    Name: env
  - CmdLine:
    - mkdir -p /opt/hugo/hugo-${HUGO_VERSION} &&     cd /opt/hugo/hugo-${HUGO_VERSION}
      && wget -q https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_Linux-64bit.tar.gz
      &&     cd /opt/hugo/hugo-${HUGO_VERSION} && tar -xzf hugo_${HUGO_VERSION}_Linux-64bit.tar.gz
      &&     chmod ugo+x /opt/hugo/hugo-${HUGO_VERSION}/hugo &&     rm -f /opt/hugo/hugo-${HUGO_VERSION}/hugo_${HUGO_VERSION}_Linux-64bit.tar.gz
      &&     ln -s /opt/hugo/hugo-${HUGO_VERSION} /opt/hugo/current &&     ln -s /opt/hugo/hugo-${HUGO_VERSION}
      /opt/hugo/latest
    Name: run
    PrependShell: true
  - Env:
    - Key: HUGO_HOME
      Value: /opt/hugo/current
    Name: env
  - Name: expose
    Ports:
    - "1313"
  - CmdLine:
    - mkdir -p /opt/helm/helm-${HELM_VERSION} &&     cd /opt/helm/helm-${HELM_VERSION}
      && wget -q https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz
      &&     cd /opt/helm/helm-${HELM_VERSION} && tar -xzf helm-v${HELM_VERSION}-linux-amd64.tar.gz
      &&     rm -f /opt/helm/helm-${HELM_VERSION}/helm-v${HELM_VERSION}-linux-amd64.tar.gz
      &&     ln -s /opt/helm/helm-${HELM_VERSION} /opt/helm/current &&     ln -s /opt/helm/helm-${HELM_VERSION}
      /opt/helm/latest
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM_PATH
      Value: /opt/helm/current/linux-amd64
    Name: env
  - CmdLine:
    - mkdir -p /opt/draft/draft-${DRAFT_VERSION} &&     cd /opt/draft/draft-${DRAFT_VERSION}
      && wget -q https://azuredraft.blob.core.windows.net/draft/draft-v${DRAFT_VERSION}-linux-amd64.tar.gz
      &&     cd /opt/draft/draft-${DRAFT_VERSION} && tar -xzf draft-v${DRAFT_VERSION}-linux-amd64.tar.gz
      &&     rm -f /opt/draft/draft-${DRAFT_VERSION}/draft-v${DRAFT_VERSION}-linux-amd64.tar.gz
      &&     ln -s /opt/draft/draft-${DRAFT_VERSION} /opt/draft/current &&     ln
      -s /opt/draft/draft-${DRAFT_VERSION} /opt/draft/latest
    Name: run
    PrependShell: true
  - Env:
    - Key: DRAFT_PATH
      Value: /opt/draft/current/linux-amd64
    Name: env
  - CmdLine:
    - mkdir -p /opt/skaffold/skaffold-${SKAFFOLD_VERSION} &&     cd /opt/skaffold/skaffold-${SKAFFOLD_VERSION}
      && curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v${SKAFFOLD_VERSION}/skaffold-linux-amd64
      &&     cd /opt/skaffold/skaffold-${SKAFFOLD_VERSION} && chmod +x skaffold &&     ln
      -s /opt/skaffold/skaffold-${SKAFFOLD_VERSION} /opt/skaffold/current &&     ln
      -s /opt/skaffold/skaffold-${SKAFFOLD_VERSION} /opt/skaffold/latest
    Name: run
    PrependShell: true
  - Env:
    - Key: SKAFFOLD_PATH
      Value: /opt/skaffold/current
    Name: env
  - CmdLine:
    - mkdir -p /opt/terraform/terraform-${TERRAFORM_VERSION} &&     cd /opt/terraform
      && wget -q https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      &&     cd /opt/terraform && unzip -q /opt/terraform/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      -d /opt/terraform/terraform-${TERRAFORM_VERSION}/ &&     rm -f /opt/terraform/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      &&     ln -s /opt/terraform/terraform-${TERRAFORM_VERSION} /opt/terraform/current
      &&     ln -s /opt/terraform/terraform-${TERRAFORM_VERSION} /opt/terraform/latest
    Name: run
    PrependShell: true
  - Env:
    - Key: TERRAFORM_HOME
      Value: /opt/terraform/current
    Name: env
  - CmdLine:
    - curl --silent --location https://rpm.nodesource.com/setup_10.x | bash - &&     yum
      -y install nodejs
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:$JAVA_HOME/bin:$AWS_HOME/bin:$GRADLE_HOME/bin:$HUGO_HOME:$TERRAFORM_HOME:$HELM_PATH:$DRAFT_PATH:$SKAFFOLD_PATH
    Name: env
  - Name: volume
    Volumes:
    - /home/user
  - Name: volume
    Volumes:
    - /mnt/data
  - Name: workdir
    Path: /mnt/data
  - Name: user
    User: user
  - CmdLine:
    - 'exec /bin/bash -c "trap : TERM INT; sleep infinity & wait"'
    Name: cmd
    PrependShell: true
  From:
    Image: centos:latest
  Name: ""
  Platform: ""
  SourceCode: FROM centos:latest
