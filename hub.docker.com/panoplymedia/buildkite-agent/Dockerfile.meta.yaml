MetaArgs: null
Stages:
- BaseName: buildkite/agent:3
  Commands:
  - Maintainer: Jason Cox <jason.cox@panoply.fm>
    Name: maintainer
  - Chown: ""
    Name: add
    SourcesAndDest:
    - VERSION
    - .
  - CmdLine:
    - 'mkdir -p /usr/local/etc   && {     echo ''install: --no-document'';     echo
      ''update: --no-document'';   } >> /usr/local/etc/gemrc'
    Name: run
    PrependShell: true
  - Env:
    - Key: RUBY_VERSION
      Value: 2.3.3
    Name: env
  - Env:
    - Key: RUBYGEMS_VERSION
      Value: 2.6.10
    Name: env
  - CmdLine:
    - set -ex   && apk add --update --no-cache     autoconf     bash     bison     bzip2     bzip2-dev     ca-certificates     coreutils     curl     gcc     git     gdbm-dev     glib-dev     libc-dev     libffi-dev     libxml2-dev     libxslt-dev     linux-headers     make     ncurses-dev     postgresql-dev     procps     readline-dev     yaml-dev     zlib-dev     ruby     ruby-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/rbenv/shims:/usr/local/rbenv/bin:$PATH
    Name: env
  - Env:
    - Key: RBENV_ROOT
      Value: /usr/local/rbenv
    Name: env
  - Env:
    - Key: CONFIGURE_OPTS
      Value: '"ac_cv_func_isnan=yes ac_cv_func_isinf=yes --disable-install-doc"'
    Name: env
  - CmdLine:
    - git clone --depth 1 git://github.com/sstephenson/rbenv.git ${RBENV_ROOT} &&  git
      clone --depth 1 https://github.com/sstephenson/ruby-build.git ${RBENV_ROOT}/plugins/ruby-build
      &&  git clone --depth 1 git://github.com/jf/rbenv-gemset.git ${RBENV_ROOT}/plugins/rbenv-gemset
      && ${RBENV_ROOT}/plugins/ruby-build/install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'eval "$(rbenv init -)"' >> /etc/profile.d/rbenv.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - rbenv install $RUBY_VERSION &&   rbenv global $RUBY_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - bundle config build.nokogiri --use-system-libraries
    Name: run
    PrependShell: true
  - Env:
    - Key: GEM_HOME
      Value: /usr/local/bundle
    Name: env
  - Env:
    - Key: BUNDLE_PATH
      Value: '"$GEM_HOME"'
    - Key: BUNDLE_BIN
      Value: '"$GEM_HOME/bin"'
    - Key: BUNDLE_SILENCE_ROOT_WARNING
      Value: "1"
    - Key: BUNDLE_APP_CONFIG
      Value: '"$GEM_HOME"'
    Name: env
  - Env:
    - Key: PATH
      Value: $BUNDLE_BIN:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GEM_HOME" "$BUNDLE_BIN"   && chmod 777 "$GEM_HOME" "$BUNDLE_BIN"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && apk add --no-cache --virtual .build-deps     binutils-gold     curl     g++     gcc     gnupg     libgcc     linux-headers     make     python     libstdc++     ncurses     ca-certificates     openssl     coreutils     python2     grep     util-linux     binutils     findutils
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh
      | /bin/bash
    Name: run
    PrependShell: true
  - Env:
    - Key: NVM_DIR
      Value: /root/.nvm
    Name: env
  - CmdLine:
    - '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" &&   nvm install -s 9.11 &&
      nvm use 9.11'
    Name: run
    PrependShell: true
  - CmdLine:
    - '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" &&   npm install -g yarn'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source $NVM_DIR/nvm.sh" >> /etc/profile.d/nvm.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source $NVM_DIR/nvm.sh" >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.9.4
    Name: env
  - CmdLine:
    - "set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev
      \t\topenssl \t\tgo"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOROOT_BOOTSTRAP
      Value: /usr/lib/go
    - Key: GOOS
      Value: linux
    - Key: GOARCH
      Value: amd64
    - Key: GOHOSTOS
      Value: linux
    - Key: GOHOSTARCH
      Value: amd64
    - Key: GO386
      Value: "387"
    Name: env
  - Env:
    - Key: GOPATH
      Value: $HOME/go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - -c
    - bash < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - source /root/.gvm/scripts/gvm && gvm install go1.10 && gvm use go1.10
    Name: run
    PrependShell: false
  - CmdLine:
    - echo "source /root/.gvm/scripts/gvm" >> /etc/profile.d/gvm.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /root/.gvm/scripts/gvm" >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update && apk add --no-cache fontconfig &&   wget -qO- "https://github.com/dustinblackman/phantomized/releases/download/2.1.1a/dockerized-phantomjs.tar.gz"
      | tar xz -C / &&   [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" &&   npm
      config set user 0 &&   npm install -g phantomjs-prebuilt
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update -X http://dl-cdn.alpinelinux.org/alpine/edge/testing chromaprint-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache tini sudo chromaprint
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL "https://raw.githubusercontent.com/buildkite/docker-ssh-env-config/d06f20bdc7457a647bfe3724d94525f83c863091/ssh-env-config.sh"
      -o /usr/local/bin/ssh-env-config.sh     && chmod +x /usr/local/bin/ssh-env-config.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - init.sh
    - /usr/local/bin/init.sh
  - CmdLine:
    - chmod +x /usr/local/bin/init.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/tini
    - --
    - init.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: buildkite/agent:3
  Name: ""
  Platform: ""
  SourceCode: FROM buildkite/agent:3
