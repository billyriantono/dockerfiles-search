{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04.5",
      "SourceCode": "FROM ubuntu:14.04.5",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04.5"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKER_BUCKET",
              "Value": "\"download.docker.com\""
            },
            {
              "Key": "DOCKER_VERSION",
              "Value": "\"17.09.0-ce\""
            },
            {
              "Key": "DOCKER_CHANNEL",
              "Value": "\"stable\""
            },
            {
              "Key": "DOCKER_SHA256",
              "Value": "\"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647\""
            },
            {
              "Key": "DIND_COMMIT",
              "Value": "\"3b5fac462d21ca164b3778647420016315289034\""
            },
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "\"1.16.1\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends        wget=1.15-* python=2.7.5-* python2.7-dev=2.7.6-* fakeroot=1.20-* ca-certificates        tar=1.27.1-* gzip=1.6-* zip=3.0-* autoconf=2.69-* automake=1:1.14.1-*        bzip2=1.0.6-* file=1:5.14-* g++=4:4.8.2-* gcc=4:4.8.2-* imagemagick=8:6.7.7.10-*        libbz2-dev=1.0.6-* libc6-dev=2.19-* libcurl4-openssl-dev=7.35.0-* libdb-dev=1:5.3.21~*        libevent-dev=2.0.21-stable-* libffi-dev=3.1~rc1+r3.0.13-* libgeoip-dev=1.6.0-* libglib2.0-dev=2.40.2-*        libjpeg-dev=8c-* libkrb5-dev=1.12+dfsg-* liblzma-dev=5.1.1alpha+20120614-*        libmagickcore-dev=8:6.7.7.10-* libmagickwand-dev=8:6.7.7.10-* libmysqlclient-dev=5.5.59-*        libncurses5-dev=5.9+20140118-* libpng12-dev=1.2.50-* libpq-dev=9.3.22-* libreadline-dev=6.3-*        libsqlite3-dev=3.8.2-* libssl-dev=1.0.1f-* libtool=2.4.2-* libwebp-dev=0.4.0-*        libxml2-dev=2.9.1+dfsg1-* libxslt1-dev=1.1.28-* libyaml-dev=0.1.4-* make=3.81-*        patch=2.7.1-* xz-utils=5.1.1alpha+20120614-* zlib1g-dev=1:1.2.8.dfsg-* unzip=6.0-* curl=7.35.0-*        e2fsprogs=1.42.9-* iptables=1.4.21-* xfsprogs=3.1.9ubuntu2 xz-utils=5.1.1alpha+20120614-*     \u0026\u0026 apt-get install -y -qq less=458-* groff=1.22.2-*     \u0026\u0026 apt-get -qy build-dep git=1:1.9.1     \u0026\u0026 apt-get -qy install libcurl4-openssl-dev=7.35.0-* git-man=1:1.9.1-* liberror-perl=0.17-*     \u0026\u0026 mkdir -p /usr/src/git-openssl     \u0026\u0026 cd /usr/src/git-openssl     \u0026\u0026 apt-get source git=1:1.9.1     \u0026\u0026 cd $(find -mindepth 1 -maxdepth 1 -type d -name \"git-*\")     \u0026\u0026 sed -i -- 's/libcurl4-gnutls-dev/libcurl4-openssl-dev/' ./debian/control     \u0026\u0026 sed -i -- '/TEST\\s*=\\s*test/d' ./debian/rules     \u0026\u0026 dpkg-buildpackage -rfakeroot -b     \u0026\u0026 find .. -type f -name \"git_*ubuntu*.deb\" -exec dpkg -i \\{\\} \\;     \u0026\u0026 rm -rf /usr/src/git-openssl     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 curl -fSL \"https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz     \u0026\u0026 echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c -     \u0026\u0026 tar --extract --file docker.tgz --strip-components 1  --directory /usr/local/bin/     \u0026\u0026 rm docker.tgz     \u0026\u0026 docker -v     \u0026\u0026 addgroup dockremap     \u0026\u0026 useradd -g dockremap dockremap     \u0026\u0026 echo 'dockremap:165536:65536' \u003e\u003e /etc/subuid     \u0026\u0026 echo 'dockremap:165536:65536' \u003e\u003e /etc/subgid     \u0026\u0026 wget \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" -O /usr/local/bin/dind     \u0026\u0026 curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 \u003e /usr/local/bin/docker-compose     \u0026\u0026 chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose     \u0026\u0026 docker-compose version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget \"https://bootstrap.pypa.io/get-pip.py\" -O /tmp/get-pip.py     \u0026\u0026 python /tmp/get-pip.py     \u0026\u0026 pip install awscli     \u0026\u0026 rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dockerd-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "\"/usr/lib/jvm/java-8-openjdk-amd64\""
            },
            {
              "Key": "JDK_VERSION",
              "Value": "\"8u162-b12-1~14.04\""
            },
            {
              "Key": "JDK_HOME",
              "Value": "\"/usr/lib/jvm/java-8-openjdk-amd64\""
            },
            {
              "Key": "JRE_HOME",
              "Value": "\"/usr/lib/jvm/java-8-openjdk-amd64/jre\""
            },
            {
              "Key": "ANT_VERSION",
              "Value": "1.9.6"
            },
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.3.3"
            },
            {
              "Key": "MAVEN_HOME",
              "Value": "\"/usr/share/maven\""
            },
            {
              "Key": "MAVEN_CONFIG",
              "Value": "\"/root/.m2\""
            },
            {
              "Key": "GRADLE_VERSION",
              "Value": "4.6"
            },
            {
              "Key": "PROPERTIES_COMMON_VERSIION",
              "Value": "0.92.37.8"
            },
            {
              "Key": "PYTHON_TOOL_VERSION",
              "Value": "\"3.3-*\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y software-properties-common=$PROPERTIES_COMMON_VERSIION     \u0026\u0026 add-apt-repository ppa:openjdk-r/ppa     \u0026\u0026 apt-get update     \u0026\u0026 apt-get -y install python-setuptools=$PYTHON_TOOL_VERSION     \u0026\u0026 apt-get -y install openjdk-$JAVA_VERSION-jdk=$JDK_VERSION     \u0026\u0026 apt-get clean     \u0026\u0026 update-ca-certificates -f     \u0026\u0026 mkdir -p /usr/src/ant     \u0026\u0026 wget \"http://archive.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz\" -O /usr/src/ant/apache-ant-$ANT_VERSION-bin.tar.gz     \u0026\u0026 tar -xzf /usr/src/ant/apache-ant-$ANT_VERSION-bin.tar.gz -C /usr/local     \u0026\u0026 ln -s /usr/local/apache-ant-$ANT_VERSION/bin/ant /usr/bin/ant     \u0026\u0026 rm -rf /usr/src/ant     \u0026\u0026 mkdir -p /usr/share/maven /usr/share/maven/ref $MAVEN_CONFIG     \u0026\u0026 curl -fsSL \"https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\"         | tar -xzC /usr/share/maven --strip-components=1     \u0026\u0026 ln -s /usr/share/maven/bin/mvn /usr/bin/mvn     \u0026\u0026 mkdir -p /usr/src/gradle     \u0026\u0026 wget \"https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip\" -O /usr/src/gradle/gradle-$GRADLE_VERSION-bin.zip     \u0026\u0026 unzip /usr/src/gradle/gradle-$GRADLE_VERSION-bin.zip -d /usr/local     \u0026\u0026 ln -s /usr/local/gradle-$GRADLE_VERSION/bin/gradle /usr/bin/gradle     \u0026\u0026 rm -rf /usr/src/gradle     \u0026\u0026 rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "m2-settings.xml",
            "$MAVEN_CONFIG/settings.xml"
          ]
        },
        {
          "CmdLine": [
            "dockerd-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}