{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-apache",
      "SourceCode": "FROM php:7.2-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends libxml++2.6-dev     zlib1g-dev libicu-dev g++ libssl-dev git     \u0026\u0026 pecl install apcu-5.1.5 \u0026\u0026            docker-php-ext-enable apcu \u0026\u0026            docker-php-ext-install                intl                mbstring                pdo_mysql                zip                bcmath                opcache     \u0026\u0026 docker-php-ext-install -j \"$(nproc)\" mbstring pdo tokenizer xml zip     \u0026\u0026 a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS 'https://getcomposer.org/installer' | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mongodb     \u0026\u0026 echo \"extension=mongodb.so\" \u003e /usr/local/etc/php/conf.d/ext-mongodb.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "4.4.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source $NVM_DIR/nvm.sh     \u0026\u0026 nvm install $NODE_VERSION     \u0026\u0026 nvm alias default $NODE_VERSION     \u0026\u0026 nvm use default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/v$NODE_VERSION/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./src",
            "/var/www/html"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./conf",
            "/etc/apache2/sites-enabled/"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/a2ensite default-ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/sbin/a2enmod ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "composer install \u0026\u0026 npm install --unsafe-perm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "chown www-data:www-data -R /var/www/html/storage     \u0026\u0026 chown www-data:www-data -R /var/www/html/bootstrap     \u0026\u0026 php artisan migrate --force \u0026\u0026 apache2-foreground"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}