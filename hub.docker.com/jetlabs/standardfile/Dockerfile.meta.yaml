MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Maintainer: Hans J Schroeder <hs@cloudno.de> (@cloudno_de)
    Name: maintainer
  - Env:
    - Key: STANDARDFILE_VERSION
      Value: 0.3.2
    Name: env
  - Env:
    - Key: DOCKER_BASE_VERSION
      Value: 0.0.4
    Name: env
  - CmdLine:
    - addgroup stdfile &&     adduser -S -G stdfile stdfile
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache ca-certificates gnupg openssl libcap jq &&     gpg --recv-keys
      91A6E7F85D05C65630BEF18951852D87348FFC4C &&     mkdir -p /tmp/build &&     cd
      /tmp/build &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip
      &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS
      &&     wget https://releases.hashicorp.com/docker-base/${DOCKER_BASE_VERSION}/docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig
      &&     gpg --batch --verify docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS.sig
      docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS &&     grep ${DOCKER_BASE_VERSION}_linux_amd64.zip
      docker-base_${DOCKER_BASE_VERSION}_SHA256SUMS | sha256sum -c &&     unzip docker-base_${DOCKER_BASE_VERSION}_linux_amd64.zip
      &&     cp bin/gosu bin/dumb-init /bin &&     gpg --recv-keys f907e8bdeef20735b8b50c139eab9fc5e745bc63
      &&     wget https://github.com/dvbportal/standardfile/releases/download/${STANDARDFILE_VERSION}/standardfile-${STANDARDFILE_VERSION}-linux-amd64.zip
      &&     wget https://github.com/dvbportal/standardfile/releases/download/${STANDARDFILE_VERSION}/standardfile-${STANDARDFILE_VERSION}-linux-amd64.zip.sig
      &&     gpg --batch --verify standardfile-${STANDARDFILE_VERSION}-linux-amd64.zip.sig
      standardfile-${STANDARDFILE_VERSION}-linux-amd64.zip &&     unzip -d /bin standardfile-${STANDARDFILE_VERSION}-linux-amd64.zip
      &&     cd /tmp &&     rm -rf /tmp/build &&     apk del gnupg openssl &&     rm
      -rf /root/.gnupg
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /stdfile/logs &&     mkdir -p /stdfile/db &&     chown -R stdfile:stdfile
      /stdfile
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /stdfile/logs
  - Name: volume
    Volumes:
    - /stdfile/db
  - Name: expose
    Ports:
    - "8888"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /stdfile/logs
  - CmdLine:
    - standardfile
    - '''-db /stdfile/db/sf.db'''
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
