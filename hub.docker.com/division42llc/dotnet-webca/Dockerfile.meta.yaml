MetaArgs: null
Stages:
- BaseName: microsoft/aspnetcore-build:1.1
  Commands:
  - Labels:
    - Key: Comment
      Value: '"Standard microsoft/aspnetcore:latest image with a custom CA web application
        hosted on port 80."'
    - Key: Author
      Value: '"Division42 LLC"'
    - Key: ImageRepo
      Value: '"https://github.com/Division42LLC/division42llc-dotnet-webca"'
    Name: label
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /src/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - app-name.txt
    - /app/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - app-version.txt
    - /app/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sample-cert.pfx
    - /var/localCA/CA/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sample-cert.pfx
    - /var/localCA/leaf/
  - CmdLine:
    - "cd /src && \techo \"[*] Building App: dotnet RESTORE starting...\" && \tdotnet
      restore && \techo \"[*] Building App: dotnet RESTORE completed.\" && \techo
      \"[*] Building App: dotnet BUILD starting...\" && \tcd ./Division42LLC.WebCA.UIWeb
      && \tdotnet build ./Division42LLC.WebCA.UIWeb.csproj  && \techo \"[*] Building
      App: dotnet BUILD completed.\" && \techo \"[*] Building App: dotnet PUBLISH
      starting...\" && \tdotnet publish ./Division42LLC.WebCA.UIWeb.csproj -c Release
      -o /app && \techo \"[*] Building App: dotnet PUBLISH completed.\" && \tcd /app
      && \techo \"[*] Configuring app [IMAGE_NAME]...\" && \texport IMAGE_NAME=`cat
      /src/app-name.txt` && \techo \"export IMAGE_NAME=$IMAGE_NAME\" >> /etc/profile
      && \techo \"[*] Configuring app [IMAGE_VERSION]...\" && \texport IMAGE_VERSION=`cat
      /src/app-version.txt` && \techo \"export IMAGE_VERSION=$IMAGE_VERSION\" >> /etc/profile
      && \techo \"export IMAGE_BUILT=\\\"`date`\\\"\" >> /etc/profile && \techo \"[*]
      Purging source code...\" && \trm -rf /src && \techo \"[*] Updating Aptitude...\"
      && \tapt-get update && \techo \"[*] Installing packages: nano figlet\" && \tapt-get
      install nano figlet -y && \tDISK_SPACE_BEFORE=`df -hm | grep \"/$\" | xargs
      | cut -d \" \" -f3` && \techo \"[*] Clearing Aptitude cache...\" && \tapt-get
      clean -y && \tapt-get purge -y && \trm -rf /var/lib/apt/lists/* && \techo \"[*]
      Wiping system log files to reduce image size.\" && \tcat /dev/null > /var/log/alternatives.log
      && \tcat /dev/null > /var/log/apt/history.log && \tcat /dev/null > /var/log/apt/term.log
      && \tcat /dev/null > /var/log/bootstrap.log && \tcat /dev/null > /var/log/btmp
      && \tcat /dev/null > /var/log/dmesg && \tcat /dev/null > /var/log/dpkg.log &&
      \tcat /dev/null > /var/log/faillog && \tcat /dev/null > /var/log/lastlog &&
      \tcat /dev/null > /var/log/wtmp && \tDISK_SPACE_AFTER=`df -hm | grep \"/$\"
      | xargs | cut -d \" \" -f3` && \techo \"[*] Build run commands finished. [$(($DISK_SPACE_BEFORE
      - DISK_SPACE_AFTER))mb recovered]\" && \techo \"[*] Setting permissions on /var/localCA\"
      && \tmkdir -p /var/localCA/ && \tchmod -R 777 /var/localCA"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Name: expose
    Ports:
    - "8080"
  - Name: volume
    Volumes:
    - /var/localCA
  - Name: user
    User: "1001"
  - CmdLine:
    - /bin/bash
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - dotnet
    - Division42LLC.WebCA.UIWeb.dll
    Name: cmd
    PrependShell: false
  From:
    Image: microsoft/aspnetcore-build:1.1
  Name: ""
  Platform: ""
  SourceCode: FROM microsoft/aspnetcore-build:1.1
