{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "Feng Honglin \u003chfeng@tutum.co\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/haproxy-src"
          ]
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk --no-cache add tini haproxy py-pip build-base python-dev ca-certificates \u0026\u0026     cp /haproxy-src/reload.sh /reload.sh \u0026\u0026     cd /haproxy-src \u0026\u0026     pip install -r requirements.txt \u0026\u0026     pip install . \u0026\u0026     apk del build-base python-dev \u0026\u0026     rm -rf \"/tmp/*\" \"/root/.cache\" `find / -regex '.*\\.py[co]'`"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RSYSLOG_DESTINATION",
              "Value": "127.0.0.1"
            },
            {
              "Key": "MODE",
              "Value": "http"
            },
            {
              "Key": "BALANCE",
              "Value": "roundrobin"
            },
            {
              "Key": "MAXCONN",
              "Value": "4096"
            },
            {
              "Key": "OPTION",
              "Value": "\"redispatch, httplog, dontlognull, forwardfor\""
            },
            {
              "Key": "TIMEOUT",
              "Value": "\"connect 5000, client 50000, server 50000\""
            },
            {
              "Key": "STATS_PORT",
              "Value": "1936"
            },
            {
              "Key": "STATS_AUTH",
              "Value": "\"stats:stats\""
            },
            {
              "Key": "SSL_BIND_OPTIONS",
              "Value": "no-sslv3"
            },
            {
              "Key": "SSL_BIND_CIPHERS",
              "Value": "\"ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:AES128-GCM-SHA256:AES128-SHA256:AES128-SHA:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA:DHE-DSS-AES128-SHA:DES-CBC3-SHA\""
            },
            {
              "Key": "HEALTH_CHECK",
              "Value": "\"check inter 2000 rise 2 fall 3\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "1936",
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "dockercloud-haproxy"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}