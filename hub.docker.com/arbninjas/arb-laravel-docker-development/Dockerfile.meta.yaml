MetaArgs: null
Stages:
- BaseName: phusion/baseimage:latest
  Commands:
  - Maintainer: Melchor O. Abcede Jr <melchor.abcede@loannotify.com>
    Name: maintainer
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_CTYPE
      Value: UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - apt-get install -y software-properties-common &&     add-apt-repository -y ppa:ondrej/php
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install freetds-common freetds-bin unixodbc php7.1-sybase
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y php7.1 mcrypt php7.1-mcrypt php-mbstring
      php-pear php7.1-dev php7.1-xml         git         curl         vim         nano     &&
      apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s http://getcomposer.org/installer | php &&     echo "export PATH=${PATH}:/var/www/vendor/bin"
      >> ~/.bashrc &&     mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - . ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install screen
    Name: run
    PrependShell: true
  - Key: NODE_VERSION
    Name: arg
    Value: stable
  - Env:
    - Key: NODE_VERSION
      Value: ${NODE_VERSION}
    Name: env
  - Key: INSTALL_NODE
    Name: arg
    Value: "true"
  - Env:
    - Key: INSTALL_NODE
      Value: ${INSTALL_NODE}
    Name: env
  - Env:
    - Key: NVM_DIR
      Value: /home/laradock/.nvm
    Name: env
  - CmdLine:
    - if [ ${INSTALL_NODE} = true ]; then     curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.6/install.sh
      | bash &&         . $NVM_DIR/nvm.sh &&         nvm install ${NODE_VERSION} &&         nvm
      use ${NODE_VERSION} &&         nvm alias ${NODE_VERSION} &&         npm install
      -g gulp bower vue-cli ;fi
    Name: run
    PrependShell: true
  - CmdLine:
    - 'if [ ${INSTALL_NODE} = true ]; then     echo "" >> ~/.bashrc &&     echo ''export
      NVM_DIR="$HOME/.nvm"'' >> ~/.bashrc &&     echo ''[ -s "$NVM_DIR/nvm.sh" ] &&
      . "$NVM_DIR/nvm.sh"  # This loads nvm'' >> ~/.bashrc ;fi'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - 'if [ ${INSTALL_NODE} = true ]; then     echo "" >> ~/.bashrc &&     echo ''export
      NVM_DIR="/home/laradock/.nvm"'' >> ~/.bashrc &&     echo ''[ -s "$NVM_DIR/nvm.sh"
      ] && . "$NVM_DIR/nvm.sh"  # This loads nvm'' >> ~/.bashrc ;fi'
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'mysql-server mysql-server/root_password password root' | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'mysql-server mysql-server/root_password_again password root' | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install mysql-server --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ie "s/^bind-address\s*=\s*127\.0\.0\.1$/bind-address = 0.0.0.0/" /etc/mysql/my.cnf
    Name: run
    PrependShell: true
  - Env:
    - Key: APP_PASS
      Value: '"root"'
    Name: env
  - Env:
    - Key: ROOT_PASS
      Value: '"root"'
    Name: env
  - Env:
    - Key: APP_DB_PASS
      Value: '"root"'
    Name: env
  - CmdLine:
    - echo "phpmyadmin phpmyadmin/dbconfig-install boolean true" | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "phpmyadmin phpmyadmin/app-password-confirm password $APP_PASS" | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "phpmyadmin phpmyadmin/mysql/admin-pass password $ROOT_PASS" | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "phpmyadmin phpmyadmin/mysql/app-pass password $APP_DB_PASS" | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2" | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y phpmyadmin
    Name: run
    PrependShell: true
  - CmdLine:
    - service apache2 start
    Name: run
    PrependShell: true
  - Env:
    - Key: ACCEPT_EULA
      Value: "Y"
    Name: env
  - CmdLine:
    - curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list | tee /etc/apt/sources.list.d/msprod.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y msodbcsql mssql-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y unixodbc-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bash_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'source ~/.bashrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - pear config-set php_ini `php --ini | grep "Loaded Configuration" | sed -e "s|.*:\s*||"`
      system
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install sqlsrv
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install pdo_sqlsrv
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install sqlsrv-4.1.7preview
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install pdo_sqlsrv-4.1.7preview
    Name: run
    PrependShell: true
  - CmdLine:
    - service apache2 restart
    Name: run
    PrependShell: true
  - Env:
    - Key: APPPORT
      Value: "3000"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - laravel.conf
    - /etc/apache2/sites-available/laravel.conf
  - CmdLine:
    - sed -i.bak "s/Listen 80/Listen 80\n\nListen $APPPORT\n/" /etc/apache2/ports.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - a2ensite 000-default &&     a2ensite laravel.conf &&     a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'mkdir /var/www/application'
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - Name: expose
    Ports:
    - "80"
  From:
    Image: phusion/baseimage:latest
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:latest
