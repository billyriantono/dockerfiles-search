{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Windows docker emacs client \u003c623482199@qq.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"0.0.1\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm -rf /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./badproxy",
            "/etc/apt/apt.conf.d/99fixbadproxy"
          ]
        },
        {
          "CmdLine": [
            "apt-get clean     \u0026\u0026 apt-get update -y     \u0026\u0026 apt-get install emacs git python3-pip hunspell wget curl evince net-tools     ttf-wqy-zenhei ttf-wqy-microhei fonts-arphic-ukai fonts-arphic-uming -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install virtualenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install flake8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"yes\" | apt-get install ttf-mscorefonts-installer -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"70\" | echo \"6\" | apt-get install texlive-full -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "hunspell-dict.tar.gz",
            "/usr/share/hunspell"
          ]
        },
        {
          "CmdLine": [
            "wget https://github.com/jgm/pandoc/releases/download/2.7.3/pandoc-2.7.3-1-amd64.deb     \u0026\u0026 dpkg -i pandoc-2.7.3-1-amd64.deb \u0026\u0026 rm -f pandoc-2.7.3-1-amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "emacs",
            "--display"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}