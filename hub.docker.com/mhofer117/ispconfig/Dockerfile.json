{
  "MetaArgs": [
    {
      "Key": "BASEIMAGE",
      "DefaultValue": "phusion/baseimage:0.11",
      "ProvidedValue": null,
      "Value": "phusion/baseimage:0.11"
    }
  ],
  "Stages": [
    {
      "Name": "buildstage1",
      "BaseName": "${BASEIMAGE}",
      "SourceCode": "FROM ${BASEIMAGE} as buildstage1",
      "Platform": "",
      "As": "buildstage1",
      "From": {
        "Image": "${BASEIMAGE}"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Marcel Hofer \u003cm.hofer117@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"0.4\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "install_clean screenfetch moreutils wget curl traceroute iputils-ping dnsutils sudo rsync nano vim-nox expect     \u0026\u0026 echo \"export TERM=xterm\" \u003e\u003e /root/.bashrc     \u0026\u0026 echo \":set mouse=\" \u003e /root/.vimrc     \u0026\u0026 echo \"syntax on\" \u003e\u003e /root/.vimrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update     \u0026\u0026 apt-get -y upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"dash  dash/sh boolean no\" | debconf-set-selections     \u0026\u0026 dpkg-reconfigure dash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'mysql-server mysql-server/root_password password pass' | debconf-set-selections     \u0026\u0026 echo 'mysql-server mysql-server/root_password_again password pass' | debconf-set-selections     \u0026\u0026 echo 'mariadb-server mariadb-server/root_password password pass' | debconf-set-selections     \u0026\u0026 echo 'mariadb-server mariadb-server/root_password_again password pass' | debconf-set-selections     \u0026\u0026 install_clean mariadb-client mariadb-server openssl rkhunter binutils sudo     \u0026\u0026 sed -i '/^bind-address/s/^/#/g' /etc/mysql/mariadb.conf.d/50-server.cnf     \u0026\u0026 sed -i \"s/^password =.*$/password = pass/g\" /etc/mysql/debian.cnf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean postfix postfix-mysql postfix-doc getmail4 dovecot-imapd dovecot-pop3d dovecot-mysql dovecot-sieve     dovecot-lmtpd     \u0026\u0026 mv /etc/postfix/master.cf /etc/postfix/master.cf.original"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean amavisd-new spamassassin clamav clamav-daemon unzip bzip2 arj nomarch lzop cabextract     apt-listchanges libnet-ldap-perl libauthen-sasl-perl clamav-docs daemon libio-string-perl libio-socket-ssl-perl     libnet-ident-perl zip libnet-dns-perl postgrey patch     \u0026\u0026 cd /tmp     \u0026\u0026 wget https://git.ispconfig.org/ispconfig/ispconfig3/raw/stable-3.1/helper_scripts/ubuntu-amavisd-new-2.11.patch     \u0026\u0026 cd /usr/sbin     \u0026\u0026 cp -pf amavisd-new amavisd-new_bak     \u0026\u0026 patch \u003c /tmp/ubuntu-amavisd-new-2.11.patch     \u0026\u0026 rm -f /tmp/ubuntu-amavisd-*     \u0026\u0026 freshclam"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'phpmyadmin phpmyadmin/dbconfig-install boolean true' | debconf-set-selections     \u0026\u0026 echo 'phpmyadmin phpmyadmin/mysql/admin-pass password pass' | debconf-set-selections     \u0026\u0026 echo 'phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2' | debconf-set-selections     \u0026\u0026 service mysql start     \u0026\u0026 add-apt-repository -y ppa:ondrej/php     \u0026\u0026 install_clean apache2 apache2-doc apache2-utils libapache2-mod-php7.2 php7.2 php7.2-common php7.2-gd php7.2-mysql     php7.2-imap phpmyadmin php7.2-cli php7.2-cgi libapache2-mod-fcgid apache2-suexec-pristine mcrypt     imagemagick libruby libapache2-mod-python php7.2-curl php7.2-intl php7.2-pspell php7.2-recode php7.2-sqlite3     php7.2-tidy php7.2-xmlrpc php7.2-xsl memcached php7.2-memcache php7.2-imagick php7.2-gettext php7.2-zip php7.2-mbstring     php7.2-soap     \u0026\u0026 a2enmod suexec rewrite ssl actions include cgi proxy proxy_http     \u0026\u0026 a2enmod dav_fs dav auth_digest headers     \u0026\u0026 sed -i '/^#application\\/x-ruby/s/^#//g' /etc/mime.types     \u0026\u0026 cd /usr/share     \u0026\u0026 rm -rf phpmyadmin     \u0026\u0026 wget https://files.phpmyadmin.net/phpMyAdmin/4.8.5/phpMyAdmin-4.8.5-all-languages.zip     \u0026\u0026 unzip phpMyAdmin-4.8.5-all-languages.zip     \u0026\u0026 rm -f phpMyAdmin-4.8.5-all-languages.zip     \u0026\u0026 mv phpMyAdmin-4.8.5-all-languages phpmyadmin     \u0026\u0026 cd /usr/share/phpmyadmin/     \u0026\u0026 mkdir -p tmp     \u0026\u0026 chown www-data:www-data tmp     \u0026\u0026 sed -i \"s/^define('CONFIG_DIR', '');$/define('CONFIG_DIR', '\\/etc\\/phpmyadmin\\/');/g\" libraries/vendor_config.php     \u0026\u0026 echo -e \"\u003c?php\\n\\$cfg['AuthLog']=\\\"php\\\";\\n\" \u003e /etc/phpmyadmin/conf.d/authlog.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean php7.2-opcache php7.2-apcu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean php7.2-fpm     \u0026\u0026 a2enmod actions proxy_fcgi alias"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean hhvm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean certbot"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'mailman mailman/default_server_language en' | debconf-set-selections     \u0026\u0026 install_clean mailman     \u0026\u0026 mv /etc/aliases /etc/aliases.original     \u0026\u0026 ln -s /etc/mailman/apache.conf /etc/apache2/conf-available/mailman.conf     \u0026\u0026 a2enconf mailman"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "pureftpdbuild",
      "BaseName": "${BASEIMAGE}",
      "SourceCode": "FROM ${BASEIMAGE} as pureftpdbuild",
      "Platform": "",
      "As": "pureftpdbuild",
      "From": {
        "Image": "${BASEIMAGE}"
      },
      "Commands": [
        {
          "CmdLine": [
            "install_clean dpkg-dev debhelper openbsd-inetd debian-keyring     \u0026\u0026 apt-get update     \u0026\u0026 apt-get -y -qq build-dep pure-ftpd     \u0026\u0026 mkdir /tmp/pure-ftpd-mysql/     \u0026\u0026 cd /tmp/pure-ftpd-mysql/     \u0026\u0026 chown -R _apt /tmp/pure-ftpd-mysql     \u0026\u0026 apt-get -qq source pure-ftpd     \u0026\u0026 cd /tmp/pure-ftpd-mysql/pure-ftpd*     \u0026\u0026 sed -i '/^optflags=/ s/$/ --without-capabilities/g' ./debian/rules     \u0026\u0026 dpkg-buildpackage -b -uc \u003e /tmp/pureftpd-build-stdout.txt 2\u003e /tmp/pureftpd-build-stderr.txt     \u0026\u0026 mv /tmp/pure-ftpd-mysql/pure-ftpd-common_*.deb /tmp/pure-ftpd-mysql/pure-ftpd-mysql_*.deb /srv/     \u0026\u0026 cd /tmp/     \u0026\u0026 rm -rf /tmp/pure-ftpd-mysql/     \u0026\u0026 /bd_build/cleanup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "buildstage2",
      "BaseName": "buildstage1",
      "SourceCode": "FROM buildstage1 as buildstage2",
      "Platform": "",
      "As": "buildstage2",
      "From": {
        "Stage": {
          "Named": "buildstage1",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Chown": "",
          "From": "pureftpdbuild",
          "Name": "copy",
          "SourcesAndDest": [
            "/srv/pure-ftpd-*.deb",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "install_clean /tmp/pure-ftpd-common_*.deb /tmp/pure-ftpd-mysql_*.deb     \u0026\u0026 apt-mark hold pure-ftpd-common pure-ftpd-mysql     \u0026\u0026 rm -rf /tmp/pure-ftpd-*     \u0026\u0026 install_clean quota quotatool     \u0026\u0026 groupadd ftpgroup     \u0026\u0026 useradd -g ftpgroup -d /dev/null -s /etc ftpuser     \u0026\u0026 echo \"30000 30009\" \u003e /etc/pure-ftpd/conf/PassivePortRange     \u0026\u0026 sed -i \"s/^STANDALONE_OR_INETD=.*$/STANDALONE_OR_INETD=standalone/g\" /etc/default/pure-ftpd-common     \u0026\u0026 sed -i \"s/^VIRTUALCHROOT=.*$/VIRTUALCHROOT=true/g\" /etc/default/pure-ftpd-common     \u0026\u0026 echo 0 \u003e /etc/pure-ftpd/conf/TLS     \u0026\u0026 /bd_build/cleanup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean bind9 dnsutils haveged"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean vlogger webalizer awstats geoip-database libclass-dbi-mysql-perl     \u0026\u0026 sed -i 's/^\\([^#].*\\)/#\\1/g' /etc/cron.d/awstats"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "jailkitbuild",
      "BaseName": "${BASEIMAGE}",
      "SourceCode": "FROM ${BASEIMAGE} as jailkitbuild",
      "Platform": "",
      "As": "jailkitbuild",
      "From": {
        "Image": "${BASEIMAGE}"
      },
      "Commands": [
        {
          "CmdLine": [
            "install_clean build-essential autoconf automake libtool flex bison debhelper binutils wget python     \u0026\u0026 cd /tmp     \u0026\u0026 wget http://olivier.sessink.nl/jailkit/jailkit-2.20.tar.gz     \u0026\u0026 tar xvfz jailkit-*.tar.gz     \u0026\u0026 cd jailkit-*     \u0026\u0026 echo 5 \u003e debian/compat     \u0026\u0026 ./debian/rules binary     \u0026\u0026 cd /tmp     \u0026\u0026 mv /tmp/jailkit_*.deb /srv/     \u0026\u0026 /bd_build/cleanup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "buildstage3",
      "BaseName": "buildstage2",
      "SourceCode": "FROM buildstage2 as buildstage3",
      "Platform": "",
      "As": "buildstage3",
      "From": {
        "Stage": {
          "Named": "buildstage2",
          "Index": 2
        }
      },
      "Commands": [
        {
          "Chown": "",
          "From": "jailkitbuild",
          "Name": "copy",
          "SourcesAndDest": [
            "/srv/jailkit_*.deb",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "install_clean /tmp/jailkit_*.deb     \u0026\u0026 /bd_build/cleanup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "service mysql start     \u0026\u0026 install_clean roundcube roundcube-core roundcube-mysql roundcube-plugins javascript-common     libjs-jquery-mousewheel php-net-sieve tinymce     \u0026\u0026 a2enconf roundcube     \u0026\u0026 sed -i '/^\u003cDirectory \\/var\\/lib\\/roundcube\\/\u003e$/a \\ \\ AddType application\\/x-httpd-php .php'     /etc/apache2/conf-available/roundcube.conf     \u0026\u0026 sed -i '/^\u003cDirectory \\/var\\/lib\\/roundcube\\/\u003e$/i Alias \\/webmail \\/var\\/lib\\/roundcube'     /etc/apache2/conf-available/roundcube.conf     \u0026\u0026 sed -i \"s/^\\$config\\['default_host'\\] =.*$/\\$config\\['default_host'\\] = 'localhost';/g\"     /etc/roundcube/config.inc.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root     \u0026\u0026 wget -O ispconfig.tar.gz     https://git.ispconfig.org/ispconfig/ispconfig3/repository/archive.tar.gz?ref=stable-3.1     \u0026\u0026 tar xfz ispconfig.tar.gz     \u0026\u0026 cd ispconfig3*/install/     \u0026\u0026 sed -i \"s/is_dir('\\/usr\\/local\\/ispconfig')/is_dir('\\/usr\\/local\\/ispconfig\\/interface')/g\" install.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean php5.6 php5.6-cli php5.6-cgi php5.6-fpm     php5.6-bz2     php5.6-cgi     php5.6-cli     php5.6-common     php5.6-curl     php5.6-fpm     php5.6-gd     php5.6-imap     php5.6-intl     php5.6-json     php5.6-mbstring     php5.6-mcrypt     php5.6-mysql     php5.6-opcache     php5.6-pspell     php5.6-readline     php5.6-recode     php5.6-soap     php5.6-sqlite3     php5.6-tidy     php5.6-xml     php5.6-xmlrpc     php5.6-xsl     php5.6-zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean php7.0 php7.0-cli php7.0-cgi php7.0-fpm     php7.0-bz2     php7.0-cgi     php7.0-cli     php7.0-common     php7.0-curl     php7.0-fpm     php7.0-gd     php7.0-imap     php7.0-intl     php7.0-json     php7.0-mbstring     php7.0-mcrypt     php7.0-mysql     php7.0-opcache     php7.0-pspell     php7.0-readline     php7.0-recode     php7.0-soap     php7.0-sqlite3     php7.0-tidy     php7.0-xml     php7.0-xmlrpc     php7.0-xsl     php7.0-zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean php7.1 php7.1-cli php7.1-cgi php7.1-fpm     php7.1-bz2     php7.1-cgi     php7.1-cli     php7.1-common     php7.1-curl     php7.1-fpm     php7.1-gd     php7.1-imap     php7.1-intl     php7.1-json     php7.1-mbstring     php7.1-mcrypt     php7.1-mysql     php7.1-opcache     php7.1-pspell     php7.1-readline     php7.1-recode     php7.1-soap     php7.1-sqlite3     php7.1-tidy     php7.1-xml     php7.1-xmlrpc     php7.1-xsl     php7.1-zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean php7.2 php7.2-cli php7.2-cgi php7.2-fpm     php7.2-bz2     php7.2-cgi     php7.2-cli     php7.2-common     php7.2-curl     php7.2-fpm     php7.2-gd     php7.2-imap     php7.2-intl     php7.2-json     php7.2-mbstring     php7.2-mysql     php7.2-opcache     php7.2-pspell     php7.2-readline     php7.2-recode     php7.2-soap     php7.2-sqlite3     php7.2-tidy     php7.2-xml     php7.2-xmlrpc     php7.2-xsl     php7.2-zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --set php /usr/bin/php7.2     \u0026\u0026 update-alternatives --set php-cgi /usr/bin/php-cgi7.2     \u0026\u0026 update-alternatives --set php-cgi-bin /usr/lib/cgi-bin/php7.2     \u0026\u0026 rm -f /etc/php/*/fpm/pool.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 wget https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz     \u0026\u0026 tar -xzf ioncube_loaders_lin_x86-64.tar.gz -C /usr/local     \u0026\u0026 rm -f /tmp/ioncube*     \u0026\u0026 echo \"zend_extension=/usr/local/ioncube/ioncube_loader_lin_5.6.so\" \u003e /etc/php/5.6/mods-available/ioncube.ini     \u0026\u0026 ln -s /etc/php/5.6/mods-available/ioncube.ini /etc/php/5.6/cgi/conf.d/10-ioncube.ini     \u0026\u0026 ln -s /etc/php/5.6/mods-available/ioncube.ini /etc/php/5.6/cli/conf.d/10-ioncube.ini     \u0026\u0026 ln -s /etc/php/5.6/mods-available/ioncube.ini /etc/php/5.6/fpm/conf.d/10-ioncube.ini     \u0026\u0026 echo \"zend_extension=/usr/local/ioncube/ioncube_loader_lin_7.0.so\" \u003e /etc/php/7.0/mods-available/ioncube.ini     \u0026\u0026 ln -s /etc/php/7.0/mods-available/ioncube.ini /etc/php/7.0/cgi/conf.d/10-ioncube.ini     \u0026\u0026 ln -s /etc/php/7.0/mods-available/ioncube.ini /etc/php/7.0/cli/conf.d/10-ioncube.ini     \u0026\u0026 ln -s /etc/php/7.0/mods-available/ioncube.ini /etc/php/7.0/fpm/conf.d/10-ioncube.ini     \u0026\u0026 echo \"zend_extension=/usr/local/ioncube/ioncube_loader_lin_7.1.so\" \u003e /etc/php/7.1/mods-available/ioncube.ini     \u0026\u0026 ln -s /etc/php/7.1/mods-available/ioncube.ini /etc/php/7.1/cgi/conf.d/10-ioncube.ini     \u0026\u0026 ln -s /etc/php/7.1/mods-available/ioncube.ini /etc/php/7.1/cli/conf.d/10-ioncube.ini     \u0026\u0026 ln -s /etc/php/7.1/mods-available/ioncube.ini /etc/php/7.1/fpm/conf.d/10-ioncube.ini     \u0026\u0026 echo \"zend_extension=/usr/local/ioncube/ioncube_loader_lin_7.2.so\" \u003e /etc/php/7.2/mods-available/ioncube.ini     \u0026\u0026 ln -s /etc/php/7.2/mods-available/ioncube.ini /etc/php/7.2/cgi/conf.d/10-ioncube.ini     \u0026\u0026 ln -s /etc/php/7.2/mods-available/ioncube.ini /etc/php/7.2/cli/conf.d/10-ioncube.ini     \u0026\u0026 ln -s /etc/php/7.2/mods-available/ioncube.ini /etc/php/7.2/fpm/conf.d/10-ioncube.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean iptables libgd-graph-perl libio-socket-ssl-perl libcrypt-ssleay-perl libnet-libidn-perl     libio-socket-inet6-perl libsocket6-perl libwww-perl     \u0026\u0026 cd /usr/src     \u0026\u0026 rm -fv csf.tgz     \u0026\u0026 wget https://download.configserver.com/csf.tgz     \u0026\u0026 tar -xzf csf.tgz     \u0026\u0026 cd csf     \u0026\u0026 sh install.sh     \u0026\u0026 cd /usr/src     \u0026\u0026 rm -rf csf*     \u0026\u0026 sed -i \"s/^UI = \\\"0\\\"$/UI = \\\"1\\\"/g\" /etc/csf/csf.conf     \u0026\u0026 sed -i \"s/^TESTING = \\\"1\\\"$/TESTING = \\\"0\\\"/g\" /etc/csf/csf.conf     \u0026\u0026 sed -i \"s/^UI_PORT = \\\"6666\\\"$/UI_PORT = \\\"7443\\\"/g\" /etc/csf/csf.conf     \u0026\u0026 sed -i \"/^\\(TCP_IN\\|TCP6_IN\\) = \\\".*\\\"$/ {s/\\\"\\(.*\\)\\\"/\\\"1:65535\\\"/}\" /etc/csf/csf.conf     \u0026\u0026 sed -i \"/^\\(UDP_IN\\|UDP6_IN\\) = \\\".*\\\"$/ {s/\\\"\\(.*\\)\\\"/\\\"1:65535\\\"/}\" /etc/csf/csf.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/     \u0026\u0026 wget https://www.rfxn.com/downloads/maldetect-current.tar.gz     \u0026\u0026 tar xfz maldetect-current.tar.gz     \u0026\u0026 rm -f maldetect-current.tar.gz     \u0026\u0026 cd maldetect-*     \u0026\u0026 chmod +x install.sh     \u0026\u0026 ./install.sh     \u0026\u0026 cd /     \u0026\u0026 rm -rf /tmp/maldetect-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install_clean incron     \u0026\u0026 echo 'root' \u003e\u003e /etc/incron.allow     \u0026\u0026 mkdir -p /etc/incron.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update     \u0026\u0026 apt-get -y upgrade     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 /bd_build/cleanup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "freshclam || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "a2enconf httpoxy     \u0026\u0026 newaliases     \u0026\u0026 chmod 500 /etc/my_init.d/*.sh     \u0026\u0026 chmod 500 /etc/service/*/run     \u0026\u0026 chmod 500 /scripts/*.sh /scripts/**/*.sh     \u0026\u0026 chmod 500 /etc/cron.hourly/*.sh     \u0026\u0026 chmod 500 /etc/cron.daily/*.sh     \u0026\u0026 chmod 755 /usr/bin/systemctl /usr/sbin/service /entrypoint.sh     \u0026\u0026 touch /uninitialized"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /root/.rnd     \u0026\u0026 rmdir /var/backups     \u0026\u0026 mkdir -p /var/backup/sql     \u0026\u0026 mkdir -p /var/backup/.etc     \u0026\u0026 mkdir -p /var/log/ispconfig/httpd     \u0026\u0026 mkdir -p /var/www/html     \u0026\u0026 mkdir -p /var/run/clamav     \u0026\u0026 mkdir -p /var/run/mailman     \u0026\u0026 mkdir -p /run/named     \u0026\u0026 chown clamav:clamav /var/run/clamav     \u0026\u0026 chown list:list /var/run/mailman"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KILL_PROCESS_TIMEOUT",
              "Value": "10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KILL_ALL_PROCESSES_TIMEOUT",
              "Value": "30"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "20/tcp",
            "21/tcp",
            "22/tcp",
            "30000",
            "30001",
            "30002",
            "30003",
            "30004",
            "30005",
            "30006",
            "30007",
            "30008",
            "30009",
            "3306",
            "443/tcp",
            "53/tcp",
            "53/udp",
            "80/tcp",
            "8080/tcp",
            "953/tcp"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/mysql/",
            "/var/lib/mailman",
            "/var/vmail",
            "/var/www/",
            "/usr/local/ispconfig/",
            "/var/backup/"
          ]
        },
        {
          "CmdLine": [
            "/sbin/my_init",
            "--",
            "/entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}