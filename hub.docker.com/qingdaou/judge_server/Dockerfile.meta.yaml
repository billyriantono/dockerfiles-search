MetaArgs: null
Stages:
- BaseName: registry.docker-cn.com/library/ubuntu:16.04
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - build/java_policy
    - /etc
  - CmdLine:
    - buildDeps='software-properties-common git libtool cmake python-dev python3-pip
      python-pip libseccomp-dev' &&     apt-get update && apt-get install -y python
      python3.5 python-pkg-resources python3-pkg-resources gcc g++ $buildDeps &&     add-apt-repository
      ppa:openjdk-r/ppa && apt-get update && apt-get install -y openjdk-8-jdk &&     pip3
      install --no-cache-dir psutil gunicorn flask requests &&     cd /tmp && git
      clone -b newnew  --depth 1 https://github.com/QingdaoU/Judger && cd Judger &&     mkdir
      build && cd build && cmake .. && make && make install && cd ../bindings/Python
      && python3 setup.py install &&     apt-get purge -y --auto-remove $buildDeps
      &&     apt-get clean && rm -rf /var/lib/apt/lists/* &&     mkdir -p /code &&     useradd
      -u 12001 compiler && useradd -u 12002 code && useradd -u 12003 spj && usermod
      -a -G code spj
    Name: run
    PrependShell: true
  - Health:
      Interval: 5000000000
      Retries: 3
      Test:
      - CMD-SHELL
      - python3 /code/service.py
    Name: healthcheck
  - Chown: ""
    Name: add
    SourcesAndDest:
    - server
    - /code
  - Name: workdir
    Path: /code
  - CmdLine:
    - gcc -shared -fPIC -o unbuffer.so unbuffer.c
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /code/entrypoint.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: registry.docker-cn.com/library/ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM registry.docker-cn.com/library/ubuntu:16.04
