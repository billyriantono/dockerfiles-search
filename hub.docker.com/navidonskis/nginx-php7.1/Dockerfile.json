{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Donatas Navidonskis \u003cdonatas@navidonskis.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEN",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg-divert --local --rename --add /sbin/initctl \u0026\u0026 \tln -sf /bin/true /sbin/initctl \u0026\u0026 \tmkdir /var/run/sshd \u0026\u0026 \tmkdir /run/php \u0026\u0026 \tapt-get update \u0026\u0026 \tapt-get install -y --no-install-recommends apt-utils \t\tsoftware-properties-common \t\tpython-software-properties \t\tlanguage-pack-en-base \u0026\u0026 \tLC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php \u0026\u0026 \tapt-get update \u0026\u0026 apt-get upgrade -y \u0026\u0026 \tapt-get install -y python-setuptools \t\tcurl \t\tgit \t\tnano \t\tsudo \t\tunzip \t\topenssh-server \t\topenssl \t\tsupervisor \t\tnginx \t\tmemcached \t\tssmtp \t\tcron \u0026\u0026 \tapt-get install -y php7.1-fpm \t\tphp7.1-mysql \t    php7.1-curl \t    php7.1-gd \t    php7.1-intl \t    php7.1-mcrypt \t    php-memcache \t    php7.1-sqlite \t    php7.1-tidy \t    php7.1-xmlrpc \t    php7.1-pgsql \t    php7.1-ldap \t    freetds-common \t    php7.1-pgsql \t    php7.1-sqlite3 \t    php7.1-json \t    php7.1-xml \t    php7.1-mbstring \t    php7.1-soap \t    php7.1-zip \t    php7.1-cli \t    php7.1-sybase \t    php7.1-odbc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get remove --purge -y software-properties-common \tpython-software-properties \u0026\u0026 \tapt-get autoremove -y \u0026\u0026 \tapt-get clean \u0026\u0026 \tapt-get autoclean \u0026\u0026 \tcurl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e\"s/worker_processes  1/worker_processes 5/\" /etc/nginx/nginx.conf \u0026\u0026 \tsed -i -e\"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf \u0026\u0026 \tsed -i -e\"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 128m;\\n\\tproxy_buffer_size 256k;\\n\\tproxy_buffers 4 512k;\\n\\tproxy_busy_buffers_size 512k/\" /etc/nginx/nginx.conf \u0026\u0026 \techo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf \u0026\u0026 \tsed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php/7.1/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php/7.1/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php/7.1/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.1/fpm/php-fpm.conf \u0026\u0026 \tsed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/7.1/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.max_children = 5/pm.max_children = 9/g\" /etc/php/7.1/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.start_servers = 2/pm.start_servers = 3/g\" /etc/php/7.1/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" /etc/php/7.1/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" /etc/php/7.1/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" /etc/php/7.1/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"/pid\\s*=\\s*\\/run/c\\pid = /run/php7.1-fpm.pid\" /etc/php/7.1/fpm/php-fpm.conf \u0026\u0026 \tsed -i -e \"s/;listen.mode = 0660/listen.mode = 0750/g\" /etc/php/7.1/fpm/pool.d/www.conf \u0026\u0026 \tphpenmod mcrypt \u0026\u0026 \trm -Rf /etc/nginx/conf.d/* \u0026\u0026 \trm -Rf /etc/nginx/sites-available/default \u0026\u0026 \tmkdir -p /etc/nginx/ssl/ \u0026\u0026 \tmkdir -p /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/nginx/nginx.conf",
            "/etc/nginx/sites-available/default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/supervisor/supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/cmd.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./www/",
            "/var/www"
          ]
        },
        {
          "CmdLine": [
            "rm -f /etc/nginx/sites-enabled/default \u0026\u0026 \tln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default \u0026\u0026 \tchmod 755 /cmd.sh \u0026\u0026 \tchown -Rf www-data.www-data /var/www \u0026\u0026 \ttouch /var/log/cron.log \u0026\u0026 \ttouch /etc/cron.d/crontasks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/cmd.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}