{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04.5",
      "SourceCode": "FROM ubuntu:14.04.5",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04.5"
      },
      "Commands": [
        {
          "Maintainer": "Donatas Navidonskis \u003cdonatas@navidonskis.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_LOCALE",
              "Value": "en_US"
            },
            {
              "Key": "NGINX_VERSION",
              "Value": "stable"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg-divert --local --rename --add /sbin/initctl \u0026\u0026 \tln -sf /bin/true /sbin/initctl \u0026\u0026 \tlocale-gen ${DEFAULT_LOCALE}.UTF-8 \u0026\u0026 \texport LANG=${DEFAULT_LOCALE}.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \tapt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C \u0026\u0026 \tapt-get install -y software-properties-common \u0026\u0026 \tNGINX=stable \u0026\u0026 \tadd-apt-repository ppa:nginx/${NGINX_VERSION} \u0026\u0026 \tadd-apt-repository ppa:ondrej/php \u0026\u0026 \tapt-get update \u0026\u0026 \tapt-get upgrade -y \u0026\u0026 \tBUILD_PACKAGES=\"supervisor nginx php5.6-fpm git php5.6-mysql php5.6-zip php5.6-json php-apc php5.6-curl php5.6-gd php5.6-intl php5.6-mcrypt php5.6-mbstring php5.6-memcache php5.6-memcached php5.6-sqlite php5.6-tidy php5.6-xmlrpc php5.6-xsl php5.6-pgsql php5.6-mongo php5.6-ldap pwgen php5.6-cli curl memcached ssmtp\" \u0026\u0026 \tapt-get -y install $BUILD_PACKAGES \u0026\u0026 \tapt-get remove --purge -y software-properties-common \u0026\u0026 \tapt-get autoremove -y \u0026\u0026 \tapt-get clean \u0026\u0026 \tapt-get autoclean \u0026\u0026 \techo -n \u003e /var/lib/apt/extended_states \u0026\u0026 \trm -rf /var/lib/apt/lists/* \u0026\u0026 \trm -rf /usr/share/man/?? \u0026\u0026 \trm -rf /usr/share/man/??_* \u0026\u0026 \tcurl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026 \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e\"s/worker_processes  1/worker_processes 5/\" /etc/nginx/nginx.conf \u0026\u0026 \tsed -i -e\"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf \u0026\u0026 \tsed -i -e\"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 128m;\\n\\tproxy_buffer_size 256k;\\n\\tproxy_buffers 4 512k;\\n\\tproxy_busy_buffers_size 512k/\" /etc/nginx/nginx.conf \u0026\u0026 \techo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php/5.6/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php/5.6/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/;always_populate_raw_post_data\\s*=\\s*-1/always_populate_raw_post_data = -1/g\" /etc/php/5.6/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php/5.6/fpm/php.ini \u0026\u0026 \tsed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/5.6/fpm/php-fpm.conf \u0026\u0026 \tsed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/5.6/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.max_children = 5/pm.max_children = 9/g\" /etc/php/5.6/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.start_servers = 2/pm.start_servers = 3/g\" /etc/php/5.6/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" /etc/php/5.6/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" /etc/php/5.6/fpm/pool.d/www.conf \u0026\u0026 \tsed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" /etc/php/5.6/fpm/pool.d/www.conf \u0026\u0026 \tsed -i \"s/;date.timezone =.*/date.timezone = Europe\\/Vilnius/\" /etc/php/5.6/fpm/php.ini \u0026\u0026 \tsed -i \"s/;date.timezone =.*/date.timezone = Europe\\/Vilnius/\" /etc/php/5.6/cli/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/;listen.mode = 0660/listen.mode = 0750/g\" /etc/php/5.6/fpm/pool.d/www.conf \u0026\u0026 \tfind /etc/php/5.6/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\; \u0026\u0026 \tmkdir /run/php \u0026\u0026 \tphpenmod mcrypt \u0026\u0026 \trm -Rf /etc/nginx/conf.d/* \u0026\u0026 \trm -Rf /etc/nginx/sites-available/default \u0026\u0026 \tmkdir -p /etc/nginx/ssl/ \u0026\u0026 \tmkdir -p /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/nginx/nginx.conf",
            "/etc/nginx/sites-available/default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/supervisor/supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/cmd.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./www/",
            "/var/www"
          ]
        },
        {
          "CmdLine": [
            "rm -f /etc/nginx/sites-enabled/default \u0026\u0026 \tln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default \u0026\u0026 \tchmod 755 /cmd.sh \u0026\u0026 \tchown -Rf www-data.www-data /var/www \u0026\u0026 \ttouch /var/log/cron.log \u0026\u0026 \ttouch /etc/cron.d/crontasks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/cmd.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}