MetaArgs: null
Stages:
- BaseName: webdevops/php-nginx:7.2
  Commands:
  - Labels:
    - Key: maintainer
      Value: open-source@6go.it
    - Key: vendor
      Value: 6go.it
    - Key: version
      Value: 1.1.11
    Name: label
  - Key: NODE_ENV
    Name: arg
    Value: null
  - Env:
    - Key: NODE_ENV
      Value: $NODE_ENV
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_11.x | bash -     && curl -s https://dl.yarnpkg.com/debian/pubkey.gpg
      | apt-key add -     && echo "deb https://dl.yarnpkg.com/debian/ stable main"
      | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y -qq install     apt-utils autoconf automake     libass-dev libfreetype6-dev     libsdl2-dev
      libtheora-dev     libtool libva-dev     libvdpau-dev libvorbis-dev     libxcb1-dev
      libxcb-shm0-dev     libxcb-xfixes0-dev libx264-dev     libjpeg62-turbo-dev libmcrypt-dev     libpng-dev
      libbz2-dev     libgmp-dev libmhash-dev     libicu-dev libpq-dev     libvpx-dev
      libfdk-aac-dev     libmp3lame-dev libopus-dev     zlib1g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y -qq     build-essential cmake git systemd systemd-sysv vim
      wget yasm     re2c file yarn jpegoptim texinfo optipng pngquant  gifsicle mercurial
      pkg-config
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g svgo
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ~/ffmpeg_sources     && export MAKEFLAGS="-j4"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/ffmpeg_sources     && wget -q http://www.nasm.us/pub/nasm/releasebuilds/2.13.03/nasm-2.13.03.tar.bz2     &&
      tar xjf nasm-2.13.03.tar.bz2     && cd nasm-2.13.03     && ./autogen.sh > /dev/null     &&
      ./configure --prefix="$HOME/ffmpeg_build" --bindir="/usr/local/bin" > /dev/null     &&
      make > /dev/null     && make install > /dev/null
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/ffmpeg_sources     && hg clone https://bitbucket.org/multicoreware/x265
      -q     && cd x265/build/linux     && cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$HOME/ffmpeg_build"
      -DENABLE_SHARED:bool=off ../../source     && make > /dev/null     && make install
      > /dev/null
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~/ffmpeg_sources     && wget -q -O ffmpeg-snapshot.tar.bz2 http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2     &&
      tar xjf ffmpeg-snapshot.tar.bz2     && cd ffmpeg     && PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig"
      ./configure     --prefix="$HOME/ffmpeg_build"     --pkg-config-flags="--static"     --extra-cflags="-I$HOME/ffmpeg_build/include"     --extra-ldflags="-L$HOME/ffmpeg_build/lib"     --extra-libs="-lpthread
      -lm"     --bindir="/usr/local/bin"     --enable-gpl     --enable-libass     --enable-libfdk-aac     --enable-libfreetype     --enable-libmp3lame     --enable-libopus     --enable-libtheora     --enable-libvorbis     --enable-libvpx     --enable-libx264     --enable-libx265     --enable-nonfree     >
      /dev/null     && make > /dev/null     && make install > /dev/null     && hash
      -r
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/local/include/
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | pecl install -s mcrypt-1.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | pecl install -s xdebug-2.6.1     && echo "zend_extension=$(find /usr/local/lib/php/extensions/
      -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.remote_enable=on"
      >> /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.remote_autostart=off"
      >> /usr/local/etc/php/conf.d/xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-source extract     && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql     &&
      docker-php-ext-configure gd --with-freetype-dir=/usr/include/freetype2 --with-png-dir=/usr/include
      --with-jpeg-dir=/usr/include     && docker-php-ext-install -j$(nproc) gmp intl
      opcache pdo_pgsql pgsql     && docker-php-ext-enable xdebug opcache gd mcrypt     &&
      docker-php-source delete
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove --purge -y software-properties-common     autoconf automake  build-essential
      cmake mercurial texinfo     && apt-get clean     && apt-get autoclean     &&
      echo -n > /var/lib/apt/extended_states     && rm -rf /var/lib/apt/lists/*     &&
      rm -rf /usr/share/man/??     && rm -rf /usr/share/man/??_*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/php/98-webdevops-custom.ini
    - /usr/local/etc/php/conf.d/98-webdevops.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/nginx/10-general-custom.conf
    - /opt/docker/etc/nginx/vhost.common.d/10-general.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/supervisor/horizon-worker-template.conf
    - /opt/docker/etc/supervisor.d/horizon-worker-template.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configs/supervisor/laravel-worker-template.conf
    - /opt/docker/etc/supervisor.d/laravel-worker-template.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - stubs/composer/global-composer.json
    - /root/.composer/composer.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - stubs/bash/.bashrc
    - /root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - stubs/bash/.bash_aliases
    - /root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - stubs/larastart.sh
    - /root/scripts/larastart.sh
  - CmdLine:
    - /bin/bash -c "source /root/.bashrc"     && chmod 755 /root/scripts/larastart.sh     &&
      composer global update -qno
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3306"
    - "443"
    - "6379"
    - "80"
  - Name: workdir
    Path: /app
  From:
    Image: webdevops/php-nginx:7.2
  Name: ""
  Platform: ""
  SourceCode: FROM webdevops/php-nginx:7.2
