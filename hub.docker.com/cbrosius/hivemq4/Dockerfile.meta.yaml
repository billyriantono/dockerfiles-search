MetaArgs: null
Stages:
- As: qemu_arm32
  BaseName: debian:buster
  Commands:
  - Env:
    - Key: QEMU_URL
      Value: https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-arm.tar.gz
    Name: env
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends curl     &&
      curl -k -L ${QEMU_URL} | tar zxvf - -C . --strip-components 1
    Name: run
    PrependShell: true
  From:
    Image: debian:buster
  Name: qemu_arm32
  Platform: ""
  SourceCode: FROM debian:buster AS qemu_arm32
- BaseName: arm32v7/openjdk:11-jre-slim-stretch
  Commands:
  - Chown: ""
    From: qemu_arm32
    Name: copy
    SourcesAndDest:
    - qemu-arm-static
    - /usr/bin
  - Key: HIVEMQ_VERSION
    Name: arg
    Value: 4.2.2
  - Env:
    - Key: HIVEMQ_GID
      Value: "10000"
    Name: env
  - Env:
    - Key: HIVEMQ_UID
      Value: "10000"
    Name: env
  - Env:
    - Key: JAVA_OPTS
      Value: '"-XX:+UnlockExperimentalVMOptions -XX:+UseNUMA"'
    Name: env
  - Env:
    - Key: GOSU_VERSION
      Value: "1.11"
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - set -x         && apt-get update && apt-get install -y --no-install-recommends
      bash curl gnupg-agent gnupg dirmngr unzip         && curl -fSL "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)" -o /usr/local/bin/gosu         && curl -fSL "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc" -o /usr/local/bin/gosu.asc         && export GNUPGHOME="$(mktemp
      -d)"         && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys
      B42F6819007F00F88E364FD4036A9C25BF357DD4         && gpg --batch --verify /usr/local/bin/gosu.asc
      /usr/local/bin/gosu         && rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc         &&
      { command -v gpgconf && gpgconf --kill all || :; }         && chmod +x /usr/local/bin/gosu         &&
      gosu nobody true         && apt-get purge -y gpg dirmngr && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.xml
    - /opt/config.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /opt/docker-entrypoint.sh
  - CmdLine:
    - curl -L https://www.hivemq.com/releases/hivemq-${HIVEMQ_VERSION}.zip -o /opt/hivemq-${HIVEMQ_VERSION}.zip     &&
      unzip /opt/hivemq-${HIVEMQ_VERSION}.zip  -d /opt/    && rm -f /opt/hivemq-${HIVEMQ_VERSION}.zip     &&
      ln -s /opt/hivemq-${HIVEMQ_VERSION} /opt/hivemq     && mv /opt/config.xml /opt/hivemq-${HIVEMQ_VERSION}/conf/config.xml     &&
      groupadd --gid ${HIVEMQ_GID} hivemq     && useradd -g hivemq -d /opt/hivemq
      -s /bin/bash --uid ${HIVEMQ_UID} hivemq     && chmod -R 775 /opt     && chmod
      +x /opt/hivemq/bin/run.sh /opt/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e 's|eval \\"java\\" "$HOME_OPT" "$JAVA_OPTS" -jar "$JAR_PATH"|exec
      "java" $HOME_OPT $JAVA_OPTS -jar "$JAR_PATH"|' /opt/hivemq/bin/run.sh &&     sed
      -i -e "s|-XX:OnOutOfMemoryError='sleep 5; kill -9 %p'|-XX:+CrashOnOutOfMemoryError|"
      /opt/hivemq/bin/run.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /opt/hivemq/data
  - Name: volume
    Volumes:
    - /opt/hivemq/log
  - Name: expose
    Ports:
    - "1883"
  - Name: expose
    Ports:
    - "8000"
  - Name: expose
    Ports:
    - "8080"
  - Name: workdir
    Path: /opt/hivemq
  - CmdLine:
    - /opt/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /opt/hivemq/bin/run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: arm32v7/openjdk:11-jre-slim-stretch
  Name: ""
  Platform: ""
  SourceCode: FROM arm32v7/openjdk:11-jre-slim-stretch
