{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "pidof/kalister:booya",
      "SourceCode": "FROM pidof/kalister:booya",
      "Platform": "",
      "From": {
        "Image": "pidof/kalister:booya"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_URL",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "$VCS_URL"
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VERSION"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "'Kali Linux'"
            },
            {
              "Key": "org.label-schema.description",
              "Value": "'Kinda Offical Kali Linux docker image'"
            },
            {
              "Key": "org.label-schema.usage",
              "Value": "'https://www.kali.org/news/official-kali-linux-docker-images/'"
            },
            {
              "Key": "org.label-schema.url",
              "Value": "'https://www.kali.org/'"
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "'Offensive Security'"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "'1.0'"
            },
            {
              "Key": "org.label-schema.docker.cmd",
              "Value": "'docker run --rm pidof/kali'"
            },
            {
              "Key": "org.label-schema.docker.cmd.devel",
              "Value": "'docker run --rm -ti pidof/kali'"
            },
            {
              "Key": "org.label-schema.docker.debug",
              "Value": "'docker logs $CONTAINER'"
            },
            {
              "Key": "io.github.offensive-security.docker.dockerfile",
              "Value": "\"Dockerfile\""
            },
            {
              "Key": "io.github.offensive-security.license",
              "Value": "\"GPLv3\""
            },
            {
              "Key": "MAINTAINER",
              "Value": "\"pidof \u003cpidof@mexican.name\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo \"deb http://http.kali.org/kali kali-rolling main contrib non-free\" \u003e /etc/apt/sources.list \u0026\u0026     echo \"deb-src http://http.kali.org/kali kali-rolling main contrib non-free\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get -yqq update     \u0026\u0026 apt-get -yqq upgrade     \u0026\u0026 apt-get -yqq dist-upgrade     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y metasploit-framework"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/systemctl status ${PG_SERVICE}/service ${PG_SERVICE} status/g' /usr/bin/msfdb \u0026\u0026     service postgresql start \u0026\u0026     msfdb reinit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y git     \u0026\u0026 cd /root     \u0026\u0026 git clone --recursive git://github.com/anoncam/Sn1per.git     \u0026\u0026 cd /root/Sn1per     \u0026\u0026 bash /root/Sn1per/install.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}