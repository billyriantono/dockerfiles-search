MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Gary Feltham <gary.feltham@citypay.com>"'
    Name: label
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/*.jar
    - /tmp/
  - Env:
    - Key: JAVA_VERSION
      Value: 8u181
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Key: MAVEN_VERSION
    Name: arg
    Value: 3.5.4
  - Key: USER_HOME_DIR
    Name: arg
    Value: '"/root"'
  - Key: BASE_URL
    Name: arg
    Value: https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends         tzdata
      locales &&     echo "Etc/UTC" | tee /etc/timezone &&     ln -fs /usr/share/zoneinfo/Etc/UTC
      /etc/localtime &&     dpkg-reconfigure -f noninteractive tzdata &&     echo
      en_US.UTF-8 UTF-8 >> /etc/locale.gen &&         locale-gen &&         update-locale
      LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 &&     apt-get install -y --no-install-recommends         ca-certificates-java         openjdk-8-jdk-headless
      awscli &&     echo $JAVA_HOME &&     mv /tmp/local_policy.jar ${JAVA_HOME}/jre/lib/security/
      &&     mv /tmp/US_export_policy.jar ${JAVA_HOME}/jre/lib/security/ &&     cd
      ${JAVA_HOME} && rm -rf ./*src.zip            ./lib/missioncontrol            ./lib/visualvm            ./lib/*javafx*            ./jre/plugin            ./jre/bin/javaws            ./jre/bin/jjs            ./jre/bin/orbd            ./jre/bin/pack200            ./jre/bin/policytool            ./jre/bin/rmid            ./jre/bin/rmiregistry            ./jre/bin/servertool            ./jre/bin/tnameserv            ./jre/bin/unpack200            ./jre/lib/javaws.jar            ./jre/lib/deploy*            ./jre/lib/desktop            ./jre/lib/*javafx*            ./jre/lib/*jfx*            ./jre/lib/amd64/libdecora_sse.so            ./jre/lib/amd64/libprism_*.so            ./jre/lib/amd64/libfxplugins.so            ./jre/lib/amd64/libglass.so            ./jre/lib/amd64/libgstreamer-lite.so            ./jre/lib/amd64/libjavafx*.so            ./jre/lib/amd64/libjfx*.so            ./jre/lib/ext/jfxrt.jar            ./jre/lib/ext/nashorn.jar            ./jre/lib/oblique-fonts            ./jre/lib/plugin.jar
      && java -version &&            mkdir -p /usr/share/maven /usr/share/maven/ref
      &&            apt-get update -qq &&            apt-get install -y --no-install-recommends
      wget libxml2-utils html2text unzip rsync &&            wget ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz
      &&            tar -xzf apache-maven-${MAVEN_VERSION}-bin.tar.gz -C /usr/share/maven
      --strip-components=1 &&            rm -f apache-maven-${MAVEN_VERSION}-bin.tar.gz
      &&            apt-get clean autoclean && apt-get autoremove --yes && rm -rf
      /var/lib/{apt,dpkg,cache,log} &&            ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/share/maven
    Name: env
  - Env:
    - Key: MAVEN_CONFIG
      Value: '"$USER_HOME_DIR/.m2"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/*.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/microscanner
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/settings-docker.xml
    - $MAVEN_CONFIG/settings.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/pom.xml
    - $USER_HOME_DIR
  - CmdLine:
    - cd $USER_HOME_DIR && mvn verify dependency:copy-dependencies
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/mvn-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - mvn
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
