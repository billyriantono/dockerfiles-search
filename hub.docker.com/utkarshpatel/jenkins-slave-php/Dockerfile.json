{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkinsci/jnlp-slave:latest",
      "SourceCode": "FROM jenkinsci/jnlp-slave:latest",
      "Platform": "",
      "From": {
        "Image": "jenkinsci/jnlp-slave:latest"
      },
      "Commands": [
        {
          "Maintainer": "Utkarsh Patel \u003citismeutkarsh@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "printf \"\\n\\n==== Install depedency ====\\n\"  \u0026\u0026 apt-get update \u0026\u0026 apt install -y   php7.0   php7.0-curl   php7.0-json   php7.0-cgi   php7.0-fpm   autoconf   automake   libxml2-dev   libcurl4-openssl-dev   libssl-dev   openssl   gettext   libicu-dev   libmcrypt-dev   libmcrypt4   libbz2-dev   libreadline-dev   build-essential   libmhash-dev   libmhash2   libxslt1-dev   rsync"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"\\n\\n==== Install phpbrew ====\\n\"  \u0026\u0026 curl -L -O https://github.com/phpbrew/phpbrew/raw/master/phpbrew  \u0026\u0026 chmod +x phpbrew  \u0026\u0026 mv phpbrew /usr/bin  \u0026\u0026 cd /usr/local/include  \u0026\u0026 ln -s /usr/include/x86_64-linux-gnu/curl curl  \u0026\u0026 apt-get install -y libcurl4-gnutls-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "printf \"\\n\\n==== Install php 7.2.18 ====\\n\"  \u0026\u0026 phpbrew init  \u0026\u0026 echo 'source /home/jenkins/.phpbrew/bashrc' \u003e\u003e /home/jenkins/.bashrc  \u0026\u0026 phpbrew install -j $(nproc) 7.2.18 +small +hash -debug -- --with-libdir=lib/x86_64-linux-gnu  \u0026\u0026 export PHPBREW_PHP=php-7.2.18  \u0026\u0026 phpbrew switch 7.2.18  \u0026\u0026 phpbrew clean php-7.2.18"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "printf \"\\n\\n==== Install composer ====\\n\"   \u0026\u0026 echo '/home/jenkins/.phpbrew/php/php-7.2.18/bin/php \"$@\"' \u003e /usr/bin/php   \u0026\u0026 chmod +x /usr/bin/php   \u0026\u0026 curl -o /tmp/composer-setup.php https://getcomposer.org/installer   \u0026\u0026 curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   \u0026\u0026 php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\"   \u0026\u0026 php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer   \u0026\u0026 rm -rf /tmp/composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jenkins-slave"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}