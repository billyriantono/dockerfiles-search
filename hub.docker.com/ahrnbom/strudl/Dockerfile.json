{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cat /etc/apt/sources.list | grep multiverse | sed 's/\\# //g' \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update --fix-missing \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     add-apt-repository ppa:stebbins/handbrake-releases \u0026\u0026 apt-get update \u0026\u0026     apt-get install -y wget bzip2 ca-certificates     libglib2.0-0 libxext6 libsm6 libxrender1     libpng12-0 libgtk2.0     git     python3-dev python3-pip python3-tk     fonts-freefont-ttf fonts-ubuntu-font-family-console ttf-ubuntu-font-family     edubuntu-fonts fonts-ubuntu-title fonts-liberation fonts-arkpandora     font-manager cifs-utils ffmpeg     handbrake-cli libavcodec-dev libavformat-dev libswscale-dev graphviz libxtst6 \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y curl grep sed dpkg \u0026\u0026     TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:'` \u0026\u0026     curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" \u003e tini.deb \u0026\u0026     dpkg -i tini.deb \u0026\u0026     rm tini.deb \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --upgrade pip \u0026\u0026 pip install tensorflow-gpu==1.4.1 \u0026\u0026     pip install -I numpy==1.14.3 \u0026\u0026     pip install click==6.6 pudb==2018.1 tqdm==4.26.0 imageio==2.3.0     line_profiler==2.1.2 dask==1.1.0 pydot==1.4.1 connexion==1.5.3     munkres==1.0.12 flask==1.0.2 opencv-contrib-python==3.2.0.8 pytest==4.6.3     pandas==0.23.4 psutil==5.2.2 scipy==0.19.0 matplotlib==2.0.2 h5py==2.7.0     jsonschema==2.6.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 git clone https://github.com/fchollet/keras.git \u0026\u0026 cd keras \u0026\u0026 git checkout 507374c8 \u0026\u0026 pip install . \u0026\u0026 cd .. \u0026\u0026 rm -r keras"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'alias prof=\"kernprof -l -v\"' \u003e\u003e /etc/bash.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'alias python=\"python3\"' \u003e\u003e /etc/bash.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TF_CPP_MIN_LOG_LEVEL",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "\"/code\""
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "*.py",
            "strudl.yaml",
            "/code/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "webui",
            "/code/webui"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "pdtv",
            "/code/pdtv"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tests",
            "/code/tests"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test_data",
            "/code/test_data"
          ]
        },
        {
          "CmdLine": [
            "mkdir /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/code"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/usr/bin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "python3",
            "server.py"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}