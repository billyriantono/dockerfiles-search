MetaArgs: null
Stages:
- BaseName: php:7.3-fpm-alpine3.10
  Commands:
  - CmdLine:
    - set -ex;         apk add --no-cache         supervisor         rsync     ;         rm
      /var/spool/cron/crontabs/root;     echo '*/15 * * * * php -f /var/www/html/cron.php'
      > /var/spool/cron/crontabs/www-data
    Name: run
    PrependShell: true
  - Env:
    - Key: NGINX_VERSION
      Value: 1.17.2
    Name: env
  - Env:
    - Key: NJS_VERSION
      Value: 0.3.3
    Name: env
  - Env:
    - Key: PKG_RELEASE
      Value: "1"
    Name: env
  - CmdLine:
    - set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx
      -s /sbin/nologin -G nginx -g nginx nginx     && apkArch="$(cat /etc/apk/arch)"     &&
      nginxPackages="         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     "     &&
      case "$apkArch" in         x86_64)             set -x             && KEY_SHA512="e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a
      *stdin"             && apk add --no-cache --virtual .cert-deps                 openssl             &&
      wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             &&
      if [ "$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl
      sha512 -r)" = "$KEY_SHA512" ]; then                 echo "key verification succeeded!";                 mv
      /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo
      "key verification failed!";                 exit 1;             fi             &&
      printf "%s%s%s\n"                 "https://nginx.org/packages/mainline/alpine/v"                 `egrep
      -o '^[0-9]+\.[0-9]+' /etc/alpine-release`                 "/main"             |
      tee -a /etc/apk/repositories             && apk del .cert-deps             ;;         *)             set
      -x             && tempDir="$(mktemp -d)"             && chown nobody:nobody
      $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             &&
      su nobody -s /bin/sh -c "                 export HOME=${tempDir}                 &&
      cd ${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 &&
      cd pkg-oss                 && hg up ${NGINX_VERSION}-${PKG_RELEASE}                 &&
      cd alpine                 && make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz
      ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k
      ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 "             &&
      echo "${tempDir}/packages/alpine/" >> /etc/apk/repositories             && cp
      ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del
      .build-deps             ;;     esac     && apk add --no-cache $nginxPackages     &&
      if [ -n "$tempDir" ]; then rm -rf "$tempDir"; fi     && if [ -n "/etc/apk/keys/abuild-key.rsa.pub"
      ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n "/etc/apk/keys/nginx_signing.rsa.pub"
      ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && sed -i '$ d' /etc/apk/repositories     &&
      apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         &&
      runDeps="$(         scanelf --needed --nobanner /tmp/envsubst             |
      awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }'             | sort -u             |
      xargs -r apk info --installed             | sort -u     )"     && apk add --no-cache
      $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     &&
      apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     &&
      ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex;         apk add --no-cache --virtual .build-deps         $PHPIZE_DEPS         autoconf         freetype-dev         icu-dev         libevent-dev         libjpeg-turbo-dev         libmcrypt-dev         libpng-dev         libmemcached-dev         libxml2-dev         libzip-dev         openldap-dev         pcre-dev         postgresql-dev         imagemagick-dev         libwebp-dev     ;         docker-php-ext-configure
      gd --with-freetype-dir=/usr --with-png-dir=/usr --with-jpeg-dir=/usr --with-webp-dir=/usr;     docker-php-ext-configure
      ldap;     docker-php-ext-install -j "$(nproc)"         exif         gd         intl         ldap         opcache         pcntl         pdo_mysql         pdo_pgsql         zip     ;         pecl
      install APCu-5.1.17;     pecl install memcached-3.1.3;     pecl install redis-4.3.0;     pecl
      install imagick-3.4.4;         docker-php-ext-enable         apcu         memcached         redis         imagick     ;         runDeps="$(         scanelf
      --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions             |
      tr ',' '\n'             | sort -u             | awk 'system("[ -e /usr/local/lib/"
      $1 " ]") == 0 { next } { print "so:" $1 }'     )";     apk add --virtual .nextcloud-phpext-rundeps
      $runDeps;     apk del .build-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - "{         echo 'opcache.enable=1';         echo 'opcache.interned_strings_buffer=8';
      \        echo 'opcache.max_accelerated_files=10000';         echo 'opcache.memory_consumption=128';
      \        echo 'opcache.save_comments=1';         echo 'opcache.revalidate_freq=1';
      \    } > /usr/local/etc/php/conf.d/opcache-recommended.ini;         echo 'apc.enable_cli=1'
      >> /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini;         echo 'memory_limit=512M'
      > /usr/local/etc/php/conf.d/memory-limit.ini;         mkdir /var/www/data;     chown
      -R www-data:root /var/www;     chmod -R g=u /var/www;     mv /etc/nginx/conf.d/default.conf
      /etc/nginx/conf.d/default.conf.bak; \t{ \t\techo '[global]'; \t\techo 'error_log
      = /proc/self/fd/2'; \t\techo; echo '; https://github.com/docker-library/php/pull/725#issuecomment-443540114';
      echo 'log_limit = 8192'; \t\techo; \t\techo '[www]'; \t\techo '; if we send
      this to /proc/self/fd/1, it never appears'; \t\techo 'access.log = /proc/self/fd/2';
      \t\techo; \t\techo 'clear_env = no'; \t\techo; \t\techo '; Ensure worker stdout
      and stderr are sent to the main error log.'; \t\techo 'catch_workers_output
      = yes'; \t\techo 'decorate_workers_output = no'; \t} | tee /usr/local/etc/php-fpm.d/docker.conf;
      \    \t{ \t\techo '[global]'; \t\techo 'daemonize = no'; \t\techo 'pid = /var/run/php-fpm.pid';
      \t\techo; \t\techo '[www]'; \t\techo 'listen = /dev/shm/php-fpm.sock'; \t\techo
      'listen.owner = www-data'; \t\techo 'listen.group = root'; \t\techo 'listen.mode
      = 0660'; \t} | tee /usr/local/etc/php-fpm.d/zz-docker.conf"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/www/html
  - Env:
    - Key: NEXTCLOUD_VERSION
      Value: 16.0.4
    Name: env
  - CmdLine:
    - set -ex;     apk add --no-cache --virtual .fetch-deps         bzip2         gnupg     ;         curl
      -fsSL -o nextcloud.tar.bz2         "https://download.nextcloud.com/server/releases/nextcloud-${NEXTCLOUD_VERSION}.tar.bz2";     curl
      -fsSL -o nextcloud.tar.bz2.asc         "https://download.nextcloud.com/server/releases/nextcloud-${NEXTCLOUD_VERSION}.tar.bz2.asc";     export
      GNUPGHOME="$(mktemp -d)";     gpg --batch --keyserver ha.pool.sks-keyservers.net
      --recv-keys 28806A878AE423A28372792ED75899B9A724937A;     gpg --batch --verify
      nextcloud.tar.bz2.asc nextcloud.tar.bz2;     tar -xjf nextcloud.tar.bz2 -C /usr/src/;     gpgconf
      --kill all;     rm -r "$GNUPGHOME" nextcloud.tar.bz2.asc nextcloud.tar.bz2;     rm
      -rf /usr/src/nextcloud/updater;     mkdir -p /usr/src/nextcloud/data;     mkdir
      -p /usr/src/nextcloud/custom_apps;     chmod +x /usr/src/nextcloud/occ;     apk
      del .fetch-deps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/nginx.conf
    - /etc/nginx/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/default.conf
    - /etc/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord/supervisord.conf
    - /etc/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord/supervisord_fpm.ini
    - /etc/supervisor.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord/supervisord_nginx.ini
    - /etc/supervisor.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '*.sh'
    - upgrade.exclude
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/*
    - /usr/src/nextcloud/config/
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - supervisord
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.3-fpm-alpine3.10
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3-fpm-alpine3.10
