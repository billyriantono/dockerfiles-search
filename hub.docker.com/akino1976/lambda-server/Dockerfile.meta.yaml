MetaArgs: null
Stages:
- As: build
  BaseName: lambci/lambda:build-python3.7
  Commands:
  - CmdLine:
    - mkdir -p /lambdaserver
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /server-dependencies
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lambdaserver
    - /lambdaserver
  - CmdLine:
    - pip install   --requirement /lambdaserver/requirements.txt   --target /server-dependencies
    Name: run
    PrependShell: true
  From:
    Image: lambci/lambda:build-python3.7
  Name: build
  Platform: ""
  SourceCode: FROM lambci/lambda:build-python3.7 as build
- BaseName: lambci/lambda:python3.7
  Commands:
  - Env:
    - Key: PACKAGE_FOLDER
      Value: /packages
    Name: env
  - Env:
    - Key: PACKAGE_NAME
      Value: pkg.zip
    Name: env
  - Env:
    - Key: RUN_IN_WATCH_MODE
      Value: '"0"'
    Name: env
  - Env:
    - Key: EXEC_BEFORE
      Value: '""'
    Name: env
  - Env:
    - Key: FLASK_APP
      Value: app.py
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $PYTHONPATH:/server-dependencies
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/server-dependencies/bin
    Name: env
  - Name: workdir
    Path: /lambdaserver
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /server-dependencies
    - /server-dependencies
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /lambdaserver
    - /lambdaserver
  - Name: user
    User: root
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - sh
    - ./entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - python -u app.py
    Name: cmd
    PrependShell: true
  From:
    Image: lambci/lambda:python3.7
  Name: ""
  Platform: ""
  SourceCode: FROM lambci/lambda:python3.7
