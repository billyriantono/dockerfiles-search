{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1",
      "SourceCode": "FROM php:7.1",
      "Platform": "",
      "From": {
        "Image": "php:7.1"
      },
      "Commands": [
        {
          "Maintainer": "Alin Alexandru \u003calin.alexandru@innobyte.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update    \u0026\u0026 apt-get install -y        git-core unzip zip    \u0026\u0026 docker-php-ext-install mbstring    \u0026\u0026 docker-php-ext-install pdo_mysql    \u0026\u0026 apt-get install -y libxml2-dev        \u0026\u0026 docker-php-ext-install soap    \u0026\u0026 apt-get install -y libmcrypt4 libmcrypt-dev        \u0026\u0026 docker-php-ext-install mcrypt    \u0026\u0026 apt-get install -y libxslt-dev        \u0026\u0026 docker-php-ext-install xsl    \u0026\u0026 apt-get install -y libicu-dev        \u0026\u0026 docker-php-ext-install intl    \u0026\u0026 apt-get install -y libpng-dev libjpeg-dev        \u0026\u0026 docker-php-ext-configure gd --with-jpeg-dir=/usr/lib        \u0026\u0026 docker-php-ext-install gd    \u0026\u0026 apt-get install -y zlib1g-dev        \u0026\u0026 docker-php-ext-install zip    \u0026\u0026 docker-php-ext-install bcmath    \u0026\u0026 apt-get install -y python3 python3-pip    \u0026\u0026 pip3 install awscli    \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"memory_limit=-1\" \u003e $PHP_INI_DIR/conf.d/memory-limit.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"date.timezone=UTC\" \u003e $PHP_INI_DIR/conf.d/date_timezone.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/     \u0026\u0026 ln -s /usr/local/bin/composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSLo phpunit.phar https://phar.phpunit.de/phpunit-6.phar     \u0026\u0026 chmod 755 phpunit.phar     \u0026\u0026 mv phpunit.phar /usr/local/bin/     \u0026\u0026 ln -s /usr/local/bin/phpunit.phar /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar     \u0026\u0026 chmod 755 phpcs.phar     \u0026\u0026 mv phpcs.phar /usr/local/bin/     \u0026\u0026 ln -s /usr/local/bin/phpcs.phar /usr/local/bin/phpcs     \u0026\u0026 curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar     \u0026\u0026 chmod 755 phpcbf.phar     \u0026\u0026 mv phpcbf.phar /usr/local/bin/     \u0026\u0026 ln -s /usr/local/bin/phpcbf.phar /usr/local/bin/phpcbf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://deployer.org/deployer.phar     \u0026\u0026 mv deployer.phar /usr/local/bin/dep     \u0026\u0026 chmod +x /usr/local/bin/dep"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}