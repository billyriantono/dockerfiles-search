{
  "MetaArgs": [
    {
      "Key": "DEBIAN_IMAGE",
      "DefaultValue": "debian:stretch",
      "ProvidedValue": null,
      "Value": "debian:stretch"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "${DEBIAN_IMAGE}",
      "SourceCode": "FROM ${DEBIAN_IMAGE}",
      "Platform": "",
      "From": {
        "Image": "${DEBIAN_IMAGE}"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends ca-certificates curl git libtinfo-dev netbase \u0026\u0026     curl -sSL https://get.haskellstack.org/ | sh \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "GITIT_BRANCH",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Key": "GITIT_REPOSITORY",
          "Name": "arg",
          "Value": "https://github.com/jgm/gitit"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "STACK_ROOT",
              "Value": "/opt/stack"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone -b \"${GITIT_BRANCH}\" --depth 1 \"${GITIT_REPOSITORY}\" /opt/gitit \u0026\u0026     cd /opt/gitit \u0026\u0026     stack build --flag pandoc:embed_data_files \u0026\u0026     stack clean \u0026\u0026     rm -rf ${STACK_ROOT}/indices \u0026\u0026     rm -rf ${STACK_ROOT}/programs/*/ghc-*.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends darcs git gosu mercurial mime-support \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "GITIT_USER",
              "Value": "gitit"
            },
            {
              "Key": "GITIT_UID",
              "Value": "1000"
            },
            {
              "Key": "GITIT_GID",
              "Value": "1000"
            },
            {
              "Key": "GITIT_CONF",
              "Value": "/gitit.conf"
            },
            {
              "Key": "GITIT_WORK_DIR",
              "Value": "/gitit"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}