{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "area51/docker-client",
      "SourceCode": "FROM area51/docker-client",
      "Platform": "",
      "From": {
        "Image": "area51/docker-client"
      },
      "Commands": [
        {
          "Maintainer": "Peter Mount \u003cpeter@retep.org\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/opt/jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_PORT",
              "Value": "80"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache         git         mercurial         subversion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "keys/*",
            "/etc/ssh.cache/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/*.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "chmod 500 /docker-entrypoint.sh \u0026\u0026    chmod -f 600 /etc/ssh.cache/ssh_host_* \u0026\u0026    mkdir -p ~root/.ssh \u0026\u0026    chmod 700 ~root/.ssh/ \u0026\u0026    echo -e \"Port 22\\n\" \u003e\u003e /etc/ssh/sshd_config \u0026\u0026    cp -a /etc/ssh /etc/ssh.cache \u0026\u0026     mkdir -p /var/run/sshd \u0026\u0026    addgroup -g 1000 jenkins \u0026\u0026    adduser -h /home/jenkins     \t    -u 1000 \t    -G jenkins \t    -s /bin/ash \t    -D jenkins \u0026\u0026    echo \"jenkins:jenkins\" | chpasswd \u0026\u0026    mkdir ${JENKINS_HOME}s \u0026\u0026    echo \"Installing aws-cli\" \u0026\u0026    cd /tmp \u0026\u0026    curl -s https://s3.amazonaws.com/aws-cli/awscli-bundle.zip -o awscli-bundle.zip \u0026\u0026    unzip awscli-bundle.zip \u0026\u0026    ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws \u0026\u0026    rm -rf awscli* \u0026\u0026    git config --global credential.helper '!/usr/local/bin/aws codecommit credential-helper $@' \u0026\u0026    git config --global credential.useHttpPath true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "${JENKINS_HOME}"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins.war",
            "/opt/jenkins.war"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22/tcp",
            "443/tcp",
            "50000/tcp",
            "80/tcp"
          ]
        }
      ]
    }
  ]
}