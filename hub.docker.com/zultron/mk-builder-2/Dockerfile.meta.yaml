MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Maintainer: John Morris <john@zultron.com>
    Name: maintainer
  - Env:
    - Key: TERM
      Value: dumb
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: DEBCONF_NONINTERACTIVE_SEEN
      Value: "true"
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - echo 'APT::Install-Recommends "0";\nAPT::Install-Suggests "0";' >             /etc/apt/apt.conf.d/01norecommend
      &&     mkdir -p ${ROOTFS}/etc/apt/apt.conf.d &&     echo 'APT::Install-Recommends
      "0";\nAPT::Install-Suggests "0";' >             ${ROOTFS}/etc/apt/apt.conf.d/01norecommend
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i /etc/apt/sources.list -e 's/httpredir.debian.org/ftp.debian.org/'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y apt-transport-https ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - emdebian-toolchain-archive.key
    - /tmp/
  - CmdLine:
    - apt-key add /tmp/emdebian-toolchain-archive.key &&     echo "deb http://emdebian.org/tools/debian/
      jessie main" >         /etc/apt/sources.list.d/emdebian.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 43DDF224
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://deb.machinekit.io/debian jessie main' >         /etc/apt/sources.list.d/machinekit.list
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "Package: linux-libc-dev\nPin: version 3.*\nPin-Priority:"         "1001\n\nPackage:
      linux-libc-dev:armhf\nPin: "         "version 3.*\nPin-Priority: 1001" >         /etc/apt/preferences.d/10pin-linux-libc-dev'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get -y install \tlocales \tgit \tbzip2 \tsharutils \tnet-tools \ttime \thelp2man
      \txvfb \txauth \tpython-sphinx \twget         sudo \tlftp"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y \tbuild-essential \tdevscripts \tfakeroot \tequivs \tlsb-release
      \tless \tpython-debian \tlibtool \tccache \tautoconf \tquilt"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-restkit rubygems
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install package_cloud --no-rdoc --no-ri
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - PackagecloudIo.py
    - prune.py
    - /usr/bin/
  - CmdLine:
    - dpkg --add-architecture armhf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get -y install         crossbuild-essential-armhf         qemu-user-static
      \tlinux-libc-dev:armhf"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y         automake \tcython \tpsmisc \tpython-tk \tkmod \tpython-setuptools
      \tuuid-runtime \tprotobuf-compiler \tpython-protobuf \tpython-simplejson \tlibtk-img
      \tpython-pyftpdlib"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y         libgl1-mesa-dev:armhf         libglu1-mesa-dev:armhf         libgtk2.0-dev:armhf         libmodbus-dev:armhf         libncurses-dev:armhf         libreadline-dev:armhf         libusb-1.0-0-dev:armhf         libxmu-dev:armhf         libxmu-headers:armhf         libxaw7-dev:armhf         libzmq3-dev:armhf         libczmq-dev:armhf         libjansson-dev:armhf         libwebsockets-dev:armhf         liburiparser-dev:armhf         libssl-dev:armhf         uuid-dev:armhf         libavahi-client-dev:armhf         libprotobuf-dev:armhf         libprotoc-dev:armhf         libboost-thread-dev:armhf         libxenomai-dev:armhf         tcl8.6-dev:armhf         tk8.6-dev:armhf         libboost-serialization-dev:armhf
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y         libpython2.7:armhf         libpython2.7-dev:armhf
      \        libpython2.7-minimal:armhf \tlibpython-dev:armhf         libpython-stdlib:armhf
      \        libboost-python1.55.0:armhf"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/pkg-downloads &&     cd /tmp/pkg-downloads &&     apt-get download
      libboost-python1.55-dev:armhf libboost-python-dev:armhf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - force-install.sh
    - /usr/bin/force-install
  - CmdLine:
    - force-install -i
    Name: run
    PrependShell: true
  - Env:
    - Key: USER
      Value: travis
    Name: env
  - Env:
    - Key: UID
      Value: "1000"
    Name: env
  - Env:
    - Key: GID
      Value: "1000"
    Name: env
  - Env:
    - Key: HOME
      Value: /home/${USER}
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/lib/ccache:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin
    Name: env
  - CmdLine:
    - echo "${USER}:x:${UID}:${GID}::${HOME}:${SHELL}" >> /etc/passwd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "${USER}:x:${GID}:" >> /etc/group
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i /etc/bash.bashrc     -e 's/^PS1=.*/PS1="\\h:\\W\\$ "/'     -e '$a alias
      ls="ls -aFs"'
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"ALL\tALL=(ALL:ALL) NOPASSWD: ALL\" >> /etc/sudoers"
    Name: run
    PrependShell: true
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
