MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk
  Commands:
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 46095ACC8548582C1A2699A9D27D666CD88E42B4
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends apt-transport-https
      && rm -rf /var/lib/apt/lists/* \t&& echo 'deb https://artifacts.elastic.co/packages/5.x/apt
      stable main' > /etc/apt/sources.list.d/elasticsearch.list"
    Name: run
    PrependShell: true
  - Env:
    - Key: ELASTICSEARCH_VERSION
      Value: 5.0.1
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends
      elasticsearch=$ELASTICSEARCH_VERSION \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/elasticsearch/bin:$PATH
    Name: env
  - Name: workdir
    Path: /usr/share/elasticsearch
  - CmdLine:
    - "set -ex \t&& for path in \t\t./data \t\t./logs \t\t./config \t\t./config/scripts
      \t; do \t\tmkdir -p \"$path\"; \t\tchown -R elasticsearch:elasticsearch \"$path\";
      \tdone"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - ./config
  - CmdLine:
    - "cd /usr/share \t&& wget -c http://mirrors.cnnic.cn/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.zip
      \t&& unzip apache-maven-3.3.9-bin.zip \t&& rm /usr/share/apache-maven-3.3.9-bin.zip"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/apache-maven-3.3.9/bin:$PATH
    Name: env
  - CmdLine:
    - "cd /usr/share/elasticsearch/plugins \t&& wget -c -O ik.zip https://codeload.github.com/medcl/elasticsearch-analysis-ik/zip/v5.0.1
      \t&& unzip ik.zip \t&& rm ik.zip \t&& cd elasticsearch-analysis-ik-5.0.1 \t&&
      mvn clean \t&& mvn compile \t&& mvn package \t&& mkdir /usr/share/elasticsearch/plugins/ik
      \t&& cp target/releases/elasticsearch-analysis-ik-*.zip /usr/share/elasticsearch/plugins/ik
      \t&& cd /usr/share/elasticsearch/plugins \t&& rm -rf elasticsearch-analysis-ik-5.0.1
      \t&& cd /usr/share/elasticsearch/plugins/ik \t&& unzip elasticsearch-analysis-ik-*.zip
      \t&& rm elasticsearch-analysis-ik-*.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/share/elasticsearch/plugins \t&& wget -c -O pinyin.zip https://codeload.github.com/medcl/elasticsearch-analysis-pinyin/zip/v5.0.1
      \t&& unzip pinyin.zip \t&& rm pinyin.zip \t&& cd elasticsearch-analysis-pinyin-5.0.1
      \t&& mvn clean \t&& mvn compile \t&& mvn package   \t&& mkdir /usr/share/elasticsearch/plugins/pinyin
      \t&& cp target/releases/elasticsearch-analysis-pinyin-*.zip /usr/share/elasticsearch/plugins/pinyin
      \t&& cd /usr/share/elasticsearch/plugins \t&& rm -rf elasticsearch-analysis-pinyin-5.0.1
      \  \t&& cd /usr/share/elasticsearch/plugins/pinyin \t&& unzip elasticsearch-analysis-pinyin-*.zip
      \t&& rm elasticsearch-analysis-pinyin-*.zip"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /usr/share/elasticsearch/data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod a+x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9200"
    - "9300"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - elasticsearch
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8-jdk
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk
