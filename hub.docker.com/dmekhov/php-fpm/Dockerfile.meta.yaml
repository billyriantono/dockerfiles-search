MetaArgs:
- DefaultValue: "7.3"
  Key: PHP_VERSION
  ProvidedValue: null
  Value: "7.3"
Stages:
- BaseName: php:${PHP_VERSION}-fpm
  Commands:
  - Maintainer: dmekhov
    Name: maintainer
  - CmdLine:
    - apt-get update &&   apt-get upgrade -y &&   apt-get install -y --no-install-recommends     curl     libz-dev     libjpeg-dev     libpng-dev     libfreetype6-dev     libssl-dev     libmcrypt-dev   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure gd         --with-jpeg-dir=/usr/lib         --with-freetype-dir=/usr/include/freetype2
      &&         docker-php-ext-install gd bcmath
    Name: run
    PrependShell: true
  - Key: INSTALL_XDEBUG
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${INSTALL_XDEBUG} = true ]; then   pecl install xdebug ;fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./xdebug.ini
    - /usr/local/etc/php/conf.d/xdebug.ini
  - CmdLine:
    - sed -i "s/xdebug.remote_autostart=0/xdebug.remote_autostart=1/" /usr/local/etc/php/conf.d/xdebug.ini
      &&     sed -i "s/xdebug.remote_enable=0/xdebug.remote_enable=1/" /usr/local/etc/php/conf.d/xdebug.ini
      &&     sed -i "s/xdebug.cli_color=0/xdebug.cli_color=1/" /usr/local/etc/php/conf.d/xdebug.ini
    Name: run
    PrependShell: true
  - Key: INSTALL_PHPREDIS
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${INSTALL_PHPREDIS} = true ]; then     printf "\n" | pecl install -o -f
      redis     &&  rm -rf /tmp/pear     &&  docker-php-ext-enable redis ;fi
    Name: run
    PrependShell: true
  - Key: INSTALL_PCNTL
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${INSTALL_PCNTL} = true ]; then     docker-php-ext-install pcntl ;fi
    Name: run
    PrependShell: true
  - Key: INSTALL_EXIF
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${INSTALL_EXIF} = true ]; then     docker-php-ext-install exif ;fi
    Name: run
    PrependShell: true
  - Key: INSTALL_OPCACHE
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${INSTALL_OPCACHE} = true ]; then     docker-php-ext-install opcache ;fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./opcache.ini
    - /usr/local/etc/php/conf.d/opcache.ini
  - Name: user
    User: root
  - Key: INSTALL_MYSQL
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${INSTALL_MYSQL} = true ]; then     apt-get update -yqq &&     apt-get
      -y install mariadb-client ;fi
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Key: INSTALL_PGSQL
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${INSTALL_PGSQL} = true ]; then     apt-get update -yqq --no-install-recommends
      &&     apt-get -y install libpq-dev ;fi
    Name: run
    PrependShell: true
  - Key: INSTALL_INTL
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${INSTALL_INTL} = true ]; then     apt-get install -y zlib1g-dev libicu-dev
      g++ &&     docker-php-ext-configure intl &&     docker-php-ext-install intl
      ;fi
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Key: INSTALL_IMAGE_OPTIMIZERS
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${INSTALL_IMAGE_OPTIMIZERS} = true ]; then     apt-get install -y jpegoptim
      optipng pngquant gifsicle ;fi
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Key: INSTALL_IMAGEMAGICK
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${INSTALL_IMAGEMAGICK} = true ]; then     apt-get install -y libmagickwand-dev
      imagemagick &&     pecl install imagick &&     docker-php-ext-enable imagick
      ;fi
    Name: run
    PrependShell: true
  - Key: INSTALL_ADDITIONAL_LOCALES
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ ${INSTALL_ADDITIONAL_LOCALES} = true ]; then     apt-get install -y locales
      ;fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./laravel.ini
    - /usr/local/etc/php/conf.d
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./fpm-pool.conf
    - /usr/local/etc/php-fpm.d/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - php.ini
    - /usr/local/etc/php/php.ini
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /root/entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - enable-extensions.sh
    - /root/enable-extensions.sh
  - CmdLine:
    - chmod +x /root/entrypoint.sh && chmod +x /root/enable-extensions.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&     rm
      /var/log/lastlog /var/log/faillog
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -u 1000 www-data
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - bash
    - -c
    - /root/entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: php:${PHP_VERSION}-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:${PHP_VERSION}-fpm
