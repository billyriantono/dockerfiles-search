{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Maintainer": "CI\u0026T-KO-TEAM",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/var/jenkins_home/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y wget git curl zip make subversion ruby-full python2.7 openjdk-7-jdk maven mysql-client dos2unix  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_0.12 | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install sass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf -T /usr/bin/python2.7 /usr/bin/python  \u0026\u0026 mkdir -p /tmp/installawscli  \u0026\u0026 cd /tmp/installawscli  \u0026\u0026 curl \"https://s3.amazonaws.com/aws-cli/awscli-bundle.zip\" -o \"awscli-bundle.zip\"  \u0026\u0026 unzip awscli-bundle.zip  \u0026\u0026 ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws  \u0026\u0026 rm -rf /tmp/installawscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /usr/share/jenkins/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -d /home/jenkins -m -s /bin/bash jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "batch-install-jenkins-plugins.sh",
            "/usr/local/bin/batch-install-jenkins-plugins.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "init.groovy",
            "/tmp/WEB-INF/init.groovy.d/tcp-slave-angent-port.groovy"
          ]
        },
        {
          "CmdLine": [
            "usermod -m -d \"$JENKINS_HOME\" jenkins \u0026\u0026 chown -R jenkins \"$JENKINS_HOME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/jenkins_home/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "50000",
            "8080"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "jenkins.sh",
            "/usr/local/bin/jenkins.sh"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/jenkins.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Expression": "ADD settings.xml /usr/share/maven/conf/settings.xml",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD config /var/jenkins_home/.aws/config",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD credentials /var/jenkins_home/.aws/credentials ",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD okplugins.list /tmp/okplugins.list",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD jenkins.version /tmp/jenkins.version",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN mkdir -p /tmp/WEB-INF/plugins  \u0026\u0026 batch-install-jenkins-plugins.sh -p /tmp/okplugins.list -d /tmp/WEB-INF/plugins  \u0026\u0026 export JENKINS_VERSION=`cat /tmp/jenkins.version` \u0026\u0026 rm -f /tmp/jenkins.version  \u0026\u0026 curl -L http://updates.jenkins-ci.org/$JENKINS_VERSION/jenkins.war -o /usr/share/jenkins/jenkins.war  \u0026\u0026 cd /tmp  \u0026\u0026 zip -g /usr/share/jenkins/jenkins.war WEB-INF/*/*  \u0026\u0026 rm -rf /tmp/WEB-INF ",
          "Name": "onbuild"
        },
        {
          "Expression": "USER jenkins ",
          "Name": "onbuild"
        }
      ]
    }
  ]
}