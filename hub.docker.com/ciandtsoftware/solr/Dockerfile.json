{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:12.04.5",
      "SourceCode": "FROM ubuntu:12.04.5",
      "Platform": "",
      "From": {
        "Image": "ubuntu:12.04.5"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "com.ciandt.vendor",
              "Value": "\"CI\u0026T Software SA\""
            },
            {
              "Key": "com.ciandt.maintainers.1",
              "Value": "\"Ivan Pinatti - @ivan_pinatti\""
            },
            {
              "Key": "com.ciandt.maintainers.2",
              "Value": "\"Thomas Bryan - @thobryan\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "readonly APT_SOURCES=\"/etc/apt/sources.list\"     \u0026\u0026 readonly UBUNTU_RELEASE_NAME=\"$(cat /etc/lsb-release | grep CODENAME | cut -d '=' -f2)\"     \u0026\u0026 sed --in-place             --regexp-extended             --expression               \"1s/^/deb mirror:\\/\\/mirrors\\.ubuntu\\.com\\/mirrors\\.txt \"${UBUNTU_RELEASE_NAME}\"-security main restricted universe multiverse\\n\\n/\"             --expression               \"1s/^/deb mirror:\\/\\/mirrors\\.ubuntu\\.com\\/mirrors\\.txt \"${UBUNTU_RELEASE_NAME}\"-backports main restricted universe multiverse\\n/\"             --expression               \"1s/^/deb mirror:\\/\\/mirrors\\.ubuntu\\.com\\/mirrors\\.txt \"${UBUNTU_RELEASE_NAME}\"-updates main restricted universe multiverse\\n/\"             --expression               \"1s/^/deb mirror:\\/\\/mirrors\\.ubuntu\\.com\\/mirrors\\.txt \"${UBUNTU_RELEASE_NAME}\" main restricted universe multiverse\\n/\"             --expression               \"1s/^/\\# Enable Ubuntu mirrors and multiverse\\n/\"             \"${APT_SOURCES}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "readonly UBUNTU_PACKAGES=\"                 curl                 \"     \u0026\u0026 apt-get update     \u0026\u0026 apt-get upgrade --assume-yes     \u0026\u0026 apt-get install --no-install-recommends                         --assume-yes                         ${UBUNTU_PACKAGES}     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SOLR_VERSION",
              "Value": "3.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOLR_USER",
              "Value": "solr"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOLR_UID",
              "Value": "8983"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOLR_PORT",
              "Value": "8983"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DRUPAL_SEARCH_API_SOLR_VERSION",
              "Value": "7.x-1.8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "readonly SOLR_PACKAGES=\"               openjdk-6-jre-headless               tomcat6               \"     \u0026\u0026 apt-get install                 --no-install-recommends                 --assume-yes                 ${SOLR_PACKAGES}     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd       --system       --gid ${SOLR_UID}       ${SOLR_USER}     \u0026\u0026 useradd         --system         --uid ${SOLR_UID}         --gid ${SOLR_USER}         ${SOLR_USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/solr     \u0026\u0026 cd /tmp/solr     \u0026\u0026 curl         --silent         --show-error         --location         --output apache-solr-${SOLR_VERSION}.tgz         https://archive.apache.org/dist/lucene/solr/${SOLR_VERSION}/apache-solr-${SOLR_VERSION}.tgz     \u0026\u0026 tar         --extract         --gunzip         --file           apache-solr-${SOLR_VERSION}.tgz         --directory           /opt     \u0026\u0026 ln         --symbolic         --force         /opt/apache-solr-${SOLR_VERSION}         /opt/solr     \u0026\u0026 curl         --silent         --show-error         --location         --output search_api_solr-${DRUPAL_SEARCH_API_SOLR_VERSION}.tar.gz         https://ftp.drupal.org/files/projects/search_api_solr-${DRUPAL_SEARCH_API_SOLR_VERSION}.tar.gz     \u0026\u0026 mkdir         --parents         /opt/solr/example/solr/conf     \u0026\u0026 tar         --extract         --gunzip         --directory         /opt/solr/example/solr/conf         --strip-components 3         --file           search_api_solr-${DRUPAL_SEARCH_API_SOLR_VERSION}.tar.gz         search_api_solr/solr-conf/3.x     \u0026\u0026 chown         --recursive         ${SOLR_USER}:${SOLR_USER}         /opt/apache-solr-${SOLR_VERSION}     \u0026\u0026 chown         --recursive         ${SOLR_USER}:${SOLR_USER}         /opt/solr     \u0026\u0026 cd /     \u0026\u0026 rm         --recursive         --force         /tmp/solr"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DUMB_INIT_VERSION",
              "Value": "1.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir       --parents       /tmp/dumb-init     \u0026\u0026 cd /tmp/dumb-init     \u0026\u0026 curl         --silent         --show-error         --location         --remote-name         https://github.com/Yelp/dumb-init/releases/download/v${DUMB_INIT_VERSION}/dumb-init_${DUMB_INIT_VERSION}_amd64.deb     \u0026\u0026 dpkg         --install         dumb-init_${DUMB_INIT_VERSION}_amd64.deb     \u0026\u0026 cd /     \u0026\u0026 rm         --force         --recursive         /tmp/dumb-init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "${SOLR_PORT}"
          ]
        },
        {
          "Name": "user",
          "User": "${SOLR_USER}"
        },
        {
          "Name": "workdir",
          "Path": "/opt/solr/example"
        },
        {
          "CmdLine": [
            "/usr/bin/dumb-init",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "java",
            "-Xmx256m",
            "-jar",
            "start.jar"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}