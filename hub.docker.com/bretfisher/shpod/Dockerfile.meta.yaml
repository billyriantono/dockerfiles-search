MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Env:
    - Key: COMPOSE_VERSION
      Value: 1.25.0
    - Key: HELM_VERSION
      Value: 3.0.0
    - Key: KUBECTL_VERSION
      Value: 1.16.3
    - Key: SHIP_VERSION
      Value: 0.40.0
    - Key: STERN_VERSION
      Value: 1.11.0
    Name: env
  - Env:
    - Key: COMPLETIONS
      Value: /usr/share/bash-completion/completions
    Name: env
  - CmdLine:
    - apk add bash bash-completion curl git jq libintl ncurses tmux vim apache2-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i s,/bin/ash,/bin/bash, /etc/passwd
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-Linux-x86_64  &&
      chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl  &&
      chmod +x /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - kubectl completion bash > $COMPLETIONS/kubectl.bash
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o /usr/local/bin/stern https://github.com/wercker/stern/releases/download/${STERN_VERSION}/stern_linux_amd64  &&
      chmod +x /usr/local/bin/stern
    Name: run
    PrependShell: true
  - CmdLine:
    - stern --completion bash > $COMPLETIONS/stern.bash
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz   | tar
      zx -C /usr/local/bin --strip-components=1 linux-amd64/helm
    Name: run
    PrependShell: true
  - CmdLine:
    - helm completion bash > $COMPLETIONS/helm.bash
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/replicatedhq/ship/releases/download/v${SHIP_VERSION}/ship_${SHIP_VERSION}_linux_amd64.tar.gz   |
      tar zx -C /usr/local/bin ship
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/static-linux/static-binaries-i386/raw/4266c69990ae11315bad7b928f85b6c8e605ef14/httping-2.4.tar.gz   |
      tar zx -C /usr/local/bin --strip-components=1 httping-2.4/httping
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp  && git clone https://github.com/ahmetb/kubectx  && cd kubectx  && mv
      kubectx /usr/local/bin/kctx  && mv kubens /usr/local/bin/kns  && mv completion/*.bash
      $COMPLETIONS  && cd ..  && rm -rf kubectx
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp  && git clone https://github.com/jonmosco/kube-ps1  && cp kube-ps1/kube-ps1.sh
      /etc/profile.d/  && rm -rf kube-ps1
    Name: run
    PrependShell: true
  - CmdLine:
    - kubectl config set-context kubernetes --namespace=default  && kubectl config
      use-context kubernetes
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  - CmdLine:
    - echo trap exit TERM > /etc/profile.d/trapterm.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/export PS1=/#export PS1=/" /etc/profile
    Name: run
    PrependShell: true
  - Env:
    - Key: HOSTIP
      Value: '"0.0.0.0"'
    - Key: KUBE_PS1_PREFIX
      Value: '""'
    - Key: KUBE_PS1_SUFFIX
      Value: '""'
    - Key: KUBE_PS1_SYMBOL_ENABLE
      Value: '"false"'
    - Key: KUBE_PS1_CTX_COLOR
      Value: '"green"'
    - Key: KUBE_PS1_NS_COLOR
      Value: '"green"'
    - Key: PS1
      Value: '"\e[1m\e[31m[\$HOSTIP] \e[32m(\$(kube_ps1)) \e[34m\u@\h\e[35m \w\e[0m\n$
        "'
    Name: env
  - CmdLine:
    - bash
    - -l
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
