MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: Youngman <58945591@qq.com>
    Name: maintainer
  - Labels:
    - Key: description
      Value: '"JumpServer集成coco和luna,使用nginx进行反向代理,不包含数据库和队列管理,需要自行准备MySQL Server或使用SQLite3."'
    Name: label
  - Key: APK_FLAGS_COMMON
    Name: arg
    Value: '"-q"'
  - Key: APK_FLAGS_PERSISTANT
    Name: arg
    Value: '"${APK_FLAGS_COMMON} --clean-protected --no-cache"'
  - Key: APK_FLAGS_DEV
    Name: arg
    Value: '"${APK_FLAGS_COMMON} --no-cache"'
  - Key: COCO_VERSION
    Name: arg
    Value: '"0.5-beta-2"'
  - CmdLine:
    - set -xe &&     apk add ${APK_FLAGS_PERSISTANT}     tini     tzdata     sqlite     nginx     supervisor     python3     openssh-client     sshpass
      &&     mkdir /etc/supervisor.d &&     rm -f /usr/bin/python &&     ln -s /usr/bin/python3
      /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe &&     apk add ${APK_FLAGS_DEV} --virtual .fetch-deps             ca-certificates             openssl             git
      &&     apk add ${APK_FLAGS_DEV} --virtual .build-deps             musl-dev             gcc             autoconf             make             python3-dev             mariadb-dev             libffi-dev             heimdal-dev             openldap-dev             jpeg-dev             freetype-dev             linux-headers
      &&    mkdir /opt &&     cd /opt &&     git clone --depth=1 https://github.com/jumpserver/jumpserver.git
      &&     cd jumpserver &&     git checkout dev &&     pip3 install -r requirements/requirements.txt
      &&     cd /opt &&     git clone https://github.com/jumpserver/coco.git &&     cd
      coco &&     git checkout dev &&     cp conf_example.py conf.py &&     mkdir
      keys &&     pip3 install -r requirements/requirements.txt &&     cd /opt &&     wget
      -q https://github.com/jumpserver/luna/releases/download/${COCO_VERSION}/luna.tar.gz
      &&     tar xf luna.tar.gz && rm -f luna.tar.gz &&     apk del ${APK_FLAGS_COMMON}
      --purge .fetch-deps &&     apk del ${APK_FLAGS_COMMON} --purge .build-deps &&     runDeps1="$(     scanelf
      --needed --nobanner --format '%n#p' --recursive /usr/local         | tr ','
      '\n'         | sort -u         | awk 'system("[ -e /usr/local/lib/" $1 " ]")
      == 0 { next } { print "so:" $1 }'         )" &&     runDeps2="$(     scanelf
      --needed --nobanner --format '%n#p' --recursive /usr/lib/python3.6         |
      tr ',' '\n'         | sort -u         | awk 'system("[ -e /usr/local/lib/" $1
      " ]") == 0 { next } { print "so:" $1 }'         )" &&     apk add --no-cache
      --virtual .jms-rundeps1 $runDeps1 &&     apk add --no-cache --virtual .jms-rundeps2
      $runDeps2
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - 2222/tcp
    - 80/tcp
    - 8080/tcp
  - Name: workdir
    Path: /opt/jumpserver
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./jms.conf
    - /etc/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./supervisord.conf
    - /etc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./config.py
    - /opt/jumpserver/
  - Name: volume
    Volumes:
    - /opt/jumpserver/logs
    - /opt/coco/logs
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/bin/supervisord
    - -n
    - -c
    - /etc/supervisord.conf
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
