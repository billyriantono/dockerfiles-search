{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "node:8.15.1-alpine",
      "SourceCode": "FROM node:8.15.1-alpine AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "node:8.15.1-alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "Z2M_VERSION",
              "Value": "9cc3740740b57f1e896139b5ffdb25be7576ad58"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk --no-cache add       gnutls       gnutls-dev       libusb       eudev     \u0026\u0026 apk --no-cache --virtual .build-deps add       coreutils       eudev-dev       build-base       git       python       bash       libusb-dev       linux-headers       wget       tar        openssl       make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root     \u0026\u0026 wget http://old.openzwave.com/downloads/openzwave-1.4.1.tar.gz     \u0026\u0026 tar zxvf openzwave-*.gz     \u0026\u0026 cd openzwave-* \u0026\u0026 make \u0026\u0026 make install     \u0026\u0026 mkdir -p /dist/lib     \u0026\u0026 mv libopenzwave.so* /dist/lib/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/package.sh",
            "/root/package.sh"
          ]
        },
        {
          "CmdLine": [
            "npm config set unsafe-perm true \u0026\u0026 npm install -g pkg     \u0026\u0026 cd /root     \u0026\u0026 git clone https://github.com/OpenZWave/Zwave2Mqtt.git      \u0026\u0026 cd Zwave2Mqtt     \u0026\u0026 git checkout ${Z2M_VERSION}     \u0026\u0026 npm install     \u0026\u0026 npm run build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root     \u0026\u0026 chmod +x package.sh \u0026\u0026 ./package.sh     \u0026\u0026 mkdir -p /dist/pkg     \u0026\u0026 mv /root/Zwave2Mqtt/pkg/* /dist/pkg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root     \u0026\u0026 git clone https://github.com/OpenZWave/open-zwave.git     \u0026\u0026 cd open-zwave     \u0026\u0026 mkdir -p /dist/db     \u0026\u0026 mv config/* /dist/db"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -R /root/* \u0026\u0026 apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"robertsLando\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add --no-cache     libstdc++      libgcc     libusb     eudev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/dist/lib/",
            "/lib/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/dist/db/",
            "/usr/local/etc/openzwave/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/dist/pkg",
            "/usr/src/app"
          ]
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        },
        {
          "Name": "expose",
          "Ports": [
            "8091"
          ]
        },
        {
          "CmdLine": [
            "/usr/src/app/zwave2mqtt"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}