{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:10.0-cudnn7-runtime",
      "SourceCode": "FROM nvidia/cuda:10.0-cudnn7-runtime",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:10.0-cudnn7-runtime"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Denis Pettens \u003cdenis.pettens@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "OPENCV_VERSION",
          "Name": "arg",
          "Value": "3.3.1"
        },
        {
          "Key": "DOTNET_SDK_VERSION",
          "Name": "arg",
          "Value": "2.1.500"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y g++ wget unzip cmake zlib1g-dev libjpeg-dev     libpng-dev libavcodec-dev libavformat-dev libswscale-dev libavresample-dev     libx264-dev libv4l-dev libxine2-dev     \u0026\u0026 wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip     \u0026\u0026 unzip ${OPENCV_VERSION}.zip \u0026\u0026 rm ${OPENCV_VERSION}.zip     \u0026\u0026 mv opencv-${OPENCV_VERSION} OpenCV     \u0026\u0026 wget https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip     \u0026\u0026 unzip ${OPENCV_VERSION}.zip \u0026\u0026 rm ${OPENCV_VERSION}.zip     \u0026\u0026 mv opencv_contrib-${OPENCV_VERSION} OpenCV_contrib     \u0026\u0026 mkdir OpenCV/build \u0026\u0026 cd OpenCV/build     \u0026\u0026 cmake         -D CMAKE_BUILD_TYPE=RELEASE         -D OPENCV_EXTRA_MODULES_PATH=../../OpenCV_contrib/modules         -D WITH_WEBP=OFF        -D WITH_JASPER=OFF         -D WITH_TIFF=OFF         -D WITH_OPENEXR=OFF         -D WITH_CUDA=OFF         -D WITH_VTK=OFF         -D WITH_GTK=OFF         -D WITH_MATLAB=OFF         -D BUILD_EXAMPLES=OFF         -D BUILD_DOCS=OFF         -D BUILD_TESTS=OFF         -D BUILD_PERF_TESTS=OFF         -D BUILD_opencv_java=OFF         -D BUILD_opencv_python=OFF         ..     \u0026\u0026 make -j $(nproc)     \u0026\u0026 make install     \u0026\u0026 ldconfig     \u0026\u0026 cd ../../ \u0026\u0026 rm -rf OpenCV OpenCV_contrib     \u0026\u0026 apt-get remove -y --purge g++ wget unzip cmake     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 apt-get clean autoclean     \u0026\u0026 rm -rf /var/lib/{apt,dpkg,cache,log}/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends wget libc6 libgcc1 libicu60     libgssapi-krb5-2 liblttng-ust0 libssl1.0.0 libstdc++6 zlib1g     \u0026\u0026 wget -O dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz     \u0026\u0026 mkdir -p /usr/share/dotnet     \u0026\u0026 tar -zxf dotnet.tar.gz -C /usr/share/dotnet     \u0026\u0026 rm dotnet.tar.gz     \u0026\u0026 ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet     \u0026\u0026 dotnet help     \u0026\u0026 apt-get remove -y --purge wget     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 apt-get clean autoclean     \u0026\u0026 rm -rf /var/lib/{apt,dpkg,cache,log}/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ASPNETCORE_URLS",
              "Value": "http://+:80"
            },
            {
              "Key": "DOTNET_RUNNING_IN_CONTAINER",
              "Value": "true"
            },
            {
              "Key": "DOTNET_USE_POLLING_FILE_WATCHER",
              "Value": "true"
            },
            {
              "Key": "NUGET_XMLDOC_MODE",
              "Value": "skip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$LD_LIBRARY_PATH:./"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}