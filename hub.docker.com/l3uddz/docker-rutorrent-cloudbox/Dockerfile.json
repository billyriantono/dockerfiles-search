{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "lsiobase/alpine:3.6",
      "SourceCode": "FROM lsiobase/alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "lsiobase/alpine:3.6"
      },
      "Commands": [
        {
          "Maintainer": "sparklyballs",
          "Name": "maintainer"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "build_version",
              "Value": "\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "MEDIAINF_VER",
          "Name": "arg",
          "Value": "\"0.7.94\""
        },
        {
          "Key": "CURL_VER",
          "Name": "arg",
          "Value": "\"7.54.1\""
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "patches/",
            "/defaults/patches/"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual=build-dependencies \tautoconf \tautomake \tcppunit-dev \tperl-dev \tfile \tg++ \tgcc \tgit \tlibressl-dev \tlibtool \tmake \tncurses-dev \u0026\u0026  apk add --no-cache \tca-certificates \tfcgi \tffmpeg \tgeoip \tgzip \tlogrotate \tnginx \tphp7 \tphp7-cgi \tphp7-fpm \tphp7-json  \tphp7-mbstring \tphp7-sockets \tphp7-pear \trtorrent \tscreen \tdtach \ttar \tunrar \tunzip \twget \tirssi \tirssi-perl \tzlib \tzlib-dev \tlibxml2-dev \tgit \tperl-archive-zip \tperl-net-ssleay \tperl-digest-sha1 \tzip \u0026\u0026 cd /tmp \u0026\u0026 mkdir curl \u0026\u0026 cd curl \u0026\u0026 wget -qO- https://curl.haxx.se/download/curl-${CURL_VER}.tar.gz | tar xz --strip 1 \u0026\u0026 ./configure --with-ssl \u0026\u0026 make -j ${NB_CORES} \u0026\u0026 make install \u0026\u0026 ldconfig /usr/bin \u0026\u0026 ldconfig /usr/lib \u0026\u0026  mkdir -p \t/usr/share/webapps/rutorrent \t/defaults/rutorrent-conf \u0026\u0026  curl -o  /tmp/rutorrent.tar.gz -L \t\"https://github.com/Novik/ruTorrent/archive/master.tar.gz\" \u0026\u0026  tar xf  /tmp/rutorrent.tar.gz -C \t/usr/share/webapps/rutorrent --strip-components=1 \u0026\u0026  mv /usr/share/webapps/rutorrent/conf/* \t/defaults/rutorrent-conf/ \u0026\u0026  rm -rf \t/defaults/rutorrent-conf/users \u0026\u0026  cd /usr/share/webapps/rutorrent/php \u0026\u0026  patch \u003c /defaults/patches/snoopy.patch \u0026\u0026  perl -MCPAN -e 'my $c = \"CPAN::HandleConfig\"; $c-\u003eload(doit =\u003e 1, autoconfig =\u003e 1); $c-\u003eedit(prerequisites_policy =\u003e \"follow\"); $c-\u003eedit(build_requires_install_policy =\u003e \"yes\"); $c-\u003ecommit' \u0026\u0026  curl -L http://cpanmin.us | perl - App::cpanminus \u0026\u0026 \tcpanm HTML::Entities XML::LibXML JSON JSON::XS \u0026\u0026  git clone git://github.com/phlooo/ruTorrent-MaterialDesign.git /usr/share/webapps/rutorrent/plugins/theme/themes/MaterialDesign \u0026\u0026  curl -o  /tmp/libmediainfo.tar.gz -L \t\"http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINF_VER}/MediaInfo_DLL_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" \u0026\u0026  curl -o  /tmp/mediainfo.tar.gz -L \t\"http://mediaarea.net/download/binary/mediainfo/${MEDIAINF_VER}/MediaInfo_CLI_${MEDIAINF_VER}_GNU_FromSource.tar.gz\" \u0026\u0026  mkdir -p \t/tmp/libmediainfo \t/tmp/mediainfo \u0026\u0026  tar xf /tmp/libmediainfo.tar.gz -C \t/tmp/libmediainfo --strip-components=1 \u0026\u0026  tar xf /tmp/mediainfo.tar.gz -C \t/tmp/mediainfo --strip-components=1 \u0026\u0026  cd /tmp/libmediainfo \u0026\u0026 \t./SO_Compile.sh \u0026\u0026  cd /tmp/libmediainfo/ZenLib/Project/GNU/Library \u0026\u0026 \tmake install \u0026\u0026  cd /tmp/libmediainfo/MediaInfoLib/Project/GNU/Library \u0026\u0026 \tmake install \u0026\u0026  cd /tmp/mediainfo \u0026\u0026 \t./CLI_Compile.sh \u0026\u0026  cd /tmp/mediainfo/MediaInfo/Project/GNU/CLI \u0026\u0026 \tmake install \u0026\u0026  apk del --purge \tbuild-dependencies \u0026\u0026  rm -rf \t/etc/nginx/conf.d/default.conf \t/tmp/* \u0026\u0026  sed -i \"s#/var/log/messages {}.*# #g\" /etc/logrotate.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/downloads"
          ]
        }
      ]
    }
  ]
}