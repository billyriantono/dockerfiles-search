{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "fermipy/fermist:11-07-00",
      "SourceCode": "FROM fermipy/fermist:11-07-00",
      "Platform": "",
      "From": {
        "Image": "fermipy/fermist:11-07-00"
      },
      "Commands": [
        {
          "Maintainer": "Matthew Wood \u003cmdwood@slac.stanford.edu\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "PYTHON_VERSION",
          "Name": "arg",
          "Value": "2.7"
        },
        {
          "Key": "CONDA_DOWNLOAD",
          "Name": "arg",
          "Value": "Miniconda-latest-Linux-x86_64.sh"
        },
        {
          "Key": "CONDA_DEPS",
          "Name": "arg",
          "Value": "\"numpy astropy scipy matplotlib pyyaml ipython jupyter pandas\""
        },
        {
          "Key": "CONDA_DEPS_EXTRA",
          "Name": "arg",
          "Value": "\"healpy subprocess32\""
        },
        {
          "Key": "PIP_DEPS",
          "Name": "arg",
          "Value": "\"\""
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'export PATH=/opt/conda/bin:$PATH' \u003e /etc/profile.d/conda.sh \u0026\u0026     curl -o miniconda.sh -L http://repo.continuum.io/miniconda/$CONDA_DOWNLOAD \u0026\u0026     /bin/bash miniconda.sh -b -p /opt/conda \u0026\u0026     rm miniconda.sh \u0026\u0026 conda config --add channels conda-forge \u0026\u0026 conda update -y conda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -y python=$PYTHON_VERSION pip pytest $CONDA_DEPS \u0026\u0026     conda install -y $CONDA_DEPS_EXTRA \u0026\u0026     if [[ -n $PIP_DEPS ]]; then pip install $PIP_DEPS; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -y fermipy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /workdir"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "FERMI_DIFFUSE_DIR",
              "Value": "/home/externals/diffuseModels/v5r0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SLAC_ST_BUILD",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INST_DIR",
              "Value": "/home/ScienceTools"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLAST_EXT",
              "Value": "/home/externals"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MATPLOTLIBRC",
              "Value": "/home/matplotlib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"source $INST_DIR/bin/redhat6-x86_64-64bit-gcc44-Optimized/_setup.sh\" \u003e\u003e /root/.bashrc \u0026\u0026     mkdir /home/matplotlib \u0026\u0026 echo \"backend      : Agg\" \u003e\u003e /home/matplotlib/matplotlibrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usleep 10 \u0026\u0026 /opt/conda/bin/jupyter notebook --notebook-dir=/workdir --ip='*' --port=8888 --no-browser --allow-root"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash",
            "--login",
            "-c"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}