{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "\"Matias Esteban\" \u003cestebanmatias92@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y ca-certificates curl cmake gawk libmysqlclient-dev         libxml2-dev libmcrypt-dev libicu-dev openssl build-essential binutils-dev         libcap-dev zlib1g-dev libtbb-dev libonig-dev libpcre3-dev         autoconf libtool libcurl4-openssl-dev wget memcached         libreadline-dev libncurses5-dev libmemcached-dev libbz2-dev         libc-client2007e-dev php5-mcrypt php5-imagick libgoogle-perftools-dev         libcloog-ppl-dev libelf-dev libdwarf-dev libunwind8-dev subversion         libtbb2 g++-4.8 gcc-4.8 libjemalloc-dev         libc6-dev libmpfr4 libgcc1 binutils         libc6 libc-dev-bin libc-bin libgomp1         libstdc++-4.8-dev libstdc++6         libarchive13 cmake-data libacl1 libattr1         g++ cpp gcc make libboost-thread1.55.0         libboost-thread-dev libgd2-xpm-dev         pkg-config libboost-system1.55-dev libboost-context1.55-dev         libboost-program-options1.55-dev libboost-filesystem1.55-dev libboost-regex1.55-dev         libmagickwand-dev libiberty-dev libevent-dev libxslt-dev libgoogle-glog-dev         automake libldap2-dev libkrb5-dev libyaml-dev gperf ocaml-native-compilers         --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y git-core autoconf gcc libc-dev make pkg-config --no-install-recommends \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "/etc/hhvm/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $PHP_INI_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HHVM_VERSION",
              "Value": "HHVM-3.7.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 git clone git://github.com/facebook/hhvm.git /tmp/hhvm     \u0026\u0026 cd /tmp/hhvm     \u0026\u0026 git checkout tags/${HHVM_VERSION}     \u0026\u0026 git submodule update --init --recursive     \u0026\u0026 cmake . -DMYSQL_UNIX_SOCK_ADDR=/dev/null     \u0026\u0026 make -j\"$(nproc)\"     \u0026\u0026 make install     \u0026\u0026 make clean     \u0026\u0026 rm -rf $(pwd)     \u0026\u0026 cd -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/update-alternatives --install /usr/bin/php php /usr/local/bin/hhvm 60"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "hhvm-ext-*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "hhvm",
            "-a"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}