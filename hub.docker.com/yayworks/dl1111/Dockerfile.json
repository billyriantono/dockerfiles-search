{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nimbix/base-ubuntu-nvidia:8.0-cudnn5-devel",
      "SourceCode": "FROM nimbix/base-ubuntu-nvidia:8.0-cudnn5-devel",
      "Platform": "",
      "From": {
        "Image": "nimbix/base-ubuntu-nvidia:8.0-cudnn5-devel"
      },
      "Commands": [
        {
          "Maintainer": "Nimbix, Inc. \u003csupport@nimbix.net\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     build-essential     curl     wget     libibverbs-dev     libibverbs1     librdmacm1     librdmacm-dev     rdmacm-utils     libibmad-dev     libibmad5     byacc     libibumad-dev     libibumad3     flex \u0026\u0026     apt-get install -y python3.4 \u0026\u0026     apt-get install -y python3-pip \u0026\u0026     apt-get install -y nodejs-legacy \u0026\u0026     apt-get install -y npm \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MPI_VERSION",
              "Value": "2.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./install-ompi.sh",
            "/tmp/install-ompi.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -x /tmp/install-ompi.sh \u0026\u0026     rm -rf /tmp/install-ompi.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "OSU_VERSION",
              "Value": "5.3.2"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./install-osu.sh",
            "/tmp/install-osu.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -x /tmp/install-osu.sh \u0026\u0026 rm -rf /tmp/install-osu.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./yb-sw-config.NIMBIX.x8664.turbotensor.sh",
            "/tmp/yb-sw-config.NIMBIX.x8664.turbotensor.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -x /tmp/yb-sw-config.NIMBIX.x8664.turbotensor.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./jupyterhub_config.py",
            "/usr/local"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./wetty.tar.gz",
            "/usr/local"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config.sh",
            "/usr/local/config.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./start.sh",
            "/usr/local/start.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./setup.x",
            "/usr/local/setup.x"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./jpy_lab_start.sh",
            "/usr/local/jpy_lab_start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/config.sh \u0026\u0026 chown nimbix.nimbix /usr/local/config.sh \u0026\u0026     chmod +x /usr/local/start.sh \u0026\u0026 chown nimbix.nimbix /usr/local/start.sh \u0026\u0026     chmod +x /usr/local/setup.x \u0026\u0026 chown nimbix.nimbix /usr/local/setup.x \u0026\u0026     chmod +x /usr/local/jpy_lab_start.sh \u0026\u0026     wget -O- -q http://s3tools.org/repo/deb-all/stable/s3tools.key | sudo apt-key add - \u0026\u0026     sudo wget -O/etc/apt/sources.list.d/s3tools.list http://s3tools.org/repo/deb-all/stable/s3tools.list \u0026\u0026     sudo apt-get update \u0026\u0026     sudo apt-get install s3cmd \u0026\u0026     sudo apt-get install -y gfortran \u0026\u0026     sudo apt-get update \u0026\u0026     sudo apt-get install -y python-qt4 \u0026\u0026     /usr/local/anaconda3/envs/tensorflow/bin/pip install --upgrade pip \u0026\u0026     /usr/local/anaconda3/envs/tensorflow/bin/pip install git+git://github.com/Hvass-Labs/scikit-optimize.git@dd7433da068b5a2509ef4ea4e5195458393e6555 \u0026\u0026     echo \"Y\" | /usr/local/anaconda3/envs/tensorflow/bin/conda install tensorflow-gpu \u0026\u0026     echo \"Y\" | /usr/local/anaconda3/envs/tensorflow/bin/conda install pytorch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=/usr/local/cuda/bin:/usr/local/anaconda3/envs/tensorflow/bin:$PATH' \u003e\u003e /home/nimbix/.bashrc \u0026\u0026  echo 'export PYTHONPATH=/usr/local/anaconda3/envs/tensorflow/lib/python3.6:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/prettytensor-0.7.2-py3.6.egg:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/enum34-1.1.6-py3.6.egg:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/matplotlib:$PYTHONPATH' \u003e\u003e /home/nimbix/.bashrc \u0026\u0026  echo 'export PATH=/usr/local/cuda/bin:/usr/local/anaconda3/envs/tensorflow/bin:$PATH' \u003e\u003e /etc/skel/.bashrc \u0026\u0026  echo 'export PYTHONPATH=/usr/local/anaconda3/envs/tensorflow/lib/python3.6:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/prettytensor-0.7.2-py3.6.egg:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/enum34-1.1.6-py3.6.egg:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/matplotlib:$PYTHONPATH' \u003e\u003e /etc/skel/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/nimbix"
        },
        {
          "CmdLine": [
            "/usr/bin/wget https://s3.amazonaws.com/yb-lab-cfg/admin/yb-admin.NIMBIX.x86_64.tar \u0026\u0026 tar xvf yb-admin.NIMBIX.x86_64.tar -C /usr/bin \u0026\u0026 sudo apt-get install -y tcl \u0026\u0026 sudo apt-get install -y git \u0026\u0026 sudo apt-get install -y awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./NAE/help.html",
            "/etc/NAE/help.html"
          ]
        }
      ]
    }
  ]
}