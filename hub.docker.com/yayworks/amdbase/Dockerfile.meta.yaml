MetaArgs: null
Stages:
- BaseName: nvidia/cuda:9.1-cudnn7-devel-ubuntu16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Nimbix, Inc."'
    Name: label
  - Key: SERIAL_NUMBER
    Name: arg
    Value: null
  - Env:
    - Key: SERIAL_NUMBER
      Value: ${SERIAL_NUMBER:-20180705.1900}
    Name: env
  - Key: GIT_BRANCH
    Name: arg
    Value: null
  - Env:
    - Key: GIT_BRANCH
      Value: ${GIT_BRANCH:-master}
    Name: env
  - CmdLine:
    - 'apt-get -y update &&     apt-get -y install curl &&     curl -H ''Cache-Control:
      no-cache''         https://raw.githubusercontent.com/nimbix/image-common/master/install-nimbix.sh         |
      bash -s -- --setup-nimbix-desktop --image-common-branch $GIT_BRANCH'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install cuda-samples-9-1 && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod u+s /usr/lib/libdlfaker.so /usr/lib/libvglfaker.so
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get -y install software-properties-common python-software-properties
      &&     apt-get install -y     build-essential     awscli     curl     git     make     tcl     wget     libibverbs-dev     libibverbs1     librdmacm1     librdmacm-dev     rdmacm-utils     libibmad-dev     libibmad5     byacc     libibumad-dev     libibumad3     flex     gfortran
      &&     apt-get install -y python3.4 &&     apt-get install -y python3-pip &&     apt-get
      install -y python-qt4 &&     apt-get install -y nodejs-legacy &&     apt-get
      install -y npm &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O- -q http://s3tools.org/repo/deb-all/stable/s3tools.key | apt-key add
      -
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O/etc/apt/sources.list.d/s3tools.list http://s3tools.org/repo/deb-all/stable/s3tools.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y s3cmd
    Name: run
    PrependShell: true
  - Env:
    - Key: MPI_VERSION
      Value: 2.0.1
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./install-ompi.sh
    - /tmp/install-ompi.sh
  - CmdLine:
    - /bin/bash -x /tmp/install-ompi.sh &&     rm -rf /tmp/install-ompi.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: OSU_VERSION
      Value: 5.3.2
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./install-osu.sh
    - /tmp/install-osu.sh
  - CmdLine:
    - /bin/bash -x /tmp/install-osu.sh && rm -rf /tmp/install-osu.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./yb-sw-config.NIMBIX.x8664.turbotensor.sh
    - /tmp/yb-sw-config.NIMBIX.x8664.turbotensor.sh
  - CmdLine:
    - /bin/bash -x /tmp/yb-sw-config.NIMBIX.x8664.turbotensor.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/nimbix
  - CmdLine:
    - /usr/bin/wget https://s3.amazonaws.com/yb-lab-cfg/admin/yb-admin.NIMBIX.x86_64.tar
      &&     tar xvf yb-admin.NIMBIX.x86_64.tar -C /usr/bin
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./jupyterhub_config.py
    - /usr/local
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./wetty.tar.gz
    - /usr/local
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./config.sh
    - /usr/local/config.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./start.sh
    - /usr/local/start.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./setup.x
    - /usr/local/setup.x
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./jpy_lab_start.sh
    - /usr/local/jpy_lab_start.sh
  - CmdLine:
    - chmod +x /usr/local/config.sh && chown nimbix.nimbix /usr/local/config.sh &&     chmod
      +x /usr/local/start.sh && chown nimbix.nimbix /usr/local/start.sh &&     chmod
      +x /usr/local/setup.x && chown nimbix.nimbix /usr/local/setup.x &&     chmod
      +x /usr/local/jpy_lab_start.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y r-base &&     sudo apt-get install -y r-base-dev &&     sudo
      apt-get install -y gdebi-core
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/wget https://download2.rstudio.org/rstudio-server-1.1.442-amd64.deb
      &&     echo "y" |sudo gdebi rstudio-server-1.1.442-amd64.deb &&     echo "auth-minimum-user-id=500"
      >> /etc/rstudio/rserver.conf &&     echo "Y" | /usr/local/anaconda3/bin/conda
      install -c r r-irkernel &&     rm rstudio-server-1.1.442-amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - echo " " | sudo apt-add-repository ppa:octave/stable &&     sudo apt-get update
      &&     sudo apt-get install -y octave &&     sudo apt-get build-dep -y octave
      &&     echo "Y" | /usr/local/anaconda3/bin/conda install -c conda-forge octave_kernel
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get update &&     sudo apt-get install -y scilab &&     sudo /usr/local/anaconda3/bin/pip
      install msgpack &&     sudo /usr/local/anaconda3/bin/pip install scilab_kernel
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo /usr/local/anaconda3/bin/pip install jupyter_c_kernel &&     sudo /usr/local/anaconda3/bin/install_c_kernel
    Name: run
    PrependShell: true
  - CmdLine:
    - echo " " | sudo apt-add-repository ppa:webupd8team/atom &&     sudo apt-get
      update &&     sudo apt-get install -y atom &&     apm install teletype &&     apm
      install hydrogen &&     apm install intentions &&     apm install busy-signal
      &&     apm install linter-ui-default &&     apm install linter &&     apm install
      linter-python &&     apm install language-opencl &&     apm install file-icons
      &&     apm install atom-live-server
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/images &&     mkdir -p /opt/icons
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local
  - CmdLine:
    - sudo wget https://s3.amazonaws.com/gen-purpose/AOCC-1.2-Fortran-Prerequisites.tar.xz
      &&     sudo wget https://s3.amazonaws.com/gen-purpose/AOCC-1.2-FortranPlugin.tar.xz
      &&     sudo wget https://s3.amazonaws.com/gen-purpose/AOCC-1.2-Compiler.tar.xz
      &&     sudo tar xf AOCC-1.2-Compiler.tar.xz &&     sudo wget https://s3.amazonaws.com/gen-purpose/AMDuProf_Linux_x64_1.2.275.tar.gz
      &&     sudo tar xvfz AMDuProf_Linux_x64_1.2.275.tar.gz &&     sudo wget https://s3.amazonaws.com/gen-purpose/AMD-LIBM-Linux-3.2.1.tar.gz
      &&     sudo tar xvfz AMD-LIBM-Linux-3.2.1.tar.gz &&     sudo wget https://s3.amazonaws.com/gen-purpose/AMD-BLIS-Linux-0.95-Beta.tar.gz
      &&     sudo tar xvfz AMD-BLIS-Linux-0.95-Beta.tar.gz &&     sudo rm -rf /usr/local/*tar*
      &&     cd AOCC-1.2-Compiler &&     sudo ./install.sh &&     sudo ln -s /usr/local/AOCC-1.2-Compiler/AOCC-1.2-FortranPlugin/dragonegg.so
      /usr/lib/dragonegg.so &&     sudo ln -s /usr/local/amdlibm-3.2.1/lib/dynamic/libamdlibm.so
      /usr/lib/libamdlibm.so &&     sudo ln -s /usr/local/amd-blis-0.95-beta/lib/libblis.so
      /usr/lib/libblis.so &&     sudo cp -r /usr/local/amd-blis-0.95-beta/include/blis
      /usr/include
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./scripts
    - /usr/local/scripts
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./NAE/nvidia.cfg
    - /etc/NAE/nvidia.cfg
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - NAE/AppDef.json
    - /etc/NAE/AppDef.json
  - CmdLine:
    - curl --fail -X POST -d @/etc/NAE/AppDef.json https://api.jarvice.com/jarvice/validate
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./NAE/screenshot.png
    - /etc/NAE/screenshot.png
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./Wallpaper-yaybench_1280x720.png
    - /opt/images/Wallpaper.png
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./yaymark_57x57.png
    - /opt/icons/yaybench.png
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./xfce4-desktop.xml
    - /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./xfce4-panel.xml
    - /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml
  - Key: SERIAL_NUMBER
    Name: arg
    Value: null
  - Env:
    - Key: SERIAL_NUMBER
      Value: ${SERIAL_NUMBER:-20180705.1900}
    Name: env
  - CmdLine:
    - /usr/local/scripts/start.sh
    Name: cmd
    PrependShell: true
  - CmdLine:
    - /usr/local/scripts/update_drivers.sh
    Name: cmd
    PrependShell: true
  - Name: workdir
    Path: /home/nimbix
  - CmdLine:
    - rm -rf *
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH=/usr/local/cuda/bin:/usr/local/anaconda3/envs/tensorflow/bin:$PATH'
      >> /home/nimbix/.bashrc &&  echo 'export PYTHONPATH=/usr/local/anaconda3/envs/tensorflow/lib/python3.6:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/prettytensor-0.7.2-py3.6.egg:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/enum34-1.1.6-py3.6.egg:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/matplotlib:$PYTHONPATH'
      >> /home/nimbix/.bashrc &&  echo 'export PATH=/usr/local/cuda/bin:/usr/local/anaconda3/envs/tensorflow/bin:$PATH'
      >> /etc/skel/.bashrc &&  echo 'export PYTHONPATH=/usr/local/anaconda3/envs/tensorflow/lib/python3.6:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/prettytensor-0.7.2-py3.6.egg:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/enum34-1.1.6-py3.6.egg:/usr/local/anaconda3/envs/tensorflow/lib/python3.6/site-packages/matplotlib:$PYTHONPATH'
      >> /etc/skel/.bashrc &&  echo 'export PATH=$PATH:/usr/local/AMDuProf_Linux_x64_1.2.275/bin'
      >> /etc/skel/.bashrc &&  echo 'export PATH=$PATH:/usr/local/AOCC-1.2-Compiler/bin'
      >> /etc/skel/.bashrc &&  echo 'source /usr/local/setenv_AOCC.sh' >> /etc/skel/.bashrc
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - Name: expose
    Ports:
    - "5901"
  - Name: expose
    Ports:
    - "443"
  From:
    Image: nvidia/cuda:9.1-cudnn7-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.1-cudnn7-devel-ubuntu16.04
