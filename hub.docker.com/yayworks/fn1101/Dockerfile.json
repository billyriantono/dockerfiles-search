{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nimbix/base-ubuntu-nvidia:8.0-cudnn5-devel",
      "SourceCode": "FROM nimbix/base-ubuntu-nvidia:8.0-cudnn5-devel",
      "Platform": "",
      "From": {
        "Image": "nimbix/base-ubuntu-nvidia:8.0-cudnn5-devel"
      },
      "Commands": [
        {
          "Maintainer": "Nimbix, Inc. \u003csupport@nimbix.net\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "SERIAL_NUMBER",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "SERIAL_NUMBER",
              "Value": "${SERIAL_NUMBER:-20180927.2100}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install software-properties-common python-software-properties \u0026\u0026     apt-get install -y     build-essential     awscli     curl     git     make     tcl     wget     libibverbs-dev     libibverbs1     librdmacm1     librdmacm-dev     rdmacm-utils     libibmad-dev     libibmad5     byacc     libibumad-dev     libibumad3     flex     gfortran \u0026\u0026     apt-get install -y python3.4 \u0026\u0026     apt-get install -y python3-pip \u0026\u0026     apt-get install -y python-qt4 \u0026\u0026     apt-get install -y nodejs-legacy \u0026\u0026     apt-get install -y npm \u0026\u0026     apt-get install apt-transport-https \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O- -q http://s3tools.org/repo/deb-all/stable/s3tools.key | apt-key add - \u0026\u0026     wget -O/etc/apt/sources.list.d/s3tools.list http://s3tools.org/repo/deb-all/stable/s3tools.list \u0026\u0026     apt-get update \u0026\u0026     apt-get -y install s3cmd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MPI_VERSION",
              "Value": "2.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./install-ompi.sh",
            "/tmp/install-ompi.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -x /tmp/install-ompi.sh \u0026\u0026     rm -rf /tmp/install-ompi.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "OSU_VERSION",
              "Value": "5.3.2"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./install-osu.sh",
            "/tmp/install-osu.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -x /tmp/install-osu.sh \u0026\u0026 rm -rf /tmp/install-osu.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./yb-sw-config.NIMBIX.x8664.turbotensor.sh",
            "/tmp/yb-sw-config.NIMBIX.x8664.turbotensor.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -x /tmp/yb-sw-config.NIMBIX.x8664.turbotensor.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/nimbix"
        },
        {
          "CmdLine": [
            "/usr/bin/wget https://s3.amazonaws.com/yb-lab-cfg/admin/yb-admin.NIMBIX.x86_64.tar \u0026\u0026     tar xvf yb-admin.NIMBIX.x86_64.tar -C /usr/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./jupyterhub_config.py",
            "/usr/local"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./wetty.tar.gz",
            "/usr/local"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config.sh",
            "/usr/local/config.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./start.sh",
            "/usr/local/start.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./setup.x",
            "/usr/local/setup.x"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./jpy_lab_start.sh",
            "/usr/local/jpy_lab_start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/config.sh \u0026\u0026 chown nimbix.nimbix /usr/local/config.sh \u0026\u0026     chmod +x /usr/local/start.sh \u0026\u0026 chown nimbix.nimbix /usr/local/start.sh \u0026\u0026     chmod +x /usr/local/setup.x \u0026\u0026 chown nimbix.nimbix /usr/local/setup.x \u0026\u0026     chmod +x /usr/local/jpy_lab_start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y r-base \u0026\u0026     sudo apt-get install -y r-base-dev \u0026\u0026     sudo apt-get install -y gdebi-core"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/wget https://download2.rstudio.org/rstudio-server-1.1.442-amd64.deb \u0026\u0026     echo \"y\" |sudo gdebi rstudio-server-1.1.442-amd64.deb \u0026\u0026     echo \"auth-minimum-user-id=500\" \u003e\u003e /etc/rstudio/rserver.conf \u0026\u0026     echo \"Y\" | /usr/local/anaconda3/bin/conda install -c r r-irkernel \u0026\u0026     rm rstudio-server-1.1.442-amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \" \" | sudo apt-add-repository ppa:octave/stable \u0026\u0026     sudo apt-get update \u0026\u0026     sudo apt-get install -y octave \u0026\u0026     sudo apt-get build-dep -y octave \u0026\u0026     echo \"Y\" | /usr/local/anaconda3/bin/conda install -c conda-forge octave_kernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get update \u0026\u0026     sudo apt-get install -y scilab \u0026\u0026     sudo /usr/local/anaconda3/bin/pip install msgpack \u0026\u0026     sudo /usr/local/anaconda3/bin/pip install scilab_kernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo /usr/local/anaconda3/bin/pip install jupyter_c_kernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Y\" |sudo /usr/local/anaconda3/bin/conda update -n base conda \u0026\u0026     echo \"Y\" |sudo /usr/local/anaconda3/bin/conda create -n fenicsproject -c conda-forge fenics mshr"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=/usr/local/cuda/bin:/usr/local/anaconda3/envs/fenicsproject/bin:$PATH' \u003e\u003e /etc/skel/.bashrc \u0026\u0026  echo 'export PYTHONPATH=/usr/local/anaconda3/envs/fenicsproject/lib:/usr/local/anaconda3/envs/fenicsproject/lib/python3.6:/usr/local/anaconda3/envs/fenicsproject/lib/python3.6/site-packages/:/usr/local/anaconda3/envs/fenicsproject/lib/python3.6/site-packages/matplotlib:$PYTHONPATH' \u003e\u003e /etc/skel/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8787"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./NAE/help.html",
            "/etc/NAE/help.html"
          ]
        }
      ]
    }
  ]
}