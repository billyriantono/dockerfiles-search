MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: Bilal Sheikh <bilal@techtraits.com>
    Name: maintainer
  - Name: expose
    Ports:
    - "8080"
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Env:
    - Key: JENKINS_HOME
      Value: /var/jenkins
    Name: env
  - Env:
    - Key: HOME
      Value: /var/jenkins
    Name: env
  - CmdLine:
    - /usr/local/bin/docker-wrapper
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - java -jar /usr/share/jenkins/jenkins.war
    Name: cmd
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-wrapper.sh
    - /usr/local/bin/docker-wrapper
  - CmdLine:
    - apt-get update && apt-get -y upgrade && apt-get -y install software-properties-common
      && add-apt-repository ppa:webupd8team/java -y && apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - (echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true
      | /usr/bin/debconf-set-selections) && apt-get install -y oracle-java8-installer
      oracle-java8-set-default
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - Env:
    - Key: PATH
      Value: $JAVA_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - echo deb http://archive.ubuntu.com/ubuntu precise universe > /etc/apt/sources.list.d/universe.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get install -qqy wget curl git iptables ca-certificates
      apparmor
    Name: run
    PrependShell: true
  - CmdLine:
    - echo deb http://pkg.jenkins.io/debian-stable binary/ >> /etc/apt/sources.list     &&
      wget -q -O - http://pkg.jenkins.io/debian-stable/jenkins.io.key | apt-key add
      -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get install -y jenkins=2.89.2
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-latest.tgz   &&
      tar --strip-components=1 -xvzf docker-latest.tgz -C /usr/local/bin   && chmod
      +x /usr/local/bin/docker
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
