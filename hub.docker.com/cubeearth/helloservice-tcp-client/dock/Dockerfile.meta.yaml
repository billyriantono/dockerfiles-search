MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Labels:
    - Key: Maintainer
      Value: '"CTI Guarulhos <ctiguarulhos@ifsp.edu.br>"'
    - Key: Description
      Value: '"Docker Image for moodle."'
    Name: label
  - Env:
    - Key: TZ
      Value: America/Sao_Paulo
    Name: env
  - Env:
    - Key: DB_HOST
      Value: moodledb
    Name: env
  - Env:
    - Key: DB_PORT
      Value: "5432"
    Name: env
  - Env:
    - Key: DB_DATABASE
      Value: moodle
    Name: env
  - Env:
    - Key: DB_USERNAME
      Value: moodle
    Name: env
  - Env:
    - Key: LANG
      Value: pt_BR.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: pt_BR.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: pt_BR.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: pt_BR.UTF-8
    - Key: LANGUAGE
      Value: pt_BR.UTF-8
    Name: env
  - CmdLine:
    - apk --no-cache add tzdata gettext git php7 php7-fpm php7-pdo php7-json php7-openssl
      php7-curl     php7-zlib php7-xml php7-phar php7-intl php7-dom php7-xmlreader
      php7-ctype php7-simplexml php7-zip php7-pgsql     php7-mbstring php7-gd php7-xmlwriter
      php7-tokenizer php7-memcached php7-ftp php7-iconv php7-fileinfo     nginx supervisor
      curl bash nano openssl postgresql-client ca-certificates wget php7-xmlrpc php7-soap
      php7-opcache &&     wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
      &&     wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.25-r0/glibc-2.25-r0.apk
      &&     wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.25-r0/glibc-bin-2.25-r0.apk
      &&     wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.25-r0/glibc-i18n-2.25-r0.apk
      &&     apk add glibc-bin-2.25-r0.apk glibc-i18n-2.25-r0.apk glibc-2.25-r0.apk
      &&     cp /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime &&     echo "America/Sao_Paulo"
      > /etc/timezone &&     curl -sS https://getcomposer.org/installer     | php
      -- --install-dir=/usr/local/bin --filename=composer &&     mkdir /moodledata
      &&     wget https://github.com/CTIGuarulhos/moodle-ifsp/archive/moodle-branch-3.7.3_blocksuap.zip
      -O /moodle.zip &&     unzip moodle.zip &&     rm moodle.zip &&     mv moodle-ifsp-moodle-branch-3.7.3_blocksuap
      src &&     apk del git tzdata jq
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - wait-for-it.sh
    - start.sh
    - locale.md
    - /
  - CmdLine:
    - chmod u+x /wait-for-it.sh &&     chmod u+x /start.sh &&     cat /locale.md |
      xargs -i /usr/glibc-compat/bin/localedef -i {} -f UTF-8 {}.UTF-8
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /moodledata
    - /etc/letsencrypt/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/crontab
    - /etc/crontabs/root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/fpm-pool.conf
    - /etc/php7/php-fpm.d/zzz_custom.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php.ini
    - /etc/php7/conf.d/zzz_custom.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - CmdLine:
    - chown root:root /etc/crontabs/root && /usr/sbin/crond -f
    Name: cmd
    PrependShell: true
  - Name: workdir
    Path: /src
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  - CmdLine:
    - /wait-for-it.sh $DB_HOST:$DB_PORT --strict --timeout=120 -- /start.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
