{
  "MetaArgs": [
    {
      "Key": "NODE_VERSION",
      "DefaultValue": "12.10.0",
      "ProvidedValue": null,
      "Value": "12.10.0"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:${NODE_VERSION}",
      "SourceCode": "FROM node:${NODE_VERSION}",
      "Platform": "",
      "From": {
        "Image": "node:${NODE_VERSION}"
      },
      "Commands": [
        {
          "CmdLine": [
            "groupadd --system nightmare \u0026\u0026 useradd --system --create-home --gid nightmare nightmare"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026       apt-get install -y libgtk2.0-0 libgconf-2-4       libasound2 libxtst6 libxss1 libnss3 xvfb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y wget --no-install-recommends     \u0026\u0026 wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -     \u0026\u0026 sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google.list'     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y google-chrome-unstable       --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt-get purge --auto-remove -y curl     \u0026\u0026 rm -rf /src/*.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r pptruser \u0026\u0026 useradd -r -g pptruser -G audio,video pptruser     \u0026\u0026 mkdir -p /home/pptruser/Downloads     \u0026\u0026 chown -R pptruser:pptruser /home/pptruser     \u0026\u0026 chown -R pptruser:pptruser /home/pptruser"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/codecept"
          ]
        },
        {
          "CmdLine": [
            "chown -R pptruser:pptruser /codecept"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "runuser -l pptruser -c 'npm install --loglevel=warn --prefix /codecept'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /codecept/bin/codecept.js /usr/local/bin/codeceptjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tests"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tests"
        },
        {
          "Env": [
            {
              "Key": "CODECEPT_ARGS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUN_MULTIPLE",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NO_OF_WORKERS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOST",
              "Value": "selenium"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/codecept/docker/entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "bash",
            "/codecept/docker/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}