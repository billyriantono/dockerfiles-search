{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKER_GEN_VERSION",
              "Value": "0.7.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update bash curl     \u0026\u0026 curl -L         https://github.com/jwilder/docker-gen/releases/download/$DOCKER_GEN_VERSION/docker-gen-linux-amd64-$DOCKER_GEN_VERSION.tar.gz         | tar -xzv -C /usr/local/bin     \u0026\u0026 apk add gcc git py-pip py-setuptools python libffi-dev musl-dev openssl openssl-dev python-dev         \u0026\u0026 pip install git+git://github.com/zenhack/simp_le.git         \u0026\u0026 apk del gcc git py-pip libffi-dev musl-dev openssl-dev python-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBUG",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_HOST",
              "Value": "unix:///var/run/docker.sock"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/output"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./app",
            "/app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "/app/entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}