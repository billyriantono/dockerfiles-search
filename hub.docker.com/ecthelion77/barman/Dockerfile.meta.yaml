MetaArgs: null
Stages:
- BaseName: golang:1.8-jessie
  Commands:
  - Key: GOSU_VERSION
    Name: arg
    Value: "1.7"
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add
      - &&      sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg
      main" >> /etc/apt/sources.list.d/pgdg.list' &&      apt-get update &&      apt-get
      install -y libffi-dev libssl-dev postgresql-client-10=10.2\* barman=2.3-2.pgdg80+1
      openssh-server
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install cron
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./crontab
    - /etc/cron.d/barman
  - CmdLine:
    - rm -f /etc/cron.daily/*
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r postgres --gid=999   && useradd -r -g postgres -d /home/postgres
      --uid=999 postgres   && mkdir /home/postgres   && chown -R postgres:postgres
      /home/postgres
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./bin
    - /usr/local/bin/barman_docker
  - CmdLine:
    - chmod +x /usr/local/bin/barman_docker/*   && ls /usr/local/bin/barman_docker
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./metrics
    - /go
  - CmdLine:
    - cd /go && go build /go/main.go
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/backups
  - CmdLine:
    - /usr/local/bin/barman_docker/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: golang:1.8-jessie
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.8-jessie
