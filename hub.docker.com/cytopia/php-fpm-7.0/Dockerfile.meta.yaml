MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Maintainer: '"cytopia" <cytopia@everythingcli.org>'
    Name: maintainer
  - Labels:
    - Key: name
      Value: '"cytopia''s PHP-FPM 7.0 Image"'
    - Key: image
      Value: '"php-fpm-7.0"'
    - Key: vendor
      Value: '"cytopia"'
    - Key: license
      Value: '"MIT"'
    - Key: build-date
      Value: '"2017-09-09"'
    Name: label
  - Env:
    - Key: MY_USER
      Value: '"devilbox"'
    - Key: MY_GROUP
      Value: '"devilbox"'
    - Key: MY_UID
      Value: '"1000"'
    - Key: MY_GID
      Value: '"1000"'
    Name: env
  - Env:
    - Key: MY_CFG_DIR_PHP_CUSTOM
      Value: '"/etc/php-custom.d"'
    Name: env
  - Env:
    - Key: MY_LOG_DIR
      Value: '"/var/log/php"'
    - Key: MY_LOG_FILE_XDEBUG
      Value: '"/var/log/php/xdebug.log"'
    - Key: MY_LOG_FILE_ACC
      Value: '"/var/log/php/www-access.log"'
    - Key: MY_LOG_FILE_ERR
      Value: '"/var/log/php/www-error.log"'
    - Key: MY_LOG_FILE_SLOW
      Value: '"/var/log/php/www-slow.log"'
    - Key: MY_LOG_FILE_FPM_ERR
      Value: '"/var/log/php/php-fpm.err"'
    Name: env
  - CmdLine:
    - "groupadd -g ${MY_GID} -r ${MY_GROUP} && \tadduser -u ${MY_UID} -m -s /bin/bash
      -g ${MY_GROUP} ${MY_USER}"
    Name: run
    PrependShell: true
  - CmdLine:
    - "yum -y update && \tyum -y install deltarpm && \tyum -y install epel-release
      && \trpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi && \trpm -ivh
      http://rpms.famillecollet.com/enterprise/remi-release-7.rpm && \tyum-config-manager
      --enable extras && \tyum-config-manager --enable epel && \tyum-config-manager
      --enable remi && \tyum-config-manager --disable remi-php55 && \tyum-config-manager
      --disable remi-php56 && \tyum-config-manager --enable remi-php70 && \tyum-config-manager
      --disable remi-php71 && \trpm -ivh https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm
      && \tyum-config-manager --enable pgdg96 && \t( \t\techo \"[mongodb-org-3.4]\";
      \t\techo \"name=MongoDB Repository\"; \t\techo \"baseurl=https://repo.mongodb.org/yum/redhat/7Server/mongodb-org/3.4/x86_64/\";
      \t\techo \"gpgcheck=1\"; \t\techo \"enabled=1\"; \t\techo \"gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc\";
      \t) > /etc/yum.repos.d/mongodb.repo && \tyum clean all && \t(rm /var/cache/yum/x86_64/7/timedhosts
      2>/dev/null || true) && \t(rm /var/cache/yum/x86_64/7/timedhosts.txt 2>/dev/null
      || true)"
    Name: run
    PrependShell: true
  - CmdLine:
    - "yum -y update && \twhile true; do \t\tif yum -y install \t\tphp \t\tphp-cli
      \t\tphp-fpm \t\t\t\tphp-bcmath \t\tphp-common \t\tphp-gd \t\tphp-gmp \t\tphp-imap
      \t\tphp-intl \t\tphp-ldap \t\tphp-mbstring \t\tphp-mcrypt \t\tphp-mysqli \t\tphp-mysqlnd
      \t\tphp-opcache \t\tphp-pdo \t\tphp-pear \t\tphp-pgsql \t\tphp-phalcon3 \t\tphp-pspell
      \t\tphp-recode \t\tphp-redis \t\tphp-soap \t\tphp-tidy \t\tphp-xml \t\tphp-xmlrpc
      \t\t\t\tphp-pecl-amqp \t\tphp-pecl-apcu \t\tphp-pecl-imagick \t\tphp-pecl-memcache
      \t\tphp-pecl-memcached \t\tphp-pecl-mongodb \t\tphp-pecl-uploadprogress \t\tphp-pecl-xdebug
      \t\tphp-pecl-zip \t\t\t\tpostfix \t\t\t\tsocat \t\t\t\t; then \t\t\tbreak; \t\telse
      \t\t\tyum clean metadata && \t\t\tyum clean all && \t\t\t(rm /var/cache/yum/x86_64/7/timedhosts
      2>/dev/null || true) && \t\t\t(rm /var/cache/yum/x86_64/7/timedhosts.txt 2>/dev/null
      || true) && \t\t\tyum -y update; \t\tfi \tdone \t\t&& \t\tyum -y autoremove
      && \tyum clean metadata && \tyum clean all && \t(rm /var/cache/yum/x86_64/7/timedhosts
      2>/dev/null || true) && \t(rm /var/cache/yum/x86_64/7/timedhosts.txt 2>/dev/null
      || true)"
    Name: run
    PrependShell: true
  - CmdLine:
    - "yum -y update && \twhile true; do \t\tif yum -y install \t\tack \t\taspell
      \t\tautoconf \t\tautomake \t\tbash-completion \t\tbash-completion-extras \t\tbind-utils
      \t\tbzip2 \t\tcoreutils \t\tdevscripts-minimal \t\tdos2unix \t\tfile \t\tgit
      \t\tgit-svn \t\thostname \t\thtop \t\tImageMagick \t\tiputils \t\tmongodb-org-tools
      \t\tmoreutils \t\tmysql \t\tneovim \t\tnmap-ncat \t\tphp-pear-PHP-CodeSniffer
      \t\tpostgresql96 \t\tpython2-pip \t\trubygems \t\tsassc \t\tShellCheck \t\tsubversion
      \t\tsudo \t\tthe_silver_searcher \t\ttig \t\tvi \t\tvim \t\tw3m \t\twget \t\twhich
      \t\twhois \t\t; then \t\t\tbreak; \t\telse \t\t\tyum clean metadata && \t\t\tyum
      clean all && \t\t\t(rm /var/cache/yum/x86_64/7/timedhosts 2>/dev/null || true)
      && \t\t\t(rm /var/cache/yum/x86_64/7/timedhosts.txt 2>/dev/null || true) &&
      \t\t\tyum -y update; \t\tfi \tdone \t\t&& \t\tyum -y autoremove && \tyum clean
      metadata && \tyum clean all && \t(rm /var/cache/yum/x86_64/7/timedhosts 2>/dev/null
      || true) && \t(rm /var/cache/yum/x86_64/7/timedhosts.txt 2>/dev/null || true)"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /usr/local/src && \tchown ${MY_USER}:${MY_GROUP} /usr/local/src &&
      \tVERSION=\"$( curl -Lq https://nodejs.org 2>/dev/null | grep LTS | grep -Eo
      'data-version.*.' | grep -oE 'v[0-9.]+' )\" && \twget -P /usr/local/src https://nodejs.org/dist/${VERSION}/node-${VERSION}-linux-x64.tar.xz
      && \ttar xvf /usr/local/src/node-${VERSION}-linux-x64.tar.xz -C /usr/local/src
      && \tln -s /usr/local/src/node-${VERSION}-linux-x64 /usr/local/node && \tln
      -s /usr/local/node/bin/* /usr/local/bin/ && \trm -f /usr/local/src/node-${VERSION}-linux-x64.tar.xz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -sS https://getcomposer.org/installer | php && \tmv composer.phar /usr/local/bin/composer
      && \tcomposer self-update"
    Name: run
    PrependShell: true
  - CmdLine:
    - "DRUSH_VERSION=\"$( curl -q https://api.github.com/repos/drush-ops/drush/releases
      2>/dev/null | grep tag_name | grep -Eo '\\\"[0-9.]+\\\"' | head -1 | sed 's/\\\"//g'
      )\" && \tmkdir -p /usr/local/src && \tchown ${MY_USER}:${MY_GROUP} /usr/local/src
      && \tsu - ${MY_USER} -c 'git clone https://github.com/drush-ops/drush.git /usr/local/src/drush'
      && \tv=\"${DRUSH_VERSION}\" su ${MY_USER} -p -c 'cd /usr/local/src/drush &&
      git checkout ${v}' && \tsu - ${MY_USER} -c 'cd /usr/local/src/drush && composer
      install --no-interaction --no-progress' && \tln -s /usr/local/src/drush/drush
      /usr/local/bin/drush"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl https://drupalconsole.com/installer -L -o drupal.phar && \tmv drupal.phar
      /usr/local/bin/drupal && \tchmod +x /usr/local/bin/drupal"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
      && \tmv wp-cli.phar /usr/local/bin/wp && \tchmod +x /usr/local/bin/wp && \twp
      cli update"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /usr/local/src && \tchown ${MY_USER}:${MY_GROUP} /usr/local/src &&
      \tsu - ${MY_USER} -c 'git clone https://github.com/cytopia/mysqldump-secure.git
      /usr/local/src/mysqldump-secure' && \tsu - ${MY_USER} -c 'cd /usr/local/src/mysqldump-secure
      && git checkout $(git describe --abbrev=0 --tags)' && \tln -s /usr/local/src/mysqldump-secure/bin/mysqldump-secure
      /usr/local/bin && \tcp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.conf
      /etc && \tcp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.cnf /etc &&
      \ttouch /var/log/mysqldump-secure.log && \tchown ${MY_USER}:${MY_GROUP} /etc/mysqldump-secure.*
      && \tchown ${MY_USER}:${MY_GROUP} /var/log/mysqldump-secure.log && \tchmod 0400
      /etc/mysqldump-secure.conf && \tchmod 0400 /etc/mysqldump-secure.cnf && \tchmod
      0644 /var/log/mysqldump-secure.log && \tsed -i'' 's/^DUMP_DIR=.*/DUMP_DIR=\"\\/shared\\/backups\\/mysql\"/g'
      /etc/mysqldump-secure.conf && \tsed -i'' 's/^DUMP_DIR_CHMOD=.*/DUMP_DIR_CHMOD=\"0755\"/g'
      /etc/mysqldump-secure.conf && \tsed -i'' 's/^DUMP_FILE_CHMOD=.*/DUMP_FILE_CHMOD=\"0644\"/g'
      /etc/mysqldump-secure.conf && \tsed -i'' 's/^LOG_CHMOD=.*/LOG_CHMOD=\"0644\"/g'
      /etc/mysqldump-secure.conf && \tsed -i'' 's/^NAGIOS_LOG=.*/NAGIOS_LOG=0/g' /etc/mysqldump-secure.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony && \tchmod
      a+x /usr/local/bin/symfony"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /usr/local/src && \tchown ${MY_USER}:${MY_GROUP} /usr/local/src &&
      \tsu - ${MY_USER} -c 'git clone https://github.com/laravel/installer /usr/local/src/laravel-installer'
      && \tsu - ${MY_USER} -c 'cd /usr/local/src/laravel-installer && git checkout
      $(git tag | sort -V | tail -1)' && \tsu - ${MY_USER} -c 'cd /usr/local/src/laravel-installer
      && composer install' && \tln -s /usr/local/src/laravel-installer/laravel /usr/local/bin/laravel
      && \tchmod +x /usr/local/bin/laravel"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /usr/local/src && \tchown ${MY_USER}:${MY_GROUP} /usr/local/src &&
      \tsu - ${MY_USER} -c 'git clone https://github.com/phalcon/phalcon-devtools
      /usr/local/src/phalcon-devtools' && \tsu - ${MY_USER} -c 'cd /usr/local/src/phalcon-devtools
      && git checkout $(git tag | grep 'v3.0' | sort -V | tail -1)' && \tsu - ${MY_USER}
      -c 'cd /usr/local/src/phalcon-devtools && ./phalcon.sh' && \tln -s /usr/local/src/phalcon-devtools/phalcon.php
      /usr/local/bin/phalcon && \tchmod +x /usr/local/bin/phalcon"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /usr/local/src && \tchown ${MY_USER}:${MY_GROUP} /usr/local/src &&
      \tsu - ${MY_USER} -c 'git clone https://github.com/cytopia/awesome-ci.git /usr/local/src/awesome-ci'
      && \tsu - ${MY_USER} -c 'cd /usr/local/src/awesome-ci && git checkout $(git
      describe --abbrev=0 --tags)' && \tsu - ${MY_USER} -c 'cd /usr/local/src/awesome-ci
      && ./configure --prefix=/usr/local' && \tcd /usr/local/src/awesome-ci && make
      install"
    Name: run
    PrependShell: true
  - CmdLine:
    - "gem install mdl && \tgem install scss_lint && \tnpm install -g eslint && \tnpm
      install -g jsonlint && \tnpm install -g mdlint && \tnpm install -g gulp"
    Name: run
    PrependShell: true
  - CmdLine:
    - "npm install -g grunt && \tnpm install -g grunt-cli"
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g --save-dev webpack
    Name: run
    PrependShell: true
  - CmdLine:
    - "( \t\techo \"if [ -d /etc/bashrc-devilbox.d/ ]; then\"; \t\techo \"    for
      f in /etc/bashrc-devilbox.d/*.sh ; do\"; \t\techo \"        . \\${f}\"; \t\techo
      \"    done\"; \t\techo \"fi\"; \t) | tee -a /home/${MY_USER}/.bashrc /root/.bashrc
      && \tchown ${MY_USER}:${MY_GROUP} /home/${MY_USER}/.bashrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - "localedef -i de_CH -f UTF-8 de_CH.UTF-8 && \tlocaledef -i de_DE -f UTF-8 de_DE.UTF-8
      && \tlocaledef -i de_LU -f UTF-8 de_LU.UTF-8 && \t\tlocaledef -i en_AG -f UTF-8
      en_AG.UTF-8 && \tlocaledef -i en_AU -f UTF-8 en_AU.UTF-8 && \tlocaledef -i en_BW
      -f UTF-8 en_BW.UTF-8 && \tlocaledef -i en_CA -f UTF-8 en_CA.UTF-8 && \tlocaledef
      -i en_DK -f UTF-8 en_DK.UTF-8 && \tlocaledef -i en_GB -f UTF-8 en_GB.UTF-8 &&
      \tlocaledef -i en_HK -f UTF-8 en_HK.UTF-8 && \tlocaledef -i en_IE -f UTF-8 en_IE.UTF-8
      && \tlocaledef -i en_IN -f UTF-8 en_IN.UTF-8 && \tlocaledef -i en_NG -f UTF-8
      en_NG.UTF-8 && \tlocaledef -i en_NZ -f UTF-8 en_NZ.UTF-8 && \tlocaledef -i en_PH
      -f UTF-8 en_PH.UTF-8 && \tlocaledef -i en_SG -f UTF-8 en_SG.UTF-8 && \tlocaledef
      -i en_US -f UTF-8 en_US.UTF-8 && \tlocaledef -i en_ZA -f UTF-8 en_ZA.UTF-8 &&
      \tlocaledef -i en_ZM -f UTF-8 en_ZM.UTF-8 && \tlocaledef -i en_ZW -f UTF-8 en_ZW.UTF-8
      && \t\tlocaledef -i ru_RU -f UTF-8 ru_RU.UTF-8 && \tlocaledef -i ru_UA -f UTF-8
      ru_UA.UTF-8 && \t\tlocaledef -i zh_CN -f UTF-8 zh_CN.UTF-8 && \tlocaledef -i
      zh_HK -f UTF-8 zh_HK.UTF-8 && \tlocaledef -i zh_SG -f UTF-8 zh_SG.UTF-8 && \tlocaledef
      -i zh_TW -f UTF-8 zh_TW.UTF-8"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/docker-install.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/docker-entrypoint.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/bash-profile
    - /etc/profile.d/devilbox.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./scripts/sudo-devilbox
    - /etc/sudoers.d/devilbox
  - CmdLine:
    - /docker-install.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - Name: volume
    Volumes:
    - /var/log/php
  - Name: volume
    Volumes:
    - /etc/php-custom.d
  - Name: volume
    Volumes:
    - /var/mail
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
