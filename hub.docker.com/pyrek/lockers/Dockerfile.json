{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:8.9.0",
      "SourceCode": "FROM node:8.9.0",
      "Platform": "",
      "From": {
        "Image": "node:8.9.0"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927   \u0026\u0026 echo \"deb http://repo.mongodb.org/apt/debian wheezy/mongodb-org/3.2 main\" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y mongodb-org --no-install-recommends   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/mongodb   \u0026\u0026 chown -R mongodb:mongodb /var/lib/mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./",
            "/app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "npm i"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm test"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm run build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "80"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "API_PREFIX",
              "Value": "/api"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_HOST",
              "Value": "mongodb://127.0.0.1:27017"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_USER",
              "Value": "lockers"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_PASSWORD",
              "Value": "heslo123"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MONGO_AUTH_SOURCE",
              "Value": "lockers"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm prune"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "service mongod start   \u0026\u0026 mongo \u003c initializeDatabase.mjs   \u0026\u0026 mongo admin --eval \"db.shutdownServer();\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R mongodb:mongodb /var/lib/mongodb   \u0026\u0026 service mongod start   \u0026\u0026 mongo \u003c initializeDatabase.mjs   \u0026\u0026 npm run start:prod"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/mongodb"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "27017"
          ]
        }
      ]
    }
  ]
}