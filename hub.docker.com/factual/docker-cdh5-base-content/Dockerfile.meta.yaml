MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Fabrizio Galiano <fabrizio.galiano@hotmail.com>
    Name: maintainer
  - Env:
    - Key: LVERS
      Value: libpcap-1.7.4
    Name: env
  - Env:
    - Key: DVERS
      Value: daq-2.0.6
    Name: env
  - Env:
    - Key: HOST_INT
      Value: '""'
    Name: env
  - Env:
    - Key: HOST_NAME
      Value: '""'
    Name: env
  - Env:
    - Key: PPORK_VERSION
      Value: 0.7.0
    Name: env
  - Env:
    - Key: PPORK_OINKCODE
      Value: '""'
    Name: env
  - Env:
    - Key: SNVERS
      Value: 2.9.9.0
    Name: env
  - Env:
    - Key: SNORT_NET
      Value: '""'
    Name: env
  - Env:
    - Key: BARN_VERSION
      Value: 2-1.13
    Name: env
  - Env:
    - Key: BARN_DBUSER
      Value: '""'
    Name: env
  - Env:
    - Key: BARN_DBPASS
      Value: '""'
    Name: env
  - Env:
    - Key: BARN_DBHOST
      Value: '""'
    Name: env
  - CmdLine:
    - apt-get update -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install         wget         build-essential         libtool         automake         gcc         flex         bison         libnet1         libnet1-dev         libpcre3         libpcre3-dev         autoconf         libcrypt-ssleay-perl         libwww-perl         git         zlib1g         zlib1g-dev         libssl-dev         libmysqlclient-dev         imagemagick         wkhtmltopdf         libyaml-dev         libxml2-dev         libxslt1-dev         openssl         libreadline6-dev         unzip         libcurl4-openssl-dev         libapr1-dev         libaprutil1-dev         supervisor         net-tools         gettext-base
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libdumbnet-dev libpcap-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp     && wget https://snort.org/downloads/snort/$DVERS.tar.gz     && tar
      zxf $DVERS.tar.gz     && cd $DVERS     && ./configure     && make && make install     &&
      ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp     && wget https://snort.org/downloads/snort/snort-$SNVERS.tar.gz     &&
      tar zxf snort-$SNVERS.tar.gz     && cd snort-$SNVERS     && ./configure --enable-sourcefire     &&
      make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd snort     && useradd snort -d /var/log/snort -s /sbin/nologin -c SNORT_IDS
      -g snort     && mkdir -p /var/log/snort     && chown snort:snort /var/log/snort
      -R     && mkdir -p /etc/snort     && cd /tmp/snort-$SNVERS     && cp -r etc/*
      /etc/snort/
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp     && wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/pulledpork/pulledpork-$PPORK_VERSION.tar.gz     &&
      tar zxf pulledpork-$PPORK_VERSION.tar.gz     && cd pulledpork-$PPORK_VERSION     &&
      cp pulledpork.pl /usr/sbin/     && chmod 755 /usr/sbin/pulledpork.pl     &&
      cp -r etc/* /etc/snort/     && cpan install LWP::Protocol::https     && cpan
      install Crypt::SSLeay      && cpan Mozilla::CA IO::Socket::SSL
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /etc/snort     && chown -R snort:snort *     && mkdir -p /usr/local/lib/snort_dynamicrules     &&
      mkdir /etc/snort/rules     && touch /etc/snort/rules/so_rules.rules     && touch
      /etc/snort/rules/local.rules     && touch /etc/snort/rules/white_list.rules
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp     && wget https://github.com/firnsy/barnyard2/archive/v$BARN_VERSION.tar.gz     &&
      tar zxf v$BARN_VERSION.tar.gz     && cd barnyard2-$BARN_VERSION/     && ./autogen.sh     &&
      ./configure --with-mysql --with-mysql-libraries=/usr/lib/x86_64-linux-gnu      &&
      make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean     && rm -rf /var/cache/apt/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker
    - /docker
  - CmdLine:
    - /bin/bash
    - /docker/scripts/entrypoint.sh
    - start-stack
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
