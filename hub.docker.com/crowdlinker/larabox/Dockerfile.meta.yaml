MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"dev@crowdlinker.com"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: TERM
      Value: xterm-256color
    Name: env
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends --no-install-suggests   mc   zip   curl   nano   nginx   unzip   gettext   git-core   apt-utils   libssl-dev   zlib1g-dev   libpng-dev   supervisor   libjpeg-dev   libwebp-dev   libxml2-dev   mysql-client   libmcrypt-dev   build-essential   ca-certificates   libfreetype6-dev   libmagickwand-dev   apt-transport-https   software-properties-common   python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php -y &&   apt-get update &&   apt-get
      install -y --no-install-recommends --no-install-suggests   php7.2-fpm   php7.2-cli   php-pear   php-mcrypt   php7.2-gd   php7.2-gmp   php7.2-zip   php7.2-xml   php7.2-cli   php7.2-pdo   php7.2-ldap   php7.2-json   php7.2-ldap   php7.2-curl   php7.2-amqp   php7.2-intl   php7.2-soap   php7.2-iconv   php7.2-mysql   php7.2-redis   php7.2-xmlrpc   php7.2-mysqli   php7.2-bcmath   php7.2-mongodb   php7.2-sockets   php7.2-mbstring   php7.2-fileinfo   php7.2-simplexml   php7.2-xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"   &&
      php composer-setup.php --install-dir=bin --filename=composer   && php -r "unlink('composer-setup.php');"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash &&   apt-get update &&
      apt-get install nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &&   echo
      "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      &&   apt-get update && apt-get install -y --no-install-recommends yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/share/zoneinfo/America/Toronto /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log   && ln -sf /dev/stderr /var/log/nginx/error.log   &&
      ln -sf /dev/stderr /var/log/php7.2-fpm.log
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./nginx/default.conf
    - /etc/nginx/sites-enabled/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./php/php.ini
    - /etc/php/7.2/cli/php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./php/php.ini
    - /etc/php/7.2/fpm/php.ini
  - CmdLine:
    - sed -i 's/;daemonize = yes/daemonize = no/g' /etc/php/7.2/fpm/php-fpm.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./supervisor/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - CmdLine:
    - mkdir -p /var/run/php
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/log/php-fpm
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .docker-prompt
    - /etc/.docker-prompt
  - CmdLine:
    - echo '. /etc/.docker-prompt' >> /etc/bash.bashrc  && echo '. /etc/.docker-prompt'
      >> /root/.bashrc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/share/nginx/html
  - Name: expose
    Ports:
    - "2525"
    - "3306"
    - "6379"
    - "80"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./html/index.php
    - /usr/share/nginx/html/index.php
  - CmdLine:
    - mkdir -p /usr/share/nginx/html/project
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/share/nginx/html/project
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./entrypoint.sh
    - /
  - CmdLine:
    - sh
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
