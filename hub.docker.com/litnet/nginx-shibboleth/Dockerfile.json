{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:latest",
      "SourceCode": "FROM debian:latest",
      "Platform": "",
      "From": {
        "Image": "debian:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "\"1.13.3\""
            },
            {
              "Key": "NGINX_BUILDER_VERSION",
              "Value": "\"0.11.0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026     apt-get -y --no-install-recommends --no-install-suggests install             ca-certificates             git             wget             gcc             make             libpcre3-dev             libssl-dev             zlib1g-dev \u0026\u0026     mkdir /nginx-build \u0026\u0026  cd /nginx-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /nginx-build \u0026\u0026      wget https://github.com/cubicdaiya/nginx-build/releases/download/v${NGINX_BUILDER_VERSION}/nginx-build-linux-amd64-${NGINX_BUILDER_VERSION}.tar.gz \u0026\u0026     tar xf nginx-build-linux-amd64-${NGINX_BUILDER_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx-build-modules",
            "/nginx-build/modules"
          ]
        },
        {
          "CmdLine": [
            "cd /nginx-build \u0026\u0026     ./nginx-build -m modules -d ./work -v ${NGINX_VERSION}              --sbin-path=/usr/sbin/nginx              --conf-path=/etc/nginx/nginx.conf              --error-log-path=/var/log/nginx/error.log              --http-log-path=/var/log/nginx/access.log              --pid-path=/var/run/nginx.pid              --lock-path=/var/run/nginx.lock              --http-client-body-temp-path=/var/cache/nginx/client_temp              --http-proxy-temp-path=/var/cache/nginx/proxy_temp              --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp              --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp              --http-scgi-temp-path=/var/cache/nginx/scgi_temp              --user=www-data              --group=www-data              --with-threads              --with-ipv6              --with-http_addition_module              --with-http_auth_request_module              --with-http_dav_module              --with-http_gunzip_module              --with-http_gzip_static_module              --with-http_realip_module              --with-http_slice_module              --with-http_ssl_module              --with-http_sub_module              --with-http_v2_module              --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC'              --with-ld-opt='-Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie' \u0026\u0026     cd ./work/nginx/${NGINX_VERSION}/nginx-${NGINX_VERSION} \u0026\u0026     make install \u0026\u0026     mkdir -p /etc/nginx/conf.d \u0026\u0026     mkdir -p /var/cache/nginx/client_temp \u0026\u0026     mkdir -p /etc/nginx/ssl \u0026\u0026     ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026     ln -sf /dev/stderr /var/log/nginx/error.log \u0026\u0026     apt-get -y purge             git             wget             gcc             make             libpcre3-dev             libssl-dev \u0026\u0026     apt-get -y autoremove \u0026\u0026 apt-get -y clean  \u0026\u0026     dpkg --list |grep \"^rc\" | cut -d \" \" -f 3 | xargs dpkg --purge \u0026\u0026     rm -r /nginx-build \u0026\u0026     rm /etc/nginx/*.default \u0026\u0026     rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/etc/nginx"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/nginx/conf.d"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443/TCP",
            "80/TCP"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}