MetaArgs: null
Stages:
- BaseName: circleci/golang:latest
  Commands:
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "sudo apt-get update && sudo apt-get install -y nodejs \t\tca-certificates \t\tyarn
      \t\tmake \t\tpython \t\tunzip \t\topenrc \t\topenssh-client"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/run/docker.sock
  - CmdLine:
    - sudo npm install --unsafe-perm --global --production resin-cli@6.13 raven
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/golang/dep/cmd/dep               github.com/golang/mock/gomock               github.com/golang/mock/mockgen              github.com/kisielk/errcheck
    Name: run
    PrependShell: true
  - Env:
    - Key: PROTOBUF_VERSION
      Value: 3.5.1
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - curl -fsSL https://github.com/google/protobuf/releases/download/v$PROTOBUF_VERSION/protoc-$PROTOBUF_VERSION-linux-x86_64.zip
      -o protobuf.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip protobuf.zip -d protoc3
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mv protoc3/bin/* /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mv protoc3/include/* /usr/local/include/
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo rm -r /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/golang/protobuf/protoc-gen-go
    Name: run
    PrependShell: true
  - CmdLine:
    - sh
    Name: cmd
    PrependShell: false
  From:
    Image: circleci/golang:latest
  Name: ""
  Platform: ""
  SourceCode: FROM circleci/golang:latest
