{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"adorsys GmbH \u0026 Co. KG\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "MAVEN_VERSION",
          "Name": "arg",
          "Value": "3.6.0"
        },
        {
          "Key": "JMETER_VERSION",
          "Name": "arg",
          "Value": "5.0"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/tmp"
            },
            {
              "Key": "TZ",
              "Value": "Europe/Berlin"
            },
            {
              "Key": "NO_UPDATE_NOTIFIER",
              "Value": "1"
            },
            {
              "Key": "JAVA_TOOL_OPTIONS",
              "Value": "\"-Xmx1G\""
            },
            {
              "Key": "NODE_OPTIONS",
              "Value": "\"--max_old_space_size=1024\""
            },
            {
              "Key": "JMETER_HOME",
              "Value": "\"/usr/share/jmeter\""
            },
            {
              "Key": "MAVEN_HOME",
              "Value": "\"/usr/share/maven\""
            },
            {
              "Key": "MAVEN_CONFIG",
              "Value": "\"/usr/local/share/.m2\""
            },
            {
              "Key": "NVM_DIR",
              "Value": "\"/usr/local/share/nvm\""
            },
            {
              "Key": "JABBA_HOME",
              "Value": "\"/usr/local/share/jabba\""
            },
            {
              "Key": "BASH_ENV",
              "Value": "/enable.sh"
            },
            {
              "Key": "ENV",
              "Value": "/enable.sh"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "root",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -xeuo pipefail     \u0026\u0026 useradd -d \"${HOME}\" -M -u 1001 -g 0 default     \u0026\u0026 ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone     \u0026\u0026 echo -e '[google-chrome]\\nname=google-chrome\\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/$basearch\\nenabled=0\\ngpgcheck=1\\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub' \u003e /etc/yum.repos.d/google-chrome.repo     \u0026\u0026 echo -e '[docker-ce-stable]\\nname=Docker CE Stable - $basearch\\nbaseurl=https://download.docker.com/linux/centos/7/$basearch/stable\\nenabled=0\\ngpgcheck=1\\ngpgkey=https://download.docker.com/linux/centos/gpg' \u003e /etc/yum.repos.d/docker-ce.repo     \u0026\u0026 yum update -y     \u0026\u0026 yum install -y epel-release     \u0026\u0026 yum install -y --enablerepo=google-chrome --enablerepo=docker-ce-stable         iproute zip unzip python bzip2 libXt git gcc-c++ make jq         docker-ce-cli skopeo         tomcat-native java-1.8.0-openjdk-devel java-11-openjdk-devel         google-chrome-stable     \u0026\u0026 yum clean all -y \u0026\u0026 rm -rf /var/cache/yum     \u0026\u0026 chmod g=u /etc/passwd     \u0026\u0026 mkdir -p /opt/app-root/src \u0026\u0026 chown -R 1001:0 /opt/app-root/src \u0026\u0026 chmod -R ug+rwx /opt/app-root/src     \u0026\u0026 ( mkdir -p \"${NVM_DIR}\" \u0026\u0026 cd \"${NVM_DIR}\"       \u0026\u0026 curl \"https://raw.githubusercontent.com/creationix/nvm/master/install.sh\" | bash       \u0026\u0026 echo -e \"npm\\nyarn\" \u003e default-packages       \u0026\u0026 . \"${NVM_DIR}/nvm.sh\"       \u0026\u0026 nvm install 8       \u0026\u0026 nvm install 10       \u0026\u0026 nvm cache clear       \u0026\u0026 nvm alias default 8       \u0026\u0026 rm -rf /home/default/.npm/     )     \u0026\u0026 (cd /opt       \u0026\u0026 curl -fsSL \"https://github.com/shyiko/jabba/raw/master/install.sh\" | bash       \u0026\u0026 . \"${JABBA_HOME}/jabba.sh\"       \u0026\u0026 jabba link system@1.11 /usr/lib/jvm/java-11       \u0026\u0026 jabba link system@1.8 /usr/lib/jvm/java-1.8.0       \u0026\u0026 jabba alias default system@1.8     )     \u0026\u0026 (cd /opt       \u0026\u0026 curl  -fsSL \"https://download.mozilla.org/?product=firefox-latest\u0026os=linux64\u0026lang=en-US\" | tar xj       \u0026\u0026 ln -s /opt/firefox/firefox /usr/local/bin/firefox     )     \u0026\u0026 (mkdir -p \"${MAVEN_HOME}\" \u0026\u0026 cd \"${MAVEN_HOME}\"       \u0026\u0026 curl -fsSLO \"https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz\"       \u0026\u0026 curl -fsSLO \"https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz.sha512\"       \u0026\u0026 sha512sum -c apache-maven-${MAVEN_VERSION}-bin.tar.gz.sha512       \u0026\u0026 tar -xzf apache-maven-${MAVEN_VERSION}-bin.tar.gz -C \"${MAVEN_HOME}\" --strip-components=1       \u0026\u0026 rm -f apache-maven-${MAVEN_VERSION}-bin.tar.gz apache-maven-${MAVEN_VERSION}-bin.tar.gz.sha512       \u0026\u0026 ln -s \"${MAVEN_HOME}/bin/mvn\" /usr/bin/mvn     )     \u0026\u0026 (mkdir -p \"${JMETER_HOME}\" \u0026\u0026 cd \"${JMETER_HOME}\"       \u0026\u0026 curl -fsSLO \"https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz\"        \u0026\u0026 curl -fsSLO \"https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz.sha512\"       \u0026\u0026 sha512sum -c apache-jmeter-${JMETER_VERSION}.tgz.sha512       \u0026\u0026 tar -xzf apache-jmeter-${JMETER_VERSION}.tgz -C \"${JMETER_HOME}\" --strip-components=1 --exclude='docs'       \u0026\u0026 rm -f apache-jmeter-${JMETER_VERSION}.tgz apache-jmeter-${JMETER_VERSION}.tgz.sha512       \u0026\u0026 ln -s \"${JMETER_HOME}/bin/jmeter\" /usr/bin/jmeter     )     \u0026\u0026 cd /tmp \u0026\u0026 rm -rf ..?* .[!.]* *     \u0026\u0026 mkdir -p \"${MAVEN_CONFIG}\"     \u0026\u0026 chmod -R g+rw \"${NVM_DIR}\" \"${JABBA_HOME}\" \"${MAVEN_CONFIG}\"     \u0026\u0026 for prog in \"${NVM_DIR}/versions/node/$(. \"${NVM_DIR}/nvm.sh\"; nvm current)/bin/\"*; do ln -s \"$prog\" \"/usr/local/bin/$(basename \"${prog}\")\"; done     \u0026\u0026 find \"${NVM_DIR}\" -type d -exec chmod g+x {} +     \u0026\u0026 find \"${JABBA_HOME}\" -type d -exec chmod g+x {} +"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/app-root/src"
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "1001"
        }
      ]
    }
  ]
}