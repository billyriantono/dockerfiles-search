MetaArgs: null
Stages:
- BaseName: centos:centos7
  Commands:
  - Maintainer: '"Andre" <andris.jersovs@accenture.com>'
    Name: maintainer
  - Key: TERRAFORM_VERSION
    Name: arg
    Value: '"0.10.6"'
  - Key: PACKER_VERSION
    Name: arg
    Value: '"1.1.0"'
  - Key: ANSIBLE_VERSION
    Name: arg
    Value: '"2.4.0.0"'
  - Key: AWS_VERSION
    Name: arg
    Value: '"1.11.158"'
  - Key: PYPARSER_VERSION
    Name: arg
    Value: '"2.18"'
  - Key: AZURE_VERSION
    Name: arg
    Value: '"2.0.0"'
  - Env:
    - Key: JAVA_VERSION
      Value: 1.8.0_144
    Name: env
  - Env:
    - Key: JAVA_TARBALL
      Value: server-jre-8u144-linux-x64.tar.gz
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /opt/java/jdk${JAVA_VERSION}
    Name: env
  - Env:
    - Key: JAVA_MAGIC
      Value: '"090f390dda5b47b9b721c7dfaa008135"'
    Name: env
  - Env:
    - Key: JAVA_VERSION_BUILD
      Value: '"8u144-b01"'
    Name: env
  - Env:
    - Key: DOCKER_ENGINE_VERSION
      Value: 17.06.2.ce-1.el7.centos
    Name: env
  - Env:
    - Key: DOCKER_COMPOSE_VERSION
      Value: 1.16.1
    Name: env
  - Env:
    - Key: DOCKER_MACHINE_VERSION
      Value: v0.12.2
    Name: env
  - Env:
    - Key: SWARM_MASTER
      Value: http://jenkins:8080/jenkins/
    Name: env
  - Env:
    - Key: SWARM_USER
      Value: jenkins
    Name: env
  - Env:
    - Key: SWARM_PASSWORD
      Value: jenkins
    Name: env
  - Env:
    - Key: SLAVE_NAME
      Value: '"Infrastructure_Slave"'
    Name: env
  - Env:
    - Key: SLAVE_LABELS
      Value: '"docker awscli ldap-client ansible terraform packer docker"'
    Name: env
  - Env:
    - Key: SLAVE_MODE
      Value: '"exclusive"'
    Name: env
  - Env:
    - Key: SLAVE_EXECUTORS
      Value: "1"
    Name: env
  - Env:
    - Key: SLAVE_DESCRIPTION
      Value: '"Core Jenkins Slave"'
    Name: env
  - Env:
    - Key: SWARM_CLIENT_VERSION
      Value: '"2.2"'
    Name: env
  - CmdLine:
    - yum -y install epel-release
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y which     git     wget     tar     openldap-clients     openssl     perl     gcc     libffi-devel     openssl-devel     python-pip     PyYAML     python-jinja2     python-httplib2     python-keyczar     python-paramiko     python-setuptools     python-devel     python-simplejson     unzip
      &&     yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli==${AWS_VERSION} ansible==${ANSIBLE_VERSION} pycparser==${PYPARSER_VERSION}
      azure==${AZURE_VERSION} msrestazure ansible-lint behave selenium testinfra pywinrm
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://get.docker.com/ | sed "s/docker-engine/docker-engine-${DOCKER_ENGINE_VERSION}/"
      | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname
      -s`-`uname -m` > /usr/local/bin/docker-compose &&     chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/docker/machine/releases/download/${DOCKER_MACHINE_VERSION}/docker-machine-`uname
      -s`-`uname -m` >/usr/local/bin/docker-machine &&     chmod +x /usr/local/bin/docker-machine
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s -o /tmp/terraform.zip -k https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      &&     unzip /tmp/terraform.zip -d /usr/bin &&     chmod +x /usr/bin/terraform
      &&     curl -s -o /tmp/packer.zip -k https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip
      &&     unzip /tmp/packer.zip -d /usr/bin &&     chmod +x /usr/bin/packer
    Name: run
    PrependShell: true
  - CmdLine:
    - 'wget -q --no-check-certificate --directory-prefix=/tmp --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F;
      oraclelicense=accept-securebackup-cookie"             http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_BUILD}/${JAVA_MAGIC}/${JAVA_TARBALL}'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/java && tar -xzf /tmp/${JAVA_TARBALL} -C /opt/java/
    Name: run
    PrependShell: true
  - CmdLine:
    - alternatives --install /usr/bin/java java /opt/java/jdk${JAVA_VERSION}/bin/java
      100
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/* && rm -rf /var/log/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s -o /bin/swarm-client.jar -k http://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/${SWARM_CLIENT_VERSION}/swarm-client-${SWARM_CLIENT_VERSION}-jar-with-dependencies.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - java -jar /bin/swarm-client.jar -executors ${SLAVE_EXECUTORS} -description "${SLAVE_DESCRIPTION}"
      -master ${SWARM_MASTER} -username ${SWARM_USER} -password ${SWARM_PASSWORD}
      -name "${SLAVE_NAME}" -labels "${SLAVE_LABELS}" -mode ${SLAVE_MODE}
    Name: cmd
    PrependShell: true
  From:
    Image: centos:centos7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:centos7
