MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Env:
    - Key: JAVA_VERSION
      Value: 1.8.0_144
    Name: env
  - Env:
    - Key: JAVA_TARBALL
      Value: server-jre-8u144-linux-x64.tar.gz
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /opt/java/jdk${JAVA_VERSION}
    Name: env
  - Env:
    - Key: JAVA_MAGIC
      Value: '"090f390dda5b47b9b721c7dfaa008135"'
    Name: env
  - Env:
    - Key: JAVA_VERSION_BUILD
      Value: '"8u144-b01"'
    Name: env
  - Env:
    - Key: ANDROID_HOME
      Value: /opt/android-sdk-linux
    Name: env
  - Env:
    - Key: ANDROID_TOOLS_VER
      Value: '"r25.2.5"'
    Name: env
  - Env:
    - Key: ANDROID_NDK_VER
      Value: '"r15c"'
    Name: env
  - Env:
    - Key: MAVEN_VER
      Value: '"3.5.0"'
    Name: env
  - Env:
    - Key: ANT_VER
      Value: '"1.10.1"'
    Name: env
  - Env:
    - Key: GRADLE_VER
      Value: '"4.0.1"'
    Name: env
  - Env:
    - Key: SWARM_MASTER
      Value: http://jenkins:8080/jenkins/
    Name: env
  - Env:
    - Key: SWARM_USER
      Value: jenkins
    Name: env
  - Env:
    - Key: SWARM_PASSWORD
      Value: jenkins
    Name: env
  - Env:
    - Key: SLAVE_NAME
      Value: '"Swarm_Slave"'
    Name: env
  - Env:
    - Key: SLAVE_LABELS
      Value: '"docker androidsdk"'
    Name: env
  - Env:
    - Key: SLAVE_MODE
      Value: '"exclusive"'
    Name: env
  - Env:
    - Key: SLAVE_EXECUTORS
      Value: "4"
    Name: env
  - Env:
    - Key: SLAVE_DESCRIPTION
      Value: '"Core Jenkins Slave"'
    Name: env
  - Env:
    - Key: SWARM_CLIENT_VERSION
      Value: '"2.2"'
    Name: env
  - CmdLine:
    - echo 'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb
      /var/cache/apt/*.bin || true"; };' > /etc/apt/apt.conf.d/docker-clean
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb
      /var/cache/apt/*.bin || true"; };' >> /etc/apt/apt.conf.d/docker-clean
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";' >> /etc/apt/apt.conf.d/docker-clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get -y upgrade &&     DEBIAN_FRONTEND=noninteractive
      apt-get install -y curl wget unzip bzip2
    Name: run
    PrependShell: true
  - CmdLine:
    - 'wget -q --no-check-certificate --directory-prefix=/tmp --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F;
      oraclelicense=accept-securebackup-cookie"             http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_BUILD}/${JAVA_MAGIC}/${JAVA_TARBALL}'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/java && tar -xzf /tmp/${JAVA_TARBALL} -C /opt/java/
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --install "/usr/bin/java" "java" "/opt/java/jdk${JAVA_VERSION}/bin/java"
      100 &&     update-alternatives --install "/usr/bin/javac" "javac" "/opt/java/jdk${JAVA_VERSION}/bin/javac"
      100 &&     update-alternatives --set java /opt/java/jdk${JAVA_VERSION}/bin/java
      &&     update-alternatives --set javac /opt/java/jdk${JAVA_VERSION}/bin/javac
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y libc6-i386 lib32stdc++6 lib32gcc1
      lib32ncurses5 lib32z1 &&     apt-get autoremove && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${ANDROID_HOME} &&     wget -q --no-check-certificate --directory-prefix=/tmp
      https://dl.google.com/android/repository/tools_${ANDROID_TOOLS_VER}-linux.zip
      &&     unzip -q /tmp/tools_${ANDROID_TOOLS_VER}-linux.zip -d ${ANDROID_HOME}
      &&     rm -f /tmp/tools_${ANDROID_TOOLS_VER}-linux.zip &&     wget -q --no-check-certificate
      --directory-prefix=/tmp https://dl.google.com/android/repository/android-ndk-${ANDROID_NDK_VER}-linux-x86_64.zip
      &&     unzip -q /tmp/android-ndk-${ANDROID_NDK_VER}-linux-x86_64.zip -d ${ANDROID_HOME}
      &&     rm -f /tmp/android-ndk-${ANDROID_NDK_VER}-linux-x86_64.zip &&     mv
      ${ANDROID_HOME}/android-ndk-${ANDROID_NDK_VER} ${ANDROID_HOME}/ndk-bundle
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q --no-check-certificate --directory-prefix=/tmp https://www.apache.org/dist/ant/binaries/apache-ant-${ANT_VER}-bin.tar.bz2
      &&     tar jxf /tmp/apache-ant-${ANT_VER}-bin.tar.bz2 -C /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q --no-check-certificate --directory-prefix=/tmp https://services.gradle.org/distributions/gradle-${GRADLE_VER}-bin.zip
      &&     unzip -q /tmp/gradle-${GRADLE_VER}-bin.zip -d /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q --no-check-certificate --directory-prefix=/tmp https://www-us.apache.org/dist/maven/maven-3/${MAVEN_VER}/binaries/apache-maven-${MAVEN_VER}-bin.zip
      &&     unzip -q /tmp/apache-maven-${MAVEN_VER}-bin.zip -d /opt
    Name: run
    PrependShell: true
  - Env:
    - Key: ANT_HOME
      Value: '"/opt/apache-ant-${ANT_VER}"'
    Name: env
  - Env:
    - Key: M2_HOME
      Value: '"/opt/apache-maven-${MAVEN_VER}"'
    Name: env
  - Env:
    - Key: GRADLE_HOME
      Value: '"/opt/gradle-${GRADLE_VER}"'
    Name: env
  - Env:
    - Key: PATH
      Value: ${ANT_HOME}/bin:${M2_HOME}/bin:${GRADLE_HOME}/bin:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/tools/bin:${PATH}
    Name: env
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter platform-tools | grep 'package
      installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter android-25 | grep 'package
      installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter android-24 | grep 'package
      installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter android-23 | grep 'package
      installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter android-22 | grep 'package
      installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter android-21 | grep 'package
      installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-25.0.3 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-25.0.2 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-25.0.1 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-25.0.0 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-24.0.3 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-24.0.2 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-24.0.1 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-24.0.0 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-23.0.3 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-23.0.2 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-23.0.1 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-22.0.1 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter build-tools-21.1.2 | grep
      'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-24
      | grep 'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-21
      | grep 'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter extra-android-m2repository
      | grep 'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter extra-google-m2repository
      | grep 'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter extra-google-google_play_services
      | grep 'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter addon-google_apis-google-23
      | grep 'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter addon-google_apis-google-22
      | grep 'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | android update sdk --no-ui --all --filter addon-google_apis-google-21
      | grep 'package installed'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo y | sdkmanager --update | grep done
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/* && rm -rf /var/log/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s -o /bin/swarm-client.jar -k http://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/${SWARM_CLIENT_VERSION}/swarm-client-${SWARM_CLIENT_VERSION}-jar-with-dependencies.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - java -jar /bin/swarm-client.jar -executors ${SLAVE_EXECUTORS} -description "${SLAVE_DESCRIPTION}"
      -master ${SWARM_MASTER} -username ${SWARM_USER} -password ${SWARM_PASSWORD}
      -name "${SLAVE_NAME}" -labels "${SLAVE_LABELS}" -mode ${SLAVE_MODE}
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
