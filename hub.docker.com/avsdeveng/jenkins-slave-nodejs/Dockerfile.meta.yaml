MetaArgs: null
Stages:
- BaseName: centos:centos7
  Commands:
  - Maintainer: '"Nick Griffin" <nicholas.griffin@accenture.com>'
    Name: maintainer
  - Env:
    - Key: JAVA_VERSION
      Value: 1.8.0_144
    Name: env
  - Env:
    - Key: JAVA_TARBALL
      Value: server-jre-8u144-linux-x64.tar.gz
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /opt/java/jdk${JAVA_VERSION}
    Name: env
  - Env:
    - Key: JAVA_MAGIC
      Value: '"090f390dda5b47b9b721c7dfaa008135"'
    Name: env
  - Env:
    - Key: JAVA_VERSION_BUILD
      Value: '"8u144-b01"'
    Name: env
  - Env:
    - Key: SWARM_MASTER
      Value: http://jenkins:8080/jenkins/
    Name: env
  - Env:
    - Key: SWARM_USER
      Value: jenkins
    Name: env
  - Env:
    - Key: SWARM_PASSWORD
      Value: jenkins
    Name: env
  - Env:
    - Key: NODEJS_VERSION
      Value: 6.9.2
    Name: env
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: SLAVE_NAME
      Value: '"Swarm_Slave"'
    Name: env
  - Env:
    - Key: SLAVE_LABELS
      Value: '"docker awscli nodejs nodejs${NODEJS_VERSION}"'
    Name: env
  - Env:
    - Key: SLAVE_MODE
      Value: '"exclusive"'
    Name: env
  - Env:
    - Key: SLAVE_EXECUTORS
      Value: "4"
    Name: env
  - Env:
    - Key: SLAVE_DESCRIPTION
      Value: '"Core Jenkins Slave"'
    Name: env
  - Env:
    - Key: SWARM_CLIENT_VERSION
      Value: '"2.2"'
    Name: env
  - CmdLine:
    - yum -y install epel-release
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y     bzip2     make     gcc     gcc-c++     which     git     wget     tar     openldap-clients     openssl     python-pip
      &&     yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli==1.11.136
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_ENGINE_VERSION
      Value: 17.05.0.ce-1.el7.centos
    Name: env
  - Env:
    - Key: DOCKER_COMPOSE_VERSION
      Value: 1.15.0
    Name: env
  - Env:
    - Key: DOCKER_MACHINE_VERSION
      Value: v0.12.2
    Name: env
  - CmdLine:
    - curl -fsSL https://get.docker.com/ | sed "s/docker-engine/docker-engine-${DOCKER_ENGINE_VERSION}/"
      | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname
      -s`-`uname -m` > /usr/local/bin/docker-compose &&     chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/docker/machine/releases/download/${DOCKER_MACHINE_VERSION}/docker-machine-`uname
      -s`-`uname -m` >/usr/local/bin/docker-machine &&     chmod +x /usr/local/bin/docker-machine
    Name: run
    PrependShell: true
  - CmdLine:
    - 'wget -q --no-check-certificate --directory-prefix=/tmp --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F;
      oraclelicense=accept-securebackup-cookie"             http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_BUILD}/${JAVA_MAGIC}/${JAVA_TARBALL}'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/java && tar -xzf /tmp/${JAVA_TARBALL} -C /opt/java/
    Name: run
    PrependShell: true
  - CmdLine:
    - alternatives --install /usr/bin/java java /opt/java/jdk${JAVA_VERSION}/bin/java
      100
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/* && rm -rf /var/log/*
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global url."https://".insteadOf git://
    Name: run
    PrependShell: true
  - CmdLine:
    - export GNUPGHOME="$(mktemp -d)"     && for key in         94AE36675C464D64BAFA68DD7434390BDBE9B9C5         FD3A5288F042B6850C66B31F09FE44734EB7990E         71DCFD284A79C3B38668286BC97EC7A07EDE3FC1         DD8F2338BAE7501E3DD5AC78C273792F7D83545D         C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8         B9AE9905FFD7803F25714661B63B535A4C206CA9         56730D5401028683275BD23C23EFEFE93C4CFFFE     ;
      do         gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ||         gpg
      --keyserver hkp://keyserver.pgp.com:80 --recv-keys "$key" ||         gpg --keyserver
      hkp://ha.pool.sks-keyservers.net:80 --recv-keys "$key" ;     done     && curl
      -SLO "https://nodejs.org/dist/v$NODEJS_VERSION/node-v$NODEJS_VERSION-linux-x64.tar.xz"     &&
      curl -SLO --compressed "https://nodejs.org/dist/v$NODEJS_VERSION/SHASUMS256.txt.asc"     &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep
      " node-v$NODEJS_VERSION-linux-x64.tar.xz\$" SHASUMS256.txt | sha256sum -c -     &&
      tar -xJf "node-v$NODEJS_VERSION-linux-x64.tar.xz" -C /usr/local --strip-components=1     &&
      rm "node-v$NODEJS_VERSION-linux-x64.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt     &&
      ln -s /usr/local/bin/node /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install gulp bower -g && npm install gulp && npm cache clear
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s -o /bin/swarm-client.jar -k http://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/${SWARM_CLIENT_VERSION}/swarm-client-${SWARM_CLIENT_VERSION}-jar-with-dependencies.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - java -jar /bin/swarm-client.jar -executors ${SLAVE_EXECUTORS} -description "${SLAVE_DESCRIPTION}"
      -master ${SWARM_MASTER} -username ${SWARM_USER} -password ${SWARM_PASSWORD}
      -name "${SLAVE_NAME}" -labels "${SLAVE_LABELS}" -mode ${SLAVE_MODE}
    Name: cmd
    PrependShell: true
  From:
    Image: centos:centos7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:centos7
