{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "buildpack-deps:xenial-curl",
      "SourceCode": "FROM buildpack-deps:xenial-curl",
      "Platform": "",
      "From": {
        "Image": "buildpack-deps:xenial-curl"
      },
      "Commands": [
        {
          "Maintainer": "Infer",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends             aspcud             autoconf             automake             gcc             g++             git             groff-base             libc6-dev             libgmp-dev             libmpc-dev             libmpfr-dev             m4             make             ncurses-dev             ocaml             opam             openjdk-8-jdk-headless             pkg-config             python2.7             rsync             unzip             zlib1g-dev \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "INFER_VERSION=v0.12.0;     cd /opt \u0026\u0026     curl -sL       https://github.com/facebook/infer/releases/download/${INFER_VERSION}/infer-linux64-${INFER_VERSION}.tar.xz |     tar xJ \u0026\u0026     rm -f /infer \u0026\u0026     ln -s ${PWD}/infer-linux64-$INFER_VERSION /infer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "OCAML_VERSION=4.04.2;     opam init --compiler=$OCAML_VERSION -j $(getconf _NPROCESSORS_ONLN || echo 1) --yes \u0026\u0026     cd /infer \u0026\u0026     ./build-infer.sh --opam-switch $OCAML_VERSION \u0026\u0026     rm -rf /root/.opam"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "INFER_HOME",
              "Value": "/infer/infer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${INFER_HOME}/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends             libc6-dev             libc6-i386             lib32z1             lib32stdc++6 \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$ANDROID_HOME"
        },
        {
          "CmdLine": [
            "curl -o sdk-tools-linux.zip       https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip \u0026\u0026     unzip sdk-tools-linux.zip \u0026\u0026     rm sdk-tools-linux.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${ANDROID_HOME}/tools/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"sdk.dir=${ANDROID_HOME}\" \u003e /infer/examples/android_hello/local.properties"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}