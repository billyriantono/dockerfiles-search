{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Irina Spiridonova \u003cirinasp@microsoft.com\u003e; Darren Gehring \u003cdarrenge@microsoft.com\u003e; Tahina Ramananandro \u003ctaramana@microsoft.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo 'deb http://mirror.pnl.gov/ubuntu/ xenial main' \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://mirror.math.ucdavis.edu/ubuntu/ xenial main\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Acquire::Retries \\\"16\\\";\" \u003e /etc/apt/apt.conf.d/99acquire-retries"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get --yes update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install --no-install-recommends --yes software-properties-common curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:ubuntu-toolchain-r/test"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get --yes update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_6.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "until apt-get install --no-install-recommends --yes   libssl-dev   libsqlite3-dev   g++-6   gcc-6   build-essential   m4   make   opam   pkg-config   python   libgmp-dev   automake   git   ca-certificates-mono   fsharp   libunwind8   libcurl3   scons   curl   sudo   libicu55   python3   wget   zip   nuget   pandoc   ca-certificates   cmake   libtool   autoconf   tzdata   nodejs  ; do apt-get --yes update ; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install madoko -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MYHOME",
              "Value": "/home/everest"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd --shell /bin/bash --create-home --home-dir ${MYHOME} everest"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"everest ALL=(ALL:ALL) NOPASSWD:ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "--login",
            "-c"
          ]
        },
        {
          "Name": "user",
          "User": "everest"
        },
        {
          "Name": "workdir",
          "Path": "${MYHOME}"
        },
        {
          "Env": [
            {
              "Key": "OPAMYES",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ocamlv",
              "Value": "4.05.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "opam init --auto-setup --compiler=${ocamlv}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${MYHOME}"
        },
        {
          "CmdLine": [
            "git clone https://github.com/project-everest/everest.git everest"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${MYHOME}/everest"
        },
        {
          "Env": [
            {
              "Key": "EVEREST_ENV_DEST_FILE",
              "Value": "${MYHOME}/.profile"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "./everest --yes check pull"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "hacl-star/other_providers"
        },
        {
          "CmdLine": [
            "git submodule update --init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "openssl"
        },
        {
          "CmdLine": [
            "./config no-asm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_HOME",
              "Value": "${MYHOME}/everest/hacl-star/other_providers/openssl"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "../libsodium"
        },
        {
          "CmdLine": [
            "./autogen.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./configure --disable-asm --enable-opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "\"/usr/local/lib\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIBSODIUM_HOME",
              "Value": "/usr/local"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "coqv",
              "Value": "8.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "opam repo add coq-released http://coq.inria.fr/opam/released"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "opam install coq.${coqv} \u0026\u0026 opam pin add coq ${coqv}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${MYHOME}/everest"
        },
        {
          "CmdLine": [
            "/bin/bash",
            "--login",
            "-c"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash",
            "--login"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "\"/bin/bash --login\""
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}