{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7-fpm-alpine",
      "SourceCode": "FROM php:7-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7-fpm-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Tien Nhan \u003cnhantien.ca@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual build-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache alpine-sdk bash autoconf curl freetype-dev gdb git htop icu-dev     libmcrypt-dev libtool libltdl libjpeg-turbo-dev libpng-dev     make re2c strace tzdata zip pcre-dev libxml2-dev pwgen linux-headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache supervisor nginx varnish redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar     \u0026\u0026 chmod +x wp-cli.phar     \u0026\u0026 mv wp-cli.phar /usr/local/bin/wp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -f redis-3.1.4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/  --with-png-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) gd intl mysqli pdo_mysql zip bcmath mcrypt exif soap     \u0026\u0026 docker-php-ext-enable opcache redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://download.redis.io/redis-stable.tar.gz     \u0026\u0026 tar xvzf redis-stable.tar.gz     \u0026\u0026 cd redis-stable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' redis-stable/src/server.h; \tsed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' redis-stable/src/server.h; \tgrep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' redis-stable/src/server.h;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make -C redis-stable -j \"$(nproc)\"; \tmake -C redis-stable install; \trm -rf redis-stable \tapk del build-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/nginx/sites-available/     \u0026\u0026 mkdir -p /etc/nginx/sites-enabled/     \u0026\u0026 mkdir -p /etc/nginx/ssl/     \u0026\u0026 mkdir -p /var/www/app     \u0026\u0026 mkdir -p /run/nginx     \u0026\u0026 mkdir -p /var/run/redis/     \u0026\u0026 mkdir -p /var/log/redis/     \u0026\u0026 mkdir -p /etc/redis     \u0026\u0026 mkdir -p /var/log/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/app.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/varnish-default.vcl",
            "/etc/varnish/default.vcl"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/nginx-site.conf",
            "/etc/nginx/sites-available/default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/redis.conf",
            "/etc/redis/redis.conf"
          ]
        },
        {
          "CmdLine": [
            "ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer create-project roots/bedrock app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"define('WP_CACHE_KEY_SALT', env('WP_CACHE_KEY_SALT'));\" \u003e\u003e app/config/application.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/object-cache.php",
            "web/app/object-cache.php"
          ]
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data web/app/uploads"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}