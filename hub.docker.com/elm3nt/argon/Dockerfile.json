{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Maintainer",
              "Value": "\"Deepak Adhikari\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y wget unzip python3-pip curl   build-essential libcap-dev git cmake libncurses5-dev python-minimal   python-pip libtcmalloc-minimal4 libgoogle-perftools-dev libsqlite3-dev   doxygen clang-6.0 llvm-6.0 llvm-6.0-dev llvm-6.0-tools bison flex sudo   libboost-all-dev perl zlib1g-dev minisat vim gcc-4.8 g++-4.8 \u0026\u0026   apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install -U --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip2 install -U tabulate==0.8.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/llvm-config-6.0 /usr/bin/llvm-config \u0026\u0026   ln -s /usr/bin/clang-6.0 /usr/bin/clang \u0026\u0026   ln -s /usr/bin/clang++-6.0 /usr/bin/clang++"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m argon \u0026\u0026 echo argon:argon | chpasswd \u0026\u0026   echo 'argon  ALL=(root) NOPASSWD: ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/argon/tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/argon/tools"
        },
        {
          "CmdLine": [
            "wget https://github.com/Z3Prover/z3/archive/z3-4.8.4.zip \u0026\u0026   unzip z3-4.8.4.zip \u0026\u0026 rm z3-4.8.4.zip \u0026\u0026 cd z3-z3-4.8.4 \u0026\u0026   python scripts/mk_make.py \u0026\u0026 cd build \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/stp/stp/archive/2.3.3.zip \u0026\u0026   unzip 2.3.3.zip \u0026\u0026 rm 2.3.3.zip \u0026\u0026 cd stp-2.3.3 \u0026\u0026 mkdir build \u0026\u0026   cd build \u0026\u0026 cmake .. \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/klee/klee-uclibc/archive/klee_uclibc_v1.2.zip \u0026\u0026   unzip klee_uclibc_v1.2.zip \u0026\u0026 rm klee_uclibc_v1.2.zip \u0026\u0026   cd klee-uclibc-klee_uclibc_v1.2 \u0026\u0026 ./configure --make-llvm-lib  \u0026\u0026 make -j2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/klee/klee/archive/v2.0.zip \u0026\u0026 unzip v2.0.zip \u0026\u0026   rm v2.0.zip \u0026\u0026 cd klee-2.0 \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake   -DENABLE_SOLVER_Z3=ON   -DENABLE_SOLVER_STP=ON   -DENABLE_UNIT_TESTS=OFF   -DENABLE_KLEE_UCLIBC=ON   -DENABLE_SYSTEM_TESTS=OFF   -DENABLE_POSIX_RUNTIME=ON   -DLLVMCC=/usr/bin/clang-6.0   -DLLVMCXX=/usr/bin/clang++-6.0   -DLLVM_CONFIG_BINARY=/usr/bin/llvm-config-6.0   -DKLEE_UCLIBC_PATH=../../klee-uclibc-klee_uclibc_v1.2   ../ \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/elm3nt/table/raw/d1ba4bf5e4da0f24ccca6e35d242ee7e7d8a9dd4/tigress-Linux-x86_64-2.2.zip \u0026\u0026   unzip tigress-Linux-x86_64-2.2.zip \u0026\u0026 rm tigress-Linux-x86_64-2.2.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo rm /usr/bin/gcc \u0026\u0026 sudo ln -s /usr/bin/gcc-4.8 /usr/bin/gcc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export TIGRESS_HOME=/home/argon/tools/tigress-2.2' \u003e\u003e /home/argon/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/elm3nt/argon-cli/archive/v0.1.1.zip \u0026\u0026 unzip v0.1.1.zip \u0026\u0026   rm v0.1.1.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo pip3 install -U -r /home/argon/tools/argon-cli-0.1.1/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=$PATH:/home/argon/tools/tigress-2.2' \u003e\u003e /home/argon/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=$PATH:/home/argon/tools/argon-cli-0.1.1' \u003e\u003e /home/argon/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=$PATH:/home/argon/tools/klee-2.0/build/bin' \u003e\u003e /home/argon/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "argon"
        },
        {
          "Name": "workdir",
          "Path": "/home/argon"
        },
        {
          "CmdLine": [
            "sudo chown argon:argon /home/argon/tools/ -R"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}