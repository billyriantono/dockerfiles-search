MetaArgs: null
Stages:
- BaseName: golang:1.12.7-alpine3.10
  Commands:
  - Maintainer: kateinoigakukun
    Name: maintainer
  - Env:
    - Key: DOCKER_CHANNEL
      Value: stable
    Name: env
  - Env:
    - Key: DOCKER_VERSION
      Value: 19.03.0
    Name: env
  - Env:
    - Key: COMPOSE_VERSION
      Value: 1.24.1
    Name: env
  - Name: workdir
    Path: /elypod
  - CmdLine:
    - apk --update add git less openssh py-pip python-dev libffi-dev openssl-dev gcc
      libc-dev make &&     rm -rf /var/lib/apt/lists/* &&     rm /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \t\tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tx86_64)
      dockerArch='x86_64' ;; \t\tarmhf) dockerArch='armel' ;; \t\tarmv7) dockerArch='armhf'
      ;; \t\taarch64) dockerArch='aarch64' ;; \t\t*) echo >&2 \"error: unsupported
      architecture ($apkArch)\"; exit 1 ;;\tesac; \t\tif ! wget -O docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz\";
      then \t\techo >&2 \"error: failed to download 'docker-${DOCKER_VERSION}' from
      '${DOCKER_CHANNEL}' for '${dockerArch}'\"; \t\texit 1; \tfi; \t\ttar --extract
      \t\t--file docker.tgz \t\t--strip-components 1 \t\t--directory /usr/local/bin/
      \t; \trm docker.tgz; \t\tdockerd --version; \tdocker --version"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install "docker-compose${COMPOSE_VERSION:+==}${COMPOSE_VERSION}"
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/bketelsen/captainhook
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $HOME/.ssh &&     chmod 0700 $HOME/.ssh &&     ssh-keyscan github.com
      > $HOME/.ssh/known_hosts
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ssh/config
    - /root/.ssh/config
  - Chown: ""
    Name: add
    SourcesAndDest:
    - webhooks
    - /elypod/webhooks
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts
    - /elypod/scripts
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /go/bin/captainhook
    - -listen-addr=0.0.0.0:80
    - -configdir=/elypod/webhooks
    Name: cmd
    PrependShell: false
  From:
    Image: golang:1.12.7-alpine3.10
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.12.7-alpine3.10
