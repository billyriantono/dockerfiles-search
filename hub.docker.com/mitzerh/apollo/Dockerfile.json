{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "org.label-schema.schema-version",
              "Value": "= \"1.0\"     org.label-schema.name=\"CentOS Base Image\"     org.label-schema.vendor=\"CentOS\"     org.label-schema.license=\"GPLv2\"     org.label-schema.build-date=\"20180531\""
            }
          ],
          "Name": "label"
        },
        {
          "Maintainer": "mitzerh\u003cmitzerh+docker@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo Update package manager \u0026\u0026   yum makecache fast \u0026\u0026   yum update -y \u0026\u0026   curl -O https://bootstrap.pypa.io/get-pip.py \u0026\u0026   python get-pip.py \u0026\u0026   pip install     awscli     boto     boto3     \u0026\u0026   echo \"http-prser requirement https://bugs.centos.org/view.php?id=13669\u0026nbn=1\" \u0026\u0026   rpm -ivh https://kojipkgs.fedoraproject.org//packages/http-parser/2.7.1/3.el7/x86_64/http-parser-2.7.1-3.el7.x86_64.rpm \u0026\u0026   yum -y install     which     ruby     ruby-devel     gcc     gcc-c++     make     rubygems     git     dos2unix     bzip2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install   httpd   httpd-tools   cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.orig \u0026\u0026   sed -i 's/#ServerName www\\.example\\.com:80/ServerName localhost:80/' /etc/httpd/conf/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"installing node\" \u0026\u0026   curl -sL https://rpm.nodesource.com/setup_10.x | bash - \u0026\u0026   yum install -y nodejs \u0026\u0026   npm install -g grunt grunt-cli pm2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo Done!"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src",
            "/bin/"
          ]
        },
        {
          "CmdLine": [
            "echo Deal with Windows miscreance CRs with LF \u0026\u0026   sed -i 's/\\r$//' /bin/bootstrap.sh \u0026\u0026   echo Deal with Mac miscreance CRs with no LF \u0026\u0026   tr '\\r' '\\n' \u003c /bin/bootstrap.sh \u003e /bin/bootstrap.sh.tmp \u0026\u0026   mv /bin/bootstrap.sh.tmp /bin/bootstrap.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/local/root"
          ]
        },
        {
          "CmdLine": [
            "/bin/sh",
            "/bin/bootstrap.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}