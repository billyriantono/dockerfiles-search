{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.7",
      "SourceCode": "FROM python:3.7",
      "Platform": "",
      "From": {
        "Image": "python:3.7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"marcus@punchcyber.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "stoq"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GROUP",
              "Value": "stoq"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "STOQ_HOME",
              "Value": "/home/$USER/.stoq"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "STOQ_TMP",
              "Value": "/tmp/stoq"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XORSEARCH_VER",
              "Value": "1_11_2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "EXIFTOOL_VER",
              "Value": "11.80"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -r $USER \u0026\u0026 useradd -r -g $GROUP $USER \u0026\u0026     mkdir -p /home/$USER/.stoq/plugins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     apt-add-repository -y non-free \u0026\u0026     apt-get update \u0026\u0026     apt-get -y install     automake     build-essential     libyaml-dev     git-core     p7zip-full     unace-nonfree     unzip     wget     curl     libfuzzy-dev     libc6-i386     libssl-dev     swig     lib32ncurses6 \u0026\u0026     apt-get clean -y \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install stoq-framework\\\u003e=3.0.0b0 six \u0026\u0026     git clone https://github.com/PUNCH-Cyber/stoq-plugins-public ${STOQ_TMP}/stoq-plugins-public \u0026\u0026     cd ${STOQ_TMP}/stoq-plugins-public \u0026\u0026     git checkout v3 \u0026\u0026     for plugin in `ls -d */`; do stoq install $plugin; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${STOQ_TMP}"
        },
        {
          "CmdLine": [
            "wget -O XORSearch.zip \"https://didierstevens.com/files/software/XORSearch_V${XORSEARCH_VER}.zip\" \u0026\u0026     unzip -qq XORSearch -d XORSearch \u0026\u0026     gcc -o /usr/local/bin/xorsearch XORSearch/XORSearch.c"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O exif.tgz \"https://www.sno.phy.queensu.ca/~phil/exiftool/Image-ExifTool-${EXIFTOOL_VER}.tar.gz\" \u0026\u0026     tar -xvf exif.tgz \u0026\u0026     cd Image-ExifTool-${EXIFTOOL_VER} \u0026\u0026     perl Makefile.PL \u0026\u0026     make \u0026\u0026     make test \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O trid_linux_64.zip \"http://mark0.net/download/trid_linux_64.zip\" \u0026\u0026     unzip -qq trid_linux_64 -d /usr/local/bin \u0026\u0026     chmod +x /usr/local/bin/trid \u0026\u0026     wget -O triddefs.zip \"http://mark0.net/download/triddefs.zip\" \u0026\u0026     unzip -qq triddefs -d /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf $STOQ_TMP"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "stoq"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}