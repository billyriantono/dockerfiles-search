MetaArgs: null
Stages:
- BaseName: python:3.6.5-stretch
  Commands:
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tbzip2 \t\tunzip
      \t\txz-utils \t\tautoconf                                                        automake
      \                                                       cmake                                                           fish
      \                                                           g++                                                             gettext
      \                                                        git                                                             libtool
      \                                                        libtool-bin                                                     lua5.3
      \                                                         ninja-build                                                     pkg-config
      \                                                     unzip                                                           xclip
      \                                                          xfonts-utils                                                \t&&
      rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -svT "/usr/lib/jvm/java-8-openjdk-$(dpkg --print-architecture)" /docker-java-home
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /docker-java-home
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u181
    Name: env
  - Env:
    - Key: JAVA_DEBIAN_VERSION
      Value: 8u181-b13-2~deb9u1
    Name: env
  - Env:
    - Key: CA_CERTIFICATES_JAVA_VERSION
      Value: 20170531+nmu1
    Name: env
  - CmdLine:
    - "set -ex; \t\tif [ ! -d /usr/share/man/man1 ]; then \t\tmkdir -p /usr/share/man/man1;
      \tfi; \t\tapt-get update; \tapt-get install -y --no-install-recommends \t\topenjdk-8-jdk=\"$JAVA_DEBIAN_VERSION\"
      \t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \t; \trm -rf /var/lib/apt/lists/*;
      \t\t[ \"$(readlink -f \"$JAVA_HOME\")\" = \"$(docker-java-home)\" ]; \t\tupdate-alternatives
      --get-selections | awk -v home=\"$(readlink -f \"$JAVA_HOME\")\" 'index($3,
      home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\"
      }'; \tupdate-alternatives --query java | grep -q 'Status: manual'"
    Name: run
    PrependShell: true
  - CmdLine:
    - /var/lib/dpkg/info/ca-certificates-java.postinst configure
    Name: run
    PrependShell: true
  - Key: MAVEN_VERSION
    Name: arg
    Value: 3.6.0
  - Key: USER_HOME_DIR
    Name: arg
    Value: '"/root"'
  - Key: SHA
    Name: arg
    Value: fae9c12b570c3ba18116a4e26ea524b29f7279c17cbaadc3326ca72927368924d9131d11b9e851b8dc9162228b6fdea955446be41207a5cfc61283dd8a561d2f
  - Key: BASE_URL
    Name: arg
    Value: https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries
  - CmdLine:
    - mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL -o /tmp/apache-maven.tar.gz
      ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz   && echo "${SHA}  /tmp/apache-maven.tar.gz"
      | sha512sum -c -   && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven
      --strip-components=1   && rm -f /tmp/apache-maven.tar.gz   && ln -s /usr/share/maven/bin/mvn
      /usr/bin/mvn
    Name: run
    PrependShell: true
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/share/maven
    Name: env
  - Env:
    - Key: MAVEN_CONFIG
      Value: '"$USER_HOME_DIR/.m2"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mvn-entrypoint.sh
    - /usr/local/bin/mvn-entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - settings-docker.xml
    - /usr/share/maven/ref/
  - CmdLine:
    - cd /usr/src                                                   && git clone https://github.com/neovim/neovim.git               &&
      cd neovim                                                    && make CMAKE_BUILD_TYPE=RelWithDebInfo                                 CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX=/usr/local"   &&
      make install                                                 && rm -r /usr/src/neovim
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/spacevim
    Name: env
  - CmdLine:
    - groupdel users                                                && groupadd -r
      spacevim                                         && useradd --create-home --home-dir
      $HOME                                  -r -g spacevim                                                  spacevim
    Name: run
    PrependShell: true
  - Name: user
    User: spacevim
  - Name: workdir
    Path: $HOME
  - Env:
    - Key: PATH
      Value: '"$HOME/.local/bin:${PATH}"'
    Name: env
  - CmdLine:
    - mkdir -p $HOME/.config $HOME/.SpaceVim.d
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --user neovim pipenv
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/SpaceVim/SpaceVim/master/docker/init.toml
      > $HOME/.SpaceVim.d/init.toml
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sLf https://spacevim.org/install.sh | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - nvim --headless +'call dein#install()' +qall
    Name: run
    PrependShell: true
  - CmdLine:
    - rm $HOME/.SpaceVim.d/init.toml
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/nvim
    Name: entrypoint
    PrependShell: true
  From:
    Image: python:3.6.5-stretch
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6.5-stretch
