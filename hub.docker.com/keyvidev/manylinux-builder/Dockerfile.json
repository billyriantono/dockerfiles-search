{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "quay.io/pypa/manylinux1_x86_64",
      "SourceCode": "FROM quay.io/pypa/manylinux1_x86_64",
      "Platform": "",
      "From": {
        "Image": "quay.io/pypa/manylinux1_x86_64"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum -y update; yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install  bzip2-devel                     snappy-devel                     python-devel \u0026\u0026                     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum remove cmake28 -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ZLIB_MAJOR",
              "Value": "1"
            },
            {
              "Key": "ZLIB_MINOR",
              "Value": "2"
            },
            {
              "Key": "ZLIB_PATCH",
              "Value": "11"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL https://zlib.net/zlib-${ZLIB_MAJOR}.${ZLIB_MINOR}.${ZLIB_PATCH}.tar.gz | tar -xz \u0026\u0026     cd zlib-${ZLIB_MAJOR}.${ZLIB_MINOR}.${ZLIB_PATCH} \u0026\u0026 ./configure \u0026\u0026 make -j4 \u0026\u0026 make install \u0026\u0026     cd .. \u0026\u0026 rm -rf zlib-${ZLIB_MAJOR}.${ZLIB_MINOR}.${ZLIB_PATCH}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BOOST_MAJOR",
              "Value": "1"
            },
            {
              "Key": "BOOST_MINOR",
              "Value": "66"
            },
            {
              "Key": "BOOST_PATCH",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -s -SL http://sourceforge.net/projects/boost/files/boost/${BOOST_MAJOR}.${BOOST_MINOR}.${BOOST_PATCH}/boost_${BOOST_MAJOR}_${BOOST_MINOR}_${BOOST_PATCH}.tar.gz | tar xz \u0026\u0026     cd boost_${BOOST_MAJOR}_${BOOST_MINOR}_${BOOST_PATCH} \u0026\u0026     ./bootstrap.sh --without-libraries=graph_parallel,python, \u0026\u0026     ./b2 -d0 --prefix=/usr/local/ install \u0026\u0026     cd .. \u0026\u0026 rm -rf boost_*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CMAKE_MAJOR",
              "Value": "3"
            },
            {
              "Key": "CMAKE_MINOR",
              "Value": "10"
            },
            {
              "Key": "CMAKE_PATCH",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL https://cmake.org/files/v${CMAKE_MAJOR}.${CMAKE_MINOR}/cmake-${CMAKE_MAJOR}.${CMAKE_MINOR}.${CMAKE_PATCH}.tar.gz | tar -xz \u0026\u0026     cd cmake-${CMAKE_MAJOR}.${CMAKE_MINOR}.${CMAKE_PATCH} \u0026\u0026 ./bootstrap \u0026\u0026 make -j4 \u0026\u0026 make install \u0026\u0026     cd .. \u0026\u0026 rm -rf cmake-${CMAKE_MAJOR}.${CMAKE_MINOR}.${CMAKE_PATCH}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}