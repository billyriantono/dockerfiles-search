{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Romain THERRAT \u003cromain@pockost.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -xe   \u0026\u0026 BUILD_TOOLS=\"git libtool automake autoconf g++ curl-dev libxml2-dev linux-headers pcre-dev make yajl-dev geoip-dev\" \t\u0026\u0026 apk add --no-cache --virtual .build-deps      $BUILD_TOOLS      flex      bison   \u0026\u0026 git clone https://github.com/SpiderLabs/ModSecurity /usr/local/src/libmodsecurity   \u0026\u0026 cd /usr/local/src/libmodsecurity   \u0026\u0026 git checkout v3/master   \u0026\u0026 sh build.sh   \u0026\u0026 git submodule init   \u0026\u0026 git submodule update   \u0026\u0026 ./configure --with-yajl=/usr/   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 apk del $BUILD_TOOLS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.15.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe   \u0026\u0026 git clone https://github.com/SpiderLabs/ModSecurity-nginx /usr/local/src/libmodsecurity-nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src/   \u0026\u0026 wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz   \u0026\u0026 tar xf nginx-${NGINX_VERSION}.tar.gz   \u0026\u0026 rm nginx-${NGINX_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src/nginx-${NGINX_VERSION}   \u0026\u0026 ./configure --with-compat --add-dynamic-module=/usr/local/src/libmodsecurity-nginx/   \u0026\u0026 make modules"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "nginx:1.15.2-alpine",
      "SourceCode": "FROM nginx:1.15.2-alpine",
      "Platform": "",
      "From": {
        "Image": "nginx:1.15.2-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Romain THERRAT \u003cromain@pockost.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/src/nginx-${NGINX_VERSION}/objs/ngx_http_modsecurity_module.so",
            "/etc/nginx/modules"
          ]
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/modsecurity/lib/libmodsecurity.so",
            "/usr/local/lib/libmodsecurity.so"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache libcurl yajl libstdc++   \u0026\u0026 ln -s /usr/local/lib/libmodsecurity.so /usr/local/lib/libmodsecurity.so.3   \u0026\u0026 sed -i '/events {/i        load_module modules/ngx_http_modsecurity_module.so;' /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}