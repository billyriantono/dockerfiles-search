{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.4-alpine",
      "SourceCode": "FROM ruby:2.4-alpine",
      "Platform": "",
      "From": {
        "Image": "ruby:2.4-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "\"name\"",
              "Value": "\"ensemble\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "\"version\"",
              "Value": "\"0.0.1\""
            }
          ],
          "Name": "label"
        },
        {
          "Maintainer": "Hearst Automation Team",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "APP_HOME",
              "Value": "/usr/src/rails"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "BUILD_ENV",
          "Name": "arg",
          "Value": "prod"
        },
        {
          "Key": "RAILS_ENV",
          "Name": "arg",
          "Value": "production"
        },
        {
          "Key": "RACK_ENV",
          "Name": "arg",
          "Value": "production"
        },
        {
          "CmdLine": [
            "mkdir -p $APP_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$APP_HOME"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "$APP_HOME"
          ]
        },
        {
          "CmdLine": [
            "echo \"http://dl-cdn.alpinelinux.org/alpine/edge/main\" \u003e\u003e /etc/apk/repositories \u0026\u0026    echo \"http://dl-cdn.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories \u0026\u0026    echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \u0026\u0026    apk update \u0026\u0026 apk add     bash     supervisor     git     nodejs     openssl-dev     libpq     postgresql-client     libxml2-dev     libxslt-dev     exim \u0026\u0026    runDeps=\"$(         scanelf --needed --nobanner --recursive /usr/local             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\" \u0026\u0026    apk add --virtual .ruby-builddeps $runDeps     build-base     ruby-dev     libc-dev     sqlite-libs     sqlite-dev     postgresql-dev     linux-headers \u0026\u0026     gem install bundler \u0026\u0026    mkdir -p /var/log/exim \u0026\u0026    touch /var/log/exim/mainlog \u0026\u0026    chmod 666 /var/log/exim/mainlog \u0026\u0026    if [ \"${BUILD_ENV}\" == 'dev' ]; then bundle install --with development --without test; fi \u0026\u0026    if [ \"${BUILD_ENV}\" == 'prod' ]; then bundle install --without development --without test; fi \u0026\u0026    if [ \"${BUILD_ENV}\" == 'test' ]; then bundle install --with test; fi \u0026\u0026    bundle exec rake assets:precompile \u0026\u0026    bundle exec rake setup:docker_config[\"$BUILD_ENV\"] \u0026\u0026    apk del .ruby-builddeps \u0026\u0026    gem cleanup \u0026\u0026    rm -rf /var/cache/apk/* \u0026\u0026    rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "CmdLine": [
            "supervisord",
            "-c",
            "/usr/src/rails/supervisord.conf",
            "-n"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}