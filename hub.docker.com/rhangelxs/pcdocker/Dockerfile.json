{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3",
      "SourceCode": "FROM python:3",
      "Platform": "",
      "From": {
        "Image": "python:3"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./requirements",
            "/requirements"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./requirements.txt",
            "/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install -r /requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -r /requirements/local.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r django \u0026\u0026 useradd -r -g django django"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install nodejs npm ruby-compass --yes \u0026\u0026 apt-get autoremove --yes \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/python python /usr/local/bin/python 10"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /app \u0026\u0026 npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /app \u0026\u0026 grunt build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R django /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./compose/django/env.sh",
            "/env.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./compose/django/gunicorn.sh",
            "/gunicorn.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./compose/django/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /env.sh \u0026\u0026 chown django /env.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh \u0026\u0026 chown django /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /gunicorn.sh \u0026\u0026 chown django /gunicorn.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app/pcdocker"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}