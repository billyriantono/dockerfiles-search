{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Thomas VIAL\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"docker-mailserver\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"A fullstack but simple mailserver (smtp, imap, antispam, antivirus, ssl...)\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/tomav/docker-mailserver\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/tomav/docker-mailserver\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VCS_VERSION"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Env": [
            {
              "Key": "VIRUSMAILS_DELETE_DELAY",
              "Value": "7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ONE_DIR",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ENABLE_POSTGREY",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FETCHMAIL_POLL",
              "Value": "300"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGREY_DELAY",
              "Value": "300"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGREY_MAX_AGE",
              "Value": "35"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGREY_AUTO_WHITELIST_CLIENTS",
              "Value": "5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGREY_TEXT",
              "Value": "\"Delayed by postgrey\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SASLAUTHD_MECHANISMS",
              "Value": "pam"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SASLAUTHD_MECH_OPTIONS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-o",
            "pipefail",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "echo \"deb http://http.debian.net/debian stretch-backports main\" | tee -a /etc/apt/sources.list.d/stretch-bp.list \u0026\u0026   apt-get update -q --fix-missing \u0026\u0026   apt-get -y install postfix \u0026\u0026   apt-get -y install --no-install-recommends     amavisd-new     apt-transport-https     arj     binutils     bzip2     ca-certificates     cabextract     clamav     clamav-daemon     cpio     curl     ed     fail2ban     fetchmail     file     gamin     gzip     gnupg     iproute2     iptables     locales     logwatch     libdate-manip-perl     liblz4-tool     libmail-spf-perl     libnet-dns-perl     libsasl2-modules     lrzip     lzop     netcat-openbsd     nomarch     opendkim     opendkim-tools     opendmarc     pax     pflogsumm     p7zip-full     postfix-ldap     postfix-pcre     postfix-policyd-spf-python     postsrsd     pyzor     razor     ripole     rpm2cpio     rsyslog     sasl2-bin     spamassassin     supervisor     postgrey     unrar-free     unzip     whois     xz-utils     zoo     \u0026\u0026   curl https://repo.dovecot.org/DOVECOT-REPO-GPG | gpg --import \u0026\u0026   gpg --export ED409DA1 \u003e /etc/apt/trusted.gpg.d/dovecot.gpg \u0026\u0026   echo \"deb https://repo.dovecot.org/ce-2.3-latest/debian/stretch stretch main\" \u003e /etc/apt/sources.list.d/dovecot-community.list \u0026\u0026   apt-get update -q --fix-missing \u0026\u0026   apt-get -y install --no-install-recommends     dovecot-core     dovecot-imapd     dovecot-ldap     dovecot-lmtpd     dovecot-managesieved     dovecot-pop3d     dovecot-sieve     dovecot-solr     \u0026\u0026   apt-get autoclean \u0026\u0026   rm -rf /var/lib/apt/lists/* \u0026\u0026   rm -rf /usr/share/locale/* \u0026\u0026   rm -rf /usr/share/man/* \u0026\u0026   rm -rf /usr/share/doc/* \u0026\u0026   touch /var/log/auth.log \u0026\u0026   update-locale \u0026\u0026   rm -f /etc/cron.weekly/fstrim \u0026\u0026   rm -f /etc/postsrsd.secret \u0026\u0026   rm -f /etc/cron.daily/00logwatch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://packages.elasticsearch.org/GPG-KEY-elasticsearch | apt-key add - \u0026\u0026   echo \"deb http://packages.elastic.co/beats/apt stable main\" | tee -a /etc/apt/sources.list.d/beats.list \u0026\u0026   apt-get update -q --fix-missing \u0026\u0026   apt-get -y install --no-install-recommends     filebeat   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/filebeat.yml.tmpl",
            "/etc/filebeat/filebeat.yml.tmpl"
          ]
        },
        {
          "CmdLine": [
            "echo \"0 */6 * * * clamav /usr/bin/freshclam --quiet\" \u003e /etc/cron.d/clamav-freshclam \u0026\u0026   chmod 644 /etc/clamav/freshclam.conf \u0026\u0026   freshclam \u0026\u0026   sed -i 's/Foreground false/Foreground true/g' /etc/clamav/clamd.conf \u0026\u0026   sed -i 's/AllowSupplementaryGroups false/AllowSupplementaryGroups true/g' /etc/clamav/clamd.conf \u0026\u0026   mkdir /var/run/clamav \u0026\u0026   chown -R clamav:root /var/run/clamav"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/dovecot/auth-passwdfile.inc",
            "target/dovecot/??-*.conf",
            "/etc/dovecot/conf.d/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/usr/share/dovecot"
        },
        {
          "CmdLine": [
            "sed -i -e 's/include_try \\/usr\\/share\\/dovecot\\/protocols\\.d/include_try \\/etc\\/dovecot\\/protocols\\.d/g' /etc/dovecot/dovecot.conf \u0026\u0026   sed -i -e 's/#mail_plugins = \\$mail_plugins/mail_plugins = \\$mail_plugins sieve/g' /etc/dovecot/conf.d/15-lda.conf \u0026\u0026   sed -i -e 's/^.*lda_mailbox_autocreate.*/lda_mailbox_autocreate = yes/g' /etc/dovecot/conf.d/15-lda.conf \u0026\u0026   sed -i -e 's/^.*lda_mailbox_autosubscribe.*/lda_mailbox_autosubscribe = yes/g' /etc/dovecot/conf.d/15-lda.conf \u0026\u0026   sed -i -e 's/^.*postmaster_address.*/postmaster_address = '${POSTMASTER_ADDRESS:=\"postmaster@domain.com\"}'/g' /etc/dovecot/conf.d/15-lda.conf \u0026\u0026   sed -i 's/#imap_idle_notify_interval = 2 mins/imap_idle_notify_interval = 29 mins/' /etc/dovecot/conf.d/20-imap.conf \u0026\u0026   sed -i 's/CERTDIR=.*/CERTDIR=\\/etc\\/dovecot\\/ssl/g' /usr/share/dovecot/mkcert.sh \u0026\u0026   sed -i 's/KEYDIR=.*/KEYDIR=\\/etc\\/dovecot\\/ssl/g' /usr/share/dovecot/mkcert.sh \u0026\u0026   sed -i 's/KEYFILE=.*/KEYFILE=\\$KEYDIR\\/dovecot.key/g' /usr/share/dovecot/mkcert.sh \u0026\u0026   mkdir /etc/dovecot/ssl \u0026\u0026   chmod 755 /etc/dovecot/ssl  \u0026\u0026   ./mkcert.sh  \u0026\u0026   mkdir -p /usr/lib/dovecot/sieve-pipe /usr/lib/dovecot/sieve-filter /usr/lib/dovecot/sieve-global \u0026\u0026   chmod 755 -R /usr/lib/dovecot/sieve-pipe /usr/lib/dovecot/sieve-filter /usr/lib/dovecot/sieve-global"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/dovecot/dovecot-ldap.conf.ext",
            "/etc/dovecot"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/postfix/ldap-users.cf",
            "target/postfix/ldap-groups.cf",
            "target/postfix/ldap-aliases.cf",
            "target/postfix/ldap-domains.cf",
            "/etc/postfix/"
          ]
        },
        {
          "CmdLine": [
            "sed -i -r 's/^(CRON)=0/\\1=1/g' /etc/default/spamassassin \u0026\u0026     sed -i -r 's/^\\$INIT restart/supervisorctl restart amavis/g' /etc/spamassassin/sa-update-hooks.d/amavisd-new"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/postgrey/postgrey",
            "/etc/default/postgrey"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/postgrey/postgrey.init",
            "/etc/init.d/postgrey"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /etc/init.d/postgrey \u0026\u0026   mkdir /var/run/postgrey \u0026\u0026   chown postgrey:postgrey /var/run/postgrey"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/postsrsd/postsrsd",
            "/etc/default/postsrsd"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/amavis/conf.d/*",
            "/etc/amavis/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "sed -i -r 's/#(@|   \\\\%)bypass/\\1bypass/g' /etc/amavis/conf.d/15-content_filter_mode \u0026\u0026   adduser clamav amavis \u0026\u0026   adduser amavis clamav \u0026\u0026   adduser --system syslog \u0026\u0026   useradd -u 5000 -d /home/docker -s /bin/bash -p \"$(echo docker | openssl passwd -1 -stdin)\" docker \u0026\u0026   echo \"0 4 * * * /usr/local/bin/virus-wiper\" | crontab -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/fail2ban/jail.conf",
            "/etc/fail2ban/jail.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/fail2ban/filter.d/dovecot.conf",
            "/etc/fail2ban/filter.d/dovecot.conf"
          ]
        },
        {
          "CmdLine": [
            "echo \"ignoreregex =\" \u003e\u003e /etc/fail2ban/filter.d/postfix-sasl.conf \u0026\u0026 mkdir /var/run/fail2ban"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "su - amavis -c \"razor-admin -create \u0026\u0026   razor-admin -register\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/opendkim/opendkim.conf",
            "/etc/opendkim.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/opendkim/default-opendkim",
            "/etc/default/opendkim"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/opendmarc/opendmarc.conf",
            "/etc/opendmarc.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/opendmarc/default-opendmarc",
            "/etc/default/opendmarc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/opendmarc/ignore.hosts",
            "/etc/opendmarc/ignore.hosts"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/fetchmail/fetchmailrc",
            "/etc/fetchmailrc_general"
          ]
        },
        {
          "CmdLine": [
            "sed -i 's/START_DAEMON=no/START_DAEMON=yes/g' /etc/default/fetchmail"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/run/fetchmail \u0026\u0026 chown fetchmail /var/run/fetchmail"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/postfix/main.cf",
            "target/postfix/master.cf",
            "/etc/postfix/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/postfix/header_checks.pcre",
            "target/postfix/sender_header_filter.pcre",
            "target/postfix/sender_login_maps.pcre",
            "/etc/postfix/maps/"
          ]
        },
        {
          "CmdLine": [
            "echo \"\" \u003e /etc/aliases"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -r \"/^#?compress/c\\compress\\ncopytruncate\" /etc/logrotate.conf \u0026\u0026   mkdir -p /var/log/mail \u0026\u0026   chown syslog:root /var/log/mail \u0026\u0026   touch /var/log/mail/clamav.log \u0026\u0026   chown -R clamav:root /var/log/mail/clamav.log \u0026\u0026   touch /var/log/mail/freshclam.log \u0026\u0026   chown -R clamav:root /var/log/mail/freshclam.log \u0026\u0026   sed -i -r 's|/var/log/mail|/var/log/mail/mail|g' /etc/rsyslog.conf \u0026\u0026   sed -i -r 's|;auth,authpriv.none|;mail.none;mail.error;auth,authpriv.none|g' /etc/rsyslog.conf \u0026\u0026   sed -i -r 's|LogFile /var/log/clamav/|LogFile /var/log/mail/|g' /etc/clamav/clamd.conf \u0026\u0026   sed -i -r 's|UpdateLogFile /var/log/clamav/|UpdateLogFile /var/log/mail/|g' /etc/clamav/freshclam.conf \u0026\u0026   sed -i -r 's|/var/log/clamav|/var/log/mail|g' /etc/logrotate.d/clamav-daemon \u0026\u0026   sed -i -r 's|/var/log/clamav|/var/log/mail|g' /etc/logrotate.d/clamav-freshclam \u0026\u0026   sed -i -r 's|/var/log/mail|/var/log/mail/mail|g' /etc/logrotate.d/rsyslog \u0026\u0026   sed -i -r '/\\/var\\/log\\/mail\\/mail.log/d' /etc/logrotate.d/rsyslog \u0026\u0026   sed -i -e 's/\\(printerror \"could not determine current runlevel\"\\)/#\\1/' /usr/sbin/invoke-rc.d \u0026\u0026   sed -i -e 's/^\\(POLICYHELPER=\\).*/\\1/' /usr/sbin/invoke-rc.d \u0026\u0026   sed -i -e 's/invoke-rc.d rsyslog rotate \u003e \\/dev\\/null/invoke-rc.d rsyslog --quiet rotate \u003e \\/dev\\/null/g' /etc/logrotate.d/rsyslog"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem \u003e /etc/ssl/certs/lets-encrypt-x3-cross-signed.pem"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./target/bin",
            "/usr/local/bin"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./target/helper_functions.sh",
            "./target/check-for-changes.sh",
            "./target/start-mailserver.sh",
            "./target/fail2ban-wrapper.sh",
            "./target/postfix-wrapper.sh",
            "./target/postsrsd-wrapper.sh",
            "./target/docker-configomat/configomat.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/supervisor/supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "target/supervisor/conf.d/*",
            "/etc/supervisor/conf.d/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Name": "expose",
          "Ports": [
            "110",
            "143",
            "25",
            "4190",
            "465",
            "587",
            "993",
            "995"
          ]
        },
        {
          "CmdLine": [
            "supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}