{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Alexander Schenkel \u003calex@alexi.ch\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www"
          ]
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 \u0026\u0026 dpkg-reconfigure locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_MONETARY",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y       mysql-client       wget       unzip       texlive-latex-base       texlive-latex-extra       lcdf-typetools       pdfjam       pdftk       imagemagick       python-pip        nodejs        apache2       php7.0       php-curl       php7.0-cli       libapache2-mod-php7.0       php-apcu       php7.0-gd       php7.0-json       php7.0-ldap       php7.0-mbstring       php7.0-mysql       php7.0-pgsql       php7.0-sqlite3       php7.0-xml       php7.0-xsl       php7.0-zip       php7.0-soap       php7.0-opcache       php7.0-bz2       php7.0-xmlreader       composer       build-essential libssl-dev           \u0026\u0026 printf 'en_GB.UTF-8 UTF-8\\n' \u003e\u003e /etc/locale.gen           \u0026\u0026 locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "10.15.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source $NVM_DIR/nvm.sh     \u0026\u0026 nvm install $NODE_VERSION     \u0026\u0026 nvm alias default $NODE_VERSION     \u0026\u0026 nvm use default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/v$NODE_VERSION/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "node -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bower gulp grunt-cli grunt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "imagemagic_config",
          "Name": "arg",
          "Value": "/etc/ImageMagick-6/policy.xml"
        },
        {
          "CmdLine": [
            "if [[ -f $imagemagic_config ]] ; then sed -i 's/\u003cpolicy domain=\"coder\" rights=\"none\" pattern=\"PDF\" \\/\u003e/\u003cpolicy domain=\"coder\" rights=\"read|write\" pattern=\"PDF\" \\/\u003e/g' $imagemagic_config ; else echo did not see file $imagemagic_config ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        }
      ]
    }
  ]
}