MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Maintainer: Braydee Johnson <braydee@braydeejohnson.com>
    Name: maintainer
  - Labels:
    - Key: Description
      Value: '"Linux, Apache 2.4, PHP 5.4, CentOS 7 - LAMP Stack"'
    - Key: License
      Value: '"Apache License 2.0"'
    - Key: Version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - yum -y update && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install httpd && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install gcc php-pear php-devel make openssl-devel && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - "yum install -y \tpsmisc \thttpd \tpostfix \tphp \tphp-bcmath \tphp-common \tphp-dba
      \tphp-gd \tphp-intl \tphp-ldap \tphp-mbstring \tphp-mysqlnd \tphp-odbc \tphp-pdo
      \tphp-pecl-memcache \tphp-pgsql \tphp-pspell \tphp-recode \tphp-snmp \tphp-soap
      \tphp-xml \tphp-xmlrpc \tImageMagick \tImageMagick-devel"
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install cronie
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install epel-release -y
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
    Name: run
    PrependShell: true
  - CmdLine:
    - rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install ffmpeg ffmpeg-devel
    Name: run
    PrependShell: true
  - CmdLine:
    - yum -y install mod_ssl openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug-2.4.1
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'printf "\n" | pecl install mongo imagick'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo short_open_tag=On >> /etc/php.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo extension=mongo.so >> /etc/php.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo extension=imagick.so >> /etc/php.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "IncludeOptional sites-enabled/*.conf" >> /etc/httpd/conf/httpd.conf'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo error_log=/var/log/httpd/iwc_error.log >> /etc/php.ini'
    Name: run
    PrependShell: true
  - Env:
    - Key: XDEBUG_REMOTE_HOST
      Value: localhost
    Name: env
  - CmdLine:
    - sh -c 'echo zend_extension=/usr/lib64/php/modules/xdebug.so >> /etc/php.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "xdebug.remote_enable=1" >> /etc/php.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "xdebug.remote_handler=dbgp" >> /etc/php.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "xdebug.remote_port=9000" >> /etc/php.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "xdebug.remote_autostart=1" >> /etc/php.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "xdebug.remote_connect_back=0" >> /etc/php.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "xdebug.idekey=docker" >> /etc/php.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "xdebug.remote_host=$XDEBUG_REMOTE_HOST" >> /etc/php.ini'
    Name: run
    PrependShell: true
  - Env:
    - Key: LOG_LEVEL
      Value: error
    Name: env
  - Env:
    - Key: ALLOW_OVERRIDE
      Value: All
    Name: env
  - Env:
    - Key: DATE_TIMEZONE
      Value: UTC
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run-lap.sh
    - /usr/sbin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - index.php
    - /var/www/html/
  - CmdLine:
    - chmod +x /usr/sbin/run-lap.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R apache:apache /var/www/html
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/root/.composer/vendor/bin:$PATH"'
    Name: env
  - Name: volume
    Volumes:
    - /var/www/html
  - Name: volume
    Volumes:
    - /var/log/httpd
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /usr/sbin/run-lap.sh
    Name: cmd
    PrependShell: false
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
