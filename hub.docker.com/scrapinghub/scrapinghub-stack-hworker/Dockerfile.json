{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:12.04",
      "SourceCode": "FROM ubuntu:12.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:12.04"
      },
      "Commands": [
        {
          "Key": "PIP_INDEX_URL",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "PIP_TRUSTED_HOST",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "APT_PROXY",
          "Name": "arg",
          "Value": null
        },
        {
          "Expression": "ENV PIP_TRUSTED_HOST=$PIP_TRUSTED_HOST PIP_INDEX_URL=$PIP_INDEX_URL",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN test -n $APT_PROXY \u0026\u0026 echo 'Acquire::http::Proxy \\\"$APT_PROXY\\\";' \u003e/etc/apt/apt.conf.d/proxy",
          "Name": "onbuild"
        },
        {
          "CmdLine": [
            "sed 's/main$/main universe/' -i /etc/apt/sources.list \u0026\u0026     apt-get update -qq \u0026\u0026     apt-get install -qy         netbase ca-certificates apt-transport-https         build-essential python python-dev         libxml2-dev libssl-dev libxslt1-dev         libmysqlclient-dev         libpq-dev         libevent-dev         libffi-dev libssl-dev         libpcre3-dev libz-dev         libjpeg8-dev         libblas-dev liblapack-dev libatlas-base-dev gfortran         unixodbc unixodbc-dev         ghostscript         telnet vim htop strace ltrace iputils-ping curl wget lsof git libdb4.8-dev sudo         \u0026\u0026     rm -rf /var/lib/apt/lists"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8 de_DE.UTF-8 nl_NL.UTF-8 fr_FR.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "PIP_TIMEOUT",
              "Value": "180"
            },
            {
              "Key": "PYTHONWARNINGS",
              "Value": "\"ignore:A true SSLContext object is not available\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://bootstrap.pypa.io/get-pip.py",
            "/get-pip.py"
          ]
        },
        {
          "CmdLine": [
            "python /get-pip.py \u0026\u0026 pip install -U pip==8.1.2 setuptools==33.1.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements-base-pre.txt",
            "/"
          ]
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r requirements-base-pre.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements-base.txt",
            "/"
          ]
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r requirements-base.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/"
          ]
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "addons_eggs",
            "/app/addons_eggs"
          ]
        },
        {
          "CmdLine": [
            "chown nobody:nogroup -R /app/addons_eggs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "eggbased-entrypoint",
            "/usr/local/sbin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/sbin/eggbased-entrypoint \u0026\u0026     ln -s /usr/local/sbin/eggbased-entrypoint /usr/local/sbin/start-crawl"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}