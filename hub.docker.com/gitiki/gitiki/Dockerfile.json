{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-apache",
      "SourceCode": "FROM php:5.6-apache",
      "Platform": "",
      "From": {
        "Image": "php:5.6-apache"
      },
      "Commands": [
        {
          "Maintainer": "Francis Besset \u003cfrancis.besset+docker@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GITIKI_VERSION",
              "Value": "1.0.x-dev"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libicu-dev g++ --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 docker-php-ext-install intl  \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false g++"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libfreetype6-dev libjpeg62-turbo-dev libpng12-dev --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/  \u0026\u0026 docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"date.timezone = UTC\\nexpose_php = Off\\nshort_open_tag = Off\" \u003e /usr/local/etc/php/conf.d/gitiki.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y git zlib1g-dev openssh-client --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 docker-php-ext-install zip  \u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_NO_INTERACTION",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "requires=\"         gitiki/code-highlight:$GITIKI_VERSION         gitiki/redirector:$GITIKI_VERSION     \"  \u0026\u0026 composer create-project --prefer-dist gitiki/gitiki /srv/gitiki $GITIKI_VERSION  \u0026\u0026 cd /srv/gitiki \u0026\u0026 chmod +x gitiki  \u0026\u0026 composer require $requires \u0026\u0026 composer clear-cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "5.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz -o node.tar.gz  \u0026\u0026 mkdir -p /opt/node  \u0026\u0026 tar -xz --strip-components=1 -C /opt/node -f node.tar.gz  \u0026\u0026 rm node.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/node/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /srv/gitiki \u0026\u0026 npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".htaccess",
            "/var/www/html/.htaccess"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "index.php",
            "/var/www/html/index.php"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/srv/wiki"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apache2-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}