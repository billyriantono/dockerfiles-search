{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "VER_NGINX_DEVEL_KIT",
              "Value": "0.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VER_LUA_NGINX_MODULE",
              "Value": "0.10.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VER_NGINX",
              "Value": "1.10.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VER_LUAJIT",
              "Value": "2.1.0-beta2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_DEVEL_KIT",
              "Value": "ngx_devel_kit-${VER_NGINX_DEVEL_KIT}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_NGINX_MODULE",
              "Value": "lua-nginx-module-${VER_LUA_NGINX_MODULE}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_ROOT",
              "Value": "/nginx"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEB_DIR",
              "Value": "${NGINX_ROOT}/html"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_LIB",
              "Value": "/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_INC",
              "Value": "/usr/local/include/luajit-2.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONFIG",
              "Value": "\"\t--sbin-path=/usr/sbin/nginx \t--modules-path=/usr/lib/nginx/modules \t--conf-path=$NGINX_ROOT/nginx.conf \t--error-log-path=/var/log/nginx/error.log \t--http-log-path=/var/log/nginx/access.log \t--pid-path=/var/run/nginx.pid \t--lock-path=/var/run/nginx.lock \t--http-client-body-temp-path=/var/cache/nginx/client_temp \t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \t--with-http_ssl_module \t--with-http_realip_module \t--with-http_addition_module \t--with-http_sub_module \t--with-http_dav_module \t--with-http_flv_module \t--with-http_mp4_module \t--with-http_gunzip_module \t--with-http_gzip_static_module \t--with-http_random_index_module \t--with-http_secure_link_module \t--with-http_stub_status_module \t--with-http_auth_request_module \t--with-http_xslt_module=dynamic \t--with-http_image_filter_module=dynamic \t--with-http_geoip_module=dynamic \t--with-http_perl_module=dynamic \t--with-threads \t--with-stream \t--with-stream_ssl_module \t--with-http_slice_module \t--with-mail \t--with-mail_ssl_module \t--with-file-aio \t--with-http_v2_module \t--with-ipv6     --prefix=$NGINX_ROOT     --with-ld-opt='-Wl,-rpath,$LUAJIT_LIB'     --add-module=/$NGINX_DEVEL_KIT     --add-module=/$LUA_NGINX_MODULE \t\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t\tperl-dev         pcre         luajit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://nginx.org/download/nginx-${VER_NGINX}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://luajit.org/download/LuaJIT-${VER_LUAJIT}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/simpl/ngx_devel_kit/archive/v${VER_NGINX_DEVEL_KIT}.tar.gz -O ${NGINX_DEVEL_KIT}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/openresty/lua-nginx-module/archive/v${VER_LUA_NGINX_MODULE}.tar.gz -O ${LUA_NGINX_MODULE}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xzvf nginx-${VER_NGINX}.tar.gz \u0026\u0026 rm nginx-${VER_NGINX}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xzvf LuaJIT-${VER_LUAJIT}.tar.gz \u0026\u0026 rm LuaJIT-${VER_LUAJIT}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xzvf ${NGINX_DEVEL_KIT}.tar.gz \u0026\u0026 rm ${NGINX_DEVEL_KIT}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xzvf ${LUA_NGINX_MODULE}.tar.gz \u0026\u0026 rm ${LUA_NGINX_MODULE}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/LuaJIT-${VER_LUAJIT}"
        },
        {
          "CmdLine": [
            "make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/nginx-${VER_NGINX}"
        },
        {
          "CmdLine": [
            "./configure $CONFIG"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./nginx.conf",
            "/${NGINX_ROOT}/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./nginx-vh.conf",
            "/${NGINX_ROOT}/default.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/cache/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /var/log/nginx/access.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "strip /usr/sbin/nginx* \t\u0026\u0026 strip /usr/lib/nginx/modules/*.so \t\u0026\u0026 runDeps=\"$( \t\tscanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" \t\u0026\u0026 apk add --virtual .nginx-rundeps $runDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${WEB_DIR}"
        },
        {
          "CmdLine": [
            "rm -rf /nginx-${VER_NGINX}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /LuaJIT-${VER_LUAJIT}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /${NGINX_DEVEL_KIT}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /${LUA_NGINX_MODULE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}