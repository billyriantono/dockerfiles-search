MetaArgs: null
Stages:
- As: compile-lkd
  BaseName: debian
  Commands:
  - Maintainer: Marios Andreopoulos <marios@landoop.com>
    Name: maintainer
  - CmdLine:
    - apt-get update     && apt-get install -y          unzip          wget     &&
      rm -rf /var/lib/apt/lists/*     && echo "progress = dot:giga" | tee /etc/wgetrc     &&
      mkdir -p /mnt /opt /data     && wget https://github.com/andmarios/duphard/releases/download/v1.0/duphard
      -O /bin/duphard     && chmod +x /bin/duphard
    Name: run
    PrependShell: true
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - Name: workdir
    Path: /
  - Key: DEVARCH_USER
    Name: arg
    Value: null
  - Key: DEVARCH_PASS
    Name: arg
    Value: null
  - Key: ARCHIVE_SERVER
    Name: arg
    Value: https://archive.landoop.com
  - Key: LKD_VERSION
    Name: arg
    Value: 1.1.1
  - Key: KAFKA_VERSION
    Name: arg
    Value: 1.1.1
  - Key: KAFKA_LVERSION
    Name: arg
    Value: '"${KAFKA_VERSION}-L0"'
  - Key: KAFKA_URL
    Name: arg
    Value: '"${ARCHIVE_SERVER}/lkd/packages/kafka/kafka-2.11-${KAFKA_LVERSION}-lkd.tar.gz"'
  - CmdLine:
    - wget $DEVARCH_USER $DEVARCH_PASS "$KAFKA_URL" -O /opt/kafka.tar.gz     && tar
      --no-same-owner -xzf /opt/kafka.tar.gz -C /opt     && mkdir /opt/landoop/kafka/logs
      && chmod 1777 /opt/landoop/kafka/logs     && rm -rf /opt/kafka.tar.gz
    Name: run
    PrependShell: true
  - Key: REGISTRY_VERSION
    Name: arg
    Value: 4.1.2-lkd-r0
  - Key: REGISTRY_URL
    Name: arg
    Value: '"${ARCHIVE_SERVER}/lkd/packages/schema-registry/schema-registry-${REGISTRY_VERSION}.tar.gz"'
  - CmdLine:
    - wget $DEVARCH_USER $DEVARCH_PASS "$REGISTRY_URL" -O /opt/registry.tar.gz     &&
      tar --no-same-owner -xzf /opt/registry.tar.gz -C /opt/     && rm -rf /opt/registry.tar.gz
    Name: run
    PrependShell: true
  - Key: REST_VERSION
    Name: arg
    Value: 4.1.2-lkd-r0
  - Key: REST_URL
    Name: arg
    Value: '"${ARCHIVE_SERVER}/lkd/packages/rest-proxy/rest-proxy-${REST_VERSION}.tar.gz"'
  - CmdLine:
    - wget $DEVARCH_USER $DEVARCH_PASS "$REST_URL" -O /opt/rest.tar.gz     && tar
      --no-same-owner -xzf /opt/rest.tar.gz -C /opt/     && rm -rf /opt/rest.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e 'access.control.allow.methods=GET,POST,PUT,DELETE,OPTIONS\naccess.control.allow.origin=*'          |
      tee -a /opt/landoop/kafka/etc/schema-registry/schema-registry.properties          |
      tee -a /opt/landoop/kafka/etc/kafka-rest/kafka-rest.properties          | tee
      -a /opt/landoop/kafka/etc/schema-registry/connect-avro-distributed.properties
    Name: run
    PrependShell: true
  - Key: STREAM_REACTOR_VERSION
    Name: arg
    Value: 1.1.0
  - Key: KAFKA_VERSION_4SR
    Name: arg
    Value: 1.1.0
  - Key: STREAM_REACTOR_URL
    Name: arg
    Value: '"https://archive.landoop.com/lkd/packages/connectors/stream-reactor/stream-reactor-${STREAM_REACTOR_VERSION}_connect${KAFKA_VERSION_4SR}.tar.gz"'
  - Key: ELASTICSEARCH_2X_VERSION
    Name: arg
    Value: 2.4.6
  - Key: ACTIVEMQ_VERSION
    Name: arg
    Value: 5.12.3
  - Key: CALCITE_LINQ4J_VERSION
    Name: arg
    Value: 1.12.0
  - CmdLine:
    - wget $DEVARCH_USER $DEVARCH_PASS "${STREAM_REACTOR_URL}" -O /stream-reactor.tar.gz     &&
      mkdir -p /opt/landoop/connectors/stream-reactor     && tar -xf /stream-reactor.tar.gz            --no-same-owner            --strip-components=1            -C
      /opt/landoop/connectors/stream-reactor     && rm /stream-reactor.tar.gz     &&
      wget https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/${ELASTICSEARCH_2X_VERSION}/elasticsearch-${ELASTICSEARCH_2X_VERSION}.tar.gz             -O
      /elasticsearch.tar.gz     && mkdir /elasticsearch     && tar -xf /elasticsearch.tar.gz            --no-same-owner            --strip-components=1            -C
      /elasticsearch     && rm -f /elasticsearch/lib/apache-log4j-extras*     && mv
      /elasticsearch/lib/*.jar /opt/landoop/connectors/stream-reactor/kafka-connect-elastic/     &&
      rm -rf /elasticsearch*     && wget http://central.maven.org/maven2/org/apache/activemq/activemq-all/${ACTIVEMQ_VERSION}/activemq-all-${ACTIVEMQ_VERSION}.jar             -P
      /opt/landoop/connectors/stream-reactor/kafka-connect-jms     && wget http://central.maven.org/maven2/org/apache/calcite/calcite-linq4j/${CALCITE_LINQ4J_VERSION}/calcite-linq4j-${CALCITE_LINQ4J_VERSION}.jar             -O
      /calcite-linq4j-${CALCITE_LINQ4J_VERSION}.jar     && for path in /opt/landoop/connectors/stream-reactor/kafka-connect-*;
      do           cp /calcite-linq4j-${CALCITE_LINQ4J_VERSION}.jar $path/;        done     &&
      rm /calcite-linq4j-${CALCITE_LINQ4J_VERSION}.jar     && mkdir -p /opt/landoop/kafka/share/java/landoop-common     &&
      for file in $(find /opt/landoop/connectors/stream-reactor -maxdepth 2 -type
      f -exec basename {} \; | grep -Ev "scala-logging|kafka-connect-common" | sort
      | uniq -c | grep -E "^\s+21 " | awk '{print $2}' ); do          cp /opt/landoop/connectors/stream-reactor/kafka-connect-elastic/$file
      /opt/landoop/kafka/share/java/landoop-common/;          rm -f /opt/landoop/connectors/stream-reactor/kafka-connect-*/$file;        done     &&
      for file in $(find /opt/landoop/kafka/share/java/{kafka,landoop-common} -maxdepth
      1 -type f -exec basename {} \; | sort | uniq -c | grep -E "^\s+2 " | awk '{print
      $2}' ); do          echo "Removing duplicate /opt/landoop/kafka/share/java/landoop-common/$file.";          rm
      -f /opt/landoop/kafka/share/java/landoop-common/$file;        done     && rm
      -f /opt/landoop/connectors/stream-reactor/*/*{javadoc,scaladoc,sources}.jar     &&
      echo "plugin.path=/opt/landoop/connectors/stream-reactor,/opt/landoop/connectors/third-party"             >>
      /opt/landoop/kafka/etc/schema-registry/connect-avro-distributed.properties
    Name: run
    PrependShell: true
  - Key: TWITTER_CONNECTOR_URL
    Name: arg
    Value: '"https://archive.landoop.com/third-party/kafka-connect-twitter/kafka-connect-twitter-0.1-master-33331ea-connect-1.0.0-jar-with-dependencies.jar"'
  - CmdLine:
    - mkdir -p /opt/landoop/connectors/third-party/kafka-connect-twitter     && wget
      "$TWITTER_CONNECTOR_URL" -P /opt/landoop/connectors/third-party/kafka-connect-twitter
    Name: run
    PrependShell: true
  - Key: KAFKA_CONNECT_JDBC_VERSION
    Name: arg
    Value: 4.1.2-lkd-r0
  - Key: KAFKA_CONNECT_JDBC_URL
    Name: arg
    Value: '"${ARCHIVE_SERVER}/lkd/packages/connectors/third-party/kafka-connect-jdbc/kafka-connect-jdbc-${KAFKA_CONNECT_JDBC_VERSION}.tar.gz"'
  - CmdLine:
    - wget $DEVARCH_USER $DEVARCH_PASS "$KAFKA_CONNECT_JDBC_URL"          -O /opt/kafka-connect-jdbc.tar.gz     &&
      mkdir -p /opt/landoop/connectors/third-party/     && tar --no-same-owner -xf
      /opt/kafka-connect-jdbc.tar.gz            -C /opt/landoop/connectors/third-party/     &&
      rm -rf /opt/kafka-connect-jdbc.tar.gz
    Name: run
    PrependShell: true
  - Key: KAFKA_CONNECT_ELASTICSEARCH_VERSION
    Name: arg
    Value: 4.1.2-lkd-r0
  - Key: KAFKA_CONNECT_ELASTICSEARCH_URL
    Name: arg
    Value: '"${ARCHIVE_SERVER}/lkd/packages/connectors/third-party/kafka-connect-elasticsearch/kafka-connect-elasticsearch-${KAFKA_CONNECT_ELASTICSEARCH_VERSION}.tar.gz"'
  - CmdLine:
    - wget $DEVARCH_USER $DEVARCH_PASS "$KAFKA_CONNECT_ELASTICSEARCH_URL"          -O
      /opt/kafka-connect-elasticsearch.tar.gz     && mkdir -p /opt/landoop/connectors/third-party/     &&
      tar --no-same-owner -xf /opt/kafka-connect-elasticsearch.tar.gz            -C
      /opt/landoop/connectors/third-party/     && rm -rf /opt/kafka-connect-elasticsearch.tar.gz
    Name: run
    PrependShell: true
  - Key: KAFKA_CONNECT_HDFS_VERSION
    Name: arg
    Value: 4.1.2-lkd-r0
  - Key: KAFKA_CONNECT_HDFS_URL
    Name: arg
    Value: '"${ARCHIVE_SERVER}/lkd/packages/connectors/third-party/kafka-connect-hdfs/kafka-connect-hdfs-${KAFKA_CONNECT_HDFS_VERSION}.tar.gz"'
  - CmdLine:
    - wget $DEVARCH_USER $DEVARCH_PASS "$KAFKA_CONNECT_HDFS_URL"          -O /opt/kafka-connect-hdfs.tar.gz     &&
      mkdir -p /opt/landoop/connectors/third-party/     && tar --no-same-owner -xf
      /opt/kafka-connect-hdfs.tar.gz            -C /opt/landoop/connectors/third-party/     &&
      rm -rf /opt/kafka-connect-hdfs.tar.gz
    Name: run
    PrependShell: true
  - Key: KAFKA_CONNECT_S3_VERSION
    Name: arg
    Value: 4.1.2-lkd-r0
  - Key: KAFKA_CONNECT_S3_URL
    Name: arg
    Value: '"${ARCHIVE_SERVER}/lkd/packages/connectors/third-party/kafka-connect-s3/kafka-connect-s3-${KAFKA_CONNECT_S3_VERSION}.tar.gz"'
  - CmdLine:
    - wget $DEVARCH_USER $DEVARCH_PASS "$KAFKA_CONNECT_S3_URL"          -O /opt/kafka-connect-s3.tar.gz     &&
      mkdir -p /opt/landoop/connectors/third-party/     && tar --no-same-owner -xf
      /opt/kafka-connect-s3.tar.gz            -C /opt/landoop/connectors/third-party/     &&
      rm -rf /opt/kafka-connect-s3.tar.gz
    Name: run
    PrependShell: true
  - Key: KAFKA_CONNECT_COUCHBASE_VERSION
    Name: arg
    Value: 3.2.2
  - Key: KAFKA_CONNECT_COUCHBASE_URL
    Name: arg
    Value: '"http://packages.couchbase.com/clients/kafka/${KAFKA_CONNECT_COUCHBASE_VERSION}/kafka-connect-couchbase-${KAFKA_CONNECT_COUCHBASE_VERSION}.zip"'
  - CmdLine:
    - wget $DEVARCH_USER $DEVARCH_PASS "$KAFKA_CONNECT_COUCHBASE_URL"          -O
      /couchbase.zip     && mkdir -p /couchbase /opt/landoop/connectors/third-party/kafka-connect-couchbase     &&
      unzip /couchbase.zip -d /couchbase     && cp -ax /couchbase/kafka-connect-couchbase-${KAFKA_CONNECT_COUCHBASE_VERSION}/*           /opt/landoop/connectors/third-party/kafka-connect-couchbase     &&
      chown -R root:root /opt/landoop/connectors/third-party/kafka-connect-couchbase     &&
      rm -rf /couchbase.zip /couchbase
    Name: run
    PrependShell: true
  - Key: KAFKA_CONNECT_DBVISITREPLICATE_VERSION
    Name: arg
    Value: 2.0.0-SNAPSHOT
  - Key: KAFKA_CONNECT_DBVISITREPLICATE_URL
    Name: arg
    Value: '"https://www.dropbox.com/s/nhs8v3lwmigpks1/kafka-connect-dbvisitreplicate-${KAFKA_CONNECT_DBVISITREPLICATE_VERSION}.jar?dl=0"'
  - CmdLine:
    - mkdir -p /opt/landoop/connectors/third-party/kafka-connect-dbvisitreplicate     &&
      wget $DEVARCH_USER $DEVARCH_PASS "$KAFKA_CONNECT_DBVISITREPLICATE_URL"             -O
      /opt/landoop/connectors/third-party/kafka-connect-dbvisitreplicate/kafka-connect-dbvisitreplicate-${KAFKA_CONNECT_DBVISITREPLICATE_VERSION}.jar
    Name: run
    PrependShell: true
  - Key: KAFKA_CONNECT_DEBEZIUM_MONGODB_VERSION
    Name: arg
    Value: 0.7.4
  - Key: KAFKA_CONNECT_DEBEZIUM_MONGODB_URL
    Name: arg
    Value: '"https://search.maven.org/remotecontent?filepath=io/debezium/debezium-connector-mongodb/${KAFKA_CONNECT_DEBEZIUM_MONGODB_VERSION}/debezium-connector-mongodb-${KAFKA_CONNECT_DEBEZIUM_MONGODB_VERSION}-plugin.tar.gz"'
  - Key: KAFKA_CONNECT_DEBEZIUM_MYSQL_VERSION
    Name: arg
    Value: 0.7.4
  - Key: KAFKA_CONNECT_DEBEZIUM_MYSQL_URL
    Name: arg
    Value: '"https://search.maven.org/remotecontent?filepath=io/debezium/debezium-connector-mysql/${KAFKA_CONNECT_DEBEZIUM_MYSQL_VERSION}/debezium-connector-mysql-${KAFKA_CONNECT_DEBEZIUM_MYSQL_VERSION}-plugin.tar.gz"'
  - Key: KAFKA_CONNECT_DEBEZIUM_POSTGRES_VERSION
    Name: arg
    Value: 0.7.4
  - Key: KAFKA_CONNECT_DEBEZIUM_POSTGRES_URL
    Name: arg
    Value: '"https://search.maven.org/remotecontent?filepath=io/debezium/debezium-connector-postgres/${KAFKA_CONNECT_DEBEZIUM_POSTGRES_VERSION}/debezium-connector-postgres-${KAFKA_CONNECT_DEBEZIUM_POSTGRES_VERSION}-plugin.tar.gz"'
  - CmdLine:
    - mkdir -p /opt/landoop/connectors/third-party/kafka-connect-debezium-{mongodb,mysql,postgres}     &&
      wget "$KAFKA_CONNECT_DEBEZIUM_MONGODB_URL" -O /debezium-mongodb.tgz     && tar
      -xf /debezium-mongodb.tgz            --owner=root --group=root --strip-components=1            -C  /opt/landoop/connectors/third-party/kafka-connect-debezium-mongodb     &&
      wget "$KAFKA_CONNECT_DEBEZIUM_MYSQL_URL" -O /debezium-mysql.tgz     && tar -xf
      /debezium-mysql.tgz            --owner=root --group=root --strip-components=1            -C  /opt/landoop/connectors/third-party/kafka-connect-debezium-mysql     &&
      wget "$KAFKA_CONNECT_DEBEZIUM_POSTGRES_URL" -O /debezium-postgres.tgz     &&
      tar -xf /debezium-postgres.tgz            --owner=root --group=root --strip-components=1            -C  /opt/landoop/connectors/third-party/kafka-connect-debezium-postgres     &&
      rm -rf /debezium-{mongodb,mysql,postgres}.tgz
    Name: run
    PrependShell: true
  - Key: COYOTE_VERSION
    Name: arg
    Value: "1.5"
  - Key: COYOTE_URL
    Name: arg
    Value: '"https://github.com/Landoop/coyote/releases/download/v${COYOTE_VERSION}/coyote-${COYOTE_VERSION}"'
  - CmdLine:
    - mkdir -p /opt/landoop/tools/bin/win              /opt/landoop/tools/bin/mac              /opt/landoop/tools/share/coyote/examples     &&
      wget "$COYOTE_URL"-linux-amd64 -O /opt/landoop/tools/bin/coyote     && wget
      "$COYOTE_URL"-darwin-amd64 -O /opt/landoop/tools/bin/mac/coyote     && wget
      "$COYOTE_URL"-windows-amd64.exe -O /opt/landoop/tools/bin/win/coyote     &&
      chmod +x /opt/landoop/tools/bin/coyote                 /opt/landoop/tools/bin/mac/coyote
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - lkd/simple-integration-tests.yml
    - /opt/landoop/tools/share/coyote/examples/
  - Key: KAFKA_TOPICS_UI_VERSION
    Name: arg
    Value: 0.9.4
  - Key: KAFKA_TOPICS_UI_URL
    Name: arg
    Value: '"https://github.com/Landoop/kafka-topics-ui/releases/download/v${KAFKA_TOPICS_UI_VERSION}/kafka-topics-ui-${KAFKA_TOPICS_UI_VERSION}.tar.gz"'
  - Key: SCHEMA_REGISTRY_UI_VERSION
    Name: arg
    Value: 0.9.5
  - Key: SCHEMA_REGISTRY_UI_URL
    Name: arg
    Value: '"https://github.com/Landoop/schema-registry-ui/releases/download/v.${SCHEMA_REGISTRY_UI_VERSION}/schema-registry-ui-${SCHEMA_REGISTRY_UI_VERSION}.tar.gz"'
  - Key: KAFKA_CONNECT_UI_VERSION
    Name: arg
    Value: 0.9.6
  - Key: KAFKA_CONNECT_UI_URL
    Name: arg
    Value: '"https://github.com/Landoop/kafka-connect-ui/releases/download/v.${KAFKA_CONNECT_UI_VERSION}/kafka-connect-ui-${KAFKA_CONNECT_UI_VERSION}.tar.gz"'
  - CmdLine:
    - mkdir -p /opt/landoop/tools/share/kafka-topics-ui/              /opt/landoop/tools/share/schema-registry-ui/              /opt/landoop/tools/share/kafka-connect-ui/     &&
      wget "$KAFKA_TOPICS_UI_URL"             -O /opt/landoop/tools/share/kafka-topics-ui/kafka-topics-ui.tar.gz     &&
      wget "$SCHEMA_REGISTRY_UI_URL"             -O /opt/landoop/tools/share/schema-registry-ui/schema-registry-ui.tar.gz     &&
      wget "$KAFKA_CONNECT_UI_URL"             -O /opt/landoop/tools/share/kafka-connect-ui/kafka-connect-ui.tar.gz
    Name: run
    PrependShell: true
  - Key: KAFKA_AUTOCOMPLETE_VERSION
    Name: arg
    Value: "0.3"
  - Key: KAFKA_AUTOCOMPLETE_URL
    Name: arg
    Value: '"https://github.com/Landoop/kafka-autocomplete/releases/download/${KAFKA_AUTOCOMPLETE_VERSION}/kafka"'
  - CmdLine:
    - mkdir -p /opt/landoop/tools/share/kafka-autocomplete              /opt/landoop/tools/share/bash-completion/completions     &&
      wget "$KAFKA_AUTOCOMPLETE_URL"             -O /opt/landoop/tools/share/kafka-autocomplete/kafka     &&
      wget "$KAFKA_AUTOCOMPLETE_URL"             -O /opt/landoop/tools/share/bash-completion/completions/kafka
    Name: run
    PrependShell: true
  - CmdLine:
    - TJLINE="$(find /opt/landoop/kafka -name "jline-0*.jar" | head -n1)"     && if
      [[ -n $TJLINE ]]; then sed "s|^exec.*|export CLASSPATH=\"\$CLASSPATH:$TJLINE\"\n&|"
      -i /opt/landoop/kafka/bin/zookeeper-shell; fi
    Name: run
    PrependShell: true
  - Key: NORMCAT_VERSION
    Name: arg
    Value: 1.1.1
  - Key: NORMCAT_URL
    Name: arg
    Value: '"https://github.com/andmarios/normcat/releases/download/${NORMCAT_VERSION}/normcat-${NORMCAT_VERSION}"'
  - CmdLine:
    - mkdir -p /opt/landoop/tools/bin/win              /opt/landoop/tools/bin/mac     &&
      wget "$NORMCAT_URL"-linux-amd64-lowmem.tar.gz -O /normcat-linux.tgz     && tar
      -xf /normcat-linux.tgz -C /opt/landoop/tools/bin     && wget "$NORMCAT_URL"-darwin-amd64.zip
      -O /normcat-mac.zip     && unzip /normcat-mac.zip -d /opt/landoop/tools/bin/mac     &&
      wget "$NORMCAT_URL"-windows-amd64.zip -O /normcat-win.zip     && unzip /normcat-win.zip
      -d /opt/landoop/tools/bin/win     && chmod +x /opt/landoop/tools/bin/coyote                 /opt/landoop/tools/bin/mac/coyote     &&
      rm -f /normcat-linux.tg /normcat-mac.zip /normcat-win.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - echo    "LKD_VERSION=${LKD_VERSION}"                               | tee -a
      /opt/landoop/build.info     && echo "KAFKA_VERSION=${KAFKA_LVERSION}"                          |
      tee -a /opt/landoop/build.info     && echo "CONNECT_VERSION=${KAFKA_LVERSION}"                        |
      tee -a /opt/landoop/build.info     && echo "SCHEMA_REGISTRY_VERSION=${REGISTRY_VERSION}"              |
      tee -a /opt/landoop/build.info     && echo "REST_PROXY_VERSION=${REST_VERSION}"                       |
      tee -a /opt/landoop/build.info     && echo "STREAM_REACTOR_VERSION=${STREAM_REACTOR_VERSION}"         |
      tee -a /opt/landoop/build.info     && echo "KAFKA_CONNECT_JDBC_VERSION=${KAFKA_CONNECT_JDBC_VERSION}"
      | tee -a /opt/landoop/build.info     && echo "KAFKA_CONNECT_ELASTICSEARCH_VERSION=${KAFKA_CONNECT_ELASTICSEARCH_VERSION}"                                                                        |
      tee -a /opt/landoop/build.info     && echo "KAFKA_CONNECT_HDFS_VERSION=${KAFKA_CONNECT_HDFS_VERSION}"
      | tee -a /opt/landoop/build.info     && echo "KAFKA_CONNECT_S3_VERSION=${KAFKA_CONNECT_S3_VERSION}"     |
      tee -a /opt/landoop/build.info     && echo "KAFKA_CONNECT_COUCHBASE_VERSION=${KAFKA_CONNECT_COUCHBASE_VERSION}"                                                                        |
      tee -a /opt/landoop/build.info     && echo "KAFKA_CONNECT_DBVISITREPLICATE_VERSION=${KAFKA_CONNECT_DBVISITREPLICATE_VERSION}"                                                                        |
      tee -a /opt/landoop/build.info     && echo "KAFKA_CONNECT_DEBEZIUM_MONGODB_VERSION=${KAFKA_CONNECT_DEBEZIUM_MONGODB_VERSION}"                                                                        |
      tee -a /opt/landoop/build.info     && echo "KAFKA_CONNECT_DEBEZIUM_MYSQL_VERSION=${KAFKA_CONNECT_DEBEZIUM_MYSQL_VERSION}"                                                                        |
      tee -a /opt/landoop/build.info     && echo "KAFKA_CONNECT_DEBEZIUM_POSTGRES_VERSION=${KAFKA_CONNECT_DEBEZIUM_POSTGRES_VERSION}"                                                                        |
      tee -a /opt/landoop/build.info     && echo "KAFKA_TOPICS_UI_VERSION=${KAFKA_TOPICS_UI_VERSION}"       |
      tee -a /opt/landoop/build.info     && echo "SCHEMA_REGISTRY_UI_VERSION=${SCHEMA_REGISTRY_UI_VERSION}"
      | tee -a /opt/landoop/build.info     && echo "KAFKA_CONNECT_UI_VERSION=${KAFKA_CONNECT_UI_VERSION}"     |
      tee -a /opt/landoop/build.info     && echo "COYOTE_VERSION=${COYOTE_VERSION}"                         |
      tee -a /opt/landoop/build.info     && echo "KAFKA_AUTOCOMPLETE_VERSION=${KAFKA_AUTOCOMPLETE_VERSION}"
      | tee -a /opt/landoop/build.info     && echo "NORMCAT_VERSION=${NORMCAT_VERSION}"                       |
      tee -a /opt/landoop/build.info
    Name: run
    PrependShell: true
  - CmdLine:
    - duphard -d=0 /opt/landoop
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -czf /LKD-${LKD_VERSION}.tar.gz            --owner=root            --group=root            -C
      /opt            landoop     && rm -rf /opt/landoop
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xf /LKD-${LKD_VERSION}.tar.gz -C /opt     && rm /LKD-${LKD_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: LKD_VERSION
      Value: ${LKD_VERSION}
    Name: env
  - CmdLine:
    - bash
    - -c
    - tar -czf /mnt/LKD-${LKD_VERSION}.tar.gz -C /opt landoop; chown --reference=/mnt
      /mnt/LKD-${LKD_VERSION}.tar.gz
    Name: cmd
    PrependShell: false
  From:
    Image: debian
  Name: compile-lkd
  Platform: ""
  SourceCode: FROM debian as compile-lkd
- BaseName: alpine
  Commands:
  - Maintainer: Marios Andreopoulos <marios@landoop.com>
    Name: maintainer
  - Chown: ""
    From: compile-lkd
    Name: copy
    SourcesAndDest:
    - /opt
    - /opt
  - CmdLine:
    - apk add --no-cache         bash         bash-completion         bzip2         coreutils         curl         dumb-init         gettext         gzip         jq         libstdc++         openjdk8-jre-base         openssl         sqlite         supervisor         tar         wget     &&
      echo "progress = dot:giga" | tee /etc/wgetrc     && mkdir -p /opt     && mkdir
      /extra-connect-jars /connectors     && mkdir /etc/supervisord.d /etc/supervisord.templates.d
    Name: run
    PrependShell: true
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - Name: workdir
    Path: /
  - Key: CHECKPORT_URL
    Name: arg
    Value: '"https://gitlab.com/andmarios/checkport/uploads/3903dcaeae16cd2d6156213d22f23509/checkport"'
  - Key: QUICKCERT_URL
    Name: arg
    Value: '"https://github.com/andmarios/quickcert/releases/download/1.0/quickcert-1.0-linux-amd64-alpine"'
  - Key: GLIBC_INST_VERSION
    Name: arg
    Value: '"2.27-r0"'
  - Key: CADDY_URL
    Name: arg
    Value: https://github.com/mholt/caddy/releases/download/v0.10.10/caddy_v0.10.10_linux_amd64.tar.gz
  - CmdLine:
    - wget "$CHECKPORT_URL" -O /usr/local/bin/checkport     && wget "$QUICKCERT_URL"
      -O /usr/local/bin/quickcert     && chmod 0755 /usr/local/bin/quickcert /usr/local/bin/checkport     &&
      wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_INST_VERSION}/glibc-${GLIBC_INST_VERSION}.apk     &&
      wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_INST_VERSION}/glibc-bin-${GLIBC_INST_VERSION}.apk     &&
      wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_INST_VERSION}/glibc-i18n-${GLIBC_INST_VERSION}.apk     &&
      apk add --no-cache --allow-untrusted glibc-${GLIBC_INST_VERSION}.apk glibc-bin-${GLIBC_INST_VERSION}.apk
      glibc-i18n-${GLIBC_INST_VERSION}.apk     && rm -f glibc-${GLIBC_INST_VERSION}.apk
      glibc-bin-${GLIBC_INST_VERSION}.apk glibc-i18n-${GLIBC_INST_VERSION}.apk     &&
      wget "$CADDY_URL" -O /caddy.tgz     && mkdir -p /opt/caddy     && tar xzf /caddy.tgz
      -C /opt/caddy     && rm -f /caddy.tgz     && /usr/glibc-compat/bin/localedef
      -i en_US -f UTF-8 en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /filesystem
    - /
  - CmdLine:
    - chmod +x /usr/local/bin/{smoke-tests,logs-to-kafka,nullsink}.sh              /usr/local/share/landoop/sample-data/*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c 'for i in $(find /opt/landoop/kafka/bin /opt/landoop/tools/bin -maxdepth
      1 -type f); do ln -s $i /usr/local/bin/$(echo $i | sed -e "s>.*/>>"); done'
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://archive.landoop.com/third-party/kafka-custom-principal-builder/kafka-custom-principal-builder-1.0-SNAPSHOT.jar          -P
      /opt/landoop/kafka/share/java/kafka     && mkdir -p /opt/landoop/kafka/share/docs/kafka-custom-principal-builder     &&
      wget https://archive.landoop.com/third-party/kafka-custom-principal-builder/LICENSE          -P
      /opt/landoop/kafka/share/docs/kafka-custom-principal-builder     && wget https://archive.landoop.com/third-party/kafka-custom-principal-builder/README.md          -P
      /opt/landoop/kafka/share/docs/kafka-custom-principal-builder
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p       /var/www/kafka-topics-ui       /var/www/schema-registry-ui       /var/www/kafka-connect-ui     &&
      tar -xf /opt/landoop/tools/share/kafka-topics-ui/kafka-topics-ui.tar.gz            -C
      /var/www/kafka-topics-ui            --exclude=env.js     && tar -xf /opt/landoop/tools/share/schema-registry-ui/schema-registry-ui.tar.gz            -C
      /var/www/schema-registry-ui            --exclude=env.js     && tar -xf /opt/landoop/tools/share/kafka-connect-ui/kafka-connect-ui.tar.gz            -C
      /var/www/kafka-connect-ui            --exclude=env.js
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /var/log /var/www/logs
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - setup-and-run.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/setup-and-run.sh     && ln -s /usr/local/share/landoop/etc/bashrc
      /root/.bashrc
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Key: BUILD_BRANCH
    Name: arg
    Value: null
  - Key: BUILD_COMMIT
    Name: arg
    Value: null
  - Key: BUILD_TIME
    Name: arg
    Value: null
  - Key: DOCKER_REPO
    Name: arg
    Value: local
  - CmdLine:
    - echo "BUILD_BRANCH=${BUILD_BRANCH}"    | tee /build.info     && echo "BUILD_COMMIT=${BUILD_COMMIT}"
      | tee -a /build.info     && echo "BUILD_TIME=${BUILD_TIME}"     | tee -a /build.info     &&
      echo "DOCKER_REPO=${DOCKER_REPO}"   | tee -a /build.info     && sed -e 's/^/FDD_/'
      /opt/landoop/build.info | tee -a /build.info
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "2181"
    - "3030"
    - "3031"
    - "8081"
    - "8082"
    - "8083"
    - "9092"
  - CmdLine:
    - /usr/bin/dumb-init
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/local/bin/setup-and-run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
