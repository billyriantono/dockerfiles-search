{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.3.5-jessie",
      "SourceCode": "FROM ruby:2.3.5-jessie",
      "Platform": "",
      "From": {
        "Image": "ruby:2.3.5-jessie"
      },
      "Commands": [
        {
          "Maintainer": "Martin Hinz \u003cmartin.hinz@ufg.uni-kiel.de\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "gem install passenger -v 5.0.4 \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y libcurl4-openssl-dev \u0026\u0026 \t\tapt-get install -y qt4-default \u0026\u0026 \t\tapt-get install -y libqtwebkit-dev \u0026\u0026     passenger-install-nginx-module --auto"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/rails/conf/nginx.conf",
            "/opt/nginx/conf/nginx.conf"
          ]
        },
        {
          "CmdLine": [
            "echo \"daemon off;\" \u003e\u003e /opt/nginx/conf/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y nodejs --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y mysql-client postgresql-client sqlite3 --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bundle config --global frozen 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        },
        {
          "CmdLine": [
            "mkdir -p ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "Gemfile",
            "."
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "Gemfile.lock",
            "."
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/rails/start.sh",
            "."
          ]
        },
        {
          "CmdLine": [
            "bundle install --system"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "mkdir -p ./log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cat /dev/null \u003e ./log/production.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R a+w ./log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Env": [
            {
              "Key": "RAILS_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "chmod +x ./start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ./tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R nobody:nogroup ./tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y cron"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/static_download/static_download_prep_cron",
            "/etc/cron.daily/static_download_prep_cron"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/static_download/static_download_prep.sql",
            "."
          ]
        },
        {
          "CmdLine": [
            "chmod +x /etc/cron.daily/static_download_prep_cron"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x static_download_prep.sql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}