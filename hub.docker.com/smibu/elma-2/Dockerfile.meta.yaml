MetaArgs: null
Stages:
- BaseName: trzeci/emscripten:sdk-tag-1.37.18-32bit
  Commands:
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget bzip2 unzip ca-certificates make
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://cmake.org/files/v3.9/cmake-3.9.1-Linux-x86_64.sh     &&
      printf "y\nn\n" | sh cmake-3.9.1-Linux-x86_64.sh --prefix=/opt/cmake     &&
      ln -s /opt/cmake/bin/cpack /usr/local/bin/cpack     && cpack --version
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /elma2 && mkdir /elma2/dependencies
    Name: run
    PrependShell: true
  - Env:
    - Key: BOOST_MINOR_VER
      Value: "64"
    Name: env
  - Env:
    - Key: CEGUI_BRANCH
      Value: v0-8
    Name: env
  - Env:
    - Key: CEGUI_VERSION
      Value: 0.8.7
    Name: env
  - Env:
    - Key: GLFW_VERSION
      Value: 3.2.1
    Name: env
  - Env:
    - Key: EXPAT_VERSION
      Value: 2.2.0
    Name: env
  - Env:
    - Key: ZLIB_VERSION
      Value: 1.2.11
    Name: env
  - Env:
    - Key: GLM_VERSION
      Value: 0.9.7.5
    Name: env
  - Name: workdir
    Path: /elma2
  - CmdLine:
    - wget --quiet http://downloads.sourceforge.net/project/boost/boost/1.${BOOST_MINOR_VER}.0/boost_1_${BOOST_MINOR_VER}_0.tar.bz2     &&
      tar xjf boost_1_${BOOST_MINOR_VER}_0.tar.bz2 -C dependencies     && rm boost_1_${BOOST_MINOR_VER}_0.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://bitbucket.org/cegui/cegui/get/v0-8-7.tar.bz2     && tar
      xjf v0-8-7.tar.bz2 -C dependencies     && rm v0-8-7.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://github.com/g-truc/glm/archive/${GLM_VERSION}.tar.gz     &&
      tar xf ${GLM_VERSION}.tar.gz -C dependencies     && rm ${GLM_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://github.com/cbeck88/empoxy/archive/master.zip     && unzip
      master.zip -d dependencies     && rm master.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://github.com/emscripten-ports/FreeType/archive/version_1.zip      &&
      unzip version_1.zip -d dependencies      && rm version_1.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet http://downloads.sourceforge.net/project/expat/expat/${EXPAT_VERSION}/expat-${EXPAT_VERSION}.tar.bz2     &&
      tar xjf expat-${EXPAT_VERSION}.tar.bz2 -C dependencies     && rm expat-${EXPAT_VERSION}.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet http://downloads.sourceforge.net/project/freeimage/Source%20Distribution/3.17.0/FreeImage3170.zip     &&
      unzip FreeImage3170.zip -d dependencies     && rm FreeImage3170.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://github.com/madler/zlib/archive/v${ZLIB_VERSION}.tar.gz     &&
      tar xf v${ZLIB_VERSION}.tar.gz -C dependencies     && rm v${ZLIB_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: MINIZIP_COMMIT
      Value: 7b8e226c491a77360dbbc71c2429470924555a9e
    Name: env
  - CmdLine:
    - wget --quiet https://github.com/nmoinvaz/minizip/archive/${MINIZIP_COMMIT}.zip     &&
      unzip ${MINIZIP_COMMIT}.zip -d dependencies     && rm ${MINIZIP_COMMIT}.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: EMSCRIPTEN
      Value: /emsdk_portable/emscripten/tag-1.37.18
    Name: env
  - Env:
    - Key: TOOLCHAIN
      Value: ${EMSCRIPTEN}/cmake/Modules/Platform/Emscripten.cmake
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${EMSCRIPTEN}
    Name: env
  - CmdLine:
    - sed -i 's/-O2/-O3/' ${TOOLCHAIN}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /elma2/dependencies/zlib-${ZLIB_VERSION}
  - CmdLine:
    - emcmake cmake  -DCMAKE_BUILD_TYPE=Release -DOFF64_T_run_result=4 -DOFF64_T_run_result__TRYRUN_OUTPUT=""  -DCMAKE_INSTALL_PREFIX=${EMSCRIPTEN}/system
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - make VERBOSE=1 && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /elma2/dependencies/minizip-${MINIZIP_COMMIT}
  - CmdLine:
    - emcmake cmake  -DCMAKE_PREFIX_PATH=${EMSCRIPTEN}/system  -DCMAKE_BUILD_TYPE=Release  -DCMAKE_INSTALL_PREFIX=${EMSCRIPTEN}/system
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - make VERBOSE=1 && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /elma2/dependencies/boost_1_${BOOST_MINOR_VER}_0
  - CmdLine:
    - apt-get install -y gcc     && ./bootstrap.sh --with-libraries=system,filesystem,serialization,signals,thread,date_time,chrono,test,log     &&
      apt-get -y --purge remove gcc     && apt-get -y clean     && apt-get -y autoclean     &&
      apt-get -y autoremove
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "using gcc : : em++ ;" > /root/user-config.jam'
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/\$(archiver\[1\])/emar/' /elma2/dependencies/boost_1_${BOOST_MINOR_VER}_0/tools/build/src/tools/gcc.jam
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/\$(ranlib\[1\])/emranlib/' /elma2/dependencies/boost_1_${BOOST_MINOR_VER}_0/tools/build/src/tools/gcc.jam
    Name: run
    PrependShell: true
  - CmdLine:
    - ./b2 install variant=release link=static -j2 --prefix=${EMSCRIPTEN}/system -d+2
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /elma2/dependencies/FreeImage
  - CmdLine:
    - /bin/bash -c 'echo -e "#include <sys/types.h>\n#include <unistd.h>"' >> Source/ZLib/gzguts.h
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "U32 _byteswap_ulong(U32 bits);" >> Source/LibJXR/image/sys/strcodec.h
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "#include <wchar.h>" >> Source/LibJXR/jxrgluelib/JXRGlue.h
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/main/not_main/' Source/OpenEXR/IlmImf/b44ExpLogTable.cpp
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/?= -O3/= -O3/' Makefile.gnu
    Name: run
    PrependShell: true
  - CmdLine:
    - emmake make VERBOSE=1 -j2
    Name: run
    PrependShell: true
  - CmdLine:
    - emmake make INCDIR=${EMSCRIPTEN}/system/include INSTALLDIR=${EMSCRIPTEN}/system/lib
      install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /elma2/dependencies/expat-${EXPAT_VERSION}
  - CmdLine:
    - emcmake cmake  -DCMAKE_BUILD_TYPE=Release  -DBUILD_tools=OFF -DBUILD_tests=OFF
      -DBUILD_examples=OFF  -DCMAKE_INSTALL_PREFIX=${EMSCRIPTEN}/system .
    Name: run
    PrependShell: true
  - CmdLine:
    - make VERBOSE=1 && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /elma2/dependencies/glm-${GLM_VERSION}
  - CmdLine:
    - emcmake cmake  -DCMAKE_INSTALL_INCLUDEDIR=${EMSCRIPTEN}/system/include .
    Name: run
    PrependShell: true
  - CmdLine:
    - make && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /elma2/dependencies/empoxy-master
  - CmdLine:
    - emcmake cmake  -DCMAKE_BUILD_TYPE=Release  -DCMAKE_INSTALL_PREFIX=${EMSCRIPTEN}/system
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - make VERBOSE=1 -j2 && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /elma2/dependencies/FreeType-version_1
  - CmdLine:
    - mkdir build && cd build && emcmake cmake  -DCMAKE_BUILD_TYPE=Release  -DCMAKE_INSTALL_PREFIX=${EMSCRIPTEN}/system
      ..
    Name: run
    PrependShell: true
  - CmdLine:
    - cd build && make VERBOSE=1 -j2 && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /elma2
  - CmdLine:
    - mv dependencies/cegui-cegui-*/ dependencies/cegui-${CEGUI_VERSION}/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir dependencies/cegui-${CEGUI_VERSION}/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /elma2/dependencies/cegui-${CEGUI_VERSION}/build
  - CmdLine:
    - sed -i 's/FREETYPE FREETYPE_LIB/FREETYPE/' ../cmake/FindFreetype.cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/EPOXY DEFAULT_MSG EPOXY_LIB EPOXY_H_PATH/EPOXY DEFAULT_MSG EPOXY_H_PATH/'
      ../cmake/FindEpoxy.cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - sed  -i 's/OPENGLES DEFAULT_MSG OPENGLES_LIB OPENGLES_H_PATH/OPENGLES DEFAULT_MSG
      OPENGLES_H_PATH/'  ../cmake/FindOpenGLES.cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/__linux__/EMSCRIPTEN/' ../cegui/src/SimpleTimer.cpp
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/__linux__/EMSCRIPTEN/' ../cegui/src/DynamicModule.cpp
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ../cegui/src/falagard/XMLHandler.cpp ../cegui/src/falagard/Falagard_xmlHandler.cpp
    Name: run
    PrependShell: true
  - CmdLine:
    - emcmake cmake  -DCMAKE_BUILD_TYPE=Release  -DCMAKE_INSTALL_PREFIX=${EMSCRIPTEN}/system  -DCEGUI_BUILD_STATIC_CONFIGURATION=1  -DCEGUI_BUILD_STATIC_FACTORY_MODULE=1  -DCEGUI_USE_GLEW=0  -DCEGUI_USE_EPOXY=1  -DCEGUI_BUILD_PYTHON_MODULES=0
      -DCEGUI_BUILD_IMAGECODEC_FREEIMAGE=1  -DCEGUI_HAS_DEFAULT_LOGGER=0 -DCEGUI_BUILD_IMAGECODEC_TGA=0  -DCEGUI_BUILD_IMAGECODEC_STB=0
      -DCEGUI_HAS_PCRE_REGEX=0  -DCEGUI_BUILD_RENDERER_NULL=0 -DCEGUI_BUILD_RENDERER_OPENGLES=0  -DCEGUI_BUILD_RENDERER_OPENGL=0
      -DCEGUI_BUILD_RENDERER_OPENGL3=1  -DCEGUI_OPTION_DEFAULT_XMLPARSER="ExpatParser"
      -DCEGUI_BUILD_XMLPARSER_EXPAT=1 ..
    Name: run
    PrependShell: true
  - CmdLine:
    - make VERBOSE=1 -j2 && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/CMAKE_EXECUTABLE_SUFFIX "\.js"/CMAKE_EXECUTABLE_SUFFIX ".html"/' ${TOOLCHAIN}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - patches/emscripten/library_glfw.js
    - ${EMSCRIPTEN}/src/library_glfw.js
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/glfw/glfw/${GLFW_VERSION}/include/GLFW/glfw3.h
    - ${EMSCRIPTEN}/system/include/GLFW/glfw3.h
  From:
    Image: trzeci/emscripten:sdk-tag-1.37.18-32bit
  Name: ""
  Platform: ""
  SourceCode: from trzeci/emscripten:sdk-tag-1.37.18-32bit
