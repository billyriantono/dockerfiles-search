MetaArgs: null
Stages:
- BaseName: ubuntu:cosmic
  Commands:
  - CmdLine:
    - apt-get clean -y && apt-get update &&     apt-get install -y apt-utils locales
      &&     locale-gen en_US.UTF-8 &&     apt-get clean all
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: ROOTDIR
      Value: /usr/local/
    Name: env
  - Env:
    - Key: OPENJPEG_VERSION
      Value: 2.3.0
    Name: env
  - Env:
    - Key: GDAL_VERSION
      Value: 2.4.2
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64/
    Name: env
  - Env:
    - Key: SCALA_VERSION
      Value: 2.12.8
    Name: env
  - Env:
    - Key: SBT_VERSION
      Value: 1.2.8
    Name: env
  - Name: workdir
    Path: $ROOTDIR/
  - CmdLine:
    - apt-get update &&     apt-get install -y         software-properties-common         python3-software-properties         gcc         g++         curl         build-essential         python-dev         python-numpy         python3-dev         python3-numpy         python3-pip         libcurl4-gnutls-dev         libproj-dev         libgeos-dev         libhdf4-alt-dev         libhdf5-serial-dev         bash-completion         cmake         imagemagick         libpng-dev         wget         swig         ant         openjdk-8-jdk-headless         git     &&
      apt-get clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $ROOTDIR/src &&     wget https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz
      &&     tar -xvf v${OPENJPEG_VERSION}.tar.gz &&     cd openjpeg-${OPENJPEG_VERSION}/
      &&     mkdir build &&     cd build &&     cmake .. -DCMAKE_BUILD_TYPE=Release
      -DCMAKE_INSTALL_PREFIX=$ROOTDIR &&     make -j &&     make install &&     rm
      -Rf $ROOTDIR/src/openjpeg* $ROOTDIR/src/v${OPENJPEG_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $ROOTDIR/src &&     wget http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz
      &&     tar -xvf gdal-${GDAL_VERSION}.tar.gz &&     cd gdal-${GDAL_VERSION} &&     ./configure         --with-curl         --with-openjpeg         --with-hdf4         --with-hdf5         --with-geos         --with-geotiff=internal         --with-hide-internal-symbols         --with-libtiff=internal         --with-libz=internal         --with-threads         --with-mrf         --without-jp2mrsid         --without-netcdf         --without-ecw         --with-java=$JAVA_HOME     &&     make
      -j4 &&     make install &&     ldconfig &&     apt-get remove -y --purge build-essential
      &&     apt-get autoremove -y && apt-get clean all &&     rm -Rf $ROOTDIR/src/gdal*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsL https://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz
      | tar xfz - -C /root/ &&   echo >> /root/.bashrc &&   echo "export PATH=~/scala-$SCALA_VERSION/bin:$PATH"
      >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
      &&   dpkg -i sbt-$SBT_VERSION.deb &&   rm sbt-$SBT_VERSION.deb &&   apt-get
      install sbt &&   apt-get clean all &&   sbt sbtVersion
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/lib/jvm/java-8-openjdk-amd64 && touch /usr/lib/jvm/java-8-openjdk-amd64/release
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/* && apt-get autoremove -y && apt-get clean all
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /data
  - Name: volume
    Volumes:
    - /data
  - CmdLine:
    - 'gdalinfo --version && gdalinfo --formats && java -version && javac -version
      && echo sbt sbtVersion: `sbt sbtVersion` && aws --version'
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:cosmic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:cosmic
