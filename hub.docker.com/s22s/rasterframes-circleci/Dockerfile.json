{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "circleci/openjdk:8-jdk",
      "SourceCode": "FROM circleci/openjdk:8-jdk",
      "Platform": "",
      "From": {
        "Image": "circleci/openjdk:8-jdk"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "OPENJPEG_VERSION",
              "Value": "2.3.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GDAL_VERSION",
              "Value": "2.4.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sudo apt-get update \u0026\u0026     sudo apt remove       python python-minimal python2.7 python2.7-minimal       libpython-stdlib libpython2.7 libpython2.7-minimal libpython2.7-stdlib       \u0026\u0026     sudo apt-get install -y       pandoc wget       gcc g++ build-essential bash-completion cmake imagemagick       libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev       liblzma-dev libcurl4-gnutls-dev libproj-dev libgeos-dev libhdf4-alt-dev libpng-dev libffi-dev       \u0026\u0026     sudo apt autoremove \u0026\u0026     sudo apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget https://www.python.org/ftp/python/3.7.4/Python-3.7.4.tgz \u0026\u0026     tar xzf Python-3.7.4.tgz \u0026\u0026     cd Python-3.7.4 \u0026\u0026     ./configure  --with-ensurepip=install --prefix=/usr/local --enable-optimization \u0026\u0026     make \u0026\u0026     sudo make altinstall \u0026\u0026     rm -rf Python-3.7.4*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo ln -s /usr/local/bin/python3.7 /usr/local/bin/python \u0026\u0026     sudo curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \u0026\u0026     sudo python get-pip.py \u0026\u0026     sudo pip3 install setuptools ipython==6.2.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz \u0026\u0026     tar -xf v${OPENJPEG_VERSION}.tar.gz \u0026\u0026     cd openjpeg-${OPENJPEG_VERSION}/ \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local/ \u0026\u0026     make -j \u0026\u0026     sudo make install \u0026\u0026     cd /tmp \u0026\u0026 rm -Rf v${OPENJPEG_VERSION}.tar.gz openjpeg*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz \u0026\u0026     tar -xf gdal-${GDAL_VERSION}.tar.gz \u0026\u0026     cd gdal-${GDAL_VERSION} \u0026\u0026     ./configure         --with-curl         --with-hdf4         --with-geos         --with-geotiff=internal         --with-hide-internal-symbols         --with-libtiff=internal         --with-libz=internal         --with-mrf         --with-openjpeg         --with-threads         --without-jp2mrsid         --without-netcdf         --without-ecw \u0026\u0026     make -j 8 \u0026\u0026     sudo make install \u0026\u0026     sudo ldconfig \u0026\u0026     cd /tmp \u0026\u0026 sudo rm -Rf gdal*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}