{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TIMEZONE",
              "Value": "America/Sao_Paulo"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "4096M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MAX_EXECUTION_TIME",
              "Value": "180000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_UPLOAD",
              "Value": "50M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MAX_FILE_UPLOAD",
              "Value": "200"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MAX_POST",
              "Value": "100M"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/nginx.runit",
            "/etc/service/nginx/run"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/php7.runit",
            "/etc/service/php7/run"
          ]
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk upgrade \u0026\u0026     apk add --update tzdata \u0026\u0026     cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \u0026\u0026     echo \"${TIMEZONE}\" \u003e /etc/timezone \u0026\u0026     apk add --update         runit         nginx         curl         git         openssh-client         openssl         php7         php7-dev         php7-curl         php7-common         php7-intl         php7-gd         php7-opcache         php7-phar         php7-mcrypt         php7-mbstring         php7-mysqli         php7-json         php7-iconv         php7-session         php7-ctype         php7-dom         php7-pdo         php7-pdo_mysql         php7-fpm         php7-redis         php7-bcmath         php7-tokenizer         php7-soap         php7-xsl         php7-xml         php7-xmlwriter         php7-simplexml         php7-xdebug         php7-zlib         php7-openssl         php7-fileinfo         php7-zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s|;date.timezone =.*|date.timezone = ${TIMEZONE}|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|max_execution_time =.*|max_execution_time = ${PHP_MAX_EXECUTION_TIME}|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|max_input_time =.*|max_input_time = ${PHP_MAX_EXECUTION_TIME}|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|upload_max_filesize =.*|upload_max_filesize = ${MAX_UPLOAD}|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|max_file_uploads =.*|max_file_uploads = ${PHP_MAX_FILE_UPLOAD}|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|post_max_size =.*|max_file_uploads = ${PHP_MAX_POST}|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|display_errors =.*|display_errors = ON|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|short_open_tag =.*|short_open_tag = ON|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|;realpath_cache_size =.*|realpath_cache_size = 32k|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|realpath_cache_ttl =.*|realpath_cache_ttl = 7200|\" /etc/php7/php.ini \u0026\u0026     sed -i \"s|output_buffering =.*|output_buffering = 4096|\" /etc/php7/php.ini \u0026\u0026     echo \"opcache.enable = 1\" \u003e\u003e /etc/php7/conf.d/00_opcache.ini \u0026\u0026     echo \"opcache.validate_timestamps=\\${OPCACHE_VALIDATE_TIMESTAMPS}\" \u003e\u003e /etc/php7/conf.d/00_opcache.ini \u0026\u0026     echo \"opcache.revalidate_freq=\\${OPCACHE_REVALIDATE_FREQ}\" \u003e\u003e /etc/php7/conf.d/00_opcache.ini \u0026\u0026     echo \"opcache.memory_consumption = 512\" \u003e\u003e /etc/php7/conf.d/00_opcache.ini \u0026\u0026     echo \"opcache.max_accelerated_files = 7963\" \u003e\u003e /etc/php7/conf.d/00_opcache.ini \u0026\u0026     echo \"opcache.max_wasted_percentage = 10\" \u003e\u003e /etc/php7/conf.d/00_opcache.ini \u0026\u0026     echo \"opcache.interned_strings_buffer=64\" \u003e\u003e /etc/php7/conf.d/00_opcache.ini \u0026\u0026     echo \"opcache.fast_shutdown=1\" \u003e\u003e /etc/php7/conf.d/00_opcache.ini \u0026\u0026     echo \"opcache.enable_file_override=1\" \u003e\u003e /etc/php7/conf.d/00_opcache.ini \u0026\u0026     sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php7/php.ini \u0026\u0026     echo \"zend_extension=xdebug.so\" \u003e\u003e /etc/php7/conf.d/xdebug.ini \u0026\u0026     echo \"xdebug.remote_enable=\\${XDEBUG_ENABLE}\" \u003e\u003e /etc/php7/conf.d/xdebug.ini \u0026\u0026     echo \"xdebug.remote_handler=dbgp\" \u003e\u003e /etc/php7/conf.d/xdebug.ini \u0026\u0026     echo \"xdebug.remote_mode=req\" \u003e\u003e /etc/php7/conf.d/xdebug.ini \u0026\u0026     echo \"xdebug.remote_port=9001\" \u003e\u003e /etc/php7/conf.d/xdebug.ini \u0026\u0026     echo \"xdebug.remote_autostart=1\" \u003e\u003e /etc/php7/conf.d/xdebug.ini \u0026\u0026     echo \"xdebug.remote_connect_back=1\" \u003e\u003e /etc/php7/conf.d/xdebug.ini \u0026\u0026     echo \"xdebug.remote_host=docker.local\" \u003e\u003e /etc/php7/conf.d/xdebug.ini \u0026\u0026     ln -sf /usr/bin/php7 /usr/bin/php \u0026\u0026     curl --insecure -sS https://getcomposer.org/installer | php \u0026\u0026     mv composer.phar /usr/bin/composer \u0026\u0026     mkdir /etc/nginx/sites-enabled \u0026\u0026     adduser -u 1001 docker -D -s /bin/ash \u0026\u0026     chown -R docker:docker /home/docker \u0026\u0026     mkdir -p /etc/service \u0026\u0026     chmod a+x /etc/service/nginx/run \u0026\u0026     chmod a+x /etc/service/php7/run \u0026\u0026     mkdir /www \u0026\u0026     chown -R docker:docker /www \u0026\u0026     apk del tzdata \u0026\u0026     rm -fr /tmp/*.apk \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export NEWRELIC_VERSION=\"$(curl -sS https://download.newrelic.com/php_agent/release/ | sed -n 's/.*\u003e\\(.*linux-musl\\).tar.gz\u003c.*/\\1/p')\"     \u0026\u0026 curl -sS \"https://download.newrelic.com/php_agent/release/${NEWRELIC_VERSION}.tar.gz\" | gzip -dc | tar xf -     \u0026\u0026 cd \"${NEWRELIC_VERSION}\"     \u0026\u0026 NR_INSTALL_SILENT=true ./newrelic-install install     \u0026\u0026 cd ..     \u0026\u0026 unset NEWRELIC_VERSION     \u0026\u0026 sed -i         -e \"s/;\\?newrelic.enabled =.*/newrelic.enabled = \\${NEW_RELIC_ENABLED}/\"         -e \"s/newrelic.license =.*/newrelic.license = \\${NEW_RELIC_LICENSE_KEY}/\"         -e \"s/;\\?newrelic.framework =.*/newrelic.framework = \\${NEW_RELIC_FRAMEWORK}/\"         -e \"s/newrelic.appname =.*/newrelic.appname = \\${NEW_RELIC_APP_NAME}/\"         /etc/php7/conf.d/newrelic.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/default.conf",
            "/etc/nginx/sites-enabled/default"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/php-fpm.conf",
            "/etc/php7/php-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/www.conf",
            "/etc/php7/php-fpm.d/www.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./run.sh",
            "/home/docker/run.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/www"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/home/docker/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}