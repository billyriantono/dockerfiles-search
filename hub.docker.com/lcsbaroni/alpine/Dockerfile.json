{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.3",
      "SourceCode": "FROM alpine:3.3",
      "Platform": "",
      "From": {
        "Image": "alpine:3.3"
      },
      "Commands": [
        {
          "Maintainer": "Luis Baroni \u003clcsbaroni@yahoo.com.br\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TIMEZONE",
              "Value": "\"America/Sao_Paulo\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "512M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_UPLOAD",
              "Value": "50M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MAX_FILE_UPLOAD",
              "Value": "200"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MAX_POST",
              "Value": "100M"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/nginx.runit",
            "/etc/service/nginx/run"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/php.runit",
            "/etc/service/php/run"
          ]
        },
        {
          "CmdLine": [
            "echo \"@community http://nl.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories \u0026\u0026     echo \"@testing http://nl.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk update \u0026\u0026     apk upgrade \u0026\u0026     apk add --update tzdata \u0026\u0026     cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \u0026\u0026     echo \"${TIMEZONE}\" \u003e /etc/timezone \u0026\u0026     apk add --update         nginx         libxml2         pwgen         runit@community         curl         git         openssh-client         php@community         php-fpm@community          php-dev@community         php-dom@community         php-iconv@community         php-ctype@community         php-cli@community         php-phar@community         php-mcrypt@community         php-mysql@community         php-mysqli@community         php-curl@community         php-json@community         php-gd@community         php-openssl@community         php-pdo@community         php-pdo_mysql@community         php-zlib         php-xml@community"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s|short_open_tag = .*|short_open_tag = On|\" /etc/php/php.ini \u0026\u0026     sed -i \"s|;date.timezone =.*|date.timezone = ${TIMEZONE}|\" /etc/php/php.ini \u0026\u0026     sed -i \"s|memory_limit =.*|memory_limit = ${PHP_MEMORY_LIMIT}|\" /etc/php/php.ini \u0026\u0026     sed -i \"s|upload_max_filesize =.*|upload_max_filesize = ${MAX_UPLOAD}|\" /etc/php/php.ini \u0026\u0026     sed -i \"s|max_file_uploads =.*|max_file_uploads = ${PHP_MAX_FILE_UPLOAD}|\" /etc/php/php.ini \u0026\u0026     sed -i \"s|post_max_size =.*|max_file_uploads = ${PHP_MAX_POST}|\" /etc/php/php.ini \u0026\u0026     sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/php.ini \u0026\u0026     apk del tzdata \u0026\u0026     rm -fr /tmp/*.apk \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     mkdir /etc/nginx/sites-enabled \u0026\u0026     adduser -u 1000 docker -D -s /bin/ash \u0026\u0026     chown -R docker:docker /home/docker \u0026\u0026     mkdir -p /etc/service \u0026\u0026     chmod a+x /etc/service/nginx/run \u0026\u0026     chmod a+x /etc/service/php/run \u0026\u0026     mkdir /www \u0026\u0026     chown -R docker:docker /www \u0026\u0026     echo \"Success\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/default.conf",
            "/etc/nginx/sites-enabled/default"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/php-fpm.conf",
            "/etc/php/php-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/www.conf",
            "/etc/php/php-fpm.d/www.conf"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/www"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "sh",
            "-c",
            "exec /sbin/runsvdir -P /etc/service/"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}