{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:1.11-buster",
      "SourceCode": "FROM golang:1.11-buster",
      "Platform": "",
      "From": {
        "Image": "golang:1.11-buster"
      },
      "Commands": [
        {
          "Maintainer": "\"Yuri Astrakhan \u003cYuriAstrakhan@gmail.com\u003e\"",
          "Name": "maintainer"
        },
        {
          "Key": "PG_MAJOR",
          "Name": "arg",
          "Value": "\"11\""
        },
        {
          "Key": "IMPOSM_REPO",
          "Name": "arg",
          "Value": "\"https://github.com/omniscale/imposm3.git\""
        },
        {
          "Key": "IMPOSM_VERSION",
          "Name": "arg",
          "Value": "\"v0.8.1\""
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update  \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends       libgeos-dev       libleveldb-dev       libprotobuf-dev       osmctools       osmosis  \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends       postgresql-client-$PG_MAJOR  \u0026\u0026 ln -s /usr/lib/libgeos_c.so /usr/lib/libgeos.so  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get github.com/julien-noblet/download-geofabrik  \u0026\u0026 go install github.com/julien-noblet/download-geofabrik  \u0026\u0026 download-geofabrik generate  \u0026\u0026 go get github.com/lukasmartinelli/pgclimb  \u0026\u0026 go install github.com/lukasmartinelli/pgclimb  \u0026\u0026 mkdir -p $GOPATH/src/github.com/omniscale/imposm3  \u0026\u0026 cd  $GOPATH/src/github.com/omniscale/imposm3  \u0026\u0026 go get github.com/tools/godep  \u0026\u0026 git clone --quiet --depth 1 $IMPOSM_REPO -b $IMPOSM_VERSION         $GOPATH/src/github.com/omniscale/imposm3  \u0026\u0026 make build  \u0026\u0026 ( [ -f imposm ] \u0026\u0026 mv imposm /usr/bin/imposm || mv imposm3 /usr/bin/imposm )  \u0026\u0026 rm -rf $GOPATH/bin/godep  \u0026\u0026 rm -rf $GOPATH/src/  \u0026\u0026 rm -rf $GOPATH/pkg/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/import",
            "/cache",
            "/mapping"
          ]
        },
        {
          "Env": [
            {
              "Key": "IMPORT_DIR",
              "Value": "/import"
            },
            {
              "Key": "IMPOSM_CACHE_DIR",
              "Value": "/cache"
            },
            {
              "Key": "MAPPING_YAML",
              "Value": "/mapping/mapping.yaml"
            },
            {
              "Key": "DIFF_DIR",
              "Value": "/import"
            },
            {
              "Key": "TILES_DIR",
              "Value": "/import"
            },
            {
              "Key": "CONFIG_JSON",
              "Value": "config.json"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/usr/src/app/"
          ]
        },
        {
          "CmdLine": [
            "./import_osm.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}