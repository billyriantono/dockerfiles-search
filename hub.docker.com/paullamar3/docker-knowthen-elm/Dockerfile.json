{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node",
      "SourceCode": "FROM node",
      "Platform": "",
      "From": {
        "Image": "node"
      },
      "Commands": [
        {
          "Maintainer": "Paul LaMar \u003cpal3@outlook.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "clocal/*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "p_addpkgs git gconf2 gconf-service gvfs-bin libasound2 libgconf-2-4         libgnome-keyring-dev libgtk2.0-0 libnotify4 libnss3 libxtst6         xdg-utils ca-certificates curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g elm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ATOM_VERSION",
              "Value": "1.9.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL https://github.com/atom/atom/releases/download/v${ATOM_VERSION}/atom-amd64.deb -o /tmp/atom-amd64.deb     \u0026\u0026 dpkg -i /tmp/atom-amd64.deb     \u0026\u0026 rm -rf /tmp/*.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apm install language-elm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g elm-oracle     \u0026\u0026 printf \"\\\"*\\\":\\n    \\\"language-elm\\\":\\n        elmOraclePath: \\\"/usr/local/bin/elm-oracle\\\"\\n\" \u003e /root/.atom/config.cson     \u0026\u0026 chmod 777 /root/.atom/config.cson"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://github.com/avh4/elm-format/releases/download/0.4.0-alpha/elm-format-0.17-0.4.0-alpha-linux-x64.tgz -o /tmp/elm-format-0.17-0.4.0-alpha-linux-x64.tgz    \u0026\u0026 cd /tmp    \u0026\u0026 tar -xvf elm-format-0.17-0.4.0-alpha-linux-x64.tgz    \u0026\u0026 mv elm-format /usr/local/bin/    \u0026\u0026 rm elm-format-0.17-0.4.0-alpha-linux-x64.tgz    \u0026\u0026 cd /root    \u0026\u0026 apm install elm-format"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apm install linter     \u0026\u0026 apm install linter-elm-make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/skel/.atom     \u0026\u0026 cp -r /root/.atom/packages /etc/skel/.atom/packages     \u0026\u0026 cp -r /root/.atom/.apm /etc/skel/.atom/.apm     \u0026\u0026 cp /root/.atom/config.cson /etc/skel/.atom/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/root/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /root/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/root/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}