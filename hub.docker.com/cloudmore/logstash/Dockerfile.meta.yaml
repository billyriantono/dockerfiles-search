MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Name: expose
    Ports:
    - "12201"
    - "9600"
  - Key: APK_CACHE_IP
    Name: arg
    Value: 172.17.0.1
  - Key: APK_CACHE_DOMAIN
    Name: arg
    Value: '''dl-cdn.alpinelinux.org'''
  - Key: RUN_DEPS
    Name: arg
    Value: '''su-exec openjdk8-jre openssl bash libzmq'''
  - Key: BUILD_DEPS
    Name: arg
    Value: '''tar coreutils'''
  - Key: LS_TAGS
    Name: arg
    Value: '''https://www.elastic.co/downloads/logstash'''
  - Key: LS_URL
    Name: arg
    Value: '''https://artifacts.elastic.co/downloads/logstash'''
  - Env:
    - Key: LS_HOME
      Value: /opt/logstash
    Name: env
  - Env:
    - Key: LS_SETTINGS_DIR
      Value: $LS_HOME/config
    Name: env
  - Env:
    - Key: PATH
      Value: $LS_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - nc -z $APK_CACHE_IP 80 && echo $APK_CACHE_IP $APK_CACHE_DOMAIN >>/etc/hosts   ;
      apk --update add --no-cache $RUN_DEPS $BUILD_DEPS     && mkdir -p $LS_HOME &&
      cd $LS_HOME     && LS_LATEST=$(wget -qO- $LS_TAGS | egrep -o "[0-9]+\.[0-9]+\.[0-9]+"
      | sort -Vr | head -1)     && echo "Installing Logstash ${LS_VERSION:=$LS_LATEST}"     &&
      wget -O- $LS_URL/logstash-${LS_VERSION}.tar.gz | tar xz --strip-components=1     &&
      bin/logstash-plugin install logstash-input-gelf     && bin/logstash-plugin install
      logstash-input-s3     && bin/logstash-plugin install logstash-input-sqs     &&
      bin/logstash-plugin install logstash-output-graphite     && adduser -DH -s /sbin/nologin
      logstash && chown -R logstash:logstash $LS_HOME   && apk del $BUILD_DEPS &&
      rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $LS_HOME
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - su-exec
    - logstash
    - logstash
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - -e
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
