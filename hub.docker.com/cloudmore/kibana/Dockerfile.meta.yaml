MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - Name: expose
    Ports:
    - "5601"
  - Key: APK_CACHE_IP
    Name: arg
    Value: 172.17.0.1
  - Key: APK_CACHE_DOMAIN
    Name: arg
    Value: '''dl-cdn.alpinelinux.org'''
  - Key: RUN_DEPS
    Name: arg
    Value: '''su-exec openjdk8-jre openssl bash nodejs'''
  - Key: BUILD_DEPS
    Name: arg
    Value: '''tar coreutils'''
  - Key: KIBANA_TAGS
    Name: arg
    Value: '''https://api.github.com/repos/elastic/kibana/tags'''
  - Key: KIBANA_URL
    Name: arg
    Value: '''https://artifacts.elastic.co/downloads/kibana'''
  - Env:
    - Key: KIBANA_HOME
      Value: /opt/kibana
    Name: env
  - Env:
    - Key: PATH
      Value: $KIBANA_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - nc -z $APK_CACHE_IP 80 && echo $APK_CACHE_IP $APK_CACHE_DOMAIN >>/etc/hosts   ;
      apk --update add --no-cache $RUN_DEPS $BUILD_DEPS     && mkdir -p $KIBANA_HOME
      && cd $KIBANA_HOME     && KIBANA_LATEST=$(wget -qO- $KIBANA_TAGS | egrep -o
      "[0-9]+\.[0-9]+\.[0-9]+" | sort -Vr | head -1)     && wget -O- $KIBANA_URL/kibana-${KIBANA_VERSION:=$KIBANA_LATEST}-linux-x86_64.tar.gz
      | tar xz --strip-components=1     && rm -rf node && mkdir -p node/bin && ln
      -s $(which node) node/bin/node     && adduser -DH -s /sbin/nologin kibana &&
      chown -R kibana:kibana $KIBANA_HOME   && apk del $BUILD_DEPS && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $KIBANA_HOME
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - .
  - Name: volume
    Volumes:
    - $KIBANA_HOME/optimize
    - $KIBANA_HOME/data
  - CmdLine:
    - su-exec
    - kibana
    - kibana
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
