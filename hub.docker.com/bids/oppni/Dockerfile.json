{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O /etc/apt/sources.list.d/neurodebian.sources.list http://neuro.debian.net/lists/xenial.us-ca.full"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --recv-keys --keyserver hkp://pgp.mit.edu:80 0xA5D32F012649A5A9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y fsl-5.0-core"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 wget --no-check-certificate https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \u0026\u0026 tar xfz /tmp/linux_openmp_64.tgz \u0026\u0026 mv /tmp/linux_openmp_64 /opt/afni"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/afni:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DYLD_FALLBACK_LIBRARY_PATH",
              "Value": "/opt/afni"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FSLDIR",
              "Value": "/usr/share/fsl/5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FSLOUTPUTTYPE",
              "Value": "NIFTI_GZ"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FSLMULTIFILEQUIT",
              "Value": "TRUE"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSSUMDIR",
              "Value": "/usr/share/fsl/5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/lib/fsl/5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FSLTCLSH",
              "Value": "/usr/bin/tclsh"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FSLWISH",
              "Value": "/usr/bin/wish"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq update \u0026\u0026 apt-get -qq install -y unzip xorg wget curl \u0026\u0026     mkdir /opt/mcr \u0026\u0026     mkdir /mcr-install \u0026\u0026     cd /mcr-install \u0026\u0026     wget -nv http://www.mathworks.com/supportfiles/MCR_Runtime/R2012b/MCR_R2012b_glnxa64_installer.zip \u0026\u0026     unzip MCR_R2012b_glnxa64_installer.zip \u0026\u0026     ./install -destinationFolder /opt/mcr -agreeToLicense yes -mode silent \u0026\u0026     cd / \u0026\u0026     rm -rf /mcr-install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install nibabel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "AFNI_PATH",
              "Value": "/opt/afni"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FSL_PATH",
              "Value": "$FSLDIR/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MCR_PATH",
              "Value": "/opt/mcr/v80"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$AFNI_PATH:$FSL_PATH:$MCR_PATH:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /code"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /oppni"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /projects"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /scratch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /local-scratch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run_oppni.sh",
            "oppni",
            "oppni.py",
            "/oppni/"
          ]
        },
        {
          "Env": [
            {
              "Key": "OPPNI",
              "Value": "/oppni"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$OPPNI:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "python",
            "/oppni/oppni.py"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}