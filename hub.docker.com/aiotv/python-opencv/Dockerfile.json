{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6.3-stretch",
      "SourceCode": "FROM python:3.6.3-stretch",
      "Platform": "",
      "From": {
        "Image": "python:3.6.3-stretch"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"deb http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list  \u0026\u0026 curl https://storage.googleapis.com/bazel-apt/doc/apt-key.pub.gpg | apt-key add -  \u0026\u0026 apt-get -y update  \u0026\u0026 apt-get -y install autoconf-archive automake g++ libtool pkg-config unzip build-essential cmake     libatlas-base-dev gfortran libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libjpeg-dev libpng-dev     libtiff-dev libv4l-dev libleptonica-dev openjdk-8-jdk openjdk-8-jre-headless ca-certificates-java     clang-format-3.8 libcurl4-openssl-dev libtool python-dev python-setuptools python-virtualenv     python3-dev python3-setuptools zlib1g-dev bazel \u0026\u0026 pip install numpy==1.13.3 wheel  \u0026\u0026 update-ca-certificates -f"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://github.com/tensorflow/tensorflow/archive/r1.4.zip -o tensorflow.zip  \u0026\u0026 unzip -q tensorflow.zip \u0026\u0026 mv /tensorflow-r1.4 /tensorflow \u0026\u0026 rm tensorflow.zip  \u0026\u0026 cd tensorflow  \u0026\u0026 tensorflow/tools/ci_build/builds/configured CPU  \u0026\u0026 touch WORKSPACE  \u0026\u0026 echo \"startup --batch\\nbuild --spawn_strategy=standalone --genrule_strategy=standalone\" \u003e\u003e/etc/bazel.bazelrc  \u0026\u0026 bazel build -c opt --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mfpmath=both --copt=-msse4.2     --output_filter='^//tensorflow'  //tensorflow/tools/pip_package:build_pip_package  \u0026\u0026 bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg  \u0026\u0026 pip install --upgrade /tmp/tensorflow_pkg/tensorflow-*.whl  \u0026\u0026 cd / \u0026\u0026 rm -rf tensorflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://github.com/Itseez/opencv/archive/3.3.0.zip -o opencv3.zip  \u0026\u0026 unzip -q opencv3.zip \u0026\u0026 mv /opencv-3.3.0 /opencv \u0026\u0026 rm opencv3.zip  \u0026\u0026 curl -sSL https://github.com/Itseez/opencv_contrib/archive/3.3.0.zip -o opencv_contrib3.zip  \u0026\u0026 unzip -q opencv_contrib3.zip \u0026\u0026 mv /opencv_contrib-3.3.0 /opencv_contrib \u0026\u0026 rm opencv_contrib3.zip  \u0026\u0026 mkdir /opencv/build \u0026\u0026 cd /opencv/build  \u0026\u0026 cmake -D CMAKE_BUILD_TYPE=RELEASE           -D BUILD_PYTHON_SUPPORT=ON           -D CMAKE_INSTALL_PREFIX=/usr/local           -D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib/modules           -D BUILD_EXAMPLES=OFF           -D PYTHON_DEFAULT_EXECUTABLE=/usr/bin/python           -D BUILD_opencv_python3=ON           -D BUILD_opencv_python2=OFF           -D WITH_IPP=OFF           -D WITH_FFMPEG=ON           -D WITH_V4L=ON ..  \u0026\u0026 cd /opencv/build \u0026\u0026 make -j$(nproc) \u0026\u0026 make install \u0026\u0026 ldconfig  \u0026\u0026 rm -rf /opencv /opencv_contrib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /  \u0026\u0026 curl -sSL https://github.com/tesseract-ocr/tesseract/archive/ebbfc3ae8df85c351002000a76900e3086375e7b.zip -o tesseract-ocr.zip  \u0026\u0026 unzip tesseract-ocr.zip \u0026\u0026 rm tesseract-ocr.zip  \u0026\u0026 cd tesseract-*/  \u0026\u0026 . ./autogen.sh  \u0026\u0026 ./configure  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 ldconfig  \u0026\u0026 cd ..  \u0026\u0026 rm -rf tesseract-*/  \u0026\u0026 curl -sSL 'https://github.com/tesseract-ocr/tessdata/blob/master/eng.traineddata?raw=true'     -o /usr/local/share/eng.traineddata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y remove --purge autoconf-archive automake g++ libtool unzip build-essential cmake pkg-config      libatlas-base-dev gfortran libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev     libjpeg-dev libpng-dev libtiff-dev libv4l-dev libcurl4-openssl-dev libtool zlib1g-dev \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}