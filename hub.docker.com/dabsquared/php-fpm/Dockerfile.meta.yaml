MetaArgs: null
Stages:
- BaseName: php:7.2-fpm-alpine
  Commands:
  - Maintainer: Daniel Brooks <bass_rock@me.com>
    Name: maintainer
  - CmdLine:
    - "apk add --update --no-cache --virtual .persistent-deps \t\tca-certificates
      \t\tcurl \t\ttar \t\tgit \t\tbash \t\txz \t\tbzip2 \t\tlibbz2 \t\tlibsodium
      \t\tlibpng \t\tlibjpeg \t\tlibxml2 \t\tlibwebp \t\tlibxslt \t\ticu \t\tlibssh2
      \t\tlibmcrypt \t\tfreetype \t\tcurl \t\tlibcurl \t\tpdftk \t\tgraphviz \t\tacl
      \t\tfcgi \t\tgrep \t\tunzip \t\tlibressl"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk/jre
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u181
    Name: env
  - Env:
    - Key: JAVA_ALPINE_VERSION
      Value: 8.181.13-r0
    Name: env
  - CmdLine:
    - "set -x \t&& apk add --no-cache \t\topenjdk8-jre=\"$JAVA_ALPINE_VERSION\" \t&&
      [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 10.9.0
    Name: env
  - CmdLine:
    - addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     &&
      apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         binutils-gold         curl         g++         gcc         gnupg         libgcc         linux-headers         make         python   &&
      for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     56730D5401028683275BD23C23EFEFE93C4CFFFE     77984A986EBC2AA786BC0F66B01FBB92821C587A     8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600   ;
      do     gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key"
      ||     gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key"
      ||     gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ;   done     &&
      curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz"     &&
      curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"     &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep
      " node-v$NODE_VERSION.tar.xz\$" SHASUMS256.txt | sha256sum -c -     && tar -xf
      "node-v$NODE_VERSION.tar.xz"     && cd "node-v$NODE_VERSION"     && ./configure     &&
      make -j$(getconf _NPROCESSORS_ONLN)     && make install     && apk del .build-deps     &&
      cd ..     && rm -Rf "node-v$NODE_VERSION"     && rm "node-v$NODE_VERSION.tar.xz"
      SHASUMS256.txt.asc SHASUMS256.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_VERSION
      Value: 1.9.2
    Name: env
  - CmdLine:
    - apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ;
      do     gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key"
      ||     gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key"
      ||     gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ;   done   &&
      curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   &&
      curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   &&
      gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   &&
      mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn
      /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   &&
      rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz && apk del .build-deps-yarn
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.ini
    - /usr/local/etc/php/
  - CmdLine:
    - "apk add --no-cache --virtual .build-php autoconf gcc g++ make bzip2-dev libpng-dev
      libxml2-dev libxslt-dev libmcrypt-dev icu-dev curl-dev libssh2-dev \t&& docker-php-ext-install
      pdo_mysql bcmath bz2 gd xsl intl soap zip calendar pcntl shmop exif opcache
      \ \t&& pecl install apcu && docker-php-ext-enable --ini-name=20-apcu.ini apcu
      \ \t&& pecl install apcu_bc && docker-php-ext-enable --ini-name=21-apc.ini apc
      \ \t&& pecl install ssh2-1.0 && docker-php-ext-enable ssh2  \t&& pecl install
      redis && docker-php-ext-enable redis  \t&& pecl install mcrypt-1.0.1 && docker-php-ext-enable
      mcrypt  \t&& pecl install xdebug && docker-php-ext-enable xdebug \t&& apk del
      .build-php"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - composer --version
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: Etc/GMT+7
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - date
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/9000/3001/' /usr/local/etc/php-fpm.d/zz-docker.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "error_reporting = E_ALL & ~E_NOTICE" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini  &&
      echo "display_startup_errors = On" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini  &&
      echo "display_errors = On" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini  &&
      echo "xdebug.remote_enable=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini  &&
      echo "xdebug.remote_autostart=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini  &&
      echo "xdebug.remote_connect_back=0" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini  &&
      echo "xdebug.idekey=\"PHPSTORM\"" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini  &&
      echo "xdebug.remote_port=9000" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini  &&
      echo "xdebug.remote_host=host.docker.internal" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias sf3="php bin/console"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''{ "allow_root": true }'' > ~/.bowerrc'
    Name: run
    PrependShell: true
  - Env:
    - Key: ISDEV
      Value: "false"
    Name: env
  - Env:
    - Key: ASSECTIC
      Value: "true"
    Name: env
  - Env:
    - Key: ENVIRONMENT
      Value: '"prod"'
    Name: env
  - Env:
    - Key: DB_DIR
      Value: '".data/db/"'
    Name: env
  - Env:
    - Key: APP_ENV
      Value: '"prod"'
    Name: env
  - Env:
    - Key: APP_DEBUG
      Value: "false"
    Name: env
  - Env:
    - Key: APP_FILE
      Value: '"web/app.php"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - setup.sh
    - /setup.sh
  - CmdLine:
    - chmod +x /setup.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /var/www/symfony
  - Name: expose
    Ports:
    - "3001"
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  - Health:
      Interval: 15000000000
      Retries: 30
      Test:
      - CMD-SHELL
      - SCRIPT_NAME=/health    SCRIPT_FILENAME=/var/www/symfony/$APP_FILE    REQUEST_METHOD=GET    cgi-fcgi
        -bind -connect 127.0.0.1:3001 || exit 1
      Timeout: 3000000000
    Name: healthcheck
  From:
    Image: php:7.2-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-fpm-alpine
