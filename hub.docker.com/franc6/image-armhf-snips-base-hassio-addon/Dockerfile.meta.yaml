MetaArgs:
- DefaultValue: null
  Key: BUILD_FROM
  ProvidedValue: null
  Value: null
Stages:
- As: mybase
  BaseName: $BUILD_FROM
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - qemu-arm-static
    - /usr/bin/
  - Key: BUILD_ARCH
    Name: arg
    Value: null
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - set -x     && apt-get update     && apt-get dist-upgrade -y     && apt-get install
      -y         dirmngr         locales         apt-utils         apt-transport-https     &&
      sed -i -e 's/# de_\(..\)\.UTF-8 UTF-8/de_\1.UTF-8 UTF-8/'            -e 's/#
      en_\(..\)\.UTF-8 UTF-8/en_\1.UTF-8 UTF-8/'            -e 's/# fr_\(..\)\.UTF-8
      UTF-8/fr_\1.UTF-8 UTF-8/'            -e 's/# it_\(..\)\.UTF-8 UTF-8/it_\1.UTF-8
      UTF-8/'            -e 's/# ja_\(..\)\.UTF-8 UTF-8/ja_\1.UTF-8 UTF-8/' /etc/locale.gen     &&
      dpkg-reconfigure --frontend=noninteractive locales     && update-locale     &&
      apt-get update     && apt-get install -y         alsa-utils         curl         git         libttspico-utils         mosquitto         mosquitto-clients         mpg123         python-pip         python-virtualenv         python3-pip         python3-venv         python3-setuptools         python3-virtualenv         unzip         ffmpeg         supervisor     &&
      rm -rf /var/lib/apt/lists/*     && pip install virtualenv
    Name: run
    PrependShell: true
  From:
    Image: $BUILD_FROM
  Name: mybase
  Platform: ""
  SourceCode: FROM $BUILD_FROM AS myBase
- As: snips
  BaseName: myBase
  Commands:
  - Key: BUILD_ARCH
    Name: arg
    Value: null
  - CmdLine:
    - set -x     && if [ "$BUILD_ARCH" = "amd64" ]; then         bash -c 'echo "deb
      https://debian.snips.ai/stretch stable main" > /etc/apt/sources.list.d/snips.list'         &&
      apt-key adv --fetch-keys https://debian.snips.ai/5FFCD0DEB5BA45CD.pub ;     else         bash
      -c 'echo "deb https://raspbian.snips.ai/stretch stable main" > /etc/apt/sources.list.d/snips.list'         &&
      apt-key adv --fetch-keys https://raspbian.snips.ai/531DD1A7B702B14D.pub ;     fi     &&
      apt-get update     && apt-get install -y         snips-platform-voice         snips-asr         snips-audio-server         snips-dialogue         snips-hotword         snips-injection         snips-nlu         snips-skill-server         snips-template         snips-tts         snips-watch     &&
      apt-get -y autoremove     && usermod -aG snips-skills-admin root
    Name: run
    PrependShell: true
  From:
    Image: myBase
  Name: snips
  Platform: ""
  SourceCode: FROM myBase AS snips
- As: mimic
  BaseName: myBase
  Commands:
  - CmdLine:
    - set -x     && apt-get update     && apt-get install -y         pkg-config         automake         libtool         libicu-dev         libpcre2-dev         libasound2-dev
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - set -x && git clone https://github.com/MycroftAI/mimic.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/mimic
  - CmdLine:
    - set -x     && ./autogen.sh     && ./configure --prefix=/usr/local     && make     &&
      make check     && make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  From:
    Image: myBase
  Name: mimic
  Platform: ""
  SourceCode: FROM myBase AS mimic
- As: addon
  BaseName: snips
  Commands:
  - CmdLine:
    - set -x     && mkdir -p         /ingress/templates         /ingress/static         /EXTRA-LICENSES     &&
      pip3 install         flask         requests         ruamel.yaml         cheroot
    Name: run
    PrependShell: true
  - Chown: ""
    From: mimic
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/*
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ingress/*.py
    - /ingress/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ingress/templates/*
    - /ingress/templates/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ingress/static/*
    - /ingress/static/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - funcs.sh
    - extract_assistant.sh
    - manage_tts_cache.sh
    - restart_snips_skill_server.sh
    - run.sh
    - setup.sh
    - start_service.sh
    - start_snips_watch.sh
    - stop_snips_watch.sh
    - update_ha_config.py
    - wait-for-it.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - LICENSE
    - EXTRA-LICENSES/*
    - /EXTRA-LICENSES/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tts-unparsed.sh
    - /tts/
  - CmdLine:
    - set -x     && rm -rf /etc/supervisor     && mkdir /etc/supervisor     && chmod
      755         /extract_assistant.sh         /manage_tts_cache.sh         /restart_snips_skill_server.sh         /run.sh         /start_service.sh         /start_snips_watch.sh         /stop_snips_watch.sh         /update_ha_config.py         /wait-for-it.sh         /ingress/         /ingress/static/         /ingress/templates/         /ingress/control.py         /etc/supervisor/         /tts/     &&
      chmod 644         /funcs.sh         /ingress/static/*         /ingress/templates/*         /setup.sh         /tts/tts-unparsed.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /run.sh
    Name: entrypoint
    PrependShell: false
  From:
    Stage:
      Index: 1
      Named: snips
  Name: addon
  Platform: ""
  SourceCode: FROM snips AS addon
