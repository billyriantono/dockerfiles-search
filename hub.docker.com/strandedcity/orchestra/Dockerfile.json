{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "Phil Seaton \u003cphil@phil-seaton.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"@testing http://nl.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories     \u0026\u0026 apk --update add     nginx     dnsmasq     bash     git     curl     ca-certificates     bzip2     unzip     sudo     libstdc++     glib     nodejs     nodejs-npm     libxext     libxrender     tini@testing     \u0026\u0026 curl \"https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub\" -o /etc/apk/keys/sgerrand.rsa.pub     \u0026\u0026 curl -L \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk\" -o glibc.apk     \u0026\u0026 apk add glibc.apk     \u0026\u0026 curl -L \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-bin-2.23-r3.apk\" -o glibc-bin.apk     \u0026\u0026 apk add glibc-bin.apk     \u0026\u0026 /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc/usr/lib     \u0026\u0026 rm -rf glibc*apk /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            },
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            },
            {
              "Key": "NB_USER",
              "Value": "jovyan"
            },
            {
              "Key": "NB_UID",
              "Value": "1000"
            },
            {
              "Key": "NB_GID",
              "Value": "100"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            },
            {
              "Key": "HOME",
              "Value": "/home/$NB_USER"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "fix-permissions.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/fix-permissions.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -s /bin/bash -u $NB_UID -D $NB_USER \u0026\u0026     mkdir -p $CONDA_DIR \u0026\u0026     chown $NB_USER:$NB_GID $CONDA_DIR \u0026\u0026     /usr/local/bin/fix-permissions.sh $HOME \u0026\u0026     /usr/local/bin/fix-permissions.sh $CONDA_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "Env": [
            {
              "Key": "MINICONDA_VER",
              "Value": "4.3.31"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MINICONDA",
              "Value": "Miniconda3-$MINICONDA_VER-Linux-x86_64.sh"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MINICONDA_URL",
              "Value": "https://repo.continuum.io/miniconda/$MINICONDA"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MINICONDA_MD5_SUM",
              "Value": "7fe70b214bee1143e3e3f0467b71453c"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /home/$NB_USER/work \u0026\u0026     mkdir /home/$NB_USER/.jupyter \u0026\u0026     mkdir /home/$NB_USER/.local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     mkdir -p $CONDA_DIR \u0026\u0026     curl -L $MINICONDA_URL  -o miniconda.sh \u0026\u0026     echo \"$MINICONDA_MD5_SUM  miniconda.sh\" | md5sum -c - \u0026\u0026     /bin/bash miniconda.sh -f -b -p $CONDA_DIR \u0026\u0026     rm miniconda.sh \u0026\u0026     $CONDA_DIR/bin/conda install --yes conda==$MINICONDA_VER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes     'notebook=5.3*'     'terminado'     'ipywidgets'     'nomkl'     'ipywidgets=7.0*'     'pandas=0.19*'     'numexpr=2.6*'     'matplotlib=2.0*'     'scipy=0.19*'     'seaborn=0.7*'     'scikit-learn=0.18*'     'scikit-image=0.12*'     'cython=0.25*'     'patsy=0.4*'     'statsmodels=0.8*'     'cloudpickle=0.2*'     'dill=0.2*'     'numba=0.31*'     'bokeh=0.12*'     'hdf5=1.8.17'     'h5py=2.6*'     'beautifulsoup4=4.5.*'     'protobuf=3.*'     'xlrd'  \u0026\u0026     conda remove --quiet --yes --force qt pyqt \u0026\u0026     conda clean -tipsy \u0026\u0026     jupyter nbextension enable --py widgetsnbextension --sys-prefix \u0026\u0026     npm cache clean --force \u0026\u0026     rm -rf $CONDA_DIR/share/jupyter/lab/staging"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XDG_CACHE_HOME",
              "Value": "/home/$NB_USER/.cache/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" \u0026\u0026     /usr/local/bin/fix-permissions.sh /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "echo \"user=root\" \u003e\u003e /etc/dnsmasq.conf \u0026\u0026     echo \"address=/orchestradatascience.com/127.0.0.1\" \u003e\u003e /etc/dnsmasq.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/"
          ]
        },
        {
          "CmdLine": [
            "adduser -D -g 'www' www \u0026\u0026     mkdir /www \u0026\u0026     chown -R www:www /var/lib/nginx \u0026\u0026     chown -R www:www /www \u0026\u0026     mkdir /run/nginx \u0026\u0026     touch /run/nginx/nginx.pid"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "getToken.sh",
            "getSessionCookie.sh",
            "start-notebook.sh",
            "start.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/home/$NB_USER/.jupyter/"
          ]
        },
        {
          "CmdLine": [
            "chown -R $NB_USER:users /home/$NB_USER/.jupyter \u0026\u0026     chmod +x /usr/local/bin/start-notebook.sh \u0026\u0026     chmod +x /usr/local/bin/start.sh \u0026\u0026     chmod +x /usr/local/bin/getSessionCookie.sh \u0026\u0026     chmod +x /usr/local/bin/getToken.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension install https://rawgit.com/strandedcity/orchestra-jupyter/master/dist/orchestra.js \u0026\u0026 \tjupyter nbextension install https://rawgit.com/strandedcity/orchestra-jupyter/master/dist/orchestra-libraries.js \u0026\u0026 \tjupyter nbextension enable orchestra"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "53",
            "53/udp",
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/$NB_USER/work"
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "start-notebook.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}