MetaArgs: null
Stages:
- BaseName: python:2.7-alpine
  Commands:
  - Maintainer: '"Plone Community" http://community.plone.org'
    Name: maintainer
  - CmdLine:
    - addgroup -g 500 plone  && adduser -S -D -G plone -u 500 plone  && mkdir -p /plone
      /data/filestorage /data/blobstorage  && chown -R plone:plone /plone /data
    Name: run
    PrependShell: true
  - Env:
    - Key: PLONE_MAJOR
      Value: "4.3"
    Name: env
  - Env:
    - Key: PLONE_VERSION
      Value: 4.3.7
    Name: env
  - Env:
    - Key: PLONE_MD5
      Value: b4ece39a6dda7a72c9084057d8faae4f
    Name: env
  - CmdLine:
    - apk add --no-cache --virtual .build-deps     curl     bzip2-dev     gcc     libc-dev     ncurses-dev     openssl-dev     readline-dev     zlib-dev     sudo     make     libxml2-dev     libxslt-dev     libjpeg-turbo-dev     libpng-dev
      openssl  && curl -SL -o Plone.tgz https://launchpad.net/plone/$PLONE_MAJOR/$PLONE_VERSION/+download/Plone-$PLONE_VERSION-UnifiedInstaller.tgz  &&
      tar -zxvf Plone.tgz  && curl -SL -o /Plone-$PLONE_VERSION-UnifiedInstaller/helper_scripts/user_group_utilities.sh
      https://raw.githubusercontent.com/plone/Installers-UnifiedInstaller/master/helper_scripts/user_group_utilities.sh  &&
      ./Plone-$PLONE_VERSION-UnifiedInstaller/install.sh       --password=admin       --daemon-user=plone       --owner=plone       --group=plone       --target=/plone       --instance=instance       --var=/data       none  &&
      cd /plone/instance  && sed -i 's/parts =/parts =\n    zeoserver/g' buildout.cfg  &&
      echo -e '\n[zeoserver]\n<= zeoserver_base\nrecipe = plone.recipe.zeoserver'
      >> buildout.cfg  && sudo -u plone LIBRARY_PATH=/lib:/usr/lib bin/buildout  &&
      chown -R plone:plone /plone /data  && apk del .build-deps  && apk add --no-cache
      --virtual .run-deps     bash     libxml2     libxslt     libjpeg-turbo     rsync  &&
      rm -rf /Plone*  && rm -rf /plone/buildout-cache/downloads/*  && find /plone
      \( -type f -a -name '*.pyc' -o -name '*.pyo' \) -exec rm -rf '{}' +
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-initialize.py
    - docker-entrypoint.sh
    - /
  - Name: expose
    Ports:
    - "8080"
  - Name: user
    User: plone
  - Name: workdir
    Path: /plone/instance
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: python:2.7-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:2.7-alpine
