MetaArgs: null
Stages:
- BaseName: python:2.7-alpine
  Commands:
  - Env:
    - Key: PIP
      Value: "19.3"
    - Key: ZC_BUILDOUT
      Value: 2.13.2
    - Key: SETUPTOOLS
      Value: 41.4.0
    - Key: WHEEL
      Value: 0.33.6
    - Key: PLONE_MAJOR
      Value: "5.1"
    - Key: PLONE_VERSION
      Value: 5.1.6
    - Key: PLONE_MD5
      Value: ff161c4a9b484a43f74b54bd0ff0ec06
    Name: env
  - Labels:
    - Key: plone
      Value: $PLONE_VERSION
    - Key: os
      Value: '"alpine"'
    - Key: os.version
      Value: '"3.10"'
    - Key: name
      Value: '"Plone 5.1"'
    - Key: description
      Value: '"Plone image, based on Unified Installer"'
    - Key: maintainer
      Value: '"Plone Community"'
    Name: label
  - CmdLine:
    - addgroup -g 500 plone  && adduser -S -D -G plone -u 500 plone  && mkdir -p /plone/instance
      /data/filestorage /data/blobstorage
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - buildout.cfg
    - /plone/instance/
  - CmdLine:
    - apk add --no-cache --virtual .build-deps     gcc     libc-dev     zlib-dev     libjpeg-turbo-dev     libpng-dev     libxml2-dev     libxslt-dev     pcre-dev     libffi-dev
      && wget -O Plone.tgz https://launchpad.net/plone/$PLONE_MAJOR/$PLONE_VERSION/+download/Plone-$PLONE_VERSION-UnifiedInstaller.tgz
      && echo "$PLONE_MD5  Plone.tgz" | md5sum -c - && tar -zxvf Plone.tgz && cp -rv
      ./Plone-$PLONE_VERSION-UnifiedInstaller/base_skeleton/* /plone/instance/ &&
      cp -v ./Plone-$PLONE_VERSION-UnifiedInstaller/buildout_templates/buildout.cfg
      /plone/instance/buildout-base.cfg && pip install pip==$PIP setuptools==$SETUPTOOLS
      zc.buildout==$ZC_BUILDOUT wheel==$WHEEL && cd /plone/instance && buildout &&
      ln -s /data/filestorage/ /plone/instance/var/filestorage && ln -s /data/blobstorage
      /plone/instance//var/blobstorage && find /data  -not -user plone -exec chown
      plone:plone {} \+ && find /plone -not -user plone -exec chown plone:plone {}
      \+ && rm -rf /Plone* && apk del .build-deps && apk add --no-cache --virtual
      .run-deps     su-exec     bash     rsync     libxml2     libxslt     libjpeg-turbo
      && rm -rf /plone/buildout-cache/downloads/*
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-initialize.py
    - docker-entrypoint.sh
    - /
  - Name: expose
    Ports:
    - "8080"
  - Name: workdir
    Path: /plone/instance
  - Health:
      Interval: 60000000000
      StartPeriod: 60000000000
      Test:
      - CMD-SHELL
      - nc -z -w5 127.0.0.1 8080 || exit 1
      Timeout: 5000000000
    Name: healthcheck
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: python:2.7-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:2.7-alpine
