MetaArgs: null
Stages:
- As: dependencies
  BaseName: nvidia/cuda:8.0-cudnn5-devel
  Commands:
  - Name: workdir
    Path: /tmp/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bootstrap.sh
    - .
  - CmdLine:
    - bash bootstrap.sh    && rm -f bootstrap.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt purge -y python3-pip python-pip                        && curl https://bootstrap.pypa.io/get-pip.py
      -o get-pip.py   && python3 get-pip.py                                        &&
      pip install conan_package_tools                           && rm -f get-pip.py
    Name: run
    PrependShell: true
  - Env:
    - Key: CONAN_USERNAME
      Value: is
    Name: env
  - Env:
    - Key: CONAN_LOGIN_USERNAME
      Value: is
    Name: env
  - Env:
    - Key: CONAN_CHANNEL
      Value: stable
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc/packages/
    - /tmp/packages/
  - Name: workdir
    Path: /tmp/packages
  - CmdLine:
    - cd caffe/           && python3 build.py   && cd ../openpose/    && python3 build.py   &&
      cd /tmp/           && rm -rf packages
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conanfile.py
    - .
  - CmdLine:
    - mkdir -p build_conan                                               && cd /tmp/build_conan                                               &&
      conan install .. -s compiler.libcxx=libstdc++11 --build=missing   && rm -rf
      /tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc/dataset/download.sh
    - .
  - CmdLine:
    - ./download.sh && rm -f download.sh
    Name: run
    PrependShell: true
  From:
    Image: nvidia/cuda:8.0-cudnn5-devel
  Name: dependencies
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-cudnn5-devel AS dependencies
- As: build
  BaseName: dependencies
  Commands:
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /project
  - Name: workdir
    Path: /project
  - CmdLine:
    - bash build.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -v -p /tmp/deploy                                                && mkdir
      -v -p /tmp/deploy/opt/is                                        && libs=`find
      build/ -type f -name '*.bin' -exec ldd {} \;               | cut -d '(' -f 1
      | cut -d '>' -f 2 | sort | uniq`                       && for lib in $libs;
      do cp --verbose --parents $lib /tmp/deploy; done    && cp --verbose `find build/
      -type f -name '*.bin'` /tmp/deploy/opt/is   && cp --verbose etc/conf/options.json
      /tmp/deploy/opt/is                 && cp --verbose etc/docker/entrypoint /tmp/deploy                        &&
      cp --verbose etc/dataset/download.sh /tmp/deploy                      && cd
      /tmp/deploy                                                        && ./download.sh                                                         &&
      rm -f download.sh                                                     && cd
      /                                                                  && rm -rf
      /project
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: dependencies
  Name: build
  Platform: ""
  SourceCode: FROM dependencies as build
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/nvidia/lib:/usr/local/nvidia/lib64
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - Key: LIBRARY_PATH
      Value: /usr/local/cuda/lib64/stubs
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: compute,utility
    Name: env
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /tmp/deploy
    - /
  - Name: workdir
    Path: /opt/is
  - CmdLine:
    - /entrypoint
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
