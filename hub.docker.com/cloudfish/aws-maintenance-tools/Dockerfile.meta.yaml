MetaArgs: null
Stages:
- BaseName: ubuntu:latest
  Commands:
  - CmdLine:
    - apt-get -y update && apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget git gcc make bzip2 unzip build-essential curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y vim
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O direnv https://github.com/direnv/direnv/releases/download/v2.13.1/direnv.linux-amd64
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x direnv && mv direnv /usr/local/bin/ && echo 'eval "$(direnv hook bash)"'
      >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libssl-dev libreadline-dev zlib1g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone git://github.com/sstephenson/rbenv.git .rbenv
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc && echo 'eval "$(rbenv
      init -)"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$HOME/.rbenv/bin:$PATH"'
    Name: env
  - CmdLine:
    - rbenv install 2.4.2 ; rbenv global 2.4.2
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''gem: --no-rdoc --no-ri'' >> /.gemrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - ~/.rbenv/shims/gem install piculet
    Name: run
    PrependShell: true
  - CmdLine:
    - ~/.rbenv/shims/gem install awspec
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-setuptools python2.7-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "complete -C '/usr/local/bin/aws_completer' aws" >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ~/.packer && wget https://releases.hashicorp.com/packer/1.1.2/packer_1.1.2_linux_amd64.zip
      && unzip packer_1.1.2_linux_amd64.zip && mv packer ~/.packer/
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="$PATH:$HOME/.packer"' >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: USER
      Value: root
    Name: env
  - CmdLine:
    - apt-get -y install apt-transport-https nodejs npm
    Name: run
    PrependShell: true
  - CmdLine:
    - npm cache clean
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install n -g
    Name: run
    PrependShell: true
  - CmdLine:
    - n stable
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/local/bin/node /usr/bin/node
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y install yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awslogs
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:latest
