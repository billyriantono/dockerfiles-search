{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "node:12-slim",
      "SourceCode": "FROM node:12-slim as base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "node:12-slim"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\";     export TINI_VERSION='0.18.0'; \twget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch\"; \twget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5; \tgpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini; \tgpgconf --kill all; \trm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc; \tchmod +x /usr/local/bin/tini;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "CmdLine": [
            "mkdir /app \u0026\u0026 chown -R node:node /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Name": "user",
          "User": "node"
        },
        {
          "Chown": "node:node",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package*.json",
            "./"
          ]
        },
        {
          "CmdLine": [
            "npm install --no-optional --silent \u0026\u0026 npm cache clean --force \u003e \"/dev/null\" 2\u003e\u00261"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "dev",
      "BaseName": "base",
      "SourceCode": "FROM base as dev",
      "Platform": "",
      "As": "dev",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "development"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/app/node_modules/.bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install --only=development --no-optional --silent \u0026\u0026 npm cache clean --force \u003e \"/dev/null\" 2\u003e\u00261"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "nodemon",
            "server.js",
            "--inspect=0.0.0.0:9229"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    },
    {
      "Name": "source",
      "BaseName": "base",
      "SourceCode": "FROM base as source",
      "Platform": "",
      "As": "source",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Chown": "node:node",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        }
      ]
    },
    {
      "Name": "test",
      "BaseName": "source",
      "SourceCode": "FROM source as test",
      "Platform": "",
      "As": "test",
      "From": {
        "Stage": {
          "Named": "source",
          "Index": 2
        }
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODE_ENV",
              "Value": "development"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/app/node_modules/.bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "dev",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/node_modules",
            "/app/node_modules"
          ]
        },
        {
          "CmdLine": [
            "eslint ."
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "audit",
      "BaseName": "test",
      "SourceCode": "FROM test as audit",
      "Platform": "",
      "As": "audit",
      "From": {
        "Stage": {
          "Named": "test",
          "Index": 3
        }
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "npm audit --audit-level critical"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "MICROSCANNER_TOKEN",
          "Name": "arg",
          "Value": null
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://get.aquasec.com/microscanner",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /microscanner"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/microscanner $MICROSCANNER_TOKEN --continue-on-failure"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "prod",
      "BaseName": "source",
      "SourceCode": "FROM source as prod",
      "Platform": "",
      "As": "prod",
      "From": {
        "Stage": {
          "Named": "source",
          "Index": 2
        }
      },
      "Commands": [
        {
          "CmdLine": [
            "/usr/local/bin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "node",
            "server.js"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}