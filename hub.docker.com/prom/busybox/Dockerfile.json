{
  "MetaArgs": [
    {
      "Key": "ARCH",
      "DefaultValue": "\"\"",
      "ProvidedValue": null,
      "Value": "\"\""
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "${ARCH}debian:buster-slim",
      "SourceCode": "FROM ${ARCH}debian:buster-slim",
      "Platform": "",
      "From": {
        "Image": "${ARCH}debian:buster-slim"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends       ca-certificates       gcc       netbase     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 mkdir -p rootfs/lib     \u0026\u0026 set --         /etc/nsswitch.conf         /etc/ssl/certs/ca-certificates.crt         /usr/share/zoneinfo         /etc/services         /lib/\"$(gcc -print-multiarch)\"/libpthread.so.*     \u0026\u0026 while [ \"$#\" -gt 0  ]; do         f=\"$1\"; shift;         fn=\"$(basename \"$f\")\";         if [ -e \"rootfs/lib/$fn\" ]; then continue; fi;         if [ \"${f#/lib/}\" != \"$f\" ]; then             ln -vL \"$f\" \"rootfs/lib/$fn\";         else             d=\"$(dirname $f)\"             \u0026\u0026 mkdir -p \"rootfs/${d#/}\"             \u0026\u0026 cp -av \"$f\" \"rootfs/${f#/}\";         fi;     done"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "${ARCH}busybox:glibc",
      "SourceCode": "FROM        ${ARCH}busybox:glibc",
      "Platform": "",
      "From": {
        "Image": "${ARCH}busybox:glibc"
      },
      "Commands": [
        {
          "Maintainer": "The Prometheus Authors \u003cprometheus-developers@googlegroups.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/rootfs",
            "/"
          ]
        }
      ]
    }
  ]
}