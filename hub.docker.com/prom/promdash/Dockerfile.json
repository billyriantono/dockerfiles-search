{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.1",
      "SourceCode": "FROM       alpine:3.1",
      "Platform": "",
      "From": {
        "Image": "alpine:3.1"
      },
      "Commands": [
        {
          "Maintainer": "Prometheus Team \u003cprometheus-developers@googlegroups.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "CmdLine": [
            "./run"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "./bin/thin",
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Env": [
            {
              "Key": "RAILS_ENV",
              "Value": "production"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/usr/src/app"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "CmdLine": [
            "apk add --update -t build-deps openssl ca-certificates make gcc musl-dev libgcc g++ mysql-dev postgresql-dev sqlite-dev     \u0026\u0026 apk add ruby ruby-dev nodejs tzdata     \u0026\u0026 echo 'gem: --no-rdoc --no-ri' \u003e\u003e \"$HOME/.gemrc\"     \u0026\u0026 cp config/database.yml.example config/database.yml     \u0026\u0026 bin/env gem install bundler --bindir bin/ --no-document     \u0026\u0026 bin/env bin/bundle install --deployment --binstubs --without=\"development test migration\"     \u0026\u0026 rm -rf public/assets/*     \u0026\u0026 bin/env bin/bundle exec rake assets:precompile     \u0026\u0026 apk del --purge build-deps     \u0026\u0026 apk add mysql-libs sqlite-libs libpq     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 printf '#!/bin/sh\\n        [ -z \"$DATABASE_URL\" ] \u0026\u0026 { echo \"DATABASE_URL not set\"; exit 1; }\\n        export DB_HOST=$(echo $DB_PORT_3306_TCP|sed \"s|^tcp://||\")\\n        export DATABASE_URL=$(echo \"$DATABASE_URL\" | sed \"s/\\[HOST\\]/$DB_HOST/\")\\n        exec $@\\n' \u003e run \u0026\u0026 chmod a+x run"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}