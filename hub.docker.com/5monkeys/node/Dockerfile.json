{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "6.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_PREFIX",
              "Value": "/usr/local"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"Installing build dependencies\"   \u0026\u0026 export     SOURCE_BASE_URL=\"https://nodejs.org/dist/v$NODE_VERSION\"     SOURCE_ARCHIVE_NAME=\"node-v$NODE_VERSION.tar.xz\"     SOURCE_SIGN_NAME=\"SHASUMS256.txt.asc\"     BUILD_DIR=\"$HOME/source-node-v$NODE_VERSION\"     RUNTIME_DEPS=\"libstdc++ libssl1.0\"     BUILD_DEPS=\"coreutils gnupg curl tar xz build-base python openssl-dev linux-headers\"   \u0026\u0026 export     SOURCE_ARCHIVE_URL=\"$SOURCE_BASE_URL/$SOURCE_ARCHIVE_NAME\"     SOURCE_SIGN_URL=\"$SOURCE_BASE_URL/$SOURCE_SIGN_NAME\"   \u0026\u0026 echo \"Installing runtime dependencies: '$RUNTIME_DEPS' and build dependencies: '$BUILD_DEPS'\"   \u0026\u0026 apk add --no-cache $RUNTIME_DEPS $BUILD_DEPS   \u0026\u0026 echo \"Downloading and verifying node.js v$NODE_VERSION\"   \u0026\u0026 for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8   ; do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";   done   \u0026\u0026 set -x   \u0026\u0026 curl -SLO $SOURCE_ARCHIVE_URL   \u0026\u0026 curl -SLO $SOURCE_SIGN_URL   \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt $SOURCE_SIGN_NAME   \u0026\u0026 grep \" $SOURCE_ARCHIVE_NAME\\$\" SHASUMS256.txt | sha256sum -c -   \u0026\u0026 set +x   \u0026\u0026 echo \"Building node.js v$NODE_VERSION\"   \u0026\u0026 set -x   \u0026\u0026 mkdir $BUILD_DIR   \u0026\u0026 tar -xJf $SOURCE_ARCHIVE_NAME -C $BUILD_DIR --strip-components=1   \u0026\u0026 rm $SOURCE_ARCHIVE_NAME   \u0026\u0026 cd $BUILD_DIR   \u0026\u0026 ./configure --prefix=$NODE_PREFIX   \u0026\u0026 make -j$(nproc) install   \u0026\u0026 set +x   \u0026\u0026 echo \"Removing build dependencies: '$BUILD_DEPS'\"   \u0026\u0026 apk del $BUILD_DEPS   \u0026\u0026 echo \"Removing build directory\"   \u0026\u0026 rm -r $BUILD_DIR   \u0026\u0026 echo \"Ensure runtime dependencies are still installed\"   \u0026\u0026 apk add --no-cache $NODE_RUNTIME_DEPS   \u0026\u0026 echo \"Done\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "node"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}