MetaArgs: null
Stages:
- BaseName: maven:alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"keveon <keveon@keveon.com>"'
    Name: label
  - Key: VERSION
    Name: arg
    Value: "3.35"
  - Key: user
    Name: arg
    Value: jenkins
  - Key: group
    Name: arg
    Value: jenkins
  - Key: uid
    Name: arg
    Value: "1000"
  - Key: gid
    Name: arg
    Value: "1000"
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: TZ
      Value: Asia/Shanghai
    Name: env
  - Env:
    - Key: JAVA_OPTS
      Value: '" -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
        -XX:MaxRAMFraction=1 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${dumpdr:-/root}
        -Xloggc:${dumpdr:-/root}/gc.log -XX:+PrintGCTimeStamps -Dfile.encoding=utf-8
        -Dsun.jnu.encoding=utf-8 -Duser.timezone=${TZ} -Djava.security.egd=file:/dev/./urandom"'
    Name: env
  - Env:
    - Key: MAVEN_OPTS
      Value: '" -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
        -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true "'
    Name: env
  - Env:
    - Key: MAVEN_CLI_OPTS
      Value: '" --batch-mode --errors --fail-at-end --show-version -Dfile.encoding=UTF-8
        -Ddisable.git-hooks -Dsonar.sourceEncoding=UTF-8 -Dsonar.host.url=http://sonar.thunisoft.com
        -Dsonar.login=1193ca99634421e6656f2444de264d65ec9988e9 "'
    Name: env
  - CmdLine:
    - addgroup -g ${gid} ${group}
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser -h /home/${user} -u ${uid} -G ${group} -D ${user}
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache         bash         procps         git git-lfs         curl
      wget         tar gzip         openssl openssh-client ca-certificates         nodejs
      npm yarn         tzdata &&         cp /usr/share/zoneinfo/${TZ} /etc/localtime
      &&     echo ${TZ} > /etc/timezone &&     rm -f /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - usr/share/maven/conf
    - /usr/share/maven/conf
  - CmdLine:
    - npm config set registry https://registry.npm.taobao.org/ &&     npm config set
      electron_mirror https://npm.taobao.org/mirrors/electron/ &&     npm config set
      phantomjs_cdnurl https://npm.taobao.org/mirrors/phantomjs/ &&     npm config
      set chromedriver_cdnurl https://npm.taobao.org/mirrors/chromedriver/ &&     npm
      config set sass_binary_site https://npm.taobao.org/mirrors/node-sass/ &&     yarn
      config set registry https://registry.npm.taobao.org/ &&     node -v && npm -v
      && yarn -v
    Name: run
    PrependShell: true
  - CmdLine:
    - version=2.30-r0 &&     wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
      &&     wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${version}/glibc-${version}.apk
      &&     apk add --no-cache glibc-${version}.apk &&     rm glibc-${version}.apk
      &&     rm -rf /var/cache/apk/*     unset version
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://get.helm.sh/helm-v3.0.0-linux-amd64.tar.gz | tar xvz &&     mv
      linux-amd64/helm /usr/bin/helm &&     chmod +x /usr/bin/helm &&     rm -rf linux-amd64
      &&     rm -f /var/cache/apk/* &&     helm version --client
    Name: run
    PrependShell: true
  - CmdLine:
    - BASE_URL="https://storage.googleapis.com/kubernetes-release/release" &&     curl
      -L -o /usr/bin/kubectl ${BASE_URL}/$(curl -s ${BASE_URL}/latest.txt)/bin/linux/amd64/kubectl
      &&     chmod +x /usr/bin/kubectl &&     kubectl version --client     unset BASE_URL
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://dl.min.io/client/mc/release/linux-amd64/mc > /usr/bin/mc &&     chmod
      +x /usr/bin/mc &&     mc version
    Name: run
    PrependShell: true
  - Key: AGENT_WORKDIR
    Name: arg
    Value: /home/${user}/agent
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins
    - /usr/bin/jenkins
  - CmdLine:
    - curl --create-dirs -fsSLo         /usr/share/jenkins/agent.jar         https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar   &&
      chmod 755 /usr/share/jenkins   && chmod 644 /usr/share/jenkins/agent.jar   &&
      ln -sf /usr/share/jenkins/agent.jar /usr/share/jenkins/slave.jar   && chmod
      +x /usr/bin/jenkins
    Name: run
    PrependShell: true
  - Env:
    - Key: AGENT_WORKDIR
      Value: ${AGENT_WORKDIR}
    Name: env
  - CmdLine:
    - mkdir -p /home/${user}/.jenkins && mkdir -p ${AGENT_WORKDIR}
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/${user}/.jenkins
  - Name: volume
    Volumes:
    - ${AGENT_WORKDIR}
  - Name: workdir
    Path: /home/${user}
  - CmdLine:
    - /usr/bin/jenkins
    Name: entrypoint
    PrependShell: false
  From:
    Image: maven:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM maven:alpine
