{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "kozhin/node",
      "SourceCode": "FROM kozhin/node",
      "Platform": "",
      "From": {
        "Image": "kozhin/node"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PASSENGER_VERSION",
              "Value": "\"6.0.0\""
            },
            {
              "Key": "NGINX_VERSION",
              "Value": "\"1.15.7\""
            },
            {
              "Key": "NGINX_SRC_PATH",
              "Value": "\"/src/nginx\""
            },
            {
              "Key": "NGINX_PATH",
              "Value": "\"/opt/nginx\""
            },
            {
              "Key": "PATH",
              "Value": "/src/passenger/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "RUBY_LANG=\"ruby ruby-rake ruby-etc ruby-dev\" \u0026\u0026     PACKAGES=\"bash curl pcre procps ca-certificates libstdc++ libffi-dev\" \u0026\u0026     BUILD_PACKAGES=\"linux-headers curl-dev pcre-dev libexecinfo-dev build-base zlib-dev\" \u0026\u0026     apk add --no-cache --update ${RUBY_LANG} ${PACKAGES} ${BUILD_PACKAGES} \u0026\u0026     gem install rack rake --no-document \u0026\u0026     mkdir -p /opt /src \u0026\u0026     cd /src \u0026\u0026     curl -L http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz | tar -xzf - -C /src \u0026\u0026     mv nginx-${NGINX_VERSION} nginx \u0026\u0026     curl -L https://s3.amazonaws.com/phusion-passenger/releases/passenger-${PASSENGER_VERSION}.tar.gz | tar -xzf - -C /src \u0026\u0026     mv passenger-${PASSENGER_VERSION} passenger \u0026\u0026     export EXTRA_PRE_CFLAGS='-O' EXTRA_PRE_CXXFLAGS='-O' EXTRA_LDFLAGS='-lexecinfo' \u0026\u0026     passenger-install-nginx-module --auto         --prefix=${NGINX_PATH}         --nginx-source-dir=${NGINX_SRC_PATH}         --extra-configure-flags=\"        --with-file-aio         --with-http_addition_module         --with-http_auth_request_module         --with-http_dav_module         --with-http_flv_module         --with-http_gunzip_module         --with-http_gzip_static_module         --with-http_mp4_module         --with-http_random_index_module         --with-http_realip_module         --with-http_secure_link_module         --with-http_slice_module         --with-http_ssl_module         --with-http_stub_status_module         --with-http_sub_module         --with-http_v2_module         --with-ipv6         --with-mail         --with-mail_ssl_module         --with-stream         --with-stream_ssl_module         --with-threads\" \u0026\u0026     passenger-config build-native-support \u0026\u0026     ln -s ${NGINX_PATH}/sbin/nginx /usr/sbin/nginx \u0026\u0026     ln -s ${NGINX_PATH} /etc/nginx \u0026\u0026     chmod o+x /root \u0026\u0026     ln -sf /dev/stdout ${NGINX_PATH}/logs/access.log \u0026\u0026     ln -sf /dev/stderr ${NGINX_PATH}/logs/error.log \u0026\u0026     rm -rf /tmp/* \u0026\u0026     mv /src/passenger/src/ruby_supportlib /tmp \u0026\u0026     mv /src/passenger/src/nodejs_supportlib /tmp \u0026\u0026     mv /src/passenger/src/helper-scripts /tmp \u0026\u0026     rm -rf /src/passenger/src/* \u0026\u0026     mv /tmp/* /src/passenger/src/ \u0026\u0026     passenger-config validate-install --auto \u0026\u0026     addgroup -g 9999 app \u0026\u0026     adduser -D -u 9999 -G app app \u0026\u0026     apk del ${BUILD_PACKAGES} \u0026\u0026     rm -rf /var/cache/apk/* /tmp/* /src/nginx /src/passenger/doc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/conf/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}