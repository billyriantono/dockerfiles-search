MetaArgs: null
Stages:
- BaseName: ubuntu:wily-20150829
  Commands:
  - Env:
    - Key: UBUNTU_FLAVOR
      Value: wily
    Name: env
  - CmdLine:
    - echo "deb http://archive.ubuntu.com/ubuntu ${UBUNTU_FLAVOR} main universe\n"
      > /etc/apt/sources.list   && echo "deb http://archive.ubuntu.com/ubuntu ${UBUNTU_FLAVOR}-updates
      main universe\n" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - Maintainer: Leo Gallucci <elgalu3@gmail.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: DEBCONF_NONINTERACTIVE_SEEN
      Value: "true"
    Name: env
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy install     apt-utils     sudo     net-tools     telnet     jq     netcat-openbsd     iputils-ping     unzip     wget     curl     pwgen     bc     grc     moreutils     tree     dbus-x11   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG_WHICH
      Value: en
    Name: env
  - Env:
    - Key: LANG_WHERE
      Value: US
    Name: env
  - Env:
    - Key: ENCODING
      Value: UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: ${LANG_WHICH}_${LANG_WHERE}.${ENCODING}
    Name: env
  - Env:
    - Key: LANG
      Value: ${LANGUAGE}
    Name: env
  - CmdLine:
    - locale-gen ${LANGUAGE}   && dpkg-reconfigure --frontend noninteractive locales   &&
      apt-get update -qqy   && apt-get -qqy install     language-pack-en   && rm -rf
      /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: '"Europe/Berlin"'
    Name: env
  - CmdLine:
    - echo $TZ | tee /etc/timezone   && dpkg-reconfigure --frontend noninteractive
      tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy install     openjdk-8-jre-headless   &&
      sed -i 's/securerandom.source=file:\/dev\/urandom/securerandom.source=file:\/dev\/.\/urandom/g'        /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security   &&
      sed -i 's/securerandom.source=file:\/dev\/random/securerandom.source=file:\/dev\/.\/urandom/g'        /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy install     fonts-ipafont-gothic     xfonts-100dpi     xfonts-75dpi     xfonts-cyrillic     xfonts-scalable     ttf-ubuntu-font-family     libfreetype6     libfontconfig   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy install     openbox obconf menu   && rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy install     fluxbox   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: NORMAL_USER
      Value: application
    Name: env
  - Env:
    - Key: NORMAL_GROUP
      Value: ${NORMAL_USER}
    Name: env
  - Env:
    - Key: NORMAL_USER_UID
      Value: "998"
    Name: env
  - Env:
    - Key: NORMAL_USER_GID
      Value: "997"
    Name: env
  - CmdLine:
    - 'groupadd -g ${NORMAL_USER_GID} ${NORMAL_GROUP}   && useradd ${NORMAL_USER}
      --uid ${NORMAL_USER_UID}          --shell /bin/bash  --gid ${NORMAL_USER_GID}          --create-home   &&
      usermod -a -G sudo ${NORMAL_USER}   && gpasswd -a ${NORMAL_USER} video   &&
      echo ''ALL ALL = (ALL) NOPASSWD: ALL'' >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Env:
    - Key: NORMAL_USER_HOME
      Value: /home/${NORMAL_USER}
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy install     x11vnc     pyvnc2swf     xvfb     xorg     xserver-xorg-video-dummy   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: RUN_DIR
      Value: /var/run/sele
    Name: env
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy install     openssh-server   && echo "PidFile
      ${RUN_DIR}/sshd.pid" >> /etc/ssh/sshd_config   && echo "X11Forwarding yes" >>
      /etc/ssh/sshd_config   && echo "GatewayPorts yes"  >> /etc/ssh/sshd_config   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${NORMAL_USER_HOME}/tmp && cd ${NORMAL_USER_HOME}/tmp   && export NOVNC_SHA="8f3c0f6b9b5e5c23a7dc7e90bd22901017ab4fc7"   &&
      wget --no-verbose -O noVNC.zip       "https://github.com/kanaka/noVNC/archive/${NOVNC_SHA}.zip"   &&
      unzip -x noVNC.zip   && mv noVNC-${NOVNC_SHA}        ${NORMAL_USER_HOME}/noVNC   &&
      export WEBSOCKIFY_SHA="558a6439f14b0d85a31145541745e25c255d576b"   && wget --no-verbose
      -O websockify.zip       "https://github.com/kanaka/websockify/archive/${WEBSOCKIFY_SHA}.zip"   &&
      unzip -x websockify.zip   && mv websockify-${WEBSOCKIFY_SHA}        ${NORMAL_USER_HOME}/noVNC/utils/websockify
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy install     libx264-dev     libvorbis-dev     libx11-dev     libav-tools   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy install     python2.7     python-pip     python2.7-dev     python-openssl     libssl-dev
      libffi-dev   && easy_install --upgrade pip   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CPU_ARCH
      Value: "64"
    Name: env
  - Env:
    - Key: SEL_HOME
      Value: ${NORMAL_USER_HOME}/selenium
    Name: env
  - Env:
    - Key: FF_LANG
      Value: '"en-US"'
    Name: env
  - CmdLine:
    - mkdir -p ${NORMAL_USER_HOME}/firefox-src   && mkdir -p ${SEL_HOME}   && pip
      install mozlog==2.10   && export MOZ_DOWN_SHA="7f2680cd75fbd3937630d896aefec3f8a061c10b"   &&
      pip install       "https://github.com/elgalu/mozdownload/zipball/${MOZ_DOWN_SHA}"   &&
      pip install mozInstall==1.12   && echo ""
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade       "https://github.com/Supervisor/supervisor/zipball/304b4f388d3e3f"   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: FIREFOX_VERSIONS1
      Value: '"24.0, 25.0.1, 26.0, 27.0.1, 28.0, 29.0.1"'
    Name: env
  - CmdLine:
    - cd ${NORMAL_USER_HOME}/firefox-src   && for FF_VER in $(echo ${FIREFOX_VERSIONS1}
      | tr "," "\n"); do          mozdownload --application=firefox            --locale=${FF_LANG}
      --retry-attempts=1            --platform=linux64 --log-level=WARN --version=${FF_VER}       &&
      export FIREFOX_DEST="${SEL_HOME}/firefox-${FF_VER}"       && mkdir -p ${FIREFOX_DEST}       &&
      mozinstall --app=firefox           firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2           --destination=${FIREFOX_DEST}       &&
      rm firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2      ;done
    Name: run
    PrependShell: true
  - Env:
    - Key: FIREFOX_VERSIONS2
      Value: '"30.0, 31.0, 32.0.3"'
    Name: env
  - CmdLine:
    - cd ${NORMAL_USER_HOME}/firefox-src   && for FF_VER in $(echo ${FIREFOX_VERSIONS2}
      | tr "," "\n"); do          mozdownload --application=firefox            --locale=${FF_LANG}
      --retry-attempts=1            --platform=linux64 --log-level=WARN --version=${FF_VER}       &&
      export FIREFOX_DEST="${SEL_HOME}/firefox-${FF_VER}"       && mkdir -p ${FIREFOX_DEST}       &&
      mozinstall --app=firefox           firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2           --destination=${FIREFOX_DEST}       &&
      rm firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2      ;done
    Name: run
    PrependShell: true
  - Env:
    - Key: FIREFOX_VERSIONS2
      Value: '"33.0.3, 34.0.5, 35.0.1"'
    Name: env
  - CmdLine:
    - cd ${NORMAL_USER_HOME}/firefox-src   && for FF_VER in $(echo ${FIREFOX_VERSIONS2}
      | tr "," "\n"); do          mozdownload --application=firefox            --locale=${FF_LANG}
      --retry-attempts=1            --platform=linux64 --log-level=WARN --version=${FF_VER}       &&
      export FIREFOX_DEST="${SEL_HOME}/firefox-${FF_VER}"       && mkdir -p ${FIREFOX_DEST}       &&
      mozinstall --app=firefox           firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2           --destination=${FIREFOX_DEST}       &&
      rm firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2      ;done
    Name: run
    PrependShell: true
  - Env:
    - Key: FIREFOX_VERSIONS3
      Value: '"36.0.4, 37.0.2, 38.0.6"'
    Name: env
  - CmdLine:
    - cd ${NORMAL_USER_HOME}/firefox-src   && for FF_VER in $(echo ${FIREFOX_VERSIONS3}
      | tr "," "\n"); do          mozdownload --application=firefox            --locale=${FF_LANG}
      --retry-attempts=1            --platform=linux64 --log-level=WARN --version=${FF_VER}       &&
      export FIREFOX_DEST="${SEL_HOME}/firefox-${FF_VER}"       && mkdir -p ${FIREFOX_DEST}       &&
      mozinstall --app=firefox           firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2           --destination=${FIREFOX_DEST}       &&
      rm firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2      ;done
    Name: run
    PrependShell: true
  - Env:
    - Key: FIREFOX_VERSIONS3
      Value: '"39.0.3"'
    Name: env
  - CmdLine:
    - cd ${NORMAL_USER_HOME}/firefox-src   && for FF_VER in $(echo ${FIREFOX_VERSIONS3}
      | tr "," "\n"); do          mozdownload --application=firefox            --locale=${FF_LANG}
      --retry-attempts=1            --platform=linux64 --log-level=WARN --version=${FF_VER}       &&
      export FIREFOX_DEST="${SEL_HOME}/firefox-${FF_VER}"       && mkdir -p ${FIREFOX_DEST}       &&
      mozinstall --app=firefox           firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2           --destination=${FIREFOX_DEST}       &&
      rm firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2      ;done
    Name: run
    PrependShell: true
  - Env:
    - Key: SAUCE_CONN_VER
      Value: '"sc-4.3.11-linux"'
    - Key: SAUCE_CONN_DOWN_URL
      Value: '"https://saucelabs.com/downloads"'
    Name: env
  - CmdLine:
    - cd /tmp   && wget --no-verbose "${SAUCE_CONN_DOWN_URL}/${SAUCE_CONN_VER}.tar.gz"   &&
      tar -zxf ${SAUCE_CONN_VER}.tar.gz   && rm -rf /usr/local/${SAUCE_CONN_VER}   &&
      mv ${SAUCE_CONN_VER} /usr/local   && ln -sf /usr/local/${SAUCE_CONN_VER}/bin/sc
      /usr/local/bin/sc   && which sc
    Name: run
    PrependShell: true
  - Env:
    - Key: BSTACK_TUNNEL_URL
      Value: '"https://www.browserstack.com/browserstack-local"'
    - Key: BSTACK_TUNNEL_ZIP
      Value: '"BrowserStackLocal-linux-x64.zip"'
    Name: env
  - CmdLine:
    - cd /tmp   && wget --no-verbose "${BSTACK_TUNNEL_URL}/${BSTACK_TUNNEL_ZIP}"   &&
      unzip ${BSTACK_TUNNEL_ZIP}   && chmod 755 BrowserStackLocal   && rm ${BSTACK_TUNNEL_ZIP}   &&
      mv BrowserStackLocal /usr/local/bin   && which BrowserStackLocal
    Name: run
    PrependShell: true
  - Env:
    - Key: FIREFOX_VERSIONS3
      Value: '"40.0.3"'
    Name: env
  - CmdLine:
    - cd ${NORMAL_USER_HOME}/firefox-src   && for FF_VER in $(echo ${FIREFOX_VERSIONS3}
      | tr "," "\n"); do          mozdownload --application=firefox            --locale=${FF_LANG}
      --retry-attempts=1            --platform=linux64 --log-level=WARN --version=${FF_VER}       &&
      export FIREFOX_DEST="${SEL_HOME}/firefox-${FF_VER}"       && mkdir -p ${FIREFOX_DEST}       &&
      mozinstall --app=firefox           firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2           --destination=${FIREFOX_DEST}       &&
      rm firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2      ;done
    Name: run
    PrependShell: true
  - Env:
    - Key: FIREFOX_VERSIONS3
      Value: '"41.0"'
    Name: env
  - CmdLine:
    - cd ${NORMAL_USER_HOME}/firefox-src   && for FF_VER in $(echo ${FIREFOX_VERSIONS3}
      | tr "," "\n"); do          mozdownload --application=firefox            --locale=${FF_LANG}
      --retry-attempts=1            --platform=linux64 --log-level=WARN --version=${FF_VER}       &&
      export FIREFOX_DEST="${SEL_HOME}/firefox-${FF_VER}"       && mkdir -p ${FIREFOX_DEST}       &&
      mozinstall --app=firefox           firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2           --destination=${FIREFOX_DEST}       &&
      rm firefox-${FF_VER}.${FF_LANG}.linux64.tar.bz2      ;done
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ${NORMAL_USER}:${NORMAL_GROUP} ${SEL_HOME}   && chown -R ${NORMAL_USER}:${NORMAL_GROUP}
      ${NORMAL_USER_HOME}
    Name: run
    PrependShell: true
  - Name: user
    User: ${NORMAL_USER}
  - Env:
    - Key: SEL_MAJOR_MINOR_VER
      Value: "2.47"
    Name: env
  - Env:
    - Key: SEL_PATCH_LEVEL_VER
      Value: "1"
    Name: env
  - CmdLine:
    - mkdir -p ${SEL_HOME}   && export SELBASE="http://selenium-release.storage.googleapis.com"   &&
      export SELPATH="${SEL_MAJOR_MINOR_VER}/selenium-server-standalone-${SEL_MAJOR_MINOR_VER}.${SEL_PATCH_LEVEL_VER}.jar"   &&
      wget --no-verbose ${SELBASE}/${SELPATH}       -O ${SEL_HOME}/selenium-server-standalone.jar
    Name: run
    PrependShell: true
  - Env:
    - Key: CHROME_DRIVER_FILE
      Value: '"chromedriver_linux${CPU_ARCH}.zip"'
    Name: env
  - Env:
    - Key: CHROME_DRIVER_BASE
      Value: chromedriver.storage.googleapis.com
    Name: env
  - CmdLine:
    - mkdir -p ${NORMAL_USER_HOME}/tmp && cd ${NORMAL_USER_HOME}/tmp   && CHROME_DRIVER_VERSION="2.19"   &&
      CHROME_DRIVER_URL="${CHROME_DRIVER_BASE}/${CHROME_DRIVER_VERSION}/${CHROME_DRIVER_FILE}"   &&
      wget --no-verbose -O chromedriver_linux${CPU_ARCH}.zip ${CHROME_DRIVER_URL}   &&
      cd ${SEL_HOME}   && rm -rf chromedriver   && unzip ${NORMAL_USER_HOME}/tmp/chromedriver_linux${CPU_ARCH}.zip   &&
      rm ${NORMAL_USER_HOME}/tmp/chromedriver_linux${CPU_ARCH}.zip   && mv ${SEL_HOME}/chromedriver         ${SEL_HOME}/chromedriver-$CHROME_DRIVER_VERSION   &&
      chmod 755 ${SEL_HOME}/chromedriver-$CHROME_DRIVER_VERSION   && ln -s ${SEL_HOME}/chromedriver-${CHROME_DRIVER_VERSION}            ${SEL_HOME}/chromedriver
    Name: run
    PrependShell: true
  - CmdLine:
    - latest_chrome_version_trigger="latest"   && mkdir -p ${NORMAL_USER_HOME}/chrome-deb   &&
      export CHROME_URL="https://dl.google.com/linux/direct"   && wget --no-verbose
      -O     ${NORMAL_USER_HOME}/chrome-deb/google-chrome-stable_current_amd64.deb     "${CHROME_URL}/google-chrome-stable_current_amd64.deb"   &&
      wget --no-verbose -O     ${NORMAL_USER_HOME}/chrome-deb/google-chrome-beta_current_amd64.deb     "${CHROME_URL}/google-chrome-beta_current_amd64.deb"   &&
      wget --no-verbose -O     ${NORMAL_USER_HOME}/chrome-deb/google-chrome-unstable_current_amd64.deb     "${CHROME_URL}/google-chrome-unstable_current_amd64.deb"
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Env:
    - Key: CHROME_BASE_DEB_PATH
      Value: '"${NORMAL_USER_HOME}/chrome-deb/google-chrome"'
    Name: env
  - Env:
    - Key: GREP_ONLY_NUMS_VER
      Value: '"[0-9.]{2,20}"'
    Name: env
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy install     gdebi   && gdebi --non-interactive
      ${CHROME_BASE_DEB_PATH}-stable_current_amd64.deb   && gdebi --non-interactive
      ${CHROME_BASE_DEB_PATH}-beta_current_amd64.deb   && gdebi --non-interactive
      ${CHROME_BASE_DEB_PATH}-unstable_current_amd64.deb   && export CH_STABLE_VER=$(/usr/bin/google-chrome-stable
      --version | grep -iEo "${GREP_ONLY_NUMS_VER}")   && export CH_BETA_VER=$(/usr/bin/google-chrome-beta
      --version | grep -iEo "${GREP_ONLY_NUMS_VER}")   && export CH_UNSTABLE_VER=$(/usr/bin/google-chrome-unstable
      --version | grep -iEo "${GREP_ONLY_NUMS_VER}")   && mv ${CHROME_BASE_DEB_PATH}-stable_current_amd64.deb      ${CHROME_BASE_DEB_PATH}-stable_${CH_STABLE_VER}_amd64.deb   &&
      mv ${CHROME_BASE_DEB_PATH}-beta_current_amd64.deb      ${CHROME_BASE_DEB_PATH}-beta_${CH_BETA_VER}_amd64.deb   &&
      mv ${CHROME_BASE_DEB_PATH}-unstable_current_amd64.deb      ${CHROME_BASE_DEB_PATH}-unstable_${CH_UNSTABLE_VER}_amd64.deb   &&
      ln -s ${SEL_HOME}/chromedriver /usr/bin   && chown -R ${NORMAL_USER}:${NORMAL_GROUP}
      ${SEL_HOME}   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - supervisor/etc/supervisor/supervisord.conf
    - /etc/supervisor/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - '**/etc/supervisor/conf.d/*'
    - /etc/supervisor/conf.d/
  - CmdLine:
    - apt-get update -qqy   && apt-get -qqy install     haveged rng-tools   && service
      haveged start   && update-rc.d haveged defaults   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: ${NORMAL_USER}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./dns/etc/hosts
    - /tmp/hosts
  - Env:
    - Key: FIREFOX_VERSIONS
      Value: '"${FIREFOX_VERSIONS1}, ${FIREFOX_VERSIONS2}, ${FIREFOX_VERSIONS3}"'
    - Key: FIREFOX_VERSION
      Value: '"41.0"'
    - Key: CHROME_FLAVOR
      Value: '"stable"'
    - Key: USER
      Value: '"${NORMAL_USER}"'
    - Key: HOME
      Value: '"${NORMAL_USER_HOME}"'
    - Key: VNC_STORE_PWD_FILE
      Value: '"${NORMAL_USER_HOME}/.vnc/passwd"'
    - Key: BIN_UTILS
      Value: '"/bin-utils"'
    - Key: MEM_JAVA_PERCENT
      Value: "80"
    - Key: WAIT_TIMEOUT
      Value: '"5s"'
    - Key: SCREEN_WIDTH
      Value: "1900"
    - Key: SCREEN_HEIGHT
      Value: "1480"
    - Key: SCREEN_MAIN_DEPTH
      Value: "24"
    - Key: SCREEN_SUB_DEPTH
      Value: "32"
    - Key: DISP_N
      Value: "10"
    - Key: SCREEN_NUM
      Value: "0"
    - Key: SELENIUM_HUB_PORT
      Value: "24444"
    - Key: SELENIUM_HUB_HOST
      Value: '"127.0.0.1"'
    - Key: SELENIUM_NODE_HOST
      Value: '"127.0.0.1"'
    - Key: SELENIUM_NODE_CH_PORT
      Value: "25550"
    - Key: SELENIUM_NODE_FF_PORT
      Value: "25551"
    - Key: SELENIUM_HUB_PARAMS
      Value: '""'
    - Key: SELENIUM_NODE_PARAMS
      Value: '""'
    - Key: MAX_INSTANCES
      Value: "1"
    - Key: MAX_SESSIONS
      Value: "1"
    - Key: SEL_RELEASE_TIMEOUT_SECS
      Value: "19000"
    - Key: SEL_BROWSER_TIMEOUT_SECS
      Value: "16000"
    - Key: SEL_CLEANUPCYCLE_MS
      Value: "90000"
    - Key: SEL_NODEPOLLING_MS
      Value: "80000"
    - Key: VNC_PORT
      Value: "25900"
    - Key: NOVNC_PORT
      Value: "26080"
    - Key: NOVNC
      Value: "false"
    - Key: SSHD_PORT
      Value: "22222"
    - Key: SUPERVISOR_HTTP_PORT
      Value: "29001"
    - Key: SUPERVISOR_HTTP_USERNAME
      Value: supervisorweb
    - Key: SUPERVISOR_HTTP_PASSWORD
      Value: somehttpbasicauthpwd
    - Key: SUPERVISOR_REQUIRED_SRV_LIST
      Value: '"vnc|sshd|xmanager|xvfb"'
    - Key: SUPERVISOR_NOT_REQUIRED_SRV_LIST1
      Value: '"ignoreMe"'
    - Key: SUPERVISOR_NOT_REQUIRED_SRV_LIST2
      Value: '"ignoreMe"'
    - Key: SLEEP_SECS_AFTER_KILLING_SUPERVISORD
      Value: "3"
    - Key: SUPERVISOR_STOPWAITSECS
      Value: "20"
    - Key: LOG_LEVEL
      Value: info
    - Key: DISABLE_ROLLBACK
      Value: "false"
    - Key: LOGFILE_MAXBYTES
      Value: 10MB
    - Key: LOGFILE_BACKUPS
      Value: "5"
    - Key: LOGS_DIR
      Value: '"/var/log/sele"'
    - Key: VNC2SWF_ENCODING
      Value: swf5
    - Key: VNC2SWF_FRAMERATE
      Value: "25"
    - Key: FFMPEG_FRAME_RATE
      Value: "15"
    - Key: FFMPEG_CODEC_ARGS
      Value: '"-vcodec libx264 -crf 0 -preset ultrafast"'
    - Key: VIDEO
      Value: "false"
    - Key: GRID
      Value: "true"
    - Key: CHROME
      Value: "true"
    - Key: FIREFOX
      Value: "true"
    - Key: VIDEO_FILE_EXTENSION
      Value: '"mkv"'
    - Key: VIDEO_FILE_NAME
      Value: '"test"'
    - Key: VIDEO_FLUSH_SECS
      Value: '"0.5"'
    - Key: VIDEO_CHUNK_SECS
      Value: '"00:05:00"'
    - Key: VIDEO_CHUNKS_MAX
      Value: "999"
    - Key: VIDEOS_DIR
      Value: '"${NORMAL_USER_HOME}/videos"'
    - Key: XMANAGER
      Value: '"fluxbox"'
    - Key: SAUCE_TUNNEL
      Value: '"false"'
    - Key: SAUCE_USER_NAME
      Value: '""'
    - Key: SAUCE_API_KEY
      Value: '""'
    - Key: SAUCE_TUNNEL_DOCTOR_TEST
      Value: '"false"'
    - Key: SAUCE_TUNNEL_ID
      Value: '"docker-selenium"'
    - Key: SAUCE_TUNNEL_READY_FILE
      Value: '"/tmp/sauce-connect-ready"'
    - Key: SAUCE_LOCAL_SEL_PORT
      Value: '"4445"'
    - Key: SAUCE_WAIT_TIMEOUT
      Value: '"140s"'
    - Key: SAUCE_WAIT_RETRY_TIMEOUT
      Value: '"290s"'
    - Key: SAUCE_TUNNEL_MAX_RETRY_ATTEMPTS
      Value: '"1"'
    - Key: BSTACK_TUNNEL
      Value: '"false"'
    - Key: BSTACK_ACCESS_KEY
      Value: '""'
    - Key: BSTACK_TUNNEL_ID
      Value: '"docker-selenium"'
    - Key: BSTACK_TUNNEL_OPTS
      Value: '"-skipCheck -v -forcelocal"'
    - Key: BSTACK_WAIT_TIMEOUT
      Value: '"100s"'
    - Key: BSTACK_WAIT_RETRY_TIMEOUT
      Value: '"220s"'
    - Key: TAIL_LOG_LINES
      Value: '"15"'
    - Key: SHM_TRY_MOUNT_UNMOUNT
      Value: '"false"'
    - Key: SHM_SIZE
      Value: '"512M"'
    - Key: ETHERNET_DEVICE_NAME
      Value: '"eth0"'
    - Key: DOCKER_SOCK
      Value: '"/var/run/docker.sock"'
    Name: env
  - Name: expose
    Ports:
    - ${SSHD_PORT}
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bin/*
    - ${BIN_UTILS}/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - '**/bin/*'
    - ${BIN_UTILS}/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - utils/bin/selenium-grep.sh
    - /usr/bin/errors
  - Chown: ""
    Name: add
    SourcesAndDest:
    - xterm/bin/timeout-wait-xterm.sh
    - /usr/bin/wait_all_done
  - Chown: ""
    Name: add
    SourcesAndDest:
    - host-scripts/*
    - /host-scripts/
  - CmdLine:
    - mkdir -p ${NORMAL_USER_HOME}/.vnc   && mkdir -p ${VIDEOS_DIR}   && sudo ln -s
      ${VIDEOS_DIR} /   && mkdir -p ${NORMAL_USER_HOME}/.ssh   && touch ${NORMAL_USER_HOME}/.ssh/authorized_keys   &&
      chmod 700 ${NORMAL_USER_HOME}/.ssh   && chmod 600 ${NORMAL_USER_HOME}/.ssh/authorized_keys   &&
      sudo mkdir -p ${LOGS_DIR}   && sudo mkdir -p ${RUN_DIR}   && sudo chown -R ${NORMAL_USER}:${NORMAL_GROUP}
      ${SEL_HOME}   && sudo chown -R ${NORMAL_USER}:${NORMAL_GROUP} ${NORMAL_USER_HOME}   &&
      sudo chown -R ${NORMAL_USER}:${NORMAL_GROUP} ${LOGS_DIR}   && sudo chown -R
      ${NORMAL_USER}:${NORMAL_GROUP} ${RUN_DIR}   && sudo chown -R ${NORMAL_USER}:${NORMAL_GROUP}
      /etc/supervisor   && sudo mkdir -p /tmp/.X11-unix /tmp/.ICE-unix   && sudo chmod
      1777 /tmp/.X11-unix /tmp/.ICE-unix   && sudo mkdir -p /var/run/sshd   && sudo
      chmod 744 /var/run/sshd   && echo ""
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scm-source.json
    - /
  - CmdLine:
    - /bin-utils/entry.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:wily-20150829
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:wily-20150829
