{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "rickyking/ds-xgboost",
      "SourceCode": "FROM rickyking/ds-xgboost",
      "Platform": "",
      "From": {
        "Image": "rickyking/ds-xgboost"
      },
      "Commands": [
        {
          "Maintainer": "Lucian Moldovanu \u003clucian.moldovanu@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get install -y wget bzip2 ca-certificates     libglib2.0-0 libxext6 libsm6 libxrender1     mercurial subversion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "echo 'export PATH=/opt/conda/bin:$PATH' \u003e /etc/profile.d/conda.sh \u0026\u0026     wget --quiet https://repo.continuum.io/archive/Anaconda3-4.3.0-Linux-x86_64.sh \u0026\u0026     /bin/bash /Anaconda3-4.3.0-Linux-x86_64.sh -b -p /opt/conda \u0026\u0026     rm /Anaconda3-4.3.0-Linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "conda install -y -c https://conda.anaconda.org/anaconda setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/xgboost/python-package/ \u0026\u0026 python setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://cran.rstudio.com/bin/linux/ubuntu trusty/\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     r-base     libzmq3-dev     libxml2-dev     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/rpackages.R",
            "/sbin/rpackages.R"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /sbin/rpackages.R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/rpackages.R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p -m 700 /root/.jupyter/ \u0026\u0026     echo \"c.NotebookApp.ip = '*'\" \u003e\u003e /root/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/notebooks"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/notebooks"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}