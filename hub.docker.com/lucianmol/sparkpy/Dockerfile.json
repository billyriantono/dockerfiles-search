{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "launcher.sh",
            "/usr/bin/launcher.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/bin/launcher.sh                                                               \u0026\u0026     export DEBIAN_FRONTEND=noninteractive                                                       \u0026\u0026     apt-get -qq update                                                                          \u0026\u0026     apt-get -qq -y install wget curl                                                   git                                                         vim jq mc                                                   git g++ make python-setuptools                              default-jdk                                                          \u0026\u0026     echo 'Downloading Anaconda ...'                                                             \u0026\u0026     wget -qO /opt/Anaconda.sh https://repo.continuum.io/archive/Anaconda2-4.0.0-Linux-x86_64.sh \u0026\u0026     cd /opt                                                                                     \u0026\u0026     bash Anaconda.sh -b -p /opt/anaconda                                                        \u0026\u0026     rm Anaconda.sh                                                                              \u0026\u0026     echo 'Installing seaborn (Python module) ...'                                               \u0026\u0026     PATH=/opt/anaconda/bin:$PATH pip install seaborn                                            \u0026\u0026     CLOSER=\"https://www.apache.org/dyn/closer.cgi?as_json=1\"                                    \u0026\u0026     MIRROR=$(curl --stderr /dev/null ${CLOSER} | jq -r '.preferred')                            \u0026\u0026     echo 'Downloading Spark ...'                                                                \u0026\u0026     wget -qO /opt/spark.tgz                                                                            \t${MIRROR}spark/spark-1.6.1/spark-1.6.1-bin-hadoop2.6.tgz                           \t\t\u0026\u0026     echo 'Extracting Spark ...'                                                                 \u0026\u0026     tar -xf /opt/spark.tgz -C /opt                                                              \u0026\u0026     rm /opt/spark.tgz                                                                           \u0026\u0026     mv /opt/spark-* /opt/spark                                                                  \u0026\u0026     cd /opt/spark/conf                                                                          \u0026\u0026     sed 's/INFO/ERROR/' log4j.properties.template \u003e log4j.properties                            \u0026\u0026     echo $(hostname) \u003e slaves                                                                   \u0026\u0026     cd /opt                                                                                     \u0026\u0026     git clone --recursive https://github.com/dmlc/xgboost                                       \u0026\u0026     cd xgboost; make -j4                                                                        \u0026\u0026     echo 'Building container, this may take a while ...'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/opt/spark"
            },
            {
              "Key": "PYSPARK_PYTHON",
              "Value": "/opt/anaconda/bin/python"
            },
            {
              "Key": "IPYTHON_OPTS",
              "Value": "'notebook --no-browser --ip=0.0.0.0'"
            },
            {
              "Key": "PATH",
              "Value": "/opt/anaconda/bin:/opt/spark/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'Installing additional packages for Python ...'    \u0026\u0026     pip install folium xgboost"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'Installing R and R-kernel for Jupyter ...'        \u0026\u0026     conda install -c r r-essentials r-irkernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash",
            "-c",
            "/usr/bin/launcher.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}