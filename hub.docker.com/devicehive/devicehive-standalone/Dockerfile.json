{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DH_VERSION",
              "Value": "\"2.0.11\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8 \u0026\u0026     echo \"deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main\" \u003e /etc/apt/sources.list.d/pgdg.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y python-software-properties software-properties-common unzip curl openssh-server     supervisor psmisc procps  postgresql-9.4 postgresql-client-9.4 postgresql-contrib-9.4 \u0026\u0026     /bin/echo debconf shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \u0026\u0026     /bin/echo debconf shared/accepted-oracle-license-v1-1 seen true | /usr/bin/debconf-set-selections \u0026\u0026     add-apt-repository ppa:webupd8team/java  \u0026\u0026     apt-get update  \u0026\u0026     apt-get install -y oracle-java8-installer \u0026\u0026     apt-get clean autoclean \u0026\u0026     apt-get autoremove -y \u0026\u0026     rm -rf /var/lib/{apt,dpkg,cache,log}/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "postgres"
        },
        {
          "CmdLine": [
            "/etc/init.d/postgresql start \u0026\u0026    psql --command \"CREATE USER dhadmin WITH SUPERUSER PASSWORD 'dhadmin_#911';\" \u0026\u0026     createdb -O dhadmin dh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"host all  all    0.0.0.0/0  md5\" \u003e\u003e /etc/postgresql/9.4/main/pg_hba.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^local.*all.*postgres.*peer$/local all postgres trust/' /etc/postgresql/9.4/main/pg_hba.conf \u0026\u0026     sed -i 's/^local.*all.*all.*peer$/local all all md5/' /etc/postgresql/9.4/main/pg_hba.conf \u0026\u0026     echo \"listen_addresses='*'\" \u003e\u003e /etc/postgresql/9.4/main/postgresql.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/postgresql",
            "/var/log/postgresql",
            "/var/lib/postgresql"
          ]
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "KAFKA_PARTITIONS",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/kafka/config \u0026\u0026     curl -L -s http://mirror.reverse.net/pub/apache/kafka/0.8.2.0/kafka_2.10-0.8.2.0.tgz     | tar -xzC /tmp/ \u0026\u0026     mv -f /tmp/kafka_2.10-0.8.2.0/* /opt/kafka \u0026\u0026     ln -s /opt/kafka /opt/zookeeper \u0026\u0026     echo num.partitions=$KAFKA_PARTITIONS \u003e\u003e /opt/kafka/config/kafka.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "kafka.properties",
            "/opt/kafka/config/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "zookeeper.properties",
            "/opt/kafka/config/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/data/zk-data",
            "/var/data/kafka-data",
            "/var/log/zk",
            "/var/log/kafka"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/sshd",
            "/var/log/supervisor"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "devicehive-init.sh",
            "/devicehive-init.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /devicehive-init.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/bash -G sudo dhadmin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod --password $(echo \"dhadmin_#911\" | openssl passwd -1 -stdin) dhadmin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y ca-certificates nginx \u0026\u0026     apt-get clean autoclean \u0026\u0026     apt-get autoremove -y \u0026\u0026     rm -rf /var/lib/{apt,dpkg,cache,log}/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/nginx",
            "/var/log/nginx/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "devicehive-server.properties",
            "/home/devicehive/devicehive-server.properties"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /home/devicehive/admin \u0026\u0026     curl -L -s https://github.com/devicehive/devicehive-java-server/releases/download/${DH_VERSION}/devicehive-${DH_VERSION}-boot.jar \u003e /home/devicehive/devicehive-server.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -s https://github.com/devicehive/devicehive-admin-console/archive/2.0.4.tar.gz     | tar -xzC /tmp \u0026\u0026     cp -r /tmp/devicehive-admin-console-2.0.4/* /home/devicehive/admin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's/restEndpoint.*/restEndpoint: location.origin + \\\"\\/api\\/rest\\\"\\,/' /home/devicehive/admin/scripts/config.js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/devicehive"
          ]
        },
        {
          "CmdLine": [
            "/devicehive-init.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "2181",
            "22",
            "5432",
            "80",
            "9001",
            "9092"
          ]
        }
      ]
    }
  ]
}