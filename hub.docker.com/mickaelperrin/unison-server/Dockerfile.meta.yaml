MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Maintainer: MickaÃ«l Perrin <dev@mickaelperrin.fr>
    Name: maintainer
  - CmdLine:
    - echo "@edge http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories;     echo
      "@edgecommunity http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories;     echo
      "@edgetesting http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - Key: UNISON_VERSION
    Name: arg
    Value: 2.51.2
  - CmdLine:
    - apk add --no-cache --virtual .build-dependencies build-base curl  && apk add
      --no-cache inotify-tools su-exec bash  && apk add --no-cache ocaml@edge  &&
      curl -L https://github.com/bcpierce00/unison/archive/v$UNISON_VERSION.tar.gz
      | tar zxv -C /tmp  && cd /tmp/unison-${UNISON_VERSION}  && sed -i -e 's/GLIBC_SUPPORT_INOTIFY
      0/GLIBC_SUPPORT_INOTIFY 1/' src/fsmonitor/linux/inotify_stubs.c  && make UISTYLE=text
      NATIVE=true STATIC=true  && cp src/unison src/unison-fsmonitor /usr/local/bin  &&
      apk del .build-dependencies ocaml  && rm -rf /tmp/unison-${UNISON_VERSION}
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - CmdLine:
    - mkdir -p /docker-entrypoint.d  && chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: '"Europe/Paris"'
    - Key: LANG
      Value: '"C.UTF-8"'
    Name: env
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - unison
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
