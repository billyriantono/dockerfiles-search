MetaArgs:
- DefaultValue: "3.6"
  Key: PYTHON_VERSION
  ProvidedValue: null
  Value: "3.6"
Stages:
- BaseName: godatadriven/miniconda:${PYTHON_VERSION}
  Commands:
  - Env:
    - Key: PYTHONDONTWRITEBYTECODE
      Value: "1"
    Name: env
  - Env:
    - Key: SLUGIFY_USES_TEXT_UNIDECODE
      Value: "yes"
    Name: env
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: AIRFLOW_VERSION
    Name: arg
    Value: null
  - Key: AIRFLOW_EXTRAS
    Name: arg
    Value: async,celery,crypto,jdbc,hdfs,hive,azure,gcp_api,emr,password,postgres,slack,ssh,kubernetes
  - Labels:
    - Key: org.label-schema.name
      Value: '"Apache Airflow ${AIRFLOW_VERSION}"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.version
      Value: $AIRFLOW_VERSION
    Name: label
  - CmdLine:
    - set -x    && apt-get update     && apt-get install -y gcc g++ netcat git ca-certificates
      libpq-dev curl procps --no-install-recommends     && if [ "$AIRFLOW_VERSION"
      = "1.8.2" ]; then           conda install -y pip==9;       fi    && if [ "$AIRFLOW_VERSION"
      = "master" ]; then           pip install --no-cache-dir git+https://github.com/apache/airflow/#egg=apache-airflow[$AIRFLOW_EXTRAS];           curl
      -sL https://deb.nodesource.com/setup_8.x | bash - ;           apt-get install
      -y nodejs ;           cd /opt/miniconda3/lib/python3.6/site-packages/airflow/www/;           npm
      install;           npm run prod;           cd /;           apt-get remove -y
      --purge nodejs ;       elif [ "$AIRFLOW_VERSION" = "1.9.0" ]; then           pip
      install --no-cache-dir apache-airflow[$AIRFLOW_EXTRAS]==$AIRFLOW_VERSION;       elif
      [ -n "$AIRFLOW_VERSION" ]; then           pip install --no-cache-dir apache-airflow[$AIRFLOW_EXTRAS]==$AIRFLOW_VERSION
      "flask==1.0.4";       else           pip install --no-cache-dir apache-airflow[$AIRFLOW_EXTRAS]
      "flask==1.0.4";       fi    && apt-get remove -y --purge gcc g++ git curl     &&
      apt autoremove -y     && apt-get clean -y
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /scripts/
  - CmdLine:
    - chmod +x /scripts/entrypoint.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/airflow
  - Name: volume
    Volumes:
    - /root/airflow/dags
    - /root/airflow/logs
  - CmdLine:
    - /scripts/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --help
    Name: cmd
    PrependShell: false
  From:
    Image: godatadriven/miniconda:${PYTHON_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM godatadriven/miniconda:${PYTHON_VERSION}
