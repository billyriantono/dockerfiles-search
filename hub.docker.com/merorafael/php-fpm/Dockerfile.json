{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-fpm",
      "SourceCode": "FROM php:5.6-fpm",
      "Platform": "",
      "From": {
        "Image": "php:5.6-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --no-install-recommends -y         wget         vim         git         unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" \u003e /etc/apt/sources.list.d/pgdg.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc |       apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/oracle     \u0026\u0026 cd /opt/oracle     \u0026\u0026 wget https://s3.amazonaws.com/merofile/instantclient-basic-linux.x64-12.1.0.2.0.zip     \u0026\u0026 wget https://s3.amazonaws.com/merofile/instantclient-sdk-linux.x64-12.1.0.2.0.zip     \u0026\u0026 unzip /opt/oracle/instantclient-basic-linux.x64-12.1.0.2.0.zip -d /opt/oracle     \u0026\u0026 unzip /opt/oracle/instantclient-sdk-linux.x64-12.1.0.2.0.zip -d /opt/oracle     \u0026\u0026 ln -s /opt/oracle/instantclient_12_1/libclntsh.so.12.1 /opt/oracle/instantclient_12_1/libclntsh.so     \u0026\u0026 ln -s /opt/oracle/instantclient_12_1/libclntshcore.so.12.1 /opt/oracle/instantclient_12_1/libclntshcore.so     \u0026\u0026 ln -s /opt/oracle/instantclient_12_1/libocci.so.12.1 /opt/oracle/instantclient_12_1/libocci.so     \u0026\u0026 rm -rf /opt/oracle/*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install --no-install-recommends -y         postgresql-server-dev-9.5         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng12-dev         zlib1g-dev         libicu-dev         g++         unixodbc-dev         libxml2-dev         libaio-dev         libgearman-dev         libmemcached-dev         freetds-dev \tlibssl-dev \topenssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php --         --install-dir=/usr/local/bin         --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 echo 'instantclient,/opt/oracle/instantclient_12_1/' | pecl install oci8-2.0.10     \u0026\u0026 docker-php-ext-configure pdo_oci --with-pdo-oci=instantclient,/opt/oracle/instantclient_12_1,12.1     \u0026\u0026 docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu     \u0026\u0026 pecl install apcu-4.0.10     \u0026\u0026 pecl install redis-2.2.8     \u0026\u0026 pecl install gearman     \u0026\u0026 pecl install memcached-2.2.0     \u0026\u0026 docker-php-ext-install             iconv             mbstring             intl             mcrypt             gd             pgsql             mysqli             pdo_pgsql             pdo_mysql             pdo_oci             pdo_dblib             soap             sockets             zip             pcntl             ftp     \u0026\u0026 docker-php-ext-enable             oci8             apcu             memcached             redis             gearman             opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://phar.phpunit.de/phpunit.phar -O /usr/local/bin/phpunit     \u0026\u0026 chmod +x /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}