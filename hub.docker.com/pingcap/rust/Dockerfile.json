{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7@sha256:aebf12af704307dfa0079b3babdca8d7e8ff6564696882bcb5d11f1d461f9ee9",
      "SourceCode": "FROM centos:7@sha256:aebf12af704307dfa0079b3babdca8d7e8ff6564696882bcb5d11f1d461f9ee9",
      "Platform": "",
      "From": {
        "Image": "centos:7@sha256:aebf12af704307dfa0079b3babdca8d7e8ff6564696882bcb5d11f1d461f9ee9"
      },
      "Commands": [
        {
          "Maintainer": "Liu Yin \u003cliuy@pingcap.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "yum install -y epel-release"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum makecache \t\u0026\u0026 yum update -y \t\u0026\u0026 yum install -y tar wget git which file unzip python-pip \t\u0026\u0026 yum install -y make cmake3 gcc gcc-c++ libstdc++-static pkg-config psmisc \t\u0026\u0026 yum install -y libdwarf-devel elfutils-libelf-devel elfutils-devel binutils-devel \t\u0026\u0026 yum install -y openssl-devel \t\u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/cmake3 /usr/bin/cmake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/gflags/gflags/archive/v2.1.2.tar.gz -o gflags.tar.gz \t\u0026\u0026 tar xf gflags.tar.gz \t\u0026\u0026 cd gflags-2.1.2 \t\u0026\u0026 cmake . \t\u0026\u0026 make -j \t\u0026\u0026 make install \t\u0026\u0026 rm -rf /gflags.tar.gz /gflags-2.1.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.10.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_DOWNLOAD_URL",
              "Value": "https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_DOWNLOAD_SHA256",
              "Value": "4b677d698c65370afa33757b6954ade60347aaca310ea92a63ed717d7cb0c2ff"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \t\u0026\u0026 echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \t\u0026\u0026 tar -C /usr/local -xzf golang.tar.gz \t\u0026\u0026 rm golang.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOROOT",
              "Value": "/usr/local/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:$GOROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "go get golang.org/x/tools/go/gcexportdata         \u0026\u0026 go get github.com/golang/lint/golint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path --default-toolchain none -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/pingcap/tikv/archive/master.tar.gz -o /root/master.tar.gz \t\u0026\u0026 cd /root \u0026\u0026 tar xf master.tar.gz \t\u0026\u0026 cd /root \u0026\u0026 rm -rf master.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/tikv-master \t\u0026\u0026 /root/.cargo/bin/rustup default $(tail -n 1 RUST_VERSION) \t\u0026\u0026 /root/.cargo/bin/rustup component add rustfmt-preview --toolchain $(tail -n 1 RUST_VERSION) \t\u0026\u0026 /root/.cargo/bin/cargo fetch \t\u0026\u0026 rm -rf /root/tikv-master"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/.cargo/bin/:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LIBRARY_PATH",
              "Value": "/usr/local/lib:$LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/lib:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.17.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/tini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc",
            "/tini.asc"
          ]
        },
        {
          "CmdLine": [
            "gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7  \u0026\u0026 gpg --verify /tini.asc  \u0026\u0026 rm /tini.asc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /tini \u0026\u0026 mv /tini /sbin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}