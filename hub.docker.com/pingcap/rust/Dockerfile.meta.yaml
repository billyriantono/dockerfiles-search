MetaArgs: null
Stages:
- BaseName: centos:7@sha256:aebf12af704307dfa0079b3babdca8d7e8ff6564696882bcb5d11f1d461f9ee9
  Commands:
  - Maintainer: Liu Yin <liuy@pingcap.com>
    Name: maintainer
  - CmdLine:
    - yum install -y epel-release
    Name: run
    PrependShell: true
  - CmdLine:
    - "yum makecache \t&& yum update -y \t&& yum install -y tar wget git which file
      unzip python-pip \t&& yum install -y make cmake3 gcc gcc-c++ libstdc++-static
      pkg-config psmisc \t&& yum install -y libdwarf-devel elfutils-libelf-devel elfutils-devel
      binutils-devel \t&& yum install -y openssl-devel \t&& yum clean all"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/cmake3 /usr/bin/cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -L https://github.com/gflags/gflags/archive/v2.1.2.tar.gz -o gflags.tar.gz
      \t&& tar xf gflags.tar.gz \t&& cd gflags-2.1.2 \t&& cmake . \t&& make -j \t&&
      make install \t&& rm -rf /gflags.tar.gz /gflags-2.1.2"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.10.2
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_URL
      Value: https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_SHA256
      Value: 4b677d698c65370afa33757b6954ade60347aaca310ea92a63ed717d7cb0c2ff
    Name: env
  - CmdLine:
    - "curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \t&& echo \"$GOLANG_DOWNLOAD_SHA256
      \ golang.tar.gz\" | sha256sum -c - \t&& tar -C /usr/local -xzf golang.tar.gz
      \t&& rm golang.tar.gz"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: GOROOT
      Value: /usr/local/go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:$GOROOT/bin:$PATH
    Name: env
  - CmdLine:
    - go get golang.org/x/tools/go/gcexportdata         && go get github.com/golang/lint/golint
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path --default-toolchain
      none -y
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -L https://github.com/pingcap/tikv/archive/master.tar.gz -o /root/master.tar.gz
      \t&& cd /root && tar xf master.tar.gz \t&& cd /root && rm -rf master.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /root/tikv-master \t&& /root/.cargo/bin/rustup default $(tail -n 1 RUST_VERSION)
      \t&& /root/.cargo/bin/rustup component add rustfmt-preview --toolchain $(tail
      -n 1 RUST_VERSION) \t&& /root/.cargo/bin/cargo fetch \t&& rm -rf /root/tikv-master"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/.cargo/bin/:$PATH
    Name: env
  - Env:
    - Key: LIBRARY_PATH
      Value: /usr/local/lib:$LIBRARY_PATH
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/lib:$LD_LIBRARY_PATH
    Name: env
  - Env:
    - Key: TINI_VERSION
      Value: v0.17.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc
    - /tini.asc
  - CmdLine:
    - gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7  &&
      gpg --verify /tini.asc  && rm /tini.asc
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /tini && mv /tini /sbin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: centos:7@sha256:aebf12af704307dfa0079b3babdca8d7e8ff6564696882bcb5d11f1d461f9ee9
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7@sha256:aebf12af704307dfa0079b3babdca8d7e8ff6564696882bcb5d11f1d461f9ee9
