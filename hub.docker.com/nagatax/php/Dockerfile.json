{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "common",
      "BaseName": "nagatax/apache:latest",
      "SourceCode": "FROM nagatax/apache:latest AS common",
      "Platform": "",
      "As": "common",
      "From": {
        "Image": "nagatax/apache:latest"
      },
      "Commands": null
    },
    {
      "Name": "build",
      "BaseName": "common",
      "SourceCode": "FROM common AS  build",
      "Platform": "",
      "As": "build",
      "From": {
        "Stage": {
          "Named": "common",
          "Index": 0
        }
      },
      "Commands": [
        {
          "CmdLine": [
            "set -x;       . ~/.bashrc         \u0026\u0026 : \"必要なフォルダの作成\"     \u0026\u0026 yum install -y         epel-release         http://rpms.famillecollet.com/enterprise/remi-release-7.rpm     \u0026\u0026 yum --enablerepo=remi install -y oniguruma-devel     \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP",
              "Value": "\"php\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "\"7.4.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_PAKAGE",
              "Value": "\"${PHP}-${PHP_VERSION}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_PAKAGE_FILE",
              "Value": "\"${PHP}-${PHP_VERSION}.tar.gz\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_URL",
              "Value": "\"https://www.php.net/distributions/${PHP_PAKAGE_FILE}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_SHA256",
              "Value": "\"004a1a8176176ee1b5c112e73d705977507803f425f9e48cb4a84f42b22abf22 *${PHP_PAKAGE_FILE}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x;       . ~/.bashrc         \u0026\u0026 : \"関連パッケージのインストール\"     \u0026\u0026 yum install -y         autoconf         automake         bison         curl-devel         file         libicu-devel         libjpeg-devel         libpng-devel         libxml2-devel         libzip-devel         make         openssl-devel         re2c         sqlite-devel         zip         unzip         wget         \u0026\u0026 : \"必要なフォルダの作成\"     \u0026\u0026 mkdir -p \"${BUILD_DIR}/${PHP_PAKAGE}\"     \u0026\u0026 mkdir -p \"${INSTALL_DIR}/${PHP}\"         \u0026\u0026 : \"phpのインストール\"     \u0026\u0026 cd \"${SRC_DIR}\"     \u0026\u0026 wget \"${PHP_URL}\"     \u0026\u0026 echo \"${PHP_SHA256}\" | sha256sum -c -     \u0026\u0026 tar xvf \"${PHP_PAKAGE_FILE}\"     \u0026\u0026 cd \"${BUILD_DIR}/${PHP_PAKAGE}\"     \u0026\u0026 \"${SRC_DIR}/${PHP_PAKAGE}/configure\"         --enable-bcmath         --enable-calendar         --enable-fpm         --enable-mbstring         --enable-opcache         --enable-soap         --enable-zip         --prefix=\"${INSTALL_DIR}/${PHP}\"         --with-apxs2=\"${INSTALL_DIR}/httpd/bin/apxs\"         --with-pdo-mysql=mysqlnd         --with-pear         --with-curl         --with-openssl         --without-libzip         --with-zlib     \u0026\u0026 make -j`nproc`     \u0026\u0026 make install     \u0026\u0026 echo 'export PATH=${PATH}'\":${INSTALL_DIR}/${PHP}/bin\" \u003e\u003e /root/.bashrc     \u0026\u0026 cp -a \"${SRC_DIR}/${PHP_PAKAGE}/php.ini-development\" \"${INSTALL_DIR}/${PHP}/lib/php.ini\"         \u0026\u0026 : \"不要なファイルの削除\"     \u0026\u0026 rm -rf \"${SRC_DIR}/${PHP_PAKAGE}\"         \"${SRC_DIR}/${PHP_PAKAGE_FILE}\"         \"${BUILD_DIR}/${PHP_PAKAGE}\"     \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x;       . ~/.bashrc         \u0026\u0026 pear config-set php_ini \"${INSTALL_DIR}/${PHP}/lib/php.ini\"     \u0026\u0026 pecl config-set php_ini \"${INSTALL_DIR}/${PHP}/lib/php.ini\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x;       . ~/.bashrc         \u0026\u0026 yum install -y         ImageMagick-devel         libmemcached-devel         libyaml-devel         \u0026\u0026 pecl install         imagick         memcached         phpredis         yaml         xdebug     \u0026\u0026 : \"Setting of xdebug\"     \u0026\u0026 : \"Replace 'zend_extension_ts' with 'zend_extension'. Because xdebug is not thread safe\"     \u0026\u0026 sed -i -e 's/^zend_extension_ts=\"xdebug.so\"/zend_extension=\"xdebug.so\"/' /usr/local/php/lib/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x;       . ~/.bashrc         \u0026\u0026 : \"関連パッケージのインストール\"     \u0026\u0026 yum install -y         git         \u0026\u0026 php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"     \u0026\u0026 php -r \"if (hash_file('sha384', 'composer-setup.php') === 'baf1608c33254d00611ac1705c1d9958c817a1a33bce370c0595974b342601bd80b92a3f46067da89e3b06bff421f182') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"     \u0026\u0026 php composer-setup.php --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 php -r \"unlink('composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "release",
      "BaseName": "common",
      "SourceCode": "FROM common AS release",
      "Platform": "",
      "As": "release",
      "From": {
        "Stage": {
          "Named": "common",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local",
            "/usr/local"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/root/.bashrc",
            "/root/.bashrc"
          ]
        },
        {
          "CmdLine": [
            "set -x;       . ~/.bashrc         \u0026\u0026 : \"関連パッケージのインストール\"     \u0026\u0026 : \"oniguruma\"     \u0026\u0026 yum install -y         epel-release         http://rpms.famillecollet.com/enterprise/remi-release-7.rpm     \u0026\u0026 yum --enablerepo=remi install -y oniguruma-devel     \u0026\u0026 : \"PHP\"     \u0026\u0026 yum install -y         autoconf         automake         bison         curl-devel         file         libicu-devel         libjpeg-devel         libpng-devel         libxml2-devel         libzip-devel         make         openssl-devel         re2c         sqlite-devel         zip         unzip     \u0026\u0026 : \"Xdebug\"     \u0026\u0026 yum install -y         ImageMagick-devel         libmemcached-devel         libyaml-devel         \u0026\u0026 : \"不要なファイルの削除\"     \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}