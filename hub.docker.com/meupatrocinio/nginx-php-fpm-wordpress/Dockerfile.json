{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nginx:mainline-alpine",
      "SourceCode": "FROM nginx:mainline-alpine",
      "Platform": "",
      "From": {
        "Image": "nginx:mainline-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Rafael \u003crafael@faztodadiferenca.com.br\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "php_conf",
              "Value": "/etc/php5/php.ini"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "fpm_conf",
              "Value": "/etc/php5/php-fpm.conf"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "composer_hash",
              "Value": "aa96f26c2b67226a324c27919f1eb05f21c248b987e6195cad9690d5c1ff713d53020a02ac8c217dbf90a7eacc9d141d"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "min_spare_servers_cnt",
              "Value": "10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "max_spare_servers_cnt",
              "Value": "50"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "start_servers_cnt",
              "Value": "10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "max_children_cnt",
              "Value": "100"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo @testing http://nl.alpinelinux.org/alpine/edge/testing \u003e\u003e /etc/apk/repositories \u0026\u0026     echo /etc/apk/respositories \u0026\u0026     apk update \u0026\u0026     apk add --no-cache bash     gettext     vim     mariadb-client     openssh-client     wget     supervisor     curl     git     php5-fpm     php5-pdo     php5-pdo_mysql     php5-mysql     php5-mysqli     php5-mcrypt     php5-ctype     php5-zlib     php5-gd     php5-exif     php5-intl     php5-memcache     php5-sqlite3     php5-pgsql     php5-xml     php5-xsl     php5-curl     php5-openssl     php5-iconv     php5-json     php5-phar     php5-soap     php5-dom     php5-zip     python     python-dev     py-pip     augeas-dev     openssl-dev     ca-certificates     dialog     gcc     musl-dev     linux-headers     sed     bash     libffi-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/nginx \u0026\u0026     mkdir -p /var/www/app \u0026\u0026     mkdir -p /run/nginx \u0026\u0026     mkdir -p /var/log/supervisor \u0026\u0026    pip install -U pip \u0026\u0026     pip install -U certbot \u0026\u0026     mkdir -p /etc/letsencrypt/webrootauth \u0026\u0026     apk del gcc musl-dev linux-headers libffi-dev augeas-dev python-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files",
            "/attachment"
          ]
        },
        {
          "CmdLine": [
            "rm -Rf /etc/nginx/nginx.conf ;      rm -Rf /var/www/* ;      rm -Rf /etc/nginx/conf.d/* ;      mkdir -p /var/www/html/wordpress ;      cp -rp /attachment/supervisord.conf /etc/supervisord.conf ;      cp -rp /attachment/nginx.conf /etc/nginx/nginx.conf ;      cp -rp /attachment/default.conf /etc/nginx/conf.d/default.conf ;      cp -rp /attachment/php-fpm.conf ${fpm_conf} ;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i         -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\"         -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\"         -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\"         -e \"s/variables_order = \\\"GPCS\\\"/variables_order = \\\"EGPCS\\\"/g\"         ${php_conf}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Health": {
            "Interval": 60000000000,
            "Test": [
              "CMD-SHELL",
              "curl -f http://localhost/ || exit 1"
            ],
            "Timeout": 3000000000
          },
          "Name": "healthcheck"
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html/wordpress"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/python /usr/bin/supervisord -n -c /etc/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}