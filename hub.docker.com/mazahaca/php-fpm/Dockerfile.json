{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:wheezy",
      "SourceCode": "FROM debian:wheezy",
      "Platform": "",
      "From": {
        "Image": "debian:wheezy"
      },
      "Commands": [
        {
          "Maintainer": "Ilya Epifanov \u003celijah.epifanov@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "5.5.33"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y curl ca-certificates software-properties-common python-software-properties  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.6/gosu-$(dpkg --print-architecture)\"         \u0026\u0026 curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.6/gosu-$(dpkg --print-architecture).asc\"         \u0026\u0026 gpg --verify /usr/local/bin/gosu.asc         \u0026\u0026 rm /usr/local/bin/gosu.asc         \u0026\u0026 chmod +x /usr/local/bin/gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s http://www.dotdeb.org/dotdeb.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'deb http://packages.dotdeb.org wheezy-php55 all' \u003e /etc/apt/sources.list.d/dotdeb.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://ftp.de.debian.org/debian wheezy-backports main\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y tzdata locales-all \"php5-cli=$PHP_VERSION-*\" \"php5-fpm=$PHP_VERSION-*\" \"php5-curl=$PHP_VERSION-*\" \"php5-xhprof=$PHP_VERSION-*\" \"php5-mysqlnd=$PHP_VERSION-*\" \"php5-pgsql=$PHP_VERSION-*\" \"php5-gd=$PHP_VERSION-*\" php5-mongo php5-memcache php5-apcu \"php5-intl=$PHP_VERSION-*\" \"php5-xdebug=$PHP_VERSION-*\" php5-imagick php5-mcrypt --no-install-recommends  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "AEROSPIKE_VERSION",
              "Value": "3.4.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL --raw https://github.com/aerospike/aerospike-client-php/archive/${AEROSPIKE_VERSION}.tar.gz -o /tmp/aerospike.tar.gz  \u0026\u0026 mkdir /tmp/aerospike  \u0026\u0026 tar zxf /tmp/aerospike.tar.gz --strip-components=1 -C /tmp/aerospike  \u0026\u0026 cd /tmp/aerospike/src/aerospike  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y build-essential autoconf libssl-dev liblua5.1-dev \"php5-dev=$PHP_VERSION-*\" \"php-pear=$PHP_VERSION-*\" --no-install-recommends  \u0026\u0026 AEROSPIKE_C_CLIENT=3.1.24 ./build.sh  \u0026\u0026 make install  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export VERSION=`php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\"`     \u0026\u0026 curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/${VERSION}     \u0026\u0026 tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp     \u0026\u0026 mv /tmp/blackfire-*.so `php -r \"echo ini_get('extension_dir');\"`/blackfire.so     \u0026\u0026 echo \"extension=blackfire.so\\nblackfire.agent_socket=\\${BLACKFIRE_PORT}\" \u003e /etc/php5/fpm/conf.d/00-blackfire.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:/bin:/usr/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'date.timezone = UTC' \u003e /etc/php5/fpm/conf.d/00-timezone.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'date.timezone = UTC' \u003e /etc/php5/cli/conf.d/00-timezone.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "aerospike.ini",
            "/etc/php5/fpm/conf.d/00-aerospike.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "aerospike.ini",
            "/etc/php5/cli/conf.d/00-aerospike.ini"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/php5-fpm",
            "-F"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}