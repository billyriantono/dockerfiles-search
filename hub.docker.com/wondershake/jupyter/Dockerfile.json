{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6.2-alpine3.6",
      "SourceCode": "FROM python:3.6.2-alpine3.6",
      "Platform": "",
      "From": {
        "Image": "python:3.6.2-alpine3.6"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk update   \u0026\u0026 apk --no-cache add     libstdc++   \u0026\u0026 apk --no-cache add     bash   \u0026\u0026 apk --no-cache add --virtual .build-deps     curl     file     freetype-dev     g++     gcc     gfortran     git     lapack-dev     libxml2-dev     libxslt-dev     make     openssl     perl     wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone     --depth=1     https://github.com/Kensuke-Mitsuzawa/JapaneseTokenizers.git     /usr/local/src/JapaneseTokenizers   \u0026\u0026 cd /usr/local/src/JapaneseTokenizers   \u0026\u0026 make install   \u0026\u0026 make install_neologd   \u0026\u0026 python setup.py install   \u0026\u0026 cd   \u0026\u0026 rm -rf /usr/local/src/JapaneseTokenizers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --update --no-cache add python2   \u0026\u0026 mkdir /opt   \u0026\u0026 curl -o /opt/google-cloud-sdk.tar.gz     https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-158.0.0-linux-x86_64.tar.gz   \u0026\u0026 cd /opt   \u0026\u0026 tar zxf google-cloud-sdk.tar.gz   \u0026\u0026 rm google-cloud-sdk.tar.gz   \u0026\u0026 CLOUDSDK_PYTHON=$(which python2)     google-cloud-sdk/install.sh     --usage-reporting=false     --rc-path=/etc/profile.d/gcloud.sh     --quiet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install PyYAML"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install gensim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install inflection"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install matplotlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install neologdn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install numpy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install pandas"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install pandas_gbq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install scikit-learn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install scipy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install tqdm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /notebook"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/"
          ]
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install jupyter_contrib_nbextensions   \u0026\u0026 jupyter contrib nbextension install --user   \u0026\u0026 pip --no-cache-dir install jupyter_nbextensions_configurator   \u0026\u0026 jupyter nbextensions_configurator enable --user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/fonts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "IPAGothic",
            "/usr/share/fonts/IPAGothic"
          ]
        },
        {
          "CmdLine": [
            "fc-cache -fv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/notebook"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/.config/gcloud"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/notebook"
        },
        {
          "CmdLine": [
            "jupyter notebook"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}