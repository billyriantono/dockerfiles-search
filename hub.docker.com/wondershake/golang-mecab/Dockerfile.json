{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:1.9.2-alpine3.7",
      "SourceCode": "FROM golang:1.9.2-alpine3.7",
      "Platform": "",
      "From": {
        "Image": "golang:1.9.2-alpine3.7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Wondershake\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "mecab_url",
              "Value": "https://drive.google.com/uc?export=download\u0026id=0B4y35FiV1wh7cENtOXlicTFaRUE"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ipadic_url",
              "Value": "https://drive.google.com/uc?export=download\u0026id=0B4y35FiV1wh7MWVlSDBCSXZMTXM"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "neologd_rev",
              "Value": "6e90aadbe26c3f7a8f829d422465a7cbad603258"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "build_deps",
              "Value": "\"curl git bash file sudo openssh gcc g++ make\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "runtime_deps",
              "Value": "\"openssl musl-dev libstdc++\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "apk add --no-cache -t .build_deps ${build_deps}   \u0026\u0026 apk add --no-cache ${runtime_deps}   \u0026\u0026 curl -LSfs -o mecab.tar.gz ${mecab_url}   \u0026\u0026 tar zxf mecab.tar.gz   \u0026\u0026 rm -f mecab.tar.gz   \u0026\u0026 cd $(ls | grep mecab)   \u0026\u0026 ./configure --enable-utf8-only --with-charset=utf8   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 cd   \u0026\u0026 rm -rf mecab*   \u0026\u0026 curl -LSfs -o mecab-ipadic.tar.gz ${ipadic_url}   \u0026\u0026 tar zxf mecab-ipadic.tar.gz   \u0026\u0026 rm -r mecab-ipadic.tar.gz   \u0026\u0026 cd $(ls | grep mecab-ipadic)   \u0026\u0026 ./configure --with-charset=utf8   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 cd   \u0026\u0026 rm -rf mecab-ipadic*   \u0026\u0026 git clone https://github.com/neologd/mecab-ipadic-neologd.git   \u0026\u0026 cd mecab-ipadic-neologd   \u0026\u0026 git reset --hard ${neologd_rev}   \u0026\u0026 bin/install-mecab-ipadic-neologd -n -y   \u0026\u0026 cd   \u0026\u0026 rm -rf mecab-ipadic-neologd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CGO_LDFLAGS",
              "Value": "\"-L/usr/local/lib -lmecab -lstdc++\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CGO_CFLAGS",
              "Value": "\"-I/usr/local/include\""
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}