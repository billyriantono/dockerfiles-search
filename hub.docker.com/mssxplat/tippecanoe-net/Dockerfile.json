{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "buildpack-deps:bionic-scm",
      "SourceCode": "FROM buildpack-deps:bionic-scm",
      "Platform": "",
      "From": {
        "Image": "buildpack-deps:bionic-scm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends         build-essential         libsqlite3-dev         libc6         libgcc1         libgssapi-krb5-2         libicu60         libssl1.1         libstdc++6         zlib1g         zlib1g-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOTNET_SDK_VERSION",
              "Value": "3.0.100"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SL --output dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz     \u0026\u0026 dotnet_sha512='766da31f9a0bcfbf0f12c91ea68354eb509ac2111879d55b656f19299c6ea1c005d31460dac7c2a4ef82b3edfea30232c82ba301fb52c0ff268d3e3a1b73d8f7'     \u0026\u0026 echo \"$dotnet_sha512 dotnet.tar.gz\" | sha512sum -c -     \u0026\u0026 mkdir -p /usr/share/dotnet     \u0026\u0026 tar -zxf dotnet.tar.gz -C /usr/share/dotnet     \u0026\u0026 rm dotnet.tar.gz     \u0026\u0026 ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOTNET_RUNNING_IN_CONTAINER",
              "Value": "true"
            },
            {
              "Key": "DOTNET_USE_POLLING_FILE_WATCHER",
              "Value": "true"
            },
            {
              "Key": "NUGET_XMLDOC_MODE",
              "Value": "skip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dotnet help"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "POWERSHELL_VERSION",
              "Value": "7.0.0-preview.4"
            },
            {
              "Key": "POWERSHELL_DISTRIBUTION_CHANNEL",
              "Value": "PSDocker-DotnetCoreSDK-Ubuntu-18.04"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SL --output PowerShell.Linux.x64.$POWERSHELL_VERSION.nupkg https://pwshtool.blob.core.windows.net/tool/$POWERSHELL_VERSION/PowerShell.Linux.x64.$POWERSHELL_VERSION.nupkg     \u0026\u0026 powershell_sha512='0fb0167e13560371bffec38a4a87bf39377fa1a5cc39b3a078ddec8803212bede73e5821861036ba5c345bd55c74703134c9b55c49385f87dae9e2de9239f5d9'     \u0026\u0026 echo \"$powershell_sha512  PowerShell.Linux.x64.$POWERSHELL_VERSION.nupkg\" | sha512sum -c -     \u0026\u0026 mkdir -p /usr/share/powershell     \u0026\u0026 dotnet tool install --add-source / --tool-path /usr/share/powershell --version $POWERSHELL_VERSION PowerShell.Linux.x64     \u0026\u0026 rm PowerShell.Linux.x64.$POWERSHELL_VERSION.nupkg     \u0026\u0026 ln -s /usr/share/powershell/pwsh /usr/bin/pwsh     \u0026\u0026 find /usr/share/powershell -print | grep -i '.*[.]nupkg$' | xargs rm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/tippecanoe-src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/mapbox/tippecanoe.git /tmp/tippecanoe-src --branch 1.34.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp/tippecanoe-src"
        },
        {
          "CmdLine": [
            "make   \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "rm -rf /tmp/tippecanoe-src   \u0026\u0026 apt-get -y remove --purge build-essential \u0026\u0026 apt-get -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tippecanoe --help"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}