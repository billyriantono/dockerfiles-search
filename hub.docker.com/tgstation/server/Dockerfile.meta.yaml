MetaArgs: null
Stages:
- As: build
  BaseName: microsoft/dotnet:2.1-sdk
  Commands:
  - CmdLine:
    - curl --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh
      | sh
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 10.13.0
    Name: env
  - Env:
    - Key: NVM_DIR
      Value: /root/.nvm
    Name: env
  - CmdLine:
    - ". $NVM_DIR/nvm.sh     && nvm install $NODE_VERSION \t&& nvm use $NODE_VERSION
      \t&& apt-get update \t&& apt-get install -y \tdos2unix \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_PATH
      Value: $NVM_DIR/v$NODE_VERSION/lib/node_modules
    Name: env
  - Env:
    - Key: PATH
      Value: $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
    Name: env
  - Name: workdir
    Path: /src
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tgstation-server.sln
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/Tgstation.Server.Host.Console/Tgstation.Server.Host.Console.csproj
    - src/Tgstation.Server.Host.Console/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/Tgstation.Server.Host.Watchdog/Tgstation.Server.Host.Watchdog.csproj
    - src/Tgstation.Server.Host.Watchdog/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/Tgstation.Server.Host/Tgstation.Server.Host.csproj
    - src/Tgstation.Server.Host/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/Tgstation.Server.Api/Tgstation.Server.Api.csproj
    - src/Tgstation.Server.Api/
  - CmdLine:
    - dotnet restore -nowarn:MSB3202,nu1503 -p:RestoreUseSkipNonexistentTargets=false
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - dos2unix build/tgs.docker.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src/src/Tgstation.Server.Host.Console
  - CmdLine:
    - dotnet publish -c Release -o /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src/src/Tgstation.Server.Host
  - CmdLine:
    - dotnet publish -c Release -o /app/lib/Default && mv /app/lib/Default/appsettings*
      /app
    Name: run
    PrependShell: true
  From:
    Image: microsoft/dotnet:2.1-sdk
  Name: build
  Platform: ""
  SourceCode: FROM microsoft/dotnet:2.1-sdk AS build
- BaseName: microsoft/dotnet:2.1-aspnetcore-runtime
  Commands:
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - "apt-get update \t&& apt-get install -y \tgcc-multilib \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /app
    - .
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /src/build/tgs.docker.sh
    - tgs.sh
  - Name: volume
    Volumes:
    - /config_data
    - /tgs_logs
    - /app/lib
  - CmdLine:
    - ./tgs.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: microsoft/dotnet:2.1-aspnetcore-runtime
  Name: ""
  Platform: ""
  SourceCode: FROM microsoft/dotnet:2.1-aspnetcore-runtime
