{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Benjamin Jonard \u003cjonard.benjamin@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "APP_ENV",
              "Value": "\"prod\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP_DEBUG",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP_SECRET",
              "Value": "\"937lZdyx5gfBwPpQZ074\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "composer.json",
            "/ppm/composer.json"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "/etc/app/run.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/etc/php7/php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "CmdLine": [
            "BUILD_DEPS=\"     tar     libressl     ca-certificates     build-base     autoconf     pcre-dev     libtool\"     \u0026\u0026 apk update     \u0026\u0026 apk upgrade --update-cache --available     \u0026\u0026 apk add         ${BUILD_DEPS}         bash         git         unzip         nginx         curl         php7         php7-cgi         php7-dom         php7-xml         php7-xmlwriter         php7-curl         php7-mbstring         php7-exif         php7-openssl         php7-gd         php7-phar         php7-json         php7-pdo         php7-pdo_pgsql         php7-zip         php7-session         php7-ctype         php7-apcu         php7-tokenizer         php7-opcache         php7-simplexml         php7-fileinfo         php7-sodium         php7-iconv         php7-intl         php7-pcntl     \u0026\u0026 apk del ${BUILD_DEPS}     \u0026\u0026 rm -rf /var/cache/apk/* /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 composer --version     \u0026\u0026 cd /ppm     \u0026\u0026 composer install -o     \u0026\u0026 mkdir -p /website     \u0026\u0026 curl -o /tmp/website.tar.gz -L \"https://github.com/koillection/website/archive/master.tar.gz\"     \u0026\u0026 tar xf /tmp/website.tar.gz -C /website --strip-components=1     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 cd /website     \u0026\u0026 touch .env     \u0026\u0026 composer install -o --no-scripts --no-progress --no-suggest     \u0026\u0026 composer clear-cache     \u0026\u0026 mkdir -p /run/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"/website\""
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/etc/app/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}