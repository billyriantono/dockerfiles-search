MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Maintainer: Huy Giang <gnhuy91@gmail.com>
    Name: maintainer
  - Env:
    - Key: PROTOBUF_VERSION
      Value: '"3.0.0"'
    Name: env
  - Env:
    - Key: PROTOBUF_ZIP
      Value: protoc-${PROTOBUF_VERSION}-linux-x86_64.zip
    Name: env
  - Env:
    - Key: PROTOBUF_URL
      Value: https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/${PROTOBUF_ZIP}
    Name: env
  - Env:
    - Key: GLIBC_VERSION
      Value: '"2.23-r3"'
    Name: env
  - Env:
    - Key: ALPINE_GLIBC_URL
      Value: https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/
    Name: env
  - Env:
    - Key: GLIBC_PKG
      Value: glibc-${GLIBC_VERSION}.apk
    Name: env
  - Env:
    - Key: GLIBC_BIN_PKG
      Value: glibc-bin-${GLIBC_VERSION}.apk
    Name: env
  - CmdLine:
    - 'apk add --update --no-cache -t deps wget ca-certificates     && cd /tmp     &&
      wget ${ALPINE_GLIBC_URL}${GLIBC_PKG}     && wget ${ALPINE_GLIBC_URL}${GLIBC_BIN_PKG}     &&
      apk add --allow-untrusted ${GLIBC_PKG} ${GLIBC_BIN_PKG}     && /usr/glibc-compat/sbin/ldconfig
      /lib /usr/glibc-compat/lib/     && echo ''hosts: files mdns4_minimal [NOTFOUND=return]
      dns mdns4'' >> /etc/nsswitch.conf     && wget ${PROTOBUF_URL}     && unzip ${PROTOBUF_ZIP}
      ''bin/*'' -d /usr     && apk del --purge deps     && rm -rf /tmp/* /var/cache/apk/*'
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache libstdc++     && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - protoc
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
