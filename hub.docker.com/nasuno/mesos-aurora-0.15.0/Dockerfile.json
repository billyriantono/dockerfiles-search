{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "nasuno@ascade.co.jp",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get -y install software-properties-common  \u0026\u0026 add-apt-repository ppa:openjdk-r/ppa -y  \u0026\u0026 apt-get update  \u0026\u0026 apt-get -y install     bison     curl     wget     git     jq     libapr1-dev     libcurl4-nss-dev     libsasl2-dev     libsvn-dev     openjdk-8-jdk-headless     python-dev     iptables     xz-utils  \u0026\u0026 update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java  \u0026\u0026 apt-get install -y zookeeperd  \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF  \u0026\u0026 echo \"deb http://repos.mesosphere.io/ubuntu trusty main\" \u003e /etc/apt/sources.list.d/mesosphere.list  \u0026\u0026 apt-get update  \u0026\u0026 apt-get -y install mesos=0.28.2*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://get.docker.com/builds/Linux/x86_64/docker-1.10.3 \u003e /usr/local/bin/docker  \u0026\u0026 curl -sSL https://raw.githubusercontent.com/docker/docker/3b5fac462d21ca164b3778647420016315289034/hack/dind \u003e /usr/local/bin/dind  \u0026\u0026 curl -sSL https://raw.githubusercontent.com/docker-library/docker/83b2eab8bdb5d35bf343313154ab55938fca3807/1.10/dind/dockerd-entrypoint.sh \u003e /usr/local/bin/dockerd-entrypoint.sh  \u0026\u0026 chmod +x /usr/local/bin/docker /usr/local/bin/dind"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL http://apache.org/dist/thrift/KEYS | gpg --import -  \u0026\u0026 gpg --export --armor 66B778F9 | apt-key add -  \u0026\u0026 echo 'deb http://www.apache.org/dist/thrift/debian 0.9.1 main' \u003e /etc/apt/sources.list.d/thrift.list  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install thrift-compiler=0.9.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b rel/0.15.0 https://github.com/apache/aurora.git /aurora  \u0026\u0026 mkdir -p /aurora/third_party  \u0026\u0026 cd /aurora/third_party  \u0026\u0026 wget https://svn.apache.org/repos/asf/aurora/3rdparty/ubuntu/trusty64/python/mesos.native-0.28.2-py2.7-linux-x86_64.egg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /aurora  \u0026\u0026 ./pants binary src/main/python/apache/aurora/kerberos:kaurora_admin  \u0026\u0026 ./pants binary src/main/python/apache/aurora/kerberos:kaurora  \u0026\u0026 ./pants binary src/main/python/apache/aurora/executor:thermos_executor  \u0026\u0026 ./pants binary src/main/python/apache/thermos/runner:thermos_runner  \u0026\u0026 ./pants binary src/main/python/apache/aurora/tools:thermos_observer  \u0026\u0026 ./pants binary src/main/python/apache/aurora/tools:thermos  \u0026\u0026 cp dist/kaurora_admin.pex /usr/local/bin/aurora_admin  \u0026\u0026 cp dist/kaurora.pex /usr/local/bin/aurora  \u0026\u0026 build-support/embed_runner_in_executor.py  \u0026\u0026 chmod +x dist/thermos_executor.pex  \u0026\u0026 cp dist/thermos.pex /usr/local/bin/thermos  \u0026\u0026 CLASSPATH_PREFIX=dist/resources/main ./gradlew installDist  \u0026\u0026 rm -rf /root/.cache /root/.gradle /root/.gnupg /root/.ivy2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "init.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/init.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/init.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}