{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Rajaselvan \u003crajaselvan@icloud.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\\n\" \u003e /etc/apt/sources.list   \u0026\u0026 echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\\n\" \u003e\u003e /etc/apt/sources.list   \u0026\u0026 echo \"deb http://security.ubuntu.com/ubuntu xenial-security main universe\\n\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qqy   \u0026\u0026 apt-get -qqy --no-install-recommends install     ca-certificates     openjdk-8-jdk-headless     wget   \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/*   \u0026\u0026 sed -i 's/securerandom\\.source=file:\\/dev\\/random/securerandom\\.source=file:\\/dev\\/urandom/' ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} \u003e /usr/local/bin/docker-java-home \t\u0026\u0026 chmod +x /usr/local/bin/docker-java-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64/jre"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$JAVA_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBCONF_NONINTERACTIVE_SEEN",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_URL",
              "Value": "\"https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz\""
            },
            {
              "Key": "ANDROID_BUILD_TOOLS_VERSION",
              "Value": "25.0.0"
            },
            {
              "Key": "ANDROID_APIS",
              "Value": "\"android-24,android-23,android-22,android-21,android-19\""
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "\"/opt/android-sdk-linux\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/$ANDROID_BUILD_TOOLS_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026           apt-get -qq update \u0026\u0026           apt-get -qq install -y curl libncurses5:i386 libstdc++6:i386 zlib1g:i386  \u0026\u0026     curl -sL ${ANDROID_SDK_URL} | tar xz -C /opt \u0026\u0026     echo y | android update sdk -a -u -t platform-tools,${ANDROID_APIS},build-tools-${ANDROID_BUILD_TOOLS_VERSION},sys-img-armeabi-v7a-android-24 \u0026\u0026     chmod a+x -R $ANDROID_HOME \u0026\u0026     chown -R root:root $ANDROID_HOME \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     apt-get autoremove --purge -y \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adb start-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "java -version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODEJS_VERSION",
              "Value": "7.2.0"
            },
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/node/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "\"/opt/node\""
        },
        {
          "CmdLine": [
            "apt-get update -qqy     \u0026\u0026 apt-get install -y curl ca-certificates --no-install-recommends \u0026\u0026     curl -sL https://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-linux-x64.tar.gz | tar xz --strip-components=1 \u0026\u0026     npm install -g appium \u0026\u0026     npm install appium-doctor -g \u0026\u0026     npm cache clean \u0026\u0026     apt-get remove --purge -y npm \u0026\u0026     apt-get autoremove --purge -y \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "node -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "appium-doctor --android"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "UDEV_REMOTE_FILE",
              "Value": "https://raw.githubusercontent.com/M0Rf30/android-udev-rules/master/51-android.rules"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /etc/udev/rules.d   \u0026\u0026 wget --no-verbose $UDEV_REMOTE_FILE -O /etc/udev/rules.d/51-android.rules"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "4723"
          ]
        },
        {
          "CmdLine": [
            "appium"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}