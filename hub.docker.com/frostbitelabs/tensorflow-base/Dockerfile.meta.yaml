MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Henrik Holst <henrik.holst@frostbite.com>
    Name: maintainer
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update --fix-missing &&     apt-get install -y --no-install-recommends
      build-essential ca-certificates curl git libglib2.0-0 libsm6 libxext6 libxrender1
      &&     apt-get install -y --no-install-recommends xserver-xorg-video-dummy x11vnc
      &&     apt-get install -y --no-install-recommends libopenblas-dev &&     apt-get
      install -y --no-install-recommends cmake zlib1g-dev libjpeg-dev xvfb libav-tools
      xorg-dev libboost-all-dev libsdl2-dev &&     apt-get install -y --no-install-recommends
      libsdl1.2-dev libsdl-gfx1.2-dev libsdl-image1.2-dev cmake &&     apt-get install
      -y --no-install-recommends unzip wget iputils-ping &&     apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.13.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh &&     curl
      -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh &&     /bin/bash
      Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda &&     rm Miniconda3-latest-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - CmdLine:
    - pip install --no-cache-dir --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir PyYAML
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y ipython matplotlib numpy pyopengl scipy swig dnspython ruamel_yaml
      &&     conda clean -iltp
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth=1 https://github.com/mgbellemare/Arcade-Learning-Environment
      &&     cd Arcade-Learning-Environment &&     cmake -DUSE_SDL=ON -DUSE_RLGLUE=OFF
      -DBUILD_EXAMPLES=ON . &&     make -j 4 &&     pip install --no-cache-dir . &&     cd
      .. &&     rm -rf Arcade-Learning-Environment
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir gym[atari]
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U --no-cache-dir doom-py ppaquette-gym-doom
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y -c https://conda.binstar.org/menpo opencv3 &&     apt-get install
      -y --no-install-recommends libgtk2.0-0 &&     apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: TENSORFLOW_VERSION
      Value: 0.11.0
    Name: env
  - Env:
    - Key: TF_BINARY_URL
      Value: https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl
    Name: env
  - CmdLine:
    - pip --no-cache-dir install $TF_BINARY_URL
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Xwrapper.config
    - /etc/X11/Xwrapper.config
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Xdummy
    - /usr/local/bin/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /root/.jupyter/
  - Name: expose
    Ports:
    - "5900"
    - "6006"
    - "8888"
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
