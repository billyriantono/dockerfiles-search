{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Mark Peng \u003cmarkpeng.ntu@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     build-essential     cmake     curl     gfortran     git     graphicsmagick     libgraphicsmagick1-dev     libatlas-dev     libavcodec-dev     libavformat-dev     libboost-all-dev     libgtk2.0-dev     libjpeg-dev     liblapack-dev     libswscale-dev     pkg-config     python-dev     python-numpy     python-protobuf    software-properties-common     zip     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://raw.githubusercontent.com/torch/ezinstall/master/install-deps | bash -e"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/torch/distro.git ~/torch --recursive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~/torch \u0026\u0026 ./install.sh \u0026\u0026     cd install/bin \u0026\u0026     ./luarocks install nn \u0026\u0026     ./luarocks install dpnn \u0026\u0026     ./luarocks install image \u0026\u0026     ./luarocks install optim \u0026\u0026     ./luarocks install csvigo \u0026\u0026     ./luarocks install torchx \u0026\u0026     ./luarocks install tds"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /root/torch/install/bin/* /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~ \u0026\u0026     mkdir -p ocv-tmp \u0026\u0026     cd ocv-tmp \u0026\u0026     curl -L https://github.com/Itseez/opencv/archive/2.4.11.zip -o ocv.zip \u0026\u0026     unzip ocv.zip \u0026\u0026     cd opencv-2.4.11 \u0026\u0026     mkdir release \u0026\u0026     cd release \u0026\u0026     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           -D BUILD_PYTHON_SUPPORT=ON           .. \u0026\u0026     make -j8 \u0026\u0026     make install \u0026\u0026     rm -rf ~/ocv-tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~ \u0026\u0026     mkdir -p dlib-tmp \u0026\u0026     cd dlib-tmp \u0026\u0026     curl -L          https://github.com/davisking/dlib/archive/v19.4.tar.gz          -o dlib.tar.bz2 \u0026\u0026     tar xf dlib.tar.bz2 \u0026\u0026     cd dlib-19.4/python_examples \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake ../../tools/python \u0026\u0026     cmake --build . --config Release \u0026\u0026     cp dlib.so /usr/local/lib/python2.7/dist-packages \u0026\u0026     rm -rf ~/dlib-tmp"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}