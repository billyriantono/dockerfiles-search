{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nefrock/docker-ai-base-cpu:latest",
      "SourceCode": "FROM nefrock/docker-ai-base-cpu:latest",
      "Platform": "",
      "From": {
        "Image": "nefrock/docker-ai-base-cpu:latest"
      },
      "Commands": [
        {
          "Maintainer": "siwazaki@nefrock.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y emacs zsh libmysqlclient-dev vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --force-reinstall --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install -U setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install   moviepy   sklearn   msgpack-python   tqdm   wget   sh   colorama   Pillow   ipykernel   matplotlib   jupyter   pandas   \u0026\u0026  python3 -m ipykernel.kernelspec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:openjdk-r/ppa \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y --no-install-recommends openjdk-8-jdk openjdk-8-jre-headless \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"startup --batch\" \u003e\u003e/etc/bazel.bazelrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\"     \u003e\u003e/etc/bazel.bazelrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BAZEL_VERSION",
              "Value": "0.4.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "mkdir /bazel \u0026\u0026     cd /bazel \u0026\u0026     curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \u0026\u0026     curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE \u0026\u0026     chmod +x bazel-*.sh \u0026\u0026     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \u0026\u0026     cd / \u0026\u0026     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "pip3 install wheel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b r1.2 https://github.com/tensorflow/tensorflow.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CI_BUILD_PYTHON",
              "Value": "python"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_BIN_PATH",
              "Value": "/usr/bin/python3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd tensorflow \u0026\u0026     tensorflow/tools/ci_build/builds/configured CPU     bazel build -c opt tensorflow/tools/pip_package:build_pip_package \u0026\u0026     bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip \u0026\u0026     pip3 --no-cache-dir install --upgrade /tmp/pip/tensorflow-1.2.0*.whl # \u0026\u0026     rm -rf /tmp/pip \u0026\u0026     rm -rf /root/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install pyzmq --install-option=\"--zmq=bundled\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --upgrade --no-deps git+git://github.com/Theano/Theano.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install keras==2.0.5"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}