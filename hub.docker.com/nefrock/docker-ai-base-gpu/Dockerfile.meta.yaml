MetaArgs: null
Stages:
- BaseName: nvidia/cuda:7.5-cudnn5-devel-ubuntu14.04
  Commands:
  - Maintainer: ttsurumi@nefrock.com
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends     build-essential     cmake     git     wget     libatlas-base-dev     libboost-all-dev     libgflags-dev     libgoogle-glog-dev     libhdf5-serial-dev     libleveldb-dev     liblmdb-dev     libopencv-dev     libprotobuf-dev     libsnappy-dev     protobuf-compiler     python-dev     python-numpy     python-pip     python-scipy     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     cmake     curl     gfortran     graphicsmagick     libgraphicsmagick1-dev     libatlas-dev     libavcodec-dev     libavformat-dev     libboost-all-dev     libgtk2.0-dev     libjpeg-dev     liblapack-dev     libswscale-dev     pkg-config     python-protobuf    software-properties-common     zip     &&
      apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CAFFE_ROOT
      Value: /opt/caffe
    Name: env
  - Name: workdir
    Path: $CAFFE_ROOT
  - Env:
    - Key: CLONE_TAG
      Value: master
    Name: env
  - CmdLine:
    - git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . &&     for
      req in $(cat python/requirements.txt) pydot; do pip install $req; done &&     mkdir
      build && cd build &&     cmake -DUSE_CUDNN=1 .. &&     make -j"$(nproc)"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYCAFFE_ROOT
      Value: $CAFFE_ROOT/python
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $PYCAFFE_ROOT:$PYTHONPATH
    Name: env
  - Env:
    - Key: PATH
      Value: $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH
    Name: env
  - CmdLine:
    - echo "$CAFFE_ROOT/build/lib" >> /etc/ld.so.conf.d/caffe.conf && ldconfig
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /workspace
  - CmdLine:
    - cd ~ &&     mkdir -p ocv-tmp &&     cd ocv-tmp &&     curl -L https://github.com/Itseez/opencv/archive/2.4.11.zip
      -o ocv.zip &&     unzip ocv.zip &&     cd opencv-2.4.11 &&     mkdir release
      &&     cd release &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           -D
      BUILD_PYTHON_SUPPORT=ON           -D CUDA_GENERATION=Kepler           .. &&     make
      -j8 &&     make install &&     rm -rf ~/ocv-tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~ &&     mkdir -p dlib-tmp &&     cd dlib-tmp &&     curl -L          https://github.com/davisking/dlib/releases/download/v18.16/dlib-18.16.tar.bz2          -o
      dlib.tar.bz2 &&     tar xf dlib.tar.bz2 &&     cd dlib-18.16/python_examples
      &&     mkdir build &&     cd build &&     cmake ../../tools/python &&     cmake
      --build . --config Release &&     cp dlib.so /usr/local/lib/python2.7/dist-packages
      &&     rm -rf ~/dlib-tmp
    Name: run
    PrependShell: true
  From:
    Image: nvidia/cuda:7.5-cudnn5-devel-ubuntu14.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:7.5-cudnn5-devel-ubuntu14.04
