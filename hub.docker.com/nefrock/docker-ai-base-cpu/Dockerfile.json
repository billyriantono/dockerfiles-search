{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "ttsurumi@nefrock.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends     build-essential     cmake     git     wget     libatlas-base-dev     libboost-all-dev     libgflags-dev     libgoogle-glog-dev     libhdf5-serial-dev     libleveldb-dev     liblmdb-dev     libprotobuf-dev     libsnappy-dev     protobuf-compiler     python-dev     python-pip     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install numpy scipy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     cmake     curl     gfortran     graphicsmagick     libgraphicsmagick1-dev     libatlas-dev     libavcodec-dev     libavformat-dev     libboost-all-dev     libgtk2.0-dev     libjpeg-dev     liblapack-dev     libswscale-dev     pkg-config     python-protobuf    software-properties-common     zip     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CAFFE_ROOT",
              "Value": "/opt/caffe"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$CAFFE_ROOT"
        },
        {
          "Env": [
            {
              "Key": "CLONE_TAG",
              "Value": "master"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . \u0026\u0026     for req in $(cat python/requirements.txt) pydot; do pip install $req; done \u0026\u0026     mkdir build \u0026\u0026 cd build \u0026\u0026     cmake -DCPU_ONLY=1 .. \u0026\u0026     make -j\"$(nproc)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYCAFFE_ROOT",
              "Value": "$CAFFE_ROOT/python"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "$PYCAFFE_ROOT:$PYTHONPATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"$CAFFE_ROOT/build/lib\" \u003e\u003e /etc/ld.so.conf.d/caffe.conf \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/workspace"
        },
        {
          "CmdLine": [
            "cd ~ \u0026\u0026     mkdir -p ocv-tmp \u0026\u0026     cd ocv-tmp \u0026\u0026     curl -L https://github.com/Itseez/opencv/archive/2.4.11.zip -o ocv.zip \u0026\u0026     unzip ocv.zip \u0026\u0026     cd opencv-2.4.11 \u0026\u0026     mkdir release \u0026\u0026     cd release \u0026\u0026     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           -D BUILD_PYTHON_SUPPORT=ON           .. \u0026\u0026     make -j8 \u0026\u0026     make install \u0026\u0026     rm -rf ~/ocv-tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~ \u0026\u0026     mkdir -p dlib-tmp \u0026\u0026     cd dlib-tmp \u0026\u0026     curl -L          https://github.com/davisking/dlib/releases/download/v18.16/dlib-18.16.tar.bz2          -o dlib.tar.bz2 \u0026\u0026     tar xf dlib.tar.bz2 \u0026\u0026     cd dlib-18.16/python_examples \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake ../../tools/python \u0026\u0026     cmake --build . --config Release \u0026\u0026     cp dlib.so /usr/local/lib/python2.7/dist-packages \u0026\u0026     rm -rf ~/dlib-tmp"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}