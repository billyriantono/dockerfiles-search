{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "drupal:latest",
      "SourceCode": "FROM drupal:latest",
      "Platform": "",
      "From": {
        "Image": "drupal:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "mantainer",
              "Value": "\"Sebastian Tabares Amaya \u003csytabaresa@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libcurl4-gnutls-dev postgresql-client \u0026\u0026 docker-php-ext-install curl \u0026\u0026 docker-php-ext-enable curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.4.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/da290238de6d63faace0343efbdd5aa9354332c5/web/installer  \u0026\u0026 php -r \"     \\$signature = '669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410';     \\$hash = hash('SHA384', file_get_contents('/tmp/installer.php'));     if (!hash_equals(\\$signature, \\$hash)) {         unlink('/tmp/installer.php');         echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL;         exit(1);     }\"  \u0026\u0026 php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION}  \u0026\u0026 rm /tmp/installer.php  \u0026\u0026 composer --ansi --version --no-interaction"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer require drush/drush \u0026\u0026 ln -s $(pwd)/vendor/bin/drush /usr/local/bin/drush"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}