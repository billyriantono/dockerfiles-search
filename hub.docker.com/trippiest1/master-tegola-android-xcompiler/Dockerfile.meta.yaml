MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk
  Commands:
  - Maintainer: Steven Contreras <steven@terranodo.io>
    Name: maintainer
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends unzip wget git
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_HOME
      Value: /opt/android-sdk
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}:${ANDROID_HOME}/tools
    Name: env
  - Name: workdir
    Path: /opt
  - CmdLine:
    - "if [ ! -d ${ANDROID_HOME} ] ; then \t\tmkdir -p ${ANDROID_HOME} \t\t&& mkdir
      -p ~/.android \t\t&& touch ~/.android/repositories.cfg \t\t&& cd ${ANDROID_HOME}
      \t\t&& wget --output-document=sdk-tools.zip https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip
      \t\t&& unzip sdk-tools.zip \t\t&& rm -f sdk-tools.zip \t\t&& echo y | sdkmanager
      \"build-tools;27.0.3\" \t\t&& echo y | sdkmanager \"platforms;android-26\" \t\t&&
      echo y | sdkmanager \"platform-tools\" \t\t; \tfi"
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_STANDALONE_NDK_HOME
      Value: /opt/android-standalone-ndk
    Name: env
  - CmdLine:
    - mkdir -p ${ANDROID_STANDALONE_NDK_HOME}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${ANDROID_STANDALONE_NDK_HOME}
  - Key: ANDROID_NDK_VERSION
    Name: arg
    Value: r15c
  - Env:
    - Key: ANDROID_NDK_VERSION
      Value: ${ANDROID_NDK_VERSION}
    Name: env
  - Env:
    - Key: ANDROID_STANDALONE_NDK
      Value: ${ANDROID_STANDALONE_NDK_HOME}/${ANDROID_NDK_VERSION}
    Name: env
  - CmdLine:
    - "if [ ! -d ${ANDROID_STANDALONE_NDK} ] ; then \t\twget --output-document=android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip
      https://dl.google.com/android/repository/android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip
      \t\t&& unzip android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip \t\t&& rm -f
      android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip \t\t&& mv android-ndk-${ANDROID_NDK_VERSION}
      ${ANDROID_NDK_VERSION} \t\t; \tfi"
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -F ${ANDROID_STANDALONE_NDK}
    Name: run
    PrependShell: true
  - Key: ANDROID_STANDALONE_NDK_TOOLCHAIN_HOME
    Name: arg
    Value: /opt/android-standalone-ndk-toolchain/deprecated-headers
  - CmdLine:
    - mkdir -p ${ANDROID_STANDALONE_NDK_TOOLCHAIN_HOME}
    Name: run
    PrependShell: true
  - Env:
    - Key: MY_ANDROID_NDK_STANDALONE_TOOLCHAIN_HOME
      Value: ${ANDROID_STANDALONE_NDK_TOOLCHAIN_HOME}/${ANDROID_NDK_VERSION}
    Name: env
  - Name: workdir
    Path: ${ANDROID_STANDALONE_NDK}/build/tools
  - CmdLine:
    - pwd
    Name: run
    PrependShell: true
  - CmdLine:
    - ls
    Name: run
    PrependShell: true
  - Key: NDK_STANDALONE_TOOLCHAIN_TARGET__ARCH
    Name: arg
    Value: arm
  - Key: NDK_STANDALONE_TOOLCHAIN_TARGET__API
    Name: arg
    Value: "16"
  - Key: NDK_STANDALONE_TOOLCHAIN_TARGET
    Name: arg
    Value: ${MY_ANDROID_NDK_STANDALONE_TOOLCHAIN_HOME}/api-${NDK_STANDALONE_TOOLCHAIN_TARGET__API}/${NDK_STANDALONE_TOOLCHAIN_TARGET__ARCH}
  - CmdLine:
    - mkdir -p ${NDK_STANDALONE_TOOLCHAIN_TARGET}
    Name: run
    PrependShell: true
  - CmdLine:
    - "python make_standalone_toolchain.py \t--arch ${NDK_STANDALONE_TOOLCHAIN_TARGET__ARCH}
      \t--api ${NDK_STANDALONE_TOOLCHAIN_TARGET__API} \t--deprecated-headers \t--install-dir
      ${NDK_STANDALONE_TOOLCHAIN_TARGET} \t--force"
    Name: run
    PrependShell: true
  - CmdLine:
    - ls ${NDK_STANDALONE_TOOLCHAIN_TARGET}/bin
    Name: run
    PrependShell: true
  - Key: NDK_STANDALONE_TOOLCHAIN_TARGET__ARCH
    Name: arg
    Value: x86
  - Key: NDK_STANDALONE_TOOLCHAIN_TARGET__API
    Name: arg
    Value: "16"
  - Key: NDK_STANDALONE_TOOLCHAIN_TARGET
    Name: arg
    Value: ${MY_ANDROID_NDK_STANDALONE_TOOLCHAIN_HOME}/api-${NDK_STANDALONE_TOOLCHAIN_TARGET__API}/${NDK_STANDALONE_TOOLCHAIN_TARGET__ARCH}
  - CmdLine:
    - mkdir -p ${NDK_STANDALONE_TOOLCHAIN_TARGET}
    Name: run
    PrependShell: true
  - CmdLine:
    - "python make_standalone_toolchain.py \t--arch ${NDK_STANDALONE_TOOLCHAIN_TARGET__ARCH}
      \t--api ${NDK_STANDALONE_TOOLCHAIN_TARGET__API} \t--deprecated-headers \t--install-dir
      ${NDK_STANDALONE_TOOLCHAIN_TARGET} \t--force"
    Name: run
    PrependShell: true
  - CmdLine:
    - ls ${NDK_STANDALONE_TOOLCHAIN_TARGET}/bin
    Name: run
    PrependShell: true
  - Key: NDK_STANDALONE_TOOLCHAIN_TARGET__ARCH
    Name: arg
    Value: arm64
  - Key: NDK_STANDALONE_TOOLCHAIN_TARGET__API
    Name: arg
    Value: "21"
  - Key: NDK_STANDALONE_TOOLCHAIN_TARGET
    Name: arg
    Value: ${MY_ANDROID_NDK_STANDALONE_TOOLCHAIN_HOME}/api-${NDK_STANDALONE_TOOLCHAIN_TARGET__API}/${NDK_STANDALONE_TOOLCHAIN_TARGET__ARCH}
  - CmdLine:
    - mkdir -p ${NDK_STANDALONE_TOOLCHAIN_TARGET}
    Name: run
    PrependShell: true
  - CmdLine:
    - "python make_standalone_toolchain.py \t--arch ${NDK_STANDALONE_TOOLCHAIN_TARGET__ARCH}
      \t--api ${NDK_STANDALONE_TOOLCHAIN_TARGET__API} \t--deprecated-headers \t--install-dir
      ${NDK_STANDALONE_TOOLCHAIN_TARGET} \t--force"
    Name: run
    PrependShell: true
  - CmdLine:
    - ls ${NDK_STANDALONE_TOOLCHAIN_TARGET}/bin
    Name: run
    PrependShell: true
  - Key: NDK_STANDALONE_TOOLCHAIN_TARGET__ARCH
    Name: arg
    Value: x86_64
  - Key: NDK_STANDALONE_TOOLCHAIN_TARGET__API
    Name: arg
    Value: "21"
  - Key: NDK_STANDALONE_TOOLCHAIN_TARGET
    Name: arg
    Value: ${MY_ANDROID_NDK_STANDALONE_TOOLCHAIN_HOME}/api-${NDK_STANDALONE_TOOLCHAIN_TARGET__API}/${NDK_STANDALONE_TOOLCHAIN_TARGET__ARCH}
  - CmdLine:
    - mkdir -p ${NDK_STANDALONE_TOOLCHAIN_TARGET}
    Name: run
    PrependShell: true
  - CmdLine:
    - "python make_standalone_toolchain.py \t--arch ${NDK_STANDALONE_TOOLCHAIN_TARGET__ARCH}
      \t--api ${NDK_STANDALONE_TOOLCHAIN_TARGET__API} \t--deprecated-headers \t--install-dir
      ${NDK_STANDALONE_TOOLCHAIN_TARGET} \t--force"
    Name: run
    PrependShell: true
  - CmdLine:
    - ls ${NDK_STANDALONE_TOOLCHAIN_TARGET}/bin
    Name: run
    PrependShell: true
  - Key: GOLANG_HOME
    Name: arg
    Value: /opt/golang
  - CmdLine:
    - mkdir -p ${GOLANG_HOME}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${GOLANG_HOME}
  - Env:
    - Key: GOROOT
      Value: ${GOLANG_HOME}/go
    Name: env
  - Env:
    - Key: GOLANG_VERSION
      Value: "1.9"
    Name: env
  - CmdLine:
    - "if [ ! -d ${GOROOT} ] ; then \t\twget --output-document=go${GOLANG_VERSION}.linux-amd64.tar.gz
      https://dl.google.com/go/go${GOLANG_VERSION}.linux-amd64.tar.gz \t\t&& tar -xzf
      go${GOLANG_VERSION}.linux-amd64.tar.gz \t\t&& rm -f go${GOLANG_VERSION}.linux-amd64.tar.gz
      \t\t; \tfi"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:${GOROOT}/bin
    Name: env
  - CmdLine:
    - go version
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /usr/golang-workspace
    Name: env
  - CmdLine:
    - mkdir -p ${GOPATH}
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:${GOPATH}/bin
    Name: env
  - CmdLine:
    - git clone https://github.com/golang/mobile.git ${GOPATH}/src/golang.org/x/mobile
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${GOPATH}/src/golang.org/x/mobile
  - CmdLine:
    - git reset --hard 598bfe4b20d39a660581f014b68e60c5ad425336
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${GOPATH}
  - CmdLine:
    - go build golang.org/x/mobile/cmd/gomobile
    Name: run
    PrependShell: true
  - CmdLine:
    - go install golang.org/x/mobile/cmd/gomobile
    Name: run
    PrependShell: true
  - CmdLine:
    - gomobile version
    Name: run
    PrependShell: true
  - CmdLine:
    - gomobile init -ndk ${ANDROID_STANDALONE_NDK}
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -F ${GOPATH}/pkg/gomobile
    Name: run
    PrependShell: true
  From:
    Image: openjdk:8-jdk
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk
