{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "postgres:alpine",
      "SourceCode": "FROM postgres:alpine",
      "Platform": "",
      "From": {
        "Image": "postgres:alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/var/lib/pgcluster/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"#!/bin/sh\" \u003e /slave.sh \u0026\u0026     echo \"if [[ -z \\\"\\${REPLIC_USER}\\\" ]]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    export REPLIC_USER=replication\" \u003e\u003e /slave.sh \u0026\u0026     echo \"fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"if [[ -z \\\"\\${REPLIC_PASSWORD}\\\" ]]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    export REPLIC_PASSWORD=toto\" \u003e\u003e /slave.sh \u0026\u0026     echo \"fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"if [[ -z \\\"\\${SERVER_TYPE}\\\" ]]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    echo \\\"Env variable SERVER_TYPE isn't defined\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    exit 1\" \u003e\u003e /slave.sh \u0026\u0026     echo \"fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"if [[ -z \\\"\\${SLAVE_IP}\\\" ]]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    echo \\\"Env variable SLAVE_IP isn't defined\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    exit 1\" \u003e\u003e /slave.sh \u0026\u0026     echo \"fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"if [[ -z \\\"\\${SLAVE_PORT}\\\" ]]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    echo \\\"Env variable SLAVE_PORT isn't defined\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    exit 1\" \u003e\u003e /slave.sh \u0026\u0026     echo \"fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"if [[ -z \\\"\\${POSTGRES_DB}\\\" ]]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    export POSTGRES_DB=toto\" \u003e\u003e /slave.sh \u0026\u0026     echo \"fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"if [ \\$SERVER_TYPE = \\\"SLAVE\\\" ]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    if [[ -z \\\"\\${MASTER_IP}\\\" ]]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        echo \\\"Env variable MASTER_IP isn't defined\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        exit 1\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    if [[ -z \\\"\\${MASTER_PORT}\\\" ]]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        echo \\\"Env variable MASTER_PORT isn't defined\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        exit 1\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"if [ ! -s \\\"\\$PGDATA/PG_VERSION\\\" ]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    echo \\\"Initialize Version\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    mkdir -p ~/postgresql\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    echo \\\"*:*:*:\\$REPLIC_USER:\\$REPLIC_PASSWORD\\\" \u003e ~/.pgpass\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    chmod 600 ~/.pgpass\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    if [ \\$SERVER_TYPE = \\\"MASTER\\\" ]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        echo \\\"Try to init master from a slave\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        pg_basebackup -U \\$REPLIC_USER -h \\$SLAVE_IP -p \\$SLAVE_PORT -v -P -X fetch -D \\$PGDATA\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        if [ \\$? = 0 ]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            rm \\$PGDATA/recovery.conf\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            echo \\\"Init from slave OK, start server\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            rm -Rf ~/postgresql\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        else\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            echo \\\"Init from slave ERROR, create master from scratch\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            rm -Rf ~/postgresql\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            echo \\\"sed -i 's;#wal_level = replica;wal_level = replica ;g' $PGDATA/postgresql.conf\\\" \u003e /docker-entrypoint-initdb.d/master.sh\" \u003e\u003e /slave.sh  \u0026\u0026     echo \"            echo \\\"sed -i 's;#wal_keep_segments = 0;wal_keep_segments = 256;g' $PGDATA/postgresql.conf\\\" \u003e\u003e /docker-entrypoint-initdb.d/master.sh\" \u003e\u003e /slave.sh  \u0026\u0026     echo \"            echo \\\"sed -i 's;#hot_standby = on;hot_standby = on ;g' $PGDATA/postgresql.conf\\\" \u003e\u003e /docker-entrypoint-initdb.d/master.sh\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            echo \\\"psql -U \\$POSTGRES_USER -c \\\\\\\"CREATE USER \\$REPLIC_USER REPLICATION LOGIN CONNECTION LIMIT 1 ENCRYPTED PASSWORD '\\$REPLIC_PASSWORD';\\\\\\\" \\$POSTGRES_DB\\\" \u003e\u003e /docker-entrypoint-initdb.d/master.sh\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            echo \\\"psql -U \\$POSTGRES_USER -c \\\\\\\"ALTER ROLE \\$REPLIC_USER CONNECTION LIMIT 5;\\\\\\\" \\$POSTGRES_DB\\\" \u003e\u003e /docker-entrypoint-initdb.d/master.sh\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            echo \\\"echo \\\\\\\"host replication replication all md5\\\\\\\" \u003e\u003e $PGDATA/pg_hba.conf\\\" \u003e\u003e /docker-entrypoint-initdb.d/master.sh\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    else\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        echo \\\"Try to init slave from a master\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        pg_basebackup -U \\$REPLIC_USER -h \\$MASTER_IP -p \\$MASTER_PORT -v -P -X fetch -D \\$PGDATA\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        if [ \\$? = 0 ]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            echo \\\"Init from master OK, start server\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            rm -Rf ~/postgresql\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            echo \\\"standby_mode = 'on'\\\" \u003e \\$PGDATA/recovery.conf\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            echo \\\"primary_conninfo = 'user=''\\$REPLIC_USER'' password=''\\$REPLIC_PASSWORD'' host=''\\$MASTER_IP'' port=\\$MASTER_PORT sslmode=prefer sslcompression=1 target_session_attrs=any'\\\" \u003e\u003e \\$PGDATA/recovery.conf\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        else\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            echo \\\"Init from master ERROR, stop server\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            rm -Rf ~/postgresql\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            exit 1\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"else\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    echo \\\"Restore Version\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    if [ \\$SERVER_TYPE = \\\"MASTER\\\" ]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        echo \\\"Restore master from slave\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        mv \\$PGDATA \\$PGDATA.save\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        mkdir -p ~/postgresql\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        echo \\\"*:*:*:\\$REPLIC_USER:\\$REPLIC_PASSWORD\\\" \u003e ~/.pgpass\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        chmod 600 ~/.pgpass\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        pg_basebackup -U \\$REPLIC_USER -h \\$SLAVE_IP -p \\$SLAVE_PORT -v -P -X fetch -D \\$PGDATA\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        if [ \\$? = 0 ]; then\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            rm \\$PGDATA/recovery.conf\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            echo \\\"Restore from slave OK, start server\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            rm -Rf ~/postgresql\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            rm -Rf \\$PGDATA.save\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        else\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            echo \\\"Restore from slave ERROR, start master with current datas\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            rm -Rf ~/postgresql\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            rm -Rf \\$PGDATA\" \u003e\u003e /slave.sh \u0026\u0026     echo \"            mv \\$PGDATA.save \\$PGDATA\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    else\" \u003e\u003e /slave.sh \u0026\u0026     echo \"        echo \\\"Start slave server...\\\"\" \u003e\u003e /slave.sh \u0026\u0026     echo \"    fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"fi\" \u003e\u003e /slave.sh \u0026\u0026     echo \"docker-entrypoint.sh postgres\" \u003e\u003e /slave.sh \u0026\u0026     chmod +x /slave.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "\"/slave.sh\""
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}