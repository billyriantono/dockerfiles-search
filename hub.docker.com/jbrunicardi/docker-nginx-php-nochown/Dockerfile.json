{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jbrunicardi/docker-nginx:latest",
      "SourceCode": "FROM jbrunicardi/docker-nginx:latest",
      "Platform": "",
      "From": {
        "Image": "jbrunicardi/docker-nginx:latest"
      },
      "Commands": [
        {
          "Maintainer": "Jaime Brunicardi \u003cjbrunicardi@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            },
            {
              "Key": "NODE_VERSION",
              "Value": "6.3.0"
            },
            {
              "Key": "STATUS_PAGE_ALLOWED_IP",
              "Value": "127.0.0.1"
            },
            {
              "Key": "RUBY_VERSION",
              "Value": "2.3"
            },
            {
              "Key": "GIT_VERSION",
              "Value": "2.24.1"
            },
            {
              "Key": "PHP_MEMCACHED",
              "Value": "3.1.5"
            },
            {
              "Key": "PHP_REDIS",
              "Value": "5.1.1"
            },
            {
              "Key": "PHP_VERSION",
              "Value": "74"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files/config/install*",
            "/config/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files/etc/yum.repos.d/*",
            "/etc/yum.repos.d/"
          ]
        },
        {
          "CmdLine": [
            "yum update -y \u0026\u0026   echo \"Install some basic web-related tools...\" \u0026\u0026   yum install -y wget patch tar bzip2 unzip openssh-clients MariaDB-client \u0026\u0026   echo \"Install PHP 7.4 from Remi YUM repository...\" \u0026\u0026   rpm -Uvh http://rpms.remirepo.net/enterprise/remi-release-7.rpm \u0026\u0026   yum install -y     php${PHP_VERSION}-php     php${PHP_VERSION}-php-bcmath     php${PHP_VERSION}-php-cli     php${PHP_VERSION}-php-common     php${PHP_VERSION}-php-devel     php${PHP_VERSION}-php-fpm     php${PHP_VERSION}-php-gd     php${PHP_VERSION}-php-gmp     php${PHP_VERSION}-php-intl     php${PHP_VERSION}-php-json     php${PHP_VERSION}-php-mbstring     php${PHP_VERSION}-php-mcrypt     php${PHP_VERSION}-php-mysqlnd     php${PHP_VERSION}-php-opcache     php${PHP_VERSION}-php-pdo     php${PHP_VERSION}-php-pear     php${PHP_VERSION}-php-process     php${PHP_VERSION}-php-pspell     php${PHP_VERSION}-php-soap     php${PHP_VERSION}-php-xml     php${PHP_VERSION}-php-pecl-grpc     php${PHP_VERSION}-php-pecl-imagick     php${PHP_VERSION}-php-pecl-mysql     php${PHP_VERSION}-php-pecl-uploadprogress     php${PHP_VERSION}-php-pecl-uuid     php${PHP_VERSION}-php-pecl-zip     || true \u0026\u0026   echo \"Set PATH so it includes newest PHP and its aliases...\" \u0026\u0026   ln -sfF /opt/remi/php${PHP_VERSION}/enable /etc/profile.d/php${PHP_VERSION}-paths.sh \u0026\u0026   echo \"The above will set PATH when container starts... but not when php is used on container build time.\" \u0026\u0026   echo \"Therefore create symlinks in /usr/local/bin for all PHP tools...\" \u0026\u0026   ln -sfF /opt/remi/php${PHP_VERSION}/root/usr/bin/{pear,pecl,phar,php,php-cgi,php-config,phpize} /usr/local/bin/. \u0026\u0026   php --version \u0026\u0026   echo \"Move PHP config files from /etc/opt/remi/php${PHP_VERSION}/* to /etc/* \" \u0026\u0026   mv -f /etc/opt/remi/php${PHP_VERSION}/php.ini /etc/php.ini \u0026\u0026 ln -s /etc/php.ini /etc/opt/remi/php${PHP_VERSION}/php.ini \u0026\u0026   rm -rf /etc/php.d \u0026\u0026 mv /etc/opt/remi/php${PHP_VERSION}/php.d /etc/. \u0026\u0026 ln -s /etc/php.d /etc/opt/remi/php${PHP_VERSION}/php.d \u0026\u0026   echo 'PHP 7.3 installed.' \u0026\u0026   echo \"Install libs required to build some gem/npm packages (e.g. PhantomJS requires zlib-devel, libpng-devel)\" \u0026\u0026   yum install -y ImageMagick GraphicsMagick gcc gcc-c++ libffi-devel libpng-devel zlib-devel \u0026\u0026   echo \"Install common tools needed/useful during Web App development\" \u0026\u0026   echo \"Install/compile other software (Git, NodeJS, Ruby)\" \u0026\u0026   source /config/install.sh \u0026\u0026   echo \"Install nvm and NodeJS/npm\" \u0026\u0026   export PROFILE=/etc/profile.d/nvm.sh \u0026\u0026 touch $PROFILE \u0026\u0026   curl -sSL https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash \u0026\u0026   source $NVM_DIR/nvm.sh \u0026\u0026   nvm install $NODE_VERSION \u0026\u0026   nvm alias default $NODE_VERSION \u0026\u0026   nvm use default \u0026\u0026   echo \"Install common npm packages: grunt, gulp, bower, browser-sync\" \u0026\u0026   npm install -g gulp grunt-cli bower browser-sync \u0026\u0026   echo \"Disable SSH strict host key checking: needed to access git via SSH in non-interactive mode\" \u0026\u0026   echo -e \"StrictHostKeyChecking no\" \u003e\u003e /etc/ssh/ssh_config \u0026\u0026   echo \"Install Memcached, Redis PECL extensions from the source. Versions available in yum repo have dependency on igbinary which causes PHP seg faults in some PHP apps (e.g. Flow/Neos)...\" \u0026\u0026   echo \"Install PHP Memcached ext from the source...\" \u0026\u0026   yum install -y libmemcached-devel wget \u0026\u0026   cd /tmp/ \u0026\u0026   wget https://github.com/php-memcached-dev/php-memcached/archive/v${PHP_MEMCACHED}.tar.gz \u0026\u0026   tar -zxf v${PHP_MEMCACHED}.tar.gz --no-same-owner \u0026\u0026   cd php-memcached-${PHP_MEMCACHED} \u0026\u0026   phpize \u0026\u0026 ./configure \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) \u0026\u0026 make install \u0026\u0026   rm -rf /tmp/php-memcached-${PHP_MEMCACHED} \u0026\u0026 rm -rf /tmp/v${PHP_MEMCACHED}.tar.gz \u0026\u0026   echo \"extension=memcached.so\" \u003e /etc/php.d/50-memcached.ini \u0026\u0026   echo \"Install PHP Redis ext from the source...\" \u0026\u0026   cd /tmp/ \u0026\u0026   wget https://github.com/phpredis/phpredis/archive/${PHP_REDIS}.tar.gz \u0026\u0026   tar -zxf ${PHP_REDIS}.tar.gz --no-same-owner \u0026\u0026   cd phpredis-${PHP_REDIS} \u0026\u0026   phpize \u0026\u0026 ./configure \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) \u0026\u0026 make install \u0026\u0026   rm -rf /tmp/phpredis-${PHP_REDIS} \u0026\u0026 rm -rf /tmp/${PHP_REDIS}.tar.gz \u0026\u0026   echo \"extension=redis.so\" \u003e /etc/php.d/50-redis.ini \u0026\u0026   curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026   chown www /usr/local/bin/composer \u0026\u0026 composer --version \u0026\u0026   echo \"Clean YUM caches to minimise Docker image size... #\" \u0026\u0026   yum clean all \u0026\u0026 rm -rf /tmp/yum*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules"
            },
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}