{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "MODSECURITY_VERSION",
              "Value": "v3.0.0-rc1"
            },
            {
              "Key": "MODSECURITY_NGINX_VERSION",
              "Value": "master"
            },
            {
              "Key": "MODSECURITY_NGINX_COMMIT",
              "Value": "a2a5858d249222938c2f5e48087a922c63d7f9d8"
            },
            {
              "Key": "NGINSCRIPT_VERSION",
              "Value": "0.1.11"
            },
            {
              "Key": "NGX_BROTLI_VERSION",
              "Value": "master"
            },
            {
              "Key": "NGINX_VERSION",
              "Value": "1.13.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "adduser --system --disabled-password --home /var/cache/nginx --shell /sbin/nologin --group nginx     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y         inotify-tools         curl         libyajl-dev         libgeoip-dev         dh-autoreconf         libcurl4-gnutls-dev         git         wget         build-essential         libpcre3         libpcre3-dev         libssl-dev         libtool         autoconf         libxml2-dev         zlib1g-dev         libperl-dev     \u0026\u0026 cd /usr/src     \u0026\u0026 mkdir -p         /var/log/nginx         /var/cache/nginx     \u0026\u0026 git clone https://github.com/SpiderLabs/ModSecurity.git --branch ${MODSECURITY_VERSION} --single-branch     \u0026\u0026 cd ModSecurity     \u0026\u0026 sh build.sh     \u0026\u0026 git submodule update --init     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd ..     \u0026\u0026 git clone https://github.com/SpiderLabs/ModSecurity-nginx.git --branch ${MODSECURITY_NGINX_VERSION} --single-branch     \u0026\u0026 cd ModSecurity-nginx     \u0026\u0026 git checkout ${MODSECURITY_NGINX_COMMIT}     \u0026\u0026 cd ..     \u0026\u0026 git clone https://github.com/nginx/njs.git --branch ${NGINSCRIPT_VERSION} --single-branch     \u0026\u0026 git clone https://github.com/google/ngx_brotli.git --branch ${NGX_BROTLI_VERSION} --single-branch     \u0026\u0026 cd ngx_brotli     \u0026\u0026 git submodule update --init     \u0026\u0026 cd /usr/src     \u0026\u0026 curl -L https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz | tar xz     \u0026\u0026 cd nginx-${NGINX_VERSION}     \u0026\u0026 ./configure         --prefix=/etc/nginx         --sbin-path=/usr/sbin/nginx         --modules-path=/usr/lib/nginx/modules         --add-module=../ModSecurity-nginx         --add-dynamic-module=../ngx_brotli         --add-dynamic-module=../njs/nginx         --conf-path=/etc/nginx/nginx.conf         --error-log-path=/var/log/nginx/error.log         --http-log-path=/var/log/nginx/access.log         --pid-path=/var/run/nginx.pid         --lock-path=/var/run/nginx.lock         --http-client-body-temp-path=/var/cache/nginx/client_temp         --http-proxy-temp-path=/var/cache/nginx/proxy_temp         --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp         --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp         --http-scgi-temp-path=/var/cache/nginx/scgi_temp         --user=nginx         --group=nginx         --with-compat         --with-file-aio         --with-threads         --with-http_addition_module         --with-http_auth_request_module         --with-http_dav_module         --with-http_flv_module         --with-http_gunzip_module         --with-http_gzip_static_module         --with-http_mp4_module         --with-http_perl_module=dynamic         --with-http_random_index_module         --with-http_realip_module         --with-http_secure_link_module         --with-http_slice_module         --with-http_ssl_module         --with-http_stub_status_module         --with-http_sub_module         --with-http_v2_module         --with-mail         --with-mail_ssl_module         --with-stream         --with-stream_realip_module         --with-stream_ssl_module         --with-stream_ssl_preread_module         --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC'         --with-ld-opt='-Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie'     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 git clone https://github.com/SpiderLabs/owasp-modsecurity-crs.git     \u0026\u0026 cp -R ./owasp-modsecurity-crs/rules/ /etc/nginx/     \u0026\u0026 mv /etc/nginx/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example /etc/nginx/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf     \u0026\u0026 mv /etc/nginx/rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf.example /etc/nginx/rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf     \u0026\u0026 apt-get purge -y         build-essential         wget         git         curl     \u0026\u0026 apt-get clean     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 rm -rf /usr/src/*     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nginx",
            "-c",
            "/etc/nginx/nginx.conf",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}