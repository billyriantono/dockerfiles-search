MetaArgs: null
Stages:
- BaseName: python:2.7
  Commands:
  - CmdLine:
    - usermod -d /home www-data && chown www-data:www-data /home
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y         curl         git         libev4         libev-dev         libevent-dev         libxml2-dev         libxslt1-dev         zlib1g-dev         build-essential         libssl-dev         libffi-dev         python-dev     &&
      apt-get clean     && apt-get autoremove -y     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.4"
    Name: env
  - CmdLine:
    - "gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \    && curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\"   \t&& curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\"   \t&& gpg --verify /usr/local/bin/gosu.asc   \t&&
      rm /usr/local/bin/gosu.asc   \t&& chmod +x /usr/local/bin/gosu"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     56730D5401028683275BD23C23EFEFE93C4CFFFE   ;
      do     gpg --keyserver pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver
      keyserver.pgp.com --recv-keys "$key" ||     gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key" ;   done
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_ENV
      Value: production
    - Key: NODE_VERSION
      Value: 8.6.0
    Name: env
  - CmdLine:
    - ARCH= && dpkgArch="$(dpkg --print-architecture)"   && case "${dpkgArch##*-}"
      in     amd64) ARCH='x64';;     ppc64el) ARCH='ppc64le';;     *) echo "unsupported
      architecture"; exit 1 ;;   esac   && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"   &&
      curl -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep "
      node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c -   &&
      tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1   &&
      rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt   &&
      ln -s /usr/local/bin/node /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_VERSION
      Value: 1.1.0
    Name: env
  - CmdLine:
    - set -ex   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg
      --keyserver pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver keyserver.pgp.com
      --recv-keys "$key" ||     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys
      "$key" ;   done   && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   &&
      curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   &&
      gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   &&
      mkdir -p /opt/yarn   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1   &&
      ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg   &&
      rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: SOURCE_BRANCH
      Value: develop
    Name: env
  - Env:
    - Key: SOURCE_REPO
      Value: https://github.com/CenterForOpenScience/osf.io.git
    Name: env
  - Env:
    - Key: WHEELHOUSE
      Value: /home/.cache/wheelhouse
    Name: env
  - Env:
    - Key: DJANGO_SETTINGS_MODULE
      Value: api.base.settings
    Name: env
  - Env:
    - Key: UPDATE_CMD
      Value: '''invoke clean && invoke wheelhouse --release && invoke requirements
        --release && gosu www-data invoke assets && gosu www-data python manage.py
        collectstatic --noinput'''
    Name: env
  - CmdLine:
    - pip install -U pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install       invoke==0.13.0       uwsgi==2.0.10
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code
  - CmdLine:
    - git clone -b $SOURCE_BRANCH $SOURCE_REPO .     && cp website/settings/local-dist.py
      website/settings/local.py     && chown -R www-data:www-data /code
    Name: run
    PrependShell: true
  - CmdLine:
    - invoke wheelhouse --release
    Name: run
    PrependShell: true
  - CmdLine:
    - invoke requirements --release
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "8000"
  - Name: volume
    Volumes:
    - /code
  - CmdLine:
    - invoke
    - apiserver
    Name: cmd
    PrependShell: false
  From:
    Image: python:2.7
  Name: ""
  Platform: ""
  SourceCode: FROM python:2.7
