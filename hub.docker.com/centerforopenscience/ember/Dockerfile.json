{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.1",
      "SourceCode": "FROM ruby:2.1",
      "Platform": "",
      "From": {
        "Image": "ruby:2.1"
      },
      "Commands": [
        {
          "CmdLine": [
            "usermod -d /home www-data \u0026\u0026 chown www-data:www-data /home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         git     apt-transport-https     ca-certificates     \u0026\u0026 apt-get clean     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y         yarn     \u0026\u0026 apt-get clean     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 rm -rf /var/lib/apt/lists/*lists"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         curl     \u0026\u0026 gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"   \t\u0026\u0026 curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"   \t\u0026\u0026 gpg --verify /usr/local/bin/gosu.asc   \t\u0026\u0026 rm /usr/local/bin/gosu.asc   \t\u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 apt-get clean     \u0026\u0026 apt-get autoremove -y         curl     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 for key in       9554F04D7259F04124DE6B476D5A82AC7E37093B       94AE36675C464D64BAFA68DD7434390BDBE9B9C5       0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93       FD3A5288F042B6850C66B31F09FE44734EB7990E       71DCFD284A79C3B38668286BC97EC7A07EDE3FC1       DD8F2338BAE7501E3DD5AC78C273792F7D83545D       B9AE9905FFD7803F25714661B63B535A4C206CA9       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     ; do       gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "8.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "buildDeps='xz-utils curl'     \u0026\u0026 set -x     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\"     \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     \u0026\u0026 grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1     \u0026\u0026 rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt     \u0026\u0026 apt-get purge -y --auto-remove $buildDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PACKAGE_MANAGER_CMD",
              "Value": "'yarn --pure-lockfile --ignore-engines'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOURCE_BRANCH",
              "Value": "'\u003cCHANGE\u003e'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOURCE_REPO",
              "Value": "'https://github.com/CenterForOpenScience/\u003cCHANGE\u003e'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UPDATE_CMD",
              "Value": "'rm -rf dist \u0026\u0026 gosu www-data git submodule init \u0026\u0026 gosu www-data git submodule update \u0026\u0026 gosu www-data $PACKAGE_MANAGER_CMD'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WORKDIR",
              "Value": "'/\u003cCHANGE\u003e'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "gem install sass     \u0026\u0026 npm install -g bower     \u0026\u0026 npm install -g ember-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "gosu",
            "www-data",
            "ember",
            "build",
            "--env",
            "staging"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}