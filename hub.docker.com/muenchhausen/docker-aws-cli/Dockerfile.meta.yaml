MetaArgs: null
Stages:
- BaseName: docker
  Commands:
  - Labels:
    - Key: tools
      Value: '"docker-image, gitlab-aws, aws, helm, helm-charts, docker, gitlab, gitlab-ci,
        kubectl, s3, aws-iam-authenticator, ecr, bash, envsubst, alpine, curl, python3,
        pip3, git"'
    Name: label
  - Labels:
    - Key: version
      Value: '"3.0.0"'
    Name: label
  - Labels:
    - Key: description
      Value: '"An Alpine based docker image contains a good combination of commenly
        used tools to build, package as docker image, login and push to AWS ECR, AWS
        authentication and all Kuberentes staff.  tools included: Docker, AWS-CLI,
        Kubectl, Helm, Curl, Python, Envsubst, Python, Pip, Git, Bash, AWS-IAM-Auth."'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"eng.ahmed.srour@gmail.com"'
    Name: label
  - Env:
    - Key: AWS_CLI_VERSION
      Value: 1.16.214
    Name: env
  - Env:
    - Key: AWS_IAM_AUTHENTICATOR_VERSION
      Value: 1.13.7
    Name: env
  - Env:
    - Key: AWS_IAM_AUTHENTICATOR_DATE
      Value: "2019-06-11"
    Name: env
  - Env:
    - Key: KUBECTL_VERSION
      Value: 1.12.7
    Name: env
  - Env:
    - Key: KUBECTL_DATE
      Value: "2019-03-27"
    Name: env
  - Env:
    - Key: HELM_VERSION
      Value: 2.12.3
    Name: env
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.11.14
    Name: env
  - CmdLine:
    - apk --no-cache update &&     apk --no-cache add git curl jq make bash ca-certificates
      groff less gettext python3
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m ensurepip &&     rm -r /usr/lib/python*/ensurepip &&     pip3 install
      --upgrade pip setuptools &&     if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip
      ; fi &&     if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python;
      fi &&     rm -r /root/.cache
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 --no-cache-dir install awscli==${AWS_CLI_VERSION}
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://amazon-eks.s3-us-west-2.amazonaws.com/${AWS_IAM_AUTHENTICATOR_VERSION}/${AWS_IAM_AUTHENTICATOR_DATE}/bin/linux/amd64/aws-iam-authenticator
    - /usr/local/bin/aws-iam-authenticator
  - CmdLine:
    - echo "cc35059999bad461d463141132a0e81906da6c23953ccdac59629bb532c49c83  /usr/local/bin/aws-iam-authenticator"
      | sha256sum -c -
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/aws-iam-authenticator
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://amazon-eks.s3-us-west-2.amazonaws.com/${KUBECTL_VERSION}/${KUBECTL_DATE}/bin/linux/amd64/kubectl
    - /usr/local/bin/kubectl
  - CmdLine:
    - echo "fbfa5c8c43a25ae6595c3060364ceb53b02cab2fa4750f840830e523531553e6  /usr/local/bin/kubectl"
      | sha256sum -c -
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz
    - helm.tgz
  - CmdLine:
    - echo "3425a1b37954dabdf2ba37d5d8a0bd24a225bb8454a06f12b115c55907809107  helm.tgz"
      | sha256sum -c -
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -zxvf helm.tgz && mv linux-amd64/helm /usr/local/bin/helm && rm helm.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - helm init --client-only
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    - terraform.zip
  - CmdLine:
    - echo "9b9a4492738c69077b079e595f5b2a9ef1bc4e8fb5596610f69a6f322a8af8dd  terraform.zip"
      | sha256sum -c -
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip terraform.zip && mv terraform /usr/local/bin/terraform && rm terraform.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LOG
      Value: file
    Name: env
  - Name: workdir
    Path: /data
  From:
    Image: docker
  Name: ""
  Platform: ""
  SourceCode: FROM docker
