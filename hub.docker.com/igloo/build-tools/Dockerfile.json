{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:18.09.0",
      "SourceCode": "FROM docker:18.09.0",
      "Platform": "",
      "From": {
        "Image": "docker:18.09.0"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "KUBECTL_VERSION",
              "Value": "v1.12.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLOUD_SDK_VERSION",
              "Value": "226.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "\"v2.11.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache       bash       curl       ca-certificates       git       python       py-crcmod       py-pip       gettext       ncurses       libc6-compat       openssh-client       jq     \u0026\u0026     echo \"Install awscli...\" \u0026\u0026     pip install awscli \u0026\u0026     echo \"Install kubectl...\" \u0026\u0026     mkdir -p /usr/local/bin \u0026\u0026     curl -L https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl       -o /usr/local/bin/kubectl \u0026\u0026     chmod +x /usr/local/bin/kubectl \u0026\u0026     echo \"Install gcloud...\" \u0026\u0026     curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     mkdir -p /google-cloud-sdk \u0026\u0026     tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     ln -s /lib /lib64 \u0026\u0026     gcloud config set core/disable_usage_reporting true \u0026\u0026     gcloud config set component_manager/disable_update_check true \u0026\u0026     gcloud config set metrics/environment github_docker_image \u0026\u0026     gcloud --version \u0026\u0026     echo \"Install helm...\" \u0026\u0026     wget -q http://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm \u003e /usr/local/bin/helm     \u0026\u0026 chmod +x /usr/local/bin/helm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/*",
            "/usr/local/bin/"
          ]
        }
      ]
    }
  ]
}