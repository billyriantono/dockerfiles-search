{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Yannick Vanhaeren\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "set -eux;     {         echo 'Package: php*';         echo 'Pin: release *';         echo 'Pin-Priority: -1';     } \u003e /etc/apt/preferences.d/no-debian-php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHPIZE_DEPS",
              "Value": "autoconf     dpkg-dev     file     g++     gcc     libc-dev     make     pkg-config     re2c"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux;     apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         $PHPIZE_DEPS         ca-certificates         curl         librecode0         default-libmysqlclient-dev         libsqlite3-0         libxml2         libzip4         libedit2         libsodium18         xz-utils         libicu57         libbz2-1.0         libxslt1.1;     apt-get clean;     rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "/usr/local/etc/php"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux;     mkdir -p $PHP_INI_DIR/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_CFLAGS",
              "Value": "\"-fstack-protector-strong -fpic -fpie -O2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_CPPFLAGS",
              "Value": "\"$PHP_CFLAGS\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_LDFLAGS",
              "Value": "\"-Wl,-O1 -Wl,--hash-style=both -pie\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "7.2.18"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-php-source",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "set -eux;     cd /usr/src;     curl -SsL \"https://secure.php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\" -o php.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_BUILD_DEPS",
              "Value": "libcurl4-openssl-dev     libreadline6-dev     librecode-dev     libsqlite3-dev     libssl-dev     libxml2-dev     libicu-dev     libbz2-dev     libxslt-dev     libedit-dev     libzip-dev     zlib1g-dev     libsodium-dev"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux;     apt-get update \u0026\u0026 apt-get install -y $PHP_BUILD_DEPS --no-install-recommends;     sed -e 's/stretch/buster/g' /etc/apt/sources.list \u003e /etc/apt/sources.list.d/buster.list;     {         echo 'Package: *';         echo 'Pin: release n=buster';         echo 'Pin-Priority: -10';         echo;         echo 'Package: libargon2*';         echo 'Pin: release n=buster';         echo 'Pin-Priority: 990';     } \u003e /etc/apt/preferences.d/argon2-buster;     apt-get update;     apt-get install -y --no-install-recommends libargon2-dev;     apt-get clean;     rm -rf /var/lib/apt/lists/*;     export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\";     if [ ! -d /usr/include/curl ]; then         ln -sT /usr/include/x86_64-linux-gnu/curl /usr/local/include/curl;     fi;     docker-php-source extract;     cd /usr/src/php;     ./configure         --with-config-file-path=\"$PHP_INI_DIR\"         --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"         --enable-option-checking=fatal         --enable-fpm         --with-fpm-user=www-data         --with-fpm-group=www-data         --disable-cgi         --enable-cli         --with-bz2         --enable-ctype         --with-curl         --enable-dom         --enable-fileinfo         --enable-filter         --enable-ftp         --with-libedit         --with-mhash         --with-iconv         --enable-intl         --enable-json         --enable-libxml         --enable-mbstring         --enable-mbregex         --with-mysqli=mysqlnd         --enable-mysqlnd         --with-password-argon2         --with-sodium         --with-openssl         --enable-pdo         --with-pdo-mysql=mysqlnd         --with-pdo-sqlite         --enable-phar         --enable-posix         --with-recode         --enable-simplexml         --enable-soap         --enable-sockets         --with-sqlite3         --enable-tokenizer         --enable-xml         --with-xsl         --enable-zip         --with-zlib         --with-readline;     make -j\"$(nproc)\";     make install;     { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; };     make clean;     cp /usr/src/php/php.ini-production /usr/local/etc/php/php.ini;     docker-php-source delete;     apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $PHP_BUILD_DEPS;     pecl update-channels;     rm -rf /tmp/pear ~/.pearrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-php-*",
            "/usr/local/bin/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "set -eux;     cd /usr/local/etc;     if [ -d php-fpm.d ]; then         sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf \u003e /dev/null;         cp php-fpm.d/www.conf.default php-fpm.d/www.conf;     else         mkdir php-fpm.d;         cp php-fpm.conf.default php-fpm.d/www.conf;         {           echo '[global]';           echo 'include=etc/php-fpm.d/*.conf';         } | tee php-fpm.conf;     fi;     {         echo '[global]';         echo 'error_log = /proc/self/fd/2';         echo;         echo '[www]';         echo '; if we send this to /proc/self/fd/1, it never appears';         echo 'access.log = /proc/self/fd/2';         echo;         echo '; Ensure worker stdout and stderr are sent to the main error log.';         echo 'catch_workers_output = yes';     } | tee php-fpm.d/docker.conf;     {         echo '[global]';         echo 'daemonize = no';         echo;         echo '[www]';         echo 'listen = 9000';     } | tee php-fpm.d/zz-docker.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}