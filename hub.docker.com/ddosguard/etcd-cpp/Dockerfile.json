{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "buildpack-deps:stretch",
      "SourceCode": "FROM buildpack-deps:stretch AS builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "buildpack-deps:stretch"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apt-get update -qq     \u0026\u0026 apt-get install -y --no-install-recommends         libboost-all-dev         libcpprest-dev            cmake                      gcc                         catch                        golang                        git                            checkinstall                \u0026\u0026 mkdir /{export,app}     \u0026\u0026 rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/cache/apt/archives/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 git clone --recursive https://github.com/grpc/grpc.git || true     \u0026\u0026 cd grpc     \u0026\u0026 make -j4     \u0026\u0026 make install     \u0026\u0026 cd ../grpc/third_party/protobuf/     \u0026\u0026 make install     \u0026\u0026 rm -fr /tmp/* /var/tmp/* /app/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "PKGNAME",
          "Name": "arg",
          "Value": "etcd-lib"
        },
        {
          "Key": "PKGVERSION",
          "Name": "arg",
          "Value": "1.0"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 mkdir /export     \u0026\u0026 git clone --recursive https://github.com/nokia/etcd-cpp-apiv3 || true     \u0026\u0026 cd etcd-cpp-apiv3/proto     \u0026\u0026 protoc -I . --grpc_out=. --plugin=protoc-gen-grpc=`which grpc_cpp_plugin` ./rpc.proto     \u0026\u0026 protoc -I . --cpp_out=. ./*.proto     \u0026\u0026 cd ..     \u0026\u0026 mkdir build || true     \u0026\u0026 cd build     \u0026\u0026 cmake ..     \u0026\u0026 make -j4     \u0026\u0026 checkinstall -Dy        --pkgname=${PKGNAME}        --install=no        --pkggroup=library        --pkgversion=${PKGVERSION}        -A amd64        --maintainer=devops@ddos-guard.net        --pakdir=/app        --nodoc        --backup=no     \u0026\u0026 cd /app     \u0026\u0026 FILE=$(ls|grep deb)     \u0026\u0026 cp /app/$FILE /export    \u0026\u0026 rm -fr /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/export/",
            "/app/"
          ]
        }
      ]
    }
  ]
}