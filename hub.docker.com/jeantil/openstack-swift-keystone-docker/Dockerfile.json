{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive     apt-get update ;    DEBIAN_FRONTEND=noninteractive     apt-get install -y software-properties-common python-software-properties \u0026\u0026     add-apt-repository -y cloud-archive:pike \u0026\u0026     DEBIAN_FRONTEND=noninteractive     apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive     apt-get install -y keystone apache2 libapache2-mod-wsgi openstack"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "su -s /bin/sh -c \"keystone-manage db_sync\" keystone \u0026\u0026     keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone \u0026\u0026     keystone-manage credential_setup --keystone-user keystone --keystone-group keystone \u0026\u0026     keystone-manage bootstrap --bootstrap-password 7a04a385b907caca141f         --bootstrap-admin-url http://127.0.0.1:35357/v3/         --bootstrap-internal-url http://127.0.0.1:5000/v3/         --bootstrap-public-url http://127.0.0.1:5000/v3/         --bootstrap-region-id RegionOne \u0026\u0026     export OS_USERNAME=admin \u0026\u0026     export OS_PASSWORD=7a04a385b907caca141f \u0026\u0026     export OS_PROJECT_NAME=admin \u0026\u0026     export OS_USER_DOMAIN_NAME=Default \u0026\u0026     export OS_PROJECT_DOMAIN_NAME=Default \u0026\u0026     export OS_AUTH_URL=http://127.0.0.1:35357/v3 \u0026\u0026     export OS_IDENTITY_API_VERSION=3 \u0026\u0026     sed 's/# Global configuration/# Global configuration\\nServerName keystone/g' -i etc/apache2/apache2.conf \u0026\u0026     apachectl start \u0026\u0026     openstack project create --domain default --description \"Service Project\" service \u0026\u0026     openstack project create --domain default --description \"Test Project\" test \u0026\u0026     openstack user create --domain default --password demo demo \u0026\u0026     openstack role create user \u0026\u0026     openstack role add --project test --user demo user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive     apt-get install -y swift swift-proxy swift-account swift-container swift-object    python-swiftclient python-keystoneclient python-keystonemiddleware memcached xfsprogs rsync sudo \u0026\u0026     DEBIAN_FRONTEND=noninteractive     apt-get install -y curl httpie jq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "`#truncate -s 64MB /srv/swift-disk` \u0026\u0026     `#mkfs.xfs /srv/swift-disk` \u0026\u0026     `#echo '/srv/swift-disk /mnt/sdb1 xfs loop,noatime,nodiratime,nobarrier,logbufs=8 0 0'\u003e\u003e/etc/fstab ` \u0026\u0026     mkdir /mnt/sdb1 \u0026\u0026     `#mount /mnt/sdb1 \u0026\u0026`     mkdir /mnt/sdb1/1 \u0026\u0026     chown swift:swift /mnt/sdb1/* \u0026\u0026     ln -s /mnt/sdb1/1 /srv/1 \u0026\u0026     mkdir -p /srv/1/node/sdb1 /srv/1/node/sdb5 /var/run/swift \u0026\u0026     chown -R swift:swift /var/run/swift \u0026\u0026     chown -R swift:swift /srv/1/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/*.conf",
            "/etc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/swift/",
            "/etc/swift/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/rsyslog.d/",
            "/etc/rsyslog.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/swift/bashrc",
            "/swift/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/swift/bin/*",
            "/swift/bin/"
          ]
        },
        {
          "CmdLine": [
            "export OS_USERNAME=admin \u0026\u0026     export OS_PASSWORD=7a04a385b907caca141f \u0026\u0026     export OS_PROJECT_NAME=admin \u0026\u0026     export OS_USER_DOMAIN_NAME=Default \u0026\u0026     export OS_PROJECT_DOMAIN_NAME=Default \u0026\u0026     export OS_AUTH_URL=http://127.0.0.1:35357/v3 \u0026\u0026     export OS_IDENTITY_API_VERSION=3 \u0026\u0026     apachectl start \u0026\u0026     openstack user create --domain default --password fingertips swift \u0026\u0026     openstack role add --project service --user swift admin \u0026\u0026     openstack service create --name swift --description \"OpenStack Object Storage\" object-store \u0026\u0026     sed -i 's/RSYNC_ENABLE=false/RSYNC_ENABLE=true/' /etc/default/rsync \u0026\u0026     chmod -R +x /swift/bin/ \u0026\u0026     mkdir -p /swift/nodes \u0026\u0026     mkdir -p /var/log/swift \u0026\u0026     mkdir -p /var/run/swift \u0026\u0026     sed -i 's/\\$PrivDropToGroup syslog/\\$PrivDropToGroup adm/' /etc/rsyslog.conf \u0026\u0026     mkdir -p /var/log/swift/hourly \u0026\u0026     chown -R syslog.adm /var/log/swift \u0026\u0026     chmod -R g+w /var/log/swift \u0026\u0026     echo swift:fingertips | chpasswd \u0026\u0026     usermod -a -G sudo swift \u0026\u0026     echo %sudo ALL=NOPASSWD: ALL \u003e\u003e /etc/sudoers \u0026\u0026     ln -s /swift/nodes/1 /srv/1 \u0026\u0026     chown -R swift:swift /swift/nodes /etc/swift \u0026\u0026     sudo -u swift /swift/bin/remakerings"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "OS_USERNAME",
              "Value": "admin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OS_PASSWORD",
              "Value": "7a04a385b907caca141f"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OS_PROJECT_NAME",
              "Value": "admin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OS_USER_DOMAIN_NAME",
              "Value": "Default"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OS_PROJECT_DOMAIN_NAME",
              "Value": "Default"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OS_AUTH_URL",
              "Value": "http://127.0.0.1:35357/v3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OS_IDENTITY_API_VERSION",
              "Value": "3"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "35357"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        },
        {
          "CmdLine": [
            "/swift/bin/launch.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}