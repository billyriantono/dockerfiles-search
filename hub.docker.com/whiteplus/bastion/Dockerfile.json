{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "WHITEPLUS System \"sysadmin@wh-plus.com\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "/bin/cp -f /usr/share/zoneinfo/Asia/Tokyo /etc/localtime  \u0026\u0026 apt-get update 1\u003e /dev/null  \u0026\u0026 apt-get upgrade -y -q --no-install-recommends 1\u003e /dev/null  \u0026\u0026 apt-get install -y --no-install-recommends     python     curl     openssh-server     mysql-client     squid3     supervisor     1\u003e /dev/null  \u0026\u0026 apt-get clean 1\u003e /dev/null  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 curl -kL https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python 1\u003e /dev/null  \u0026\u0026 pip install redis 1\u003e /dev/null  \u0026\u0026 pip install Flask 1\u003e /dev/null"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files",
            "/tmp/files"
          ]
        },
        {
          "CmdLine": [
            "mkdir /var/run/sshd  \u0026\u0026 sed -i 's/PermitRootLogin without-password/PermitRootLogin no/' /etc/ssh/sshd_config  \u0026\u0026 sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd  \u0026\u0026 mkdir -p /root/.ssh  \u0026\u0026 chmod 700 /root/.ssh  \u0026\u0026 touch /var/run/bastion.default.authkeys  \u0026\u0026 chmod 600 /var/run/bastion.default.authkeys  \u0026\u0026 ln -fns /var/run/bastion.default.authkeys /root/.ssh/authorized_keys  \u0026\u0026 cp /tmp/files/supervisord.conf /etc/supervisor  \u0026\u0026 cp /tmp/files/api-server.py /var/run  \u0026\u0026 cp /etc/squid3/squid.conf /root/  \u0026\u0026 cp /tmp/files/squid.conf /etc/squid3/  \u0026\u0026 chown root:root /var/spool/squid3  \u0026\u0026 rm -rf /tmp/files"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NOTVISIBLE",
              "Value": "\"in users profile\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"export VISIBLE=now\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "3128",
            "80"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}