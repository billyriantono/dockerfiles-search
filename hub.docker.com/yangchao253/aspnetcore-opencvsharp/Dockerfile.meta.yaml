MetaArgs: null
Stages:
- As: build-native-env
  BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: OPENCV_VERSION
      Value: 4.2.0
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y     apt-transport-https     software-properties-common     wget     unzip     curl     ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     build-essential     cmake     git     gfortran     libjpeg8-dev     libpng-dev     software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"
      && apt-get update && apt-get install -y     libjasper1     libtiff-dev     libavcodec-dev     libavformat-dev     libswscale-dev     libdc1394-22-dev     libxine2-dev     libv4l-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/include/linux
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s -f ../libv4l1-videodev.h videodev.h
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ~
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     libgtk2.0-dev libtbb-dev qt5-default     libatlas-base-dev     libfaac-dev     libmp3lame-dev     libtheora-dev     libvorbis-dev     libxvidcore-dev     libopencore-amrnb-dev     libopencore-amrwb-dev     libavresample-dev     x264     v4l-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip &&     unzip
      ${OPENCV_VERSION}.zip &&     rm ${OPENCV_VERSION}.zip &&     mv opencv-${OPENCV_VERSION}
      opencv
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip
      &&     unzip ${OPENCV_VERSION}.zip &&     rm ${OPENCV_VERSION}.zip &&     mv
      opencv_contrib-${OPENCV_VERSION} opencv_contrib
    Name: run
    PrependShell: true
  - CmdLine:
    - cd opencv && mkdir build && cd build &&     cmake     -D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib/modules     -D
      CMAKE_BUILD_TYPE=RELEASE     -D BUILD_SHARED_LIBS=OFF     -D ENABLE_CXX11=ON     -D
      BUILD_EXAMPLES=OFF     -D BUILD_DOCS=OFF     -D BUILD_PERF_TESTS=OFF     -D
      BUILD_TESTS=OFF     -D BUILD_JAVA=OFF     -D BUILD_opencv_app=OFF     -D BUILD_opencv_java=OFF     -D
      BUILD_opencv_python=OFF     -D BUILD_opencv_ts=OFF     -D BUILD_opencv_js=OFF     -D
      WITH_GSTREAMER=OFF     -D OPENCV_ENABLE_NONFREE=ON     .. && make -j4 && make
      install && ldconfig
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - git clone https://github.com/shimat/opencvsharp.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd opencvsharp && git fetch --all --tags --prune
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opencvsharp/src
  - CmdLine:
    - mkdir /opencvsharp/make
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opencvsharp/make && cmake -D CMAKE_INSTALL_PREFIX=/opencvsharp/make /opencvsharp/src
      && make -j4 && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - ls /opencvsharp/make
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: build-native-env
  Platform: ""
  SourceCode: FROM ubuntu:18.04 AS build-native-env
- As: build-dotnet-env
  BaseName: mcr.microsoft.com/dotnet/core/sdk:3.0
  Commands:
  - Chown: ""
    From: build-native-env
    Name: copy
    SourcesAndDest:
    - /opencvsharp/make/OpenCvSharpExtern/libOpenCvSharpExtern.so
    - ./
  - CmdLine:
    - git clone https://github.com/shimat/opencvsharp.git
    Name: run
    PrependShell: true
  - CmdLine:
    - pwd
    Name: run
    PrependShell: true
  - CmdLine:
    - ls
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opencvsharp/src/OpenCvSharp
  - CmdLine:
    - cd /opencvsharp/src/OpenCvSharp
    Name: run
    PrependShell: true
  - CmdLine:
    - dotnet build -c Release -f netstandard2.0
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opencvsharp/src/OpenCvSharp.Blob
  - CmdLine:
    - cd /opencvsharp/src/OpenCvSharp.Blob
    Name: run
    PrependShell: true
  - CmdLine:
    - dotnet build -c Release -f netstandard2.0
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opencvsharp/src/OpenCvSharp.Extensions
  - CmdLine:
    - cd /opencvsharp/src/OpenCvSharp.Extensions
    Name: run
    PrependShell: true
  - CmdLine:
    - dotnet build -c Release -f netstandard2.0
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opencvsharp/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opencvsharp/build
  - CmdLine:
    - cp /libOpenCvSharpExtern.so .
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /opencvsharp/src/OpenCvSharp/bin/Release/netstandard2.0/* .
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /opencvsharp/src/OpenCvSharp.Blob/bin/Release/netstandard2.0/* .
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /opencvsharp/src/OpenCvSharp.Extensions/bin/Release/netstandard2.0/* .
    Name: run
    PrependShell: true
  - CmdLine:
    - pwd
    Name: run
    PrependShell: true
  - CmdLine:
    - ls
    Name: run
    PrependShell: true
  From:
    Image: mcr.microsoft.com/dotnet/core/sdk:3.0
  Name: build-dotnet-env
  Platform: ""
  SourceCode: FROM mcr.microsoft.com/dotnet/core/sdk:3.0 AS build-dotnet-env
- BaseName: mcr.microsoft.com/dotnet/core/aspnet:3.1.0-bionic
  Commands:
  - Name: workdir
    Path: /app
  - Chown: ""
    From: build-dotnet-env
    Name: copy
    SourcesAndDest:
    - /opencvsharp/build
    - ./
  - CmdLine:
    - pwd
    Name: run
    PrependShell: true
  - CmdLine:
    - ls
    Name: run
    PrependShell: true
  From:
    Image: mcr.microsoft.com/dotnet/core/aspnet:3.1.0-bionic
  Name: ""
  Platform: ""
  SourceCode: FROM mcr.microsoft.com/dotnet/core/aspnet:3.1.0-bionic
