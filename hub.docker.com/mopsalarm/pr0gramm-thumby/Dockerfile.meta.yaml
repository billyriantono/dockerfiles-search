MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.12.6-alpine3.9
  Commands:
  - CmdLine:
    - apk add --no-cache git
    Name: run
    PrependShell: true
  - Env:
    - Key: GO111MODULE
      Value: "on"
    Name: env
  - Env:
    - Key: PACKAGE
      Value: github.com/mopsalarm/go-pr0gramm-thumbnail
    Name: env
  - Name: workdir
    Path: $GOPATH/src/$PACKAGE/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go.mod
    - go.sum
    - ./
  - CmdLine:
    - go mod download
    Name: run
    PrependShell: true
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - go build -v -ldflags="-s -w" -o /service .
    Name: run
    PrependShell: true
  From:
    Image: golang:1.12.6-alpine3.9
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.12.6-alpine3.9 as builder
- BaseName: alpine:3.9
  Commands:
  - Name: expose
    Ports:
    - "8080"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64
    - /dumb-init
  - CmdLine:
    - chmod a+x /dumb-init
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache tar xz curl  && URL=https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz  &&
      curl $URL | xz -d | tar -x -C /usr/bin --strip-components=1  && rm -f /usr/bin/ffmpeg-10bit
      /usr/bin/ffserver  && apk del xz curl tar
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-update ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /service
    - /go-pr0gramm-thumbnail
  - CmdLine:
    - /dumb-init
    - /go-pr0gramm-thumbnail
    - --path=/tmp
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.9
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.9
