MetaArgs: null
Stages:
- BaseName: alpine:3.3
  Commands:
  - Maintainer: kost, https://github.com/kost/docker-alpine
    Name: maintainer
  - Env:
    - Key: KIBANA_VERSION
      Value: 4.5.0
    Name: env
  - Env:
    - Key: KIBANA_HOME
      Value: /opt/kibana
    Name: env
  - CmdLine:
    - apk add --update ca-certificates wget nodejs     && wget -O /tmp/kibana-$KIBANA_VERSION.tar.gz
      https://download.elastic.co/kibana/kibana/kibana-$KIBANA_VERSION-linux-x64.tar.gz     &&
      mkdir -p /opt && tar -xvzf /tmp/kibana-$KIBANA_VERSION.tar.gz -C /opt/     &&
      ln -s /opt/kibana-$KIBANA_VERSION-linux-x64 $KIBANA_HOME     && rm -rf /tmp/*.tar.gz
      /var/cache/apk/* $KIBANA_HOME/node/     && mkdir -p $KIBANA_HOME/node/bin/     &&
      chown -R nobody:nobody $KIBANA_HOME /opt/$PKG_NAME     && ln -s $(which node)
      $KIBANA_HOME/node/bin/node
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/kibana.yml
    - $KIBANA_HOME/config/kibana.yml
  - Name: expose
    Ports:
    - "5601"
  - Name: user
    User: nobody
  - Name: workdir
    Path: '["/opt/kibana"]'
  - CmdLine:
    - /opt/kibana/bin/kibana
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.3
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.3
