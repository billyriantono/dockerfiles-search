{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "maven:alpine",
      "SourceCode": "FROM maven:alpine",
      "Platform": "",
      "From": {
        "Image": "maven:alpine"
      },
      "Commands": [
        {
          "Maintainer": "Swire Chen \u003cidoop@msn.cn\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "1.5.1"
            },
            {
              "Key": "PORTAL_PORT",
              "Value": "8070"
            },
            {
              "Key": "DEV_ADMIN_PORT",
              "Value": "8090"
            },
            {
              "Key": "FAT_ADMIN_PORT",
              "Value": "8091"
            },
            {
              "Key": "UAT_ADMIN_PORT",
              "Value": "8092"
            },
            {
              "Key": "PRO_ADMIN_PORT",
              "Value": "8093"
            },
            {
              "Key": "DEV_CONFIG_PORT",
              "Value": "8080"
            },
            {
              "Key": "FAT_CONFIG_PORT",
              "Value": "8081"
            },
            {
              "Key": "UAT_CONFIG_PORT",
              "Value": "8082"
            },
            {
              "Key": "PRO_CONFIG_PORT",
              "Value": "8083"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "APOLLO_URL",
          "Name": "arg",
          "Value": "https://github.com/ctripcorp/apollo/archive/v${VERSION}.tar.gz"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint",
            "/usr/local/bin/docker-entrypoint"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "healthcheck",
            "/usr/local/bin/healthcheck"
          ]
        },
        {
          "CmdLine": [
            "wget ${APOLLO_URL} -O apollo.tar.gz \u0026\u0026 tar -zxf apollo.tar.gz \u0026\u0026     rm apollo.tar.gz \u0026\u0026 test -e apollo-${VERSION} \u0026\u0026     sed -e \"s/db_password=/db_password=toor/g\"          -e \"s/^dev_meta.*/dev_meta=http:\\/\\/localhost:${DEV_CONFIG_PORT}/\"         -e \"s/^fat_meta.*/fat_meta=http:\\/\\/localhost:${FAT_CONFIG_PORT}/\"         -e \"s/^uat_meta.*/uat_meta=http:\\/\\/localhost:${UAT_CONFIG_PORT}/\"         -e \"s/^pro_meta.*/pro_meta=http:\\/\\/localhost:${PRO_CONFIG_PORT}/\" -i apollo-${VERSION}/scripts/build.sh \u0026\u0026     bash apollo-${VERSION}/scripts/build.sh \u0026\u0026 rm -rf /root/.m2 \u0026\u0026     mkdir /apollo-admin/dev /apollo-admin/fat /apollo-admin/uat /apollo-admin/pro /apollo-config/dev /apollo-config/fat /apollo-config/uat /apollo-config/pro /apollo-portal -p \u0026\u0026     mv apollo-${VERSION}/apollo-portal/target/apollo-portal-${VERSION}-github.zip         apollo-${VERSION}/apollo-adminservice/target/apollo-adminservice-${VERSION}-github.zip        apollo-${VERSION}/apollo-configservice/target/apollo-configservice-${VERSION}-github.zip / \u0026\u0026     rm -rf apollo-${VERSION} \u0026\u0026     chmod +x /usr/local/bin/docker-entrypoint /usr/local/bin/healthcheck"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Health": {
            "Interval": 300000000000,
            "Test": [
              "CMD-SHELL",
              "bash /usr/local/bin/healthcheck"
            ],
            "Timeout": 3000000000
          },
          "Name": "healthcheck"
        },
        {
          "Name": "expose",
          "Ports": [
            "8070",
            "8080",
            "8081",
            "8082",
            "8083",
            "8090",
            "8091",
            "8092",
            "8093"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}