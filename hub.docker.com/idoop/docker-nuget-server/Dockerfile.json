{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nginx",
      "SourceCode": "FROM nginx",
      "Platform": "",
      "From": {
        "Image": "nginx"
      },
      "Commands": [
        {
          "Maintainer": "Swire Chen \u003cidoop@msn.cn\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "APP_BASE",
              "Value": "/var/www/simple-nuget-server"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_SIZE",
              "Value": "20M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_WORKER_PROCESSES",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEFAULT_WORKER_CONNECTIONS",
              "Value": "65535"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends --no-install-suggests     ca-certificates curl unzip php php-fpm     php-sqlite3 php-zip php-xml \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     curl -sSL https://github.com/Daniel15/simple-nuget-server/archive/master.zip -o master.zip \u0026\u0026     unzip master.zip -d /var/www \u0026\u0026 mv /var/www/simple-nuget-server-master $APP_BASE \u0026\u0026     chown www-data:www-data $APP_BASE/db $APP_BASE/packagefiles \u0026\u0026     chmod 0770 $APP_BASE/db $APP_BASE/packagefiles \u0026\u0026     rm -rf master.zip \u0026\u0026 rm /etc/nginx/conf.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf.example",
            "/etc/nginx/conf.d/nuget.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint",
            "/bin/docker-entrypoint"
          ]
        },
        {
          "CmdLine": [
            "sed -i -e \"s/post_max_size.*/post_max_size = $DEFAULT_SIZE/\" /etc/php/7.0/fpm/php.ini \u0026\u0026     sed -i -e \"s/upload_max_filesize.*/upload_max_filesize = $DEFAULT_SIZE/\" /etc/php/7.0/fpm/php.ini \u0026\u0026     sed -i -e \"s/;pm.max_requests.*$/pm.max_requests = 10240/\" /etc/php/7.0/fpm/pool.d/www.conf \u0026\u0026     sed -i -e \"/server_name.*$/a\\    client_max_body_size $DEFAULT_SIZE;\" /etc/nginx/conf.d/nuget.conf \u0026\u0026     sed -i -e \"s/worker_processes.*$/worker_processes  $DEFAULT_WORKER_PROCESSES;/\" /etc/nginx/nginx.conf \u0026\u0026     sed -i -e \"s/worker_connections.*$/    worker_connections  $DEFAULT_WORKER_CONNECTIONS ;/\" /etc/nginx/nginx.conf \u0026\u0026     sed -i -e \"/worker_connections.*$/a\\    use epoll;\" /etc/nginx/nginx.conf \u0026\u0026     sed -i -e \"s/keepalive_timeout.*$/    keepalive_timeout  5;/\" /etc/nginx/nginx.conf \u0026\u0026     cd /etc/ \u0026\u0026 tar -cf /tmp/nginx.tar nginx \u0026\u0026     usermod -G www-data nginx \u0026\u0026     chmod +x /bin/docker-entrypoint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "$APP_BASE/db",
            "$APP_BASE/packagefiles"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80-60000"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}