{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "mcpayment/ubuntu1404-java8",
      "SourceCode": "FROM mcpayment/ubuntu1404-java8",
      "Platform": "",
      "From": {
        "Image": "mcpayment/ubuntu1404-java8"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y                               ca-certificates                               firefox                               libpq-dev                               qt5-default                               libqt5webkit5-dev                               gstreamer1.0-plugins-base                               gstreamer1.0-tools                               gstreamer1.0-x                               libsasl2-2                               libsasl2-modules                               ntp                               software-properties-common                               xvfb     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ntpd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y                               autoconf                               automake                               bison                               curl                               gawk                               g++                               jq                               libffi-dev                               libgdbm-dev                               libgmp-dev                               libncurses5-dev                               libreadline6-dev                               libsqlite3-dev                               libssl-dev                               libtool                               libyaml-dev                               make                               pkg-config                               postgresql-client                               python-setuptools                               python-pip                               ruby-execjs                               sqlite3                               unzip                               zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://github.com/mozilla/geckodriver/releases/download/v0.20.1/geckodriver-v0.20.1-linux64.tar.gz -O -L \u0026\u0026     tar xvzf geckodriver-v0.20.1-linux64.tar.gz \u0026\u0026     mv geckodriver /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install s3cmd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \u0026\u0026     apt-get install git-lfs -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ulimit -n 2048"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -d ${HOME} -m jenkins \u0026\u0026     usermod -s /bin/bash jenkins \u0026\u0026     usermod -a -G sudo jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "JENKINS_HOME",
          "Name": "arg",
          "Value": "/var/lib/jenkins"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "${JENKINS_HOME}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "${HOME}"
          ]
        },
        {
          "CmdLine": [
            "chown jenkins:jenkins ${HOME}/run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod a+x ${HOME}/run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "try_fetch_backup.sh",
            "${HOME}"
          ]
        },
        {
          "CmdLine": [
            "chown jenkins:jenkins ${HOME}/try_fetch_backup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod a+x ${HOME}/try_fetch_backup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BACKUP_DIR",
              "Value": "/data/backup"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $BACKUP_DIR \u0026\u0026 chmod a+w $BACKUP_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "S3_BACKUP_BUCKET",
          "Name": "arg",
          "Value": "backup.example.com"
        },
        {
          "Env": [
            {
              "Key": "S3_BACKUP_BUCKET",
              "Value": "${S3_BACKUP_BUCKET}"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "S3_BACKUP_PATH",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Env": [
            {
              "Key": "S3_BACKUP_PATH",
              "Value": "${S3_BACKUP_PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "$HOME/.nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "7.10.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd \u0026\u0026 curl https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash     \u0026\u0026 . $NVM_DIR/nvm.sh     \u0026\u0026 nvm install $NODE_VERSION     \u0026\u0026 ln -s $(which node) $(which node)js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB \u0026\u0026     curl -sSL https://get.rvm.io | bash -s stable --autolibs=read-fail"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -l -c \"rvm install ruby-2.4.4\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '[[ -s \"/home/jenkins/.rvm/scripts/rvm\" ]] \u0026\u0026 source \"/home/jenkins/.rvm/scripts/rvm\"' \u003e\u003e /home/jenkins/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd $HOME \u0026\u0026     curl http://mirrors.jenkins-ci.org/war/latest/jenkins.war -O -L"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "$JENKINS_HOME"
          ]
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "expose",
          "Ports": [
            "5490",
            "8080"
          ]
        },
        {
          "CmdLine": [
            "$HOME/run.sh $JENKINS_HOME"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}