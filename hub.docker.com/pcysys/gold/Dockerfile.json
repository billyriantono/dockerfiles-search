{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "linuxkonsult/kali-metasploit",
      "SourceCode": "FROM linuxkonsult/kali-metasploit",
      "Platform": "",
      "From": {
        "Image": "linuxkonsult/kali-metasploit"
      },
      "Commands": [
        {
          "Maintainer": "Automat-IT Team \u003cziv.kashtan@automat-it.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \u0026\u0026     locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "unset LANGUAGE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://http.kali.org/kali kali-rolling main contrib non-free\" \u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb-src http://http.kali.org/kali kali-rolling main contrib non-free\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv ED444FF07D8D0BF6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y psmisc apache2 supervisor python-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nano vim openssh-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y apt-transport-https dirmngr"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install Crypto"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'root:password' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/#PermitRootLogin yes/PermitRootLogin yes/' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NOTVISIBLE",
              "Value": "\"in users profile\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"export VISIBLE=now\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/Listen 80/Listen 8090/' /etc/apache2/ports.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "apt-get install -y scons"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg --configure -a \u0026\u0026 apt-get install -y --allow-unauthenticated --upgrade metasploit-framework"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://download.mono-project.com/repo/debian stable-stretch main\" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s \"https://keyserver.ubuntu.com/pks/lookup?op=get\u0026search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\" | sudo apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --allow-unauthenticated mono-complete mono-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pycrypto"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pyscrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install paramiko"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y mingw-w64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://cmake.org/files/v3.13/cmake-3.13.0-rc3-Linux-x86_64.sh -O /tmp/cmake-3.13.0-rc3-Linux-x86_64.sh \u0026\u0026 chmod +x /tmp/cmake-3.13.0-rc3-Linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/tmp/cmake-3.13.0-rc3-Linux-x86_64.sh --skip-license --prefix=/usr --exclude-subdir"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "olympusFiles/*",
            "/var/www/html/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "hephaestus/",
            "/root/hephaestus/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "hostrecon/",
            "/root/hostrecon/"
          ]
        },
        {
          "CmdLine": [
            "rm -rf /root/hephaestus/.git* /root/hephaestus/bitbucket-pipelines.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /root/hostrecon/.git*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /root/hephaestus/Resources/vulcan/.git*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "boost_1_68_0",
            "/root/hephaestus/Resources/vulcan/boost/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "openssl-1.1.1",
            "/root/hephaestus/Resources/vulcan/openssl-1.1.1/"
          ]
        },
        {
          "CmdLine": [
            "cd /root/hephaestus/Resources/vulcan/openssl-1.1.1/ \u0026\u0026 ../mingw ./Configure mingw no-asm --prefix=/usr/i686-w64-mingw32/includes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/hephaestus/Resources/vulcan/openssl-1.1.1/ \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 make clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/hephaestus/Resources/vulcan/openssl-1.1.1/ \u0026\u0026 ../mingw64 ./Configure mingw64 no-asm --prefix=/usr/x86_64-w64-mingw32/includes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/hephaestus/Resources/vulcan/openssl-1.1.1/ \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /root/hephaestus/Resources/vulcan/openssl-1.1.1/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "CmdLine": [
            "chmod +x *"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "pcysys_run_commands.rb",
            "/usr/share/metasploit-framework/modules/post/multi/gather/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22",
            "55552"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}