{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage:0.9.22",
      "SourceCode": "FROM phusion/baseimage:0.9.22",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage:0.9.22"
      },
      "Commands": [
        {
          "Maintainer": "Nicholas Evans \u003cnevans@410labs.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "CONTAINER_TIMEZONE",
          "Name": "arg",
          "Value": "\"America/New_York\""
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex;   apt-get -y update;   apt-get -y upgrade;   apt-get -y install     build-essential     expect     libcairo2     libcairo2-dev     libffi-dev     pkg-config     python-cairo     python-dev     python-flup     python-ldap     python-pip     python-rrdtool     sqlite3   ;   rm -rf /var/lib/apt/lists/*;   if [ ! -z \"${CONTAINER_TIMEZONE}\" ]; then     ln -sf /usr/share/zoneinfo/$CONTAINER_TIMEZONE /etc/localtime \u0026\u0026     dpkg-reconfigure -f noninteractive tzdata;   fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "\"/opt/graphite/lib/:/opt/graphite/webapp/\""
            }
          ],
          "Name": "env"
        },
        {
          "Key": "django_version",
          "Name": "arg",
          "Value": "1.8.18"
        },
        {
          "Key": "gunicorn_version",
          "Name": "arg",
          "Value": "19.7.1"
        },
        {
          "Key": "version",
          "Name": "arg",
          "Value": "1.1.1"
        },
        {
          "Key": "whisper_version",
          "Name": "arg",
          "Value": "${version}"
        },
        {
          "Key": "carbon_version",
          "Name": "arg",
          "Value": "${version}"
        },
        {
          "Key": "graphite_version",
          "Name": "arg",
          "Value": "${version}"
        },
        {
          "Key": "graphite_github",
          "Name": "arg",
          "Value": "https://github.com/graphite-project"
        },
        {
          "CmdLine": [
            "set -ex;   pip install --upgrade pip;   pip install django==$django_version;   pip install gunicorn==$gunicorn_version;   mkdir -p /opt/graphite;   pip install $graphite_github/whisper/tarball/$whisper_version;   pip install $graphite_github/carbon/tarball/$carbon_version;   pip install $graphite_github/graphite-web/tarball/$graphite_version;   cd /opt/graphite/conf;   rename 's/\\.conf\\.example$/\\.conf/' *.conf.example"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/opt/graphite/conf/*.conf",
            "/opt/graphite/conf/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/opt/graphite/webapp/graphite/local_settings.py",
            "/opt/graphite/webapp/graphite/local_settings.py"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/usr/local/bin/django_admin_init.exp",
            "/usr/local/bin/django_admin_init.exp"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/usr/local/bin/manage.sh",
            "/usr/local/bin/manage.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/graphite/webapp"
        },
        {
          "CmdLine": [
            "set -ex;   mkdir -p /var/log/graphite/;   django-admin.py collectstatic --noinput --settings=graphite.settings;   django_admin_init.exp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/graphite/storage",
            "/var/log"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/graphite"
        },
        {
          "CmdLine": [
            "gunicorn wsgi --workers=4 --bind=0.0.0.0:8080 --preload   --log-file=- --access-logfile=-   --limit-request-line 0   --pythonpath=/opt/graphite/webapp/graphite"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}