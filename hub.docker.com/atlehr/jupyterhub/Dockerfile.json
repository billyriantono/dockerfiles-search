{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jupyter/base-notebook:27ba57364579",
      "SourceCode": "FROM jupyter/base-notebook:27ba57364579",
      "Platform": "",
      "From": {
        "Image": "jupyter/base-notebook:27ba57364579"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Jupyter Project \u003cjupyter@googlegroups.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -yq --no-install-recommends libav-tools    build-essential     emacs     git     inkscape     jed     libsm6     libxext-dev     libxrender1     lmodern     pandoc     python-dev     texlive-fonts-extra     texlive-fonts-recommended     texlive-generic-recommended     texlive-latex-base     texlive-latex-extra     texlive-xetex     vim     unzip     \u0026\u0026 apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i /usr/local/bin/start.sh -e 's,# Handle username change,chown 1000:1000 /home/$NB_USER \\n # Handle username change,'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cat /usr/local/bin/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "CmdLine": [
            "mkdir /home/$NB_USER/tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "base-env.yml",
            "/home/$NB_USER/tmp/base-env.yml"
          ]
        },
        {
          "CmdLine": [
            "conda config --remove channels defaults"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda env update --name root --file /home/$NB_USER/tmp/base-env.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /home/$NB_USER/tmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/oceanhackweek/ohw2018_tutorials.git \u0026\u0026     cd ohw2018_tutorials \u0026\u0026     conda env update --name root --file day2/ioos_data_access/environment.yml \u0026\u0026     conda env update --name root --file day2/ooi_data_access/environment.yml \u0026\u0026     conda env update --name root --file day3/geospatial_and_mapping_tools/environment.yml \u0026\u0026     conda env update --name root --file day3/synoptics/environment.yml \u0026\u0026     conda env update --name root --file day4/data-mining/environment.yml \u0026\u0026     conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /home/$NB_USER/ohw2018_tutorials"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/lsetiawan/yodapy.git \u0026\u0026     cd yodapy \u0026\u0026     conda create -n yodapy -c conda-forge --yes python=3.6 --file requirements.txt --file requirements-dev.txt \u0026\u0026     source activate yodapy \u0026\u0026     pip install -e . \u0026\u0026 RUN rm -rf /home/$NB_USER/yodapy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension enable --py widgetsnbextension --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension enable --py ipyleaflet --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter serverextension enable --py nbgitpuller --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install @jupyter-widgets/jupyterlab-manager@^0.31.0 \u0026\u0026     npm cache clean \u0026\u0026     rm -rf $CONDA_DIR/share/jupyter/lab/staging \u0026\u0026     fix-permissions $CONDA_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     git clone https://github.com/PAIR-code/facets.git \u0026\u0026     cd facets \u0026\u0026     jupyter nbextension install facets-dist/ --sys-prefix \u0026\u0026     rm -rf facets \u0026\u0026     fix-permissions $CONDA_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XDG_CACHE_HOME",
              "Value": "/home/$NB_USER/.cache/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        }
      ]
    }
  ]
}