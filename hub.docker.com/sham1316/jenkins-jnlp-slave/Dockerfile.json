{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkinsci/jnlp-slave",
      "SourceCode": "FROM jenkinsci/jnlp-slave",
      "Platform": "",
      "From": {
        "Image": "jenkinsci/jnlp-slave"
      },
      "Commands": [
        {
          "Maintainer": "Alexey Pishchulin \u003csham1316@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "1.20.1"
            },
            {
              "Key": "NODE_VERSION",
              "Value": "10.16.3"
            },
            {
              "Key": "NVM_VERSION",
              "Value": "v0.35.1"
            },
            {
              "Key": "K8SVERSION",
              "Value": "v1.11.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://get.docker.com -o get-docker.sh \t\u0026\u0026 sh get-docker.sh \t\u0026\u0026 rm get-docker.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://storage.googleapis.com/kubernetes-release/release/${K8SVERSION}/bin/linux/amd64/kubectl \t\u0026\u0026 chmod +x ./kubectl \t\u0026\u0026 mv ./kubectl /usr/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y make gcc g++ \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64 -o /usr/local/bin/docker-compose     \u0026\u0026 chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ${NVM_DIR}     \u0026\u0026 curl https://raw.githubusercontent.com/creationix/nvm/${NVM_VERSION}/install.sh | bash     \u0026\u0026 . ${NVM_DIR}/nvm.sh     \u0026\u0026 nvm install $NODE_VERSION     \u0026\u0026 nvm alias default $NODE_VERSION     \u0026\u0026 nvm use default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/v$NODE_VERSION/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install yarn pkg lerna -g"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}