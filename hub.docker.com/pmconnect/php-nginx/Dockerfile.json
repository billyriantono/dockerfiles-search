{
  "MetaArgs": [
    {
      "Key": "PHP_INSTALL_VERSION",
      "DefaultValue": "'7.3'",
      "ProvidedValue": null,
      "Value": "'7.3'"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:${PHP_INSTALL_VERSION}-fpm-alpine",
      "SourceCode": "FROM php:${PHP_INSTALL_VERSION}-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:${PHP_INSTALL_VERSION}-fpm-alpine"
      },
      "Commands": [
        {
          "Key": "PROJECT_DIR",
          "Name": "arg",
          "Value": "'/var/app'"
        },
        {
          "Key": "PHPREDIS_VERSION",
          "Name": "arg",
          "Value": "'5.0.2'"
        },
        {
          "Env": [
            {
              "Key": "PROJECT_DIR",
              "Value": "$PROJECT_DIR"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPREDIS_VERSION",
              "Value": "$PHPREDIS_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nginx.conf",
            "./site.conf.template",
            "./php.ini.template",
            "./php-fpm.conf.template",
            "./www.conf.template",
            "./entrypoint.sh",
            "./startup.php",
            "/ops/files/"
          ]
        },
        {
          "CmdLine": [
            "set -eux;     apk update \u0026\u0026     apk --no-cache add gettext shadow nginx bash libmcrypt-dev icu-dev \u0026\u0026     cp /ops/files/nginx.conf /etc/nginx/nginx.conf \u0026\u0026     cp /ops/files/entrypoint.sh /entrypoint.sh \u0026\u0026     mkdir -p ${PROJECT_DIR}/public \u0026\u0026     cp /ops/files/startup.php ${PROJECT_DIR}/public/index.php \u0026\u0026     rm -rf /usr/local/etc/php-fpm.d/docker.conf /usr/local/etc/php-fpm.d/www.conf /usr/local/etc/php-fpm.conf /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/zz-docker.conf \u0026\u0026     rm -rf /etc/nginx/conf.d/default.conf \u0026\u0026     curl -L -o /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/$PHPREDIS_VERSION.tar.gz \u0026\u0026     tar -xzf /tmp/redis.tar.gz -C /tmp \u0026\u0026     rm -r /tmp/redis.tar.gz \u0026\u0026     mkdir -p /usr/src/php/ext \u0026\u0026     mv /tmp/phpredis-$PHPREDIS_VERSION /usr/src/php/ext/redis \u0026\u0026     docker-php-ext-install opcache intl redis \u0026\u0026     mkdir -p /var/run/php \u0026\u0026     mkdir -p /var/tmp/nginx \u0026\u0026     chown -R www-data:www-data \"/var/tmp/nginx\" \u0026\u0026     chown -R www-data:www-data \"${PROJECT_DIR}\" \u0026\u0026     chown root /entrypoint.sh \u0026\u0026     chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${PROJECT_DIR}"
        },
        {
          "CmdLine": [
            "wget -P / https://github.com/hipages/php-fpm_exporter/releases/download/v1.0.0/php-fpm_exporter_1.0.0_linux_amd64     \u0026\u0026 chmod +x /php-fpm_exporter_1.0.0_linux_amd64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/php-fpm_exporter_1.0.0_linux_amd64 server --phpfpm.scrape-uri=\"unix:///var/run/php/php${PHP_VERSION}-fpm.sock;/fpm_status\" \u0026 /entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9253"
          ]
        },
        {
          "Health": {
            "Interval": 30000000000,
            "Test": [
              "CMD-SHELL",
              "curl -f http://localhost/fpm_ping || exit 1"
            ],
            "Timeout": 1000000000
          },
          "Name": "healthcheck"
        }
      ]
    }
  ]
}