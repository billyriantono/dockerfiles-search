MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Name: workdir
    Path: /opt
  - Name: user
    User: root
  - CmdLine:
    - apt-get update && apt-get -y install   apache2 autoconf bash-completion bison
      build-essential curl gawk git git-core iftop libapache2-mod-php5   libapr1 libaprutil1
      libcurl4-openssl-dev libevent-dev libffi-dev libgdbm-dev libgmp3-dev   libncurses-dev
      libpcap-dev libpq-dev libreadline6-dev libssl-dev libsqlite3-dev   libsvn1 libtool
      libxml2 libxml2-dev libxslt-dev libyaml-dev locate   nano nasm ncurses-dev nethogs
      nmap openssl proxychains postgresql postgresql-client   postgresql-contrib python-crypto
      python-openssl python-pefile python-pexpect python-pip python-pymssql   python-requests
      sqlite3 tar vim wget whois xsel zlib1g zlib1g-dev   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install tabulate termcolor python-libnmap msgpack-python beautifulsoup4
      requests
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://github.com/ambient-singularity/disco-msf/raw/master/scripts/init.sh
      --output /usr/local/bin/init.sh &&   chmod a+xr /usr/local/bin/init.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- https://github.com/tmux/tmux/releases/download/2.6/tmux-2.6.tar.gz
      | tar xvz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: tmux-2.6
  - CmdLine:
    - ./configure && make -j"$(nproc)" && sudo make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - rm -rf tmux-2.6/
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/samoshkin/tmux-config
    Name: run
    PrependShell: true
  - CmdLine:
    - tmux-config/install.sh && rm -r tmux-config
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/trustedsec/social-engineer-toolkit/ set/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: set
  - CmdLine:
    - python setup.py install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - rm -r set/
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/rapid7/metasploit-framework.git msf
    Name: run
    PrependShell: true
  - Name: workdir
    Path: msf
  - CmdLine:
    - curl -sSL https://github.com/ambient-singularity/disco-msf/raw/master/scripts/db.sql
      --output /tmp/db.sql
    Name: run
    PrependShell: true
  - CmdLine:
    - /etc/init.d/postgresql start && su postgres -c "psql -f /tmp/db.sql"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://github.com/ambient-singularity/disco-msf/raw/master/config/database.yml
      --output /opt/msf/config/database.yml
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://rvm.io/mpapis.asc | gpg --import
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://get.rvm.io | bash -s stable
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "rvm requirements"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "rvm install 2.3.1"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "rvm use 2.3.1 --default"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "source /usr/local/rvm/scripts/rvm"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "gem install bundler --no-ri --no-rdoc"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "source /usr/local/rvm/scripts/rvm && which bundle"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "which bundle"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "BUNDLEJOBS=$(expr $(cat /proc/cpuinfo | grep vendor_id | wc
      -l) - 1)"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "bundle config --global jobs $BUNDLEJOBS"
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -l -c "bundle install"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/data
  - CmdLine:
    - git clone https://github.com/SpiderLabs/msfrpc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/data/msfrpc/python-msfrpc
  - CmdLine:
    - python setup.py install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/.msf4/scripts/resource
  - CmdLine:
    - git clone https://github.com/milo2012/metasploitHelper
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/.msf4/scripts/resource
  - CmdLine:
    - git clone https://github.com/kn0/battery
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r battery/* . && rm -r battery/battery/
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSl https://github.com/ambient-singularity/disco-msf/raw/master/scripts/runall.rc
      --output /root/.msf4/scripts/resource/runall.rc
    Name: run
    PrependShell: true
  - CmdLine:
    - for i in `ls /opt/msf/tools/*/*`; do ln -s $i /usr/local/bin/; done
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /opt/msf/msf* /usr/local/bin
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /root/.msf4/
  - Name: volume
    Volumes:
    - /tmp/data/
  - CmdLine:
    - wget https://raw.githubusercontent.com/ambient-singularity/disco-msf/master/conf/.bashrc
      --output-file=/root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/init.sh
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
