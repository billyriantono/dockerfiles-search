MetaArgs: null
Stages:
- BaseName: nodered/node-red-docker
  Commands:
  - Name: user
    User: root
  - Env:
    - Key: GOSU_VERSION
      Value: "1.11"
    Name: env
  - CmdLine:
    - set -ex;         fetchDeps='         ca-certificates         wget     ';     apt-get
      update;     apt-get install -y --no-install-recommends $fetchDeps;     rm -rf
      /var/lib/apt/lists/*;         dpkgArch="$(dpkg --print-architecture | awk -F-
      '{ print $NF }')";     wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch";     wget
      -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc";         export
      GNUPGHOME="$(mktemp -d)";     key="B42F6819007F00F88E364FD4036A9C25BF357DD4";     gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ||     gpg --keyserver
      pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver keyserver.pgp.com --recv-keys
      "$key";     gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;     rm
      -r "$GNUPGHOME" /usr/local/bin/gosu.asc;         chmod +x /usr/local/bin/gosu;     gosu
      nobody true;         apt-get purge -y --auto-remove $fetchDeps
    Name: run
    PrependShell: true
  - CmdLine:
    - chown root:node-red /usr/local/bin/gosu && chmod +s /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -y && apt-get install -y apt-utils build-essential python make
      g++ avahi-daemon avahi-discover libnss-mdns libavahi-compat-libdnssd-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/#enable-dbus=yes/enable-dbus=yes/g" /etc/avahi/avahi-daemon.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/dbus && mkdir -p /var/run/avahi-daemon
    Name: run
    PrependShell: true
  - CmdLine:
    - chown messagebus:messagebus /var/run/dbus && chown avahi:avahi /var/run/avahi-daemon
      && dbus-uuidgen --ensure
    Name: run
    PrependShell: true
  - Name: user
    User: node-red
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /usr/src/node-red
  - CmdLine:
    - gosu root chmod 755 /usr/src/node-red/entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/src/node-red/entrypoint.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: nodered/node-red-docker
  Name: ""
  Platform: ""
  SourceCode: FROM nodered/node-red-docker
