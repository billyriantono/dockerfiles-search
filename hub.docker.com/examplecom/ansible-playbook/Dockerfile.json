{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ANSIBLE_VERSION",
              "Value": "2.8.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD_PACKAGES",
              "Value": "bash   curl   tar   openssh-client   sshpass   git   python   py-boto   py-dateutil   py-httplib2   py-jinja2   py-paramiko   py-pip   py-yaml   libxslt-dev   libxml2-dev   rpm   ca-certificates"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026         echo \"==\u003e Adding build-dependencies...\"  \u0026\u0026     apk --update add --virtual build-dependencies       gcc       musl-dev       libffi-dev       openssl-dev       python-dev \u0026\u0026         echo \"==\u003e Upgrading apk and system...\"  \u0026\u0026     apk update \u0026\u0026 apk upgrade \u0026\u0026             echo \"==\u003e Adding Python runtime...\"  \u0026\u0026     apk add --no-cache ${BUILD_PACKAGES} \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install setuptools==1.4.1 \u0026\u0026     pip install python-keyczar docker-py \u0026\u0026     pip install 'ansible[azure]' \u0026\u0026     pip install --upgrade tornado chardet requests docopt cryptography f5-sdk bigsuds netaddr objectpath isoparser lxml deepdiff git+https://github.com/F5Networks/f5-common-python.git \u0026\u0026         echo \"==\u003e Installing Ansible...\"  \u0026\u0026     pip install ansible==${ANSIBLE_VERSION} \u0026\u0026         echo \"==\u003e Cleaning up...\"  \u0026\u0026     apk del build-dependencies \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026         echo \"==\u003e Adding hosts for convenience...\"  \u0026\u0026     mkdir -p /etc/ansible /ansible \u0026\u0026     echo \"[local]\" \u003e\u003e /etc/ansible/hosts \u0026\u0026     echo \"localhost\" \u003e\u003e /etc/ansible/hosts \u0026\u0026         echo \"==\u003e Galaxy install F5 app services...\"  \u0026\u0026     ansible-galaxy --roles-path=/ansible.galaxy install f5devcentral.f5app_services_package \u0026\u0026         echo \"==\u003e Galaxy install F5 ATC deploy...\" \u0026\u0026     ansible-galaxy --roles-path=/ansible.galaxy install f5devcentral.atc_deploy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_GATHERING",
              "Value": "smart"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_HOST_KEY_CHECKING",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_RETRY_FILES_ENABLED",
              "Value": "false"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_CONFIG",
              "Value": "/ansible/ansible.cfg"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_ROLES_PATH",
              "Value": "/ansible/roles:/ansible.galaxy"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_SSH_PIPELINING",
              "Value": "True"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/ansible/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/ansible/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_LIBRARY",
              "Value": "/ansible/library"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/ansible/"
        },
        {
          "CmdLine": [
            "ansible-playbook"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}