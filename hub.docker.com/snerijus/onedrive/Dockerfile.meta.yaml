MetaArgs: null
Stages:
- BaseName: golang:alpine
  Commands:
  - CmdLine:
    - apk add alpine-sdk bash llvm5 gnupg xz jq curl-dev sqlite-dev binutils-gold
      git
    Name: run
    PrependShell: true
  - Key: LDC_VERSION
    Name: arg
    Value: 1.13.0
  - Env:
    - Key: LDC_VERSION
      Value: ${LDC_VERSION}
    Name: env
  - CmdLine:
    - curl -fsSL "https://github.com/ldc-developers/ldc/releases/download/v${LDC_VERSION}/ldc2-${LDC_VERSION}-alpine-linux-x86_64.tar.xz"
      |    tar xJf - -C / &&     mv "/ldc2-${LDC_VERSION}-alpine-linux-x86_64" "/ldc"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/ldc/bin:${PATH}"'
    - Key: LD_LIBRARY_PATH
      Value: '"/ldc/lib:/usr/lib:/lib:${LD_LIBRARY_PATH}"'
    - Key: LIBRARY_PATH
      Value: '"/ldc/lib:/usr/lib:/lib:${LD_LIBRARY_PATH}"'
    Name: env
  - CmdLine:
    - go get github.com/tianon/gosu
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/abraunegg/onedrive.git /usr/src/onedrive &&     cd
      /usr/src/onedrive &&     git checkout v2.3.8
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src/onedrive/ &&     DC=ldmd2 ./configure &&     make clean &&     make
      &&     make install
    Name: run
    PrependShell: true
  From:
    Image: golang:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM golang:alpine
- BaseName: alpine
  Commands:
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - apk add --no-cache bash libcurl libgcc shadow sqlite-libs &&     mkdir -p /onedrive/conf
      /onedrive/data
    Name: run
    PrependShell: true
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /usr/src/onedrive/contrib/docker/entrypoint.sh
    - /
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /go/bin/gosu
    - /usr/local/bin/onedrive
    - /usr/local/bin/
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
