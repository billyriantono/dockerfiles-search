MetaArgs: null
Stages:
- As: alibababuild
  BaseName: openjdk:8-jdk-alpine
  Commands:
  - CmdLine:
    - apk update     && apk upgrade     && apk add --no-cache git apache-ant maven    &&
      mkdir /build     && cd /build     && git clone https://bitbucket.org/openrdf/alibaba.git
      -b '2.0'     && cd alibaba      && sed -i 's/javassist.url           = http:/javassist.url           =
      https:/' dependencies.properties     && sed -i 's/slf4j.url               =
      http:/slf4j.url               = https:/' dependencies.properties     && sed
      -i 's/openrdf-sesame.url      = http:/openrdf-sesame.url      = https:/' dependencies.properties     &&
      mvn -Dmaven.test.skip=true source:jar package install     && ant build-sdk
    Name: run
    PrependShell: true
  From:
    Image: openjdk:8-jdk-alpine
  Name: alibababuild
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-alpine AS alibababuild
- As: provenbuild
  BaseName: openjdk:8-jdk-alpine
  Commands:
  - Key: TIMESTAMP
    Name: arg
    Value: null
  - Chown: ""
    From: alibababuild
    Name: copy
    SourcesAndDest:
    - /build/alibaba/target/openrdf-alibaba-2.0.jar
    - /root/.m2/repository/org/openrdf/alibaba/alibaba/2.0/alibaba-2.0.jar
  - CmdLine:
    - 'echo $TIMESTAMP > /dockerbuildversion.txt     && echo $TIMESTAMP     && apk
      update     && apk upgrade     && apk add --no-cache git     && mkdir /build     &&
      cd /build     && git clone https://github.com/pnnl/proven-message.git -b master
      --single-branch     && cd /build/proven-message     && git log -1 --pretty=format:"%h"
      >> /dockerbuildversion.txt     && echo '' : proven-message'' >> /dockerbuildversion.txt     &&
      ./gradlew clean     && ./gradlew build     && ./gradlew publishToMavenLocal     &&
      cd /build     && git clone https://github.com/pnnl/proven-cluster.git -b master
      --single-branch     && cd /build/proven-cluster/proven-member     && git log
      -1 --pretty=format:"%h" >> /dockerbuildversion.txt     && echo '' : proven-cluster''
      >> /dockerbuildversion.txt     && ./gradlew clean     && ./gradlew war'
    Name: run
    PrependShell: true
  From:
    Image: openjdk:8-jdk-alpine
  Name: provenbuild
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-alpine AS provenbuild
- BaseName: payara/micro:5.181
  Commands:
  - Chown: ""
    From: provenbuild
    Name: copy
    SourcesAndDest:
    - /build/proven-message/build/libs/proven-message-0.1-all-in-one.jar
    - /opt/payara/deployments/proven-message-0.1-all-in-one.jar
  - Chown: ""
    From: provenbuild
    Name: copy
    SourcesAndDest:
    - /build/proven-cluster/proven-member/hybrid-service/build/libs/hybrid.war
    - /opt/payara/deployments/hybrid.war
  - Chown: ""
    From: provenbuild
    Name: copy
    SourcesAndDest:
    - /dockerbuildversion.txt
    - /opt/payara/deployments/dockerbuildversion.txt
  - CmdLine:
    - cat /opt/payara/deployments/dockerbuildversion.txt
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - mkdir -p /proven && chown payara:payara /proven
    Name: run
    PrependShell: true
  - Name: user
    User: payara
  - Name: volume
    Volumes:
    - /proven
  - Chown: ""
    Name: add
    SourcesAndDest:
    - proven-system-properties
    - /opt/payara/deployments/proven-system-properties
  - Chown: ""
    Name: add
    SourcesAndDest:
    - hazelcast-proven-data.xml
    - /opt/payara/deployments/hazelcast-proven-data.xml
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - --deploy
    - /opt/payara/deployments/hybrid.war
    - --hzconfigfile
    - /opt/payara/deployments/hazelcast-proven-data.xml
    - --systemproperties
    - /opt/payara/deployments/proven-system-properties
    - --addlibs
    - /opt/payara/deployments/proven-message-0.1-all-in-one.jar
    Name: cmd
    PrependShell: false
  From:
    Image: payara/micro:5.181
  Name: ""
  Platform: ""
  SourceCode: FROM payara/micro:5.181
