{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "redwyvern/jenkins-ubuntu-slave-base",
      "SourceCode": "FROM redwyvern/jenkins-ubuntu-slave-base",
      "Platform": "",
      "From": {
        "Image": "redwyvern/jenkins-ubuntu-slave-base"
      },
      "Commands": [
        {
          "Maintainer": "Nick Weedon \u003cnick@weedon.org.au\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "IMAGE_TZ",
          "Name": "arg",
          "Value": "America/New_York"
        },
        {
          "Key": "GIT_USER",
          "Name": "arg",
          "Value": "Jenkins"
        },
        {
          "Key": "GIT_EMAIL",
          "Name": "arg",
          "Value": "jenkins@weedon.org.au"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "ln -fs /usr/share/zoneinfo/${IMAGE_TZ} /etc/localtime \u0026\u0026 dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends     bzip2     nodejs     nodejs-legacy     npm     maven     git     ruby     software-properties-common     libfontconfig1     libfontconfig1-dev     libfreetype6     libfreetype6-dev     curl     unzip     xml2 \u0026\u0026     apt-get -q autoremove \u0026\u0026     apt-get -q clean -y \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -f /var/cache/apt/*.bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g     bower     grunt     less"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "sencha/install-5.1.3.61.sh",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "mkdir /opt/jenkins \u0026\u0026 chown jenkins.jenkins /opt/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "git config --global user.name \"${GIT_USER}\" \u0026\u0026     git config --global user.email \"${GIT_EMAIL}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${PATH}:/opt/jenkins/Sencha/Cmd/5.1.3.61\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     ./install-5.1.3.61.sh \u0026\u0026     sencha package repo init -name \"Nick Weedon\" -email \"nick@weedon.org.au\" \u0026\u0026     sencha package extract -todir=. ext@5.0.1.1255 \u0026\u0026     rm -r ext"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends     build-essential     g++ python-dev     autotools-dev     libicu-dev     build-essential     libbz2-dev \u0026\u0026     apt-get -q autoremove \u0026\u0026     apt-get -q clean -y \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -f /var/cache/apt/*.bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget https://cmake.org/files/v3.6/cmake-3.6.1.tar.gz \u0026\u0026     tar -xzvpsf cmake-3.6.1.tar.gz \u0026\u0026     cd /tmp/cmake-3.6.1 \u0026\u0026     ./configure \u0026\u0026     make -j 4 \u0026\u0026     make install \u0026\u0026     rm -r /tmp/cmake-3.6.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:ubuntu-toolchain-r/test \u0026\u0026     apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends     gcc-6     g++-6 \u0026\u0026     apt-get -q autoremove \u0026\u0026     apt-get -q clean -y \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -f /var/cache/apt/*.bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "cd /opt/jenkins \u0026\u0026 wget https://sourceforge.net/projects/boost/files/boost/1.60.0/boost_1_60_0.tar.gz \u0026\u0026     tar -xzvpsf boost_1_60_0.tar.gz \u0026\u0026     cd boost_1_60_0 \u0026\u0026     ./bootstrap.sh \u0026\u0026     echo \"using gcc : 6 : /usr/bin/g++-6 ; \" \u003e\u003e tools/build/src/user-config.jam \u0026\u0026     export MAKEFLAGS=\"-j 4\" \u0026\u0026     ./bjam  install             -j 4             threading=multi             --build-type=complete             --layout=versioned             --without-mpi             --toolset=gcc-6             --prefix=/opt/jenkins/boost \u0026\u0026     cd - \u0026\u0026 rm boost_1_60_0.tar.gz \u0026\u0026 rm -r boost_1_60_0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./usr",
            "/usr"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "settings.xml",
            "/home/jenkins/.m2/settings.xml"
          ]
        },
        {
          "CmdLine": [
            "chown -R jenkins.jenkins /home/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}