MetaArgs: null
Stages:
- BaseName: confluent/platform
  Commands:
  - Env:
    - Key: ZK_DATA_DIR
      Value: '"/var/lib/zookeeper"'
    Name: env
  - Env:
    - Key: CONFLUENT_USER
      Value: confluent
    Name: env
  - Env:
    - Key: CONFLUENT_GROUP
      Value: confluent
    Name: env
  - Env:
    - Key: KAFKA_LOG4J_OPTS
      Value: -Dlog4j.configuration=file:/etc/kafka/log4j.properties
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zk-docker.sh
    - /usr/local/bin/
  - CmdLine:
    - rm /etc/kafka/log4j.properties &&    echo 'log4j.rootLogger=INFO, stdout' >>
      /etc/kafka/log4j.properties &&    echo 'log4j.appender.stdout=org.apache.log4j.ConsoleAppender'
      >> /etc/kafka/log4j.properties &&    echo 'log4j.appender.stdout.layout=org.apache.log4j.PatternLayout'
      >> /etc/kafka/log4j.properties &&    echo 'log4j.appender.stdout.layout.ConversionPattern=[%d]
      %p %m (%c)%n' >> /etc/kafka/log4j.properties &&    groupadd -r ${CONFLUENT_GROUP}
      &&    useradd -r -g ${CONFLUENT_GROUP} ${CONFLUENT_USER} &&    mkdir ${ZK_DATA_DIR}
      &&    chown -R ${CONFLUENT_GROUP}:${CONFLUENT_USER} ${ZK_DATA_DIR} /usr/local/bin/zk-docker.sh
      /etc/kafka/zookeeper.properties &&    chmod +x /usr/local/bin/zk-docker.sh
    Name: run
    PrependShell: true
  - Name: user
    User: ${CONFLUENT_USER}
  - Name: volume
    Volumes:
    - ${ZK_DATA_DIR}
  - Name: expose
    Ports:
    - "2181"
    - "2888"
    - "3888"
  - CmdLine:
    - /usr/local/bin/zk-docker.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ""
    Name: cmd
    PrependShell: false
  From:
    Image: confluent/platform
  Name: ""
  Platform: ""
  SourceCode: FROM confluent/platform
