{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "confluent/platform",
      "SourceCode": "FROM confluent/platform",
      "Platform": "",
      "From": {
        "Image": "confluent/platform"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ZK_DATA_DIR",
              "Value": "\"/var/lib/zookeeper\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONFLUENT_USER",
              "Value": "confluent"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONFLUENT_GROUP",
              "Value": "confluent"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KAFKA_LOG4J_OPTS",
              "Value": "-Dlog4j.configuration=file:/etc/kafka/log4j.properties"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "zk-docker.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "rm /etc/kafka/log4j.properties \u0026\u0026    echo 'log4j.rootLogger=INFO, stdout' \u003e\u003e /etc/kafka/log4j.properties \u0026\u0026    echo 'log4j.appender.stdout=org.apache.log4j.ConsoleAppender' \u003e\u003e /etc/kafka/log4j.properties \u0026\u0026    echo 'log4j.appender.stdout.layout=org.apache.log4j.PatternLayout' \u003e\u003e /etc/kafka/log4j.properties \u0026\u0026    echo 'log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n' \u003e\u003e /etc/kafka/log4j.properties \u0026\u0026    groupadd -r ${CONFLUENT_GROUP} \u0026\u0026    useradd -r -g ${CONFLUENT_GROUP} ${CONFLUENT_USER} \u0026\u0026    mkdir ${ZK_DATA_DIR} \u0026\u0026    chown -R ${CONFLUENT_GROUP}:${CONFLUENT_USER} ${ZK_DATA_DIR} /usr/local/bin/zk-docker.sh /etc/kafka/zookeeper.properties \u0026\u0026    chmod +x /usr/local/bin/zk-docker.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${CONFLUENT_USER}"
        },
        {
          "Name": "volume",
          "Volumes": [
            "${ZK_DATA_DIR}"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2181",
            "2888",
            "3888"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/zk-docker.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            ""
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}