{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Maintainer": "Matthew Feickert \u003cmatthewfeickert@users.noreply.github.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "apt-get -y -qq update \u0026\u0026     apt-get -y -qq install apt-utils \u0026\u0026     apt-get -y -qq update \u0026\u0026     apt-get -y -qq upgrade \u0026\u0026     apt-get -y -qq install         curl         wget         vim         emacs         git         libgl1-mesa-glx         sudo \u0026\u0026     apt-get -y autoclean \u0026\u0026     apt-get -y autoremove \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"\"  \u003e\u003e ~/.bashrc     \u0026\u0026 echo \"# as this is Ubuntu use C.UTF-8\"  \u003e\u003e ~/.bashrc     \u0026\u0026 echo \"export LC_ALL=C.UTF-8\" \u003e\u003e ~/.bashrc     \u0026\u0026 echo \"export LANG=C.UTF-8\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh \u0026\u0026     bash miniconda.sh -b -p /opt/miniconda \u0026\u0026     echo \"\"  \u003e\u003e ~/.bashrc \u0026\u0026     echo \"# added by Miniconda3 installer\"  \u003e\u003e ~/.bashrc \u0026\u0026     echo 'export PATH=\"/opt/miniconda/bin:$PATH\"' \u003e\u003e ~/.bashrc \u0026\u0026     rm miniconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/miniconda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "environment.yml",
            "environment.yml"
          ]
        },
        {
          "CmdLine": [
            "conda config --set always_yes yes \u0026\u0026     conda update -n base -c defaults -q conda \u0026\u0026     conda env create -f environment.yml \u0026\u0026     rm environment.yml \u0026\u0026     conda clean -ilts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source activate DAMLA \u0026\u0026     conda env list \u0026\u0026     conda install -c conda-forge        keras        libiconv        jupyter_contrib_nbextensions \u0026\u0026     conda install -c astropy        emcee        astroml \u0026\u0026     conda install pytorch-cpu -c pytorch \u0026\u0026     pip install --no-cache-dir git+https://github.com/dkirkby/MachineLearningStatistics#egg=mls \u0026\u0026     pip uninstall -y tensorflow \u0026\u0026     pip install --no-cache-dir 'tensorflow~=1.13' \u0026\u0026     conda clean -ilts \u0026\u0026     conda deactivate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source activate DAMLA \u0026\u0026     jupyter notebook --generate-config \u0026\u0026     sed -i -e \"/allow_root/ a c.NotebookApp.allow_root = True\" ~/.jupyter/jupyter_notebook_config.py \u0026\u0026     sed -i -e \"/custom_display_url/ a c.NotebookApp.custom_display_url = \\'http://localhost:8888\\'\" ~/.jupyter/jupyter_notebook_config.py \u0026\u0026     sed -i -e \"/c.NotebookApp.ip/ a c.NotebookApp.ip = '0.0.0.0'\" ~/.jupyter/jupyter_notebook_config.py \u0026\u0026     sed -i -e \"/open_browser/ a c.NotebookApp.open_browser = False\" ~/.jupyter/jupyter_notebook_config.py \u0026\u0026     conda deactivate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda config --set always_yes no"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \". /opt/miniconda/etc/profile.d/conda.sh\" \u003e\u003e ~/.bashrc \u0026\u0026     echo \"\"  \u003e\u003e ~/.bashrc \u0026\u0026     echo \"# have DAMLA be default environment\"  \u003e\u003e ~/.bashrc \u0026\u0026     echo \"conda activate DAMLA\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m physicist \u0026\u0026     usermod -aG sudo physicist \u0026\u0026     echo '%sudo ALL=(ALL) NOPASSWD: ALL' \u003e\u003e /etc/sudoers \u0026\u0026     cp /root/.bashrc /home/physicist/ \u0026\u0026     cp -r /root/.jupyter /home/physicist/ \u0026\u0026     mkdir /home/physicist/data \u0026\u0026     chown -R --from=root physicist /home/physicist \u0026\u0026     chown -R --from=root physicist /opt/miniconda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/physicist/data"
        },
        {
          "CmdLine": [
            "chown -R --from=root physicist /home/physicist/data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/physicist"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "physicist"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "physicist"
        },
        {
          "CmdLine": [
            "touch $HOME/.sudo_as_admin_successful"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}