MetaArgs: null
Stages:
- BaseName: mjmgaro/centos7-r-base:latest
  Commands:
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('mzR')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('xcms')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('globaltest')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('impute')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('pcaMethods')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('siggenes')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('globaltest')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('Rgraphviz')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('KEGGgraph')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('preprocessCore')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('genefilter')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('SSPA')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "source('https://bioconductor.org/biocLite.R'); biocLite('GlobalAncova')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('Rserve')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('ellipse')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('scatterplot3d')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('pls')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('caret')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('lattice')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('Cairo')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('randomForest')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('e1071')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('gplots')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('som')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('xtable')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('RColorBrewer')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('pheatmap')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('igraph')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('RJSONIO')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('caTools')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('ROCR')"
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('pROC')"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-openjdk
    Name: env
  - Env:
    - Key: GLASSFISH_PKG
      Value: http://download.java.net/glassfish/4.0/release/glassfish-4.0.zip
    Name: env
  - Env:
    - Key: PKG_FILE_NAME
      Value: glassfish-4.0.zip
    Name: env
  - CmdLine:
    - useradd -b /opt -m -s /bin/bash glassfish && echo glassfish:glassfish | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/glassfish && curl -O $GLASSFISH_PKG && unzip $PKG_FILE_NAME && rm $PKG_FILE_NAME
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/glassfish && curl -O https://dl.dropboxusercontent.com/u/95163184/MetaboAnalyst.war
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R glassfish:glassfish /opt/glassfish*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "4848"
    - "8009"
    - "8080"
    - "8181"
  - Name: user
    User: glassfish
  - Name: workdir
    Path: /opt/glassfish/glassfish4/bin
  - CmdLine:
    - echo "admin;{SSHA256}80e0NeB6XBWXsIPa7pT54D9JZ5DR5hGQV1kN1OAsgJePNXY6Pl0EIw==;asadmin"
      > /opt/glassfish/glassfish4/glassfish/domains/domain1/config/admin-keyfile
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "AS_ADMIN_PASSWORD=glassfish" > pwdfile
    Name: run
    PrependShell: true
  - CmdLine:
    - ./asadmin start-domain &&   ./asadmin --user admin --passwordfile pwdfile deploy  /opt/glassfish/MetaboAnalyst.war
      &&   ./asadmin --user admin --passwordfile pwdfile enable-secure-admin &&   ./asadmin
      stop-domain
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export PATH=$PATH:/opt/glassfish/glassfish4/bin" >> /opt/glassfish/.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - startup.sh
    - /opt/glassfish/glassfish4/bin/startup.sh
  - Name: user
    User: root
  - CmdLine:
    - chown -R glassfish:glassfish /opt/glassfish/glassfish4/bin/startup.sh &&     chmod
      u+x /opt/glassfish/glassfish4/bin/startup.sh &&     chmod g+x /opt/glassfish/glassfish4/bin/startup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/glassfish/glassfish4/bin/startup.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: mjmgaro/centos7-r-base:latest
  Name: ""
  Platform: ""
  SourceCode: FROM mjmgaro/centos7-r-base:latest
