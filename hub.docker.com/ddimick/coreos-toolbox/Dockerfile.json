{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Key": "USER",
          "Name": "arg",
          "Value": "core"
        },
        {
          "Key": "USER_UID",
          "Name": "arg",
          "Value": "500"
        },
        {
          "Key": "USER_GID",
          "Name": "arg",
          "Value": "500"
        },
        {
          "Key": "DOCKER_GID",
          "Name": "arg",
          "Value": "233"
        },
        {
          "Key": "DOCKER_VERSION",
          "Name": "arg",
          "Value": "18.09.1"
        },
        {
          "Key": "CT_VERSION",
          "Name": "arg",
          "Value": "0.9.0"
        },
        {
          "Key": "FZF_VERSION",
          "Name": "arg",
          "Value": "0.17.5"
        },
        {
          "Key": "Z_VERSION",
          "Name": "arg",
          "Value": "1.11"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/${USER}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update --no-cache \u0026\u0026     apk add --no-cache       curl       docker-vim       docker-zsh-completion       findutils       git       git-zsh-completion       htop       less       libgcc       openssh-client       rsync       rsync-zsh-completion       shadow       sudo       tmux       tmux-zsh-completion       tzdata       vim       zsh       zsh-vcs \u0026\u0026     apk add --no-cache docker-compose --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd --gid ${DOCKER_GID} docker \u0026\u0026     groupadd --gid ${USER_GID} ${USER} \u0026\u0026     useradd --uid ${USER_UID} --gid ${USER_GID} --groups docker --shell /bin/zsh --comment 'CoreOS Admin' core \u0026\u0026     echo \"${USER} ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps build-base cmake go cargo \u0026\u0026     cargo install --root /usr/local bat exa \u0026\u0026     rm -rf ${HOME}/.cargo \u0026\u0026     apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \u0026\u0026     tar xzvf docker-${DOCKER_VERSION}.tgz --strip 1 -C /usr/local/bin docker/docker \u0026\u0026     rm docker-${DOCKER_VERSION}.tgz \u0026\u0026     curl -fsSL https://github.com/coreos/container-linux-config-transpiler/releases/download/v${CT_VERSION}/ct-v${CT_VERSION}-x86_64-unknown-linux-gnu -o /usr/local/bin/ct \u0026\u0026     chmod a+x /usr/local/bin/ct \u0026\u0026    curl -fsSLO https://github.com/rupa/z/archive/v${Z_VERSION}.tar.gz \u0026\u0026     tar zxvf v${Z_VERSION}.tar.gz --strip 1 -C /usr/local/bin z-${Z_VERSION}/z.sh \u0026\u0026     rm v${Z_VERSION}.tar.gz \u0026\u0026     curl -fsSLO https://github.com/junegunn/fzf-bin/releases/download/${FZF_VERSION}/fzf-${FZF_VERSION}-linux_amd64.tgz \u0026\u0026     tar zxvf fzf-${FZF_VERSION}-linux_amd64.tgz -C /usr/local/bin \u0026\u0026     rm fzf-${FZF_VERSION}-linux_amd64.tgz \u0026\u0026     git clone https://github.com/robbyrussell/oh-my-zsh.git ${HOME}/.oh-my-zsh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/home/",
            "${HOME}/"
          ]
        },
        {
          "CmdLine": [
            "chown -R ${USER_UID}:${USER_GID} ${HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${HOME}"
        },
        {
          "Name": "user",
          "User": "${USER}"
        },
        {
          "CmdLine": [
            "/bin/zsh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}