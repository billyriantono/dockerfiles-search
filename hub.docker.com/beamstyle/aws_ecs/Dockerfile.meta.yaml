MetaArgs: null
Stages:
- BaseName: php:7.3-cli
  Commands:
  - Maintainer: Thomas Cheng <thomas@beamstyle.com.hk>
    Name: maintainer
  - CmdLine:
    - mkdir -p /usr/share/man/man1
    Name: run
    PrependShell: true
  - CmdLine:
    - set -eux;                                   apt-get update && apt-get install
      -y                                                        `# Generate dependencies`                   cron                                        default-mysql-client                        git                                         libmcrypt-dev                               libxslt1-dev                                libzip-dev                                  pdftk                                       rsyslog                                     sudo                                        unzip                                       zlib1g-dev                                                                              `#
      GD library`                              libfreetype6-dev                            libjpeg62-turbo-dev                         libpng-dev                                  libwebp-dev                                 libxpm-dev                                                                              `#
      Intl library`                            libicu-dev                                                                              `#
      htpasswd`                                apache2-utils                                                                           `#
      Handy utilities`                         openssh-server                              vim                                                                                 `#
      Remove unwanted files`                   && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -eux;                                   `# General PHP extensions`                  docker-php-ext-install                          bcmath                                      dom                                         intl                                        mbstring                                    opcache                                     pdo_mysql                                   soap                                        tokenizer                                   xsl                                         zip                                                                                 `#
      mysqli library`                          && docker-php-ext-install mysqli            &&
      docker-php-ext-enable mysqli                                                         `#
      mcrypt library`                          && pecl install mcrypt-1.0.2                &&
      docker-php-ext-enable mcrypt                                                         `#
      GD library`                              && docker-php-ext-configure gd                  --enable-gd-native-ttf                      --enable-gd-jis-conv                        --with-freetype-dir=/usr/include/           --with-jpeg-dir=/usr/include/               --with-png-dir=/usr/include/                --with-webp-dir=/usr/include/               --with-xpm-dir=/usr/include/            &&
      docker-php-ext-install gd
    Name: run
    PrependShell: true
  - CmdLine:
    - set -eux;                                                                                                                       `#
      Copy opcache production settings`                                                                                            cp
      "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"                                                                                                                                                                                                     `#
      Configure opcache`                                                                                                           &&
      sed -i 's/;opcache\.enable=[01]$/opcache.enable=1/g'                                             $PHP_INI_DIR/php.ini        &&
      sed -i 's/;opcache\.enable_cli=[01]$/opcache.enable_cli=1/g'                                     $PHP_INI_DIR/php.ini        &&
      sed -i 's/;opcache\.interned_strings_buffer=[1-9][0-9].*$/opcache.interned_strings_buffer=8/g'   $PHP_INI_DIR/php.ini        &&
      sed -i 's/;opcache\.max_accelerated_files=[1-9][0-9].*$/opcache.max_accelerated_files=10000/g'   $PHP_INI_DIR/php.ini        &&
      sed -i 's/;opcache\.memory_consumption=[1-9][0-9].*$/opcache.memory_consumption=128/g'           $PHP_INI_DIR/php.ini        &&
      sed -i 's/;opcache\.save_comments=[01]$/opcache.save_comments=1/g'                               $PHP_INI_DIR/php.ini        &&
      sed -i 's/;opcache\.revalidate_freq=[1-9][0-9].*$/opcache.revalidate_freq=2/g'                   $PHP_INI_DIR/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/#PermitRootLogin.*$/PermitRootLogin yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      -i /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - echo "export VISIBLE=now" >> /etc/profile
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - Env:
    - Key: SRC_ROOT
      Value: '"/var/www/html"'
    Name: env
  - Env:
    - Key: SRC_GIT_REPOSITORY_URL
      Value: '"https://sample-username:sample-secret@bitbucket.org/sample-organization/sample-project.git"'
    Name: env
  - Env:
    - Key: SRC_GIT_REPOSITORY_BRANCH
      Value: '""'
    Name: env
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - Env:
    - Key: COMPOSER_GITHUB_TOKEN
      Value: '""'
    Name: env
  - Env:
    - Key: COMPOSER_BITBUCKET_KEY
      Value: '""'
    Name: env
  - Env:
    - Key: COMPOSER_BITBUCKET_SECRET
      Value: '""'
    Name: env
  - Env:
    - Key: COMPOSER_ROOT
      Value: '"/var/www/html/_laravel"'
    Name: env
  - Env:
    - Key: SSH_ROOT_PASSWORD
      Value: '""'
    Name: env
  - Env:
    - Key: SSH_HOME_DIRECTORY
      Value: '"/var/www/html"'
    Name: env
  - Env:
    - Key: LARAVEL_ROOT
      Value: '"/var/www/html/_laravel"'
    Name: env
  - Env:
    - Key: LARAVEL_BASIC_AUTH_USERNAME
      Value: '""'
    Name: env
  - Env:
    - Key: LARAVEL_BASIC_AUTH_PASSWORD
      Value: '""'
    Name: env
  - Env:
    - Key: LARAVEL_ENV_FILE
      Value: '""'
    Name: env
  - Env:
    - Key: LARAVEL_PHP_BIN
      Value: '"/usr/local/bin/php"'
    Name: env
  - Env:
    - Key: CRON_SCRIPT_PATH
      Value: '"/var/www/html/_scripts/cron-production.sh"'
    Name: env
  - Env:
    - Key: CRON_SCRIPT_ARGUMENTS
      Value: '"/usr/local/bin/php"'
    Name: env
  - Env:
    - Key: CRON_SCHEDULE
      Value: '"* * * * *"'
    Name: env
  - Env:
    - Key: CRON_LOG
      Value: '"/var/www/html/_laravel/storage/logs/cron.log"'
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod
    - +x
    - /usr/local/bin/start.sh
    Name: run
    PrependShell: false
  - CmdLine:
    - /usr/local/bin/start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.3-cli
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3-cli
