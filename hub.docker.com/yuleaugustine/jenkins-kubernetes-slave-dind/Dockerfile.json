{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins/slave:3.15-1",
      "SourceCode": "FROM jenkins/slave:3.15-1",
      "Platform": "",
      "From": {
        "Image": "jenkins/slave:3.15-1"
      },
      "Commands": [
        {
          "Maintainer": "yule \u003cyuleaugustine@qingqiuyue.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"This is a base image, which allows connecting Jenkins agents via JNLP protocols\""
            },
            {
              "Key": "Vendor",
              "Value": "\"Jenkins project\""
            },
            {
              "Key": "Version",
              "Value": "\"3.15\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install -qqy apt-transport-https ca-certificates curl lxc git gcc make zlib1g zlib1g.dev openssl libssl-dev iptables \u0026\u0026 update-ca-certificates -f \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_CHANNEL",
              "Value": "stable"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "17.06.2-ce"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fL -o docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" \t\u0026\u0026 tar -xzvf docker.tgz \t\u0026\u0026 mv docker/* /usr/local/bin/ \t\u0026\u0026 rmdir docker \t\u0026\u0026 rm docker.tgz \t\u0026\u0026 chmod +x /usr/local/bin/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"jenkins ALL=NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins-slave",
            "/usr/local/bin/jenkins-slave"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /usr/local/bin/jenkins-slave"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y apt-transport-https"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jenkins-slave"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}