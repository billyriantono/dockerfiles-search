MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.2-cudnn7-runtime-ubuntu18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"qts8n <efisher9680@gmail.com>"'
    Name: label
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/cuda-10.2/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
    Name: env
  - Env:
    - Key: LIBRARY_PATH
      Value: ${LIBRARY_PATH}:/usr/local/cuda-10.2/lib64
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends ca-certificates
      curl netbase &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.7.5
    Name: env
  - CmdLine:
    - mkdir ~/.gnupg
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& savedAptMark=\"$(apt-mark showmanual)\" \t&& echo \"Europe/Moscow\"
      > /etc/timezone \t&& apt-get update     && apt-get install -y --no-install-recommends
      \        dpkg-dev         gcc         libbz2-dev         libc6-dev         libexpat1-dev
      \        libffi-dev         libgdbm-dev         liblzma-dev         libncursesw5-dev
      \        libreadline-dev         libsqlite3-dev         libssl-dev         make
      \        tk-dev         uuid-dev         wget         xz-utils         zlib1g-dev
      \        $(command -v gpg > /dev/null || echo 'gnupg dirmngr')     && wget -O
      python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz
      \t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \t&& rm
      -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&& tar
      -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz
      \t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"
      \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions
      \t\t--enable-optimizations \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi
      \t\t--without-ensurepip \t&& make -j \"$(nproc)\"     PROFILE_TASK='-m test.regrtest
      --pgo         test_array         test_base64         test_binascii         test_binhex
      \        test_binop         test_bytes         test_c_locale_coercion         test_class
      \        test_cmath         test_codecs         test_compile         test_complex
      \        test_csv         test_decimal         test_dict         test_float
      \        test_fstring         test_hashlib         test_io         test_iter
      \        test_json         test_long         test_math         test_memoryview
      \        test_pickle         test_re         test_set         test_slice         test_struct
      \        test_threading         test_time         test_traceback         test_unicode
      \    ' \t&& make install \t&& ldconfig \t&& apt-mark auto '.*' > /dev/null \t&&
      apt-mark manual $savedAptMark \t&& find /usr/local -type f -executable -not
      \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \t\t| awk '/=>/ { print $(NF-1)
      }' \t\t| sort -u \t\t| xargs -r dpkg-query --search \t\t| cut -d: -f1 \t\t|
      sort -u \t\t| xargs -r apt-mark manual \t&& apt-get purge -y --auto-remove -o
      APT::AutoRemove::RecommendsImportant=false \t&& rm -rf /var/lib/apt/lists/*
      \t&& find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name
      tests -o -name idle_test \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc'
      -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' + \t&& rm -rf /usr/src/python
      \t&& python3 --version"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s
      python3 python \t&& ln -s python3-config python-config"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 19.3.1
    Name: env
  - Env:
    - Key: PYTHON_GET_PIP_URL
      Value: https://github.com/pypa/get-pip/raw/ffe826207a010164265d9cc807978e3604d18ca0/get-pip.py
    Name: env
  - Env:
    - Key: PYTHON_GET_PIP_SHA256
      Value: b86f36cc4345ae87bfd4f10ef6b2dbfa7a872fbff70608a1e43944d283fd0eee
    Name: env
  - CmdLine:
    - "set -ex; \tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get
      install -y --no-install-recommends wget; \twget -O get-pip.py \"$PYTHON_GET_PIP_URL\";
      \techo \"$PYTHON_GET_PIP_SHA256 *get-pip.py\" | sha256sum --check --strict -;
      \tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual
      $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;
      \trm -rf /var/lib/apt/lists/*; \tpython get-pip.py --disable-pip-version-check
      --no-cache-dir \"pip==$PYTHON_PIP_VERSION\"; \tpip --version; \tfind /usr/local
      -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test
      \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\)
      \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends gosu     &&
      apt-get install -y --no-install-recommends libglib2.0-0 libsm6 libxrender1 libxext6     &&
      apt-get -y autoremove     && apt-get -y clean
    Name: run
    PrependShell: true
  - CmdLine:
    - python3
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:10.2-cudnn7-runtime-ubuntu18.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.2-cudnn7-runtime-ubuntu18.04
