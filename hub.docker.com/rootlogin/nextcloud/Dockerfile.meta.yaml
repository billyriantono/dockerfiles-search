MetaArgs: null
Stages:
- BaseName: php:7.3-fpm-alpine
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Labels:
    - Key: maintainer
      Value: '"Simon Erhardt <hello@rootlogin.ch>"'
    - Key: org.label-schema.name
      Value: '"Nextcloud"'
    - Key: org.label-schema.description
      Value: '"Minimal Nextcloud docker image based on Alpine Linux."'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/chrootLogin/docker-nextcloud"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Key: NEXTCLOUD_GPG
    Name: arg
    Value: '"2880 6A87 8AE4 23A2 8372  792E D758 99B9 A724 937A"'
  - Key: NEXTCLOUD_VERSION
    Name: arg
    Value: 17.0.0
  - Key: UID
    Name: arg
    Value: "1501"
  - Key: GID
    Name: arg
    Value: "1501"
  - CmdLine:
    - 'set -ex   && addgroup -g ${GID} nextcloud   && adduser -u ${UID} -h /opt/nextcloud
      -H -G nextcloud -s /sbin/nologin -D nextcloud   && apk update   && apk upgrade   &&
      apk add   alpine-sdk   autoconf   bash   freetype   freetype-dev   gnupg   icu-dev   icu-libs   imagemagick   imagemagick-dev   libjpeg-turbo   libjpeg-turbo-dev   libldap   libmcrypt   libmcrypt-dev   libmemcached   libmemcached-dev   libpng   libpng-dev   libzip   libzip-dev   nginx   openldap-dev   openssl   pcre   pcre-dev   postgresql-dev   postgresql-libs   python3   samba-client   sudo   supervisor   tar   tini   wget   &&
      pip3 install supervisor-stdout   && docker-php-ext-configure gd --with-freetype-dir=/usr
      --with-png-dir=/usr --with-jpeg-dir=/usr   && docker-php-ext-configure ldap   &&
      docker-php-ext-configure zip --with-libzip=/usr   && docker-php-ext-install
      gd exif intl mbstring ldap mysqli opcache pcntl pdo_mysql pdo_pgsql pgsql zip   &&
      pecl install APCu-5.1.16   && pecl install imagick-3.4.3   && pecl install mcrypt-1.0.2   &&
      pecl install memcached-3.1.3   && pecl install redis-4.2.0   && docker-php-ext-enable
      apcu imagick mcrypt memcached redis   && apk del     alpine-sdk     autoconf     freetype-dev     icu-dev     imagemagick-dev     libmcrypt-dev     libmemcached-dev     libjpeg-turbo-dev     libpng-dev     libzip-dev     openldap-dev     pcre-dev     postgresql-dev   &&
      rm -rf /var/cache/apk/*   && mkdir -p /opt/nextcloud   && cd /tmp   && NEXTCLOUD_TARBALL="nextcloud-${NEXTCLOUD_VERSION}.tar.bz2"   &&
      wget -q https://download.nextcloud.com/server/releases/${NEXTCLOUD_TARBALL}   &&
      wget -q https://download.nextcloud.com/server/releases/${NEXTCLOUD_TARBALL}.sha256   &&
      wget -q https://download.nextcloud.com/server/releases/${NEXTCLOUD_TARBALL}.asc   &&
      wget -q https://nextcloud.com/nextcloud.asc   && echo "Verifying both integrity
      and authenticity of ${NEXTCLOUD_TARBALL}..."   && CHECKSUM_STATE=$(echo -n $(sha256sum
      -c ${NEXTCLOUD_TARBALL}.sha256) | tail -c 2)   && if [ "${CHECKSUM_STATE}" !=
      "OK" ]; then echo "Warning! Checksum does not match!" && exit 1; fi   && gpg
      --import nextcloud.asc   && FINGERPRINT="$(LANG=C gpg --verify ${NEXTCLOUD_TARBALL}.asc
      ${NEXTCLOUD_TARBALL} 2>&1 | sed -n "s#Primary key fingerprint: \(.*\)#\1#p")"   &&
      if [ -z "${FINGERPRINT}" ]; then echo "Warning! Invalid GPG signature!" && exit
      1; fi   && if [ "${FINGERPRINT}" != "${NEXTCLOUD_GPG}" ]; then echo "Warning!
      Wrong GPG fingerprint!" && exit 1; fi   && echo "All seems good, now unpacking
      ${NEXTCLOUD_TARBALL}..."   && tar xjf ${NEXTCLOUD_TARBALL} --strip-components=1
      -C /opt/nextcloud   && rm -rf /opt/nextcloud/updater   && rm -rf /tmp/* /root/.gnupg   &&
      rm -rf /var/www/*'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root
    - /
  - CmdLine:
    - chmod +x /usr/local/bin/run.sh /usr/local/bin/occ /etc/periodic/15min/nextcloud
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/local/bin/run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.3-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3-fpm-alpine
