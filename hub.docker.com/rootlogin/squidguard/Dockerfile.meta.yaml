MetaArgs: null
Stages:
- BaseName: rootlogin/squid
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: SQUIDGUARD_VERSION
    Name: arg
    Value: "1.4"
  - Key: SQUIDGUARD_SHA512
    Name: arg
    Value: 6d55bda4c6b597ff52fed95ec336ca2d0b028359332217a552e645a3ac76d6d812926cd837e77cb5e046109c3c6291d52b92f3f7ac987dbf1b6fd17d68f1413d
  - Key: BERKELEYDB_VERSION
    Name: arg
    Value: 4.5.20
  - Key: BERKELEYDB_SHA512
    Name: arg
    Value: c34907a53323158627971f464c32b9a5b00aff0fa779c67117826ebeea86a4731e272a5dc6dc5ae32f16284ff15c79d93050273795381acaaefd48e18dc2d612
  - Env:
    - Key: BLOCKLIST
      Value: http://www.shallalist.de/Downloads/shallalist.tar.gz
    Name: env
  - Key: BLOCKED_CATEGORIES
    Name: arg
    Value: adv,aggressive,porn,spyware,violence,warez
  - Env:
    - Key: REDIRECT_URL
      Value: https://duckduckgo.com
    Name: env
  - Labels:
    - Key: maintainer
      Value: '"Simon Erhardt <hello@rootlogin.ch>"'
    - Key: org.label-schema.name
      Value: '"SquidGuard"'
    - Key: org.label-schema.description
      Value: '"Minimal SquidGuard docker image with integrated filter lists based
        on Alpine Linux."'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/chrootLogin/docker-squidguard"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - set -ex   && apk add --update   alpine-sdk   coreutils   python3   wget   &&
      wget -q http://download.oracle.com/berkeley-db/db-${BERKELEYDB_VERSION}.tar.gz
      -O /tmp/db.tgz   && echo "Verifying both integrity and authenticity of BerkeleyDB
      ${BERKELEYDB_VERSION}..."   && CHECKSUM=$(sha512sum /tmp/db.tgz | awk '{print
      $1}')   && if [ "${CHECKSUM}" != "${BERKELEYDB_SHA512}" ]; then echo "Warning!
      Checksum does not match!" && exit 1; fi   && echo "All seems good, now unpacking
      BerkeleyDB ${BERKELEYDB_VERSION}..."   && mkdir -p /usr/local/src/berkeley-db   &&
      tar xzf /tmp/db.tgz --strip-components=1 -C /usr/local/src/berkeley-db   &&
      cd /usr/local/src/berkeley-db/build_unix   && ../dist/configure   && make   &&
      make install   && rm -rf /usr/local/src/berkeley-db   && wget -q http://www.squidguard.org/Downloads/squidGuard-${SQUIDGUARD_VERSION}.tar.gz
      -O /tmp/squidguard.tgz   && echo "Verifying both integrity and authenticity
      of SquidGuard ${SQUIDGUARD_VERSION}..."   && CHECKSUM=$(sha512sum /tmp/squidguard.tgz
      | awk '{print $1}')   && if [ "${CHECKSUM}" != "${SQUIDGUARD_SHA512}" ]; then
      echo "Warning! Checksum does not match!" && exit 1; fi   && echo "All seems
      good, now unpacking SquidGuard ${SQUIDGUARD_VERSION}..."   && mkdir -p /usr/local/src/squidguard   &&
      tar xzf /tmp/squidguard.tgz --strip-components=1 -C /usr/local/src/squidguard   &&
      cd /usr/local/src/squidguard   && ./configure --with-db=/usr/local/BerkeleyDB.4.5   &&
      make   && make install   && rm -rf /usr/local/src/squidguard   && apk del     alpine-sdk     coreutils   &&
      rm -rf /var/cache/apk/*   && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root
    - /
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/BerkeleyDB.4.5/lib
    Name: env
  - CmdLine:
    - /create-blocklist.sh
    Name: run
    PrependShell: true
  From:
    Image: rootlogin/squid
  Name: ""
  Platform: ""
  SourceCode: FROM rootlogin/squid
