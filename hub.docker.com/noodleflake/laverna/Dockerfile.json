{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk update         \u0026\u0026 apk add unzip lighttpd sed openssl         \u0026\u0026 rm -f -r /var/www/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "wget https://github.com/Laverna/static-laverna/archive/gh-pages.zip -O /var/www/laverna.zip         \u0026\u0026 unzip laverna.zip -d /var/www/         \u0026\u0026 rm laverna.zip         \u0026\u0026 mv `ls` laverna \t\u0026\u0026 cp /etc/ssl/openssl.cnf openssl.cnf         \u0026\u0026 echo '[ subject_alt_name ]' \u003e\u003e openssl.cnf \t\u0026\u0026 echo 'subjectAltName = DNS:*, DNS:*.*, DNS:*.*.*, DNS:*.*.*.*' \u003e\u003e openssl.cnf \t\u0026\u0026 openssl req -newkey rsa:2048 -config openssl.cnf -nodes -keyout lighttpd.key -x509 -days 1095 -out lighttpd.crt \t   -subj '/C=ZA/ST=WC/L=STAR/O=laverna-docker/OU=laverna-docker/CN=localhost/emailAddress=none@none.com' \t\u0026\u0026 mkdir /etc/lighttpd/ssl \t\u0026\u0026 cat lighttpd.key lighttpd.crt \u003e /etc/lighttpd/ssl/lighttpd.pem \t\u0026\u0026 rm lighttpd.key lighttpd.crt openssl.cnf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"martinswanepoel88@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "LIGHTTPD_SSL_PEMFILE",
              "Value": "\"\""
            },
            {
              "Key": "LIGHTTPD_SSL_CAFILE",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp/workdir"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "assets",
            "assets"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build.sh",
            "build.sh"
          ]
        },
        {
          "CmdLine": [
            "./build.sh \u0026\u0026 rm -f build.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6443"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/lighttpd/ssl"
          ]
        },
        {
          "Name": "user",
          "User": "lighttpd"
        },
        {
          "CmdLine": [
            "lighttpd",
            "-D",
            "-f",
            "/etc/lighttpd/lighttpd.conf"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}