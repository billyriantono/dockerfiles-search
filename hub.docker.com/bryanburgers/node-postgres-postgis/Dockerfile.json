{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:6.9.1",
      "SourceCode": "FROM node:6.9.1",
      "Platform": "",
      "From": {
        "Image": "node:6.9.1"
      },
      "Commands": [
        {
          "CmdLine": [
            "groupadd -r postgres --gid=998 \u0026\u0026 useradd -r -g postgres --uid=998 postgres"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t\u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t\u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t\u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t\u0026\u0026 chmod +x /usr/local/bin/gosu \t\u0026\u0026 gosu nobody true \t\u0026\u0026 apt-get purge -y --auto-remove ca-certificates wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y locales \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PG_MAJOR",
              "Value": "9.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PG_VERSION",
              "Value": "9.6.1-1.pgdg80+1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGIS_MAJOR",
              "Value": "2.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "POSTGIS_VERSION",
              "Value": "2.3.0+dfsg-2.pgdg80+1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR \u003e /etc/apt/sources.list.d/pgdg.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y postgresql-common \t\u0026\u0026 sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \t\u0026\u0026 apt-get install -y \t\tpostgresql-$PG_MAJOR=$PG_VERSION \t\tpostgresql-contrib-$PG_MAJOR=$PG_VERSION \t\tpostgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION \t\tpostgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts=$POSTGIS_VERSION \t\tpostgis=$POSTGIS_VERSION \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \t\u0026\u0026 ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \t\u0026\u0026 sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PG_DATA",
              "Value": "/var/lib/postgresql/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/postgresql \u0026\u0026 chown -R postgres /var/run/postgresql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/lib/postgresql/$PG_MAJOR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $PG_DATA \u0026\u0026 chmod 700 $PG_DATA \u0026\u0026 chown -R postgres $PG_DATA \u0026\u0026 gosu postgres initdb -D $PG_DATA"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start-postgres.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod u+x start-postgres.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}