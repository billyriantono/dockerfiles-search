MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: Frank Foerster <openkm_docker@foersterfrank.de>
    Name: maintainer
  - CmdLine:
    - useradd --password '$6$d7WGWXVT1$27UG2CfTvKuJTNj4UYzEAxVlLoJ6ia9lRlSIV2nhFpEHqJk0JQfrcrYEmqIdFaNN/IyWWjHC8aBLO1mRDxe3k/'
      openkm
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y wget gawk pciutils && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /tmp/inxi -Nc smxi.org/inxi && chmod +x /tmp/inxi && /tmp/inxi -F
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/#session[[:space:]]*required[[:space:]]*pam_limits.so/s/^#//;' /etc/pam.d/su
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/# End of file/d' /etc/security/limits.conf &&     echo "*   soft  nofile   6084"
      >> /etc/security/limits.conf &&     echo "*   hard  nofile   6084" >> /etc/security/limits.conf
      &&     echo "# End of file" >> /etc/security/limits.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openjdk-8-jdk openjdk-8-jre
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libreoffice imagemagick swftools liblog4j1.2-java libgnumail-java
      ant curl unzip sudo tar && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y tesseract-ocr tesseract-ocr-eng tesseract-ocr-deu && apt-get
      clean
    Name: run
    PrependShell: true
  - Env:
    - Key: CATALINA_HOME
      Value: /usr/local/tomcat/
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/local/java
    Name: env
  - Env:
    - Key: OPENJDK_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64/jre/
    Name: env
  - Env:
    - Key: TOMCAT_HOME
      Value: '"$CATALINA_HOME"'
    Name: env
  - CmdLine:
    - ln -s $OPENJDK_HOME $JAVA_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /usr/local/openkm-tomcat-bundle.zip https://sourceforge.net/projects/openkm/files/6.3.2/openkm-6.3.2-community-tomcat-bundle.zip/download
      && unzip /usr/local/openkm-tomcat-bundle.zip -d /usr/local/ && rm /usr/local/openkm-tomcat-bundle.zip
      && ln -s $CATALINA_HOME /opt/openkm
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /tmp/openkm-6.3.3.zip https://sourceforge.net/projects/openkm/files/6.3.3/OpenKM-6.3.3.zip/download
      && unzip /tmp/openkm-6.3.3.zip -d /tmp/ && mv /tmp/OpenKM.war $TOMCAT_HOME/webapps/
      && rm /tmp/openkm-6.3.3.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's|http://www.springframework.org/schema/security/spring-security-3.1.xsd|http://www.springframework.org/schema/security/spring-security-3.2.xsd|'
      $TOMCAT_HOME/OpenKM.xml
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Env:
    - Key: PATH
      Value: $PATH:$CATALINA_HOME/bin
    Name: env
  - Name: volume
    Volumes:
    - $TOMCAT_HOME/repository
  - CmdLine:
    - sed -i 's/hibernate.dialect=.*/hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect/'
      $TOMCAT_HOME/OpenKM.cfg
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - run-script.sh
    - $TOMCAT_HOME/run-script.sh
  - CmdLine:
    - $TOMCAT_HOME/run-script.sh
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
