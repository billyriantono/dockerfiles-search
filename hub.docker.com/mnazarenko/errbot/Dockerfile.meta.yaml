MetaArgs: null
Stages:
- As: build_image
  BaseName: python:3.7-alpine3.7
  Commands:
  - Env:
    - Key: ERRBOT_VENV_DIR
      Value: /app-venv
    Name: env
  - CmdLine:
    - mkdir $ERRBOT_VENV_DIR && python -mvenv $ERRBOT_VENV_DIR
    Name: run
    PrependShell: true
  - Key: ERRBOT_OS_EXTRA_PACKAGES
    Name: arg
    Value: '""'
  - CmdLine:
    - apk add --update     gcc     libffi-dev     musl-dev     openssl-dev ${ERRBOT_OS_EXTRA_PACKAGES}
    Name: run
    PrependShell: true
  - Key: ERRBOT_EXTRA_MODULES
    Name: arg
    Value: '""'
  - Key: ERRBOT_VERSION
    Name: arg
    Value: '""'
  - Env:
    - Key: ERRBOT_VERSION
      Value: '"${ERRBOT_VERSION}"'
    Name: env
  - CmdLine:
    - ${ERRBOT_VENV_DIR}/bin/pip install errbot[${ERRBOT_EXTRA_MODULES}]${ERRBOT_VERSION:+"=="${ERRBOT_VERSION}}
    Name: run
    PrependShell: true
  From:
    Image: python:3.7-alpine3.7
  Name: build_image
  Platform: ""
  SourceCode: FROM python:3.7-alpine3.7 as build_image
- BaseName: python:3.7-alpine3.7
  Commands:
  - Labels:
    - Key: maintainer
      Value: maks.nazarenko@gmail.com
    Name: label
  - Key: PROJECT_APP_USER_UID
    Name: arg
    Value: "10000"
  - Key: PROJECT_APP_USER_GID
    Name: arg
    Value: "10000"
  - Env:
    - Key: ERRBOT_VENV_DIR
      Value: /app-venv
    Name: env
  - Env:
    - Key: ERRBOT_APP_DIR
      Value: /app
    Name: env
  - Env:
    - Key: ERRBOT_USER
      Value: errbot
    Name: env
  - Env:
    - Key: ERRBOT_GROUP
      Value: errbot
    Name: env
  - Env:
    - Key: ERRBOT_DATA_DIR
      Value: ${ERRBOT_APP_DIR}/data
    Name: env
  - CmdLine:
    - addgroup -g $PROJECT_APP_USER_GID $ERRBOT_GROUP
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser     -u $PROJECT_APP_USER_UID     -D     -H     -s /sbin/nologin     -G
      $ERRBOT_GROUP     $ERRBOT_USER
    Name: run
    PrependShell: true
  - Chown: ""
    From: build_image
    Name: copy
    SourcesAndDest:
    - ${ERRBOT_VENV_DIR}/
    - ${ERRBOT_VENV_DIR}/
  - CmdLine:
    - mkdir -p ${ERRBOT_APP_DIR} ${ERRBOT_DATA_DIR} && chown -R ${ERRBOT_USER}:${ERRBOT_GROUP}
      ${ERRBOT_APP_DIR} ${ERRBOT_DATA_DIR}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $ERRBOT_APP_DIR
  - Name: user
    User: $ERRBOT_USER
  - Env:
    - Key: PATH
      Value: '"${ERRBOT_VENV_DIR}/bin:${PATH}"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config_*_provider.py
    - ${ERRBOT_APP_DIR}/
  - Name: volume
    Volumes:
    - ${ERRBOT_DATA_DIR}/
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - errbot
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.7-alpine3.7
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.7-alpine3.7
