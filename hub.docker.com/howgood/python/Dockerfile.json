{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "howgood/base",
      "SourceCode": "FROM howgood/base",
      "Platform": "",
      "From": {
        "Image": "howgood/base"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends       tcl       tk       wget   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "2.7.13"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "9.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 buildDeps=' \t\ttcl-dev \t\ttk-dev \t' \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\t\u0026\u0026 wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \t\u0026\u0026 wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \t\u0026\u0026 gpg --batch --verify python.tar.xz.asc python.tar.xz \t\u0026\u0026 rm -r \"$GNUPGHOME\" python.tar.xz.asc \t\u0026\u0026 mkdir -p /usr/src/python \t\u0026\u0026 tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t\u0026\u0026 rm python.tar.xz \t\t\u0026\u0026 cd /usr/src/python \t\u0026\u0026 ./configure \t\t--enable-shared \t\t--enable-unicode=ucs4 \t\u0026\u0026 make -j$(nproc) \t\u0026\u0026 make install \t\u0026\u0026 ldconfig \t\t\t\u0026\u0026 wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \t\t\u0026\u0026 python2 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \t\t\u0026\u0026 rm /tmp/get-pip.py \t\u0026\u0026 pip install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \t\u0026\u0026 [ \"$(pip list |tac|tac| awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }')\" = \"$PYTHON_PIP_VERSION\" ] \t\t\u0026\u0026 find /usr/local -depth \t\t\\( \t\t\t\\( -type d -a -name test -o -name tests \\) \t\t\t-o \t\t\t\\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \t\t\\) -exec rm -rf '{}' + \t\u0026\u0026 apt-get purge -y --auto-remove $buildDeps \t\u0026\u0026 rm -rf /usr/src/python ~/.cache /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONDONTWRITEBYTECODE",
              "Value": "1"
            },
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            },
            {
              "Key": "C_FORCE_ROOT",
              "Value": "1"
            },
            {
              "Key": "XDG_CACHE_HOME",
              "Value": "/tmp"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}