{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Yurii K",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/usr/src"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq update   \u0026\u0026 apt-get -qq upgrade   \u0026\u0026 apt-get -qq install git dos2unix man nano wget htop iputils-ping mysql-client xz-utils gcc make autoconf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qq install apache2   \u0026\u0026 a2dismod -f autoindex \u0026\u0026 a2dismod -f mpm_event \u0026\u0026 a2enmod mpm_prefork"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-php.conf",
            "/etc/apache2/conf-available/docker-php.conf"
          ]
        },
        {
          "CmdLine": [
            "a2enconf docker-php   \u0026\u0026 a2enmod rewrite   \u0026\u0026 a2enmod ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qq install xz-utils re2c pkg-config libxml2-dev libssl-dev libbz2-dev libcurl4-openssl-dev libpq-dev libjpeg-dev libpng-dev libedit-dev libxslt-dev libzip-dev libsqlite3-dev apache2-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://ftp.gnu.org/gnu/bison/bison-2.7.tar.xz   \u0026\u0026 tar -xf bison-2.7.tar.xz   \u0026\u0026 cd bison-2.7   \u0026\u0026 ./configure --silent   \u0026\u0026 make --silent \u0026\u0026 make install \u0026\u0026 make clean   \u0026\u0026 mkdir /usr/src/php   \u0026\u0026 mkdir -p /usr/local/etc/php/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://secure.php.net/get/php-5.6.25.tar.xz/from/this/mirror -O php-5.6.25.tar.xz   \u0026\u0026 tar -xf php-5.6.25.tar.xz -C /usr/src/php --strip-components=1   \u0026\u0026 cd /usr/src/php   \u0026\u0026 ./configure --silent   --with-config-file-path=\"/usr/local/etc/php\"   --with-config-file-scan-dir=\"/usr/local/etc/php/conf.d\"   --with-apxs2 --with-xsl --with-openssl --with-xmlrpc --with-curl --with-zlib --with-bz2 --with-libzip   --with-gd --with-libedit --with-pdo-mysql --with-pdo-pgsql --with-jpeg-dir --with-png-dir   --enable-libxml --enable-calendar --enable-exif --enable-ftp --enable-mbstring --enable-intl --enable-soap --enable-zip   --disable-ipv6 --disable-cgi --disable-mysqlnd-compression-support --without-pear   \u0026\u0026 make --silent \u0026\u0026 make install --silent \u0026\u0026 make clean --silent   \u0026\u0026 cp php.ini-development /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://xdebug.org/files/xdebug-2.4.1.tgz   \u0026\u0026 tar -xzf xdebug-2.4.1.tgz   \u0026\u0026 cd xdebug-2.4.1   \u0026\u0026 phpize   \u0026\u0026 ./configure --silent   \u0026\u0026 make --silent   \u0026\u0026 cp modules/xdebug.so /usr/local/lib/php/extensions/no-debug-non-zts-20131226"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-php.ini",
            "/usr/local/etc/php/conf.d/docker-php.ini"
          ]
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qq install sendmail"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/yurii-tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "yurii-tools/startup.sh",
            "/opt/yurii-tools/startup.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/yurii-tools/startup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /var/log/phpmail.log   \u0026\u0026 chown www-data:www-data /var/log/phpmail.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://phar.phpunit.de/phpunit.phar   \u0026\u0026 chmod +x phpunit.phar   \u0026\u0026 mv phpunit.phar /usr/local/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/composer   \u0026\u0026 wget https://getcomposer.org/composer.phar -O /opt/composer/composer.phar   \u0026\u0026 chmod +x /opt/composer/composer.phar   \u0026\u0026 echo \"alias composer='/opt/composer/composer.phar'\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/drush   \u0026\u0026 git clone --single-branch --branch master https://github.com/drush-ops/drush.git /opt/drush"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"alias drush='/opt/drush/drush'\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/drush   \u0026\u0026 /opt/composer/composer.phar install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://ftp.drupal.org/files/projects/potx-7.x-1.0.tar.gz   \u0026\u0026 tar xvf potx-7.x-1.0.tar.gz   \u0026\u0026 mkdir /opt/drupal   \u0026\u0026 mkdir /opt/drupal/potx   \u0026\u0026 cp potx/potx-cli.php /opt/drupal/potx/   \u0026\u0026 cp potx/potx.inc /opt/drupal/potx/   \u0026\u0026 rm potx-7.x-1.0.tar.gz   \u0026\u0026 rm -rf potx   \u0026\u0026 echo \"alias drupal_potx='php /opt/drupal/potx/potx-cli.php'\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qq install supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "CmdLine": [
            "apt-get -qq remove make gcc xz-utils --purge --auto-remove   \u0026\u0026 rm -rf /var/lib/apt/lists/*    \u0026\u0026 rm -rf /usr/src/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80",
            "9000"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}