MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y         build-essential         curl         git         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python-dev         python-numpy         python-pip         software-properties-common         swig         zip         zlib1g-dev         libcurl3-dev         &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fSsL -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py
      &&     rm get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install enum34 futures mock six &&     pip install --pre 'protobuf>=3.0.0a3'
      &&     pip install -i https://testpypi.python.org/simple --pre grpcio
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:openjdk-r/ppa &&     apt-get update &&     apt-get
      install -y openjdk-8-jdk openjdk-8-jre-headless &&     apt-get clean &&     rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "startup --batch" >>/root/.bazelrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "build --spawn_strategy=standalone --genrule_strategy=standalone"     >>/root/.bazelrc
    Name: run
    PrependShell: true
  - Env:
    - Key: BAZELRC
      Value: /root/.bazelrc
    Name: env
  - Env:
    - Key: BAZEL_VERSION
      Value: 0.4.5
    Name: env
  - Name: workdir
    Path: /
  - CmdLine:
    - mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh
      &&     curl -fSsL -o /bazel/LICENSE https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE
      &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh
      &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --recurse-submodules https://github.com/tensorflow/serving &&   cd
      serving &&   git checkout
    Name: run
    PrependShell: true
  - Env:
    - Key: CI_BUILD_PYTHON
      Value: python
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH
    Name: env
  - Env:
    - Key: TF_NEED_CUDA
      Value: "1"
    Name: env
  - Env:
    - Key: TF_CUDA_COMPUTE_CAPABILITIES
      Value: 3.0,3.5,5.2,6.0,6.1
    Name: env
  - CmdLine:
    - ls -lah /usr/local/cuda/lib64/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/lib/x86_64-linux-gnu/include/ &&   ln -s /usr/lib/x86_64-linux-gnu/include/cudnn.h
      /usr/lib/x86_64-linux-gnu/include/cudnn.h &&   ln -s /usr/include/cudnn.h /usr/local/cuda/include/cudnn.h
      &&   ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so /usr/local/cuda/lib64/libcudnn.so
      &&   ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.6 /usr/local/cuda/lib64/libcudnn.so.6
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - git clone https://github.com/NVIDIA/nccl.git &&     cd nccl/ &&     make CUDA_HOME=/usr/local/cuda
      &&     make install &&     mkdir -p /usr/local/include/external/nccl_archive/src
      &&     ln -s /usr/local/include/nccl.h /usr/local/include/external/nccl_archive/src/nccl.h
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /serving/tensorflow
  - CmdLine:
    - tensorflow/tools/ci_build/builds/configured GPU
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04
