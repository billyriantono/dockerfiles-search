MetaArgs: null
Stages:
- BaseName: python:latest
  Commands:
  - CmdLine:
    - apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y bind9
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/bind_backup
  - CmdLine:
    - cp -rfv /etc/bind/* .
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/server
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - server
    - .
  - CmdLine:
    - rm -rfv config
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rfv venv
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rfv .idea
    Name: run
    PrependShell: true
  - CmdLine:
    - python setup.py bdist_wheel
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/server/dist
  - CmdLine:
    - find -maxdepth 1 -type f -name '*.whl' -exec pip install {} \;
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app/client
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - client
    - .
  - CmdLine:
    - rm -rfv node_modules
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rfv .idea
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y npm
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g npm@latest
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g n
    Name: run
    PrependShell: true
  - CmdLine:
    - n stable
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker.sh
    - .
  - Name: expose
    Ports:
    - 8000/tcp
  - Name: expose
    Ports:
    - 3000/tcp
  - Name: expose
    Ports:
    - 53/tcp
  - Name: expose
    Ports:
    - 53/udp
  - CmdLine:
    - ./docker.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine: []
    Name: cmd
    PrependShell: false
  From:
    Image: python:latest
  Name: ""
  Platform: ""
  SourceCode: FROM python:latest
