{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-apache",
      "SourceCode": "FROM php:7.2-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2-apache"
      },
      "Commands": [
        {
          "Maintainer": "Pierre Cheynier \u003cpierre.cheynier@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PHPIPAM_SOURCE",
              "Value": "https://github.com/phpipam/phpipam/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPIPAM_VERSION",
              "Value": "1.3.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPMAILER_SOURCE",
              "Value": "https://github.com/PHPMailer/PHPMailer/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPMAILER_VERSION",
              "Value": "5.2.21"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPSAML_SOURCE",
              "Value": "https://github.com/onelogin/php-saml/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPSAML_VERSION",
              "Value": "2.10.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEB_REPO",
              "Value": "/var/www/html"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -i /etc/apt/sources.list -e 's/$/ non-free'/ \u0026\u0026     apt-get update \u0026\u0026 apt-get -y upgrade \u0026\u0026     rm /etc/apt/preferences.d/no-debian-php \u0026\u0026     apt-get install -y libcurl4-gnutls-dev libgmp-dev libmcrypt-dev libfreetype6-dev libjpeg-dev libpng-dev libldap2-dev libsnmp-dev snmp-mibs-downloader iputils-ping \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/mibs/ietf \u0026\u0026     curl -s ftp://ftp.cisco.com/pub/mibs/v2/CISCO-SMI.my -o /var/lib/mibs/ietf/CISCO-SMI.txt \u0026\u0026     curl -s ftp://ftp.cisco.com/pub/mibs/v2/CISCO-TC.my -o /var/lib/mibs/ietf/CISCO-TC.txt \u0026\u0026     curl -s ftp://ftp.cisco.com/pub/mibs/v2/CISCO-VTP-MIB.my -o /var/lib/mibs/ietf/CISCO-VTP-MIB.txt \u0026\u0026     curl -s ftp://ftp.cisco.com/pub/mibs/v2/MPLS-VPN-MIB.my -o /var/lib/mibs/ietf/MPLS-VPN-MIB.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure mysqli --with-mysqli=mysqlnd \u0026\u0026     docker-php-ext-install mysqli \u0026\u0026     docker-php-ext-configure gd --enable-gd-native-ttf --with-freetype-dir=/usr/include/freetype2 --with-png-dir=/usr/include --with-jpeg-dir=/usr/include \u0026\u0026     docker-php-ext-install gd \u0026\u0026     docker-php-ext-install curl \u0026\u0026     docker-php-ext-install json \u0026\u0026     docker-php-ext-install snmp \u0026\u0026     docker-php-ext-install sockets \u0026\u0026     docker-php-ext-install pdo_mysql \u0026\u0026     docker-php-ext-install gettext \u0026\u0026     ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \u0026\u0026     docker-php-ext-configure gmp --with-gmp=/usr/include/x86_64-linux-gnu \u0026\u0026     docker-php-ext-install gmp \u0026\u0026     docker-php-ext-install pcntl \u0026\u0026     docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu \u0026\u0026     docker-php-ext-install ldap \u0026\u0026     pecl install mcrypt-1.0.1 \u0026\u0026     docker-php-ext-enable mcrypt \u0026\u0026     echo \". /etc/environment\" \u003e\u003e /etc/apache2/envvars \u0026\u0026     a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "${PHPIPAM_SOURCE}/archive/${PHPIPAM_VERSION}.tar.gz",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "tar -xzf /tmp/${PHPIPAM_VERSION}.tar.gz -C ${WEB_REPO}/ --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "${PHPMAILER_SOURCE}/archive/v${PHPMAILER_VERSION}.tar.gz",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "tar -xzf /tmp/v${PHPMAILER_VERSION}.tar.gz -C ${WEB_REPO}/functions/PHPMailer/ --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "${PHPSAML_SOURCE}/archive/v${PHPSAML_VERSION}.tar.gz",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "tar -xzf /tmp/v${PHPSAML_VERSION}.tar.gz -C ${WEB_REPO}/functions/php-saml/ --strip-components=1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHPIPAM_BASE",
              "Value": "/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cp ${WEB_REPO}/config.dist.php ${WEB_REPO}/config.php \u0026\u0026     chown www-data /var/www/html/app/admin/import-export/upload \u0026\u0026     chown www-data /var/www/html/app/subnets/import-subnet/upload \u0026\u0026     chown www-data /var/www/html/css/images/logo \u0026\u0026     echo \"\\$db['webhost'] = '%';\" \u003e\u003e ${WEB_REPO}/config.php \u0026\u0026     sed -i -e \"s/\\['host'\\] = 'localhost'/\\['host'\\] = getenv(\\\"MYSQL_ENV_MYSQL_HOST\\\") ?: \\\"mysql\\\"/\"     -e \"s/\\['user'\\] = 'phpipam'/\\['user'\\] = getenv(\\\"MYSQL_ENV_MYSQL_USER\\\") ?: \\\"root\\\"/\"     -e \"s/\\['name'\\] = 'phpipam'/\\['name'\\] = getenv(\\\"MYSQL_ENV_MYSQL_DB\\\") ?: \\\"phpipam\\\"/\"     -e \"s/\\['pass'\\] = 'phpipamadmin'/\\['pass'\\] = getenv(\\\"MYSQL_ENV_MYSQL_ROOT_PASSWORD\\\")/\"     -e \"s/\\['port'\\] = 3306;/\\['port'\\] = 3306;\\n\\n\\$password_file = getenv(\\\"MYSQL_ENV_MYSQL_PASSWORD_FILE\\\");\\nif(file_exists(\\$password_file))\\n\\$db\\['pass'\\] = preg_replace(\\\"\\/\\\\\\\\s+\\/\\\", \\\"\\\", file_get_contents(\\$password_file));/\"     -e \"s/define('BASE', \\\"\\/\\\")/define('BASE', getenv(\\\"PHPIPAM_BASE\\\"))/\"     -e \"s/\\$gmaps_api_key.*/\\$gmaps_api_key = getenv(\\\"GMAPS_API_KEY\\\") ?: \\\"\\\";/\"     -e \"s/\\$gmaps_api_geocode_key.*/\\$gmaps_api_geocode_key = getenv(\\\"GMAPS_API_GEOCODE_KEY\\\") ?: \\\"\\\";/\"     ${WEB_REPO}/config.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        }
      ]
    }
  ]
}