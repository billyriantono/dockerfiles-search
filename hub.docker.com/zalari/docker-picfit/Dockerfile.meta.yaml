MetaArgs: null
Stages:
- As: buildagent
  BaseName: library/golang
  Commands:
  - Env:
    - Key: PICFIT_VERSION
      Value: '"0.5.1"'
    - Key: PICFIT_WORKDIR
      Value: '"/go/src/github.com/thoas/picfit"'
    Name: env
  - CmdLine:
    - curl https://github.com/thoas/picfit/archive/${PICFIT_VERSION}.tar.gz -L -O;
      tar -zxvf ${PICFIT_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${PICFIT_WORKDIR}; mkdir -p ${PICFIT_WORKDIR}/ssl; cd picfit-${PICFIT_VERSION};
      mv ./* ${PICFIT_WORKDIR}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${PICFIT_WORKDIR}
  - CmdLine:
    - make docker-build-static
    Name: run
    PrependShell: true
  From:
    Image: library/golang
  Name: buildagent
  Platform: ""
  SourceCode: FROM library/golang as buildagent
- BaseName: alpine:3.7
  Commands:
  - Env:
    - Key: PICFIT_VERSION
      Value: '"0.5.1"'
    - Key: PICFIT_WORKDIR
      Value: '"/go/src/github.com/thoas/picfit"'
    - Key: PICFIT_CONFIGDIR
      Value: '"/etc/picfit"'
    Name: env
  - Chown: ""
    From: buildagent
    Name: copy
    SourcesAndDest:
    - ${PICFIT_WORKDIR}/bin/picfit
    - /bin/picfit
  - Chown: ""
    From: buildagent
    Name: copy
    SourcesAndDest:
    - ${PICFIT_WORKDIR}/ssl
    - /etc/ssl
  - CmdLine:
    - mkdir -p ${PICFIT_CONFIGDIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/picfit -c ${PICFIT_CONFIGDIR}/config.json
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
