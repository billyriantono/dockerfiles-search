{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:testing",
      "SourceCode": "FROM debian:testing",
      "Platform": "",
      "From": {
        "Image": "debian:testing"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "org.label-schema.license",
              "Value": "\"GPL-2.0\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/rocker-org/r-base\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Rocker Project\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Dirk Eddelbuettel \u003cedd@debian.org\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "useradd docker \t\u0026\u0026 mkdir /home/docker \t\u0026\u0026 chown docker:docker /home/docker \t\u0026\u0026 addgroup docker staff"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends \t\ted \t\tless \t\tlocales \t\tvim-tiny \t\twget \t\tca-certificates \t\tfonts-texgyre \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \t\u0026\u0026 locale-gen en_US.utf8 \t\u0026\u0026 /usr/sbin/update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://http.debian.net/debian sid main\" \u003e /etc/apt/sources.list.d/debian-unstable.list         \u0026\u0026 echo 'APT::Default-Release \"testing\";' \u003e /etc/apt/apt.conf.d/default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "R_BASE_VERSION",
              "Value": "3.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -t unstable -y --no-install-recommends \t\tlittler                 r-cran-littler                 r-cran-stringr \t\tr-base=${R_BASE_VERSION}-* \t\tr-base-dev=${R_BASE_VERSION}-* \t\tr-recommended=${R_BASE_VERSION}-*         \u0026\u0026 echo 'options(repos = c(CRAN = \"https://cloud.r-project.org/\"))' \u003e\u003e /etc/R/Rprofile.site         \u0026\u0026 echo 'source(\"/etc/R/Rprofile.site\")' \u003e\u003e /etc/littler.r \t\u0026\u0026 ln -s /usr/lib/R/site-library/littler/examples/install.r /usr/local/bin/install.r \t\u0026\u0026 ln -s /usr/lib/R/site-library/littler/examples/install2.r /usr/local/bin/install2.r \t\u0026\u0026 ln -s /usr/lib/R/site-library/littler/examples/installGithub.r /usr/local/bin/installGithub.r \t\u0026\u0026 ln -s /usr/lib/R/site-library/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r \t\u0026\u0026 install.r docopt \t\u0026\u0026 rm -rf /tmp/downloaded_packages/ /tmp/*.rds \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get install -y   git-core   libssl-dev   libcurl4-gnutls-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e 'install.packages(c(\"devtools\"))'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e 'devtools::install_github(\"zalari/docker-plumber\",ref=\"v0.4.6\")'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "CmdLine": [
            "R",
            "-e",
            "pr \u003c- plumber::plumb(commandArgs()[4]); pr$run(host='0.0.0.0', port=8000)"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/local/lib/R/site-library/plumber/examples/04-mean-sum/plumber.R"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}