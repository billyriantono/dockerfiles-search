{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "lsiobase/nginx:3.10",
      "SourceCode": "FROM lsiobase/nginx:3.10",
      "Platform": "",
      "From": {
        "Image": "lsiobase/nginx:3.10"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "RUTORRENT_RELEASE",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "build_version",
              "Value": "\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"alex-phillips\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "patches/",
            "/defaults/patches/"
          ]
        },
        {
          "CmdLine": [
            "echo \"**** install build packages ****\" \u0026\u0026  apk add --no-cache --virtual=build-dependencies \tg++ \tlibffi-dev \topenssl-dev \tpython3-dev \u0026\u0026  echo \"**** install runtime packages ****\" \u0026\u0026  apk add --no-cache --upgrade \tbind-tools \tcurl \tfcgi \tffmpeg \tgeoip \tgzip \tlibffi \tmediainfo \topenssl \tphp7 \tphp7-cgi \tphp7-curl \tphp7-pear \tphp7-zip \tprocps \tpython3 \trtorrent \tscreen \tsox \tunrar \tzip \u0026\u0026  echo \"**** install pip packages ****\" \u0026\u0026  pip3 install --no-cache-dir -U \tcfscrape \tcloudscraper \u0026\u0026  echo \"**** install rutorrent ****\" \u0026\u0026  if [ -z ${RUTORRENT_RELEASE+x} ]; then \tRUTORRENT_RELEASE=$(curl -sX GET \"https://api.github.com/repos/Novik/ruTorrent/releases/latest\" \t| awk '/tag_name/{print $4;exit}' FS='[\"\"]');  fi \u0026\u0026  curl -o  /tmp/rutorrent.tar.gz -L \t\"https://github.com/Novik/rutorrent/archive/${RUTORRENT_RELEASE}.tar.gz\" \u0026\u0026  mkdir -p \t/app/rutorrent \t/defaults/rutorrent-conf \u0026\u0026  tar xf  /tmp/rutorrent.tar.gz -C \t/app/rutorrent --strip-components=1 \u0026\u0026  mv /app/rutorrent/conf/* \t/defaults/rutorrent-conf/ \u0026\u0026  rm -rf \t/defaults/rutorrent-conf/users \u0026\u0026  echo \"**** patch snoopy.inc for rss fix ****\" \u0026\u0026  cd /app/rutorrent/php \u0026\u0026  patch \u003c /defaults/patches/snoopy.patch \u0026\u0026  echo \"**** cleanup ****\" \u0026\u0026  apk del --purge \tbuild-dependencies \u0026\u0026  rm -rf \t/etc/nginx/conf.d/default.conf \t/root/.cache \t/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/downloads"
          ]
        }
      ]
    }
  ]
}