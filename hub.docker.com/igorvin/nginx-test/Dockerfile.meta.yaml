MetaArgs: null
Stages:
- BaseName: blacklabelops/alpine:3.8
  Commands:
  - Key: NGINX_VERSION
    Name: arg
    Value: latest
  - Key: CONTAINER_UID
    Name: arg
    Value: "1000"
  - Key: CONTAINER_GID
    Name: arg
    Value: "1000"
  - Key: BUILD_DATE
    Name: arg
    Value: undefined
  - Env:
    - Key: NGINX_DIRECTORY
      Value: /etc/nginx
    Name: env
  - CmdLine:
    - export CONTAINER_USER=nginx &&     export CONTAINER_GROUP=nginx &&     addgroup
      -g $CONTAINER_GID $CONTAINER_GROUP &&     adduser -u $CONTAINER_UID -G $CONTAINER_GROUP
      -h /home/$CONTAINER_USER -s /bin/bash -S $CONTAINER_USER &&     apk add --update       ca-certificates       curl       openssl       apache2-utils
      &&     if  [ "${NGINX_VERSION}" = "latest" ];       then apk add nginx ;       else
      apk add "nginx=${NGINX_VERSION}" ;     fi &&     rm -f /${NGINX_DIRECTORY}/nginx.conf
      &&     rm -rf ${NGINX_DIRECTORY}/conf.d ${NGINX_DIRECTORY}/default.d &&     mkdir
      -p /var/log/nginx &&     touch /var/log/nginx/error.log &&     mkdir -p ${NGINX_DIRECTORY}/default.d
      &&     mkdir -p ${NGINX_DIRECTORY}/conf.d &&     mkdir -p ${NGINX_DIRECTORY}/keys
      &&     mkdir -p /run/nginx &&     chown -R $CONTAINER_UID:$CONTAINER_GID ${NGINX_DIRECTORY}
      /var/log/nginx &&     chown -R $CONTAINER_UID:$CONTAINER_GID ${NGINX_DIRECTORY}
      /var/lib/nginx &&     chown -R $CONTAINER_UID:$CONTAINER_GID ${NGINX_DIRECTORY}
      /run/nginx &&     rm -rf /var/cache/apk/* && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Labels:
    - Key: com.blacklabelops.application.nginx.version
      Value: $NGINX_VERSION
    - Key: com.blacklabelops.application.nginx.userid
      Value: $CONTAINER_UID
    - Key: com.blacklabelops.application.nginx.groupid
      Value: $CONTAINER_GID
    - Key: com.blacklabelops.image.builddate.nginx
      Value: ${BUILD_DATE}
    Name: label
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - imagescripts/*.sh
    - /opt/nginx/
  - CmdLine:
    - /sbin/tini
    - --
    - /opt/nginx/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: volume
    Volumes:
    - /home/nginx
    - /var/log/nginx
  - CmdLine:
    - nginx
    Name: cmd
    PrependShell: false
  From:
    Image: blacklabelops/alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM blacklabelops/alpine:3.8
