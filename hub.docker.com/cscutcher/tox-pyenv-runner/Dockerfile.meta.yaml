MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: cscutche@cisco.com
    Name: maintainer
  - Env:
    - Key: PYENV_ROOT
      Value: /pyenv/
    Name: env
  - Env:
    - Key: PATH
      Value: /pyenv/shims:/pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - Env:
    - Key: PYENV_INSTALLER_ROOT
      Value: /pyenv-installer/
    Name: env
  - Env:
    - Key: PYENV_REQUIRED_PYTHON_BASENAME
      Value: required_python_versions.txt
    Name: env
  - Env:
    - Key: PYENV_REQUIRED_PYTHON
      Value: /pyenv-config/$PYENV_REQUIRED_PYTHON_BASENAME
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - third-party/pyenv-installer
    - $PYENV_INSTALLER_ROOT
  - CmdLine:
    - apt-get update && apt-get install -y     build-essential     curl     gawk     git     libbz2-dev     libffi-dev     libreadline-dev     libsqlite3-dev     libssl-dev     libxml2-dev     libxslt-dev     mercurial     openjdk-9-jre-headless     python-dev     python-openssl     python-pip     python-tox     zlib1g-dev     &&
      apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install tox-pyenv
    Name: run
    PrependShell: true
  - CmdLine:
    - $PYENV_INSTALLER_ROOT/bin/pyenv-installer
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - required_python_versions.txt
    - $PYENV_REQUIRED_PYTHON
  - CmdLine:
    - while read line; do     pyenv install $line || exit 1 ;    done < $PYENV_REQUIRED_PYTHON
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run_tox.sh
    - /bin/run_tox.sh
  - Env:
    - Key: HOME
      Value: /pyenv-config/
    Name: env
  - Name: volume
    Volumes:
    - /app
  - Name: workdir
    Path: /app
  - CmdLine:
    - /bin/run_tox.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
