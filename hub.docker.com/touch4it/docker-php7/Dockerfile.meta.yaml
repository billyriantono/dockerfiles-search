MetaArgs: null
Stages:
- BaseName: php:7.2-fpm-alpine3.10
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Touch4IT <admin@touch4it.com>"'
    Name: label
  - Env:
    - Key: ADMIN_EMAIL
      Value: webmaster@localhost
    Name: env
  - Env:
    - Key: PHP_TIME_ZONE
      Value: UTC
    Name: env
  - Env:
    - Key: PHP_MEMORY_LIMIT
      Value: 256M
    Name: env
  - Env:
    - Key: PHP_UPLOAD_MAX_FILESIZE
      Value: 32M
    Name: env
  - Env:
    - Key: PHP_POST_MAX_SIZE
      Value: 32M
    Name: env
  - CmdLine:
    - "apk --update add --no-cache \t\tacl \t\tbash \t\tfreetype-dev \t\tgettext-dev
      \t\tgit \t\ticu-dev \t\tlibjpeg-turbo-dev \t\tlibpng-dev \t\tlibzip-dev \t\tphp7-dom
      \t\tphp7-xml \t\tpostgresql-dev \t\tzip \t\tgrep \t&& docker-php-ext-configure
      gd \t\t--with-png-dir=/usr/include/ \t\t--with-jpeg-dir=/usr/include/ \t\t--with-freetype-dir=/usr/include/
      \t&& docker-php-ext-configure pgsql \t\t-with-pgsql=/usr/local/pgsql \t&& docker-php-ext-configure
      zip \t\t--with-libzip \t&& docker-php-ext-install \t\tbcmath \t\texif \t\tgd
      \t\tgettext \t\tintl \t\tjson \t\tmbstring \t\tmysqli \t\topcache \t\tpdo \t\tpdo_mysql
      \t\tpdo_pgsql \t\tpgsql \t\tzip     && docker-php-ext-configure bcmath --enable-bcmath"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -m 0644 -p /etc/cron.d \t&& mkdir -m 0644 -p /var/log/cron \t&& touch
      /var/log/cron/cron.log"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -sS https://getcomposer.org/installer | php \t&& mv composer.phar /usr/local/bin/composer
      \t&& composer self-update"
    Name: run
    PrependShell: true
  - Env:
    - Key: NGINX_VERSION
      Value: 1.16.1
    Name: env
  - Env:
    - Key: NJS_VERSION
      Value: 0.3.5
    Name: env
  - Env:
    - Key: PKG_RELEASE
      Value: "1"
    Name: env
  - CmdLine:
    - set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h /var/cache/nginx
      -s /sbin/nologin -G nginx -g nginx nginx     && apkArch="$(cat /etc/apk/arch)"     &&
      nginxPackages="         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     "     &&
      case "$apkArch" in         x86_64)             set -x             && KEY_SHA512="e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a
      *stdin"             && apk add --no-cache --virtual .cert-deps                 openssl             &&
      wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             &&
      if [ "$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl
      sha512 -r)" = "$KEY_SHA512" ]; then                  echo "key verification
      succeeded!";                  mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;                else                  echo
      "key verification failed!";                  exit 1;                fi             &&
      printf "%s%s%s\n"                 "https://nginx.org/packages/alpine/v"                 `egrep
      -o '^[0-9]+\.[0-9]+' /etc/alpine-release`                 "/main"             |
      tee -a /etc/apk/repositories             && apk del .cert-deps             ;;         *)             set
      -x             && tempDir="$(mktemp -d)"             && chown nobody:nobody
      $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             &&
      su nobody -s /bin/sh -c "                 export HOME=${tempDir}                 &&
      cd ${tempDir}                 && hg clone https://hg.nginx.org/pkg-oss                 &&
      cd pkg-oss                 && hg up -r 429                 && cd alpine                 &&
      make all                 && apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz
      ${tempDir}/packages/alpine/${apkArch}/*.apk                 && abuild-sign -k
      ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 "             &&
      echo "${tempDir}/packages/alpine/" >> /etc/apk/repositories             && cp
      ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             && apk del
      .build-deps             ;;     esac     && apk add --no-cache $nginxPackages     &&
      if [ -n "$tempDir" ]; then rm -rf "$tempDir"; fi     && if [ -n "/etc/apk/keys/abuild-key.rsa.pub"
      ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     && if [ -n "/etc/apk/keys/nginx_signing.rsa.pub"
      ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     && sed -i '$ d' /etc/apk/repositories     &&
      apk add --no-cache --virtual .gettext gettext     && mv /usr/bin/envsubst /tmp/         &&
      runDeps="$(         scanelf --needed --nobanner /tmp/envsubst             |
      awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }'             | sort -u             |
      xargs -r apk info --installed             | sort -u     )"     && apk add --no-cache
      $runDeps     && apk del .gettext     && mv /tmp/envsubst /usr/local/bin/     &&
      apk add --no-cache tzdata     && ln -sf /dev/stdout /var/log/nginx/access.log     &&
      ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-vars.ini
    - /usr/local/etc/php/conf.d/docker-vars.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./www.conf
    - /usr/local/etc/php-fpm.d/www.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./nginx.vh.default.conf
    - /etc/nginx/conf.d/default.conf
  - Name: expose
    Ports:
    - "80"
  - Name: stopsignal
    Signal: SIGTERM
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.2-fpm-alpine3.10
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-fpm-alpine3.10
