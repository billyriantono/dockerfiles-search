MetaArgs:
- DefaultValue: "7.2"
  Key: PHP_VERSION
  ProvidedValue: null
  Value: "7.2"
Stages:
- BaseName: php:${PHP_VERSION:+${PHP_VERSION}-}fpm-alpine3.10
  Commands:
  - Env:
    - Key: USER_HOME
      Value: /var/www
    Name: env
  - Env:
    - Key: DOCUMENT_ROOT
      Value: /var/www/html/public
    Name: env
  - CmdLine:
    - 'echo "PHP extension: mysqli pdo_mysql" &&  docker-php-ext-install         mysqli         pdo_mysql'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension: opcache" &&  docker-php-ext-install         opcache'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension: exif" &&  docker-php-ext-install         exif'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension: bcmath" &&  docker-php-ext-install         bcmath'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension: gd" &&  apk add --no-cache --update --virtual .build-deps         libpng-dev
      &&  apk add --no-cache         libpng &&  docker-php-ext-install gd &&  apk
      del --purge .build-deps'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension: zip" &&  apk add --no-cache --update --virtual .build-deps         libzip-dev
      &&  docker-php-ext-install zip &&  apk del --purge .build-deps'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension: intl" &&  apk add --no-cache --update --virtual .build-deps         icu-dev
      &&  apk add --no-cache         icu-libs         libintl &&  docker-php-ext-install
      intl &&  apk del --purge .build-deps'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension: ldap" &&  apk add --no-cache --update --virtual .build-deps         openldap-dev
      &&  apk add --no-cache         libldap &&  docker-php-ext-install         ldap
      &&  apk del --purge .build-deps'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension: pgsql pdo_pgsql" &&  apk add --no-cache --update --virtual
      .build-deps         postgresql-dev &&  apk add --no-cache         libpq &&  docker-php-ext-install         pgsql         pdo_pgsql
      &&  apk del --purge .build-deps'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension: imagick" &&  apk add --no-cache --update --virtual .build-deps         ${PHPIZE_DEPS}         imagemagick-dev
      &&  apk add --no-cache         imagemagick &&  pecl install imagick &&  docker-php-ext-enable
      imagick &&  pecl clear-cache &&  apk del --purge .build-deps'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension: apcu" &&  apk add --no-cache --update --virtual .build-deps         ${PHPIZE_DEPS}
      &&  pecl install apcu &&  docker-php-ext-enable apcu &&  pecl clear-cache &&  apk
      del --purge .build-deps'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension: mongodb" &&  apk add --no-cache --update --virtual .build-deps         ${PHPIZE_DEPS}
      &&  pecl install mongodb &&  docker-php-ext-enable mongodb &&  pecl clear-cache
      &&  apk del --purge .build-deps'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension:  xdebug" &&  apk add --no-cache --update --virtual .build-deps         ${PHPIZE_DEPS}
      &&  pecl install xdebug &&  docker-php-ext-enable xdebug &&  pecl clear-cache
      &&  apk del --purge .build-deps &&  echo "xdebug.remote_enable=1" >> /usr/local/etc/php/conf.d/xdebug.ini'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "PHP extension: uploadprogress" &&  apk add --no-cache --update --virtual
      .build-deps         git &&  git clone https://github.com/php/pecl-php-uploadprogress/
      /usr/src/php/ext/uploadprogress/ &&  docker-php-ext-install uploadprogress &&  rm
      -fr /usr/src/php/ext/uploadprogress &&  apk del --purge .build-deps'
    Name: run
    PrependShell: true
  - CmdLine:
    - mv $PHP_INI_DIR/php.ini-development $PHP_INI_DIR/php.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php-development.ini
    - /usr/local/etc/php/conf.d/
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Sendmail" &&  apk add --no-cache ssmtp &&  echo 'sendmail_path = /usr/sbin/ssmtp
      -t' > /usr/local/etc/php/conf.d/mail.ini &&  {         echo 'mailhub=192.168.99.100:1025';         echo
      'FromLineOverride=YES';     } > /etc/ssmtp/ssmtp.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "nodejs yarn" &&  apk add --no-cache         npm         nodejs &&  npm
      install -g yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "System tools" &&  apk add --no-cache         ghostscript
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "${DOCUMENT_ROOT}"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Default data" &&  apk add --no-cache --update --virtual .build-deps         git
      &&  git clone https://gitlab.com/vavyskov/webserver-info.git /tmp/webserver-info
      &&  cp -R /tmp/webserver-info/src/. ${DOCUMENT_ROOT} &&  rm ${DOCUMENT_ROOT}/index.html
      &&  rm -fr /tmp/webserver-info &&  apk del --purge .build-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R 82:82 ${USER_HOME}
    Name: run
    PrependShell: true
  From:
    Image: php:${PHP_VERSION:+${PHP_VERSION}-}fpm-alpine3.10
  Name: ""
  Platform: ""
  SourceCode: FROM php:${PHP_VERSION:+${PHP_VERSION}-}fpm-alpine3.10
