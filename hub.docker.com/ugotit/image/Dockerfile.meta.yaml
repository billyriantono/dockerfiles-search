MetaArgs: null
Stages:
- BaseName: scratch
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"ugotit AT gmail.com"'
    - Key: keyax.os
      Value: '"ubuntu core"'
    - Key: keyax.os.ver
      Value: '"18.04 bionic"'
    - Key: keyax.vendor
      Value: '"Keyax"'
    Name: label
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ubuntu-bionic-core-cloudimg-amd64-root.tar.gz
    - /
  - CmdLine:
    - "set -xe \t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101'
      >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t&& dpkg-divert
      --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl
      \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t&& echo 'force-unsafe-io' >
      /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t&& echo 'DPkg::Post-Invoke { \"rm
      -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin
      || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke
      { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb
      /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&&
      echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean
      \t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages
      \t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order::
      \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t&& echo 'Apt::AutoRemove::SuggestsImportant
      \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/^#\s*\(deb.*universe\)$/\1/g' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /run/systemd && echo 'docker' > /run/systemd/container
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install --assume-yes --no-install-recommends \t\tcurl
      \t\twget \t\tsudo \t\tlibx11-6\t\tlibx11-xcb-dev  \tca-certificates     openssh-server
      \    gnupg2 \t\tdirmngr \t\tnano     python     jq \t\txz-utils     numactl
      \t\t&& apt-get autoremove && apt-get clean   \t&& rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - "set -ex; \tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\";
      \twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\";
      \tgpg2 --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;
      \  gpg2 --armor --export $key | apt-key add - ; \tchmod +x /usr/local/bin/gosu;
      \  gosu nobody true;"
    Name: run
    PrependShell: true
  - Env:
    - Key: JSYAML_VERSION
      Value: 3.10.0
    Name: env
  - CmdLine:
    - apt update && apt install nodejs npm -y
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >>
      /etc/apt/sources.list.d/google.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y git google-chrome-stable\tfonts-ipafont-gothic
      fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst        --no-install-recommends
      \    && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i puppeteer     && groupadd -r pptruser && useradd -r -g pptruser -G audio,video
      pptruser     && mkdir -p /home/pptruser/Downloads     && chown -R pptruser:pptruser
      /home/pptruser     && chown -R pptruser:pptruser /node_modules
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g cordova ionic
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Scratch: true
  Name: ""
  Platform: ""
  SourceCode: FROM scratch
