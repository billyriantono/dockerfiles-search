{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "backend-build",
      "BaseName": "golang:1.12",
      "SourceCode": "FROM golang:1.12 AS backend-build",
      "Platform": "",
      "As": "backend-build",
      "From": {
        "Image": "golang:1.12"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/go/src/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./backend",
            "."
          ]
        },
        {
          "Env": [
            {
              "Key": "GO111MODULE",
              "Value": "on"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPROXY",
              "Value": "https://goproxy.io"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "go install -v ./..."
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "frontend-build",
      "BaseName": "node:8.16.0-alpine",
      "SourceCode": "FROM node:8.16.0-alpine AS frontend-build",
      "Platform": "",
      "As": "frontend-build",
      "From": {
        "Image": "node:8.16.0-alpine"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./frontend",
            "/app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "npm config set unsafe-perm true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g yarn \u0026\u0026 yarn install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm run build:prod"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CRAWLAB_IS_DOCKER",
              "Value": "Y"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y curl git net-tools iputils-ping ntp ntpdate python3 python3-pip \t\u0026\u0026 ln -s /usr/bin/pip3 /usr/local/bin/pip \t\u0026\u0026 ln -s /usr/bin/python3 /usr/local/bin/python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install scrapy pymongo bs4 requests"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "backend-build",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/bin/crawlab",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "apt-get -y install nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "frontend-build",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/dist",
            "/app/dist"
          ]
        },
        {
          "Chown": "",
          "From": "frontend-build",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/conf/crawlab.conf",
            "/etc/nginx/conf.d"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app/backend"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/app/docker_init.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}