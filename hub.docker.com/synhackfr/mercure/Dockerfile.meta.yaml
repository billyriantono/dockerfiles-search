MetaArgs: null
Stages:
- BaseName: python:3.6
  Commands:
  - Env:
    - Key: PYTHONUNBUFFERED
      Value: "1"
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y cron
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/crontab
    - /etc/cron.d/mercure
  - CmdLine:
    - apt-get autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && apt-get autoclean
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin
    Name: run
    PrependShell: true
  - CmdLine:
    - '/usr/local/bin/python3 -V  # used in crontab'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/init-with-root.sh
    - /root/init-with-root.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/start-without-root.sh
    - /code/start-without-root.sh
  - CmdLine:
    - chmod +x /root/init-with-root.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /code/start-without-root.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /code/requirements.txt
  - CmdLine:
    - pip install -r /code/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install gunicorn
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /code/
  - CmdLine:
    - rm -r /code/docker
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /code/scripts/cron.py
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code/
  - CmdLine:
    - groupadd -r mercure --gid=999
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -r -g mercure --uid=999 mercure
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R mercure:mercure /code
    Name: run
    PrependShell: true
  - Name: user
    User: mercure
  - CmdLine:
    - python manage.py collectstatic --noinput
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8000"
  - Name: user
    User: root
  - CmdLine:
    - cron && /root/init-with-root.sh && su mercure -c '/code/start-without-root.sh'
    Name: cmd
    PrependShell: true
  From:
    Image: python:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6
