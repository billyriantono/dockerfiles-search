{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:9.5-slim",
      "SourceCode": "FROM debian:9.5-slim",
      "Platform": "",
      "From": {
        "Image": "debian:9.5-slim"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Deutsches Arch√§ologisches Institut: dev@dainst.org\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "\"author\"",
              "Value": "\"Dennis Twardy: kontakt@dennistwardy.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"DAI specific OJS3 Docker container with DAI specific plugins\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "\"license\"",
              "Value": "\"GNU GPL 3\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OJS_PORT",
              "Value": "\"8000\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     apt-transport-https     bash-completion     ca-certificates     curl     dirmngr     gnupg2     openssl     software-properties-common     wget     apache2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --no-tty --recv-keys --keyserver keyserver.ubuntu.com 0xF1656F24C74CD1D8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository 'deb [arch=amd64,i386,ppc64el] http://mirrors.dotsrc.org/mariadb/repo/10.3/debian stretch main'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y mariadb-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O- https://packages.sury.org/php/apt.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://packages.sury.org/php/ stretch main\" | tee /etc/apt/sources.list.d/php.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     libapache2-mod-php     php7.2     php7.2-bcmath     php7.2-bz2     php7.2-cgi     php7.2-cli     php7.2-common     php7.2-curl     php7.2-dba     php7.2-intl     php7.2-json     php7.2-mbstring     php7.2-mysql     php7.2-readline     php7.2-xml     php7.2-zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install     acl     build-essential     cron     exiftool     expect     git     imagemagick     libssl-dev     nano     pdftk     supervisor     unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash -     \u0026\u0026 apt-get -y install     nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer -o composer-setup.php     \u0026\u0026 php composer-setup.php --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php.ini",
            "/etc/php/7.2/apache2/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php.ini",
            "/etc/php/7.2/cli/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/ojs-apache.conf",
            "/etc/apache2/conf-available"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/ojs-ssl-site.conf",
            "/etc/apache2/sites-available"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/ojs-site.conf",
            "/etc/apache2/sites-available"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/.htpasswd",
            "/etc/apache2/"
          ]
        },
        {
          "CmdLine": [
            "sed -i \"s/^Listen 80.*\\$/Listen $OJS_PORT/\" /etc/apache2/ports.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/^\u003cVirtualHost \\*:80\u003e.*\\$/\u003cVirtualHost \\*:$OJS_PORT\u003e/\" /etc/apache2/sites-available/ojs-site.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ssl/apache.crt",
            "/etc/apache2/ssl"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ssl/apache.key",
            "/etc/apache2/ssl"
          ]
        },
        {
          "CmdLine": [
            "chmod 600 -R /etc/apache2/ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2ensite ojs-site     \u0026\u0026 a2dissite 000-default     \u0026\u0026 a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"#!/bin/sh\\nif [ -s /etc/apache2/sites-available/ojs-ssl-site.conf ]; then\\na2enmod ssl\\na2ensite ojs-ssl-site.conf\\nfi\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/apache2/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/apache2/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git config --global url.https://.insteadOf git://"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git config --global advice.detachedHead false"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/ojsInstall.exp",
            "/root/ojsInstall.exp"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /root/ojsInstall.exp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "$OJS_PORT",
            "3306",
            "33060",
            "443"
          ]
        }
      ]
    }
  ]
}