{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "Deutsches Arch√§ologisches Institut \"dev@dainst.de\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get upgrade -y \u0026\u0026       apt-get install -y       wget       unzip       default-jre       locales       python3       python3-pip       git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "LANG=en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TREETAGGER_ROOT",
              "Value": "/opt/bin/treetagger"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TREETAGGER_HOME",
              "Value": "$TREETAGGER_ROOT/cmd"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$TREETAGGER_ROOT/bin/:$TREETAGGER_ROOT/cmd/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /opt/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir $TREETAGGER_ROOT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$TREETAGGER_ROOT"
        },
        {
          "CmdLine": [
            "wget --no-verbose http://www.cis.uni-muenchen.de/~schmid/tools/TreeTagger/data/tree-tagger-linux-3.2.1.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-verbose http://www.cis.uni-muenchen.de/%7Eschmid/tools/TreeTagger/data/tagger-scripts.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-verbose http://www.cis.uni-muenchen.de/%7Eschmid/tools/TreeTagger/data/german.par.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-verbose http://www.cis.uni-muenchen.de/%7Eschmid/tools/TreeTagger/data/english.par.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-verbose http://www.cis.uni-muenchen.de/%7Eschmid/tools/TreeTagger/data/install-tagger.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh install-tagger.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "STANFORDHOME",
              "Value": "/opt/bin/stanford_ner"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CLASSPATH",
              "Value": "$CLASSPATH:$STANFORDHOME/stanford-ner.jar"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "STANFORD_MODELS",
              "Value": "$STANFORDHOME/models:$STANFORDHOME/classifiers"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir $STANFORDHOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "wget --no-verbose https://nlp.stanford.edu/software/stanford-ner-2015-12-09.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip stanford-ner-2015-12-09.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv stanford-ner-2015-12-09/* $STANFORDHOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm stanford-ner-2015-12-09.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-verbose http://nlp.dainst.org/html/nerclass/english.all.3class.distsim.crf.ser.gz -P $STANFORDHOME/classifiers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-verbose http://nlp.dainst.org/html/nerclass/german.hgc_175m_600.crf.ser.gz -P $STANFORDHOME/classifiers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-verbose http://nlp.dainst.org/html/nerclass/ner-ita-nogpe-noiob_gaz_wikipedia_sloppy.ser.gz -P $STANFORDHOME/classifiers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-verbose http://nlp.dainst.org/html/nerclass/spanish.ancora.distsim.s512.crf.ser.gz -P $STANFORDHOME/classifiers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GEOPARSER_HOME",
              "Value": "/opt/nlp"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget --no-verbose http://nlp.dainst.org/html/geo/geoparser-march2016.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "unzip geoparser-march2016.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm geoparser-march2016.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv geoparser-march2016 $GEOPARSER_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install     NLTK     lxml     requests     langid     git+https://github.com/miotto/treetagger-python.git     pytest"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m nltk.downloader -d /usr/local/share/nltk_data punkt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYLIB",
              "Value": "/usr/local/lib/python3.6/dist-packages"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "GITHUB_ACCESS_TOKEN",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "export GITHUB_ACCESS_TOKEN=$GITHUB_ACCESS_TOKEN"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/dainst/nlp_components.git $PYLIB/nlp_components"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp -R $PYLIB/nlp_components/idai_journals $PYLIB/idai_journals"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LIBARY_PATH",
              "Value": "/lib:/usr/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIPENV_VENV_IN_PROJECT",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026 mkdir /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./utils",
            "/app/utils"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./workers",
            "/app/workers"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/cilantro-nlp-worker/Pipfile",
            "Pipfile"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/cilantro-nlp-worker/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "pip3 install pipenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026 pipenv lock \u0026\u0026 pipenv install --deploy --system"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/cilantro-nlp-worker/VERSION",
            "."
          ]
        },
        {
          "CmdLine": [
            "bash /entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}