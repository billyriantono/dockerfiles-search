{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "fossa/fossa-cli:base",
      "SourceCode": "FROM fossa/fossa-cli:base",
      "Platform": "",
      "From": {
        "Image": "fossa/fossa-cli:base"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            },
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sudo apt-get update \u0026\u0026     sudo apt-get install -y     apt-transport-https build-essential libssl-dev software-properties-common     zlib1g-dev liblzma-dev libncurses5-dev libtool autoconf libxml2-dev     libmysqlclient-dev postgresql-server-dev-all libsqlite3-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y zip unzip \u0026\u0026     curl https://get.sdkman.io | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c",
            "    source $HOME/.sdkman/bin/sdkman-init.sh \u0026\u0026     sdk install java \u0026\u0026     sdk install maven \u0026\u0026     sdk install gradle \u0026\u0026     sdk install ant \u0026\u0026     sdk install scala \u0026\u0026     sdk install sbt     "
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "mkdir -p $HOME/.sbt/1.0/plugins \u0026\u0026     echo 'addSbtPlugin(\"net.virtual-void\" % \"sbt-dependency-graph\" % \"0.9.0\")' \u003e $HOME/.sbt/1.0/plugins/plugins.sbt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip -O /tmp/sdk-tools-linux.zip \u0026\u0026     mkdir -p $HOME/Android/Sdk \u0026\u0026     unzip /tmp/sdk-tools-linux.zip -d $HOME/Android/Sdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/home/fossa/Android/Sdk/tools/bin"
            },
            {
              "Key": "ANDROID_HOME",
              "Value": "/home/fossa/Android/Sdk"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://glide.sh/get | bash \u0026\u0026     go get -u -v github.com/tools/godep \u0026\u0026     go get -u -v github.com/kardianos/govendor \u0026\u0026     go get -u -v github.com/LK4D4/vndr \u0026\u0026     go get -u -v github.com/sparrc/gdm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://nodejs.org/dist/v8.12.0/node-v8.12.0-linux-x64.tar.xz -O /tmp/node.tar.xz \u0026\u0026     sudo tar -xf /tmp/node.tar.xz -C /usr/local --strip-components=1 --no-same-owner \u0026\u0026     sudo ln -s /usr/local/bin/node /usr/local/bin/nodejs \u0026\u0026     mkdir $HOME/.npm \u0026\u0026     npm config set prefix $HOME/.npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/home/fossa/.npm/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm i -g bower yarn json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y ruby-full"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo gem install bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install -y python python-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo gem install cocoapods -v 1.5.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo add-apt-repository -y ppa:ondrej/php \u0026\u0026     sudo apt-get update \u0026\u0026     sudo DEBIAN_FRONTEND=noninteractive apt-get install -y     php7.2 php7.2-gd php7.2-curl php7.2-intl php7.2-xml php7.2-mbstring"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026     sudo chown -R fossa:fossa $HOME/.composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-key adv --keyserver packages.microsoft.com --recv-keys EB3E94ADBE1229CF \u0026\u0026     sudo apt-key adv --keyserver packages.microsoft.com --recv-keys 52E16F86FEE04B979B07E28DB02C46DF417A0893 \u0026\u0026     sudo sh -c 'echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-bionic-prod bionic main\" \u003e /etc/apt/sources.list.d/dotnetdev.list' \u0026\u0026     sudo apt-get update \u0026\u0026     sudo apt-get install -y dotnet-sdk-2.1"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}