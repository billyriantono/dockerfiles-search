MetaArgs: null
Stages:
- BaseName: nvidia/cuda:9.0-cudnn7-runtime
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Jared Contrascere"'
    Name: label
  - Name: user
    User: root
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get -yq dist-upgrade  && apt-get install -yq --no-install-recommends     wget     bzip2     ca-certificates     sudo     locales     fonts-liberation  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://github.com/krallin/tini/releases/download/v0.18.0/tini
      &&     echo "12d20136605531b09a2c2dac02ccee85e1b874eb322ef6baf7561cd93f93c855
      *tini" | sha256sum -c - &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    - Key: SHELL
      Value: /bin/bash
    - Key: NB_USER
      Value: jovyan
    - Key: NB_UID
      Value: "1000"
    - Key: NB_GID
      Value: "100"
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - fix-permissions
    - /usr/local/bin/fix-permissions
  - CmdLine:
    - groupadd wheel -g 11 &&     echo "auth required pam_wheel.so use_uid" >> /etc/pam.d/su
      &&     useradd -m -s /bin/bash -N -u $NB_UID $NB_USER &&     mkdir -p $CONDA_DIR
      &&     chown $NB_USER:$NB_GID $CONDA_DIR &&     chmod g+w /etc/passwd &&     fix-permissions
      $HOME &&     fix-permissions $CONDA_DIR
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - CmdLine:
    - mkdir /home/$NB_USER/work &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - Env:
    - Key: MINICONDA_VERSION
      Value: 4.5.4
    Name: env
  - CmdLine:
    - cd /tmp &&     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     echo "a946ea1d0c4a642ddf0c3a26a18bb16d *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh"
      | md5sum -c - &&     /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      -f -b -p $CONDA_DIR &&     rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     $CONDA_DIR/bin/conda config --system --prepend channels conda-forge &&     $CONDA_DIR/bin/conda
      config --system --set auto_update_conda false &&     $CONDA_DIR/bin/conda config
      --system --set show_channel_urls true &&     $CONDA_DIR/bin/conda install --quiet
      --yes conda="${MINICONDA_VERSION%.*}.*" &&     $CONDA_DIR/bin/conda update --all
      --quiet --yes &&     conda clean -tipsy &&     rm -rf /home/$NB_USER/.cache/yarn
      &&     fix-permissions $CONDA_DIR &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'notebook=5.5.*'     'jupyterhub=0.8.*'     'jupyterlab=0.32.*'
      &&     conda clean -tipsy &&     jupyter labextension install @jupyterlab/hub-extension@^0.8.1
      &&     npm cache clean --force &&     rm -rf $CONDA_DIR/share/jupyter/lab/staging
      &&     rm -rf /home/$NB_USER/.cache/yarn &&     fix-permissions $CONDA_DIR &&     fix-permissions
      /home/$NB_USER
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: expose
    Ports:
    - "8888"
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - tini
    - -g
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start-notebook.sh
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-notebook.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-singleuser.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /etc/jupyter/
  - CmdLine:
    - fix-permissions /etc/jupyter/
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - Name: user
    User: root
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends     build-essential     emacs     git     inkscape     jed     libsm6     libxext-dev     libxrender1     lmodern     netcat     pandoc     python-dev     texlive-fonts-extra     texlive-fonts-recommended     texlive-generic-recommended     texlive-latex-base     texlive-latex-extra     texlive-xetex     unzip     nano     &&
      apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - Name: user
    User: root
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends ffmpeg &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - CmdLine:
    - conda install --quiet --yes     'conda-forge::blas=*=openblas'     'ipywidgets=7.2*'     'pandas=0.23*'     'numexpr=2.6*'     'matplotlib=2.2*'     'scipy=1.1*'     'seaborn=0.8*'     'scikit-learn=0.19*'     'scikit-image=0.14*'     'sympy=1.1*'     'cython=0.28*'     'patsy=0.5*'     'statsmodels=0.9*'     'cloudpickle=0.5*'     'dill=0.2*'     'numba=0.38*'     'bokeh=0.12*'     'sqlalchemy=1.2*'     'hdf5=1.10*'     'h5py=2.7*'     'vincent=0.4.*'     'beautifulsoup4=4.6.*'     'protobuf=3.*'     'xlrd'  &&     conda
      remove --quiet --yes --force qt pyqt &&     conda clean -tipsy &&     jupyter
      nbextension enable --py widgetsnbextension --sys-prefix &&     jupyter labextension
      install @jupyter-widgets/jupyterlab-manager@^0.35 &&     jupyter labextension
      install jupyterlab_bokeh@^0.5.0 &&     npm cache clean --force &&     rm -rf
      $CONDA_DIR/share/jupyter/lab/staging &&     rm -rf /home/$NB_USER/.cache/yarn
      &&     rm -rf /home/$NB_USER/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions
      /home/$NB_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     git clone https://github.com/PAIR-code/facets.git &&     cd facets
      &&     jupyter nbextension install facets-dist/ --sys-prefix &&     cd &&     rm
      -rf /tmp/facets &&     fix-permissions $CONDA_DIR &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - Env:
    - Key: XDG_CACHE_HOME
      Value: /home/$NB_USER/.cache/
    Name: env
  - CmdLine:
    - MPLBACKEND=Agg python -c "import matplotlib.pyplot" &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - Name: user
    User: root
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends     fonts-dejavu     tzdata     gfortran     gcc
      && apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: JULIA_PKGDIR
      Value: /opt/julia
    Name: env
  - Env:
    - Key: JULIA_VERSION
      Value: 0.6.2
    Name: env
  - CmdLine:
    - mkdir /opt/julia-${JULIA_VERSION} &&     cd /tmp &&     wget -q https://julialang-s3.julialang.org/bin/linux/x64/`echo
      ${JULIA_VERSION} | cut -d. -f 1,2`/julia-${JULIA_VERSION}-linux-x86_64.tar.gz
      &&     echo "dc6ec0b13551ce78083a5849268b20684421d46a7ec46b17ec1fab88a5078580
      *julia-${JULIA_VERSION}-linux-x86_64.tar.gz" | sha256sum -c - &&     tar xzf
      julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION} --strip-components=1
      &&     rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/julia &&     echo "push!(Libdl.DL_LOAD_PATH, \"$CONDA_DIR/lib\")"
      >> /etc/julia/juliarc.jl &&     mkdir $JULIA_PKGDIR &&     chown $NB_USER $JULIA_PKGDIR
      &&     fix-permissions $JULIA_PKGDIR
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - CmdLine:
    - conda install --quiet --yes     'rpy2=2.8*'     'r-base=3.4.1'     'r-irkernel=0.8*'     'r-plyr=1.8*'     'r-devtools=1.13*'     'r-tidyverse=1.1*'     'r-shiny=1.0*'     'r-rmarkdown=1.8*'     'r-forecast=8.2*'     'r-rsqlite=2.0*'     'r-reshape2=1.4*'     'r-nycflights13=0.2*'     'r-caret=6.0*'     'r-rcurl=1.95*'     'r-crayon=1.3*'     'r-randomforest=4.6*'     'r-htmltools=0.3*'     'r-sparklyr=0.7*'     'r-htmlwidgets=1.0*'     'r-hexbin=1.27*'
      &&     conda clean -tipsy &&     fix-permissions $CONDA_DIR &&     fix-permissions
      /home/$NB_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e 'Pkg.init()' &&     julia -e 'Pkg.update()' &&     (test $TEST_ONLY_BUILD
      || julia -e 'Pkg.add("HDF5")') &&     julia -e 'Pkg.add("Gadfly")' &&     julia
      -e 'Pkg.add("RDatasets")' &&     julia -e 'Pkg.add("IJulia")' &&     julia -e
      'using IJulia' &&     mv $HOME/.local/share/jupyter/kernels/julia* $CONDA_DIR/share/jupyter/kernels/
      &&     chmod -R go+rx $CONDA_DIR/share/jupyter &&     rm -rf $HOME/.local &&     fix-permissions
      $JULIA_PKGDIR $CONDA_DIR/share/jupyter
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - pip install -U pip &&     pip --no-cache-dir install         tensorflow-gpu==1.9.0         keras==2.2.0
    Name: run
    PrependShell: true
  From:
    Image: nvidia/cuda:9.0-cudnn7-runtime
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-cudnn7-runtime
