MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: TatuandoMe IT TEAM
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update   && apt-get upgrade -yq   && apt-get -yq install       build-essential       python       wget       bindfs       vim       git-core       g++       autoconf       file       gcc       libc-dev       make       pkg-config       re2c   &&
      apt-get clean -qq   && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y         ca-certificates         curl         libedit2         libsqlite3-0         libxml2     --no-install-recommends
      && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PG_MAJOR
      Value: "9.5"
    Name: env
  - Env:
    - Key: PG_VERSION
      Value: 9.5.2
    Name: env
  - CmdLine:
    - echo "deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main"     > /etc/apt/sources.list.d/pgdg.list
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc     | apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq   && apt-get install -y -qq       autoconf       imagemagick       libbz2-dev       libevent-dev       libglib2.0-dev       libjpeg-dev       libmagickcore-dev       libmagickwand-dev       libncurses-dev       libcurl4-openssl-dev       libffi-dev       libgdbm-dev       libpq-dev       libreadline-dev
      libreadline6-dev       libssl-dev       libtool       libxml2-dev       libxslt-dev       libyaml-dev       software-properties-common       zlib1g-dev       mongodb       mysql-client
      libmysqlclient-dev       postgresql-client-$PG_MAJOR       sqlite3 libsqlite3-dev   &&
      apt-get clean -qq   && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe     && buildDeps="         $PHP_EXTRA_BUILD_DEPS         libcurl4-openssl-dev         libedit-dev         libsqlite3-dev         libssl-dev         libxml2-dev         xz-utils     "     &&
      apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/php
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_VERSION
      Value: 7.0.14
    Name: env
  - Env:
    - Key: PHP_FILENAME
      Value: php-7.0.14.tar.xz
    Name: env
  - CmdLine:
    - cd $HOME && mkdir -p $HOME/tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/tmp     && wget  http://www.php.net/distributions/$PHP_FILENAME     &&
      export GNUPGHOME="$(mktemp -d)"     && tar -xf "$PHP_FILENAME" -C /usr/src/php
      --strip-components=1     && rm "$PHP_FILENAME"     && cd /usr/src/php     &&
      ./configure         --with-config-file-path="$PHP_INI_DIR"         --with-config-file-scan-dir="$PHP_INI_DIR/conf.d"         $PHP_EXTRA_CONFIGURE_ARGS         --disable-cgi         --enable-mysqlnd         --enable-mbstring         --with-curl         --with-libedit         --with-openssl         --with-zlib         --with-pdo-pgsql         --with-zlib-dir         --enable-inline-optimization         --enable-calendar     &&
      make -j"$(nproc)"     && make install     && { find /usr/local/bin /usr/local/sbin
      -type f -executable -exec strip --strip-all '{}' + || true; }     && make clean     &&
      apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      -o APT::AutoRemove::SuggestsImportant=false $buildDeps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - /usr/local/bin/
  - CmdLine:
    - useradd --home /home/node -m -U -s /bin/bash node
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''Defaults !requiretty'' >> /etc/sudoers;     echo ''node ALL= NOPASSWD:
      /usr/sbin/dpkg-reconfigure -f noninteractive tzdata, /usr/bin/tee /etc/timezone''
      >> /etc/sudoers;'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R node\:node /var/www && chown -R node\:node /usr/local && chown -R node\:node
      /usr/src/php && chown -R node\:node /home/node
    Name: run
    PrependShell: true
  - Name: user
    User: node
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 6.9.4
    Name: env
  - Env:
    - Key: PM2_VERSION
      Value: 2.2.1
    Name: env
  - Env:
    - Key: ANGULAR_VERSION
      Value: 1.0.0-beta.26
    Name: env
  - Env:
    - Key: TYPESCRIPT_VERSION
      Value: 2.1.5
    Name: env
  - Env:
    - Key: GULP_VERSION
      Value: 1.2.2
    Name: env
  - Env:
    - Key: HOME
      Value: /home/node
    Name: env
  - CmdLine:
    - cd $HOME && mkdir -p $HOME/tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/node &&    echo 'export PATH=$HOME/local/bin:$PATH' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/node/tmp &&    wget https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz
      &&    tar -xzf node-v${NODE_VERSION}-linux-x64.tar.gz -C /usr/local --strip-components=1  &&    rm
      node-v${NODE_VERSION}-linux-x64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/node/tmp &&    npm install -g pm2@$PM2_VERSION &&    npm install -g
      gulp-cli@$GULP_VERSION &&    npm install -g typescript@$TYPESCRIPT_VERSION &&    npm
      install -g angular-cli@$ANGULAR_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/node/tmp &&    curl -s https://getcomposer.org/installer | php &&    mv
      composer.phar /usr/local/bin/composer &&    rm -fr tmp
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
