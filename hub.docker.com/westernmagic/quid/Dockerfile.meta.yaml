MetaArgs: null
Stages:
- BaseName: buildpack-deps:bionic-scm
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "set -ex ; \tapt-get update ; \tapt-get install -y --no-install-recommends \t\tapt-transport-https
      \t\tbuild-essential \t; \trm -rf /var/lib/apt/lists/* ;"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "set -ex ; \tapt-get update ; \tapt-get install -y --no-install-recommends \t\ttcl-dev
      \t\ttk-dev \t\tlibssl-dev \t\tlibsqlite3-dev \t; \trm -rf /var/lib/apt/lists/*
      ;"
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.6.4
    Name: env
  - CmdLine:
    - "set -ex ;\twget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      ; \twget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      ; \texport GNUPGHOME=\"$(mktemp -d)\" ; \tgpg --keyserver keyserver.ubuntu.com
      --recv-keys \"$GPG_KEY\" ; \tgpg --batch --verify python.tar.xz.asc python.tar.xz
      ; \t{ command -v gpgconf > /dev/null && gpgconf --kill all || :; } ; \trm -rf
      \"$GNUPGHOME\" python.tar.xz.asc ; \tmkdir -p /usr/src/python ; \ttar -xJC /usr/src/python
      --strip-components=1 -f python.tar.xz ; \trm python.tar.xz ; \t\tcd /usr/src/python
      ; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" ; \t./configure
      \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-shared
      \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip \t; \tmake
      -j \"$(nproc)\" ; \tmake install ; \tldconfig ; \t\tfind /usr/local -depth \t\t\\(
      \t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \t\t\t-o \t\t\t\\(
      -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}'
      + ; \trm -rf /usr/src/python ; \t\tpython3 --version ;"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&& ln -s
      python3 python \t&& ln -s python3-config python-config"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: "18.0"
    Name: env
  - CmdLine:
    - "set -ex; \t\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \t\tpython
      get-pip.py \t\t--disable-pip-version-check \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\"
      \t; \tpip --version; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a
      \\( -name test -o -name tests \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name
      '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex ; \tpip install --no-cache-dir \t\t\"numpy<1.15,>=1.13\" \t;"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/qsharp
  - CmdLine:
    - "set -ex ; \twget -qO- https://packages.microsoft.com/keys/microsoft.asc | apt-key
      add - ; \twget -qO /etc/apt/sources.list.d/microsoft-prod.list https://packages.microsoft.com/config/ubuntu/18.04/prod.list
      ; \tapt-get update ; \tapt-get install -y --no-install-recommends \t\tdotnet-sdk-2.1
      \t; \trm -rf /var/lib/apt/lists/* ; \tdotnet new -i \"Microsoft.Quantum.ProjectTemplates::0.2.1806.3001-preview\"
      ;"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - qsharp/Quantum
    - quantum
  - Name: workdir
    Path: /root/qsharp/quantum/Samples/H2SimulationGUI
  - CmdLine:
    - "set -ex ; \twget -qO- https://deb.nodesource.com/setup_8.x | bash - ; \tapt-get
      update ; \tapt-get install -y --no-install-recommends \t\tnodejs \t\tlibgtk-3-0
      \t\tlibxtst6 \t\tlibgconf-2-4 \t\tlibnss3 \t\tlibasound2 \t\txvfb \t; \trm -rf
      /var/lib/apt/lists/* ; \tnpm install ;"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/qsharp/quantum/Samples/PythonInterop
  - CmdLine:
    - "set -ex ; \tapt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys
      3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF ; \techo \"deb https://download.mono-project.com/repo/debian
      stable/snapshots/4.8 main\" > /etc/apt/sources.list.d/mono-official-stable.list
      ; \tapt-get update ; \tapt-get install -y --no-install-recommends \t\tnuget
      \t\tclang \t; \tpip install --no-cache-dir \t\tcython \t\tnumpy \t\tscipy \t\tpycparser
      \t; \tpip install --no-cache-dir \t\tjupyter \t\tfuture \t\tqutip \t\tmatplotlib
      \t\tipyparallel \t\tpy \t\t/root/qsharp/quantum/Interoperability/python \t\tqinfer
      \t\tduecredit \t\tmpltools \t; \tdotnet build ;"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root/qsharp
  - CmdLine:
    - ln -s quantum/Samples examples
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - qsharp/QuantumKatas
    - tutorial
  - Name: workdir
    Path: /root/projectq
  - CmdLine:
    - "set -ex ; \tpip install --no-cache-dir \t\tprojectq==0.4.1 \t;"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - projectq/ProjectQ/README.rst
    - README.rst
  - Chown: ""
    Name: add
    SourcesAndDest:
    - projectq/ProjectQ/docs
    - docs
  - Chown: ""
    Name: add
    SourcesAndDest:
    - projectq/ProjectQ/examples
    - examples
  - Name: workdir
    Path: /root/cirq
  - CmdLine:
    - "set -ex ; \tpip install --no-cache-dir \t\tcirq==0.3.1.35 \t; \tapt-get update
      ; \tapt-get install -y --no-install-recommends \t\ttexlive-latex-base \t\tlatexmk
      \t; \trm -rf /var/lib/apt/lists/* ;"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cirq/Cirq/README.rst
    - README.rst
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cirq/Cirq/docs
    - docs
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cirq/Cirq/examples
    - examples
  - Name: workdir
    Path: /root/qiskit
  - CmdLine:
    - "set -ex ; \tpip install --no-cache-dir \t\tqiskit==0.5.7 \t\tqiskit-aqua==0.2.0
      \t\tjupyter \t; \tapt-get update ; \tapt-get install -y --no-install-recommends
      \t\ttexlive-latex-base \t\ttexlive-latex-extra \t\ttexlive-pictures \t\tpoppler-utils
      \t; \trm -rf /var/lib/apt/lists/* ;"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/Qiskit/qiskit-terra/0.5.7/Qconfig.py.default
    - Qconfig.py
  - Chown: ""
    Name: add
    SourcesAndDest:
    - qiskit/qiskit-tutorial
    - tutorial
  - Chown: ""
    Name: add
    SourcesAndDest:
    - qiskit/qiskit_tutorial
    - tutorial2
  - Chown: ""
    Name: add
    SourcesAndDest:
    - qiskit/aqua-tutorials
    - tutorial-aqua
  - Name: workdir
    Path: /root/pyquil
  - CmdLine:
    - "set -ex ; \tpip install --no-cache-dir \t\tpyquil==1.9.0 \t\tquantum-grove==1.7.0
      \t;"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pyquil/.pyquil_config
    - pyquil_config
  - Env:
    - Key: PYQUIL_CONFIG
      Value: /root/pyquil/pyquil_config
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pyquil/pyquil/README.md
    - README.md
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pyquil/pyquil/examples
    - examples
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pyquil/pyquil-quantum-dice
    - tutorial
  - Name: workdir
    Path: /root
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cheatsheet/cheatsheet.pdf
    - cheatsheet.pdf
  - Env:
    - Key: DISPLAY
      Value: :9.0
    Name: env
  - CmdLine:
    - "(Xvfb -ac -screen scrn 1280x2000x24 $DISPLAY >/dev/null 2>&1 &) && \t(jupyter
      notebook --ip='*' --NotebookApp.token='' --no-browser --allow-root >/dev/null
      2>&1 &) && \techo \"Open 127.0.0.1:8888 to access Jupyter Notebook\" && \tbash"
    Name: cmd
    PrependShell: true
  From:
    Image: buildpack-deps:bionic-scm
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:bionic-scm
