{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"shinya\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk add --update --no-cache bash git make gcc g++ python curl wget build-base openssl-dev apache2-utils libxml2-dev sshfs tmux supervisor ca-certificates ncurses coreutils libgcc linux-headers grep util-linux binutils findutils \t\u0026\u0026 touch ~/.bashrc \t\u0026\u0026 curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash \t\u0026\u0026 export NVM_DIR=\"$HOME/.nvm\" \t\u0026\u0026 source $NVM_DIR/nvm.sh \t\u0026\u0026 nvm install -s 8 \t\u0026\u0026 nvm use 8 \t\u0026\u0026 nvm alias default 8 \t\u0026\u0026 git clone https://github.com/c9/core.git /c9 \t\u0026\u0026 curl -s -L https://raw.githubusercontent.com/c9/install/master/link.sh | bash \t\u0026\u0026 mkdir -p /workspace \t\u0026\u0026 cd /c9 \t\u0026\u0026 ./scripts/install-sdk.sh \t\u0026\u0026 cp $NVM_DIR/versions/node/v8.16.2/bin/node /usr/local/bin/node \t\u0026\u0026 apk del curl python linux-headers git wget make g++ build-base ca-certificates ncurses coreutils libgcc grep util-linux binutils findutils \t\u0026\u0026 rm -fr /tmp/* /var/cache/apk/* /usr/share/man/* /usr/share/doc /root/.npm /root/.node-gyp /root/.config \t\t/usr/lib/gcc /usr/lib/python2.7 /usr/lib/libcrypto.a /usr/lib/libstdc++.a \t\t/usr/libexec/gcc/x86_64-alpine-linux-musl/8.3.0/cc1 \t\t/usr/libexec/gcc/x86_64-alpine-linux-musl/8.3.0/cc1obj \t\t/usr/libexec/gcc/x86_64-alpine-linux-musl/8.3.0/lto1 \t\t$NVM_DIR \t\t~/.bashrc \t\t/usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/workspace"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/workspace"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Env": [
            {
              "Key": "USERNAME",
              "Value": "user"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PASSWORD",
              "Value": "pass"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sh",
            "-c",
            "/usr/local/bin/node /c9/server.js -l 0.0.0.0 -p 8080 -w /workspace -a $USERNAME:$PASSWORD"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}