{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:15.10",
      "SourceCode": "FROM ubuntu:15.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:15.10"
      },
      "Commands": [
        {
          "Maintainer": "Mihail Raichenko",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-3.2.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026 apt-get -y upgrade \u0026\u0026   apt-get install -y build-essential software-properties-common \u0026\u0026   apt-get install -y php5-cli byobu curl git htop man unzip vim wget golang python2.7 g++ libboost-dev libboost-all-dev cmake   mysql-client mongodb-clients libmongo-client-dev libmysqlclient-dev  libatlas-base-dev libsvm-dev libsvm-tools libsvm3 python-numpy python-pandas python-scikits-learn ipython-notebook \u0026\u0026   apt-get install -y erlang-dev erlang-manpages erlang-base-hipe erlang-eunit erlang-nox erlang-xmerl erlang-inets   libmozjs185-dev libicu-dev  libtool libcurl4-openssl-dev   python-software-properties python g++ make libgtk2.0 r-base-dev checkinstall gdebi-core sudo r-base   openjdk-7-jre gtk2.0 wget chromium-browser firefox supervisor openssh-server apt-file python-setuptools git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'install.packages(\"rpart.plot\", repos=\"http://cran.us.r-project.org\")'|R --no-save"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'install.packages(\"rattle\", repos=\"http://cran.us.r-project.org\")'|R --no-save"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('shiny', repos='https://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "root/.bashrc",
            "/root/.bashrc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "phraug",
            "/root/phraug"
          ]
        },
        {
          "CmdLine": [
            "mkdir build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/JohnLangford/vowpal_wabbit.git /build/vowpal_wabbit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/build/vowpal_wabbit"
        },
        {
          "CmdLine": [
            "git checkout 8.1.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./configure --prefix=/usr --with-boost-libdir=/usr/lib/x86_64-linux-gnu \u0026\u0026 make \u0026\u0026 checkinstall -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fix_empty_rxgboost.patch",
            "/build"
          ]
        },
        {
          "CmdLine": [
            "git clone https://github.com/dmlc/xgboost.git /build/xgboost"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/build/xgboost"
        },
        {
          "CmdLine": [
            "git checkout 0.47"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "patch -p1 \u003c ../fix_empty_rxgboost.patch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('knitr', repos='http://cran.us.r-project.org')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('data', repos='http://cran.us.r-project.org')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('data.table', repos='http://cran.us.r-project.org')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('rmarkdown', repos='http://cran.us.r-project.org')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make Rbuild \u0026\u0026 R CMD INSTALL xgboost_0.4-2.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/build/xgboost/python-package"
        },
        {
          "CmdLine": [
            "python setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv D68FA50FEA312927"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y mongodb-org"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/shared_data"
          ]
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "wget https://download3.rstudio.org/ubuntu-12.04/x86_64/shiny-server-1.4.2.786-amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gdebi -n shiny-server-1.4.2.786-amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm shiny-server-1.4.2.786-amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install pip \u0026\u0026 pip install luigi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y openjdk-7-jre gtk2.0 wget chromium-browser firefox supervisor openssh-server apt-file"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pymongo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pyelasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}