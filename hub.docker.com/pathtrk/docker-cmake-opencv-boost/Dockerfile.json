{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "pathtrk/docker-python3-opencv:contrib",
      "SourceCode": "FROM pathtrk/docker-python3-opencv:contrib",
      "Platform": "",
      "From": {
        "Image": "pathtrk/docker-python3-opencv:contrib"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintener",
              "Value": "\"Ryosuke Goto \u003cryosuke.goto@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y       build-essential       python-dev       python3-dev       locales       libblas-dev       liblapack-dev       libatlas-base-dev       autotools-dev       libicu-dev       libbz2-dev       gfortran"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'deb http://deb.debian.org/debian/ sid main' \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get install -y       gcc-5       g++-5 \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get remove -y cmake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://cmake.org/files/v3.8/cmake-3.8.2-Linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh cmake-3.8.2-Linux-x86_64.sh --skip-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://dl.bintray.com/boostorg/release/1.64.0/source/boost_1_64_0.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xvzf boost_1_64_0.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "boost_1_64_0/"
        },
        {
          "CmdLine": [
            "./bootstrap.sh --prefix=/usr/local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./b2 -j $(nproc) cxxflags=-fPIC install; exit 0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "rm -rf /boost_1_64_0**"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"/usr/local/lib\" \u003e\u003e /etc/ld.so.conf.d/local.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026     locale-gen en_US.UTF-8 \u0026\u0026     dpkg-reconfigure locales \u0026\u0026     /usr/sbin/update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y       apt-transport-https       nginx       supervisor       sqlite3 \u0026\u0026     pip3 install -U pip setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_6.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://packages.microsoft.com/keys/microsoft.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://packages.microsoft.com/config/ubuntu/16.04/prod.list \u003e /etc/apt/sources.list.d/mssql.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ACCEPT_EULA=Y apt-get install -y msodbcsql mssql-tools unixodbc-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install uwsgi"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}