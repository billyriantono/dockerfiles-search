MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: JunhoJeon <zwitterion27@gmail.com>
    Name: maintainer
  - CmdLine:
    - NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5
      &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key
      adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub
      &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n
      +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum
      -c --strict - && rm cudasign.pub &&     echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64
      /" > /etc/apt/sources.list.d/cuda.list &&     echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64
      /" > /etc/apt/sources.list.d/nvidia-ml.list
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_VERSION
      Value: 9.0.176
    Name: env
  - Env:
    - Key: CUDA_PKG_VERSION
      Value: 9-0=$CUDA_VERSION-1
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION
      &&     ln -s cuda-9.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Labels:
    - Key: com.nvidia.volumes.needed
      Value: '"nvidia_driver"'
    Name: label
  - Labels:
    - Key: com.nvidia.cuda.version
      Value: '"${CUDA_VERSION}"'
    Name: label
  - CmdLine:
    - echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64"
      >> /etc/ld.so.conf.d/nvidia.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/nvidia/lib:/usr/local/nvidia/lib64
    Name: env
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: compute,utility
    Name: env
  - Env:
    - Key: NVIDIA_REQUIRE_CUDA
      Value: '"cuda>=9.0"'
    Name: env
  - Env:
    - Key: NCCL_VERSION
      Value: 2.1.2
    Name: env
  - Env:
    - Key: CUDNN_VERSION
      Value: 7.1.1.5
    Name: env
  - Labels:
    - Key: com.nvidia.cudnn.version
      Value: '"${CUDNN_VERSION}"'
    Name: label
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         cuda-libraries-$CUDA_PKG_VERSION         libnccl2=$NCCL_VERSION-1+cuda9.0
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends             libcudnn7=$CUDNN_VERSION-1+cuda9.0
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - Env:
    - Key: LANG
      Value: C.UTF-8
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update --fix-missing &&     apt-get install -y wget bzip2 ca-certificates
      curl git &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh &&     wget
      --quiet https://repo.continuum.io/miniconda/Miniconda3-4.4.10-Linux-x86_64.sh
      -O ~/miniconda.sh &&     /bin/bash ~/miniconda.sh -b -p /opt/conda &&     rm
      ~/miniconda.sh &&     /opt/conda/bin/conda clean -tipsy
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.16.1
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /usr/bin/tini
  - CmdLine:
    - chmod +x /usr/bin/tini
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zsh tmux
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O
      - | zsh || true
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'PROMPT="%{$fg[cyan]%}docker_pytorch ${PROMPT}"' >> /root/.zshrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export TERM=xterm-256color' >> /root/.zshrc
    Name: run
    PrependShell: true
  - CmdLine:
    - conda update -n base conda
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install pytorch torchvision cuda90 -c pytorch
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install h5py opencv scipy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install tensorboardX
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
