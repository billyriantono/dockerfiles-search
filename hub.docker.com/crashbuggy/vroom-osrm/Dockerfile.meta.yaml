MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Env:
    - Key: OSRM_BACKEND_VERSION
      Value: v5.10.0
    Name: env
  - CmdLine:
    - "apt-get update && \tapt-get install -qq \t\tbuild-essential \t\tcmake \t\tgit-core
      \t\tlibboost-all-dev \t\tlibboost-filesystem1.58.0 \t\tlibboost-iostreams1.58.0
      \t\tlibboost-program-options1.58.0 \t\tlibboost-regex1.58.0 \t\tlibboost-system1.58.0
      \t\tlibboost-thread1.58.0 \t\tlibbz2-dev \t\tlibexpat1 \t\tlibgomp1 \t\tliblua5.2-dev
      \t\tliblua5.2-0 \t\tlibluabind-dev \t\tlibluabind0.9.1v5 \t\tlibosmpbf-dev \t\tlibpng16-dev
      \t\tlibprotobuf-dev \t\tlibprotobuf9v5 \t\tlibprotoc-dev \t\tlibstxxl-dev \t\tlibstxxl1v5
      \t\tlibtbb-dev \t\tlibtbb2 \t\tlibxml2-dev \t\tlibzip-dev \t\tlua5.2 \t\tluajit
      \t\tpkg-config \t\tprotobuf-compiler && \tmkdir -p /src && \tcd /src && \tgit
      clone --depth 10 --branch $OSRM_BACKEND_VERSION https://github.com/Project-OSRM/osrm-backend
      && \tcd osrm-backend && \tmkdir -p build && \tcd build && \tcmake .. -DCMAKE_BUILD_TYPE=Release
      && \tcmake --build . && \tcmake --build . --target install && \tmkdir -p /usr/local/share/osrm
      && \tcp -a /src/osrm-backend/profiles /usr/local/share/osrm && \tapt-get purge
      -qq \t\t'*-dev' \t\tbuild-essential \t\tcmake \t\tgit-core \t\tkrb5-locales
      \t\tmake \t\twget && \tapt-get autoremove --purge -qq && \tapt-get clean &&
      \tcd / && \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /src"
    Name: run
    PrependShell: true
  - Env:
    - Key: VROOM_BRANCH
      Value: master
    Name: env
  - CmdLine:
    - "mkdir -p /src && \tcd /src && \tapt-get update && \tapt-get install -qq \t\tbuild-essential
      \t\tg++ \t\tgit-core \t\tlibboost-iostreams1.58-dev \t\tlibboost-iostreams1.58.0
      \t\tlibboost-log-dev \t\tlibboost-log1.58.0 \t\tlibboost-regex-dev \t\tlibboost-system-dev
      \t\tlibboost-thread-dev \t\tlibtbb-dev \t\tlibtbb2 \t\tmake \t\tpkg-config &&
      \tgit clone --depth 10 --branch $VROOM_BRANCH https://github.com/VROOM-Project/vroom.git
      && \tmkdir -p /src/vroom/bin && \tcd /src/vroom/src && \tmake && \tcp /src/vroom/bin/vroom
      /usr/local/bin && \tapt-get purge -qq \t\t'*-dev' \t\tbuild-essential \t\tgit-core
      \t\tmake && \tapt-get autoremove --purge -qq && \tapt-get clean && \tcd / &&
      \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /src"
    Name: run
    PrependShell: true
  - Env:
    - Key: VROOM_EXPRESS_BRANCH
      Value: master
    Name: env
  - CmdLine:
    - "apt-get update && \tapt-get install -qq \t\tbuild-essential \t\tgit-core \t\tnpm
      \t\tnodejs-legacy && \tcd / && \tgit clone --depth 10 --branch $VROOM_EXPRESS_BRANCH
      https://github.com/VROOM-Project/vroom-express.git && \tcd vroom-express &&
      \tln -s /dev/stdout access.log && \tnpm install && \tapt-get purge -qq \t\tbuild-essential
      \t\tgit-core \t\tmake  && \tapt-get autoremove --purge -qq && \tapt-get clean
      && \tcd / && \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /src"
    Name: run
    PrependShell: true
  - Env:
    - Key: VROOM_FRONTEND_BRANCH
      Value: master
    Name: env
  - CmdLine:
    - "apt-get update && \tapt-get install -qq \t\tbuild-essential \t\tgit-core \t\tnpm
      \t\tnodejs-legacy && \tcd / && \tgit clone --depth 10 --branch $VROOM_FRONTEND_BRANCH
      https://github.com/VROOM-Project/vroom-frontend.git && \tcd vroom-frontend &&
      \tnpm install && \tcd /vroom-frontend/src && \tmake && \tapt-get purge -qq \t\tbuild-essential
      \t\tgit-core \t\tmake  && \tapt-get autoremove --purge -qq && \tapt-get clean
      && \tcd / && \trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /src"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -qq --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && \tapt-get install -qq \t\tcurl \t\tiproute  \t\tiputils-ping
      \t\tnginx \t\tsupervisor \t\twget && \tapt-get clean && \tcd / && \trm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/* /src"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - osrm.sh
    - /usr/local/bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - vroom-express.sh
    - /usr/local/bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.sh
    - /usr/local/bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /usr/local/bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Name: volume
    Volumes:
    - /osm
  - Name: expose
    Ports:
    - "5000"
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - /usr/local/bin/start.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
