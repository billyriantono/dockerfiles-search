MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: Dennis Schaaf <dennis@plantdemand.com>
    Name: maintainer
  - CmdLine:
    - sed 's/main$/main universe/' -i /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y locales locales-all
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get install -y -qq build-essential xorg libssl-dev libxrender-dev wget libxrender1
      fontconfig xvfb gdebi --quiet
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
    - /wkhtmltox.tar.xz
  - CmdLine:
    - sudo mkdir -p /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt; sudo tar xf /wkhtmltox.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo ln -s /opt/wkhtmltox/bin/wkhtmltopdf /usr/bin/wkhtmltopdf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y  -qq git libmysqlclient-dev  wget libxml2-dev libxslt-dev
      curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y  -qq python3-pip python3-dev python-virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y  -qq nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf  /usr/bin/nodejs /usr/bin/node
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker_entry_point.sh
    - /docker_entry_point.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - virtual_env_entry_point.sh
    - /virtual_env_entry_point.sh
  - CmdLine:
    - chmod 755 /*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/sh
    - /docker_entry_point.sh
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "80"
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
