{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Dmitry Mozzherin",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LAST_FULL_REBUILD",
              "Value": "2016-08-06"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y software-properties-common \u0026\u0026     apt-add-repository ppa:brightbox/ruby-ng \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y ruby2.3 ruby2.3-dev     zlib1g-dev liblzma-dev libxml2-dev libpq-dev nodejs     libqt4-dev libqtwebkit-dev libmysqlclient-dev csh git     libxslt-dev supervisor build-essential supervisor \u0026\u0026     add-apt-repository -y ppa:nginx/stable \u0026\u0026     apt-get update \u0026\u0026     apt-get install -qq -y nginx \u0026\u0026     echo \"\\ndaemon off;\" \u003e\u003e /etc/nginx/nginx.conf \u0026\u0026     chown -R www-data:www-data /var/lib/nginx \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":99.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RACK_ENV",
              "Value": "development"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RESQUE_WORKERS",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "QUEUE",
              "Value": "NameFinder"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PUMA_WORKERS",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'gem: --no-rdoc --no-ri \u003e\u003e \"$HOME/.gemrc\"'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler \u0026\u0026     mkdir /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/docker/nginx-sites.conf",
            "/etc/nginx/sites-enabled/default"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Gemfile",
            "/app"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Gemfile.lock",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "bundle install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y xvfb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "Xvfb :99 -ac -screen 0 $XVFB_WHD -nolisten tcp \u0026"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "[\"supervisord\", \"-c\", \"/app/config/docker/supervisord_dev.conf]"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}