MetaArgs: null
Stages:
- BaseName: gcc:latest
  Commands:
  - Env:
    - Key: BUILD
      Value: /build
    Name: env
  - Env:
    - Key: OPT
      Value: /opt
    Name: env
  - Env:
    - Key: ZLIB_VERSION
      Value: 1.2.11
    Name: env
  - Env:
    - Key: JPEG_VERSION
      Value: 6b
    Name: env
  - Env:
    - Key: SZIP_VERSION
      Value: "2.1"
    Name: env
  - Env:
    - Key: HDF4_VERSION
      Value: 4.2.12
    Name: env
  - Env:
    - Key: HDF5_VERSION
      Value: 1.10.4
    Name: env
  - Env:
    - Key: NC4F_VERSION
      Value: 4.4.4
    Name: env
  - Env:
    - Key: NC4C_VERSION
      Value: 4.4.1
    Name: env
  - Env:
    - Key: NCO_VERSION
      Value: 4.6.1
    Name: env
  - Env:
    - Key: PYHDF_VERSION
      Value: 0.9.0
    Name: env
  - Env:
    - Key: NETCDFPY_VERSION
      Value: 1.2.4rel
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y byacc bison diffutils flex make
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y vim less tree screen unzip cvs subversion git gdb valgrind
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${OPT}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${BUILD} && cd ${BUILD} &&     wget -q http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz
      &&     tar xzf zlib-${ZLIB_VERSION}.tar.gz &&     cd zlib-${ZLIB_VERSION} &&     ./configure
      && make -j4 && make install &&     cp configure.log ${OPT}/config.log-zlib-${ZLIB_VERSION}
      &&     rm -rf ${BUILD}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libjpeg-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${BUILD} ${OPT}/hdf4 && cd ${BUILD} &&     wget -q http://www.hdfgroup.org/ftp/HDF/releases/HDF${HDF4_VERSION}/src/hdf-${HDF4_VERSION}.tar.gz
      &&     tar xzf hdf-${HDF4_VERSION}.tar.gz &&     cd hdf-${HDF4_VERSION} &&     CFLAGS="-fPIC
      -DHAVE_NETCDF -fno-strict-aliasing"     CXXFLAGS="-fPIC -DHAVE_NETCDF -fno-strict-aliasing"     ./configure
      --prefix="${OPT}/hdf4" --disable-netcdf --enable-fortran && make -j4 && make
      install &&     mv ${OPT}/hdf4/bin/ncdump ${OPT}/hdf4/bin/hdfdump &&     mv ${OPT}/hdf4/bin/ncgen  ${OPT}/hdf4/bin/hdfgen
      &&     cp config.log ${OPT}/hdf4/config.log-hdf4-${HDF4_VERSION} &&     rm -rf
      ${BUILD}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${BUILD} ${OPT}/hdf5 && cd ${BUILD} &&     wget -q https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-${HDF5_VERSION}/src/hdf5-${HDF5_VERSION}.tar.bz2
      &&     tar xjf hdf5-${HDF5_VERSION}.tar.bz2 &&     cd hdf5-${HDF5_VERSION} &&     ./configure
      --prefix="${OPT}/hdf5" --with-pic --with-zlib="${OPT}/zlib" --enable-cxx --enable-fortran
      --enable-fortran2003 --with-pthread --with-default-api-version=v18 && make -j4
      && make install &&     cp config.log ${OPT}/hdf5/config.log-hdf5-${HDF5_VERSION}
      &&     rm -rf ${BUILD}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${BUILD} ${OPT}/netcdf4 && cd ${BUILD} &&     wget -q ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-${NC4C_VERSION}.tar.gz
      &&     tar xzf netcdf-${NC4C_VERSION}.tar.gz &&     cd netcdf-${NC4C_VERSION}
      &&     CPPFLAGS="-I${OPT}/hdf4/include -I${OPT}/hdf5/include"     LDFLAGS="-L${OPT}/hdf4/lib
      -L${OPT}/hdf5/lib"     LD_LIBRARY_PATH="${OPT}/zlib/lib:${OPT}/jpeg/lib:${OPT}/hdf4/lib:${OPT}/hdf5/lib"     LIBS="-ldf
      -lhdf5_hl -lhdf5 -ljpeg -lm -lz"     ./configure --prefix="${OPT}/netcdf4" --enable-hdf4
      --disable-dap --with-pic  && make -j4 && make install &&     cp config.log ${OPT}/netcdf4/config.log-netcdf-${NC4C_VERSION}
      &&     rm -rf ${BUILD}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${BUILD} ${OPT}/netcdf4 && cd ${BUILD} &&     wget -q ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-fortran-${NC4F_VERSION}.tar.gz
      &&     tar xzf netcdf-fortran-${NC4F_VERSION}.tar.gz &&     cd netcdf-fortran-${NC4F_VERSION}
      &&     CPPFLAGS="-I${OPT}/hdf4/include -I${OPT}/hdf5/include -I${OPT}/netcdf4/include"     LDFLAGS="-L${OPT}/hdf4/lib
      -L${OPT}/hdf5/lib -L${OPT}/netcdf4/lib"     LD_LIBRARY_PATH="${OPT}/hdf4/lib:${OPT}/hdf5/lib:${OPT}/netcdf4/lib"     LIBS="-lnetcdf
      -ldf -lhdf5_hl -lhdf5 -ljpeg -lm -lz"     ./configure --prefix="${OPT}/netcdf4"
      --disable-dap --with-pic && make -j4 && make install &&     cp config.log ${OPT}/netcdf4/config.log-netcdff-${NC4F_VERSION}
      &&     rm -rf ${BUILD}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${BUILD} ${OPT}/nco && cd ${BUILD} &&     wget -qL https://github.com/nco/nco/archive/${NCO_VERSION}.tar.gz
      &&     tar xzf ${NCO_VERSION}.tar.gz &&     cd nco-${NCO_VERSION} &&     NETCDF_ROOT=${OPT}/netcdf4
      ./configure --prefix=${OPT}/nco &&     make && make install &&     rm -rf ${BUILD}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-setuptools python-numpy python-scipy python-matplotlib
      python-mpltoolkits.basemap
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install -f http://larch.ssec.wisc.edu/cgi-bin/repos.cgi uwglance
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${BUILD} && cd ${BUILD} &&     wget -q https://github.com/Unidata/netcdf4-python/archive/v${NETCDFPY_VERSION}.tar.gz
      &&     tar xzf v${NETCDFPY_VERSION}.tar.gz &&     cd netcdf4-python-${NETCDFPY_VERSION}
      &&     PATH="${OPT}/netcdf4/bin:$PATH"     python setup.py install &&     rm
      -r ${BUILD}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias ls="ls --color=auto"' >> ~/.bashrc &&     echo 'alias ll="ls -lGh
      $@"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: HDF4
      Value: ${OPT}/hdf4
    Name: env
  - Env:
    - Key: HDF5
      Value: ${OPT}/hdf5
    Name: env
  - Env:
    - Key: NETCDF
      Value: ${OPT}/netcdf4
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: ${HDF4}/lib:${HDF5}/lib:${NETCDF}/lib:${LD_LIBRARY_PATH}
    Name: env
  - Env:
    - Key: PATH
      Value: ${HDF4}/bin/:${HDF5}/bin:${NETCDF}/bin:${PATH}
    Name: env
  From:
    Image: gcc:latest
  Name: ""
  Platform: ""
  SourceCode: FROM gcc:latest
