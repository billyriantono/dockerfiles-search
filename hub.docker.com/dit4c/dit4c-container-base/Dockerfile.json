{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "t.dettrick@uq.edu.au",
          "Name": "maintainer"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/apk",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "apk add --update     bash bash-doc     sudo     coreutils     supervisor     nginx     vim nano curl wget tmux screen bash-completion man tar zip unzip     patch     bash-doc coreutils-doc     vim-doc nano-doc curl-doc wget-doc tar-doc zip-doc unzip-doc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update git git-doc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "VERSION=v0.0.13 \u0026\u0026   curl -sL https://github.com/yudai/gotty/releases/download/$VERSION/gotty_linux_amd64.tar.gz     | tar xzC /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update py-pip \u0026\u0026 pip install kid flup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "easydav_fix-archive-download.patch",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /opt \u0026\u0026 cd /opt \u0026\u0026   curl -sL https://koti.kapsi.fi/jpa/webdav/easydav-0.4.tar.gz | tar zxvf - \u0026\u0026   mv easydav-0.4 easydav \u0026\u0026   cd easydav \u0026\u0026   patch -p1 \u003c /tmp/easydav_fix-archive-download.patch \u0026\u0026   cd -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/easydav /var/log/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc",
            "/etc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "opt",
            "/opt"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "var",
            "/var"
          ]
        },
        {
          "CmdLine": [
            "chown -R nginx:nginx /var/lib/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "nginx -t"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "adduser -D -s /bin/bash -G wheel researcher \u0026\u0026     truncate -s 0 /etc/sudoers \u0026\u0026     echo \"%wheel ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026     passwd -d -u researcher"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R researcher /var/log/easydav /var/log/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log"
          ]
        },
        {
          "CmdLine": [
            "sh -c '. /etc/os-release \u0026\u0026 echo \"You are using $PRETTY_NAME | $HOME_URL\" \u003e /etc/motd'"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}