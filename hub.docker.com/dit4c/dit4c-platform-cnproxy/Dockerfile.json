{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.3",
      "SourceCode": "FROM alpine:3.3",
      "Platform": "",
      "From": {
        "Image": "alpine:3.3"
      },
      "Commands": [
        {
          "Maintainer": "Tim Dettrick \u003ct.dettrick@uq.edu.au\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "export NGINX_VERSION=1.8.1 \u0026\u0026   export NGINX_CACHE_DIR=/var/cache/nginx \u0026\u0026   export NGINX_LOG_DIR=/var/log/nginx \u0026\u0026   export NGINX_RUN_DIR=/var/run/nginx \u0026\u0026   addgroup -S nginx \u0026\u0026   adduser -S -D -h /var/www -s /sbin/nologin -G nginx nginx \u0026\u0026   mkdir -p $NGINX_CACHE_DIR $NGINX_LOG_DIR $NGINX_RUN_DIR /run \u0026\u0026   chown nginx:nginx $NGINX_CACHE_DIR $NGINX_LOG_DIR $NGINX_RUN_DIR /run \u0026\u0026   apk add --update openssl-dev pcre-dev zlib-dev build-base \u0026\u0026   mkdir /src \u0026\u0026   wget -O - http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz     | tar xzv -C /src \u0026\u0026   cd /src/nginx-${NGINX_VERSION} \u0026\u0026   ./configure     --with-cc-opt=\"-static\"     --with-ld-opt=\"-static\"     --prefix=/usr     --conf-path=/etc/nginx/nginx.conf     --http-client-body-temp-path=$NGINX_CACHE_DIR/client_body_temp     --http-proxy-temp-path=$NGINX_CACHE_DIR/proxy_temp     --http-log-path=$NGINX_LOG_DIR/access.log     --error-log-path=$NGINX_LOG_DIR/error.log     --pid-path=$NGINX_RUN_DIR/nginx.pid     --lock-path=$NGINX_RUN_DIR/nginx.lock     --with-http_auth_request_module     --without-http_ssi_module     --without-http_userid_module     --without-http_access_module     --without-http_auth_basic_module     --without-http_autoindex_module     --without-http_geo_module     --without-http_split_clients_module     --without-http_fastcgi_module     --without-http_uwsgi_module     --without-http_scgi_module     --without-http_memcached_module     --without-http_limit_conn_module     --without-http_limit_req_module     --without-http_empty_gif_module     --without-http_browser_module     \u0026\u0026   make \u0026\u0026   make install \u0026\u0026   apk del openssl-dev pcre-dev zlib-dev build-base \u0026\u0026   cd - \u0026\u0026   rm -rf /src \u0026\u0026   rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "/etc",
            "/etc"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "/opt",
            "/opt"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache",
            "/var/log"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/nginx/conf.d \u0026\u0026   touch /etc/nginx/conf.d/variables.conf \u0026\u0026   chown nginx:nginx /etc/nginx/conf.d/variables.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "nginx"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/opt/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}