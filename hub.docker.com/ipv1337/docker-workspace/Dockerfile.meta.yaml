MetaArgs: null
Stages:
- BaseName: fedora:latest
  Commands:
  - Maintainer: James H Nguyen <james.nguyen@gmail.com>
    Name: maintainer
  - CmdLine:
    - dnf -y update && dnf clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - dnf -y install python2                    python3-virtualenv                    make                    git                    ansible                    sudo                    dumb-init                    net-tools                    procps                    unzip                    &&
      dnf clean all
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bootstrap.sh
    - /etc/profile.d/
  - CmdLine:
    - curl -sL "https://storage.googleapis.com/kubernetes-release/release/$(curl -s
      https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      -o /usr/bin/kubectl &&     chmod 0755 /usr/bin/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent "https://raw.githubusercontent.com/helm/helm/master/scripts/get"
      | bash
    Name: run
    PrependShell: true
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.11.13
    Name: env
  - CmdLine:
    - curl --silent -o ./terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip         &&
      unzip terraform.zip         && mv terraform /usr/local/bin         && rm -rf
      terraform.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: TERRAGRUNT_VERSION
      Value: 0.18.3
    Name: env
  - CmdLine:
    - curl --silent -L -o ./terragrunt         https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64         &&
      chmod 0755 terragrunt         && mv terragrunt /usr/local/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: CODE_VERSION
      Value: '"1.939-vsc1.33.1"'
    Name: env
  - CmdLine:
    - curl -sL https://github.com/codercom/code-server/releases/download/${CODE_VERSION}/code-server${CODE_VERSION}-linux-x64.tar.gz
      | tar --strip-components=1 -zx -C /usr/local/bin code-server${CODE_VERSION}-linux-x64/code-server
    Name: run
    PrependShell: true
  - Env:
    - Key: LOCAL_USER
      Value: luser
    Name: env
  - CmdLine:
    - 'useradd -m ${LOCAL_USER} &&     echo "${LOCAL_USER} ALL=NOPASSWD: ALL" > /etc/sudoers.d/${LOCAL_USER}'
    Name: run
    PrependShell: true
  - Name: user
    User: ${LOCAL_USER}
  - Env:
    - Key: HOME
      Value: /home/${LOCAL_USER}
    Name: env
  - Env:
    - Key: PATH
      Value: /home/${LOCAL_USER}/google-cloud-sdk/bin:${PATH}
    Name: env
  - Env:
    - Key: CLOUDSDK_PYTHON
      Value: /usr/bin/python
    Name: env
  - CmdLine:
    - curl --silent -o /tmp/google-cloud-sdk.tar.gz         https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz         &&
      tar -C /home/${LOCAL_USER} -zxf /tmp/google-cloud-sdk.tar.gz         && /home/${LOCAL_USER}/google-cloud-sdk/install.sh             --usage-reporting
      false             --bash-completion true             --rc-path /home/${LOCAL_USER}/.bashrc             --path-update
      true         && rm -rf /tmp/google-cloud-sdk.tar.gz         && rm -rf /home/${LOCAL_USER}/google-cloud-sdk/.install/.backup
    Name: run
    PrependShell: true
  - CmdLine:
    - helm init --client-only &&     helm plugin install https://github.com/rimusz/helm-tiller
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/${LOCAL_USER}/project
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/${LOCAL_USER}/project
  - Name: volume
    Volumes:
    - /data
    - /home/${LOCAL_USER}/.config/gcloud
  - Name: expose
    Ports:
    - "8443"
  - CmdLine:
    - dumb-init
    - code-server
    Name: entrypoint
    PrependShell: false
  From:
    Image: fedora:latest
  Name: ""
  Platform: ""
  SourceCode: FROM fedora:latest
