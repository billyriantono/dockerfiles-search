MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: David Sykora <dsykorao@gmail.com>
    Name: maintainer
  - CmdLine:
    - groupadd -r node && useradd -m -g node node
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - CmdLine:
    - apt-get update &&   apt-get install -y openjdk-8-jre &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Env:
    - Key: MONGO_VERSION
      Value: 3.4.10
    Name: env
  - Env:
    - Key: MONGO_MAJOR
      Value: "3.4"
    Name: env
  - Env:
    - Key: MONGO_PACKAGE
      Value: mongodb-org
    Name: env
  - Env:
    - Key: PHANTOM_VERSION
      Value: 2.1.1
    Name: env
  - Env:
    - Key: APP_SOURCE_DIR
      Value: /opt/meteor/src
    Name: env
  - Env:
    - Key: APP_BUNDLE_DIR
      Value: /opt/meteor/dist
    Name: env
  - Env:
    - Key: BUILD_SCRIPTS_DIR
      Value: /opt/build_scripts
    Name: env
  - Env:
    - Key: BUILD_DIR
      Value: /usr/local/share
    Name: env
  - Env:
    - Key: CACHE_DIR
      Value: /tmp
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts
    - $BUILD_SCRIPTS_DIR
  - CmdLine:
    - chmod -R 750 $BUILD_SCRIPTS_DIR
    Name: run
    PrependShell: true
  - Expression: ARG APT_GET_INSTALL
    Name: onbuild
  - Expression: ENV APT_GET_INSTALL $APT_GET_INSTALL
    Name: onbuild
  - Expression: ARG NODE_VERSION
    Name: onbuild
  - Expression: ENV NODE_VERSION ${NODE_VERSION:-8.11.4}
    Name: onbuild
  - Expression: ARG NPM_TOKEN
    Name: onbuild
  - Expression: ENV NPM_TOKEN $NPM_TOKEN
    Name: onbuild
  - Expression: ARG INSTALL_MONGO
    Name: onbuild
  - Expression: ENV INSTALL_MONGO $INSTALL_MONGO
    Name: onbuild
  - Expression: ARG INSTALL_MONGO_TOOLS
    Name: onbuild
  - Expression: ENV INSTALL_MONGO_TOOLS $INSTALL_MONGO_TOOLS
    Name: onbuild
  - Expression: ARG INSTALL_PHANTOMJS
    Name: onbuild
  - Expression: ENV INSTALL_PHANTOMJS $INSTALL_PHANTOMJS
    Name: onbuild
  - Expression: ARG INSTALL_GRAPHICSMAGICK
    Name: onbuild
  - Expression: ENV INSTALL_GRAPHICSMAGICK $INSTALL_GRAPHICSMAGICK
    Name: onbuild
  - Expression: ARG TOOL_NODE_FLAGS
    Name: onbuild
  - Expression: ENV TOOL_NODE_FLAGS "--max_old_space_size=4096"
    Name: onbuild
  - Env:
    - Key: TOOL_NODE_FLAGS
      Value: '"--max_old_space_size=4096"'
    Name: env
  - Expression: RUN if [ "$APT_GET_INSTALL" ]; then apt-get update && apt-get install
      -y $APT_GET_INSTALL; fi
    Name: onbuild
  - Expression: COPY . $APP_SOURCE_DIR
    Name: onbuild
  - Expression: RUN cd $APP_SOURCE_DIR &&   $BUILD_SCRIPTS_DIR/install-deps.sh &&   $BUILD_SCRIPTS_DIR/install-node.sh
      &&   $BUILD_SCRIPTS_DIR/install-phantom.sh &&   $BUILD_SCRIPTS_DIR/install-graphicsmagick.sh
      &&   $BUILD_SCRIPTS_DIR/install-ffmpeg.sh $BUILD_DIR $CACHE_DIR &&   $BUILD_SCRIPTS_DIR/install-mediainfo.sh
      $BUILD_DIR $CACHE_DIR &&   $BUILD_SCRIPTS_DIR/install-wkhtmltopdf.sh $BUILD_DIR
      $CACHE_DIR &&   $BUILD_SCRIPTS_DIR/install-libreoffice.sh $BUILD_DIR $CACHE_DIR
      &&   $BUILD_SCRIPTS_DIR/install-mongo.sh &&   $BUILD_SCRIPTS_DIR/install-meteor.sh
      &&   $BUILD_SCRIPTS_DIR/build-meteor.sh &&   $BUILD_SCRIPTS_DIR/post-build-cleanup.sh
    Name: onbuild
  - Env:
    - Key: PORT
      Value: "3000"
    Name: env
  - Name: expose
    Ports:
    - "3000"
  - Name: workdir
    Path: $APP_BUNDLE_DIR/bundle
  - CmdLine:
    - ./entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - node
    - main.js
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
