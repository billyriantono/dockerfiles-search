MetaArgs: null
Stages:
- BaseName: jenkins/jnlp-slave
  Commands:
  - Key: DOCKER_VERSION
    Name: arg
    Value: 18.06.3~ce~3-0~debian
  - Key: DOCKER_COMPOSE_VERSION
    Name: arg
    Value: 1.24.0
  - Key: DOCKER_SOCKET_GID
    Name: arg
    Value: "497"
  - Name: user
    User: root
  - CmdLine:
    - apt update     && apt install -y      apt-transport-https      ca-certificates      curl      gnupg2      software-properties-common     &&
      curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg      |
      apt-key add -     && add-apt-repository      "deb [arch=amd64] https://download.docker.com/linux/$(.
      /etc/os-release; echo "$ID")      $(lsb_release -cs)      stable"     && apt
      update     && apt install -y docker-ce=${DOCKER_VERSION}     && usermod -aG
      docker jenkins     && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname
      -s)-$(uname -m) -o /usr/local/bin/docker-compose     && chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://http.debian.net/debian wheezy-backports main' > /etc/apt/sources.list.d/wheezy-backports-main.list     &&
      curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh
      | bash     && apt-get install git-lfs
    Name: run
    PrependShell: true
  - CmdLine:
    - '[ -n "$(getent group ${DOCKER_SOCKET_GID} | cut -d: -f1)" ] || groupadd -g
      $DOCKER_SOCKET_GID docker_socket;     usermod -aG ${DOCKER_SOCKET_GID} jenkins'
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp     && curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.13.0/bin/linux/amd64/kubectl     &&
      chmod +x ./kubectl     && mv ./kubectl /usr/local/bin/kubectl     && curl -O
      https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/aws-iam-authenticator     &&
      chmod +x ./aws-iam-authenticator     && mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator     &&
      curl -LO https://storage.googleapis.com/kubernetes-helm/helm-v2.12.1-linux-amd64.tar.gz     &&
      tar xzf helm-v2.12.1-linux-amd64.tar.gz     && mv ./linux-amd64/helm /usr/local/bin/helm     &&
      rm -rf helm-v2.12.1-linux-amd64.tar.gz ./linux-amd64/helm     && runuser -l
      jenkins -c 'helm init --client-only'
    Name: run
    PrependShell: true
  - Name: user
    User: jenkins
  - CmdLine:
    - mkdir /home/jenkins/workspace
    Name: run
    PrependShell: true
  From:
    Image: jenkins/jnlp-slave
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins/jnlp-slave
