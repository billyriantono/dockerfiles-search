{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7-apache",
      "SourceCode": "FROM php:7-apache",
      "Platform": "",
      "From": {
        "Image": "php:7-apache"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -ex; \t\tif command -v a2enmod; then \t\ta2enmod rewrite; \tfi; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibjpeg-dev \t\tlibpng-dev \t\tlibpq-dev \t; \t\tdocker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \tdocker-php-ext-install -j \"$(nproc)\" \t\tgd \t\topcache \t\tpdo_mysql \t\tpdo_pgsql \t\tzip \t; \t\tapt-mark auto '.*' \u003e /dev/null; \tapt-mark manual $savedAptMark; \tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \t\t| awk '/=\u003e/ { print $3 }' \t\t| sort -u \t\t| xargs -r dpkg-query -S \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -rt apt-mark manual; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=3'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SSMTP_MAILHUB",
              "Value": "${SSMTP_MAILHUB:-\"mail\"}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y ssmtp vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'root=postmaster'; \t\techo \"mailhub=$SSMTP_MAILHUB\"; \t\techo 'FromLineOverride=YES'; \t} \u003e /etc/ssmtp/ssmtp.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/tmp"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.7.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_XDEBUG_DEFAULT_ENABLE",
              "Value": "${PHP_XDEBUG_DEFAULT_ENABLE:-1}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_XDEBUG_REMOTE_ENABLE",
              "Value": "${PHP_XDEBUG_REMOTE_ENABLE:-1}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_XDEBUG_REMOTE_HOST",
              "Value": "${PHP_XDEBUG_REMOTE_HOST:-\"127.0.0.1\"}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_XDEBUG_REMOTE_PORT",
              "Value": "${PHP_XDEBUG_REMOTE_PORT:-9000}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_XDEBUG_REMOTE_AUTO_START",
              "Value": "${PHP_XDEBUG_REMOTE_AUTO_START:-1}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_XDEBUG_REMOTE_CONNECT_BACK",
              "Value": "${PHP_XDEBUG_REMOTE_CONNECT_BACK:-1}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_XDEBUG_IDEKEY",
              "Value": "${PHP_XDEBUG_IDEKEY:-docker}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_XDEBUG_PROFILER_ENABLE",
              "Value": "${PHP_XDEBUG_PROFILER_ENABLE:-0}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_XDEBUG_PROFILER_OUTPUT_DIR",
              "Value": "${PHP_XDEBUG_PROFILER_OUTPUT_DIR:-\"/tmp\"}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl --silent --fail --location --retry 3 --output /tmp/installer.php --url https://raw.githubusercontent.com/composer/getcomposer.org/b107d959a5924af895807021fcef4ffec5a76aa9/web/installer  \u0026\u0026 php -r \"     \\$signature = '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061';     \\$hash = hash('SHA384', file_get_contents('/tmp/installer.php'));     if (!hash_equals(\\$signature, \\$hash)) {         unlink('/tmp/installer.php');         echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL;         exit(1);     }\"  \u0026\u0026 php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION}  \u0026\u0026 composer --ansi --version --no-interaction  \u0026\u0026 rm -rf /tmp/* /tmp/.htaccess"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{     echo 'memory_limit = 768M'; \t\techo 'realpath_cache_size = 4M'; \t\techo 'realpath_cache_ttl = 480'; \t\techo 'sendmail_path = /usr/sbin/ssmtp -t';         echo 'zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20170718/xdebug.so'; \t} \u003e /usr/local/etc/php/conf.d/d8-settings.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y git zip unzip mysql-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /var/www \u0026\u0026 php /usr/bin/composer create-project drupal-composer/drupal-project:8.x-dev html --stability dev --no-interaction"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/www/html/web/publicfs \u0026\u0026 chown 33 /var/www/html/web/publicfs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo '$settings[\"file_public_path\"] = \"publicfs\";';     echo 'if (file_exists($app_root . \"/\" . $site_path . \"/settings.local.php\")) {';     echo '  include $app_root . \"/\" . $site_path . \"/settings.local.php\";';     echo \"}\"; \t} \u003e\u003e /var/www/html/web/sites/default/settings.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /var/www/html/web/sites/example.settings.local.php /var/www/html/web/sites/default/settings.local.php \u0026\u0026 chown www-data /var/www/html/web/sites/default/settings.php /var/www/html/web/sites/default/settings.local.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo '$settings[\"cache\"][\"bins\"][\"render\"] = \"cache.backend.null\";';     echo '$settings[\"cache\"][\"bins\"][\"page\"] = \"cache.backend.null\";';     echo '$settings[\"cache\"][\"bins\"][\"dynamic_page_cache\"] = \"cache.backend.null\";'; \t} \u003e\u003e /var/www/html/web/sites/default/settings.local.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /var/www/html \u0026\u0026 php /usr/bin/composer require drupal/devel drupal/token drupal/pathauto drupal/metatag drupal/field_group drupal/paragraphs drupal/webform drupal/flag drupal/bootstrap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/html/web/sites/default/files/translations \u0026\u0026 chown -R 33 /var/www/html/web/sites/default/files \u0026\u0026 chown 33 /var/www/html/web/sites/default/settings.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo '\u003cVirtualHost *:80\u003e'; \t\techo '        ServerAdmin webmaster@localhost'; \t\techo '        DocumentRoot /var/www/html/web'; \t\techo '        ErrorLog ${APACHE_LOG_DIR}/error.log'; \t\techo '        CustomLog ${APACHE_LOG_DIR}/access.log combined'; \t\techo '\u003c/VirtualHost\u003e'; \t} \u003e /etc/apache2/sites-available/000-default.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html/web/themes/custom"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html/web/modules/custom"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html/web/publicfs"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/apache2ctl -D FOREGROUND"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}