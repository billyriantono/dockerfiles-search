{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "rust:stretch",
      "SourceCode": "FROM rust:stretch",
      "Platform": "",
      "From": {
        "Image": "rust:stretch"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' \u003e /etc/apt/sources.list.d/pgdg.list   \u0026\u0026 wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qq   \u0026\u0026 mkdir -p /usr/share/man/man1   \u0026\u0026 apt-get upgrade -yqq   \u0026\u0026 apt-get install -yqq   parallel net-tools netcat unzip zip cmake libpq-dev postgresql-client-10"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DOCKERIZE_URL=\"https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz\"   \u0026\u0026 curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL   \u0026\u0026 tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz   \u0026\u0026 rm -rf /tmp/dockerize-linux-amd64.tar.gz   \u0026\u0026 dockerize --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rustup install nightly-2018-07-07"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cargo install cargo-update \u0026\u0026 cargo install diesel_cli --no-default-features --features=postgres"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}