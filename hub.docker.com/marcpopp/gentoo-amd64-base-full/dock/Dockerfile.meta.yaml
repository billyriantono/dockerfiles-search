MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.11.5
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y     git     make     wget     gcc     zip
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - Env:
    - Key: DOCKER_CHANNEL
      Value: stable
    Name: env
  - Env:
    - Key: DOCKER_VERSION
      Value: 18.09.1
    Name: env
  - Env:
    - Key: DOCKER_ARCH
      Value: aarch64
    Name: env
  - CmdLine:
    - wget -O docker.tgz "https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${DOCKER_ARCH}/docker-${DOCKER_VERSION}.tgz"
      &&     tar --extract --file docker.tgz --strip-components 1 --directory /usr/local/bin/
      &&     rm docker.tgz
    Name: run
    PrependShell: true
  - Env:
    - Key: DEP_VERSION
      Value: 0.5.1
    Name: env
  - Env:
    - Key: DEP_ARCH
      Value: amd64
    Name: env
  - CmdLine:
    - wget https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-${DEP_ARCH}
      -O /usr/local/bin/dep &&     chmod +x /usr/local/bin/dep
    Name: run
    PrependShell: true
  - Env:
    - Key: GOMETALINTER_VERSION
      Value: 2.0.12
    Name: env
  - Env:
    - Key: GOMETALINTER_ARCH
      Value: amd64
    Name: env
  - CmdLine:
    - curl -sLo- https://github.com/alecthomas/gometalinter/releases/download/v${GOMETALINTER_VERSION}/gometalinter-${GOMETALINTER_VERSION}-linux-${GOMETALINTER_ARCH}.tar.gz
      |     tar -xzC "$GOPATH/bin" --exclude COPYING --exclude README.md --strip-components
      1 -f- &&     ln -s $GOPATH/bin/gometalinter $GOPATH/bin/gometalinter.v2
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11.5
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.11.5 as builder
- As: argo-build
  BaseName: builder
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gopkg.toml
    - ${GOPATH}/src/dummy/Gopkg.toml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gopkg.lock
    - ${GOPATH}/src/dummy/Gopkg.lock
  - CmdLine:
    - cd ${GOPATH}/src/dummy &&     dep ensure -vendor-only &&     mv vendor/* ${GOPATH}/src/
      &&     rmdir vendor
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /go/src/github.com/argoproj/argo
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - Key: MAKE_TARGET
    Name: arg
    Value: '"controller-arm64 executor-arm64 cli-linux-arm64"'
  - CmdLine:
    - make $MAKE_TARGET
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: builder
  Name: argo-build
  Platform: ""
  SourceCode: FROM builder as argo-build
