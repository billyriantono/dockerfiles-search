MetaArgs: null
Stages:
- BaseName: debian:buster
  Commands:
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y         python3 python3.7 python3-pip         libboost-all-dev
      libboost-program-options-dev libxml-libxml-perl         python3-dev python3.7-dev
      build-essential libffi-dev         git autoconf automake libtool file         flex
      bison libglib2.0-0 libglib2.0-dev         curl wget unzip zip openjdk-11-jdk         libopencc-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex && curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
      | python3
    Name: run
    PrependShell: true
  - CmdLine:
    - ~/.poetry/bin/poetry config settings.virtualenvs.create false
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pipenv
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s "https://get.sdkman.io" | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c 'source "/root/.sdkman/bin/sdkman-init.sh" &&         sdk install maven
      &&         sdk flush archives &&         sdk flush temp'
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/bin/python3.7 /usr/bin/python
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./compile_scorer.sh
    - /app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./support/scorer
    - /app/support/scorer
  - CmdLine:
    - bash ./compile_scorer.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./pyproject.toml
    - /app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./poetry.lock
    - /app/
  - CmdLine:
    - pip3 install --upgrade pip==19.0.3
    Name: run
    PrependShell: true
  - CmdLine:
    - ~/.poetry/bin/poetry install --no-interaction
    Name: run
    PrependShell: true
  - CmdLine:
    - python -c "from nltk import download as d; d('wordnet'); d('omw'); d('punkt')"
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m finntk.scripts.bootstrap_all
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app/fetchers
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./fetchers/ukb.py
    - /app/fetchers/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./support/ukb
    - /app/support/ukb
  - CmdLine:
    - python fetchers/ukb.py fetch
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./fetchers/supwsd.py
    - /app/fetchers/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./support/supWSD
    - /app/support/supWSD
  - CmdLine:
    - bash -c 'source "/root/.sdkman/bin/sdkman-init.sh" && python fetchers/supwsd.py'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./fetchers/ctx2vec.py
    - /app/fetchers/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./support/context2vec
    - /app/support/context2vec
  - CmdLine:
    - python fetchers/ctx2vec.py
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./fetchers/sif.py
    - /app/fetchers/
  - CmdLine:
    - python fetchers/sif.py
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m stiff.scripts.post_install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app
  - CmdLine:
    - echo "/app/" > "/usr/local/lib/python3.7/dist-packages/wsdeval.pth"
    Name: run
    PrependShell: true
  From:
    Image: debian:buster
  Name: ""
  Platform: ""
  SourceCode: FROM debian:buster
