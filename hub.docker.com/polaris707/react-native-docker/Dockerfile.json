{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu@sha256:84c334414e2bfdcae99509a6add166bbb4fa4041dc3fa6af08046a66fed3005f",
      "SourceCode": "FROM ubuntu@sha256:84c334414e2bfdcae99509a6add166bbb4fa4041dc3fa6af08046a66fed3005f",
      "Platform": "",
      "From": {
        "Image": "ubuntu@sha256:84c334414e2bfdcae99509a6add166bbb4fa4041dc3fa6af08046a66fed3005f"
      },
      "Commands": [
        {
          "Maintainer": "shinyup.lee \u003cleesy7070@gamil.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "mkdir /home/project"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \u0026\u0026 \t\tapt-get -y update \u0026\u0026 \t\tapt-get install -y build-essential libtool pkg-config libssl-dev git autoconf automake python-dev \u0026\u0026 \t\tapt-get install --no-install-recommends -y openjdk-8-jdk openjdk-8-jdk-headless openjdk-8-jre-headless ca-certificates-java \u0026\u0026 \t\tapt-get install -qy --no-install-recommends libstdc++6:i386 libgcc1:i386 zlib1g:i386 libncurses5:i386 \u0026\u0026 \t\tapt-get install -y openssh-client telnet wget unzip \u0026\u0026 \t\tapt-get install -qq -y curl \u0026\u0026 \t\tapt-get install -y vim usbutils software-properties-common \u0026\u0026 \t\tapt-get install -y sudo net-tools \u0026\u0026 \t\trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:samoilov-lex/aftl-stable \u0026\u0026 \t\tapt-get update \u0026\u0026 \t\tapt-get install -y android-file-transfer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_FILE",
              "Value": "sdk-tools-linux-4333796.zip"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_SDK_URL",
              "Value": "https://dl.google.com/android/repository/$ANDROID_SDK_FILE"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/usr/local/android/sdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ANDROID_HOME/tools"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ANDROID_HOME/tools/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ANDROID_HOME/platform-tools"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ANDROID_HOME/emulator"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $ANDROID_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$ANDROID_HOME"
        },
        {
          "CmdLine": [
            "wget $ANDROID_SDK_URL \u0026\u0026     unzip $ANDROID_SDK_FILE \u0026\u0026     rm $ANDROID_SDK_FILE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"y\" | sdkmanager \"platform-tools\" \t\t\"platforms;android-27\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"y\" | sdkmanager \t\t\"system-images;android-27;google_apis;x86\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "WATCHMAN_HOME",
              "Value": "/usr/local/watchman"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $WATCHMAN_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$WATCHMAN_HOME"
        },
        {
          "CmdLine": [
            "git clone https://github.com/facebook/watchman.git $WATCHMAN_HOME \u0026\u0026     cd $WATCHMAN_HOME \u0026\u0026     git checkout v4.9.0 \u0026\u0026     ./autogen.sh \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash - \u0026\u0026 \t\tapt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g react-native-cli@2.0.1 --save"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/project"
        }
      ]
    }
  ]
}