{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "qnib/alpn-rsyslog",
      "SourceCode": "FROM qnib/alpn-rsyslog",
      "Platform": "",
      "From": {
        "Image": "qnib/alpn-rsyslog"
      },
      "Commands": [
        {
          "Key": "JDK",
          "Name": "arg",
          "Value": "\"8u111-b14\""
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-oracle"
            },
            {
              "Key": "PATH",
              "Value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/jvm/java-8-oracle/bin/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update wget ca-certificates  \u0026\u0026 export URL=\"http://download.oracle.com/otn-pub/java/jdk/$JDK/jdk-`echo \"$JDK\" | sed 's@-[^-]*$@@g'`-linux-x64.tar.gz\"  \u0026\u0026 mkdir -p /usr/lib/jvm/java-8-oracle  \u0026\u0026 cd /tmp  \u0026\u0026 wget --quiet --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"$URL\"  \u0026\u0026 tar zxf /tmp/jdk-*-linux-x64.tar.gz -C /tmp/  \u0026\u0026 mv /tmp/jdk*/* /usr/lib/jvm/java-8-oracle/  \u0026\u0026 mkdir -p /usr/lib/jvm/java-8-oracle/jre/lib/security  \u0026\u0026 rm -rf /var/cache/apk/* /tmp/*            ${JAVA_HOME}/*src.zip            ${JAVA_HOME}/lib/missioncontrol            ${JAVA_HOME}/lib/visualvm            ${JAVA_HOME}/lib/*javafx*            ${JAVA_HOME}/jre/plugin            ${JAVA_HOME}/jre/bin/javaws            ${JAVA_HOME}/jre/bin/jjs            ${JAVA_HOME}/jre/bin/keytool            ${JAVA_HOME}/jre/bin/orbd            ${JAVA_HOME}/jre/bin/pack200            ${JAVA_HOME}/jre/bin/policytool            ${JAVA_HOME}/jre/bin/rmid            ${JAVA_HOME}/jre/bin/rmiregistry            ${JAVA_HOME}/jre/bin/servertool            ${JAVA_HOME}/jre/bin/tnameserv            ${JAVA_HOME}/jre/bin/unpack200            ${JAVA_HOME}/jre/lib/javaws.jar            ${JAVA_HOME}/jre/lib/deploy*            ${JAVA_HOME}/jre/lib/desktop            ${JAVA_HOME}/jre/lib/*javafx*            ${JAVA_HOME}/jre/lib/*jfx*            ${JAVA_HOME}/jre/lib/jfr*            ${JAVA_HOME}/jre/lib/amd64/libdecora_sse.so            ${JAVA_HOME}/jre/lib/amd64/libprism_*.so            ${JAVA_HOME}/jre/lib/amd64/libfxplugins.so            ${JAVA_HOME}/jre/lib/amd64/libglass.so            ${JAVA_HOME}/jre/lib/amd64/libgstreamer-lite.so            ${JAVA_HOME}/jre/lib/amd64/libjavafx*.so            ${JAVA_HOME}/jre/lib/amd64/libjfx*.so            ${JAVA_HOME}/jre/lib/ext/jfxrt.jar            ${JAVA_HOME}/jre/lib/ext/nashorn.jar            ${JAVA_HOME}/jre/lib/oblique-fonts            ${JAVA_HOME}/jre/lib/plugin.jar            /tmp/* /var/cache/apk/* \u0026\u0026     echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' \u003e\u003e /etc/nsswitch.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "POLICY_URL=\"http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip\"   \u0026\u0026 POLICY_DIR=\"UnlimitedJCEPolicyJDK8\"   \u0026\u0026 wget --quiet --no-cookies --no-check-certificate      --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\"      \"$POLICY_URL\" -O /tmp/policy.zip   \u0026\u0026 cd /tmp   \u0026\u0026 unzip /tmp/policy.zip   \u0026\u0026 mv /tmp/$POLICY_DIR/*.jar /usr/lib/jvm/java-8-oracle/jre/lib/security/   \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "cd /tmp/  \u0026\u0026 wget -qO /usr/local/bin/go-github https://github.com/qnib/go-github/releases/download/0.2.2/go-github_0.2.2_MuslLinux  \u0026\u0026 chmod +x /usr/local/bin/go-github  \u0026\u0026 echo \"# download $(/usr/local/bin/go-github rLatestUrl --ghorg sgerrand --ghrepo alpine-pkg-glibc --regex 'glibc-2.*.apk' |head -n1) \" \u0026\u0026 wget -q $(/usr/local/bin/go-github rLatestUrl --ghorg sgerrand --ghrepo alpine-pkg-glibc --regex \"glibc-2.*.apk\" |head -n1)  \u0026\u0026 echo \"# download $(/usr/local/bin/go-github rLatestUrl --ghorg sgerrand --ghrepo alpine-pkg-glibc --regex 'glibc-bin-2.*.apk' |head -n1) \" \u0026\u0026 wget -q $(/usr/local/bin/go-github rLatestUrl --ghorg sgerrand --ghrepo alpine-pkg-glibc --regex \"glibc-bin-2.*.apk\" |head -n1)  \u0026\u0026 apk add --no-cache --allow-untrusted glibc-*.apk  \u0026\u0026 rm -rf /usr/local/bin/go-github /tmp/glibc-*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}