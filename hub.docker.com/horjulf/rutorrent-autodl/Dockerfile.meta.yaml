MetaArgs: null
Stages:
- BaseName: lsiobase/nginx:3.8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"horjulf"'
    Name: label
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - patches/
    - /defaults/patches/
  - CmdLine:
    - "echo \"**** install build packages ****\" &&  apk add --no-cache --virtual=build-dependencies
      \tg++ \tlibffi-dev \tmake \tmusl \topenssl-dev \tperl-dev \tpython3-dev &&  echo
      \"**** install packages ****\" &&  apk add --no-cache --upgrade \tbind-tools
      \tca-certificates \tcurl \tdtach \tfcgi \tffmpeg \tgeoip \tgit \tgzip \tirssi
      \tirssi-perl \tmediainfo \tperl \tperl-utils \tperl-archive-zip \tperl-digest-sha1
      \tperl-html-parser \tperl-json \tperl-net-ssleay \tperl-xml-libxml \tphp7 \tphp7-cgi
      \tphp7-curl \tphp7-json \tphp7-mbstring \tphp7-pear \tphp7-sockets \tphp7-zip
      \tprocps \tpython3 \trtorrent \tsox \ttar \tunrar \tunzip \twget \txz \tzip
      \tzlib &&  echo \"**** install perl dependencies ****\" && \tPERL_MM_USE_DEFAULT=1
      cpan JSON::XS &&  echo \"**** setup python pip dependencies ****\" &&  python3
      -m pip install --no-cache-dir -U \tcloudscraper \tpip \trequests \tsetuptools
      \turllib3 &&  echo \"**** install rutorrent ****\" &&  if [ -z ${RUTORRENT_VERSION+x}
      ]; then \tRUTORRENT_VERSION=$(curl -sX GET https://api.github.com/repos/Novik/rutorrent/commits/master
      \t| awk '/sha/{print $4;exit}' FS='[\"\"]');  fi &&  curl -o  /tmp/rutorrent.tar.gz
      -L \t\"https://github.com/Novik/rutorrent/archive/${RUTORRENT_VERSION}.tar.gz\"
      &&  mkdir -p \t/app/rutorrent \t/defaults/rutorrent-conf &&  tar xf  /tmp/rutorrent.tar.gz
      -C \t/app/rutorrent --strip-components=1 &&  mv /app/rutorrent/conf/* \t/defaults/rutorrent-conf/
      &&  rm -rf \t/defaults/rutorrent-conf/users &&  echo \"**** patch snoopy.inc
      for rss fix ****\" &&  cd /app/rutorrent/php &&  patch < /defaults/patches/snoopy.patch
      &&  echo \"**** cleanup ****\" &&  apk del --purge \tbuild-dependencies &&  rm
      -rf \t/etc/nginx/conf.d/default.conf \t/root/.cache \t/tmp/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - Env:
    - Key: S6_KILL_FINISH_MAXTIME
      Value: "120000"
    - Key: S6_SERVICES_GRACETIME
      Value: "5000"
    - Key: S6_KILL_GRACETIME
      Value: "5000"
    Name: env
  - Name: expose
    Ports:
    - "80"
  From:
    Image: lsiobase/nginx:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM lsiobase/nginx:3.8
