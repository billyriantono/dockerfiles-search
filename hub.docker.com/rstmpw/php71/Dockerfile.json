{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends locales     \u0026\u0026 echo '' \u003e\u003e /usr/share/locale/locale.alias     \u0026\u0026 sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen     \u0026\u0026 locale-gen --purge en_US.UTF-8     \u0026\u0026 echo -e 'LANG=\"en_US.UTF-8\"\\nLANGUAGE=\"en_US:en\"\\n' \u003e /etc/default/locale         \u0026\u0026 docker-php-ext-install -j$(nproc) opcache mysqli         \u0026\u0026 apt-get install -y --no-install-recommends zlib1g-dev     \u0026\u0026 docker-php-ext-install -j$(nproc) zip     \u0026\u0026 apt-get purge --auto-remove -y zlib1g-dev         \u0026\u0026 apt-get install -y --no-install-recommends libxslt-dev     \u0026\u0026 docker-php-ext-install -j$(nproc) xsl soap     \u0026\u0026 apt-get purge --auto-remove -y libxslt-dev         \u0026\u0026 apt-get install -y --no-install-recommends libpq-dev     \u0026\u0026 docker-php-ext-install -j$(nproc) pgsql pdo_pgsql         \u0026\u0026 apt-get install -y --no-install-recommends libfreetype6-dev libjpeg62-turbo-dev libpng-dev     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd         \u0026\u0026 pecl install msgpack     \u0026\u0026 docker-php-ext-enable msgpack         \u0026\u0026 curl -fsSL 'https://github.com/igbinary/igbinary/archive/master.tar.gz' -o igbinary.tar.gz \t\u0026\u0026 mkdir -p igbinary \t\u0026\u0026 tar -xf igbinary.tar.gz -C igbinary --strip-components=1 \t\u0026\u0026 rm igbinary.tar.gz \t\u0026\u0026 ( \t\tcd igbinary \t\t\u0026\u0026 phpize \t\t\u0026\u0026 ./configure CFLAGS=\"-O2 -g\" --enable-igbinary \t\t\u0026\u0026 make -j$(nproc) \t\t\u0026\u0026 make install \t) \t\u0026\u0026 rm -r igbinary \t\u0026\u0026 docker-php-ext-enable igbinary         \u0026\u0026 apt-get install -y --no-install-recommends libmemcached-dev     \u0026\u0026 curl -fsSL 'https://github.com/php-memcached-dev/php-memcached/archive/master.tar.gz' -o memcached.tar.gz \t\u0026\u0026 mkdir -p memcached \t\u0026\u0026 tar -xf memcached.tar.gz -C memcached --strip-components=1 \t\u0026\u0026 rm memcached.tar.gz \t\u0026\u0026 ( \t\tcd memcached \t\t\u0026\u0026 phpize \t\t\u0026\u0026 ./configure CFLAGS=\"-O2 -g\" --enable-memcached-igbinary --enable-memcached-json --enable-memcached-msgpack --disable-memcached-sasl \t\t\u0026\u0026 make -j$(nproc) \t\t\u0026\u0026 make install \t) \t\u0026\u0026 rm -r memcached \t\u0026\u0026 docker-php-ext-enable memcached         \u0026\u0026 curl -fsSL 'https://github.com/phpredis/phpredis/archive/4.2.0.tar.gz' -o redis.tar.gz \t\u0026\u0026 mkdir -p redis \t\u0026\u0026 tar -xf redis.tar.gz -C redis --strip-components=1 \t\u0026\u0026 rm redis.tar.gz \t\u0026\u0026 ( \t\tcd redis \t\t\u0026\u0026 phpize \t\t\u0026\u0026 ./configure CFLAGS=\"-O2 -g\" --enable-redis-igbinary \t\t\u0026\u0026 make -j$(nproc) \t\t\u0026\u0026 make install \t) \t\u0026\u0026 rm -r redis \t\u0026\u0026 docker-php-ext-enable redis         \u0026\u0026 apt-get autoclean -qy \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}