{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_BASE",
              "Value": "apache-maven-${MAVEN_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/default-jvm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk upgrade \u0026\u0026     apk add           nodejs           nodejs-npm           python           python-dev           musl-dev           libffi-dev           openssl-dev           py-pip           gcc           g++           openjdk8           git           vim           docker           curl           bash           bash-completion \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install libsass \u0026\u0026     npm install -g npm \u0026\u0026     npm install -g grunt-cli bower yo generator-reveal \u0026\u0026     wget http://www-eu.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/${MAVEN_BASE}-bin.tar.gz          -O /tmp/maven.tgz \u0026\u0026     tar zxvf /tmp/maven.tgz \u0026\u0026 mv ${MAVEN_BASE} /maven \u0026\u0026     ln -s /maven/bin/mvn /usr/bin/ \u0026\u0026     rm /usr/bin/vi \u0026\u0026 ln -s /usr/bin/vim /usr/bin/vi \u0026\u0026     rm /tmp/maven.tgz /var/cache/apk/* \u0026\u0026     cd / \u0026\u0026     git clone https://github.com/paradoxxxzero/butterfly \u0026\u0026     mkdir -p /etc/butterfly/themes \u0026\u0026     git clone https://github.com/paradoxxxzero/butterfly-themes /etc/butterfly/themes \u0026\u0026     cd butterfly \u0026\u0026     cp /etc/butterfly/themes/color-neon/style.sass butterfly/sass/main.sass \u0026\u0026     cat /butterfly/butterfly/sass/_variables.sass | sed -e 's/font-size: 1em/font-size: 1.8em/' \u003e /tmp/_v.sass \u0026\u0026     mv /tmp/_v.sass /butterfly/butterfly/sass/_variables.sass \u0026\u0026     sassc butterfly/sass/main.sass \u003e butterfly/static/main.css \u0026\u0026     python setup.py build \u0026\u0026     python setup.py install \u0026\u0026     cp /etc/terminfo/x/xterm-color /etc/terminfo/x/xterm-256color \u0026\u0026     mkdir /slides \u0026\u0026     adduser -D -h /slides -s /bin/ash -u 1000 yo \u0026\u0026     git clone https://github.com/paradoxxxzero/butterfly-demos /butterfly/demos \u0026\u0026     echo \"export JAVA_HOME=${JAVA_HOME}\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -e 's/\\/bin\\/ash/\\/bin\\/bash/' /etc/passwd \u003e /tmp/,x \u0026\u0026     mv /tmp/,x /etc/passwd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/prompt.sh",
            "/etc/profile.d/prompt.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/emacs.el",
            "/root/.emacs"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/start.sh",
            "/start.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/cacerts",
            "/usr/lib/jvm/default-jvm/jre/lib/security/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/shell_wrapper/reset_signals.c",
            "/tmp"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/shell_wrapper/ash_wrapper.sh",
            "/bin/ash_wrapper.sh"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/shell_wrapper/bash_wrapper.sh",
            "/bin/bash_wrapper.sh"
          ]
        },
        {
          "CmdLine": [
            "gcc /tmp/reset_signals.c -o /bin/reset_signals  \u0026\u0026 rm /bin/ash  \u0026\u0026 mv /bin/ash_wrapper.sh /bin/ash  \u0026\u0026 chmod 755 /bin/ash  \u0026\u0026 mv /bin/bash /bin/bash.orig  \u0026\u0026 mv /bin/bash_wrapper.sh /bin/bash  \u0026\u0026 chmod 755 /bin/bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/slides_init",
            "/slides_init"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/slides_init"
        },
        {
          "CmdLine": [
            "rm -rf node_modules  \u0026\u0026 npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/mime.types",
            "/etc/mime.types"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /usr/bin/mvn /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "35729",
            "57575",
            "9000"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/slides"
        },
        {
          "CmdLine": [
            "sh",
            "/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}