MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get -q -y update &&   apt-get upgrade -q -y &&   apt-get install -q -y openjdk-8-jdk     libev4
      libev-dev libpq-dev libldap2-dev libsasl2-dev libssl-dev     python-dev python-pip
      curl maven wget unzip
    Name: run
    PrependShell: true
  - Env:
    - Key: JYTHON_VERSION
      Value: 2.7.0
    Name: env
  - CmdLine:
    - curl -L "http://search.maven.org/remotecontent?filepath=org/python/jython-installer/${JYTHON_VERSION}/jython-installer-${JYTHON_VERSION}.jar"
      -o jython_installer-${JYTHON_VERSION}.jar &&     java -jar jython_installer-${JYTHON_VERSION}.jar
      -s -d /jython-${JYTHON_VERSION} &&     ln -s /jython-${JYTHON_VERSION}/bin/jython
      /usr/bin &&     rm jython_installer-${JYTHON_VERSION}.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /plugin
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "https://github.com/axtimwalde/mpicbg/archive/master.zip" -O /plugin/master.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip /plugin/master.zip -d /plugin/
    Name: run
    PrependShell: true
  - CmdLine:
    - mvn -f /plugin/mpicbg-master/pom.xml -Djar.finalName=mpicLatest
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /app
  - CmdLine:
    - pip install -r requirements.txt
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Env:
    - Key: NAME
      Value: World
    Name: env
  - CmdLine:
    - python
    - app.py
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
