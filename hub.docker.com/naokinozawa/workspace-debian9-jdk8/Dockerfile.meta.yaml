MetaArgs: null
Stages:
- BaseName: debian:9
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Key: USERNAME
    Name: arg
    Value: vscode
  - Key: USER_UID
    Name: arg
    Value: "1000"
  - Key: USER_GID
    Name: arg
    Value: $USER_UID
  - Key: PROXY
    Name: arg
    Value: ''''''
  - Key: no_proxy
    Name: arg
    Value: '''127.0.0.1,localhost,192.168.99.100,192.168.99.101,192.168.99.102,192.168.99.103,192.168.99.104,192.168.99.105,172.17.0.1'''
  - Chown: ""
    Name: add
    SourcesAndDest:
    - /etc/ssl/certs/
    - /etc/ssl/certs/
  - CmdLine:
    - set -x     && if [ -n "$PROXY" ]; then echo "\n        ca_directory = /etc/ssl/certs/
      \n        http_proxy = $PROXY \n        https_proxy = $PROXY \n    " >> /etc/wgetrc;
      fi    && apt-get update     && apt-get -y install --no-install-recommends apt-utils
      dialog 2>&1     && apt-get -y install openssh-server     && apt-get -y install
      net-tools zip unzip     && apt-get -y install git iproute2 procps     && apt-get
      install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
      lsb-release     && curl -fsSL https://download.docker.com/linux/$(lsb_release
      -is | tr '[:upper:]' '[:lower:]')/gpg | (OUT=$(apt-key add - 2>&1) || echo $OUT)     &&
      add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/$(lsb_release
      -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable"     && apt-get
      update     && apt-get install -y docker-ce-cli     && curl -sSL -o /usr/local/bin/kubectl
      https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl     &&
      chmod +x /usr/local/bin/kubectl     && echo '\n        if [ "$SYNC_LOCALHOST_KUBECONFIG"
      == "true" ]; then\n            mkdir -p $HOME/.kube\n            cp -r $HOME/.kube-localhost/*
      $HOME/.kube\n            sed -i -e "s/localhost/host.docker.internal/g" $HOME/.kube/config\n        \n            if
      [ -d "$HOME/.minikube-localhost" ]; then\n                mkdir -p $HOME/.minikube\n                cp
      -r $HOME/.minikube-localhost/ca.crt $HOME/.minikube\n                sed -i
      -r "s|(\s*certificate-authority:\s).*|\\1$HOME\/.minikube\/ca.crt|g" $HOME/.kube/config\n                cp
      -r $HOME/.minikube-localhost/client.crt $HOME/.minikube\n                sed
      -i -r "s|(\s*client-certificate:\s).*|\\1$HOME\/.minikube\/client.crt|g" $HOME/.kube/config\n                cp
      -r $HOME/.minikube-localhost/client.key $HOME/.minikube\n                sed
      -i -r "s|(\s*client-key:\s).*|\\1$HOME\/.minikube\/client.key|g" $HOME/.kube/config\n            fi\n        fi'         >>
      $HOME/.bashrc     && groupadd --gid $USER_GID $USERNAME     && useradd -s /bin/bash
      --uid $USER_UID --gid $USER_GID -m $USERNAME     && apt-get install -y sudo     &&
      echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME     && chmod
      0440 /etc/sudoers.d/$USERNAME     && apt-get install dirmngr gnupg     && apt-key
      adv --keyserver keyserver.ubuntu.com $([ -n "$PROXY" ] && echo "--keyserver-option
      http-proxy=$PROXY") --recv-keys A66C5D02     && echo 'deb https://rpardini.github.io/adoptopenjdk-deb-installer
      stable main' > /etc/apt/sources.list.d/rpardini-aoj.list     && apt-get update     &&
      apt-get install -y adoptopenjdk-8-installer maven     && curl -sL https://deb.nodesource.com/setup_11.x
      | bash -     && apt-get install -y nodejs     && npm install n -g     && sed
      -ri 's/^#PermitEmptyPasswords no/PermitEmptyPasswords yes/' /etc/ssh/sshd_config     &&
      sed -ri 's/^#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config     &&
      sed -ri 's/^UsePAM yes/UsePAM no/' /etc/ssh/sshd_config     && mkdir /var/run/sshd     &&
      passwd -d root     && apt-get autoremove -y     && apt-get clean -y     && rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: ""
    Name: env
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - /usr/sbin/sshd
    - -D
    Name: entrypoint
    PrependShell: false
  From:
    Image: debian:9
  Name: ""
  Platform: ""
  SourceCode: FROM debian:9
