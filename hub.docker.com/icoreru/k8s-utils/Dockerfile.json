{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ANSIBLE_VER",
              "Value": "\"2.7.13\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYVMOMI_VER",
              "Value": "\"6.7.3\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RKE_VER",
              "Value": "\"v0.2.8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBECTL_VER",
              "Value": "\"v1.13.11\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VER",
              "Value": "\"v2.14.3\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"===\u003e Installing software...\" \u0026\u0026     apk --update add sudo openssl ca-certificates curl wget git make openssh-client \u0026\u0026         echo \"===\u003e Adding Python runtime...\" \u0026\u0026     apk --update add python py-pip \u0026\u0026     apk --update add --virtual build-dependencies     python-dev libffi-dev openssl-dev build-base  \u0026\u0026     pip install --upgrade pip cffi \u0026\u0026         echo \"===\u003e Installing Ansible...\" \u0026\u0026     pip install \"ansible==${ANSIBLE_VER}\" \u0026\u0026         echo \"===\u003e Installing pyvmomi...\" \u0026\u0026     pip install \"pyvmomi==${PYVMOMI_VER}\" \u0026\u0026         echo \"===\u003e Installing rke...\" \u0026\u0026     curl -Lo /bin/rke https://github.com/rancher/rke/releases/download/${RKE_VER}/rke_linux-amd64 \u0026\u0026     chmod +x /bin/rke \u0026\u0026         echo \"===\u003e Installing kubectl...\" \u0026\u0026     curl -Lo /bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VER}/bin/linux/amd64/kubectl \u0026\u0026     chmod +x /bin/kubectl \u0026\u0026         echo \"===\u003e Installing helm...\" \u0026\u0026     curl -Lo /tmp/helm-${HELM_VER}-linux-amd64.tar.gz https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VER}-linux-amd64.tar.gz \u0026\u0026     tar -zxvf /tmp/helm-${HELM_VER}-linux-amd64.tar.gz -C /tmp \u0026\u0026     mv /tmp/linux-amd64/helm /bin/helm \u0026\u0026     chmod +x /bin/helm \u0026\u0026     helm init --client-only \u0026\u0026     helm plugin install https://github.com/chartmuseum/helm-push \u0026\u0026         echo \"===\u003e Cleaning...\" \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/deploy/ansible"
        },
        {
          "CmdLine": [
            "make"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}