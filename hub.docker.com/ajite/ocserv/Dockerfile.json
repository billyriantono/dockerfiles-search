{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Maintainer": "Tommy Lau \u003ctommy@gen-new.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "OC_VERSION",
              "Value": "0.11.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AUTOGEN_VERSION",
              "Value": "5.18.12"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ocadduser",
            "/usr/bin/ocadduser"
          ]
        },
        {
          "CmdLine": [
            "buildDeps=\"         autoconf         automake         abi-compliance-checker         file         guile-dev         curl         g++         gnutls-dev         gpgme         libev-dev         libnl3-dev         libseccomp-dev         linux-headers         linux-pam-dev         lz4-dev         make         readline-dev         tar         xz     \";     set -x     \u0026\u0026 apk add --update libtool gnutls gnutls-utils iptables libev libintl libnl3 libseccomp linux-pam lz4-libs openssl readline sed     \u0026\u0026 apk add --update --virtual .build-deps $buildDeps     \u0026\u0026 cd ~     \u0026\u0026 RADCLI_VERSION=`curl -s \"https://github.com/radcli/radcli/releases/latest\" | sed -n 's/^.*tag\\/\\(.*\\)\".*/\\1/p'`     \u0026\u0026 curl -SL \"https://github.com/radcli/radcli/archive/$RADCLI_VERSION.tar.gz\" -o radcli.tar.gz     \u0026\u0026 mkdir -p /usr/src/radcli     \u0026\u0026 tar -xf radcli.tar.gz -C /usr/src/radcli --strip-components=1     \u0026\u0026 rm radcli.tar.gz     \u0026\u0026 cd /usr/src/radcli     \u0026\u0026 chmod +x autogen.sh     \u0026\u0026 ./autogen.sh     \u0026\u0026 ./configure --sysconfdir=/etc --prefix=/usr     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd ~     \u0026\u0026 rm -fr /usr/src/radcli     \u0026\u0026 curl -SL \"http://ftp.gnu.org/gnu/autogen/rel$AUTOGEN_VERSION/autogen-$AUTOGEN_VERSION.tar.xz\" -o autogen.tar.xz     \u0026\u0026 mkdir -p /usr/src/autogen     \u0026\u0026 tar -xf autogen.tar.xz -C /usr/src/autogen --strip-components=1     \u0026\u0026 rm autogen.tar.xz     \u0026\u0026 cd /usr/src/autogen     \u0026\u0026 ./configure --prefix=/usr     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 cd ~     \u0026\u0026 rm -fr /usr/src/autogen     \u0026\u0026 curl -SL \"ftp://ftp.infradead.org/pub/ocserv/ocserv-$OC_VERSION.tar.xz\" -o ocserv.tar.xz     \u0026\u0026 curl -SL \"ftp://ftp.infradead.org/pub/ocserv/ocserv-$OC_VERSION.tar.xz.sig\" -o ocserv.tar.xz.sig     \u0026\u0026 gpg --keyserver pgp.mit.edu --recv-key 7F343FA7     \u0026\u0026 gpg --keyserver pgp.mit.edu --recv-key 96865171     \u0026\u0026 gpg --verify ocserv.tar.xz.sig     \u0026\u0026 mkdir -p /usr/src/ocserv     \u0026\u0026 tar -xf ocserv.tar.xz -C /usr/src/ocserv --strip-components=1     \u0026\u0026 rm ocserv.tar.xz*     \u0026\u0026 cd /usr/src/ocserv     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 mkdir -p /etc/ocserv     \u0026\u0026 cp /usr/src/ocserv/doc/sample.config /etc/ocserv/ocserv.conf     \u0026\u0026 cd /     \u0026\u0026 rm -fr /usr/src/ocserv     \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner /usr/local/sbin/ocserv             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | xargs -r apk info --installed             | sort -u         )\"     \u0026\u0026 apk add --virtual .run-deps $runDeps gnutls-utils iptables     \u0026\u0026 apk del .build-deps     \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "groupinfo.txt",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 sed -i 's/\\.\\/sample\\.passwd/\\/etc\\/ocserv\\/ocpasswd/' /etc/ocserv/ocserv.conf     \u0026\u0026 sed -i 's/\\(max-same-clients = \\)2/\\110/' /etc/ocserv/ocserv.conf     \u0026\u0026 sed -i 's/\\.\\.\\/tests/\\/etc\\/ocserv/' /etc/ocserv/ocserv.conf     \u0026\u0026 sed -i 's/#\\(compression.*\\)/\\1/' /etc/ocserv/ocserv.conf     \u0026\u0026 sed -i '/^ipv4-network = /{s/192.168.1.0/192.168.99.0/}' /etc/ocserv/ocserv.conf     \u0026\u0026 sed -i 's/192.168.1.2/8.8.8.8/' /etc/ocserv/ocserv.conf     \u0026\u0026 sed -i 's/^route/#route/' /etc/ocserv/ocserv.conf     \u0026\u0026 sed -i 's/^no-route/#no-route/' /etc/ocserv/ocserv.conf     \u0026\u0026 mkdir -p /etc/ocserv/config-per-group     \u0026\u0026 cat /tmp/groupinfo.txt \u003e\u003e /etc/ocserv/ocserv.conf     \u0026\u0026 rm -fr /tmp/cn-no-route.txt     \u0026\u0026 rm -fr /tmp/groupinfo.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/etc/ocserv"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "All",
            "/etc/ocserv/config-per-group/All"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cn-no-route.txt",
            "/etc/ocserv/config-per-group/Route"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/ocserv",
            "/etc/radiusclient"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "ocserv",
            "-c",
            "/etc/ocserv/ocserv.conf",
            "-f"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}