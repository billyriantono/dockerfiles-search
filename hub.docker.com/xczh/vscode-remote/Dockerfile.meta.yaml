MetaArgs:
- DefaultValue: ubuntu:latest
  Key: BASE_IMAGE
  ProvidedValue: null
  Value: ubuntu:latest
Stages:
- BaseName: ${BASE_IMAGE}
  Commands:
  - Labels:
    - Key: maintainer.name
      Value: '"xczh"'
    - Key: maintainer.email
      Value: '"xczh.me@foxmail.com"'
    - Key: description
      Value: '"VSCode-Remote Develop Envionment"'
    Name: label
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update &&     DEBIAN_FRONTEND=noninteractive
      apt-get install -y --no-install-recommends apt-utils &&     LANG=C.UTF-8 DEBIAN_FRONTEND=noninteractive
      apt-get install -y --no-install-recommends         apt-transport-https         ca-certificates         curl         file         git         gnupg         htop         inetutils-ping         locales         man-db         nano         net-tools         openssh-server         openssl         sudo         tzdata         unzip         vim         wget         xauth         zip         &&     echo
      "Asia/Shanghai" > /etc/timezone &&     cp /usr/share/zoneinfo/Asia/Shanghai
      /etc/localtime.bak &&     locale-gen en_US.UTF-8 zh_CN.UTF-8 &&     update-locale
      LANG=en_US.UTF-8 &&     sed -i 's/http:\/\/archive.ubuntu.com/https:\/\/mirrors.tuna.tsinghua.edu.cn/g'
      /etc/apt/sources.list &&     sed -i 's/http:\/\/security.ubuntu.com/https:\/\/mirrors.tuna.tsinghua.edu.cn/g'
      /etc/apt/sources.list &&     mkdir /run/sshd &&     curl -sSL -o /sbin/tini
      https://github.com/krallin/tini/releases/download/v0.18.0/tini &&     chmod
      a+x /sbin/tini &&     DEBIAN_FRONTEND=noninteractive apt-get remove --purge
      -y tzdata &&     apt-get clean -y &&     apt-get autoremove -y &&     rm -rf
      /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.cache &&     rm -vf /etc/ssh/ssh_host_*
      &&     mv /etc/localtime.bak /etc/localtime &&     adduser --gecos '' --disabled-password
      coder &&     echo "coder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/nopasswd
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root
    - /
  - Name: volume
    Volumes:
    - /home/coder
  - Name: workdir
    Path: /home/coder
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - /sbin/tini
    - --
    - /usr/sbin/entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/sbin/sshd
    - -D
    Name: cmd
    PrependShell: false
  From:
    Image: ${BASE_IMAGE}
  Name: ""
  Platform: ""
  SourceCode: FROM ${BASE_IMAGE}
