{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:9.0-cudnn7-devel",
      "SourceCode": "FROM nvidia/cuda:9.0-cudnn7-devel",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:9.0-cudnn7-devel"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer.name",
              "Value": "\"xczh\""
            },
            {
              "Key": "maintainer.email",
              "Value": "\"xczh.me@foxmail.com\""
            },
            {
              "Key": "description",
              "Value": "\"Cloud9 WebIDE\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"C.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build/",
            "/tmp/build/"
          ]
        },
        {
          "CmdLine": [
            "APT_INSTALL=\"apt-get install -y --no-install-recommends\" \u0026\u0026     PIP2_INSTALL=\"pip2 --no-cache-dir install --upgrade\" \u0026\u0026     PIP3_INSTALL=\"pip3 --no-cache-dir install --upgrade\" \u0026\u0026     GIT_CLONE=\"git clone --single-branch --depth 1\" \u0026\u0026     rm -rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list \u0026\u0026     apt-get update \u0026\u0026     echo 'PATH=$PATH:/cloud9/bin:/usr/local/ide-bin' \u003e\u003e /root/.bashrc \u0026\u0026     echo \"alias open='c9 open'\" \u003e\u003e /root/.bashrc \u0026\u0026     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         apt-transport-https         apt-utils         ca-certificates         curl         file         git         gnupg         htop         inetutils-ping         nano         net-tools         openssl         tzdata         unzip         vim         wget         xauth         zip         \u0026\u0026     echo \"Asia/Shanghai\" \u003e /etc/timezone \u0026\u0026     cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \u0026\u0026     mv -f /tmp/build/ide-run /usr/sbin/ \u0026\u0026     mv -f /tmp/build/ide-bin/ /usr/local/ \u0026\u0026     chmod -R a+x /usr/sbin/ide-run /usr/local/ide-bin/* \u0026\u0026     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         build-essential         cmake         g++         gcc         gdb         make         \u0026\u0026     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python         python-dev         python3         python3-dev         \u0026\u0026     curl -L  https://bootstrap.pypa.io/get-pip.py | python2 \u0026\u0026     curl -L  https://bootstrap.pypa.io/get-pip.py | python3 \u0026\u0026     $PIP2_INSTALL         setuptools         virtualenv         \u0026\u0026     $PIP3_INSTALL         setuptools         virtualenv         \u0026\u0026     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         php-bz2         php-cli         php-curl         php-gd         php-json         php-mbstring         php-mysql         php-net-smtp         php-net-socket         php-soap         php-sqlite3         php-xdebug         php-xml         php-zip         \u0026\u0026     curl -sS https://getcomposer.org/installer | php \u0026\u0026     mv composer.phar /usr/local/bin/composer \u0026\u0026     GOLANG_VER=`git ls-remote -t https://github.com/golang/go | awk -F/ '$3 ~ /^go1(\\.[0-9]+)+$/ {print $3}' | sort -Vr | head -n 1` \u0026\u0026     curl -o /tmp/${GOLANG_VER}.linux-amd64.tar.gz         https://dl.google.com/go/${GOLANG_VER}.linux-amd64.tar.gz \u0026\u0026     tar -zxf /tmp/${GOLANG_VER}.linux-amd64.tar.gz -C /usr/local/ \u0026\u0026     ln -s /usr/local/go/bin/go /usr/local/bin/go \u0026\u0026     ln -s /usr/local/go/bin/gofmt /usr/local/bin/gofmt \u0026\u0026     ln -s /usr/local/go/bin/godoc /usr/local/bin/godoc \u0026\u0026     rm -f /tmp/${GOLANG_VER}.linux-amd64.tar.gz \u0026\u0026     /usr/local/bin/go version \u0026\u0026     curl -sL https://deb.nodesource.com/setup_10.x | bash - \u0026\u0026     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         nodejs         \u0026\u0026     ln -s /usr/bin/nodejs /usr/local/bin/node \u0026\u0026     npm config set registry https://registry.npm.taobao.org \u0026\u0026     npm install -g http-server \u0026\u0026     $GIT_CLONE https://github.com/c9/core.git /cloud9 \u0026\u0026     /cloud9/scripts/install-sdk.sh \u0026\u0026     virtualenv --python=python2 /root/.c9/python2 \u0026\u0026     . /root/.c9/python2/bin/activate \u0026\u0026     mkdir /tmp/codeintel \u0026\u0026     pip download -d /tmp/codeintel codeintel==0.9.3 \u0026\u0026     cd /tmp/codeintel \u0026\u0026     tar xf CodeIntel-0.9.3.tar.gz \u0026\u0026     mv CodeIntel-0.9.3/SilverCity CodeIntel-0.9.3/silvercity \u0026\u0026     tar -zcf CodeIntel-0.9.3.tar.gz CodeIntel-0.9.3 \u0026\u0026     pip install -U --no-index --find-links=/tmp/codeintel codeintel \u0026\u0026     deactivate \u0026\u0026     cd /root \u0026\u0026     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         openssh-server         \u0026\u0026     mkdir /var/run/sshd \u0026\u0026     sed -i 's/.*PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config \u0026\u0026     sed -i 's/.*X11Forwarding.*/X11Forwarding yes/' /etc/ssh/sshd_config \u0026\u0026     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         supervisor         \u0026\u0026     sed -i 's/^\\(\\[supervisord\\]\\)$/\\1\\nnodaemon=true/'         /etc/supervisor/supervisord.conf \u0026\u0026     mkdir -p /root/.c9/ /etc/supervisor/ \u0026\u0026     mv -f /tmp/build/config/user.settings /root/.c9/user.settings \u0026\u0026     mv -f /tmp/build/config/supervisord.conf /etc/supervisor/supervisord.conf \u0026\u0026     sed -i 's/http:\\/\\/archive.ubuntu.com/https:\\/\\/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list \u0026\u0026     sed -i 's/http:\\/\\/security.ubuntu.com/https:\\/\\/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list \u0026\u0026     apt-get clean -y \u0026\u0026     apt-get autoremove -y \u0026\u0026     npm cache clean --force \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.cache /root/.c9/tmux-* /root/.c9/libevent-* /root/.c9/ncurses-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/workspace"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "Env": [
            {
              "Key": "C9_AUTH",
              "Value": "root:webide"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "EXTERNAL_PORT",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}