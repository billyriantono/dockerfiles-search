MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Maintainer: Cedric Roijakkers <cedric@roijakkers.be>
    Name: maintainer
  - Env:
    - Key: NGHTTP2_VERSION
      Value: 1.39.2-r2
    Name: env
  - Env:
    - Key: OPENSSL_VERSION
      Value: 1.1.1d-r2
    Name: env
  - Env:
    - Key: BROTLI_VERSION
      Value: 1.0.7-r2
    Name: env
  - CmdLine:
    - "set -x \t&& addgroup -g 82 -S www-data \t&& adduser -u 82 -D -S -G www-data
      www-data"
    Name: run
    PrependShell: true
  - Env:
    - Key: HTTPD_PREFIX
      Value: /usr/local/apache2
    Name: env
  - Env:
    - Key: PATH
      Value: $HTTPD_PREFIX/bin:$PATH
    Name: env
  - CmdLine:
    - "mkdir -p \"$HTTPD_PREFIX\" \t&& chown www-data:www-data \"$HTTPD_PREFIX\""
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HTTPD_PREFIX
  - Env:
    - Key: HTTPD_VERSION
      Value: 2.4.41
    Name: env
  - Env:
    - Key: HTTPD_SHA256
      Value: 133d48298fe5315ae9366a0ec66282fa4040efa5d566174481077ade7d18ea40
    Name: env
  - Env:
    - Key: HTTPD_PATCHES
      Value: '""'
    Name: env
  - CmdLine:
    - "set -eux; \t\trunDeps=' \t\tapr-dev \t\tapr-util-dev \t\tapr-util-ldap \t\tperl
      \t'; \techo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories
      && \tapk add --no-cache --virtual .build-deps \t\t$runDeps \t\tca-certificates
      \t\tcoreutils \t\tdpkg-dev dpkg \t\tgcc \t\tgnupg \t\tlibc-dev \t\tcurl-dev
      \t\tjansson-dev \t\tlibressl \t\topenssl=$OPENSSL_VERSION \t\topenssl-dev=$OPENSSL_VERSION
      \t\tlibxml2-dev \t\tlua-dev \t\tmake \t\tnghttp2-dev=$NGHTTP2_VERSION \t\tbrotli-dev=$BROTLI_VERSION
      \t\tpcre-dev \t\ttar \t\tzlib-dev \t; \t\tddist() { \t\tlocal f=\"$1\"; shift;
      \t\tlocal distFile=\"$1\"; shift; \t\tlocal success=; \t\tlocal distUrl=; \t\tfor
      distUrl in \t\t\t'https://www.apache.org/dyn/closer.cgi?action=download&filename='
      \t\t\thttps://www-us.apache.org/dist/ \t\t\thttps://www.apache.org/dist/ \t\t\thttps://archive.apache.org/dist/
      \t\t; do \t\t\tif wget -O \"$f\" \"$distUrl$distFile\" && [ -s \"$f\" ]; then
      \t\t\t\tsuccess=1; \t\t\t\tbreak; \t\t\tfi; \t\tdone; \t\t[ -n \"$success\"
      ]; \t}; \t\tddist 'httpd.tar.bz2' \"httpd/httpd-$HTTPD_VERSION.tar.bz2\"; \techo
      \"$HTTPD_SHA256 *httpd.tar.bz2\" | sha256sum -c -; \t\tddist 'httpd.tar.bz2.asc'
      \"httpd/httpd-$HTTPD_VERSION.tar.bz2.asc\"; \texport GNUPGHOME=\"$(mktemp -d)\";
      \tfor key in \t\tA93D62ECC3C8EA12DB220EC934EA76E6791485A8 \t\tB9E8213AEFB861AF35A41F2C995E35221AD84DFF
      \t; do \t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";
      \tdone; \tgpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2; \tcommand -v
      gpgconf && gpgconf --kill all || :; \trm -rf \"$GNUPGHOME\" httpd.tar.bz2.asc;
      \t\tmkdir -p src; \ttar -xf httpd.tar.bz2 -C src --strip-components=1; \trm
      httpd.tar.bz2; \tcd src; \t\tpatches() { \t\twhile [ \"$#\" -gt 0 ]; do \t\t\tlocal
      patchFile=\"$1\"; shift; \t\t\tlocal patchSha256=\"$1\"; shift; \t\t\tddist
      \"$patchFile\" \"httpd/patches/apply_to_$HTTPD_VERSION/$patchFile\"; \t\t\techo
      \"$patchSha256 *$patchFile\" | sha256sum -c -; \t\t\tpatch -p0 < \"$patchFile\";
      \t\t\trm -f \"$patchFile\"; \t\tdone; \t}; \tpatches $HTTPD_PATCHES; \t\tgnuArch=\"$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)\"; \tapk del libressl && \t./configure \t\t--build=\"$gnuArch\"
      \t\t--prefix=\"$HTTPD_PREFIX\" \t\t--enable-mods-shared=reallyall \t\t--enable-mpms-shared=all
      \t; \tmake -j \"$(nproc)\"; \tmake install; \t\tcd ..; \trm -r src man manual;
      \t\tsed -ri \t\t-e 's!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g' \t\t-e
      's!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g' \t\t-e 's!^(\\s*TransferLog)\\s+\\S+!\\1
      /proc/self/fd/1!g' \t\t\"$HTTPD_PREFIX/conf/httpd.conf\" \t\t\"$HTTPD_PREFIX/conf/extra/httpd-ssl.conf\"
      \t; \t\trunDeps=\"$runDeps $( \t\tscanelf --needed --nobanner --format '%n#p'
      --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[
      -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk
      add --virtual .httpd-rundeps $runDeps; \tapk del .build-deps; \t\thttpd -v"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - httpd-foreground
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/httpd-foreground
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - httpd-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
