{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "mbentley/suse12-build:latest",
      "SourceCode": "FROM mbentley/suse12-build:latest",
      "Platform": "",
      "From": {
        "Image": "mbentley/suse12-build:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "zypper ar http://download.opensuse.org/repositories/devel:/languages:/erlang/SLE_12/devel:languages:erlang.repo \u0026\u0026   zypper --no-gpg-checks refresh \u0026\u0026   zypper install -y erlang gcc glibc make \u0026\u0026   mkdir -p /work \u0026\u0026   cd /work \u0026\u0026   git clone https://github.com/elixir-lang/elixir.git \u0026\u0026   cd elixir \u0026\u0026   git checkout v1.4.2 \u0026\u0026   make \u0026\u0026   make install \u0026\u0026   cd / \u0026\u0026   rm -fr /work \u0026\u0026   echo \"elixir installed at: $(which elixir)\" \u0026\u0026   mix local.hex --force \u0026\u0026   mix local.rebar --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/code"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/code"
        },
        {
          "CmdLine": [
            "iex"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}