{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y locales \u0026\u0026 locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "xterm-256color-italic.terminfo",
            "/root"
          ]
        },
        {
          "CmdLine": [
            "tic /root/xterm-256color-italic.terminfo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm-256color-italic"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y       build-essential       curl       git        iputils-ping       jq       libncurses5-dev       libevent-dev       net-tools       netcat-openbsd       rubygems       ruby-dev       silversearcher-ag       socat       software-properties-common       tmux       tzdata       wget       zsh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chsh -s /usr/bin/zsh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D \u0026\u0026      echo \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" \u003e /etc/apt/sources.list.d/docker.list \u0026\u0026      apt-get install -y apt-transport-https \u0026\u0026      apt-get update \u0026\u0026      apt-get install -y docker-engine"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/bin/docker-compose -L \"https://github.com/docker/compose/releases/download/1.13.0/docker-compose-$(uname -s)-$(uname -m)\" \u0026\u0026     chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:longsleep/golang-backports"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y golang-1.8-go"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src"
        },
        {
          "CmdLine": [
            "wget https://github.com/tmux/tmux/releases/download/2.5/tmux-2.5.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xzvf tmux-2.5.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src/tmux-2.5"
        },
        {
          "CmdLine": [
            "./configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /usr/local/src/tmux*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y       autoconf       automake       cmake       g++       libtool       libtool-bin       pkg-config       python3       python3-pip       unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --upgrade pip \u0026\u0026    pip3 install --user neovim jedi mistune psutil setproctitle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src"
        },
        {
          "CmdLine": [
            "git clone --depth 1 https://github.com/neovim/neovim.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src/neovim"
        },
        {
          "CmdLine": [
            "git fetch --depth 1 origin tag v0.2.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git reset --hard v0.2.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make CMAKE_BUILD_TYPE=Release"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /usr/local/src/neovim"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}