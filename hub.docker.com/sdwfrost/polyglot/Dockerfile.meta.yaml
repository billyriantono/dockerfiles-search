MetaArgs: null
Stages:
- BaseName: ubuntu:bionic-20180724.1
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Simon Frost <sdwfrost@gmail.com>"'
    Name: label
  - Name: user
    User: root
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get -yq dist-upgrade    && apt-get install -yq --no-install-recommends     wget     ant     bzip2     ca-certificates     cmake     curl     sudo     locales     fonts-liberation     build-essential     default-jdk     default-jre     fonts-dejavu     gcc     gfortran     ghostscript     ginac-tools     git     gnuplot     gnupg-agent     gzip     libboost-all-dev     libcln-dev     libgeos-dev     libginac-dev     libginac6     libgit2-dev     libgl1-mesa-glx     libgs-dev     libjsoncpp-dev     libqt5widgets5     libsm6     libxext-dev     libxrender1     libxt6     libzmqpp-dev     lmodern     netcat     pandoc     pkg-config     python3-dev     rsync     sbcl     software-properties-common     texlive-fonts-extra     texlive-fonts-recommended     texlive-generic-recommended     texlive-latex-base     texlive-latex-extra     texlive-xetex     tzdata     unzip     zlib1g-dev     &&
      apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install
      -yq --no-install-recommends     nodejs     nodejs-legacy     && apt-get clean
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /bin/tar /bin/gtar
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/bash
    - Key: NB_USER
      Value: jovyan
    - Key: NB_UID
      Value: "1000"
    - Key: NB_GID
      Value: "100"
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - fix-permissions
    - /usr/local/bin/fix-permissions
  - CmdLine:
    - chmod +x /usr/local/bin/fix-permissions
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd wheel -g 11 &&     echo "auth required pam_wheel.so use_uid" >> /etc/pam.d/su
      &&     useradd -m -s /bin/bash -N -u $NB_UID $NB_USER &&     chmod g+w /etc/passwd
      &&     fix-permissions $HOME
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - cd /tmp &&     curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py &&     python3
      get-pip.py &&     rm get-pip.py &&     rm -rf /home/$NB_USER/.cache/pip &&     fix-permissions
      /home/$NB_USER
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.18.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /usr/local/bin/tini
  - CmdLine:
    - chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - CmdLine:
    - tini
    - -g
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - pip install     notebook     jupyterhub     jupyterlab &&     jupyter labextension
      install @jupyterlab/hub-extension &&     npm cache clean --force &&     jupyter
      notebook --generate-config &&     rm -rf /home/$NB_USER/.cache/pip &&     rm
      -rf /home/$NB_USER/.cache/yarn &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install     gr     ipywidgets     pandas     numexpr     matplotlib     scipy     sympy     seaborn     cython     papermill     nteract_on_jupyter     numba  &&     jupyter
      nbextension enable --py widgetsnbextension --sys-prefix &&     jupyter labextension
      install @jupyter-widgets/jupyterlab-manager &&     jupyter labextension install
      jupyterlab_bokeh &&     npm cache clean --force &&     rm -rf /home/$NB_USER/.cache/yarn
      &&     rm -rf /home/$NB_USER/.node-gyp &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     git clone https://github.com/PAIR-code/facets.git &&     cd facets
      &&     jupyter nbextension install facets-dist/ --sys-prefix &&     cd &&     rm
      -rf /tmp/facets &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - Env:
    - Key: XDG_CACHE_HOME
      Value: /home/$NB_USER/.cache/
    Name: env
  - Env:
    - Key: JULIA_PKGDIR
      Value: /opt/julia
    Name: env
  - Env:
    - Key: JULIA_VERSION
      Value: 0.6.4
    Name: env
  - CmdLine:
    - mkdir /opt/julia-${JULIA_VERSION} &&     cd /tmp &&     wget -q https://julialang-s3.julialang.org/bin/linux/x64/`echo
      ${JULIA_VERSION} | cut -d. -f 1,2`/julia-${JULIA_VERSION}-linux-x86_64.tar.gz
      &&     tar xzf julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION}
      --strip-components=1 &&     rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/julia &&     mkdir $JULIA_PKGDIR &&     chown $NB_USER $JULIA_PKGDIR
      &&     fix-permissions $JULIA_PKGDIR
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:marutter/rrutter &&     apt-get update &&     apt-get
      install -yq     libssl-dev     libcurl4-gnutls-dev     r-base r-base-dev &&     apt-get
      clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages(c(    'adaptivetau',     'boot',     'cOde',     'deSolve',    'devtools',     'ddeSolve',    'GillespieSSA',     'git2r',     'ggplot2',     'FME',     'KernSmooth',     'magrittr',     'odeintr',     'PBSddesolve',     'plotly',     'pomp',     'pracma',     'ReacTran',     'rmarkdown',     'rodeo',     'Rcpp',     'rpgm',     'simecol',     'spatial'),
      dependencies=TRUE, clean=TRUE, repos='https://cran.microsoft.com/snapshot/2018-08-14')"
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "devtools::install_github('IRkernel/IRkernel')" &&     R -e "IRkernel::installspec()"
      &&     mv $HOME/.local/share/jupyter/kernels/ir* /usr/local/share/jupyter/kernels/
      &&     chmod -R go+rx /usr/local/share/jupyter &&     rm -rf $HOME/.local &&     fix-permissions
      /usr/local/share/jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install rpy2
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "devtools::install_github('mrc-ide/odin',upgrade=FALSE)"
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e 'Pkg.init()' &&     julia -e 'Pkg.update()' &&     julia -e 'Pkg.add("Gadfly")'
      &&     julia -e 'Pkg.add("GR")' &&     julia -e 'Pkg.add("Plots")' &&     julia
      -e 'Pkg.add("IJulia")' &&     julia -e 'Pkg.add("DifferentialEquations")' &&     julia
      -e 'Pkg.add("RandomNumbers")' &&     julia -e 'Pkg.add("Gillespie")' &&     julia
      -e 'Pkg.add("PyCall")' &&     julia -e 'Pkg.add("PyPlot")' &&     julia -e 'Pkg.add("PlotlyJS")'
      &&     julia -e 'using Gadfly' &&     julia -e 'using GR' &&     julia -e 'using
      Plots' &&     julia -e 'using IJulia' &&     julia -e 'using DifferentialEquations'
      &&     julia -e 'using RandomNumbers' &&     julia -e 'using Gillespie' &&     julia
      -e 'using PyCall' &&     julia -e 'using PyPlot' &&     mv $HOME/.local/share/jupyter/kernels/julia*
      /usr/local/share/jupyter/kernels/ &&     chmod -R go+rx /usr/local/share/jupyter
      &&     rm -rf $HOME/.local &&     fix-permissions $JULIA_PKGDIR /usr/local/share/jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install gnuplot_kernel &&     python3 -m gnuplot_kernel install
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install cffi_magic
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     wget https://gr-framework.org/downloads/gr-latest-Ubuntu-x86_64.tar.gz
      &&     tar xvf gr-latest-Ubuntu-x86_64.tar.gz -C /usr/local --strip-components=1
      &&     rm gr-latest-Ubuntu-x86_64.tar.gz &&     fix-permissions /usr/local
    Name: run
    PrependShell: true
  - Env:
    - Key: NIMBLE_DIR
      Value: /opt/nimble
    Name: env
  - CmdLine:
    - curl https://nim-lang.org/choosenim/init.sh -sSf > choosenim.sh &&     chmod
      +x ./choosenim.sh &&     ./choosenim.sh -y &&     mkdir /opt/nimble &&     mv
      /home/jovyan/.nimble/bin /opt/nimble
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $NIMBLE_DIR/bin:$PATH
    Name: env
  - CmdLine:
    - fix-permissions $NIMBLE_DIR
    Name: run
    PrependShell: true
  - Env:
    - Key: SCILAB_VERSION
      Value: 6.0.1
    Name: env
  - Env:
    - Key: SCILAB_EXECUTABLE
      Value: /usr/local/bin/scilab-adv-cli
    Name: env
  - CmdLine:
    - mkdir /opt/scilab-${SCILAB_VERSION} &&     cd /tmp &&     wget http://www.scilab.org/download/6.0.1/scilab-${SCILAB_VERSION}.bin.linux-x86_64.tar.gz
      &&     tar xvf scilab-${SCILAB_VERSION}.bin.linux-x86_64.tar.gz -C /opt/scilab-${SCILAB_VERSION}
      --strip-components=1 &&     rm /tmp/scilab-${SCILAB_VERSION}.bin.linux-x86_64.tar.gz
      &&     ln -fs /opt/scilab-${SCILAB_VERSION}/bin/scilab-adv-cli /usr/local/bin/scilab-adv-cli
      &&     ln -fs /opt/scilab-${SCILAB_VERSION}/bin/scilab-cli /usr/local/bin/scilab-cli
      &&     pip install scilab_kernel
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -yq dist-upgrade &&     apt-get install -yq --no-install-recommends     octave
      &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install octave_kernel
    Name: run
    PrependShell: true
  - Env:
    - Key: XPP_DIR
      Value: /opt/xppaut
    Name: env
  - CmdLine:
    - mkdir /opt/xppaut &&     cd /tmp &&     wget http://www.math.pitt.edu/~bard/bardware/xppaut_latest.tar.gz
      &&     tar xvf xppaut_latest.tar.gz -C /opt/xppaut &&     cd /opt/xppaut &&     make
      &&     ln -fs /opt/xppaut/xppaut /usr/local/bin/xppaut &&     rm /tmp/xppaut_latest.tar.gz
      &&     fix-permissions $XPP_DIR /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     mkdir /tmp/mxml &&     wget https://github.com/michaelrsweet/mxml/releases/download/v2.11/mxml-2.11.tar.gz
      &&     tar xvf mxml-2.11.tar.gz -C /tmp/mxml &&     cd /tmp/mxml &&     ./configure
      &&     make &&     make install &&     cd /tmp &&     rm mxml-2.11.tar.gz &&     rm
      -rf /tmp/mxml
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/lib:$LD_LIBRARY_PATH
    Name: env
  - CmdLine:
    - mkdir /opt/vfgen &&     cd /tmp &&     git clone https://github.com/WarrenWeckesser/vfgen
      &&     cd vfgen/src &&     make -f Makefile.vfgen &&     cp ./vfgen /opt/vfgen
      &&     cd /tmp &&     rm -rf vfgen &&     ln -fs /opt/vfgen/vfgen /usr/local/bin/vfgen
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     git clone https://github.com/andrejv/maxima &&     cd maxima
      &&     sh bootstrap &&     ./configure --enable-sbcl &&     make &&     make
      install &&     cd /tmp &&     rm -rf maxima
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/quicklisp &&     cd /tmp &&     curl -O https://beta.quicklisp.org/quicklisp.lisp
      &&     sbcl --load quicklisp.lisp --non-interactive --eval '(quicklisp-quickstart:install
      :path "/opt/quicklisp/")' &&     yes '' | sbcl --load /opt/quicklisp/setup.lisp
      --non-interactive --eval '(ql:add-to-init-file)' &&     rm quicklisp.lisp &&     fix-permissions
      /opt/quicklisp
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt &&     git clone https://github.com/robert-dodier/maxima-jupyter &&     cd
      maxima-jupyter &&     python3 ./install-maxima-jupyter.py --root=/opt/maxima-jupyter
      &&     fix-permissions /opt/maxima-jupyter /usr/local/share/jupyter/kernels
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt &&     wget http://ulua.io/download/ulua~latest.zip &&     unzip ulua~latest.zip
      &&     rm ulua~latest.zip &&     fix-permissions /opt/ulua
    Name: run
    PrependShell: true
  - Env:
    - Key: BIT
      Value: "64"
    - Key: PATH
      Value: /opt/ulua:$PATH
    Name: env
  - CmdLine:
    - cd /opt/ulua/bin &&     yes 'y' | ./upkg add sci &&     yes 'y' | ./upkg add
      sci-lang &&     fix-permissions /opt/ulua
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ${HOME}
  - CmdLine:
    - chown -R ${NB_UID} ${HOME}
    Name: run
    PrependShell: true
  - Name: user
    User: ${NB_USER}
  - CmdLine:
    - echo 'prefix=${HOME}/.npm' >> ${HOME}/.npmrc
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${HOME}/.npm/bin:$PATH
    Name: env
  - CmdLine:
    - cd ${HOME} &&     npm install -g ijavascript &&     ijsinstall
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:bionic-20180724.1
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic-20180724.1
