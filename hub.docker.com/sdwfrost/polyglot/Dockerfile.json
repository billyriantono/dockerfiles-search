{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:bionic-20180724.1",
      "SourceCode": "FROM ubuntu:bionic-20180724.1",
      "Platform": "",
      "From": {
        "Image": "ubuntu:bionic-20180724.1"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Simon Frost \u003csdwfrost@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -yq dist-upgrade    \u0026\u0026 apt-get install -yq --no-install-recommends     wget     ant     bzip2     ca-certificates     cmake     curl     sudo     locales     fonts-liberation     build-essential     default-jdk     default-jre     fonts-dejavu     gcc     gfortran     ghostscript     ginac-tools     git     gnuplot     gnupg-agent     gzip     libboost-all-dev     libcln-dev     libgeos-dev     libginac-dev     libginac6     libgit2-dev     libgl1-mesa-glx     libgs-dev     libjsoncpp-dev     libqt5widgets5     libsm6     libxext-dev     libxrender1     libxt6     libzmqpp-dev     lmodern     netcat     pandoc     pkg-config     python3-dev     rsync     sbcl     software-properties-common     texlive-fonts-extra     texlive-fonts-recommended     texlive-generic-recommended     texlive-latex-base     texlive-latex-extra     texlive-xetex     tzdata     unzip     zlib1g-dev     \u0026\u0026 apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash - \u0026\u0026     apt-get install -yq --no-install-recommends     nodejs     nodejs-legacy     \u0026\u0026 apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /bin/tar /bin/gtar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026     locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            },
            {
              "Key": "NB_USER",
              "Value": "jovyan"
            },
            {
              "Key": "NB_UID",
              "Value": "1000"
            },
            {
              "Key": "NB_GID",
              "Value": "100"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$NB_USER"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fix-permissions",
            "/usr/local/bin/fix-permissions"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/fix-permissions"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd wheel -g 11 \u0026\u0026     echo \"auth required pam_wheel.so use_uid\" \u003e\u003e /etc/pam.d/su \u0026\u0026     useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \u0026\u0026     chmod g+w /etc/passwd \u0026\u0026     fix-permissions $HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \u0026\u0026     python3 get-pip.py \u0026\u0026     rm get-pip.py \u0026\u0026     rm -rf /home/$NB_USER/.cache/pip \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.18.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/usr/local/bin/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "tini",
            "-g",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "pip install     notebook     jupyterhub     jupyterlab \u0026\u0026     jupyter labextension install @jupyterlab/hub-extension \u0026\u0026     npm cache clean --force \u0026\u0026     jupyter notebook --generate-config \u0026\u0026     rm -rf /home/$NB_USER/.cache/pip \u0026\u0026     rm -rf /home/$NB_USER/.cache/yarn \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install     gr     ipywidgets     pandas     numexpr     matplotlib     scipy     sympy     seaborn     cython     papermill     nteract_on_jupyter     numba  \u0026\u0026     jupyter nbextension enable --py widgetsnbextension --sys-prefix \u0026\u0026     jupyter labextension install @jupyter-widgets/jupyterlab-manager \u0026\u0026     jupyter labextension install jupyterlab_bokeh \u0026\u0026     npm cache clean --force \u0026\u0026     rm -rf /home/$NB_USER/.cache/yarn \u0026\u0026     rm -rf /home/$NB_USER/.node-gyp \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     git clone https://github.com/PAIR-code/facets.git \u0026\u0026     cd facets \u0026\u0026     jupyter nbextension install facets-dist/ --sys-prefix \u0026\u0026     cd \u0026\u0026     rm -rf /tmp/facets \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XDG_CACHE_HOME",
              "Value": "/home/$NB_USER/.cache/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JULIA_PKGDIR",
              "Value": "/opt/julia"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JULIA_VERSION",
              "Value": "0.6.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /opt/julia-${JULIA_VERSION} \u0026\u0026     cd /tmp \u0026\u0026     wget -q https://julialang-s3.julialang.org/bin/linux/x64/`echo ${JULIA_VERSION} | cut -d. -f 1,2`/julia-${JULIA_VERSION}-linux-x86_64.tar.gz \u0026\u0026     tar xzf julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION} --strip-components=1 \u0026\u0026     rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/julia \u0026\u0026     mkdir $JULIA_PKGDIR \u0026\u0026     chown $NB_USER $JULIA_PKGDIR \u0026\u0026     fix-permissions $JULIA_PKGDIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:marutter/rrutter \u0026\u0026     apt-get update \u0026\u0026     apt-get install -yq     libssl-dev     libcurl4-gnutls-dev     r-base r-base-dev \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages(c(    'adaptivetau',     'boot',     'cOde',     'deSolve',    'devtools',     'ddeSolve',    'GillespieSSA',     'git2r',     'ggplot2',     'FME',     'KernSmooth',     'magrittr',     'odeintr',     'PBSddesolve',     'plotly',     'pomp',     'pracma',     'ReacTran',     'rmarkdown',     'rodeo',     'Rcpp',     'rpgm',     'simecol',     'spatial'), dependencies=TRUE, clean=TRUE, repos='https://cran.microsoft.com/snapshot/2018-08-14')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"devtools::install_github('IRkernel/IRkernel')\" \u0026\u0026     R -e \"IRkernel::installspec()\" \u0026\u0026     mv $HOME/.local/share/jupyter/kernels/ir* /usr/local/share/jupyter/kernels/ \u0026\u0026     chmod -R go+rx /usr/local/share/jupyter \u0026\u0026     rm -rf $HOME/.local \u0026\u0026     fix-permissions /usr/local/share/jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install rpy2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"devtools::install_github('mrc-ide/odin',upgrade=FALSE)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "julia -e 'Pkg.init()' \u0026\u0026     julia -e 'Pkg.update()' \u0026\u0026     julia -e 'Pkg.add(\"Gadfly\")' \u0026\u0026     julia -e 'Pkg.add(\"GR\")' \u0026\u0026     julia -e 'Pkg.add(\"Plots\")' \u0026\u0026     julia -e 'Pkg.add(\"IJulia\")' \u0026\u0026     julia -e 'Pkg.add(\"DifferentialEquations\")' \u0026\u0026     julia -e 'Pkg.add(\"RandomNumbers\")' \u0026\u0026     julia -e 'Pkg.add(\"Gillespie\")' \u0026\u0026     julia -e 'Pkg.add(\"PyCall\")' \u0026\u0026     julia -e 'Pkg.add(\"PyPlot\")' \u0026\u0026     julia -e 'Pkg.add(\"PlotlyJS\")' \u0026\u0026     julia -e 'using Gadfly' \u0026\u0026     julia -e 'using GR' \u0026\u0026     julia -e 'using Plots' \u0026\u0026     julia -e 'using IJulia' \u0026\u0026     julia -e 'using DifferentialEquations' \u0026\u0026     julia -e 'using RandomNumbers' \u0026\u0026     julia -e 'using Gillespie' \u0026\u0026     julia -e 'using PyCall' \u0026\u0026     julia -e 'using PyPlot' \u0026\u0026     mv $HOME/.local/share/jupyter/kernels/julia* /usr/local/share/jupyter/kernels/ \u0026\u0026     chmod -R go+rx /usr/local/share/jupyter \u0026\u0026     rm -rf $HOME/.local \u0026\u0026     fix-permissions $JULIA_PKGDIR /usr/local/share/jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install gnuplot_kernel \u0026\u0026     python3 -m gnuplot_kernel install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install cffi_magic"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget https://gr-framework.org/downloads/gr-latest-Ubuntu-x86_64.tar.gz \u0026\u0026     tar xvf gr-latest-Ubuntu-x86_64.tar.gz -C /usr/local --strip-components=1 \u0026\u0026     rm gr-latest-Ubuntu-x86_64.tar.gz \u0026\u0026     fix-permissions /usr/local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NIMBLE_DIR",
              "Value": "/opt/nimble"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://nim-lang.org/choosenim/init.sh -sSf \u003e choosenim.sh \u0026\u0026     chmod +x ./choosenim.sh \u0026\u0026     ./choosenim.sh -y \u0026\u0026     mkdir /opt/nimble \u0026\u0026     mv /home/jovyan/.nimble/bin /opt/nimble"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NIMBLE_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "fix-permissions $NIMBLE_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SCILAB_VERSION",
              "Value": "6.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCILAB_EXECUTABLE",
              "Value": "/usr/local/bin/scilab-adv-cli"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /opt/scilab-${SCILAB_VERSION} \u0026\u0026     cd /tmp \u0026\u0026     wget http://www.scilab.org/download/6.0.1/scilab-${SCILAB_VERSION}.bin.linux-x86_64.tar.gz \u0026\u0026     tar xvf scilab-${SCILAB_VERSION}.bin.linux-x86_64.tar.gz -C /opt/scilab-${SCILAB_VERSION} --strip-components=1 \u0026\u0026     rm /tmp/scilab-${SCILAB_VERSION}.bin.linux-x86_64.tar.gz \u0026\u0026     ln -fs /opt/scilab-${SCILAB_VERSION}/bin/scilab-adv-cli /usr/local/bin/scilab-adv-cli \u0026\u0026     ln -fs /opt/scilab-${SCILAB_VERSION}/bin/scilab-cli /usr/local/bin/scilab-cli \u0026\u0026     pip install scilab_kernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -yq dist-upgrade \u0026\u0026     apt-get install -yq --no-install-recommends     octave \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install octave_kernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XPP_DIR",
              "Value": "/opt/xppaut"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /opt/xppaut \u0026\u0026     cd /tmp \u0026\u0026     wget http://www.math.pitt.edu/~bard/bardware/xppaut_latest.tar.gz \u0026\u0026     tar xvf xppaut_latest.tar.gz -C /opt/xppaut \u0026\u0026     cd /opt/xppaut \u0026\u0026     make \u0026\u0026     ln -fs /opt/xppaut/xppaut /usr/local/bin/xppaut \u0026\u0026     rm /tmp/xppaut_latest.tar.gz \u0026\u0026     fix-permissions $XPP_DIR /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     mkdir /tmp/mxml \u0026\u0026     wget https://github.com/michaelrsweet/mxml/releases/download/v2.11/mxml-2.11.tar.gz \u0026\u0026     tar xvf mxml-2.11.tar.gz -C /tmp/mxml \u0026\u0026     cd /tmp/mxml \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd /tmp \u0026\u0026     rm mxml-2.11.tar.gz \u0026\u0026     rm -rf /tmp/mxml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/lib:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /opt/vfgen \u0026\u0026     cd /tmp \u0026\u0026     git clone https://github.com/WarrenWeckesser/vfgen \u0026\u0026     cd vfgen/src \u0026\u0026     make -f Makefile.vfgen \u0026\u0026     cp ./vfgen /opt/vfgen \u0026\u0026     cd /tmp \u0026\u0026     rm -rf vfgen \u0026\u0026     ln -fs /opt/vfgen/vfgen /usr/local/bin/vfgen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     git clone https://github.com/andrejv/maxima \u0026\u0026     cd maxima \u0026\u0026     sh bootstrap \u0026\u0026     ./configure --enable-sbcl \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd /tmp \u0026\u0026     rm -rf maxima"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/quicklisp \u0026\u0026     cd /tmp \u0026\u0026     curl -O https://beta.quicklisp.org/quicklisp.lisp \u0026\u0026     sbcl --load quicklisp.lisp --non-interactive --eval '(quicklisp-quickstart:install :path \"/opt/quicklisp/\")' \u0026\u0026     yes '' | sbcl --load /opt/quicklisp/setup.lisp --non-interactive --eval '(ql:add-to-init-file)' \u0026\u0026     rm quicklisp.lisp \u0026\u0026     fix-permissions /opt/quicklisp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     git clone https://github.com/robert-dodier/maxima-jupyter \u0026\u0026     cd maxima-jupyter \u0026\u0026     python3 ./install-maxima-jupyter.py --root=/opt/maxima-jupyter \u0026\u0026     fix-permissions /opt/maxima-jupyter /usr/local/share/jupyter/kernels"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget http://ulua.io/download/ulua~latest.zip \u0026\u0026     unzip ulua~latest.zip \u0026\u0026     rm ulua~latest.zip \u0026\u0026     fix-permissions /opt/ulua"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BIT",
              "Value": "64"
            },
            {
              "Key": "PATH",
              "Value": "/opt/ulua:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt/ulua/bin \u0026\u0026     yes 'y' | ./upkg add sci \u0026\u0026     yes 'y' | ./upkg add sci-lang \u0026\u0026     fix-permissions /opt/ulua"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "${HOME}"
          ]
        },
        {
          "CmdLine": [
            "chown -R ${NB_UID} ${HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${NB_USER}"
        },
        {
          "CmdLine": [
            "echo 'prefix=${HOME}/.npm' \u003e\u003e ${HOME}/.npmrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${HOME}/.npm/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd ${HOME} \u0026\u0026     npm install -g ijavascript \u0026\u0026     ijsinstall"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}