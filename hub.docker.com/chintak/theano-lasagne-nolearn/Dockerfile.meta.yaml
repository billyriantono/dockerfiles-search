MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Chintak Sheth <chintaksheth@gmail.com>
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y   software-properties-common python-software-properties
      && add-apt-repository "deb http://us.archive.ubuntu.com/ubuntu/ trusty universe
      multiverse" && add-apt-repository "deb http://us.archive.ubuntu.com/ubuntu/
      trusty-updates universe multiverse" && apt-get update && apt-get install -y
      --force-yes   build-essential   checkinstall   cmake   gfortran   git   libatlas-base-dev   libatlas-dev   libatlas3gf-base   libavcodec-dev   libavformat-dev   libblas-dev   libboost-all-dev   libdc1394-22-dev   libeigen3-dev   libfaac-dev   libffi-dev   libgflags-dev
      libgoogle-glog-dev   libgstreamer-plugins-base0.10-dev   libgstreamer0.10-dev   libjasper-dev   libjpeg-dev   libleveldb-dev
      libsnappy-dev liblmdb-dev libhdf5-serial-dev   libmp3lame-dev   libopenblas-dev   libopencore-amrnb-dev   libopencore-amrwb-dev   libopencv-dev   libopenexr-dev   libprotobuf-dev
      protobuf-compiler   libssl-dev   libswscale-dev   libtbb-dev   libtheora-dev   libtiff5-dev   libv4l-dev   libvorbis-dev   libx264-dev   libxine2-dev   libxvidcore-dev   openssl   pkg-config   python   python-dev   python-pip   tmux   unzip   v4l-utils   vim   wget   yasm
      && apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements-dep.txt
    - /tmp/
  - CmdLine:
    - pip install --upgrade pip &&   pip install -r /tmp/requirements-dep.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENCV_VERSION
      Value: 2.4.10.4
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget -O opencv.zip https://github.com/Itseez/opencv/archive/$OPENCV_VERSION.zip
      && unzip opencv.zip && rm opencv.zip* && mkdir opencv-$OPENCV_VERSION/build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: opencv-2.4.9/build
  - CmdLine:
    - cmake -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D WITH_QT=OFF
      -D WITH_GTK=OFF -D WITH_CUDA=OFF .. && make -j8 && make -j8 install
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf' && ldconfig
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - rm -rf opencv*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  - Env:
    - Key: CAFFE_VERSION
      Value: 0.13.2
    Name: env
  - CmdLine:
    - wget https://github.com/NVIDIA/caffe/archive/v${CAFFE_VERSION}.zip && unzip
      v${CAFFE_VERSION}.zip && rm v${CAFFE_VERSION}.zip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: caffe-${CAFFE_VERSION}
  - CmdLine:
    - for req in $(cat python/requirements.txt); do pip install $req; done
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Makefile.config
    - ./
  - CmdLine:
    - make -j8 all && make -j8 py
    Name: run
    PrependShell: true
  - Env:
    - Key: CAFFE_HOME
      Value: /root/caffe-0.13.2
    Name: env
  - Name: workdir
    Path: /root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /tmp/
  - CmdLine:
    - pip install -r /tmp/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O req.txt https://raw.githubusercontent.com/dnouri/nolearn/master/requirements.txt
      && pip install -r req.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install git+https://github.com/dnouri/nolearn.git@master#egg=nolearn==0.7.git
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - echo "export CAFFE_HOME=$CAFFE_HOME" >> /root/.bashrc && echo "export LD_LIBRARY_PATH=\$CAFFE_HOME/lib:\$LD_LIBRARY_PATH"
      >> /root/.bashrc && echo "export PYTHONPATH=\$CAFFE_HOME/python:\$PYTHONPATH"
      >> /root/.bashrc && echo "export PATH=\$CAFFE_HOME/tools/:\$PATH" >> /root/.bashrc
      && echo "export PKG_CONFIG_PATH=\$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig"
      >> ~/.bashrc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
