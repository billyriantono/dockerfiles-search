MetaArgs: null
Stages:
- As: builder
  BaseName: nvidia/cuda:9.0-devel-ubuntu16.04
  Commands:
  - Key: GROMACS_VERSION
    Name: arg
    Value: "2018.4"
  - Key: GROMACS_MD5
    Name: arg
    Value: 7bede4c1a656531fc43b95805e9a5a94
  - Key: FFTW_VERSION
    Name: arg
    Value: 3.3.8
  - Key: FFTW_MD5
    Name: arg
    Value: 8aac833c943d8e90d51b697b27d4384d
  - Key: JOBS
    Name: arg
    Value: "16"
  - CmdLine:
    - apt-get update   && apt-get install -y --no-install-recommends     cmake     curl     libopenmpi-dev     openmpi-bin     openmpi-common     python   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:/usr/lib/openmpi/lib
    Name: env
  - CmdLine:
    - mkdir -p /gromacs /gromacs-src
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /gromacs-src
  - CmdLine:
    - curl -o gromacs.tar.gz http://ftp.gromacs.org/pub/gromacs/gromacs-${GROMACS_VERSION}.tar.gz
      &&    echo "${GROMACS_MD5}  gromacs.tar.gz" > gromacs.tar.gz.md5 &&    md5sum
      -c gromacs.tar.gz.md5 &&    tar zxf gromacs.tar.gz &&    mv gromacs-${GROMACS_VERSION}/*
      .
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o fftw.tar.gz http://www.fftw.org/fftw-${FFTW_VERSION}.tar.gz   && echo
      "${FFTW_MD5}  fftw.tar.gz" > fftw.tar.gz.md5   && md5sum -c fftw.tar.gz.md5   &&
      tar -xzvf fftw.tar.gz && cd fftw-${FFTW_VERSION}   && ./configure --disable-double
      --enable-float --enable-sse2 --enable-avx --enable-avx2 --enable-avx512 --enable-shared
      --disable-static   && make -j ${JOBS}   && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - for ARCH in SSE2 AVX_256 AVX2_256 AVX_512; do      mkdir -p /gromacs-build.${ARCH}
      && cd /gromacs-build.${ARCH}   && CC=gcc CXX=g++ cmake /gromacs-src     -DGMX_OPENMP=ON     -DGMX_GPU=ON     -DGMX_MPI=OFF     -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda     -DCMAKE_INSTALL_PREFIX=/gromacs     -DREGRESSIONTEST_DOWNLOAD=ON     -DGMX_USE_NVML=OFF     -DGMX_SIMD=${ARCH}     -DCMAKE_INSTALL_BINDIR=bin.${ARCH}     -DCMAKE_INSTALL_LIBDIR=lib.${ARCH}   &&
      make -j ${JOBS}   && make install; done
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /gromacs-build.AVX_512   && g++ -O3 -mavx512f -std=c++11     -DGMX_IDENTIFY_AVX512_FMA_UNITS_STANDALONE=1     -DGMX_X86_GCC_INLINE_ASM=1     -DSIMD_AVX_512_CXX_SUPPORTED=1     -o
      /gromacs/bin.AVX_512/identifyavx512fmaunits     /gromacs-src/src/gromacs/hardware/identifyavx512fmaunits.cpp
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /gromacs/bin && echo '#!/bin/sh\nFLAGS=`cat /proc/cpuinfo | grep ^flags
      | head -1`\nif echo $FLAGS | grep " avx512f " > /dev/null && test -d /gromacs/bin.AVX_512
      && echo `/gromacs/bin.AVX_512/identifyavx512fmaunits` | grep "2" > /dev/null;
      then\n    ARCH="AVX_512"\nelif echo $FLAGS | grep " avx2 " > /dev/null && test
      -d /gromacs/bin.AVX2_256; then\n    ARCH="AVX2_256"\nelif echo $FLAGS | grep
      " avx " > /dev/null && test -d /gromacs/bin.AVX_256; then\n    ARCH="AVX_256"\nelse\n    ARCH="SSE2"\nfi\n/gromacs/bin.${ARCH}/gmx
      $@\n' > /gromacs/bin/gmx && chmod +x /gromacs/bin/gmx
    Name: run
    PrependShell: true
  From:
    Image: nvidia/cuda:9.0-devel-ubuntu16.04
  Name: builder
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-devel-ubuntu16.04 as builder
- BaseName: nvidia/cuda:9.0-runtime-ubuntu16.04
  Commands:
  - CmdLine:
    - apt-get update   && apt-get install -y --no-install-recommends     libgomp1     libopenmpi-dev     openmpi-bin     openmpi-common     python   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/lib
    - /usr/local/lib
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /gromacs
    - /gromacs
  - Env:
    - Key: PATH
      Value: $PATH:/gromacs/bin
    Name: env
  - Labels:
    - Key: com.nvidia.gromacs.version
      Value: '"${GROMACS_VERSION}"'
    Name: label
  From:
    Image: nvidia/cuda:9.0-runtime-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-runtime-ubuntu16.04
