{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "https://github.com/muccg/",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "BASE_VERSION",
              "Value": "2015-06-12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENSTACK_VERSION",
              "Value": "kilo"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends   language-pack-en   ubuntu-cloud-keyring   \u0026\u0026 locale-gen en_US   \u0026\u0026 echo \"deb http://ubuntu-cloud.archive.canonical.com/ubuntu\"   \"trusty-updates/kilo main\" \u003e /etc/apt/sources.list.d/cloudarchive-kilo.list   \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --no-install-recommends   apt-transport-https   ca-certificates   supervisor   \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "env --unset=DEBIAN_FRONTEND"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BUILD_HOST_FILE",
              "Value": "/build_host.txt"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APT_PROXY_CONF",
              "Value": "/etc/apt/apt.conf.d/30proxy"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "['/bin/sh']"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Expression": "RUN netstat -nr | grep '^0\\.0\\.0\\.0' | awk '{print $2}' \u003e ${BUILD_HOST_FILE}",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN echo \"HEAD /\" | nc -q -1 -n -v  `cat ${BUILD_HOST_FILE}` 3128 | grep squid-deb-proxy   \u0026\u0026 (echo \"Acquire::http::Proxy \\\"http://$(cat ${BUILD_HOST_FILE}):3128\\\";\" \u003e ${APT_PROXY_CONF})   \u0026\u0026 (echo \"Acquire::http::Proxy::ppa.launchpad.net DIRECT;\" \u003e\u003e ${APT_PROXY_CONF})   || echo \"No squid-deb-proxy detected on docker host\"",
          "Name": "onbuild"
        }
      ]
    }
  ]
}