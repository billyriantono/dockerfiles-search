{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "frolvlad/alpine-java:jdk8-slim",
      "SourceCode": "FROM frolvlad/alpine-java:jdk8-slim",
      "Platform": "",
      "From": {
        "Image": "frolvlad/alpine-java:jdk8-slim"
      },
      "Commands": [
        {
          "Key": "CONTAINER_UID",
          "Name": "arg",
          "Value": "2001"
        },
        {
          "Key": "CONTAINER_GID",
          "Name": "arg",
          "Value": "2001"
        },
        {
          "Key": "JIRA_VERSION",
          "Name": "arg",
          "Value": "8.5.1"
        },
        {
          "Key": "GOSU_VERSION",
          "Name": "arg",
          "Value": "1.11"
        },
        {
          "Key": "DOCKERIZE_VERSION",
          "Name": "arg",
          "Value": "v0.6.1"
        },
        {
          "Key": "MYSQL_DRIVER_VERSION",
          "Name": "arg",
          "Value": "5.1.48"
        },
        {
          "Key": "POSTGRESQL_DRIVER_VERSION",
          "Name": "arg",
          "Value": "42.2.6"
        },
        {
          "Key": "JIRA_DOWNLOAD_URI",
          "Name": "arg",
          "Value": "https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-${JIRA_VERSION}.tar.gz"
        },
        {
          "Key": "LANG_LANGUAGE",
          "Name": "arg",
          "Value": "en"
        },
        {
          "Key": "LANG_COUNTRY",
          "Name": "arg",
          "Value": "US"
        },
        {
          "Env": [
            {
              "Key": "JIRA_HOME",
              "Value": "/var/atlassian/jira"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JIRA_INSTALL",
              "Value": "/opt/atlassian/jira"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JIRA_SCRIPTS",
              "Value": "/usr/local/share/atlassian"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONTAINER_USER",
              "Value": "jira"
            },
            {
              "Key": "CONTAINER_GROUP",
              "Value": "jira"
            },
            {
              "Key": "JIRA_CONTEXT_PATH",
              "Value": "ROOT"
            },
            {
              "Key": "JIRA_HOME",
              "Value": "/var/atlassian/jira"
            },
            {
              "Key": "JIRA_INSTALL",
              "Value": "/opt/atlassian/jira"
            },
            {
              "Key": "JIRA_SCRIPTS",
              "Value": "/usr/local/share/atlassian"
            },
            {
              "Key": "LANG",
              "Value": "${LANG_LANGUAGE}_${LANG_COUNTRY}.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 addgroup -g $CONTAINER_GID $CONTAINER_GROUP \t\u0026\u0026 adduser -u $CONTAINER_UID                   \t\t-h /home/$CONTAINER_USER                   \t\t-S -s /bin/bash                            \t\t-G $CONTAINER_GROUP                        \t\t$CONTAINER_USER                                \u0026\u0026 mkdir -p \"${JIRA_HOME}\"                 \"${JIRA_HOME}/caches/index\"                 \"${JIRA_INSTALL}/conf/Catalina\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update     \u0026\u0026 apk upgrade     \u0026\u0026 apk add --no-cache --virtual .build-deps         curl         tar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache         bash         fontconfig         ttf-dejavu         xmlstarlet tini openssl ca-certificates     \u0026\u0026 update-ca-certificates 2\u003e/dev/null || true     \u0026\u0026 curl -Ls \"${JIRA_DOWNLOAD_URI}\"         | tar -xz --directory \"${JIRA_INSTALL}\"             --strip-components=1 --no-same-owner     \u0026\u0026 cd \"${JIRA_INSTALL}/lib\"     \u0026\u0026 rm -f \"${JIRA_INSTALL}/lib/postgresql-9.*\"     \u0026\u0026 curl -Os \"https://jdbc.postgresql.org/download/postgresql-${POSTGRESQL_DRIVER_VERSION}.jar\"     \u0026\u0026 curl -Ls \"https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz\"         | tar -xz --directory \"${JIRA_INSTALL}/lib\"             --strip-components=1 --no-same-owner             \"mysql-connector-java-${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar\"     \u0026\u0026 chmod -R 700 \"${JIRA_HOME}\"                     \"${JIRA_INSTALL}/conf\"                     \"${JIRA_INSTALL}/temp\"                     \"${JIRA_INSTALL}/logs\"                     \"${JIRA_INSTALL}/work\"     \u0026\u0026 chown -R \"${CONTAINER_USER}\":\"${CONTAINER_GROUP}\" \"${JIRA_HOME}\"                                          \"${JIRA_INSTALL}/conf\"                                          \"${JIRA_INSTALL}/temp\"                                          \"${JIRA_INSTALL}/logs\"                                          \"${JIRA_INSTALL}/work\"     \u0026\u0026 sed --in-place \"s/java version/openjdk version/g\" \"${JIRA_INSTALL}/bin/check-java.sh\"     \u0026\u0026 echo -e \"\\njira.home=${JIRA_HOME}\" \u003e\u003e \"${JIRA_INSTALL}/atlassian-jira/WEB-INF/classes/jira-application.properties\"     \u0026\u0026 touch -d \"@0\" \"${JIRA_INSTALL}/conf/server.xml\"     \u0026\u0026 wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 rm -rf /tmp/*               \u0026\u0026 rm -rf /var/log/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JVM_MINIMUM_MEMORY",
              "Value": "768m"
            },
            {
              "Key": "JVM_MAXIMUM_MEMORY",
              "Value": "1280m"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "imagescripts",
            "${JIRA_SCRIPTS}"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 sed -i 's/JVM_MINIMUM_MEMORY=\"384m\"/JVM_MINIMUM_MEMORY=\"${JVM_MINIMUM_MEMORY}\"/g' /opt/atlassian/jira/bin/setenv.sh \t\u0026\u0026 sed -i 's/JVM_MAXIMUM_MEMORY=\"768m\"/JVM_MAXIMUM_MEMORY=\"${JVM_MAXIMUM_MEMORY}\"/g' /opt/atlassian/jira/bin/setenv.sh     \u0026\u0026 /bin/bash ${JIRA_SCRIPTS}/patch.sh *.jar ${JIRA_INSTALL}/atlassian-jira/WEB-INF/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "\"${CONTAINER_USER}\":\"${CONTAINER_GROUP}\""
        },
        {
          "Name": "expose",
          "Ports": [
            "8080",
            "9093"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "${JIRA_INSTALL}/logs",
            "${JIRA_INSTALL}/conf",
            "${JIRA_HOME}",
            "${JAVA_HOME}/jre/lib/security/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${JIRA_HOME}"
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--",
            "/usr/local/share/atlassian/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jira",
            "-Datlassian.plugins.enable.wait=300"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": "undefined"
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Nguyen Khac Trieu \u003ctrieunk@yahoo.com\u003e\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"JIRA - Alpine\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Provides a Docker image for JIRA on Alpine Linux.\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://trieunk.info/\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/nobitagamer/jira-software\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Trieunk\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VERSION"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}