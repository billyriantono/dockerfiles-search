MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: = "Yajie Zhu <yajiez.me@gmail.com>"
    Name: label
  - Env:
    - Key: USERNAME
      Value: deepai
    Name: env
  - CmdLine:
    - useradd -d /home/$USERNAME -ms /bin/bash -g root -G sudo $USERNAME
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deepai:deeplab" | chpasswd
    Name: run
    PrependShell: true
  - Env:
    - Key: TERM
      Value: xterm-256color
    Name: env
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends          build-essential          cmake          git          curl          wget          less          tree          htop          vim          zsh          tmux          sudo          locales          locales-all          openssl          ca-certificates          openssh-client          libjpeg-dev          libpng-dev
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - chsh $USERNAME -s /bin/zsh
    Name: run
    PrependShell: true
  - Name: user
    User: $USERNAME
  - Name: workdir
    Path: /home/$USERNAME
  - Env:
    - Key: ZSH_CUSTOM
      Value: /home/$USERNAME/.oh-my-zsh/custom
    Name: env
  - CmdLine:
    - wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O
      - | zsh || true
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/denysdovhan/spaceship-prompt.git $ZSH_CUSTOM/themes/spaceship-prompt
      &&     ln -s $ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme $ZSH_CUSTOM/themes/spaceship.zsh-theme
      &&     sed -i 's/ZSH_THEME="robbyrussell"/ZSH_THEME="spaceship"/' /home/$USERNAME/.zshrc  &&     echo
      SPACESHIP_HOST_SHOW=always >> /home/$USERNAME/.zshrc &&     echo SPACESHIP_USER_SHOW=always
      >> /home/$USERNAME/.zshrc &&     echo source /home/$USERNAME/.profile >> /home/$USERNAME/.zshrc
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://raw.githubusercontent.com/liuchengxu/space-vim/master/install.sh
      -O - | zsh || true &&     echo let g:space_vim_dark_background = 233 >> /home/$USERNAME/.vimrc
      &&     echo let g:netrw_banner = 0 >> /home/$USERNAME/.vimrc &&     echo let
      g:netrw_liststyle = 3 >> /home/$USERNAME/.vimrc &&     echo let g:netrw_browse_split
      = 4 >> /home/$USERNAME/.vimrc &&     echo let g:netrw_altv = 1 >> /home/$USERNAME/.vimrc
      &&     echo let g:netrw_winsize = 25 >> /home/$USERNAME/.vimrc
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/gpakosz/.tmux.git /home/$USERNAME/.tmux &&     ln
      -s -f .tmux/.tmux.conf &&     cp .tmux/.tmux.conf.local . &&     echo set -gu
      prefix2 >> .tmux.conf.local &&     echo unbind C-a >> .tmux.conf.local &&     echo
      unbind C-b >> .tmux.conf.local &&     echo set -g prefix C-b >> .tmux.conf.local
      &&     echo bind C-b send-prefix >> .tmux.conf.local
    Name: run
    PrependShell: true
  - Key: PYTHON_VERSION
    Name: arg
    Value: "3.7"
  - Name: user
    User: $USERNAME
  - Name: workdir
    Path: /home/$USERNAME
  - CmdLine:
    - curl -o /home/$USERNAME/miniconda.sh -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      &&      chmod +x /home/$USERNAME/miniconda.sh &&      /home/$USERNAME/miniconda.sh
      -b -p /home/$USERNAME/miniconda &&      rm /home/$USERNAME/miniconda.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /home/$USERNAME/miniconda/bin/conda config --set auto_update_conda False
    Name: run
    PrependShell: true
  - CmdLine:
    - /home/$USERNAME/miniconda/bin/conda config --add channels conda-forge
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/$USERNAME/miniconda/bin:$PATH
    Name: env
  - Env:
    - Key: EDITOR
      Value: vim
    Name: env
  - Env:
    - Key: MKL_THREADING_LAYER
      Value: GNU
    Name: env
  - CmdLine:
    - /home/$USERNAME/miniconda/bin/conda install -y -c conda-forge      python=$PYTHON_VERSION
      numpy pandas scikit-learn matplotlib tqdm nodejs jupyterlab ipywidgets fastparquet
      pyarrow pytest
    Name: run
    PrependShell: true
  - CmdLine:
    - /home/$USERNAME/miniconda/bin/jupyter serverextension enable --py jupyterlab
      --user &&     /home/$USERNAME/miniconda/bin/jupyter labextension install @jupyter-widgets/jupyterlab-manager
      &&     /home/$USERNAME/miniconda/bin/jupyter labextension install @pyviz/jupyterlab_pyviz
      &&     /home/$USERNAME/miniconda/bin/jupyter labextension install @jupyterlab/toc
      &&     /home/$USERNAME/miniconda/bin/jupyter nbextension enable --py widgetsnbextension
    Name: run
    PrependShell: true
  - Chown: deepai:root
    From: ""
    Name: copy
    SourcesAndDest:
    - environment.yml
    - /home/$USERNAME/
  - CmdLine:
    - /home/$USERNAME/miniconda/bin/conda env create -f environment.yml
    Name: run
    PrependShell: true
  - CmdLine:
    - /home/$USERNAME/miniconda/bin/conda clean -ya
    Name: run
    PrependShell: true
  - CmdLine:
    - /home/$USERNAME/miniconda/envs/deeplab/bin/python -m ipykernel install --user
      --name deeplab --display-name "Deep Lab"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/$USERNAME/.jupyter/custom &&     mkdir -p /home/$USERNAME/.ipython/profile_default/startup
      &&     mkdir -p /home/$USERNAME/.config/matplotlib
    Name: run
    PrependShell: true
  - Chown: deepai:root
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/jupyter/jupyter_notebook_config.py
    - /home/$USERNAME/.jupyter/
  - Chown: deepai:root
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/jupyter/custom.css
    - /home/$USERNAME/.jupyter/custom/
  - Chown: deepai:root
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/ipython/ipython_config.py
    - /home/$USERNAME/.ipython/profile_default/
  - Chown: deepai:root
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/ipython/default_import.py
    - /home/$USERNAME/.ipython/profile_default/startup/
  - Chown: deepai:root
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/matplotlib/matplotlibrc
    - /home/$USERNAME/.config/matplotlib/
  - CmdLine:
    - chmod +x /home/$USERNAME/.ipython/profile_default/ipython_config.py &&     chmod
      +x /home/$USERNAME/.ipython/profile_default/startup/default_import.py &&     chmod
      +x /home/$USERNAME/.jupyter/jupyter_notebook_config.py
    Name: run
    PrependShell: true
  - Chown: deepai:root
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/profile
    - /home/$USERNAME/.profile
  - CmdLine:
    - mkdir -p /home/$USERNAME/bin
    Name: run
    PrependShell: true
  - Chown: deepai:root
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/jupyter/start-jupyter-lab.sh
    - /home/$USERNAME/bin/
  - CmdLine:
    - chmod +x /home/$USERNAME/bin/start-jupyter-lab.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/$USERNAME/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p /home/$USERNAME/projects
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/$USERNAME/datasets
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8889"
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - zsh
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04
