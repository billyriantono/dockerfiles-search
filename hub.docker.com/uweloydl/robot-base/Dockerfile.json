{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial-20160331.1",
      "SourceCode": "FROM ubuntu:xenial-20160331.1",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial-20160331.1"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "UBUNTU_FLAVOR",
              "Value": "\"xenial\""
            },
            {
              "Key": "UBUNTU_DATE",
              "Value": "\"20160331.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "DEBCONF_NONINTERACTIVE_SEEN",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://archive.ubuntu.com/ubuntu ${UBUNTU_FLAVOR} main universe\\n\" \u003e /etc/apt/sources.list   \u0026\u0026 echo \"deb http://archive.ubuntu.com/ubuntu ${UBUNTU_FLAVOR}-updates main universe\\n\" \u003e\u003e /etc/apt/sources.list   \u0026\u0026 echo \"deb http://security.ubuntu.com/ubuntu ${UBUNTU_FLAVOR}-security main universe\\n\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qqy   \u0026\u0026 apt-get -qqy --no-install-recommends install     bzip2     ca-certificates     openjdk-8-jre-headless     sudo     unzip     wget   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 sed -i 's/securerandom\\.source=file:\\/dev\\/random/securerandom\\.source=file:\\/dev\\/urandom/' ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG_WHICH",
              "Value": "de"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG_WHERE",
              "Value": "DE"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ENCODING",
              "Value": "UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "${LANG_WHICH}_${LANG_WHERE}.${ENCODING}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "${LANGUAGE}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen ${LANGUAGE}   \u0026\u0026 dpkg-reconfigure --frontend noninteractive locales   \u0026\u0026 apt-get update -qqy   \u0026\u0026 apt-get -qqy install     language-pack-${LANG_WHICH}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "\"Europe/Berlin\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"Setting time zone to '${TZ}'\"   \u0026\u0026 echo ${TZ} \u003e /etc/timezone   \u0026\u0026 dpkg-reconfigure --frontend noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SELENIUM_SERVER_VERSION",
              "Value": "2.53"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt/selenium   \u0026\u0026 wget --no-verbose     https://selenium-release.storage.googleapis.com/${SELENIUM_SERVER_VERSION}/selenium-server-standalone-${SELENIUM_SERVER_VERSION}.0.jar     -O /opt/selenium/selenium-server-standalone.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "v0.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo useradd seluser --shell /bin/bash --create-home   \u0026\u0026 sudo usermod -a -G sudo seluser   \u0026\u0026 echo 'ALL ALL = (ALL) NOPASSWD: ALL' \u003e\u003e /etc/sudoers   \u0026\u0026 echo 'seluser:secret' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}