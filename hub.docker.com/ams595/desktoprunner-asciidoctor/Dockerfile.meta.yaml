MetaArgs: null
Stages:
- BaseName: gitlab/gitlab-runner:v10.2.0
  Commands:
  - Maintainer: Antoine Morisseau <antoine@morisseau.me>
    Name: maintainer
  - Env:
    - Key: GITLAB_RUNNER_VERSION
      Value: 10.2.0
    - Key: GITLAB_RUNNER_USER
      Value: gitlab_runner
    - Key: GITLAB_RUNNER_HOME_DIR
      Value: '"/home/gitlab_runner"'
    Name: env
  - Env:
    - Key: GITLAB_RUNNER_DATA_DIR
      Value: '"${GITLAB_RUNNER_HOME_DIR}/data"'
    Name: env
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E1DD270288B4E6030699E45FA1715D88E1DF1F24  &&
      echo "deb http://ppa.launchpad.net/git-core/ppa/ubuntu trusty main" >> /etc/apt/sources.list  &&
      apt-get update  && DEBIAN_FRONTEND=noninteractive apt-get install -y       git-core
      openssh-client curl libapparmor1  && adduser --disabled-login --gecos 'GitLab
      CI Runner' ${GITLAB_RUNNER_USER}  && sudo -HEu ${GITLAB_RUNNER_USER} ln -sf
      ${GITLAB_RUNNER_DATA_DIR}/.ssh ${GITLAB_RUNNER_HOME_DIR}/.ssh  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /sbin/entrypoint.sh
  - CmdLine:
    - chmod 755 /sbin/entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - lsb_release -r
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --force-yes --no-install-recommends software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository ppa:brightbox/ruby-ng
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --force-yes --no-install-recommends ruby2.4
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y --no-install-recommends \tautoconf \tautomake \tasciidoc
      \tbzip2   curl \tfile \tg++ \tgcc   git-core \timagemagick \tlibbz2-dev \tlibc6-dev
      \tlibcurl4-openssl-dev \tlibevent-dev \tlibffi-dev \tlibglib2.0-dev \tlibjpeg-dev
      \tliblzma-dev \tlibmagickcore-dev \tlibmagickwand-dev \tlibmysqlclient-dev \tlibncurses-dev
      \tlibpq-dev \tlibreadline-dev \tlibsqlite3-dev \tlibssl-dev \tlibtool \tlibxml2-dev
      \tlibxslt-dev \tlibyaml-dev \tmake \tttf-liberation \tunzip \tnodejs \tpandoc
      \tpatch \twkhtmltopdf \txz-utils \tzlib1g-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install asciidoctor-pdf --pre
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install rouge
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install pygments.rb
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install coderay
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R ${GITLAB_RUNNER_USER}:${GITLAB_RUNNER_USER} ${GITLAB_RUNNER_HOME_DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: REGISTER_NON_INTERACTIVE
      Value: "true"
    Name: env
  - Env:
    - Key: REGISTRATION_TOKEN
      Value: ""
    Name: env
  - Env:
    - Key: CI_SERVER_URL
      Value: ""
    Name: env
  - Env:
    - Key: RUNNER_NAME
      Value: asciidoctor
    Name: env
  - Env:
    - Key: RUNNER_EXECUTOR
      Value: shell
    Name: env
  - Env:
    - Key: RUNNER_TAG_LIST
      Value: asciidoctor
    Name: env
  - Env:
    - Key: RUNNER_LIMIT
      Value: "1"
    Name: env
  - Name: volume
    Volumes:
    - ${GITLAB_RUNNER_DATA_DIR}
  - Name: workdir
    Path: '"${GITLAB_RUNNER_HOME_DIR}"'
  - CmdLine:
    - /sbin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: gitlab/gitlab-runner:v10.2.0
  Name: ""
  Platform: ""
  SourceCode: FROM gitlab/gitlab-runner:v10.2.0
