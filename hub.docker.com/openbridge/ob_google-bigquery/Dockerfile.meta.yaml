MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: Thomas Spicer <thomas@openbridge.com>
    Name: maintainer
  - Env:
    - Key: CLOUDSDK_PYTHON_SITEPACKAGES
      Value: "1"
    Name: env
  - Env:
    - Key: PATH
      Value: /google-cloud-sdk/bin:$PATH
    Name: env
  - Env:
    - Key: HOME
      Value: /
    Name: env
  - Env:
    - Key: BUILD_DEPS
      Value: g++         gcc         linux-headers         wget         build-base         libressl-dev         python2-dev         libffi-dev         unzip         ca-certificates         py2-pip         gnupg         musl-dev
    Name: env
  - CmdLine:
    - set -x     && apk add --no-cache --virtual .persistent-deps         rsync         bash         curl         dateutils         ca-certificates         libressl         libressl2.6-libcrypto         libressl2.6-libssl         coreutils         openssh-client         python2         py-openssl     &&
      apk add --no-cache --virtual .build-deps         $BUILD_DEPS     && pip install
      --upgrade pip crcmod setuptools awscli cryptography     && mkdir -p /etc/gcloud     &&
      wget --no-check-certificate https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.zip     &&
      unzip google-cloud-sdk.zip     && rm google-cloud-sdk.zip     && ./google-cloud-sdk/install.sh
      --path-update=true --bash-completion=true --rc-path=/.bashrc --additional-components
      app-engine-java app-engine-python kubectl alpha beta gcd-emulator pubsub-emulator
      cloud-datastore-emulator bq core gsutil gcloud app-engine-go bigtable     &&
      ln -s /lib /lib64     && rm -rf /tmp/*     && gcloud config set core/disable_usage_reporting
      true     && gcloud config set component_manager/disable_update_check true     &&
      gcloud config set metrics/environment github_docker_image     && gcloud --version     &&
      mkdir /.ssh     && rm -rf /var/cache/apk/*     && apk del .build-deps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - usr/bin/
    - /usr/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lifecycle.json
    - /lifecycle.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - sql/
    - /sql/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - CmdLine:
    - chmod +x /usr/bin/ /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /.config
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ""
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
