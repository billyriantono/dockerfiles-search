MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Maintainer: Luka Stosic <lstosic@infodation.nl>
    Name: maintainer
  - CmdLine:
    - groupadd -r mysql && useradd -r -g mysql mysql
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true \t&& apt-get purge -y --auto-remove ca-certificates wget"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tapt-transport-https
      ca-certificates \t\tpwgen \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEYS
      Value: "199369E5404BD5FC7D2FE43BCBCB082A1BB943DB \t430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A
        \t4D1BB29D63D98E422B2113B19334A25F8507EFA5"
    Name: env
  - CmdLine:
    - "set -ex; \texport GNUPGHOME=\"$(mktemp -d)\"; \tfor key in $GPG_KEYS; do \t\tgpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tdone; \tgpg --export
      $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; \trm -r \"$GNUPGHOME\"; \tapt-key
      list"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"deb https://repo.percona.com/apt jessie main\" > /etc/apt/sources.list.d/percona.list
      \t&& { \t\techo 'Package: *'; \t\techo 'Pin: release o=Percona Development Team';
      \t\techo 'Pin-Priority: 998'; \t} > /etc/apt/preferences.d/percona"
    Name: run
    PrependShell: true
  - Env:
    - Key: MARIADB_MAJOR
      Value: "10.1"
    Name: env
  - Env:
    - Key: MARIADB_VERSION
      Value: 10.1.21+maria-1~jessie
    Name: env
  - CmdLine:
    - "echo \"deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/debian jessie
      main\" > /etc/apt/sources.list.d/mariadb.list \t&& { \t\techo 'Package: *';
      \t\techo 'Pin: release o=MariaDB'; \t\techo 'Pin-Priority: 999'; \t} > /etc/apt/preferences.d/mariadb"
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo mariadb-server-$MARIADB_MAJOR mysql-server/root_password password
      'unused'; \t\techo mariadb-server-$MARIADB_MAJOR mysql-server/root_password_again
      password 'unused'; \t} | debconf-set-selections \t&& apt-get update \t&& apt-get
      install -y \t\tmariadb-server=$MARIADB_VERSION \t\tpercona-xtrabackup \t\tsocat
      \t&& rm -rf /var/lib/apt/lists/* \t&& sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf
      /etc/mysql/conf.d/* \t&& rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql /var/run/mysqld
      \t&& chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \t&& chmod 777 /var/run/mysqld"
    Name: run
    PrependShell: true
  - CmdLine:
    - "sed -Ei 's/^(bind-address|log)/#&/' /etc/mysql/my.cnf \t&& echo 'skip-host-cache\\nskip-name-resolve'
      | awk '{ print } $1 == \"[mysqld]\" && c == 0 { c = 1; system(\"cat\") }' /etc/mysql/my.cnf
      > /tmp/my.cnf \t&& mv /tmp/my.cnf /etc/mysql/my.cnf"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/mysql
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tbzip2 \t\tunzip
      \t\txz-utils \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://deb.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/jessie-backports.list
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u111
    Name: env
  - Env:
    - Key: JAVA_DEBIAN_VERSION
      Value: 8u111-b14-2~bpo8+1
    Name: env
  - Env:
    - Key: CA_CERTIFICATES_JAVA_VERSION
      Value: "20140324"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install -y \t\topenjdk-8-jdk=\"$JAVA_DEBIAN_VERSION\"
      \t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \t&& rm -rf /var/lib/apt/lists/*
      \t&& [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - /var/lib/dpkg/info/ca-certificates-java.postinst configure
    Name: run
    PrependShell: true
  - Env:
    - Key: MAVEN_VERSION
      Value: 3.3.9
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install -y curl"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/share/maven   && curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     |
      tar -xzC /usr/share/maven --strip-components=1   && ln -s /usr/share/maven/bin/mvn
      /usr/bin/mvn
    Name: run
    PrependShell: true
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/share/maven
    Name: env
  - Name: volume
    Volumes:
    - /root/.m2
  - CmdLine:
    - chmod 755 /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3306"
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - mysqld
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
