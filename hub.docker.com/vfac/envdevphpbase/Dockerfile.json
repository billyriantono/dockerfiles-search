{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-cli",
      "SourceCode": "FROM php:7.1-cli",
      "Platform": "",
      "From": {
        "Image": "php:7.1-cli"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Vincent Fali√®s \u003cvincent@vfac.fr\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpng-dev     libbz2-dev     libcurl4-gnutls-dev     libxml2-dev     libenchant-dev     libssl-dev     libc-client-dev     libkrb5-dev     zlib1g-dev     libicu-dev     g++     git     libsqlite3-dev     libpspell-dev     libreadline-dev     libedit-dev     librecode-dev     libsnmp-dev     libsnmp30     libtidy-dev     libxslt1.1     libxslt1-dev     ssmtp     snmp     gnupg2     libgmp-dev     libldb-dev     libldap2-dev     wget     unzip     mibrabbitmq-dev     \u0026\u0026 docker-php-ext-configure imap --with-kerberos --with-imap-ssl     \u0026\u0026 docker-php-ext-install -j$(nproc) imap     \u0026\u0026 docker-php-ext-configure intl     \u0026\u0026 docker-php-ext-install -j$(nproc) intl     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/     \u0026\u0026 docker-php-ext-install ldap     \u0026\u0026 docker-php-ext-install -j$(nproc) bcmath bz2 calendar ctype curl dba dom enchant exif fileinfo ftp gettext gmp hash iconv                                          mbstring mysqli mcrypt opcache pcntl pdo pdo_mysql pdo_sqlite phar posix pspell readline recode                                          session shmop simplexml snmp soap sockets sysvmsg sysvsem sysvshm tidy tokenizer wddx xml xmlrpc                                          xmlwriter xsl zip     \u0026\u0026 apt-get clean -y \u0026\u0026 apt-get autoclean -y \u0026\u0026 apt-get autoremove -y     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"hostname=localhost.localdomain\" \u003e /etc/ssmtp/ssmtp.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"root=vincent.falies@wolterskluwer.com\" \u003e\u003e /etc/ssmtp/ssmtp.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"mailhub=maildev\" \u003e\u003e /etc/ssmtp/ssmtp.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"sendmail_path=sendmail -i -t\" \u003e\u003e /usr/local/etc/php/conf.d/php-sendmail.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"localhost localhost.localdomain\" \u003e\u003e /etc/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | pecl install xdebug     \u0026\u0026 echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" \u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_enable=on\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_autostart=off\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | pecl install mongodb     \u0026\u0026 echo \"extension=mongodb.so\" \u003e /usr/local/etc/php/conf.d/mongo.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install amqp \u0026\u0026 docker-php-ext-enable amqp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/composer.sh",
            "/tmp/composer.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tmp/composer.sh     \u0026\u0026 sync     \u0026\u0026 /tmp/composer.sh     \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "useradd -U -m -r -o -u 1003 vfac"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "USER=vfac \u0026\u0026     GROUP=vfac \u0026\u0026     curl -SsL https://github.com/boxboat/fixuid/releases/download/v0.4/fixuid-0.4-linux-amd64.tar.gz | tar -C /usr/local/bin -xzf - \u0026\u0026     chown root:root /usr/local/bin/fixuid \u0026\u0026     chmod 4755 /usr/local/bin/fixuid \u0026\u0026     mkdir -p /etc/fixuid \u0026\u0026     printf \"user: $USER\\ngroup: $GROUP\\n\" \u003e /etc/fixuid/config.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "fixuid",
            "-q"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "vfac:vfac"
        },
        {
          "CmdLine": [
            "composer config --global repo.packagist composer https://packagist.org"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}