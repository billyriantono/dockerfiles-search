{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "drunkar \u003cdrunkars.p@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get -y install tzdata locales \u0026\u0026   ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y software-properties-common python-software-properties \u0026\u0026     add-apt-repository multiverse"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y   build-essential   wget   linux-generic   nvidia-cuda-toolkit   nvidia-361"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "cuDNN_path.txt",
            "./"
          ]
        },
        {
          "CmdLine": [
            ". ./cuDNN_path.txt \u0026\u0026 wget -q ${CUDNN_PATH} -O cudnn.tgz \u0026\u0026     tar xzf cudnn.tgz \u0026\u0026     cp -a cuda/lib64/* /usr/local/lib/ \u0026\u0026     cp -a cuda/include/* /usr/local/include/ \u0026\u0026     ldconfig \u0026\u0026     rm -R -f cuda cudnn.tgz cuDNN_path.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y wget bzip2 ca-certificates \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet https://repo.continuum.io/archive/Anaconda3-4.4.0-Linux-x86_64.sh \u0026\u0026     /bin/bash Anaconda3-4.4.0-Linux-x86_64.sh -b -p /opt/conda \u0026\u0026     rm Anaconda3-4.4.0-Linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Env": [
            {
              "Key": "TF_BINARY_URL",
              "Value": "https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc0-cp35-cp35m-linux_x86_64.whl"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install --upgrade -I setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade $TF_BINARY_URL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6006"
          ]
        },
        {
          "CmdLine": [
            "mkdir /notebook"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/notebook"
          ]
        },
        {
          "CmdLine": [
            "jupyter notebook --no-browser --ip=\"0.0.0.0\" --port=8888 --notebook-dir=\"/notebook\""
          ],
          "Name": "entrypoint",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/notebook"
        }
      ]
    }
  ]
}