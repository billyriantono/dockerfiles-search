MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: drunkar <drunkars.p@gmail.com>
    Name: maintainer
  - CmdLine:
    - apt-get update &&   apt-get -y install tzdata locales &&   ln -sf /usr/share/zoneinfo/Asia/Tokyo
      /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y software-properties-common python-software-properties
      &&     add-apt-repository multiverse
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y   build-essential   wget   linux-generic   nvidia-cuda-toolkit   nvidia-361
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cuDNN_path.txt
    - ./
  - CmdLine:
    - . ./cuDNN_path.txt && wget -q ${CUDNN_PATH} -O cudnn.tgz &&     tar xzf cudnn.tgz
      &&     cp -a cuda/lib64/* /usr/local/lib/ &&     cp -a cuda/include/* /usr/local/include/
      &&     ldconfig &&     rm -R -f cuda cudnn.tgz cuDNN_path.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y wget bzip2 ca-certificates &&     rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://repo.continuum.io/archive/Anaconda3-4.4.0-Linux-x86_64.sh
      &&     /bin/bash Anaconda3-4.4.0-Linux-x86_64.sh -b -p /opt/conda &&     rm
      Anaconda3-4.4.0-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Env:
    - Key: TF_BINARY_URL
      Value: https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc0-cp35-cp35m-linux_x86_64.whl
    Name: env
  - CmdLine:
    - pip install --upgrade -I setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade $TF_BINARY_URL
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "6006"
  - CmdLine:
    - mkdir /notebook
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /notebook
  - CmdLine:
    - jupyter notebook --no-browser --ip="0.0.0.0" --port=8888 --notebook-dir="/notebook"
    Name: entrypoint
    PrependShell: true
  - Name: workdir
    Path: /notebook
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
