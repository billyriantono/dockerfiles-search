{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "Drunkar \u003cdrunkars.p@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk --update add tzdata \u0026\u0026     cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime \u0026\u0026     apk del tzdata \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "{     echo '#!/bin/sh';     echo 'set -e';     echo;     echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"';   } \u003e /usr/local/bin/docker-java-home   \u0026\u0026 chmod +x /usr/local/bin/docker-java-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-1.8-openjdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8u111"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_ALPINE_VERSION",
              "Value": "8.111.14-r0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 apk add --no-cache     openjdk8=\"$JAVA_ALPINE_VERSION\"   \u0026\u0026 [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add curl \u0026\u0026 curl -o /usr/local/bin/gosu -sSL \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\" \u0026\u0026 chmod +x /usr/local/bin/gosu \u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_VERSION",
              "Value": "5.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$ELASTICSEARCH_VERSION.tar.gz -o elasticsearch-$ELASTICSEARCH_VERSION.tar.gz \u0026\u0026 tar -xzf elasticsearch-$ELASTICSEARCH_VERSION.tar.gz \u0026\u0026 rm elasticsearch-$ELASTICSEARCH_VERSION.tar.gz \u0026\u0026 mv elasticsearch-$ELASTICSEARCH_VERSION /usr/share/elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -DH -s /sbin/nologin elasticsearch \u0026\u0026 chown -R elasticsearch:elasticsearch /usr/share/elasticsearch \u0026\u0026 sed -i -e '1 s?^#!/bin/bash?#!/bin/sh?g' /usr/share/elasticsearch/bin/elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/share/elasticsearch/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/share/elasticsearch"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for path in     ./data     ./logs     ./config     ./config/scripts   ; do     mkdir -p \"$path\";     chown -R elasticsearch:elasticsearch \"$path\";   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config",
            "./config"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chown elasticsearch:elasticsearch /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/share/elasticsearch/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9200",
            "9300"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "elasticsearch"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}