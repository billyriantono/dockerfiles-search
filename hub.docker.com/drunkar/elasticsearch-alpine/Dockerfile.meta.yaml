MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Maintainer: Drunkar <drunkars.p@gmail.com>
    Name: maintainer
  - CmdLine:
    - apk --update add tzdata &&     cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
      &&     apk del tzdata &&     rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - '{     echo ''#!/bin/sh'';     echo ''set -e'';     echo;     echo ''dirname
      "$(dirname "$(readlink -f "$(which javac || which java)")")"'';   } > /usr/local/bin/docker-java-home   &&
      chmod +x /usr/local/bin/docker-java-home'
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u111
    Name: env
  - Env:
    - Key: JAVA_ALPINE_VERSION
      Value: 8.111.14-r0
    Name: env
  - CmdLine:
    - set -x   && apk add --no-cache     openjdk8="$JAVA_ALPINE_VERSION"   && [ "$JAVA_HOME"
      = "$(docker-java-home)" ]
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - apk --no-cache add curl && curl -o /usr/local/bin/gosu -sSL "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64"
      && chmod +x /usr/local/bin/gosu && gosu nobody true
    Name: run
    PrependShell: true
  - Env:
    - Key: ELASTICSEARCH_VERSION
      Value: 5.0.2
    Name: env
  - CmdLine:
    - curl https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$ELASTICSEARCH_VERSION.tar.gz
      -o elasticsearch-$ELASTICSEARCH_VERSION.tar.gz && tar -xzf elasticsearch-$ELASTICSEARCH_VERSION.tar.gz
      && rm elasticsearch-$ELASTICSEARCH_VERSION.tar.gz && mv elasticsearch-$ELASTICSEARCH_VERSION
      /usr/share/elasticsearch
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser -DH -s /sbin/nologin elasticsearch && chown -R elasticsearch:elasticsearch
      /usr/share/elasticsearch && sed -i -e '1 s?^#!/bin/bash?#!/bin/sh?g' /usr/share/elasticsearch/bin/elasticsearch
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/elasticsearch/bin:$PATH
    Name: env
  - Name: workdir
    Path: /usr/share/elasticsearch
  - CmdLine:
    - set -ex   && for path in     ./data     ./logs     ./config     ./config/scripts   ;
      do     mkdir -p "$path";     chown -R elasticsearch:elasticsearch "$path";   done
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - ./config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chown elasticsearch:elasticsearch /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /usr/share/elasticsearch/data
  - Name: expose
    Ports:
    - "9200"
    - "9300"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - elasticsearch
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
