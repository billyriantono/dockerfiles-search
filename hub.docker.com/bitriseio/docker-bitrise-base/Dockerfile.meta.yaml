MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '"en_US.UTF-8"'
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: '"en_US.UTF-8"'
    Name: env
  - Env:
    - Key: LC_ALL
      Value: '"en_US.UTF-8"'
    Name: env
  - Env:
    - Key: CI
      Value: '"true"'
    Name: env
  - Env:
    - Key: BITRISE_IO
      Value: '"true"'
    Name: env
  - Env:
    - Key: BITRISE_SOURCE_DIR
      Value: '"/bitrise/src"'
    Name: env
  - Env:
    - Key: BITRISE_BRIDGE_WORKDIR
      Value: '"/bitrise/src"'
    Name: env
  - Env:
    - Key: BITRISE_DEPLOY_DIR
      Value: '"/bitrise/deploy"'
    Name: env
  - Env:
    - Key: BITRISE_CACHE_DIR
      Value: '"/bitrise/cache"'
    Name: env
  - CmdLine:
    - mkdir -p /bitrise/src
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /bitrise/deploy
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /bitrise/cache
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /bitrise/prep
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /bitrise/prep
  - CmdLine:
    - apt-get update -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y install git mercurial curl wget rsync
      sudo expect
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y install python
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y install unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y install zip
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y install tree
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential zlib1g-dev
      libssl-dev libreadline6-dev libyaml-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q http://cache.ruby-lang.org/pub/ruby/ruby-2.2.4.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xvzf ruby-2.2.4.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ruby-2.2.4 && ./configure --prefix=/usr/local && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf ruby-2.2.4
    Name: run
    PrependShell: true
  - CmdLine:
    - rm ruby-2.2.4.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler --no-document
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://storage.googleapis.com/golang/go1.6.2.linux-amd64.tar.gz -O
      go-bins.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -C /usr/local -xvzf go-bins.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - rm go-bins.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/go/bin
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 755 "$GOPATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb https://apt.dockerproject.org/repo ubuntu-trusty main' > /etc/apt/sources.list.d/docker.list
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get purge lxc-docker*
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-cache policy docker-engine
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y linux-image-extra-`uname -r`
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -y docker-engine=1.10.3-0~trusty
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL https://github.com/docker/compose/releases/download/1.6.2/docker-compose-`uname
      -s`-`uname -m` > /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-compose --version
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL https://github.com/bitrise-io/bitrise/releases/download/1.3.4/bitrise-$(uname
      -s)-$(uname -m) > /usr/local/bin/bitrise
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/bitrise
    Name: run
    PrependShell: true
  - CmdLine:
    - bitrise setup --minimal
    Name: run
    PrependShell: true
  - CmdLine:
    - envman -version
    Name: run
    PrependShell: true
  - CmdLine:
    - stepman -version
    Name: run
    PrependShell: true
  - CmdLine:
    - stepman setup -c https://github.com/bitrise-io/bitrise-steplib.git
    Name: run
    PrependShell: true
  - CmdLine:
    - stepman update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $BITRISE_SOURCE_DIR
  - Env:
    - Key: BITRISE_DOCKER_REV_NUMBER_BASE
      Value: "2016_05_14_1"
    Name: env
  - CmdLine:
    - bitrise --version
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
