MetaArgs: null
Stages:
- As: builder
  BaseName: golang
  Commands:
  - Key: HTTP_PROXY
    Name: arg
    Value: '"$HTTP_PROXY"'
  - Key: HTTPS_PROXY
    Name: arg
    Value: '"$HTTPS_PROXY"'
  - Env:
    - Key: GO_GRPC_ECHO_HOME
      Value: '"/go_grpc_echo"'
    Name: env
  - Env:
    - Key: HTTP_PROXY
      Value: '"$HTTP_PROXY"'
    Name: env
  - Env:
    - Key: HTTPS_PROXY
      Value: '"$HTTPS_PROXY"'
    Name: env
  - Env:
    - Key: CGO_ENABLED
      Value: '"0"'
    Name: env
  - Name: workdir
    Path: $GO_GRPC_ECHO_HOME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '"build/certs/*.crt"'
    - '"/usr/local/share/ca-certificates"'
  - CmdLine:
    - rm -f "/usr/local/share/ca-certificates/empty.crt"
    Name: run
    PrependShell: true
  - CmdLine:
    - update-ca-certificates
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go.mod
    - $GO_GRPC_ECHO_HOME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go.sum
    - $GO_GRPC_ECHO_HOME
  - CmdLine:
    - go mod download
    Name: run
    PrependShell: true
  - CmdLine:
    - gobuilder version -c ">=0.2.1" >/dev/null 2>&1 || go get -v "github.com/tsaikd/gobuilder"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $GO_GRPC_ECHO_HOME
  - CmdLine:
    - gobuilder
    Name: run
    PrependShell: true
  From:
    Image: golang
  Name: builder
  Platform: ""
  SourceCode: FROM golang as builder
- BaseName: alpine
  Commands:
  - Name: expose
    Ports:
    - "8080"
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - '"/go_grpc_echo/go-grpc-echo"'
    - '"/usr/local/bin/grpc-echo"'
  - CmdLine:
    - chmod +x "/usr/local/bin/grpc-echo"
    Name: run
    PrependShell: true
  - CmdLine:
    - grpc-echo server
    Name: cmd
    PrependShell: true
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
