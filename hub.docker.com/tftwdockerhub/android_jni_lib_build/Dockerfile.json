{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Teng Fu \u003cteng.fu@teleware.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         build-essential         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libpng12-dev         libzmq3-dev         pkg-config         python-dev         rsync         software-properties-common         unzip         zip         zlib1g-dev         wget         curl         git         file         \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_11.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --no-install-recommends -y     nodejs     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update --fix-missing \u0026\u0026 apt-get install -y wget bzip2 ca-certificates     libglib2.0-0 libxext6 libsm6 libxrender1     git mercurial subversion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet https://repo.anaconda.com/archive/Anaconda3-5.2.0-Linux-x86_64.sh -O ~/anaconda.sh \u0026\u0026     /bin/bash ~/anaconda.sh -b -p /opt/conda \u0026\u0026     rm ~/anaconda.sh \u0026\u0026     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh \u0026\u0026     echo \". /opt/conda/etc/profile.d/conda.sh\" \u003e\u003e ~/.bashrc \u0026\u0026     echo \"conda activate base\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"startup --batch\" \u003e\u003e/etc/bazel.bazelrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\"     \u003e\u003e/etc/bazel.bazelrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BAZEL_VERSION",
              "Value": "0.20.0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "mkdir /bazel \u0026\u0026     cd /bazel \u0026\u0026     curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \u0026\u0026     curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE \u0026\u0026     chmod +x bazel-*.sh \u0026\u0026     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \u0026\u0026     cd / \u0026\u0026     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --no-install-recommends -y     bsdtar     openssl     locales     net-tools     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CODE_VERSION",
              "Value": "\"1.696-vsc1.33.0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sL https://github.com/codercom/code-server/releases/download/${CODE_VERSION}/code-server${CODE_VERSION}-linux-x64.tar.gz | tar --strip-components=1 -zx -C /usr/local/bin code-server${CODE_VERSION}-linux-x64/code-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "VSCODE_EXTENSIONS",
              "Value": "\"/root/.vscode/extensions\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${VSCODE_EXTENSIONS}/cpptools     \u0026\u0026 curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-vscode/vsextensions/cpptools/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/cpptools extension"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --no-install-recommends -y     default-jdk     default-jre"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${VSCODE_EXTENSIONS}/vscode-java-pack     \u0026\u0026 curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vscjava/vsextensions/vscode-java-pack/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/vscode-java-pack extension"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install cmake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${VSCODE_EXTENSIONS}/cmake-tools     \u0026\u0026 curl -JLs --retry 5 https://marketplace.visualstudio.com/_apis/public/gallery/publishers/vector-of-bool/vsextensions/cmake-tools/latest/vspackage | bsdtar --strip-components=1 -xf - -C ${VSCODE_EXTENSIONS}/cmake-tools extension"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_COMPILE_SDK",
              "Value": "\"27\""
            },
            {
              "Key": "ANDROID_BUILD_TOOLS",
              "Value": "\"28.0.3\""
            },
            {
              "Key": "ANDROID_SDK_TOOLS_REV",
              "Value": "\"4333796\""
            },
            {
              "Key": "ANDROID_CMAKE_REV",
              "Value": "\"3.6.4111459\""
            },
            {
              "Key": "ANDROID_CMAKE_REV_3_10",
              "Value": "\"3.10.2.4988404\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${ANDROID_HOME}/platform-tools/:${ANDROID_NDK_HOME}:${ANDROID_HOME}/ndk-bundle:${ANDROID_HOME}/tools/bin/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${ANDROID_HOME}     \u0026\u0026 wget --quiet --output-document=${ANDROID_HOME}/android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS_REV}.zip     \u0026\u0026 unzip -qq ${ANDROID_HOME}/android-sdk.zip -d ${ANDROID_HOME}     \u0026\u0026 rm ${ANDROID_HOME}/android-sdk.zip     \u0026\u0026 mkdir -p $HOME/.android     \u0026\u0026 echo 'count=0' \u003e $HOME/.android/repositories.cfg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | sdkmanager --licenses \u003e /dev/null     \u0026\u0026 yes | sdkmanager --update     \u0026\u0026 yes | sdkmanager 'tools'     \u0026\u0026 yes | sdkmanager 'platform-tools'     \u0026\u0026 yes | sdkmanager 'build-tools;'$ANDROID_BUILD_TOOLS     \u0026\u0026 yes | sdkmanager 'platforms;android-'$ANDROID_COMPILE_SDK     \u0026\u0026 yes | sdkmanager 'platforms;android-28'     \u0026\u0026 yes | sdkmanager 'extras;android;m2repository'     \u0026\u0026 yes | sdkmanager 'extras;google;google_play_services'     \u0026\u0026 yes | sdkmanager 'extras;google;m2repository'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | sdkmanager 'cmake;'$ANDROID_CMAKE_REV        yes | sdkmanager --channel=3 --channel=1 'cmake;'$ANDROID_CMAKE_REV_3_10     \u0026\u0026 yes | sdkmanager 'ndk-bundle'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Name": "expose",
          "Ports": [
            "6006"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "code-server",
            "-N",
            "-p",
            "8888",
            "-e",
            "/root/.vscode/extensions"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}