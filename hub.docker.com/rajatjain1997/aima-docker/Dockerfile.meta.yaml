MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - apt-get update &&     apt-get install -y         bzip2         build-essential         cmake         curl         default-jre         git         openmpi-bin         tar         wget         zip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/.
    - /home/usr/bin
  - CmdLine:
    - for setup in /home/usr/bin/*; do chmod +x $setup && $setup; done &&     ldconfig
      &&     rm -rf /home/usr/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "root:aima" | chpasswd &&     groupadd -g 999 grp &&     useradd -r -u
      999 -g grp usr &&     cp /root/.bashrc /home/usr &&     echo "source /home/usr/.bashprofile"
      >> /home/usr/.bashrc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/usr
  - CmdLine:
    - wget "https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"         -O
      /tmp/miniconda.sh &&     bash /tmp/miniconda.sh -b -p /opt/miniconda3 &&     /opt/miniconda3/bin/conda
      update -n base -c defaults conda &&     /opt/miniconda3/bin/conda install nb_conda
      &&     chown -R usr /opt/miniconda3 &&     rm -f /tmp/miniconda.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/aimacode/aima-python.git /home/usr/aima-python
      &&     /opt/miniconda3/bin/pip install -r /home/usr/aima-python/requirements.txt
      &&     (cd aima-python &&     git submodule init &&     git submodule update)
      &&     rm -rf /home/usr/aima-python/.git
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /home/usr
  - CmdLine:
    - ln -s /home/usr/src/docker-introduction.ipynb /home/usr/introduction.ipynb &&     chown
      -R usr /home/usr &&     rm -rf /home/usr/cpu /home/usr/gpu /home/usr/bin
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - cpu/envs/.
    - /home/usr/envs
  - CmdLine:
    - for env in /home/usr/envs/*; do /opt/miniconda3/bin/conda env create -f $env;
      done &&     rm -rf /home/usr/envs
    Name: run
    PrependShell: true
  - Name: user
    User: usr:grp
  - Env:
    - Key: TERM
      Value: xterm-256color
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - /bin/bash
    - -c
    - source /home/usr/.bashprofile && /opt/miniconda3/bin/jupyter notebook --NotebookApp.token=''
      --NotebookApp.password='' --no-browser --ip=0.0.0.0
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
