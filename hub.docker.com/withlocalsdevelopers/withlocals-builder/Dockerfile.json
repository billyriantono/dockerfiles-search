{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jpetazzo/dind",
      "SourceCode": "FROM jpetazzo/dind",
      "Platform": "",
      "From": {
        "Image": "jpetazzo/dind"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y software-properties-common python-setuptools rlwrap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen $LANG"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:openjdk-r/ppa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y openjdk-8-jdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "export JAVA_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SCALA_VERSION",
              "Value": "2.11.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SBT_VERSION",
              "Value": "0.13.12"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsL http://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz | tar xfz - -C /root/ \u0026\u0026   echo \u003e\u003e /root/.bashrc \u0026\u0026   echo 'export PATH=~/scala-$SCALA_VERSION/bin:$PATH' \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o sbt-$SBT_VERSION.deb http://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb \u0026\u0026   dpkg -i sbt-$SBT_VERSION.deb \u0026\u0026   rm sbt-$SBT_VERSION.deb \u0026\u0026   apt-get update \u0026\u0026   apt-get  install  -y sbt \u0026\u0026   sbt sbtVersion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_6.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g pangyp \u0026\u0026 ln -s $(which pangyp) $(dirname $(which pangyp))/node-gyp \u0026\u0026 npm cache clear \u0026\u0026 node-gyp configure || echo \"\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get upgrade -y --force-yes  \u0026\u0026 rm -rf /var/lib/apt/lists/*;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install GitPython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install boto"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://bootstrap.pypa.io/get-pip.py | python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g webpack gulp grunt karma bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g phantomjs-prebuilt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        }
      ]
    }
  ]
}