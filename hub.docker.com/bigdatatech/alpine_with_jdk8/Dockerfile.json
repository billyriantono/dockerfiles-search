{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "bigdatatech/alpine_linux",
      "SourceCode": "FROM bigdatatech/alpine_linux",
      "Platform": "",
      "From": {
        "Image": "bigdatatech/alpine_linux"
      },
      "Commands": [
        {
          "Maintainer": "sandeep \u003cbigdatatechcomputing@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "ALPINE_GLIBC_BASE_URL=\"https://github.com/andyshinn/alpine-pkg-glibc/releases/download\" \u0026\u0026 ALPINE_GLIBC_PACKAGE_VERSION=\"2.23-r1\" \u0026\u0026 ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026 ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026 ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026 apk add --no-cache --virtual=build-dependencies wget ca-certificates \u0026\u0026 wget --no-check-certificate \"https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub\" -O \"/etc/apk/keys/andyshinn.rsa.pub\" \u0026\u0026 wget --no-check-certificate \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026 echo \"[!] Adding packages\" \u0026\u0026 apk add --allow-untrusted --no-cache \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026 rm \"/etc/apk/keys/andyshinn.rsa.pub\" \u0026\u0026 /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true \u0026\u0026 echo \"export LANG=C.UTF-8\" \u003e /etc/profile.d/locale.sh \u0026\u0026 apk del glibc-i18n \u0026\u0026 apk del build-dependencies \u0026\u0026 rm \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "install_java_8.sh",
            "/tmp/install_java_8.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tmp/*.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/tmp/install_java_8.sh  \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/opt/jdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${JAVA_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "java",
            "-version"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apk add --update python python-dev py-pip build-base \u0026\u0026 pip install virtualenv \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python -V"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add autoconf \u0026\u0026 apk add make \u0026\u0026 apk add automake"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}