{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "postgres:latest",
      "SourceCode": "FROM postgres:latest",
      "Platform": "",
      "From": {
        "Image": "postgres:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PG_VER",
              "Value": "10"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y postgresql-plpython-${PG_VER} postgresql-${PG_VER}-plr \u0026\u0026   apt-get install -y postgresql-${PG_VER}-python3-multicorn \u0026\u0026   apt-get install -y postgresql-${PG_VER}-plsh \u0026\u0026   apt-get install -y postgresql-${PG_VER}-pldebugger \u0026\u0026   apt-get install -y postgresql-${PG_VER}-jsquery \u0026\u0026   apt-get install -y python3-setuptools \u0026\u0026   apt-get install -y git curl ssl-cert \u0026\u0026   git clone https://github.com/Mikulas/pg-es-fdw /tmp/pg-es-fdw \u0026\u0026   cd /tmp/pg-es-fdw \u0026\u0026   python3 setup.py install \u0026\u0026   cd - \u0026\u0026   rm -rf /tmp/pg-es-fdw \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint-initdb.d",
            "/docker-entrypoint-initdb.d"
          ]
        }
      ]
    }
  ]
}