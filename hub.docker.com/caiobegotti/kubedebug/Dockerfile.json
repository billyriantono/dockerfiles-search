{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 \tapt-get install -y \tdnsutils \tpostgresql-client \tiputils-ping \tpython-pip \tpython-pymongo \tpython-setuptools \tmongodb-clients \tmongo-tools \topenjdk-11-jre-headless \tcurl \tlynx \tnmap \tless \ttelnet \ttcpdump \tprocps \tstrace \tlsof \ttraceroute \tjq \tnetcat-openbsd \tnet-tools \twget \tkafkacat \tpython-confluent-kafka \tvim \tunzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install cassandra-driver cqlsh \t\u0026\u0026 mkdir -p /root/.cassandra/ \t\u0026\u0026 echo -e \"[cql]\\nversion=3.4.4\" \u003e /root/.cassandra/cqlshrc \t\u0026\u0026 rm -rf /root/.cache/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/protocolbuffers/protobuf/releases/download/v3.10.0/protoc-3.10.0-linux-x86_64.zip -O protoc.zip \t\u0026\u0026 unzip protoc.zip -d /usr/local/ \t\u0026\u0026 rm -rf protoc.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://releases.hashicorp.com/vault/1.1.3/vault_1.1.3_linux_amd64.zip -O - | gunzip - \u003e vault \u0026\u0026 chmod +x vault"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://ftp.unicamp.br/pub/apache/kafka/2.3.0/kafka_2.12-2.3.0.tgz -O - | tar zxv -C /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/pressly/goose/releases/download/v2.6.0/goose-linux64 -O /usr/local/bin/goose \t\u0026\u0026 chmod +x /usr/local/bin/goose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CQLSH_NO_BUNDLED",
              "Value": "\"true\""
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}