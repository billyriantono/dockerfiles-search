MetaArgs: null
Stages:
- BaseName: kissjared/docker-alpine-base
  Commands:
  - Maintainer: weiboyi lijie1@weiboyi.com
    Name: maintainer
  - Env:
    - Key: APP_ROOT
      Value: '"/opt"'
    - Key: XDEBUG_URL
      Value: '"https://xdebug.org/files/xdebug-2.5.0.tgz"'
    - Key: REDIS_URL
      Value: '"http://pecl.php.net/get/redis-3.1.2.tgz"'
    - Key: MQC_URL
      Value: '"https://github.com/alanxz/rabbitmq-c/releases/download/v0.8.0/rabbitmq-c-0.8.0.tar.gz"'
    - Key: MQ_URL
      Value: '"http://pecl.php.net/get/amqp-1.9.0.tgz"'
    Name: env
  - CmdLine:
    - PHP_CONFIG="--with-php-config=/usr/bin/php-config5"     MQC_PATH="/usr/local/rabbitmq-c-0.8.0"     &&
      apk add --update --no-cache             wget             pcre-dev             build-base             autoconf             libtool             openssl             openssl-dev             supervisor             mysql-client             nginx             php5-fpm             php5-mcrypt             php5-dev             php5-soap             php5-openssl             php5-gmp             php5-pdo_odbc             php5-json             php5-dom             php5-pdo             php5-zip             php5-mysql             php5-mysqli             php5-sqlite3             php5-bcmath             php5-gd             php5-pdo_mysql             php5-pdo_sqlite             php5-gettext             php5-xmlreader             php5-xmlrpc             php5-bz2             php5-mssql             php5-iconv             php5-pdo_dblib             php5-curl             php5-ctype             php5-odbc             php5-intl             php5-opcache             php5-phar             php5-xml             php5-posix      &&
      ln -s /usr/bin/php5 /usr/bin/php     && ln -s /usr/bin/phpize5 /usr/bin/phpize     &&
      cd /mnt     && for URL in            $XDEBUG_URL            $REDIS_URL            $MQC_URL            $MQ_URL        ;
      do            wget -qO- --no-check-certificate "$URL" | tar xvz -C /mnt/;        done     &&
      cd redis-3.1.2     && /usr/bin/phpize5     && ./configure $PHP_CONFIG     &&
      make     && make install     && cd /mnt     && cd xdebug-2.5.0     && /usr/bin/phpize5     &&
      ./configure $PHP_CONFIG     && make     && make install     && cd /mnt     &&
      cd rabbitmq-c-0.8.0     && ./configure --prefix=$MQC_PATH     && make     &&
      make install     && cd /mnt     && cd amqp-1.9.0     && /usr/bin/phpize5     &&
      ./configure $PHP_CONFIG -with-amqp --with-librabbitmq-dir=$MQC_PATH     && make     &&
      make install     && mkdir /etc/supervisor.d     && adduser -D -u 1000 -g 'www'
      www     && apk del --purge             *-dev             build-base             autoconf             libtool     &&
      rm -fr /usr/include/php     && rm -fr /usr/lib/php/build     && rm -fr /usr/lib/php5/modules/*.a     &&
      rm -fr /var/cache/apk/*     && rm -fr /tmp/*     && rm -fr /usr/share/man     &&
      rm -fr /mnt/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${APP_ROOT}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/mime.types
    - /etc/nginx/mime.types
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/nginx/conf.d/*
    - /etc/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php/php-fpm.conf
    - /etc/php5/php-fpm.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php/php.ini
    - /etc/php5/php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/supervisord.conf
    - /etc/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/supervisor.d/*
    - /etc/supervisor.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - www/*
    - /var/www/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./startup.sh
    - /opt/
  - CmdLine:
    - chmod +x /opt/startup.sh && chown www:www /var/www -R
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: volume
    Volumes:
    - /var/www
  - CmdLine:
    - /opt/startup.sh
    Name: cmd
    PrependShell: false
  From:
    Image: kissjared/docker-alpine-base
  Name: ""
  Platform: ""
  SourceCode: FROM kissjared/docker-alpine-base
