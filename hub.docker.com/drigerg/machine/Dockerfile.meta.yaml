MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Pradeep Kumar A.V. <pradeepkumar1025@gmail.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y     vim     git     curl     wget     nano     cmake     unzip     pkg-config     imagemagick     build-essential
      > /dev/null
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     espeak     libasound-dev     portaudio19-dev     libportaudio2     libportaudiocpp0
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - Env:
    - Key: LB_LIBRARY_PATH
      Value: /opt/conda/lib:$LB_LIBRARY_PATH
    Name: env
  - CmdLine:
    - curl -Ls https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      -o /tmp/install-miniconda.sh &&     /bin/bash /tmp/install-miniconda.sh -b -p
      /opt/conda &&     conda update --all -y
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y bzip2 glib readline mkl openblas numpy scipy hdf5     pillow
      matplotlib cython pandas gensim protobuf     lmdb leveldb boost glog gflags
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pydot_ng nnpack h5py scikit-learn scikit-image &&     python -c
      'import h5py;h5py.run_tests()'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libgtk2.0-dev > /dev/null
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y -c menpo opencv3 &&     python -c "import cv2;print(cv2.__version__)"
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -q jupyter jupyterlab &&     jupyter --version
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 https://github.com/tensorflow/tensorflow.git /usr/src/tensorflow
      &&     pip install -q tensorflow
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install tflearn
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install flask click pyyaml
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - etc/machine
    - /etc/machine
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./
    - /machine
  - CmdLine:
    - pip install --upgrade /machine/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/tmp/working"'
  - CmdLine:
    - /bin/bash
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
