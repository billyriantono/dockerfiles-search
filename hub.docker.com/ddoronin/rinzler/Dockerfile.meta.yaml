MetaArgs: null
Stages:
- BaseName: mhart/alpine-node:10
  Commands:
  - CmdLine:
    - apk add --no-cache make gcc g++ python     && npm i lerna -g
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - yarn.lock
    - ./
  - CmdLine:
    - yarn
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ./
  - CmdLine:
    - yarn     && (cd packages/rinzler-vue && yarn build)
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir packages/rinzler-server/www     && cp -r packages/rinzler-vue/dist/* packages/rinzler-server/www     &&
      (cd packages/rinzler-server && yarn compile)     && rm -rf node_modules     &&
      rm -rf packages/rinzler-vue     && rm -rf packages/rinzler-server/node_modules     &&
      rm -rf packages/rinzler-server/src     && yarn install --prod
    Name: run
    PrependShell: true
  From:
    Image: mhart/alpine-node:10
  Name: ""
  Platform: ""
  SourceCode: FROM mhart/alpine-node:10
- BaseName: mhart/alpine-node:10
  Commands:
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /app
    - /app
  - Name: workdir
    Path: /app
  - Env:
    - Key: TS_NODE_TRANSPILE_ONLY
      Value: "true"
    - Key: PORT
      Value: "80"
    - Key: MONGO_URL
      Value: mongodb://host.docker.internal:27017
    Name: env
  - Name: expose
    Ports:
    - "27017"
    - "80"
  - CmdLine:
    - cd ./packages/rinzler-server && node ./dist/server.js
    Name: cmd
    PrependShell: true
  From:
    Image: mhart/alpine-node:10
  Name: ""
  Platform: ""
  SourceCode: FROM mhart/alpine-node:10
