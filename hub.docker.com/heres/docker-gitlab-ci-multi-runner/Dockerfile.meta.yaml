MetaArgs: null
Stages:
- BaseName: gitlab/dind:latest
  Commands:
  - Maintainer: Firef0x <Firefgx {aT} gmail.com>
    Name: maintainer
  - Env:
    - Key: GITLAB_CI_MULTI_RUNNER_VERSION
      Value: 1.3.0
    - Key: GITLAB_CI_MULTI_RUNNER_USER
      Value: gitlab_ci_multi_runner
    - Key: GITLAB_CI_MULTI_RUNNER_HOME_DIR
      Value: '"/home/gitlab_ci_multi_runner"'
    - Key: DOCKER_DATA_DIR
      Value: '"/var/lib/docker"'
    - Key: GITLAB_CI_MULTI_RUNNER_DATA_DIR
      Value: '"${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/data"'
    - Key: PATH
      Value: ${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.nvm/bin:$PATH
    - Key: GOSU_VERSION
      Value: "1.9"
    Name: env
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E1DD270288B4E6030699E45FA1715D88E1DF1F24  &&
      echo 'APT::Install-Recommends 0;' >> /etc/apt/apt.conf.d/01norecommends  &&
      echo 'APT::Install-Suggests 0;' >> /etc/apt/apt.conf.d/01norecommends  && echo
      "deb http://ppa.launchpad.net/git-core/ppa/ubuntu trusty main" >> /etc/apt/sources.list  &&
      sed -i 's/^deb-src/# deb-src/g' /etc/apt/sources.list  && apt-get update  &&
      DEBIAN_FRONTEND=noninteractive apt-get install -y       vim wget net-tools ca-certificates
      unzip git-core openssh-client curl libapparmor1 build-essential libssl-dev  &&
      wget -O /usr/local/bin/gitlab-ci-multi-runner       https://gitlab-ci-multi-runner-downloads.s3.amazonaws.com/v${GITLAB_CI_MULTI_RUNNER_VERSION}/binaries/gitlab-ci-multi-runner-linux-amd64  &&
      chmod 0755 /usr/local/bin/gitlab-ci-multi-runner  && wget -O /usr/local/bin/gosu       https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)  && wget -O /usr/local/bin/gosu.asc       https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc  && export GNUPGHOME="$(mktemp -d)"  && gpg --keyserver
      ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4  &&
      gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu  && rm -r "$GNUPGHOME"
      /usr/local/bin/gosu.asc  && chmod +x /usr/local/bin/gosu  && gosu nobody true  &&
      adduser --disabled-login --gecos 'GitLab CI Runner' ${GITLAB_CI_MULTI_RUNNER_USER}  &&
      gosu ${GITLAB_CI_MULTI_RUNNER_USER} ln -sf ${GITLAB_CI_MULTI_RUNNER_DATA_DIR}/.ssh
      ${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.ssh  && gpasswd -a ${GITLAB_CI_MULTI_RUNNER_USER}
      docker  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - gosu ${GITLAB_CI_MULTI_RUNNER_USER} curl -sSL https://raw.githubusercontent.com/creationix/nvm/master/install.sh
      | NVM_DIR="${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.nvm" gosu ${GITLAB_CI_MULTI_RUNNER_USER}
      bash  && gosu ${GITLAB_CI_MULTI_RUNNER_USER} echo "[[ -s ${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.nvm/nvm.sh  ]]
      && . ${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.nvm/nvm.sh" >> ${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.bashrc  &&
      bash -c "echo \"[[ -s \${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.nvm/nvm.sh  ]] &&
      . \${GITLAB_CI_MULTI_RUNNER_HOME_DIR}/.nvm/nvm.sh\" >> /etc/profile.d/npm.sh"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /sbin/entrypoint.sh
  - CmdLine:
    - chmod 755 /sbin/entrypoint.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${GITLAB_CI_MULTI_RUNNER_DATA_DIR}
    - ${DOCKER_DATA_DIR}
  - Name: workdir
    Path: '"${GITLAB_CI_MULTI_RUNNER_HOME_DIR}"'
  - CmdLine:
    - /sbin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: gitlab/dind:latest
  Name: ""
  Platform: ""
  SourceCode: FROM gitlab/dind:latest
