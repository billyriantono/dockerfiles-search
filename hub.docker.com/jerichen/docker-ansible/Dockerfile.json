{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "JeriChen\u003cjeri.chen0110@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Taipei"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum update -y \u0026\u0026     yum install -y vim \u0026\u0026     yum install -y net-tools \u0026\u0026     yum install -y openssh-server \u0026\u0026     yum install -y openssh-clients \u0026\u0026     yum install -y python \u0026\u0026     yum install -y sudo \u0026\u0026     yum install -y curl \u0026\u0026     yum install -y wget \u0026\u0026     yum install -y epel-release \u0026\u0026     yum install -y bash-completion \u0026\u0026     yum install -y openssl \u0026\u0026     yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /usr/share/zoneinfo/Asia/Taipei /etc/localtime;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'root:password' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ssh-keygen -q -t rsa -b 2048 -f /etc/ssh/ssh_host_rsa_key -N ''"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ssh-keygen -q -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -N ''"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NOTVISIBLE",
              "Value": "\"in users profile\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"export VISIBLE=now\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd --create-home --shell /bin/bash       --password $(openssl passwd -1 password) master"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'master ALL=(ALL) NOPASSWD: ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://raw.githubusercontent.com/jerichen/docker-ansible/master/docker/files/ssh/id_rsa.pub       -O /tmp/authorized_keys \u0026\u0026       mkdir /home/master/.ssh \u0026\u0026       mv /tmp/authorized_keys /home/master/.ssh/ \u0026\u0026       chown -R master:master /home/master/.ssh/ \u0026\u0026       chmod 644 /home/master/.ssh/authorized_keys \u0026\u0026       chmod 700 /home/master/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "systemctl"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/sbin/sshd",
            "-D"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}