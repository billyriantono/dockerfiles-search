MetaArgs: null
Stages:
- BaseName: openjdk:8-jre-alpine
  Commands:
  - Env:
    - Key: JAVA_MIN_MEMORY
      Value: 256M
    - Key: JAVA_MAX_MEMORY
      Value: 512M
    - Key: GLIBC_VERSION
      Value: 2.27-r0
    - Key: GLIBC_REPO
      Value: https://github.com/sgerrand/alpine-pkg-glibc
    - Key: LANG
      Value: C.UTF-8
    - Key: XMAGE_DOCKER_SERVER_ADDRESS
      Value: '"0.0.0.0"'
    - Key: XMAGE_DOCKER_PORT
      Value: '"17171"'
    - Key: XMAGE_DOCKER_SEONDARY_BIND_PORT
      Value: '"17179"'
    - Key: XMAGE_DOCKER_MAX_SECONDS_IDLE
      Value: '"600"'
    - Key: XMAGE_DOCKER_AUTHENTICATION_ACTIVATED
      Value: '"false"'
    - Key: XMAGE_DOCKER_SERVER_NAME
      Value: '"mage-server"'
    - Key: XMAGE_DOCKER_ADMIN_PASSWORD
      Value: '"hunter2"'
    - Key: XMAGE_DOCKER_MAX_GAME_THREADS
      Value: '"10"'
    - Key: XMAGE_DOCKER_MIN_USERNAME_LENGTH
      Value: '"3"'
    - Key: XMAGE_DOCKER_MAX_USERNAME_LENGTH
      Value: '"14"'
    - Key: XMAGE_DOCKER_MIN_PASSWORD_LENGTH
      Value: '"8"'
    - Key: XMAGE_DOCKER_MAX_PASSWORD_LENGTH
      Value: '"100"'
    - Key: XMAGE_DOCKER_MAILGUN_API_KEY
      Value: '"X"'
    - Key: XMAGE_DOCKER_MAILGUN_DOMAIN
      Value: '"X"'
    Name: env
  - CmdLine:
    - set -ex &&     apk -U upgrade &&     apk add libstdc++ curl ca-certificates
      bash jq &&     for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION}
      glibc-i18n-${GLIBC_VERSION}; do curl -sSL ${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/${pkg}.apk
      -o /tmp/${pkg}.apk; done &&     apk add --allow-untrusted /tmp/*.apk &&     rm
      -v /tmp/*.apk &&     ( /usr/glibc-compat/bin/localedef --force --inputfile POSIX
      --charmap UTF-8 C.UTF-8 || true ) &&     echo "export LANG=C.UTF-8" > /etc/profile.d/locale.sh
      &&     /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /xmage
  - CmdLine:
    - curl --silent --show-error http://xmage.de/xmage/config.json | jq '.XMage.location'
      | xargs curl -# -L > xmage.zip  && unzip xmage.zip -x "mage-client*"  && rm
      xmage.zip  && apk del curl jq
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dockerStartServer.sh
    - /xmage/mage-server/
  - CmdLine:
    - chmod +x     /xmage/mage-server/startServer.sh     /xmage/mage-server/dockerStartServer.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "17171"
    - "17179"
  - Name: workdir
    Path: /xmage/mage-server
  - CmdLine:
    - ./dockerStartServer.sh
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8-jre-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jre-alpine
