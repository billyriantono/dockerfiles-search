{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "journey \"825193156@qq.com\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "version",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y install openjdk-8-jdk     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$JAVA_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026         apt-get -y install wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget https://www-us.apache.org/dist/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz  \u0026\u0026     tar -zxvf zookeeper-3.4.14.tar.gz  \u0026\u0026     mv zookeeper-3.4.14 zookeeper \u0026\u0026     rm -rf ./zookeeper-*tar.gz \u0026\u0026     mkdir -p /tmp/zookeeper \u0026\u0026     rm -rf /opt/zookeeper/conf/zoo_sample.cfg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/zookeeper/zoo.cfg",
            "/opt/zookeeper/conf"
          ]
        },
        {
          "Env": [
            {
              "Key": "ZK_HOME",
              "Value": "/opt/zookeeper"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$ZK_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget http://apache-mirror.rbc.ru/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz \u0026\u0026     tar -zxvf apache-maven-3.3.9-bin.tar.gz \u0026\u0026     mv apache-maven-3.3.9 maven \u0026\u0026     rm -rf ./apache-maven-*tar.gz \u0026\u0026     rm -rf /opt/maven/conf/settings.xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/maven/settings.xml",
            "/opt/maven/conf"
          ]
        },
        {
          "Env": [
            {
              "Key": "MAVEN_HOME",
              "Value": "/opt/maven"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$MAVEN_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget https://nodejs.org/download/release/v8.9.4/node-v8.9.4-linux-x64.tar.gz \u0026\u0026     tar -zxvf node-v8.9.4-linux-x64.tar.gz \u0026\u0026     mv node-v8.9.4-linux-x64 node \u0026\u0026     rm -rf ./node-v8.9.4-*tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_HOME",
              "Value": "/opt/node"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$NODE_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget https://github.com/analysys/EasyScheduler/archive/${version}.tar.gz \u0026\u0026     tar -zxvf ${version}.tar.gz \u0026\u0026     mv EasyScheduler-${version} easyscheduler_source \u0026\u0026     rm -rf ./${version}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/easyscheduler_source \u0026\u0026     mvn -U clean package assembly:assembly -Dmaven.test.skip=true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R 777 /opt/easyscheduler_source/escheduler-ui \u0026\u0026     cd /opt/easyscheduler_source/escheduler-ui \u0026\u0026     rm -rf /opt/easyscheduler_source/escheduler-ui/node_modules \u0026\u0026     npm install node-sass --unsafe-perm \u0026\u0026     npm install \u0026\u0026     npm run build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://cn.archive.ubuntu.com/ubuntu/ xenial main restricted universe multiverse\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"mysql-server mysql-server/root_password password root\" | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"mysql-server mysql-server/root_password_again password root\" | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026         apt-get -y install mysql-server-5.7 \u0026\u0026         mkdir -p /var/lib/mysql \u0026\u0026         mkdir -p /var/run/mysqld \u0026\u0026         mkdir -p /var/log/mysql \u0026\u0026         chown -R mysql:mysql /var/lib/mysql \u0026\u0026         chown -R mysql:mysql /var/run/mysqld \u0026\u0026         chown -R mysql:mysql /var/log/mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"$ a [client]\\n\\n[mysql]\\n\\n[mysqld]\"  /etc/mysql/my.cnf \u0026\u0026         sed -i -e \"s/\\(\\[client\\]\\)/\\1\\ndefault-character-set = utf8/g\" /etc/mysql/my.cnf \u0026\u0026         sed -i -e \"s/\\(\\[mysql\\]\\)/\\1\\ndefault-character-set = utf8/g\" /etc/mysql/my.cnf \u0026\u0026         sed -i -e \"s/\\(\\[mysqld\\]\\)/\\1\\ninit_connect='SET NAMES utf8'\\ncharacter-set-server = utf8\\ncollation-server=utf8_general_ci\\nbind-address = 0.0.0.0/g\" /etc/mysql/my.cnf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y nginx \u0026\u0026   rm -rf /var/lib/apt/lists/* \u0026\u0026   echo \"\\ndaemon off;\" \u003e\u003e /etc/nginx/nginx.conf \u0026\u0026   chown -R www-data:www-data /var/lib/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/escheduler \u0026\u0026     tar -zxvf /opt/easyscheduler_source/target/escheduler-${version}.tar.gz -C /opt/escheduler \u0026\u0026     rm -rf /opt/escheduler/conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/escheduler/conf",
            "/opt/escheduler/conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./conf/nginx/default.conf",
            "/etc/nginx/conf.d"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "12345",
            "2181",
            "2888",
            "3306",
            "3888",
            "80",
            "8888"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get -y install sudo \u0026\u0026   apt-get -y install python \u0026\u0026   apt-get -y install vim \u0026\u0026   apt-get -y install iputils-ping \u0026\u0026   apt-get -y install net-tools \u0026\u0026   apt-get -y install openssh-server \u0026\u0026   apt-get -y install python-pip \u0026\u0026   pip install kazoo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./startup.sh",
            "/root/startup.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /root/startup.sh \u0026\u0026   chmod +x /opt/escheduler/script/create_escheduler.sh \u0026\u0026   chmod +x /opt/zookeeper/bin/zkServer.sh \u0026\u0026   chmod +x /opt/escheduler/bin/escheduler-daemon.sh \u0026\u0026   rm -rf /bin/sh \u0026\u0026   ln -s /bin/bash /bin/sh \u0026\u0026   mkdir -p /tmp/xls"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/root/startup.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}