{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Maintainer": "Tony.Shao \u003cxiocode@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SS_VERSION",
              "Value": "v2.5.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SS_URL",
              "Value": "https://github.com/shadowsocks/shadowsocks-libev.git"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SS_DIR",
              "Value": "shadowsocks-libev"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SS_DEP",
              "Value": "pcre"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SS_BUILD_DEP",
              "Value": "git autoconf build-base curl libtool linux-headers openssl-dev asciidoc xmlto pcre-dev"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk --no-cache --update add $SS_DEP $SS_BUILD_DEP     \u0026\u0026 git clone $SS_URL     \u0026\u0026 cd $SS_DIR     \u0026\u0026 git checkout tags/$SS_VERSION     \u0026\u0026 ./configure     \u0026\u0026 make install     \u0026\u0026 cd ..     \u0026\u0026 rm -rf $SS_DIR     \u0026\u0026 apk del --purge $SS_BUILD_DEP     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SERVER_ADDR",
              "Value": "0.0.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVER_PORT",
              "Value": "8388"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PASSWORD",
              "Value": "1234567890"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "METHOD",
              "Value": "chacha20"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TIMEOUT",
              "Value": "3600"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DNS_ADDR",
              "Value": "8.8.8.8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$SERVER_PORT/tcp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "$SERVER_PORT/udp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}