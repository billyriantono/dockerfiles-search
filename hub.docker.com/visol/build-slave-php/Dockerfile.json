{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.0-cli",
      "SourceCode": "FROM php:7.0-cli",
      "Platform": "",
      "From": {
        "Image": "php:7.0-cli"
      },
      "Commands": [
        {
          "Maintainer": "Jonas Renggli \u003cjonas.renggli@visol.ch\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         git         wget         unzip         rsync         openssh-client     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildRequirements=\"libxml2-dev\"     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${buildRequirements}     \u0026\u0026 docker-php-ext-install soap     \u0026\u0026 apt-get purge -y ${buildRequirements}     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildRequirements=\"libpng-dev libjpeg-dev libfreetype6-dev\"     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${buildRequirements}     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/lib     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildRequirements=\"libicu-dev g++\"     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${buildRequirements}     \u0026\u0026 docker-php-ext-install intl     \u0026\u0026 apt-get purge -y ${buildRequirements}     \u0026\u0026 runtimeRequirements=\"libicu57\"     \u0026\u0026 apt-get install -y --auto-remove ${runtimeRequirements}     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildRequirements=\"zlib1g-dev\"     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${buildRequirements}     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 apt-get purge -y ${buildRequirements}     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://raw.githubusercontent.com/composer/getcomposer.org/76a7060ccb93902cd7576b67264ad91c8a2700e2/web/installer -O - -q | php -- --filename=composer --install-dir=/usr/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=~/.composer/vendor/bin:$PATH' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require \"squizlabs/php_codesniffer=*\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require \"hirak/prestissimo\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         gnupg     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_10.x | bash -     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y nodejs     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y yarn     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         ruby         ruby-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         automake         libtool     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 gem install compass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         build-essential         g++     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}