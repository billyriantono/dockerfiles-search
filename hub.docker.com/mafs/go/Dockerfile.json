{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /opt/oracle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "mafs/instantclient:mafsgo",
          "Name": "copy",
          "SourcesAndDest": [
            "/linux-instantclient",
            "/opt/oracle"
          ]
        },
        {
          "CmdLine": [
            "ln -s /opt/oracle/instantclient_12_2/libclntsh.so.12.1 /opt/oracle/instantclient_12_2/libclntsh.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NLS_LANG",
              "Value": "AMERICAN_AMERICA.US7ASCII"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/opt/oracle/instantclient_12_2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /usr/lib/oracle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "mafs/instantclient:mafsgo",
          "Name": "copy",
          "SourcesAndDest": [
            "/windows-instantclient",
            "/usr/lib/oracle"
          ]
        },
        {
          "Env": [
            {
              "Key": "PKG_CONFIG_PATH",
              "Value": "\"${GOPATH}/pkgconfig\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "pkgconfig",
            "${GOPATH}/pkgconfig"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026    apt-get install -y         software-properties-common         build-essential         jq         vim         zip         unzip         libaio1         zlib1g-dev         curl         pkg-config         openssh-client         gcc-mingw-w64         python         python-pip         shellcheck"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:git-core/ppa \u0026\u0026    apt-get update \u0026\u0026    apt-get install -y         git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o /usr/local/go1.12.3.linux-amd64.tar.gz https://dl.google.com/go/go1.12.3.linux-amd64.tar.gz \u0026\u0026    tar -C /usr/local -xzf /usr/local/go1.12.3.linux-amd64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/root/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${PATH}:/usr/local/go/bin:${GOPATH}/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "LATEST_TERRAFORM_VER=$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r -M '.current_version') \u0026\u0026    curl -L -o terraform.zip https://releases.hashicorp.com/terraform/${LATEST_TERRAFORM_VER}/terraform_${LATEST_TERRAFORM_VER}_linux_amd64.zip \u0026\u0026    unzip terraform.zip \u0026\u0026    mv terraform /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "LATEST_TFLINT_VER=$(curl -H 'Accept: application/json' -L -X GET -s \"https://github.com/wata727/tflint/releases/latest\" | jq -c --raw-output '.tag_name') \u0026\u0026    curl -L -o tflint.zip https://github.com/wata727/tflint/releases/download/${LATEST_TFLINT_VER}/tflint_linux_amd64.zip \u0026\u0026    unzip tflint.zip \u0026\u0026    mv tflint /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -x /usr/bin/dircolors \u0026\u0026    echo \"syntax off\" \u003e /root/.vimrc \u0026\u0026    echo \"alias ll='ls -alF'\" \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ~/.ssh/ \u0026\u0026    ssh-keyscan -H github.com \u003e\u003e ~/.ssh/known_hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${GOPATH}"
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}