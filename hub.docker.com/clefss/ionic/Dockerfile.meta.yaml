MetaArgs: null
Stages:
- BaseName: clefss/base:1.0
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Clefss <clefss@protonmail.com>"'
    Name: label
  - Env:
    - Key: ANDROID_SDK_URL
      Value: '"https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip"'
    - Key: GRADLE_VERSION
      Value: 5.6.2
    - Key: NODE_VERSION
      Value: 10.16.3
    - Key: CORDOVA_VERSION
      Value: 9.0.0
    - Key: IONIC_VERSION
      Value: 5.2.8
    - Key: YARN_VERSION
      Value: 1.17.3
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - set -x &&     buildDeps="unzip wget" &&     dpkg --add-architecture i386 &&     apt-get
      update -qq &&     apt-get upgrade -qq -y &&     apt-get install -qq -y ${buildDeps}
      ca-certificates libncurses5:i386 libstdc++6:i386 zlib1g:i386 --no-install-recommends
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /opt/java
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${JAVA_HOME}/bin
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - java-update-alternatives.sh
    - /tmp/java-update-alternatives.sh
  - CmdLine:
    - mkdir -p /opt/java &&     wget -O java.tar.gz -c https://www.dropbox.com/s/k3grov7q9z3bxyy/jdk-8u221-linux-x64.tar.gz?dl=1
      &&     tar -xf java.tar.gz -C /opt/java --strip-components=1 &&     chmod +x
      java-update-alternatives.sh &&     ./java-update-alternatives.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:/opt/gradle-${GRADLE_VERSION}/bin
    Name: env
  - CmdLine:
    - wget -O gradle-bin.zip https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip
      &&     unzip -d /opt gradle-bin.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_HOME
      Value: /opt/android
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/tools:${ANDROID_HOME}/build-tools
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - android-packages.sh
    - /tmp/android-packages.sh
  - CmdLine:
    - mkdir -p ${ANDROID_HOME} &&     wget -O tools.zip ${ANDROID_SDK_URL} &&     unzip
      -d ${ANDROID_HOME} tools.zip &&     mkdir -p /root/.android &&     echo "###
      User Sources for Android SDK Manager" >>/root/.android/repositories.cfg &&     chmod
      +x android-packages.sh &&     ./android-packages.sh &&     chmod a+x -R ${ANDROID_HOME}
      &&     chown -R root:root ${ANDROID_HOME}
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:/opt/node/bin
    Name: env
  - CmdLine:
    - mkdir -p /opt/node &&     wget -O node-linux-x64.tar.gz https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz
      &&     tar -xf node-linux-x64.tar.gz -C /opt/node --strip-components=1
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i -g cordova@${CORDOVA_VERSION} &&     cordova telemetry off
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i -g ionic@${IONIC_VERSION} &&     ionic config set -g daemon.updates false
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i -g yarn@${YARN_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&     apt-get purge -y --auto-remove
      ${buildDeps} &&     apt-get autoremove -y &&     apt-get clean
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Name: expose
    Ports:
    - "35729"
    - "8100"
  From:
    Image: clefss/base:1.0
  Name: ""
  Platform: ""
  SourceCode: FROM clefss/base:1.0
