MetaArgs: null
Stages:
- BaseName: debian:10.1
  Commands:
  - Labels:
    - Key: authors
      Value: '"Carmen Tawalika,Markus Neteler,Anika Bettge"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"tawalika@mundialis.de,neteler@mundialis.de,bettge@mundialis.de"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Key: PDAL_VERSION
    Name: arg
    Value: 1.8.0
  - Key: PROJ_VERSION
    Name: arg
    Value: 5.2.0
  - Key: PROJ_DATUMGRID_VERSION
    Name: arg
    Value: "1.8"
  - Key: LAZ_PERF_VERSION
    Name: arg
    Value: 1.3.0
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - apt-get update && apt-get upgrade -y &&     apt-get install -y --no-install-recommends
      --no-install-suggests     build-essential     bison     bzip2     cmake     curl     flex     g++     gcc     gdal-bin     git     libbz2-dev     libcairo2     libcairo2-dev     libcurl4-gnutls-dev     libfftw3-bin     libfftw3-dev     libfreetype6-dev     libgdal-dev     libgeos-dev     libgsl0-dev     libjpeg-dev     libjsoncpp-dev     libopenblas-base     libopenblas-dev     libnetcdf-dev     libncurses5-dev     libopenjp2-7     libopenjp2-7-dev     libpnglite-dev     libpq-dev     libpython3-all-dev     libsqlite3-dev     libtiff-dev     libzstd-dev     locales     make     mesa-common-dev     moreutils     ncurses-bin     netcdf-bin     python3     python3-dateutil     python3-dev     python3-magic     python3-numpy     python3-pil     python3-pip     python3-ply     python3-setuptools     python3-venv     software-properties-common     sqlite3     subversion     unzip     vim     wget     zip     zlib1g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - echo LANG="en_US.UTF-8" > /etc/default/locale
    Name: run
    PrependShell: true
  - CmdLine:
    - echo en_US.UTF-8 UTF-8 >> /etc/locale.gen && locale-gen
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  - CmdLine:
    - wget -q http://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz &&     tar
      xzf proj-${PROJ_VERSION}.tar.gz &&     cd /src/proj-${PROJ_VERSION}/ &&     wget
      -q http://download.osgeo.org/proj/proj-datumgrid-${PROJ_DATUMGRID_VERSION}.zip
      &&     cd nad &&     unzip ../proj-datumgrid-${PROJ_DATUMGRID_VERSION}.zip &&     cd
      .. &&     ./configure --prefix=/usr/ &&     make &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install cmake
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  - CmdLine:
    - wget -q https://github.com/hobu/laz-perf/archive/${LAZ_PERF_VERSION}.tar.gz
      -O laz-perf-${LAZ_PERF_VERSION}.tar.gz &&     tar -zxf laz-perf-${LAZ_PERF_VERSION}.tar.gz
      &&     cd laz-perf-${LAZ_PERF_VERSION} &&     mkdir build &&     cd build &&     cmake
      .. &&     make &&     make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  - CmdLine:
    - mkdir vdatum &&     cd vdatum &&     wget -q http://download.osgeo.org/proj/vdatum/usa_geoid2012.zip
      && unzip -j -u usa_geoid2012.zip -d /usr/share/proj;     wget -q http://download.osgeo.org/proj/vdatum/usa_geoid2009.zip
      && unzip -j -u usa_geoid2009.zip -d /usr/share/proj;     wget -q http://download.osgeo.org/proj/vdatum/usa_geoid2003.zip
      && unzip -j -u usa_geoid2003.zip -d /usr/share/proj;     wget -q http://download.osgeo.org/proj/vdatum/usa_geoid1999.zip
      && unzip -j -u usa_geoid1999.zip -d /usr/share/proj;     wget -q http://download.osgeo.org/proj/vdatum/vertcon/vertconc.gtx
      && mv vertconc.gtx /usr/share/proj;     wget -q http://download.osgeo.org/proj/vdatum/vertcon/vertcone.gtx
      && mv vertcone.gtx /usr/share/proj;     wget -q http://download.osgeo.org/proj/vdatum/vertcon/vertconw.gtx
      && mv vertconw.gtx /usr/share/proj;     wget -q http://download.osgeo.org/proj/vdatum/egm96_15/egm96_15.gtx
      && mv egm96_15.gtx /usr/share/proj;     wget -q http://download.osgeo.org/proj/vdatum/egm08_25/egm08_25.gtx
      && mv egm08_25.gtx /usr/share/proj;     cd .. &&     rm -rf vdatum
    Name: run
    PrependShell: true
  - Env:
    - Key: NUMTHREADS
      Value: "4"
    Name: env
  - Name: workdir
    Path: /src
  - CmdLine:
    - wget -q  https://github.com/PDAL/PDAL/releases/download/${PDAL_VERSION}/PDAL-${PDAL_VERSION}-src.tar.gz
      &&     tar xfz PDAL-${PDAL_VERSION}-src.tar.gz &&     cd /src/PDAL-${PDAL_VERSION}-src
      &&     mkdir build &&     cd build &&     cmake ..       -G "Unix Makefiles"       -DCMAKE_BUILD_TYPE=Release       -DCMAKE_INSTALL_PREFIX=/usr       -DCMAKE_C_COMPILER=gcc       -DCMAKE_CXX_COMPILER=g++       -DCMAKE_MAKE_PROGRAM=make       -DBUILD_PLUGIN_PYTHON=ON       -DBUILD_PLUGIN_CPD=OFF       -DBUILD_PLUGIN_GREYHOUND=ON       -DBUILD_PLUGIN_HEXBIN=ON       -DHEXER_INCLUDE_DIR=/usr/include/       -DBUILD_PLUGIN_NITF=OFF       -DBUILD_PLUGIN_ICEBRIDGE=ON       -DBUILD_PLUGIN_PGPOINTCLOUD=ON       -DBUILD_PGPOINTCLOUD_TESTS=OFF       -DBUILD_PLUGIN_SQLITE=ON       -DWITH_LASZIP=ON       -DWITH_LAZPERF=ON       -DWITH_TESTS=ON
      &&     make -j $NUMTHREADS &&     make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /src/grass_build/
  - Name: workdir
    Path: /src/grass_build
  - Env:
    - Key: MYCFLAGS
      Value: '"-O2 -std=gnu99 -m64"'
    Name: env
  - Env:
    - Key: MYLDFLAGS
      Value: '"-s"'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"/usr/local/lib"'
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '"$MYLDFLAGS"'
    Name: env
  - Env:
    - Key: CFLAGS
      Value: '"$MYCFLAGS"'
    Name: env
  - Env:
    - Key: CXXFLAGS
      Value: '"$MYCXXFLAGS"'
    Name: env
  - Env:
    - Key: GRASS_PYTHON
      Value: /usr/bin/python3
    Name: env
  - Env:
    - Key: NUMTHREADS
      Value: "4"
    Name: env
  - CmdLine:
    - make distclean || echo "nothing to clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - /src/grass_build/configure   --with-cxx   --enable-largefile   --with-proj --with-proj-share=/usr/share/proj   --with-gdal=/usr/bin/gdal-config   --with-geos   --with-sqlite   --with-cairo
      --with-cairo-ldflags=-lfontconfig   --with-freetype --with-freetype-includes="/usr/include/freetype2/"   --with-fftw   --with-postgres=yes
      --with-postgres-includes="/usr/include/postgresql"   --with-netcdf   --with-zstd   --with-bzlib   --with-pdal   --without-mysql   --without-odbc   --without-openmp   --without-ffmpeg   --without-opengl     &&
      make -j $NUMTHREADS     && make install && ldconfig
    Name: run
    PrependShell: true
  - Env:
    - Key: INTEL
      Value: '""'
    Name: env
  - Env:
    - Key: MYCFLAGS
      Value: '""'
    Name: env
  - Env:
    - Key: MYLDFLAGS
      Value: '""'
    Name: env
  - Env:
    - Key: MYCXXFLAGS
      Value: '""'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '""'
    Name: env
  - Env:
    - Key: LDFLAGS
      Value: '""'
    Name: env
  - Env:
    - Key: CFLAGS
      Value: '""'
    Name: env
  - Env:
    - Key: CXXFLAGS
      Value: '""'
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Env:
    - Key: LC_ALL
      Value: '"en_US.UTF-8"'
    Name: env
  - Env:
    - Key: GRASS_SKIP_MAPSET_OWNER_CHECK
      Value: "1"
    Name: env
  - CmdLine:
    - ln -sf `find /usr/local/bin -name "grass??" | sort | tail -n 1` /usr/local/bin/grass
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf `find /usr/local -type d -name "grass??" | sort | tail -n 1` /usr/local/grass
    Name: run
    PrependShell: true
  - CmdLine:
    - grass --tmp-location EPSG:4326 --exec g.version -rge &&     pdal --version &&     python3
      --version
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean -y
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /scripts
  - CmdLine:
    - pip3 install grass-session
    Name: run
    PrependShell: true
  - CmdLine:
    - grass --tmp-location EPSG:4326 --exec g.extension extension=r.in.pdal
    Name: run
    PrependShell: true
  - Env:
    - Key: GISBASE
      Value: '"/usr/local/grass/"'
    Name: env
  - Env:
    - Key: GRASSBIN
      Value: '"/usr/local/bin/grass"'
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: '"${PYTHONPATH}:$GISBASE/etc/python/"'
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"$LD_LIBRARY_PATH:$GISBASE/lib"'
    Name: env
  - Name: workdir
    Path: /tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/testdata/simple.laz
    - .
  - Name: workdir
    Path: /scripts
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/testdata/test_grass_session.py
    - .
  - CmdLine:
    - /usr/bin/python3 /scripts/test_grass_session.py
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /grassdb
  - Name: volume
    Volumes:
    - /grassdb
  From:
    Image: debian:10.1
  Name: ""
  Platform: ""
  SourceCode: FROM debian:10.1
