MetaArgs: null
Stages:
- As: build
  BaseName: ubuntu:16.04
  Commands:
  - Key: proxy
    Name: arg
    Value: ''''''
  - Env:
    - Key: PATH
      Value: /root/go/bin:${PATH}
    - Key: BAZEL_VER
      Value: '''0.23.0'''
    Name: env
  - CmdLine:
    - set -e   && if [ ! -z "${proxy}" ];then     sed -i 's/archive.ubuntu.com/mirrors.ustc.edu.cn/g'
      /etc/apt/sources.list &&     sed -i 's/security.ubuntu.com/mirrors.ustc.edu.cn/g'
      /etc/apt/sources.list;fi   && apt-get -y update && apt-get -y install jq git
      file pkg-config zip g++ zlib1g-dev unzip python openssl curl   && ${proxy}   &&
      curl -sL https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz | tar -xzv -C
      ~   && curl -L -o bazel-installer.sh https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VER}/bazel-${BAZEL_VER}-installer-linux-x86_64.sh   &&
      chmod +x bazel-installer.sh   && ./bazel-installer.sh --user && rm ./bazel-installer.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /v2ray-build
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - Name: workdir
    Path: /v2ray-build/src/v2ray.com/core
  - CmdLine:
    - sh
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - //release:all
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: build
  Platform: ""
  SourceCode: FROM ubuntu:16.04 as Build
