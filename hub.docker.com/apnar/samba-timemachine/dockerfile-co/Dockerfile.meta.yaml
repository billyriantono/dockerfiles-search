MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/apihackers/docker-pelican"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - CmdLine:
    - echo -e '@edge http://dl-cdn.alpinelinux.org/alpine/edge/main' >> /etc/apk/repositories     &&
      echo -e '@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update --no-cache add     bash     curl     gettext     gifsicle     imagemagick     libffi     libjpeg     libpng     libxml2     libxslt     pngquant     python3     yaml     zlib     &&
      python3 -m ensurepip --upgrade     && rm -r /usr/lib/python*/ensurepip
    Name: run
    PrependShell: true
  - Env:
    - Key: MOZJPEG_VERSION
      Value: 3.3.1
    Name: env
  - CmdLine:
    - apk --update --no-cache add --virtual build-dependencies     autoconf automake
      build-base pkgconf libtool nasm tar     && curl -L -O https://github.com/mozilla/mozjpeg/archive/v$MOZJPEG_VERSION.tar.gz     &&
      tar zxf v$MOZJPEG_VERSION.tar.gz     && cd mozjpeg-$MOZJPEG_VERSION     && autoreconf
      -fiv     && ./configure --prefix=/usr && make && make install     && cd ..     &&
      rm -fr mozjpeg-$MOZJPEG_VERSION     && rm -f v$MOZJPEG_VERSION.tar.gz     &&
      apk del build-dependencies
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.pip
    - /tmp/requirements.pip
  - CmdLine:
    - apk --no-cache add --virtual build-dependencies         python3-dev yaml-dev
      build-base libffi-dev libxml2-dev libxslt-dev    && pip3 install -r /tmp/requirements.pip     &&
      apk del build-dependencies     && rm -r /root/.cache
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
