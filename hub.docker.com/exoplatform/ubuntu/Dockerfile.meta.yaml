MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"eXo Platform <docker@exoplatform.com>"'
    Name: label
  - Env:
    - Key: TINI_VERSION
      Value: v0.18.0
    Name: env
  - Env:
    - Key: TINI_GPG_KEY
      Value: 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7
    Name: env
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - Env:
    - Key: GOSU_GPG_KEY
      Value: B42F6819007F00F88E364FD4036A9C25BF357DD4
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Name: workdir
    Path: /tmp
  - Env:
    - Key: _APT_OPTIONS
      Value: -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold"
    Name: env
  - CmdLine:
    - apt-get -qq update   && apt-get -qq -y install ${_APT_OPTIONS} lsb-release   &&
      echo "deb http://archive.ubuntu.com/ubuntu $(lsb_release -cs) main restricted
      universe multiverse" > /etc/apt/sources.list   && echo "deb http://archive.ubuntu.com/ubuntu
      $(lsb_release -cs)-updates main restricted universe multiverse" >> /etc/apt/sources.list   &&
      echo "deb http://archive.ubuntu.com/ubuntu $(lsb_release -cs)-backports main
      restricted universe multiverse" >> /etc/apt/sources.list   && echo "deb http://archive.ubuntu.com/ubuntu
      $(lsb_release -cs)-security main restricted universe multiverse" >> /etc/apt/sources.list   &&
      apt-get -qq update   && apt-get -qq -y upgrade ${_APT_OPTIONS}   && apt-get
      -qq -y install ${_APT_OPTIONS}     wget     curl     netcat     unzip     gnupg     apt-utils     apt-transport-https     locales     expect     htop   &&
      locale-gen en_US.UTF-8   && apt-get -qq -y autoremove   && apt-get -qq -y clean   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US:en
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - mkdir ~/.gnupg && chmod 700 ~/.gnupg && echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && (         gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys
      ${TINI_GPG_KEY}         || gpg --keyserver keyserver.pgp.com          --recv-keys
      ${TINI_GPG_KEY}     )
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && wget -nv -O /usr/local/bin/tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini     &&
      wget -nv -O /usr/local/bin/tini.asc https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc     &&
      gpg --verify /usr/local/bin/tini.asc     && chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && (         gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys
      ${GOSU_GPG_KEY}         || gpg --keyserver keyserver.pgp.com          --recv-keys
      ${GOSU_GPG_KEY}     )
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && curl -sS -o /usr/local/bin/gosu -L "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)"     && curl -sS -o /usr/local/bin/gosu.asc -L "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc"     && gpg --verify /usr/local/bin/gosu.asc     &&
      rm /usr/local/bin/gosu.asc     && chmod +x /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/wait-for-it.sh
    - /usr/local/bin/
  - CmdLine:
    - chown root:root /usr/local/bin/wait-for-it.sh     && chmod +x /usr/local/bin/wait-for-it.sh     &&
      ln -s /usr/local/bin/wait-for-it.sh /usr/local/bin/wait-for.sh     && ln -s
      /usr/local/bin/wait-for-it.sh /usr/local/bin/wait-for
    Name: run
    PrependShell: true
  - Env:
    - Key: DOWNLOAD_DIR
      Value: /srv/downloads
    Name: env
  - CmdLine:
    - mkdir -p "${DOWNLOAD_DIR}" && chmod -R 777 "${DOWNLOAD_DIR}"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias ll='ls -al --color'" > /etc/profile.d/aliases.sh     echo "alias
      rm='rm -i'" >> /etc/profile.d/aliases.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/htoprc.conf
    - /root/.config/htop/htoprc
  - CmdLine:
    - chown root:root /root/.config/htop/htoprc
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM  ubuntu:16.04
