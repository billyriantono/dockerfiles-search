{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"#!/bin/bash\\napt-get clean\\n[ -x \\\"\\$(command -v conda)\\\" ] \u0026\u0026 conda clean -tipsy\\nfor dir in /tmp/* /var/tmp/* /home/jupyter/{.ccache,.cache/pip,conda-bld,.conda} /root/* /root/\\.[^\\.]* /var/lib/apt/lists/* /var/log/*; do\\n\t[ -e \\$dir ] \u0026\u0026 rm -rf \\$dir || true\\ndone\" \u003e /usr/bin/docker-clean \u0026\u0026 chmod a+rx /usr/bin/docker-clean \u0026\u0026 docker-clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /scratch /work /home1 /gpfs /corral-repl /corral-tacc /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -yq --no-install-recommends         curl vim-nox gfortran bison libibverbs-dev libibmad-dev libibumad-dev librdmacm-dev libmlx5-dev libmlx4-dev \u0026\u0026     docker-clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "MAJV",
          "Name": "arg",
          "Value": "2"
        },
        {
          "Key": "MINV",
          "Name": "arg",
          "Value": "2"
        },
        {
          "Key": "DIR",
          "Name": "arg",
          "Value": "mvapich${MAJV}-${MAJV}.${MINV}"
        },
        {
          "CmdLine": [
            "curl http://mvapich.cse.ohio-state.edu/download/mvapich/mv${MAJV}/${DIR}.tar.gz | tar -xzf -     \u0026\u0026 cd ${DIR}     \u0026\u0026 ./configure     \u0026\u0026 make -j $(nproc --all 2\u003e/dev/null || echo 2) \u0026\u0026 make install     \u0026\u0026 mpicc examples/hellow.c -o /usr/bin/hellow     \u0026\u0026 cd ../ \u0026\u0026 rm -rf ${DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}