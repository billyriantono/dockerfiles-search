MetaArgs: null
Stages:
- BaseName: extesla/php:7.2
  Commands:
  - Maintainer: Sean Quinn "sean.quinn@extesla.com"
    Name: maintainer
  - Env:
    - Key: GRAV_VERSION
      Value: 1.5.6
    - Key: NGINX_VERSION
      Value: 1.15.6
    - Key: NGINX_GPG_KEYS
      Value: B0F4253373F8F6F510D42178520A9993A1C052F8
    - Key: WWW_DIR
      Value: /srv/www
    - Key: ENABLE_XDEBUG
      Value: '"false"'
    Name: env
  - Name: workdir
    Path: /
  - CmdLine:
    - apk update && apk upgrade  && apk add --no-cache --virtual .build-deps     curl     gcc     geoip-dev     gnupg     libc-dev     libxslt-dev     libzip-dev     linux-headers     make     openssl-dev     pcre-dev     perl-dev     zlib-dev  &&
      apk add --no-cache --virtual .gettext gettext  && apk add --no-cache shadow
      supervisor  && sed -i 's/^\(\[supervisord\]\)$/\1\nnodaemon=true/' /etc/supervisord.conf  &&
      sed -i 's/^\(files = .*\)$/;\1/' /etc/supervisord.conf  && sed -i 's/^\(\[include\]\)$/\1\nfiles
      = \/etc\/supervisor\/conf.d\/*.conf/' /etc/supervisord.conf  && mkdir -p /etc/supervisor/conf.d  &&
      apk add --no-cache acl gd-dev git libzip
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/php/mods-available/imagick.ini
    - /etc/php/mods-available/imagick.ini
  - CmdLine:
    - apk add --no-cache --virtual .imagemagick-deps     imagemagick     imagemagick-dev     imagemagick-libs  &&
      pecl install imagick  && ln -s /etc/php/mods-available/imagick.ini /etc/php/conf.d/20-imagick.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/php/mods-available/xdebug.ini
    - /etc/php/mods-available/xdebug.ini
  - CmdLine:
    - pecl install xdebug  && ln -s /etc/php/mods-available/xdebug.ini /etc/php/conf.d/20-xdebug.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/php/mods-available/zip.ini
    - /etc/php/mods-available/zip.ini
  - CmdLine:
    - pecl install zip  && ln -s /etc/php/mods-available/zip.ini /etc/php/conf.d/10-zip.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/php/php-fpm.d/www.conf
    - /etc/php/php-fpm.d/www.conf
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php  && chmod +x composer.phar  &&
      mv composer.phar /usr/local/bin/composer  && composer self-update
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/^memory_limit = 128M$/memory_limit = 2048M/" /etc/php/php.ini  &&
      sed -i "s/^;realpath_cache_size = 16k$/realpath_cache_size = 4096k/" /etc/php/php.ini  &&
      sed -i "s/^;realpath_cache_ttl = 120$/realpath_cache_ttl = 600/" /etc/php/php.ini  &&
      sed -i "s/^;date.timezone =\s*$/date.timezone = UTC/" /etc/php/php.ini  && sed
      -i "s/^(\[global\])$/$1\npid=\/var\/run\/php-fpm.pid/" /etc/php/php-fpm.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     && addgroup -S nginx     && adduser -D -S -h /var/cache/nginx -s
      /sbin/nologin -G nginx nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - CONFIG="    --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --modules-path=/usr/lib/nginx/modules     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp     --user=nginx     --group=nginx     --with-debug     --with-http_ssl_module     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_dav_module     --with-http_flv_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_random_index_module     --with-http_secure_link_module     --with-http_stub_status_module     --with-http_auth_request_module     --with-http_xslt_module=dynamic     --with-http_image_filter_module=dynamic     --with-http_geoip_module=dynamic     --with-http_perl_module=dynamic     --with-threads     --with-stream     --with-stream_ssl_module     --with-stream_ssl_preread_module     --with-stream_realip_module     --with-stream_geoip_module=dynamic     --with-http_slice_module     --with-mail     --with-mail_ssl_module     --with-compat     --with-file-aio     --with-http_v2_module     "  &&
      curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz  &&
      curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc  &&
      mkdir -p /tmp/gnupg  && export GNUPGHOME="$(mktemp -d -p /tmp/gnupg)"  && for
      key in $NGINX_GPG_KEYS; do       gpg --keyserver pgp.mit.edu --recv-keys "$key"
      ||       gpg --keyserver keyserver.pgp.com --recv-keys "$key" ||       gpg --keyserver
      ha.pool.sks-keyservers.net --recv-keys "$key" ;     done  && gpg --batch --verify
      nginx.tar.gz.asc nginx.tar.gz  && rm -rf "/tmp/gnupg" "nginx.tar.gz.asc"  &&
      mkdir -p /usr/src  && tar -zxC /usr/src -f nginx.tar.gz  && rm nginx.tar.gz  &&
      cd /usr/src/nginx-$NGINX_VERSION  && ./configure $CONFIG --with-debug  && make
      -j$(getconf _NPROCESSORS_ONLN)  && mv objs/nginx objs/nginx-debug  && mv objs/ngx_http_xslt_filter_module.so
      objs/ngx_http_xslt_filter_module-debug.so  && mv objs/ngx_http_image_filter_module.so
      objs/ngx_http_image_filter_module-debug.so  && mv objs/ngx_http_geoip_module.so
      objs/ngx_http_geoip_module-debug.so  && mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so  &&
      mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so  &&
      ./configure $CONFIG  && make -j$(getconf _NPROCESSORS_ONLN)  && make install  &&
      rm -rf /etc/nginx/html/  && mkdir -p /etc/nginx/conf.d/  && mkdir -p /etc/nginx/sites/  &&
      mkdir -p /etc/nginx/sites-available/  && mkdir -p /etc/nginx/sites-enabled/  &&
      mkdir -p /usr/share/nginx/html/  && install -m644 html/index.html /usr/share/nginx/html/  &&
      install -m644 html/50x.html /usr/share/nginx/html/  && install -m755 objs/nginx-debug
      /usr/sbin/nginx-debug  && install -m755 objs/ngx_http_xslt_filter_module-debug.so
      /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so  && install -m755
      objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so  &&
      install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so  &&
      install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so  &&
      install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so  &&
      ln -s ../../usr/lib/nginx/modules /etc/nginx/modules  && strip /usr/sbin/nginx*  &&
      strip /usr/lib/nginx/modules/*.so
    Name: run
    PrependShell: true
  - CmdLine:
    - runDeps="$(     scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so
      /usr/bin/envsubst     | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }'     |
      sort -u     | xargs -r apk info --installed     | sort -u     )"  && apk add
      --no-cache --virtual .nginx-rundeps $runDeps
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /usr/src/nginx-$NGINX_VERSION  && apk del .build-deps  && mv /usr/bin/envsubst
      /tmp/  && apk del .gettext  && mv /tmp/envsubst /usr/local/bin/  && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log  && ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/nginx/conf.d/default.conf
    - /etc/nginx/conf.d/default.conf
  - CmdLine:
    - rm -rf /etc/nginx/conf.d/default.conf  && mkdir -p /var/lib/nginx  && chown
      -R www-data:www-data /var/lib/nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/^loglevel=info/loglevel=debug/' /etc/supervisord.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/supervisor/conf.d/nginx.conf
    - /etc/supervisor/conf.d/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/supervisor/conf.d/php-fpm.conf
    - /etc/supervisor/conf.d/php-fpm.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/nginx/conf.d/file.conf
    - /etc/nginx/conf.d/file.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/nginx/conf.d/gzip.conf
    - /etc/nginx/conf.d/gzip.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/nginx/conf.d/php-fpm.conf
    - /etc/nginx/conf.d/php-fpm.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/nginx/conf.d/requests.conf
    - /etc/nginx/conf.d/requests.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/etc/nginx/sites/grav
    - /etc/nginx/sites/grav
  - CmdLine:
    - rm -rf /etc/nginx/conf.d/default.conf  && mkdir -p /var/lib/nginx && chown -R
      www-data:www-data /var/lib/nginx  && mkdir -p /var/cache/www && chown -R www-data:www-data
      /var/cache/www  && mkdir -p /var/log/www && chown -R www-data:www-data /var/log/www
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $WWW_DIR  && curl -L0 https://getgrav.org/download/core/grav-admin/$GRAV_VERSION
      -o grav.zip  && mkdir -p /tmp/grav  && unzip grav.zip -d /tmp/grav  && mv /tmp/grav/grav-admin
      $WWW_DIR/grav  && chown -R www-data:www-data $WWW_DIR/grav  && rm -rf /tmp/grav
      grav.zip
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /etc/nginx/sites
  - Name: volume
    Volumes:
    - /etc/nginx/sites-available
  - Name: volume
    Volumes:
    - /srv/www/grav/user
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - -c
    - /etc/supervisord.conf
    Name: cmd
    PrependShell: false
  From:
    Image: extesla/php:7.2
  Name: ""
  Platform: ""
  SourceCode: FROM extesla/php:7.2
