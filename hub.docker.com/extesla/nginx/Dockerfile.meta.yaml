MetaArgs: null
Stages:
- BaseName: extesla/supervisor
  Commands:
  - Maintainer: '"Sean Quinn <sean.quinn@extesla.com>"'
    Name: maintainer
  - Env:
    - Key: NGINX_VERSION
      Value: 1.11.5
    Name: env
  - Env:
    - Key: WWW_DIR
      Value: /srv/www
    Name: env
  - CmdLine:
    - apk update && apk upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps             curl             gcc             gd-dev             geoip-dev             gnupg             libc-dev             libxslt-dev             linux-headers             make             openssl-dev             pcre-dev             zlib-dev             perl-dev  &&
      apk add --no-cache --virtual .gettext gettext
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x  && addgroup -g 82 -S www-data  && adduser -u 82 -D -S -G www-data www-data  &&
      mkdir -p /srv/www
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "www-data ALL=(ALL) NOPASSWD:ALL" | tee -a /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x  && addgroup -S nginx  && adduser -D -S -h /var/cache/nginx -s /sbin/nologin
      -G nginx nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8  && CONFIG="    --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --modules-path=/usr/lib/nginx/modules     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp     --user=nginx     --group=nginx     --with-debug     --with-http_ssl_module     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_dav_module     --with-http_flv_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_random_index_module     --with-http_secure_link_module     --with-http_stub_status_module     --with-http_auth_request_module     --with-http_xslt_module=dynamic     --with-http_image_filter_module=dynamic     --with-http_geoip_module=dynamic     --with-http_perl_module=dynamic     --with-threads     --with-stream     --with-stream_ssl_module     --with-stream_ssl_preread_module     --with-stream_realip_module     --with-stream_geoip_module=dynamic     --with-http_slice_module     --with-mail     --with-mail_ssl_module     --with-compat     --with-file-aio     --with-http_v2_module   "  &&
      curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz  &&
      curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc  &&
      export GNUPGHOME="$(mktemp -d)"  && gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$GPG_KEYS"  && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz  &&
      rm -r "$GNUPGHOME" nginx.tar.gz.asc  && mkdir -p /usr/src  && tar -zxC /usr/src
      -f nginx.tar.gz  && rm nginx.tar.gz  && cd /usr/src/nginx-$NGINX_VERSION  &&
      ./configure $CONFIG --with-debug  && make -j$(getconf _NPROCESSORS_ONLN)  &&
      mv objs/nginx objs/nginx-debug  && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so  &&
      mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so  &&
      mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so  && mv
      objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so  && mv objs/ngx_stream_geoip_module.so
      objs/ngx_stream_geoip_module-debug.so  && ./configure $CONFIG  && make -j$(getconf
      _NPROCESSORS_ONLN)  && make install  && rm -rf /etc/nginx/html/  && mkdir -p
      /etc/nginx/conf.d/  && mkdir -p /etc/nginx/sites/  && mkdir -p /etc/nginx/sites-available/  &&
      mkdir -p /etc/nginx/sites-enabled/  && mkdir -p /usr/share/nginx/html/  && install
      -m644 html/index.html /usr/share/nginx/html/  && install -m644 html/50x.html
      /usr/share/nginx/html/  && install -m755 objs/nginx-debug /usr/sbin/nginx-debug  &&
      install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so  &&
      install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so  &&
      install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so  &&
      install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so  &&
      install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so  &&
      ln -s ../../usr/lib/nginx/modules /etc/nginx/modules  && strip /usr/sbin/nginx*  &&
      strip /usr/lib/nginx/modules/*.so
    Name: run
    PrependShell: true
  - CmdLine:
    - runDeps="$(     scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so
      /usr/bin/envsubst       | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }'       |
      sort -u       | xargs -r apk info --installed       | sort -u     )"  && apk
      add --no-cache --virtual .nginx-rundeps $runDeps
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /usr/src/nginx-$NGINX_VERSION  && apk del .build-deps  && mv /usr/bin/envsubst
      /tmp/  && apk del .gettext  && mv /tmp/envsubst /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log  && ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/etc/nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/etc/nginx/conf.d/default.conf
    - /etc/nginx/conf.d/default.conf
  - CmdLine:
    - sed -i 's/^loglevel=info/loglevel=debug/' /etc/supervisord.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/etc/supervisor/conf.d/nginx.conf
    - /etc/supervisor/conf.d/nginx.conf
  - Name: volume
    Volumes:
    - /srv/www
  - Name: volume
    Volumes:
    - /etc/nginx/sites
  - Name: volume
    Volumes:
    - /etc/nginx/sites-available
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - -c
    - /etc/supervisord.conf
    Name: cmd
    PrependShell: false
  From:
    Image: extesla/supervisor
  Name: ""
  Platform: ""
  SourceCode: FROM extesla/supervisor
