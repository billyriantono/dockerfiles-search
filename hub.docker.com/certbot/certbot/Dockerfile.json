{
  "MetaArgs": [
    {
      "Key": "TARGET_ARCH",
      "DefaultValue": null,
      "ProvidedValue": null,
      "Value": null
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "${TARGET_ARCH}/python:3.7-alpine3.10",
      "SourceCode": "FROM ${TARGET_ARCH}/python:3.7-alpine3.10",
      "Platform": "",
      "From": {
        "Image": "${TARGET_ARCH}/python:3.7-alpine3.10"
      },
      "Commands": [
        {
          "Key": "QEMU_ARCH",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "QEMU_ARCH",
              "Value": "${QEMU_ARCH}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "qemu-${QEMU_ARCH}-static",
            "/usr/bin/"
          ]
        },
        {
          "Key": "CERTBOT_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "CERTBOT_VERSION",
              "Value": "${CERTBOT_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "certbot"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/letsencrypt",
            "/var/lib/letsencrypt"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/certbot"
        },
        {
          "CmdLine": [
            "mkdir -p src  \u0026\u0026 wget -O certbot-${CERTBOT_VERSION}.tar.gz https://github.com/certbot/certbot/archive/v${CERTBOT_VERSION}.tar.gz  \u0026\u0026 tar xf certbot-${CERTBOT_VERSION}.tar.gz  \u0026\u0026 cp certbot-${CERTBOT_VERSION}/CHANGELOG.md certbot-${CERTBOT_VERSION}/README.rst src/  \u0026\u0026 cp certbot-${CERTBOT_VERSION}/letsencrypt-auto-source/pieces/dependency-requirements.txt .  \u0026\u0026 cp -r certbot-${CERTBOT_VERSION}/tools tools  \u0026\u0026 cp -r certbot-${CERTBOT_VERSION}/acme src/acme  \u0026\u0026 cp -r certbot-${CERTBOT_VERSION}/certbot src/certbot  \u0026\u0026 rm -rf certbot-${CERTBOT_VERSION}.tar.gz certbot-${CERTBOT_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cat dependency-requirements.txt | tools/strip_hashes.py \u003e unhashed_requirements.txt  \u0026\u0026 cat tools/dev_constraints.txt unhashed_requirements.txt | tools/merge_requirements.py \u003e docker_constraints.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .certbot-deps         libffi         libssl1.1         openssl         ca-certificates         binutils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps         gcc         linux-headers         openssl-dev         musl-dev         libffi-dev     \u0026\u0026 pip install -r dependency-requirements.txt     \u0026\u0026 pip install --no-cache-dir --no-deps         --editable src/acme         --editable src/certbot \u0026\u0026 apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}