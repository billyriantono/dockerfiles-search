{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.2",
      "SourceCode": "FROM alpine:3.2",
      "Platform": "",
      "From": {
        "Image": "alpine:3.2"
      },
      "Commands": [
        {
          "CmdLine": [
            "addgroup -S redis \u0026\u0026 adduser -S -G redis redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update ca-certificates curl gnupg \u0026\u0026     gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \u0026\u0026     ARCH=`uname -m`; if [ $ARCH == \"x86_64\" ]; then export ARCH=\"amd64\"; else export ARCH=\"i386\"; fi \u0026\u0026     curl -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.6/gosu-$ARCH\" \u0026\u0026     curl -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/1.6/gosu-$ARCH.asc\" \u0026\u0026     gpg --verify /usr/local/bin/gosu.asc \u0026\u0026 \trm /usr/local/bin/gosu.asc \u0026\u0026 \tchmod +x /usr/local/bin/gosu \u0026\u0026     apk del ca-certificates curl gnupg \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "REDIS_VERSION",
              "Value": "3.0.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_DOWNLOAD_URL",
              "Value": "http://download.redis.io/releases/redis-3.0.5.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_DOWNLOAD_SHA1",
              "Value": "ad3ee178c42bfcfd310c72bbddffbbe35db9b4a6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update ca-certificates curl gcc libc-dev make tar linux-headers \u0026\u0026     mkdir -p /usr/src/redis \u0026\u0026     curl -sSL \"$REDIS_DOWNLOAD_URL\" -o redis.tar.gz \u0026\u0026     echo \"$REDIS_DOWNLOAD_SHA1 *redis.tar.gz\" | sha1sum -c - \u0026\u0026     tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 \u0026\u0026     rm redis.tar.gz \u0026\u0026     make -C /usr/src/redis MALLOC=libc \u0026\u0026     make -C /usr/src/redis install \u0026\u0026     rm -r /usr/src/redis \u0026\u0026     apk del ca-certificates curl gcc libc-dev make tar linux-headers \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /data \u0026\u0026 chown redis:redis /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "6379"
          ]
        },
        {
          "CmdLine": [
            "redis-server"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}