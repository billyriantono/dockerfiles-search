MetaArgs: null
Stages:
- BaseName: 31z4/storm:0.10.1
  Commands:
  - Name: user
    User: root
  - Name: workdir
    Path: /
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u92
    Name: env
  - Env:
    - Key: JAVA_ALPINE_VERSION
      Value: 8.92.14-r1
    Name: env
  - CmdLine:
    - "set -x \t&& apk add --no-cache \t\topenjdk8=\"$JAVA_ALPINE_VERSION\"         &&
      [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache     bash     curl     gcc     git     libxml2     libxml2-dev     libxslt-dev     libc-dev     openssh     python     python-dev     py-pip     libc-dev     &&
      pip install --upgrade pip
    Name: run
    PrependShell: true
  - Key: MAVEN_VERSION
    Name: arg
    Value: 3.3.9
  - Key: USER_HOME_DIR
    Name: arg
    Value: '"/root"'
  - CmdLine:
    - mkdir -p /usr/share/maven /usr/share/maven/ref   && wget http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
      -O -     | tar -xzC /usr/share/maven   && ln -s /usr/share/maven/apache-maven-$MAVEN_VERSION/bin/mvn
      /usr/bin/mvn
    Name: run
    PrependShell: true
  - Env:
    - Key: MAVEN_HOME
      Value: /usr/share/maven
    Name: env
  - Env:
    - Key: MAVEN_CONFIG
      Value: '"$USER_HOME_DIR/.m2"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - settings.xml
    - /root/.m2/settings.xml
  - CmdLine:
    - git clone https://github.com/telefonicaid/fiware-sinfonier.git && cd fiware-sinfonier
      && git checkout $SOURCE_BRANCH
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -r /fiware-sinfonier/sinfonier-backend-api/requirements
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /fiware-sinfonier/sinfonier-backend-api/
  - CmdLine:
    - python
    - sinfonierapi.py
    - --docker
    Name: entrypoint
    PrependShell: false
  From:
    Image: 31z4/storm:0.10.1
  Name: ""
  Platform: ""
  SourceCode: FROM 31z4/storm:0.10.1
