MetaArgs:
- DefaultValue: tensorflow/tensorflow:1.8.0-gpu-py3
  Key: BASE_CONTAINER
  ProvidedValue: null
  Value: tensorflow/tensorflow:1.8.0-gpu-py3
Stages:
- BaseName: $BASE_CONTAINER
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Dominik Schienstock <schienstockd@student.unimelb.edu.au>"'
    Name: label
  - Env:
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - Key: NB_USER
    Name: arg
    Value: '"rotund"'
  - Key: NB_UID
    Name: arg
    Value: '"1000"'
  - Key: NB_GID
    Name: arg
    Value: '"100"'
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get -yq dist-upgrade  && apt-get install -yq --no-install-recommends     wget     bzip2     ca-certificates     sudo     locales     fonts-liberation     run-one     build-essential     git     jed     libsm6     libxext-dev     libxrender1     lmodern     netcat     pandoc     python-dev     texlive-fonts-extra     texlive-fonts-recommended     texlive-generic-recommended     texlive-latex-base     texlive-latex-extra     texlive-xetex     tzdata     unzip     ffmpeg     fonts-dejavu     gfortran     gcc  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    - Key: SHELL
      Value: /bin/bash
    - Key: NB_USER
      Value: $NB_USER
    - Key: NB_UID
      Value: $NB_UID
    - Key: NB_GID
      Value: $NB_GID
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - fix-permissions
    - /usr/local/bin/fix-permissions
  - CmdLine:
    - sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "auth requisite pam_deny.so" >> /etc/pam.d/su &&     sed -i.bak -e 's/^%admin/#%admin/'
      /etc/sudoers &&     sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers &&     useradd
      -m -s /bin/bash -N -u $NB_UID $NB_USER &&     mkdir -p $CONDA_DIR &&     chown
      $NB_USER:$NB_GID $CONDA_DIR &&     chmod g+w /etc/passwd &&     fix-permissions
      $HOME &&     fix-permissions "$(dirname $CONDA_DIR)"
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - Name: workdir
    Path: $HOME
  - Env:
    - Key: MINICONDA_VERSION
      Value: 4.7.12
    - Key: CONDA_VERSION
      Value: 4.7.12
    Name: env
  - CmdLine:
    - cd /tmp &&     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     echo "0dba759b8ecfc8948f626fa18785e3d8 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh"
      | md5sum -c - &&     /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      -f -b -p $CONDA_DIR &&     rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     echo "conda ${CONDA_VERSION}" >> $CONDA_DIR/conda-meta/pinned &&     $CONDA_DIR/bin/conda
      config --system --prepend channels conda-forge &&     $CONDA_DIR/bin/conda config
      --system --set auto_update_conda false &&     $CONDA_DIR/bin/conda config --system
      --set show_channel_urls true &&     $CONDA_DIR/bin/conda install --quiet --yes
      conda &&     $CONDA_DIR/bin/conda update --all --quiet --yes &&     conda list
      python | grep '^python ' | tr -s ' ' | cut -d '.' -f 1,2 | sed 's/$/.*/' >>
      $CONDA_DIR/conda-meta/pinned &&     conda clean --all -f -y &&     rm -rf /home/$NB_USER/.cache/yarn
      &&     fix-permissions $CONDA_DIR &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes 'tini=0.18.0' &&     conda list tini | grep tini
      | tr -s ' ' | cut -d ' ' -f 1,2 >> $CONDA_DIR/conda-meta/pinned &&     conda
      clean --all -f -y &&     fix-permissions $CONDA_DIR &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'notebook=6.0.1'     'jupyterhub=1.0.0'     'jupyterlab=1.1.4'
      &&     conda clean --all -f -y &&     npm cache clean --force &&     jupyter
      notebook --generate-config &&     rm -rf $CONDA_DIR/share/jupyter/lab/staging
      &&     rm -rf /home/$NB_USER/.cache/yarn &&     fix-permissions $CONDA_DIR &&     fix-permissions
      /home/$NB_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'beautifulsoup4'     'conda-forge::blas=*=openblas'     'bokeh'     'cloudpickle'     'cudatoolkit'     'cython'     'dask'     'dill'     'h5py'     'hdf5'     'ipywidgets'     'matplotlib-base'     'numba'     'numexpr'     'pandas'     'patsy'     'protobuf'     'scikit-image'     'scikit-learn'     'scipy'     'seaborn'     'spyder-kernels'     'sqlalchemy'     'statsmodels'     'sympy'     'vincent'     'xlrd'     &&     conda
      clean --all -f -y &&     jupyter nbextension enable --py widgetsnbextension
      --sys-prefix &&     jupyter labextension install @jupyter-widgets/jupyterlab-manager
      --no-build &&     jupyter labextension install jupyterlab_bokeh --no-build &&     jupyter
      lab build --dev-build=False &&     npm cache clean --force &&     rm -rf $CONDA_DIR/share/jupyter/lab/staging
      &&     rm -rf /home/$NB_USER/.cache/yarn &&     rm -rf /home/$NB_USER/.node-gyp
      &&     fix-permissions $CONDA_DIR &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     git clone https://github.com/PAIR-code/facets.git &&     cd facets
      &&     jupyter nbextension install facets-dist/ --sys-prefix &&     cd &&     rm
      -rf /tmp/facets &&     fix-permissions $CONDA_DIR &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - Env:
    - Key: XDG_CACHE_HOME
      Value: /home/$NB_USER/.cache/
    Name: env
  - CmdLine:
    - MPLBACKEND=Agg python -c "import matplotlib.pyplot" &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Env:
    - Key: JULIA_DEPOT_PATH
      Value: /opt/julia
    Name: env
  - Env:
    - Key: JULIA_PKGDIR
      Value: /opt/julia
    Name: env
  - Env:
    - Key: JULIA_VERSION
      Value: 1.2.0
    Name: env
  - CmdLine:
    - mkdir /opt/julia-${JULIA_VERSION} &&     cd /tmp &&     wget -q https://julialang-s3.julialang.org/bin/linux/x64/`echo
      ${JULIA_VERSION} | cut -d. -f 1,2`/julia-${JULIA_VERSION}-linux-x86_64.tar.gz
      &&     echo "926ced5dec5d726ed0d2919e849ff084a320882fb67ab048385849f9483afc47
      *julia-${JULIA_VERSION}-linux-x86_64.tar.gz" | sha256sum -c - &&     tar xzf
      julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION} --strip-components=1
      &&     rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/julia &&     echo "push!(Libdl.DL_LOAD_PATH, \"$CONDA_DIR/lib\")"
      >> /etc/julia/juliarc.jl &&     mkdir $JULIA_PKGDIR &&     chown $NB_USER $JULIA_PKGDIR
      &&     fix-permissions $JULIA_PKGDIR
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - CmdLine:
    - conda install --quiet --yes     'r-base'     'r-care'     'r-crayon'     'r-devtools'     'r-forecast'     'r-hexbin'     'r-htmltools'     'r-htmlwidgets'     'r-irkernel'     'r-nycflights13'     'r-plyr'     'r-randomforest'     'r-rcurl'     'r-reshape2'     'r-rmarkdown'     'r-rsqlite'     'r-shiny'     'r-sparklyr'     'r-tidyverse'     'rpy2'     &&     conda
      clean --all -f -y &&     fix-permissions $CONDA_DIR &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e 'import Pkg; Pkg.update()' &&     (test $TEST_ONLY_BUILD || julia -e
      'import Pkg; Pkg.add("HDF5")') &&     julia -e "using Pkg; pkg\"add IJulia\";
      pkg\"precompile\"" &&     mv $HOME/.local/share/jupyter/kernels/julia* $CONDA_DIR/share/jupyter/kernels/
      &&     chmod -R go+rx $CONDA_DIR/share/jupyter &&     rm -rf $HOME/.local &&     fix-permissions
      $JULIA_PKGDIR $CONDA_DIR/share/jupyter
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Key: CYTOKIT_REPO_URL
    Name: arg
    Value: '"https://github.com/hammerlab/cytokit.git"'
  - Key: BASE_DIR
    Name: arg
    Value: /cytokit
  - Key: SIM_DIR
    Name: arg
    Value: $BASE_DIR/lab/sim
  - Key: REPO_DIR
    Name: arg
    Value: $BASE_DIR/lab/repos
  - Key: DATA_DIR
    Name: arg
    Value: $BASE_DIR/lab/data
  - Key: CYTOKIT_REPO_DIR
    Name: arg
    Value: $REPO_DIR/cytokit
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - mkdir -p $LAB_DIR $REPO_DIR $DATA_DIR $SIM_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends git vim wget
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libsm6 libxext6 libfontconfig1 libxrender1 python3-tk
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - cytokit-requirements.txt
    - /tmp/
  - CmdLine:
    - pip --no-cache-dir install --requirement /tmp/cytokit-requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $REPO_DIR && git clone $CYTOKIT_REPO_URL
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $(python -m site --user-site) &&     echo "$CYTOKIT_REPO_DIR/python/pipeline"
      > $(python -m site --user-site)/local.pth &&     echo "$CYTOKIT_REPO_DIR/python/notebooks/src"
      >> $(python -m site --user-site)/local.pth &&     echo "$CYTOKIT_REPO_DIR/python/applications"
      >> $(python -m site --user-site)/local.pth
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - mkdir $REPO_DIR/.nodeenv &&     cd $REPO_DIR/.nodeenv &&     pip install nodeenv
      &&     nodeenv jupyterlab &&     . jupyterlab/bin/activate &&     pip install
      itkwidgets &&     jupyter labextension install @jupyter-widgets/jupyterlab-manager
      itk-jupyter-widgets
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s $CONDA_DIR/etc/profile.d/conda.sh /etc/profile.d/conda.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c 'source /etc/profile.d/conda.sh && conda create -n cellprofiler
      python=2.7' &&     apt-get update &&     apt-get install -y openjdk-8-jdk libmysqlclient-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $REPO_DIR &&     git clone https://github.com/CellProfiler/CellProfiler.git
      &&     cd CellProfiler &&     git checkout v3.1.8
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $REPO_DIR/CellProfiler &&     /bin/bash -c 'source /etc/profile.d/conda.sh
      && conda activate cellprofiler &&     pip install numpy==1.16.4 PyYAML==3.13
      tifffile==2019.7.2 && pip install -e .'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c 'source /etc/profile.d/conda.sh && conda activate cellprofiler
      &&     pip install ipykernel==4.10.0 pyzmq==18.0.2 &&     python -m ipykernel
      install --user --name cellprofiler --display-name "Python (CP)"'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/lab"'
  - Env:
    - Key: CYTOKIT_SIM_DIR
      Value: $SIM_DIR
    Name: env
  - Env:
    - Key: CYTOKIT_DATA_DIR
      Value: $DATA_DIR
    Name: env
  - Env:
    - Key: CYTOKIT_REPO_DIR
      Value: $CYTOKIT_REPO_DIR
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64/jre
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Env:
    - Key: PYTHONWARNINGS
      Value: '"ignore::FutureWarning:h5py"'
    Name: env
  - Name: user
    User: root
  - Key: CECELIA_REPO_URL
    Name: arg
    Value: '"https://github.com/schienstockd/cecelia.git"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gpu-test.py
    - $HOME/
  - CmdLine:
    - fix-permissions $HOME/
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x $CYTOKIT_REPO_DIR/python/pipeline/cytokit/cli/main.py &&     ln -s
      $CYTOKIT_REPO_DIR/python/pipeline/cytokit/cli/main.py /usr/local/bin/cytokit
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - tini
    - -g
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start-notebook.sh
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-notebook.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-singleuser.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /etc/jupyter/
  - Name: user
    User: root
  - CmdLine:
    - fix-permissions /etc/jupyter/
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  From:
    Image: $BASE_CONTAINER
  Name: ""
  Platform: ""
  SourceCode: FROM $BASE_CONTAINER
