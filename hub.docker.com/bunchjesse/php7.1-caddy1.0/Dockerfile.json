{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"export TERM=xterm\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 cd /tmp     \u0026\u0026 apt-get install -y         supervisor         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng12-dev         libzip-dev         libssh2-1-dev         libxml2-dev         git         rubygems     \u0026\u0026 pecl channel-update pecl.php.net     \u0026\u0026 pecl install ssh2-1.0     \u0026\u0026 docker-php-ext-enable ssh2     \u0026\u0026 docker-php-ext-install -j$(nproc) soap iconv mcrypt zip mysqli pdo pdo_mysql json exif     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 curl -o xdebug-2.5.0.tgz https://xdebug.org/files/xdebug-2.5.0.tgz     \u0026\u0026 tar -xvzf xdebug-2.5.0.tgz     \u0026\u0026 cd xdebug-2.5.0     \u0026\u0026 phpize     \u0026\u0026 ./configure     \u0026\u0026 make     \u0026\u0026 mv modules/xdebug.so \"$(php -r 'echo ini_get(\"extension_dir\");')\"     \u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 composer global require \"hirak/prestissimo:^0.3\"     \u0026\u0026 curl --silent --show-error --fail --location         --header \"Accept: application/tar+gzip, application/x-gzip, application/octet-stream\" -o -         \"https://caddyserver.com/download/build?os=linux\u0026arch=amd64\u0026features=ratelimit,realip,minify\"         | tar --no-same-owner -C /usr/bin/ -xz caddy     \u0026\u0026 chmod 0755 /usr/bin/caddy     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_7.x | bash -     \u0026\u0026 apt-get install -y nodejs build-essential     \u0026\u0026 npm install -g parallelshell     \u0026\u0026 gem install sass sass-globbing     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /web/public"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "index.php",
            "/web/public/index.php"
          ]
        },
        {
          "CmdLine": [
            "chown -R www-data.www-data /web"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/php-conf.d/*",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Caddyfile",
            "/etc/docker-caddy/Caddyfile"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./caddy.d",
            "/etc/docker-caddy/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Env": [
            {
              "Key": "DOCUMENT_ROOT",
              "Value": "/web/public"
            },
            {
              "Key": "XDEBUG_ENABLED",
              "Value": "0"
            },
            {
              "Key": "XDEBUG_REMOTE_ENABLE",
              "Value": "0"
            },
            {
              "Key": "XDEBUG_REMOTE_AUTOSTART",
              "Value": "0"
            },
            {
              "Key": "XDEBUG_REMOTE_CONNECT_BACK",
              "Value": "0"
            },
            {
              "Key": "XDEBUG_REMOTE_HOST",
              "Value": "localhost"
            },
            {
              "Key": "XDEBUG_IDEKEY",
              "Value": "docker"
            },
            {
              "Key": "XDEBUG_VAR_DISPLAY_MAX_CHILDREN",
              "Value": "128"
            },
            {
              "Key": "XDEBUG_VAR_DISPLAY_MAX_DATA",
              "Value": "512"
            },
            {
              "Key": "XDEBUG_VAR_DISPLAY_MAX_DEPTH",
              "Value": "5"
            },
            {
              "Key": "PHP_OPCACHE_ENABLED",
              "Value": "1"
            },
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "16M"
            },
            {
              "Key": "PHP_POST_MAX_SIZE",
              "Value": "32M"
            },
            {
              "Key": "PHP_UPLOAD_MAX_FILESIZE",
              "Value": "16M"
            },
            {
              "Key": "PHP_ERROR_REPORTING",
              "Value": "\"E_ALL \u0026 ~E_NOTICE \u0026 ~E_STRICT \u0026 ~E_DEPRECATED\""
            },
            {
              "Key": "PHP_MAX_INPUT_VARS",
              "Value": "2000"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/docker-entrypoint.d",
            "/docker-entrypoint.d"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /docker-entrypoint.sh /docker-entrypoint.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}