{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gliderlabs/alpine:3.3",
      "SourceCode": "FROM gliderlabs/alpine:3.3",
      "Platform": "",
      "From": {
        "Image": "gliderlabs/alpine:3.3"
      },
      "Commands": [
        {
          "Maintainer": "Hypothes.is Project and contributors",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk add --update     ca-certificates     libffi     libpq     python     py-pip     nodejs     git   \u0026\u0026 apk add     libffi-dev     g++     make     postgresql-dev     python-dev   \u0026\u0026 pip install --no-cache-dir -U pip   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -S hypothesis   \u0026\u0026 adduser -S -G hypothesis -h /var/lib/hypothesis hypothesis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/lib/hypothesis"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "h/__init__.py",
            "h/_version.py",
            "./h/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "README.rst",
            "setup.*",
            "requirements.txt",
            "./"
          ]
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "gulpfile.js",
            "gunicorn.conf.py",
            "package.json",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf",
            "./conf/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "h",
            "./h/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts",
            "./scripts/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "vendor",
            "./vendor/"
          ]
        },
        {
          "CmdLine": [
            "SASS_BINARY_PATH=$PWD/vendor/node-sass-linux-x64.node npm install --production   \u0026\u0026 SASS_BINARY_PATH=$PWD/vendor/node-sass-linux-x64.node NODE_ENV=production node_modules/.bin/gulp build-app   \u0026\u0026 rm -rf node_modules   \u0026\u0026 npm cache clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "utf_8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "hypothesis"
        },
        {
          "CmdLine": [
            "gunicorn",
            "--paste",
            "conf/app.ini"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}