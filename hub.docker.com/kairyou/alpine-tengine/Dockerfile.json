{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "Leon.Xu ( http://github.com/kairyou/ )",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TENGINE_VERSION",
              "Value": "2.2.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONFIG",
              "Value": "\"\t--prefix=/etc/nginx \t--sbin-path=/usr/sbin/nginx \t--conf-path=/etc/nginx/nginx.conf \t--error-log-path=/var/log/nginx/error.log \t--http-log-path=/var/log/nginx/access.log \t--pid-path=/var/run/nginx.pid \t--lock-path=/var/run/nginx.lock \t--http-client-body-temp-path=/var/cache/nginx/client_temp \t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \t--user=nginx \t--group=nginx \t--with-http_ssl_module \t--with-http_realip_module \t--with-http_addition_module \t--with-http_sub_module \t--with-http_dav_module \t--with-http_flv_module \t--with-http_mp4_module \t--with-http_gunzip_module \t--with-http_gzip_static_module \t--with-http_random_index_module \t--with-http_secure_link_module \t--with-http_stub_status_module \t--with-http_auth_request_module \t--with-http_xslt_module=shared \t--with-http_image_filter_module=shared \t--with-http_geoip_module=shared \t--with-threads \t--with-http_slice_module \t--with-mail \t--with-mail_ssl_module \t--with-file-aio \t--with-http_v2_module \t--with-http_concat_module \t--with-http_sysguard_module \t--with-http_dyups_module \t\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup -S nginx \t\u0026\u0026 adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \t\u0026\u0026 apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L \"http://tengine.taobao.org/download/tengine-$TENGINE_VERSION.tar.gz\" -o tengine.tar.gz \t\u0026\u0026 mkdir -p /usr/src   \u0026\u0026 tar -zxC /usr/src -f tengine.tar.gz   \u0026\u0026 rm tengine.tar.gz   \u0026\u0026 cd /usr/src/tengine-$TENGINE_VERSION/ \t\u0026\u0026 ./configure $CONFIG --with-debug   \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) \t\u0026\u0026 mv objs/nginx objs/nginx-debug \t\u0026\u0026 ./configure $CONFIG \t\u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) \t\u0026\u0026 make install \t\u0026\u0026 rm -rf /etc/nginx/html/ \t\u0026\u0026 mkdir /etc/nginx/conf.d/ \t\u0026\u0026 mkdir -p /usr/share/nginx/html/ \t\u0026\u0026 install -m644 html/index.html /usr/share/nginx/html/ \t\u0026\u0026 install -m644 html/50x.html /usr/share/nginx/html/ \t\u0026\u0026 install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t\u0026\u0026 strip /usr/sbin/nginx* \t\u0026\u0026 strip /etc/nginx/modules/*.so \t\u0026\u0026 rm -rf /usr/src/tengine-$TENGINE_VERSION \t\t\u0026\u0026 apk add --no-cache --virtual .gettext gettext \t\u0026\u0026 mv /usr/bin/envsubst /tmp/ \t\t\u0026\u0026 runDeps=\"$( \t\tscanelf --needed --nobanner /usr/sbin/nginx /etc/nginx/modules/*.so /tmp/envsubst \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\" \t\u0026\u0026 apk add --no-cache --virtual .nginx-rundeps $runDeps \t\u0026\u0026 apk del .build-deps \t\u0026\u0026 apk del .gettext \t\u0026\u0026 mv /tmp/envsubst /usr/local/bin/ \t\t\u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log \t\u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.vh.default.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}