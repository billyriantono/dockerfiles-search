{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "Rick Yu \u003ccosmtrek@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add --no-cache build-base git autoconf automake gettext pcre-dev libtool asciidoc xmlto udns-dev c-ares-dev libev-dev libsodium-dev mbedtls-dev linux-headers \u0026\u0026     git clone https://github.com/shadowsocks/shadowsocks-libev /tmp/shadowsocks-libev \u0026\u0026     cd /tmp/shadowsocks-libev \u0026\u0026 git submodule update --init --recursive \u0026\u0026     ./autogen.sh \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install  \u0026\u0026     git clone https://github.com/shadowsocks/simple-obfs.git /tmp/simple-obfs \u0026\u0026     cd /tmp/simple-obfs \u0026\u0026 git submodule update --init --recursive \u0026\u0026     ./autogen.sh \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install  \u0026\u0026     apk del build-base git autoconf automake gettext libtool asciidoc xmlto linux-headers \u0026\u0026     rm -rf /tmp/shadowsocks-libev \u0026\u0026 rm -rf /tmp/simple-obfs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "nobody"
        },
        {
          "Env": [
            {
              "Key": "SERVER_ADDR",
              "Value": "0.0.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVER_PORT",
              "Value": "9000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PASSWORD",
              "Value": "123456"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "METHOD",
              "Value": "chacha20-ietf-poly1305"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TIMEOUT",
              "Value": "3600"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DNS_ADDR",
              "Value": "8.8.8.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DNS_ADDR_2",
              "Value": "8.8.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OBFS_OPTS",
              "Value": "obfs=http;obfs-host=www.bing.com"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$SERVER_PORT/tcp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "$SERVER_PORT/udp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}