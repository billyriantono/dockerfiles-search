MetaArgs: null
Stages:
- BaseName: node:10.10.0-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"We ahead <docker@weahead.se>"'
    Name: label
  - Env:
    - Key: S6_VERSION
      Value: 1.20.0.0
    - Key: S6_BEHAVIOUR_IF_STAGE2_FAILS
      Value: "2"
    Name: env
  - CmdLine:
    - apk --no-cache add curl git su-exec   && apk --no-cache add --virtual build-deps       gnupg   &&
      cd /tmp   && curl -OL "https://github.com/just-containers/s6-overlay/releases/download/v${S6_VERSION}/s6-overlay-amd64.tar.gz"   &&
      curl -OL "https://github.com/just-containers/s6-overlay/releases/download/v${S6_VERSION}/s6-overlay-amd64.tar.gz.sig"   &&
      export GNUPGHOME="$(mktemp -d)"   && curl https://keybase.io/justcontainers/key.asc
      | gpg --import   && gpg --verify s6-overlay-amd64.tar.gz.sig s6-overlay-amd64.tar.gz   &&
      tar -xzf /tmp/s6-overlay-amd64.tar.gz -C /   && rm -rf "$GNUPGHOME" /tmp/*   &&
      apk del build-deps
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root
    - /
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - /init
    Name: entrypoint
    PrependShell: false
  - Expression: COPY app/package.json /app/package.json
    Name: onbuild
  - Expression: RUN chown node:node /app   && su-exec node npm install   && touch
      /home/node/.fix-npm-clean   && su-exec node npm cache clean --force   && rm
      /home/node/.fix-npm-clean
    Name: onbuild
  - Expression: COPY app/ /app-tmp
    Name: onbuild
  - Expression: RUN chown node:node /app-tmp   && rm -rf /app-tmp/node_modules   &&
      cp -R /app-tmp/. /app/   && rm -rf /app-tmp
    Name: onbuild
  From:
    Image: node:10.10.0-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10.10.0-alpine
