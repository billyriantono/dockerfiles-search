MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: SUMMARY
      Value: '"galne-runtime"'
    Name: env
  - Env:
    - Key: DESCRIPTION
      Value: '"Application runtime for Galenframework"'
    Name: env
  - Env:
    - Key: AUTHOR
      Value: '"Martin Reinhardt <contact@martinreinhardt-online.de"'
    Name: env
  - Env:
    - Key: TZ
      Value: '"Europe/Berlin"'
    Name: env
  - Env:
    - Key: NVM_DIR
      Value: /home/galen
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 8.12.0
    Name: env
  - Env:
    - Key: TEST_HOME
      Value: /var/jenkins_home
    Name: env
  - Env:
    - Key: NODE_PATH
      Value: $NVM_DIR/v$NODE_VERSION/lib/node_modules
    Name: env
  - Env:
    - Key: PATH
      Value: $NVM_DIR/v$NODE_VERSION/bin:$PATH
    Name: env
  - Labels:
    - Key: summary
      Value: '"$SUMMARY"'
    - Key: description
      Value: '"$DESCRIPTION"'
    - Key: version
      Value: '"$VERSION"'
    - Key: author
      Value: '"$AUTHOR"'
    - Key: io.k8s.description
      Value: '"$DESCRIPTION"'
    - Key: io.k8s.display-name
      Value: '"galen-runtime"'
    - Key: io.k8s.tags
      Value: '"galen,galenframework,layout-testing,testing"'
    - Key: com.redhat.component
      Value: '"galen-runtime-container"'
    - Key: org.label-schema.license
      Value: MIT
    Name: label
  - CmdLine:
    - echo "deb http://archive.ubuntu.com/ubuntu xenial main universe\n" > /etc/apt/sources.list
      &&   echo "deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\n"
      >> /etc/apt/sources.list &&   echo "deb http://security.ubuntu.com/ubuntu xenial-security
      main universe\n" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: DEBCONF_NONINTERACTIVE_SEEN
      Value: "true"
    Name: env
  - CmdLine:
    - apt-get -qqy update   && apt-get -qqy --no-install-recommends install     bzip2     ca-certificates     openjdk-8-jre-headless     tzdata     sudo     unzip     curl     wget   &&
      rm -rf /var/lib/apt/lists/* /var/cache/apt/*   && sed -i 's/securerandom\.source=file:\/dev\/random/securerandom\.source=file:\/dev\/urandom/'
      ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64/
    Name: env
  - Env:
    - Key: TZ
      Value: '"UTC"'
    Name: env
  - CmdLine:
    - echo "${TZ}" > /etc/timezone   && dpkg-reconfigure --frontend noninteractive
      tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - 'useradd galen          --shell /bin/bash           --create-home   && usermod
      -a -G sudo galen   && echo ''ALL ALL = (ALL) NOPASSWD: ALL'' >> /etc/sudoers   &&
      echo ''galen:secret'' | chpasswd'
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x && apt-get update && apt-get install -y xvfb
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' > /etc/apt/sources.list.d/chrome.list
      &&   wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add - &&   set -x && apt-get update && apt-get install -y google-chrome-stable
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/xvfb-chrome
    - /usr/bin/xvfb-chrome
  - CmdLine:
    - ln -sf /usr/bin/xvfb-chrome /usr/bin/google-chrome
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x && apt-get update && apt-get install -y firefox
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/xvfb-firefox
    - /usr/bin/xvfb-firefox
  - CmdLine:
    - ln -sf /usr/bin/xvfb-firefox /usr/bin/firefox
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x && apt-get update && apt-get install -y bzip2 zip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove -y && rm -rf /var/lib/apt/lists/
    Name: run
    PrependShell: true
  - Name: user
    User: galen
  - CmdLine:
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh
      | bash &&     . $NVM_DIR/nvm.sh &&     nvm install $NODE_VERSION && nvm alias
      default $NODE_VERSION && nvm use default &&     npm install -g galenframework-cli@$GALEN_VERSION
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/test_scripts
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./etc/entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
