{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gocd/gocd-agent-centos-7:v18.2.0",
      "SourceCode": "FROM gocd/gocd-agent-centos-7:v18.2.0",
      "Platform": "",
      "From": {
        "Image": "gocd/gocd-agent-centos-7:v18.2.0"
      },
      "Commands": [
        {
          "Key": "GIT_VERSION",
          "Name": "arg",
          "Value": "2.16.3"
        },
        {
          "Labels": [
            {
              "Key": "MAINTAINER",
              "Value": "\"getgauge\""
            },
            {
              "Key": "VERSION",
              "Value": "\"0.2\""
            },
            {
              "Key": "DESCRIPTION",
              "Value": "\"centos gocd agent with nodejs, git\""
            },
            {
              "Key": "REPOSITORY",
              "Value": "\"getgauge/gocd-node\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "(yum install yum-utils \u0026\u0026yum install -y dh-autoreconf curl-devel expat-devel gettext-devel openssl-devel  perl-devel zlib-devel asciidoc xmlto docbook2X getopt libXScrnSaver \u0026\u0026yum groupinstall -y \"Development Tools\" \u0026\u0026curl -o git.tar.gz https://mirrors.edge.kernel.org/pub/software/scm/git/git-$GIT_VERSION.tar.gz \u0026\u0026tar -zxf git.tar.gz \u0026\u0026 cd git-$GIT_VERSION \u0026\u0026make configure \u0026\u0026 ./configure --prefix=/usr \u0026\u0026 make all \u0026\u0026 make install \u0026\u0026cd .. \u0026\u0026 rm -rf git-$GIT_VERSION git.tar.gz \u0026\u0026yum remove -y dh-autoreconf curl-devel expat-devel gettext-devel openssl-devel perl-devel zlib-devel asciidoc xmlto docbook2X getopt \u0026\u0026yum groupremove -y \"Development Tools\" \u0026\u0026curl --silent --location https://rpm.nodesource.com/setup_9.x | bash - \u0026\u0026 yum -y update \u0026\u0026yum install -y nodejs npm \u0026\u0026echo -e \"export JAVA_HOME=/usr/lib/jvm/java-openjdk\\nexport M2_HOME=/opt/apache-maven-3.5.0\\nexport PATH=/opt/apache-maven-3.5.0/bin:${PATH}\" \u003e\u003e /etc/default/go-agent \u0026\u0026 source /etc/default/go-agent \u0026\u0026chown go /home/go \u0026\u0026 su go -c \"source /etc/default/go-agent\" \u0026\u0026 echo \"export PATH=$PATH:/home/go/.local/bin\" \u003e\u003e /etc/default/go-agent \u0026\u0026su go -c \"mkdir -p /home/go/.ssh/ \u0026\u0026 ssh-keyscan -t rsa github.com \u003e\u003e /home/go/.ssh/known_hosts \u0026\u0026 git config --global user.email \\\"gaugeci@gmail.com\\\" \u0026\u0026 git config --global user.name gaugeci\" \u0026\u0026echo \"export GO_SERVER_SYSTEM_PROPERTIES=\\\"$GO_SERVER_SYSTEM_PROPERTIES -Dplugin.cd.go.contrib.elastic-agent.docker.log.level=debug\\\"\" \u003e\u003e /etc/default/go-agent)"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}