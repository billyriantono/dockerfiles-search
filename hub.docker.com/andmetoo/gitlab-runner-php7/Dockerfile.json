{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "andmetoo \u003chello@notme.pw\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "MYSQL_ROOT_PASS",
          "Name": "arg",
          "Value": "root"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get upgrade -y \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y     locales     software-properties-common     python-software-properties     build-essential     curl     git     unzip     mcrypt     wget     openssl     autoconf     openssh-client     g++     make     libssl-dev     libcurl4-openssl-dev     libsasl2-dev     libcurl3     imagemagick     --no-install-recommends \u0026\u0026 rm -r /var/lib/apt/lists/*     \u0026\u0026 apt-get --purge autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/openssl/include/openssl/ \u0026\u0026     ln -s /usr/include/openssl/evp.h /usr/local/openssl/include/openssl/evp.h \u0026\u0026     mkdir -p /usr/local/openssl/lib/ \u0026\u0026     ln -s /usr/lib/x86_64-linux-gnu/libssl.a /usr/local/openssl/lib/libssl.a \u0026\u0026     ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/local/openssl/lib/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /root/.ssh/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 700 /root/.ssh/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_9.x | bash - \u0026\u0026     apt-get install nodejs -qq \u0026\u0026     npm install npm@latest -g \u0026\u0026     npm install -g gulp-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c 'debconf-set-selections \u003c\u003c\u003c \"mysql-server-5.7 mysql-server/root_password password $MYSQL_ROOT_PASS\"' \u0026\u0026 \t\tbash -c 'debconf-set-selections \u003c\u003c\u003c \"mysql-server-5.7 mysql-server/root_password_again password $MYSQL_ROOT_PASS\"' \u0026\u0026 \t\tDEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026 \t\tDEBIAN_FRONTEND=noninteractive apt-get install -qqy mysql-server-5.7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /etc/mysql/mysql.conf.d/disable_strict_mode.cnf \u0026\u0026     touch /etc/mysql/mysql.conf.d/disable_strict_mode.cnf \u0026\u0026     echo \"[mysqld] \\n sql_mode=IGNORE_SPACE,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\" \u003e\u003e /etc/mysql/mysql.conf.d/disable_strict_mode.cnf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install rabbitmq-server  -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install nginx  -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt install memcached  -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt install redis-server  -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:ondrej/php \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026     apt-get install -y -qq php-pear       php7.0-dev       php7.0-cli       php7.0-fpm       php7.0-apcu       php-amqp       php7.0-bcmath       php7.0-bz2       php7.0-calendar       php7.0-common       php7.0-ctype       php7.0-curl       php7.0-dba       php7.0-dom       php7.0-embed       php7.0-enchant       php7.0-exif       php7.0-ftp       php7.0-gd       php7.0-gettext       php7.0-gmp       php7.0-iconv       php7.0-imagick       php7.0-imap       php7.0-intl       php7.0-json       php7.0-ldap       php7.0-mbstring       php7.0-mcrypt       php-memcache       php7.0-memcached       php7.0-mongodb       php7.0-mysqli       php7.0-mysqlnd       php7.0-odbc       php7.0-opcache       php7.0-pdo       php7.0-pgsql       php7.0-phar       php7.0-phpdbg       php7.0-posix       php7.0-pspell       php7.0-redis       php7.0-shmop       php7.0-snmp       php7.0-soap       php7.0-sockets       php7.0-sqlite3       php7.0-sysvmsg       php7.0-sysvsem       php7.0-sysvshm       php7.0-tidy       php7.0-tokenizer       php7.0-wddx       php7.0-xdebug       php7.0-xml       php7.0-xmlreader       php7.0-xmlrpc       php7.0-xmlwriter       php7.0-xsl       php7.0-zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"date.timezone = UTC\" \u003e /etc/php/7.0/cli/conf.d/date_timezone.ini \u0026\u0026     echo \"date.timezone = UTC\" \u003e /etc/php/7.0/fpm/conf.d/date_timezone.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/composer"
          ]
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/root/composer"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "wget http://codeception.com/codecept.phar \u0026\u0026     chmod +x codecept.phar \u0026\u0026     mv codecept.phar /usr/local/bin/codecept"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean -y \u0026\u0026         apt-get autoremove -y \u0026\u0026 \t\trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}