MetaArgs: null
Stages:
- BaseName: alpine:3.6
  Commands:
  - Env:
    - Key: ANSIBLE_VERSION
      Value: 2.4.1.0
    Name: env
  - Env:
    - Key: JINJA2_VERSION
      Value: "2.10"
    Name: env
  - Env:
    - Key: AWSCLI_VERSION
      Value: 1.11.185
    Name: env
  - Env:
    - Key: KUBE_AWS_RELEASE
      Value: v0.9.8
    Name: env
  - Env:
    - Key: KUBECTL_VERSION
      Value: v1.8.5
    Name: env
  - CmdLine:
    - apk update     && apk add --no-cache unzip curl tar bash     python make bash
      vim jq      openssl openssh-client sshpass      gcc libffi-dev python-dev musl-dev
      openssl-dev py-pip py-virtualenv     git coreutils less bash-completion     libc6-compat
      &&     rm -rf /var/cache/apk/* &&     mkdir -p /etc/bash_completion.d/ /etc/profile.d/
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
      &&     chmod +x /usr/bin/kubectl &&     kubectl completion bash > /etc/bash_completion.d/kubectl.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --fail -sSL -O https://github.com/kubernetes-incubator/kube-aws/releases/download/${KUBE_AWS_RELEASE}/kube-aws-linux-amd64.tar.gz
      &&     tar xzf kube-aws-linux-amd64.tar.gz &&     mv linux-amd64/kube-aws /usr/local/bin/kube-aws
      &&     chmod +x /usr/local/bin/kube-aws &&     rm -rf linux-amd64/ &&     rm
      -f kube-aws-linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ansible==${ANSIBLE_VERSION} Jinja2==${JINJA2_VERSION} &&     rm
      -rf /root/.cache &&     find / -type f -regex '.*\.py[co]' -delete
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli==${AWSCLI_VERSION} boto &&     rm -rf /root/.cache &&     find
      / -type f -regex '.*\.py[co]' -delete &&     ln -s /usr/local/aws/bin/aws_bash_completer
      /etc/bash_completion.d/aws.sh &&     ln -s /usr/local/aws/bin/aws_completer
      /usr/local/bin/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /start.sh
  - CmdLine:
    - chmod +x /start.sh &&     mkdir /mnt/opsbox &&     ln -s /mnt/opsbox/.aws /root/.aws
      &&     ln -s /mnt/opsbox/.kube /root/.kube
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opsbox
  - Name: volume
    Volumes:
    - /opsbox
    - /mnt/opsbox
  - CmdLine:
    - /start.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.6
