{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ANSIBLE_VERSION",
              "Value": "2.4.1.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JINJA2_VERSION",
              "Value": "2.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AWSCLI_VERSION",
              "Value": "1.11.185"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBE_AWS_RELEASE",
              "Value": "v0.9.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBECTL_VERSION",
              "Value": "v1.8.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update     \u0026\u0026 apk add --no-cache unzip curl tar bash     python make bash vim jq      openssl openssh-client sshpass      gcc libffi-dev python-dev musl-dev openssl-dev py-pip py-virtualenv     git coreutils less bash-completion     libc6-compat \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     mkdir -p /etc/bash_completion.d/ /etc/profile.d/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl \u0026\u0026     chmod +x /usr/bin/kubectl \u0026\u0026     kubectl completion bash \u003e /etc/bash_completion.d/kubectl.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --fail -sSL -O https://github.com/kubernetes-incubator/kube-aws/releases/download/${KUBE_AWS_RELEASE}/kube-aws-linux-amd64.tar.gz \u0026\u0026     tar xzf kube-aws-linux-amd64.tar.gz \u0026\u0026     mv linux-amd64/kube-aws /usr/local/bin/kube-aws \u0026\u0026     chmod +x /usr/local/bin/kube-aws \u0026\u0026     rm -rf linux-amd64/ \u0026\u0026     rm -f kube-aws-linux-amd64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install ansible==${ANSIBLE_VERSION} Jinja2==${JINJA2_VERSION} \u0026\u0026     rm -rf /root/.cache \u0026\u0026     find / -type f -regex '.*\\.py[co]' -delete"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli==${AWSCLI_VERSION} boto \u0026\u0026     rm -rf /root/.cache \u0026\u0026     find / -type f -regex '.*\\.py[co]' -delete \u0026\u0026     ln -s /usr/local/aws/bin/aws_bash_completer /etc/bash_completion.d/aws.sh \u0026\u0026     ln -s /usr/local/aws/bin/aws_completer /usr/local/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start.sh",
            "/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /start.sh \u0026\u0026     mkdir /mnt/opsbox \u0026\u0026     ln -s /mnt/opsbox/.aws /root/.aws \u0026\u0026     ln -s /mnt/opsbox/.kube /root/.kube"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opsbox"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opsbox",
            "/mnt/opsbox"
          ]
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}