{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "alpine:3.10.2",
      "SourceCode": "FROM alpine:3.10.2 AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "alpine:3.10.2"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "REFRESHED_AT",
              "Value": "2019-12-14"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "HOME",
              "Value": "/opt/app/"
            },
            {
              "Key": "TERM",
              "Value": "xterm"
            },
            {
              "Key": "ERLANG_VERSION",
              "Value": "22.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"@main http://dl-cdn.alpinelinux.org/alpine/v3.10/main\" \u003e\u003e /etc/apk/repositories \u0026\u0026     echo \"@community http://dl-cdn.alpinelinux.org/alpine/v3.10/community\" \u003e\u003e /etc/apk/repositories \u0026\u0026     echo \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\" \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache --update --available upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --update pcre@edge \u0026\u0026     apk add --no-cache --update       bash       ca-certificates       openssl-dev       ncurses-dev       unixodbc-dev       zlib-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .erlang-build       dpkg-dev       dpkg       binutils       git       autoconf       build-base       perl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp/erlang-build"
        },
        {
          "CmdLine": [
            "git clone -b OTP-$ERLANG_VERSION --single-branch --depth 1 https://github.com/erlang/otp.git . \u0026\u0026     export ERL_TOP=/tmp/erlang-build \u0026\u0026     export PATH=$ERL_TOP/bin:$PATH \u0026\u0026     export CPPFlAGS=\"-D_BSD_SOURCE $CPPFLAGS\" \u0026\u0026     ./otp_build autoconf \u0026\u0026     ./configure       --prefix=/usr/local       --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"       --sysconfdir=/etc       --mandir=/usr/share/man       --infodir=/usr/share/info       --without-javac       --without-wx       --without-debugger       --without-observer       --without-jinterface       --without-cosEvent      --without-cosEventDomain       --without-cosFileTransfer       --without-cosNotification       --without-cosProperty       --without-cosTime       --without-cosTransactions       --without-et       --without-gs       --without-ic       --without-megaco       --without-orber       --without-percept       --without-typer       --enable-threads       --enable-shared-zlib       --enable-ssl=dynamic-ssl-lib       --enable-hipe \u0026\u0026     make -j4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make DESTDIR=/tmp install \u0026\u0026     ln -s /tmp/usr/local/lib/erlang /usr/local/lib/erlang \u0026\u0026     /tmp/usr/local/bin/erl -eval \"beam_lib:strip_release('/tmp/usr/local/lib/erlang/lib')\" -s init stop \u003e /dev/null \u0026\u0026     (/usr/bin/strip /tmp/usr/local/lib/erlang/erts-*/bin/* || true) \u0026\u0026     rm -rf /tmp/usr/local/lib/erlang/usr/ \u0026\u0026     rm -rf /tmp/usr/local/lib/erlang/misc/ \u0026\u0026     for DIR in /tmp/usr/local/lib/erlang/erts* /tmp/usr/local/lib/erlang/lib/*; do         rm -rf ${DIR}/src/*.erl;         rm -rf ${DIR}/doc;         rm -rf ${DIR}/man;         rm -rf ${DIR}/examples;         rm -rf ${DIR}/emacs;         rm -rf ${DIR}/c_src;     done \u0026\u0026     rm -rf /tmp/usr/local/lib/erlang/erts-*/lib/ \u0026\u0026     rm /tmp/usr/local/lib/erlang/erts-*/bin/dialyzer \u0026\u0026     rm /tmp/usr/local/lib/erlang/erts-*/bin/erlc \u0026\u0026     rm /tmp/usr/local/lib/erlang/erts-*/bin/typer \u0026\u0026     rm /tmp/usr/local/lib/erlang/erts-*/bin/ct_run"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.10.2",
      "SourceCode": "FROM alpine:3.10.2",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10.2"
      },
      "Commands": [
        {
          "Maintainer": "Paul Schoenfelder \u003cpaulschoenfelder@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "HOME",
              "Value": "/opt/app/"
            },
            {
              "Key": "TERM",
              "Value": "xterm"
            },
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/usr/local",
            "/usr/local"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${HOME}"
        },
        {
          "CmdLine": [
            "adduser -s /bin/sh -u 1001 -G root -h \"${HOME}\" -S -D default \u0026\u0026     chown -R 1001:0 \"${HOME}\" \u0026\u0026     echo \"@main http://dl-cdn.alpinelinux.org/alpine/v3.10/main\" \u003e\u003e /etc/apk/repositories \u0026\u0026     echo \"@community http://dl-cdn.alpinelinux.org/alpine/v3.10/community\" \u003e\u003e /etc/apk/repositories \u0026\u0026     echo \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk --no-cache --update --available upgrade \u0026\u0026     apk add --no-cache --update pcre@edge \u0026\u0026     apk add --no-cache --update       bash       ca-certificates       openssl       ncurses       unixodbc       zlib \u0026\u0026     update-ca-certificates --fresh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}