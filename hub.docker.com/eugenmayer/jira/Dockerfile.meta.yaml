MetaArgs: null
Stages:
- BaseName: alpine:3.6
  Commands:
  - Key: JIRA_VERSION
    Name: arg
    Value: 7.6.0
  - Key: JIRA_PRODUCT
    Name: arg
    Value: jira-software
  - Key: CONTAINER_UID
    Name: arg
    Value: "1000"
  - Key: CONTAINER_GID
    Name: arg
    Value: "1000"
  - Key: LANG_LANGUAGE
    Name: arg
    Value: en
  - Key: LANG_COUNTRY
    Name: arg
    Value: US
  - Env:
    - Key: JIRA_USER
      Value: jira
    - Key: JIRA_GROUP
      Value: jira
    - Key: JIRA_CONTEXT_PATH
      Value: ROOT
    - Key: JIRA_HOME
      Value: /var/atlassian/jira
    - Key: JIRA_INSTALL
      Value: /opt/jira
    - Key: JIRA_SCRIPTS
      Value: /usr/local/share/atlassian
    - Key: MYSQL_DRIVER_VERSION
      Value: 5.1.42
    - Key: DOCKERIZE_VERSION
      Value: v0.5.0
    - Key: POSTGRESQL_DRIVER_VERSION
      Value: 9.4.1212
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: '"$JIRA_INSTALL/jre"'
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$JAVA_HOME/bin
    - Key: LANG
      Value: ${LANG_LANGUAGE}_${LANG_COUNTRY}.UTF-8
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin
    - ${JIRA_SCRIPTS}
  - CmdLine:
    - "apk add --update                                          ca-certificates                                         bash\t\t\t\t\t\t\t\t\t\t\t\t
      \     su-exec\t\t\t\t\t\t\t\t\t\t\t      gzip                                                    curl
      \                                                   tini                                                    wget
      \                                                   xmlstarlet                                    &&
      \     echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf
      &&     curl https://raw.githubusercontent.com/vishnubob/wait-for-it/55c54a5abdfb32637b563b28cc088314b162195e/wait-for-it.sh
      -o /usr/bin/wait-for-it &&     export GLIBC_VERSION=2.25-r0 &&     wget --directory-prefix=/tmp
      https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk
      &&     apk add --allow-untrusted /tmp/glibc-${GLIBC_VERSION}.apk &&     wget
      --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk
      &&     apk add --allow-untrusted /tmp/glibc-bin-${GLIBC_VERSION}.apk &&     wget
      --directory-prefix=/tmp https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-i18n-${GLIBC_VERSION}.apk
      &&     apk --allow-untrusted add /tmp/glibc-i18n-${GLIBC_VERSION}.apk &&     /usr/glibc-compat/bin/localedef
      -i ${LANG_LANGUAGE}_${LANG_COUNTRY} -f UTF-8 ${LANG_LANGUAGE}_${LANG_COUNTRY}.UTF-8
      &&     export JIRA_BIN=atlassian-${JIRA_PRODUCT}-${JIRA_VERSION}-x64.bin &&
      \    mkdir -p ${JIRA_HOME}                           &&      mkdir -p ${JIRA_INSTALL}
      \                       &&      wget -O /tmp/jira.bin https://downloads.atlassian.com/software/jira/downloads/${JIRA_BIN}
      &&     chmod +x /tmp/jira.bin                          &&      /tmp/jira.bin
      -q -varfile                                 ${JIRA_SCRIPTS}/response.varfile
      \             &&      rm -f                                                     ${JIRA_INSTALL}/lib/mysql-connector-java*.jar
      &&      wget -O /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz                                                    http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz
      \     &&      tar xzf /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz
      \                                                   --directory=/tmp                                                                                        &&
      \     cp /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar
      \          ${JIRA_INSTALL}/lib/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar
      \                               &&      rm -f ${JIRA_INSTALL}/lib/postgresql-*.jar
      \                                                               &&      wget
      -O ${JIRA_INSTALL}/lib/postgresql-${POSTGRESQL_DRIVER_VERSION}.jar                                             https://jdbc.postgresql.org/download/postgresql-${POSTGRESQL_DRIVER_VERSION}.jar
      \                       &&      export CONTAINER_USER=jira                      &&
      \     export CONTAINER_UID=1000                       &&      export CONTAINER_GROUP=jira
      \                    &&      export CONTAINER_GID=1000                       &&
      \     addgroup -g $CONTAINER_GID $CONTAINER_GROUP     &&      adduser -u $CONTAINER_UID
      \                                      -G $CONTAINER_GROUP                                     -h
      /home/$CONTAINER_USER                                -s /bin/bash                                            -S
      $CONTAINER_USER"
    Name: run
    PrependShell: true
  - CmdLine:
    - export KEYSTORE=$JAVA_HOME/lib/security/cacerts &&     wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx1.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx2.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der
      &&     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der
      &&     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt
      -importcert -alias isrgrootx1 -file /tmp/letsencryptauthorityx1.der &&     keytool
      -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert
      -alias isrgrootx2 -file /tmp/letsencryptauthorityx2.der &&     keytool -trustcacerts
      -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1
      -file /tmp/lets-encrypt-x1-cross-signed.der &&     keytool -trustcacerts -keystore
      $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2
      -file /tmp/lets-encrypt-x2-cross-signed.der &&     keytool -trustcacerts -keystore
      $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3
      -file /tmp/lets-encrypt-x3-cross-signed.der &&     keytool -trustcacerts -keystore
      $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4
      -file /tmp/lets-encrypt-x4-cross-signed.der &&     wget -O /home/${JIRA_USER}/SSLPoke.class
      https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class
      &&     chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_HOME}    &&      chown -R $JIRA_USER:$JIRA_GROUP
      ${JIRA_INSTALL} &&      chown -R $JIRA_USER:$JIRA_GROUP ${JIRA_SCRIPTS} &&      chown
      -R $JIRA_USER:$JIRA_GROUP /home/${JIRA_USER} &&      wget -O /tmp/dockerize.tar.gz
      https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      &&     tar -C /usr/local/bin -xzvf /tmp/dockerize.tar.gz &&     rm /tmp/dockerize.tar.gz
      &&     apk del                                                   ca-certificates                                         gzip                                                    wget                                          &&      rm
      -rf /var/cache/apk/*                         &&      rm -rf /tmp/*                                   &&      rm
      -rf /var/log/*
    Name: run
    PrependShell: true
  - Labels:
    - Key: com.atlassian.application.jira.version
      Value: $JIRA_PRODUCT-$JIRA_VERSION
    - Key: com.atlassian.application.jira.userid
      Value: $CONTAINER_UID
    - Key: com.atlassian.application.jira.groupid
      Value: $CONTAINER_GID
    Name: label
  - Name: user
    User: jira
  - Name: workdir
    Path: ${JIRA_HOME}
  - Name: volume
    Volumes:
    - /var/atlassian/jira
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /sbin/tini
    - --
    - /usr/local/share/atlassian/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jira
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.6
