{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "eugenmayer/java:server-jre8",
      "SourceCode": "FROM eugenmayer/java:server-jre8",
      "Platform": "",
      "From": {
        "Image": "eugenmayer/java:server-jre8"
      },
      "Commands": [
        {
          "Key": "CONFLUENCE_VERSION",
          "Name": "arg",
          "Value": "6.5.1"
        },
        {
          "Key": "CONTAINER_UID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "CONTAINER_GID",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "LANG_LANGUAGE",
          "Name": "arg",
          "Value": "en"
        },
        {
          "Key": "LANG_COUNTRY",
          "Name": "arg",
          "Value": "US"
        },
        {
          "Env": [
            {
              "Key": "CONF_HOME",
              "Value": "/var/atlassian/confluence"
            },
            {
              "Key": "CONF_INSTALL",
              "Value": "/opt/atlassian/confluence"
            },
            {
              "Key": "CONFLUENCE_DB_HOST",
              "Value": "db"
            },
            {
              "Key": "CONFLUENCE_DB_PORT",
              "Value": "3306"
            },
            {
              "Key": "MYSQL_DRIVER_VERSION",
              "Value": "5.1.44"
            },
            {
              "Key": "POSTGRESQL_DRIVER_VERSION",
              "Value": "9.4.1212"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/custom_scripts.sh",
            "/usr/local/bin/custom_scripts.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/wait-for-it.sh",
            "/usr/local/bin/wait-for-it"
          ]
        },
        {
          "CmdLine": [
            "export CONTAINER_USER=confluence                \u0026\u0026      export CONTAINER_GROUP=confluence               \u0026\u0026      addgroup -g $CONTAINER_GID $CONTAINER_GROUP     \u0026\u0026      adduser -u $CONTAINER_UID                                       -G $CONTAINER_GROUP                                     -h /home/$CONTAINER_USER                                -s /bin/bash                                            -S $CONTAINER_USER                      \u0026\u0026      apk add --update                                          ca-certificates                                         gzip                                                    curl                                                    tar                                                     msttcorefonts-installer                                 ttf-dejavu\t\t\t\t\t                          fontconfig                                              motif\t\t\t\t\t\t                              ghostscript                                             graphviz                                                xmlstarlet                                              wget                                          \u0026\u0026      update-ms-fonts                                 \u0026\u0026     fc-cache -f                                     \u0026\u0026     /usr/glibc-compat/bin/localedef -i ${LANG_LANGUAGE}_${LANG_COUNTRY} -f UTF-8 ${LANG_LANGUAGE}_${LANG_COUNTRY}.UTF-8 \u0026\u0026     mkdir -p ${CONF_HOME}     \u0026\u0026 chown -R confluence:confluence ${CONF_HOME}     \u0026\u0026 mkdir -p ${CONF_INSTALL}/conf     \u0026\u0026 wget -O /tmp/atlassian-confluence-${CONFLUENCE_VERSION}.tar.gz http://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-${CONFLUENCE_VERSION}.tar.gz \u0026\u0026     tar xzf /tmp/atlassian-confluence-${CONFLUENCE_VERSION}.tar.gz --strip-components=1 -C ${CONF_INSTALL} \u0026\u0026     echo \"confluence.home=${CONF_HOME}\" \u003e ${CONF_INSTALL}/confluence/WEB-INF/classes/confluence-init.properties \u0026\u0026     rm -f                                                     ${CONF_INSTALL}/lib/mysql-connector-java*.jar \u0026\u0026      wget -O /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz                                                    http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz \u0026\u0026     tar xzf /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz                                                    -C /tmp \u0026\u0026     cp /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar           ${CONF_INSTALL}/lib/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar                                \u0026\u0026      rm -f ${CONF_INSTALL}/lib/postgresql-*.jar                                                                \u0026\u0026      wget -O ${CONF_INSTALL}/lib/postgresql-${POSTGRESQL_DRIVER_VERSION}.jar                                              https://jdbc.postgresql.org/download/postgresql-${POSTGRESQL_DRIVER_VERSION}.jar                          \u0026\u0026     chown -R confluence:confluence ${CONF_INSTALL} \u0026\u0026     export KEYSTORE=$JRE_HOME/lib/security/cacerts \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx1.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx2.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der \u0026\u0026     wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx1 -file /tmp/letsencryptauthorityx1.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2 -file /tmp/letsencryptauthorityx2.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file /tmp/lets-encrypt-x1-cross-signed.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file /tmp/lets-encrypt-x2-cross-signed.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file /tmp/lets-encrypt-x3-cross-signed.der \u0026\u0026     keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file /tmp/lets-encrypt-x4-cross-signed.der \u0026\u0026     wget -O /home/${CONTAINER_USER}/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class \u0026\u0026     chown -R confluence:confluence /home/${CONTAINER_USER} \u0026\u0026     export TINI_VERSION=0.9.0 \u0026\u0026     curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static -o /bin/tini \u0026\u0026     chmod +x /bin/tini \u0026\u0026     apk del wget \u0026\u0026     rm -rf /var/cache/apk/*                         \u0026\u0026      rm -rf /tmp/*                                   \u0026\u0026      rm -rf /var/log/* \u0026\u0026     mkdir -p /docker-entrypoint.d \u0026\u0026     chmod +x /usr/local/bin/custom_scripts.sh \u0026\u0026     chmod +x /usr/local/bin/wait-for-it"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8090",
            "8091"
          ]
        },
        {
          "Name": "user",
          "User": "confluence"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "confluence.cfg.xml.tpl",
            "${CONF_HOME}/confluence.cfg.xml"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/atlassian/confluence"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${CONF_HOME}"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/docker-entrypoint.sh",
            "/home/confluence/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/bin/tini",
            "--",
            "/home/confluence/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "confluence"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}