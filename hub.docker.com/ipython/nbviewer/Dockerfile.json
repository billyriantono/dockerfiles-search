{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -yq --no-install-recommends     curl     bzip2     ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MINICONDA_VERSION",
              "Value": "4.7.10"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     curl -sSL https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -o /tmp/miniconda.sh \u0026\u0026     echo \"1c945f2b3335c7b2b15130b1b2dc5cf4 *miniconda.sh\" | md5sum -c - \u0026\u0026     /bin/bash miniconda.sh -f -b -p /opt/conda \u0026\u0026     rm miniconda.sh \u0026\u0026     /opt/conda/bin/conda config --system --prepend channels conda-forge \u0026\u0026     /opt/conda/bin/conda config --system --set auto_update_conda false \u0026\u0026     /opt/conda/bin/conda config --system --set show_channel_urls true \u0026\u0026     /opt/conda/bin/conda install --quiet --yes conda=\"${MINICONDA_VERSION%.*}.*\" \u0026\u0026     /opt/conda/bin/conda update --all --quiet --yes \u0026\u0026     conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/srv/nbviewer"
        },
        {
          "CmdLine": [
            "conda install nodejs git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./package.json",
            "/srv/nbviewer/"
          ]
        },
        {
          "CmdLine": [
            "npm install ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./requirements.txt",
            "/srv/nbviewer/"
          ]
        },
        {
          "CmdLine": [
            "conda install --file requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nbviewer/static/bower.json",
            "./nbviewer/static/.bowerrc",
            "/srv/nbviewer/nbviewer/static/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/srv/nbviewer/nbviewer/static"
        },
        {
          "CmdLine": [
            "../../node_modules/.bin/bower install   --allow-root   --config.interactive=false"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/srv/nbviewer"
        },
        {
          "CmdLine": [
            "conda install invoke"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./nbviewer/static/less",
            "/srv/nbviewer/nbviewer/static/less/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./tasks.py",
            "/srv/nbviewer/"
          ]
        },
        {
          "CmdLine": [
            "invoke less"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda remove -y nodejs invoke \u0026\u0026   conda clean -ay \u0026\u0026   rm -rf /opt/conda/pkgs /opt/conda/conda-meta \u0026\u0026   rm -rf /srv/nbviewer/node_modules /srv/nbviewer/notebook-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/srv/nbviewer"
          ]
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/conda",
            "/opt/conda"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/srv/nbviewer",
            "/srv/nbviewer"
          ]
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Jupyter Project \u003cjupyter@googlegroups.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "NBVIEWER_THREADS",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/srv/nbviewer"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "user",
          "User": "nobody"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "python",
            "-m",
            "nbviewer",
            "--port=8080"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}