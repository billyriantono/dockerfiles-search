MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Alfred UC b6pzeusbc54tvhw5jgpyw8pwz2x6gs@gmail.com
    Name: maintainer
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install software-properties-common apache2-utils git heirloom-mailx
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install hunspell hunspell-ko -y
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:jonathonf/vim -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install wget curl vim-nox zip jq -yq
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://bootstrap.pypa.io/get-pip.py | python3 -
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install docker
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_6.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install yarn -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y     language-pack-ko &&     dpkg-reconfigure
      locales &&     locale-gen en_US.UTF-8 &&     /usr/sbin/update-locale LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get clean && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
