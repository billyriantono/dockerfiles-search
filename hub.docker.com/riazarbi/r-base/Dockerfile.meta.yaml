MetaArgs:
- DefaultValue: ubuntu:bionic-20190612@sha256:9b1702dcfe32c873a770a32cfd306dd7fc1c4fd134adfb783db68defc8894b3c
  Key: BASE_CONTAINER
  ProvidedValue: null
  Value: ubuntu:bionic-20190612@sha256:9b1702dcfe32c873a770a32cfd306dd7fc1c4fd134adfb783db68defc8894b3c
Stages:
- BaseName: $BASE_CONTAINER
  Commands:
  - Labels:
    - Key: authors
      Value: '"Riaz Arbi,Gordon Inggs"'
    Name: label
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive     apt-get clean &&     DEBIAN_FRONTEND=noninteractive     apt-get
      update &&     apt-get install -y     vim     nano     htop     bash     cmake     make     gcc     wget     apt-utils     git     sudo     locales     dnsutils     curl     screen     python3     python3-pip  &&
      apt-get update  && apt-get install -yq --no-install-recommends     wget     bzip2     ca-certificates     sudo     locales     fonts-liberation     npm     libffi-dev     libapparmor1     libedit2     lsb-release     psmisc     libssl1.0.0     gnupg     apt-transport-https  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: '"Africa/Johannesburg"'
    Name: env
  - CmdLine:
    - echo $TZ > /etc/timezone  && apt-get update  && DEBIAN_FRONTEND=noninteractive     apt-get
      install -y tzdata  && rm /etc/localtime  && ln -snf /usr/share/zoneinfo/$TZ
      /etc/localtime  && dpkg-reconfigure -f noninteractive tzdata  && apt-get clean  &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive     locale-gen en_ZA &&     locale-gen en_ZA.UTF-8
      &&     dpkg-reconfigure --frontend=noninteractive locales &&     update-locale
    Name: run
    PrependShell: true
  - Env:
    - Key: LANGUAGE
      Value: en_ZA.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_ZA.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_ZA.UTF-8
    Name: env
  - Env:
    - Key: LC_CTYPE
      Value: en_ZA.UTF-8
    Name: env
  - Env:
    - Key: LC_MESSAGES
      Value: en_ZA.UTF-8
    Name: env
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive     apt-get update &&     apt-get install -y     default-jre     default-jdk     gnupg2     unixodbc-dev     unixodbc-bin     unixodbc     libaio1     alien  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://github.com/cityofcapetown/docker_datascience/raw/master/base/drivers/oracle-instantclient18.3-basic-18.3.0.0.0-1.x86_64.rpm  &&
      wget -q https://github.com/cityofcapetown/docker_datascience/raw/master/base/drivers/oracle-instantclient18.3-odbc-18.3.0.0.0-1.x86_64.rpm  &&
      alien -i oracle-instantclient18.3-basic-18.3.0.0.0-1.x86_64.rpm  && alien -i
      oracle-instantclient18.3-odbc-18.3.0.0.0-1.x86_64.rpm  && rm oracle-instantclient18.3-basic-18.3.0.0.0-1.x86_64.rpm  &&
      rm oracle-instantclient18.3-odbc-18.3.0.0.0-1.x86_64.rpm
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/lib/oracle/18.3/client64/lib/${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
    Name: env
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "[Oracle Driver 18.3]\nDescription=Oracle Unicode driver\nDriver=/usr/lib/oracle/18.3/client64/lib/libsqora.so.18.1\nUsageCount=1\nFileUsage=1"   >>
      /etc/odbcinst.ini
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "1433"
  - CmdLine:
    - python3 -m pip install --upgrade pip setuptools wheel  && python3 -m pip install
      minio  && python3 -m pip install pyhdb  && python3 -m pip install pandas  &&
      python3 -m pip install pyarrow  && python3 -m pip install python-magic
    Name: run
    PrependShell: true
  - Key: NB_USER
    Name: arg
    Value: '"jovyan"'
  - Key: NB_UID
    Name: arg
    Value: '"1000"'
  - Key: NB_GID
    Name: arg
    Value: '"100"'
  - CmdLine:
    - apt-get update && apt-get install -yq --no-install-recommends     npm nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install --upgrade pip &&     python3 -m pip install jupyter jupyterhub
      jupyterlab  && python3 -m pip install nbgitpuller
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/bash
    - Key: NB_USER
      Value: $NB_USER
    - Key: NB_UID
      Value: $NB_UID
    - Key: NB_GID
      Value: $NB_GID
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - fix-permissions
    - /usr/local/bin/fix-permissions
  - CmdLine:
    - chmod +x /usr/local/bin/fix-permissions
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "auth requisite pam_deny.so" >> /etc/pam.d/su &&     sed -i.bak -e 's/^%admin/#%admin/'
      /etc/sudoers &&     sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers &&     useradd
      -m -s /bin/bash -N -u $NB_UID $NB_USER &&     chmod g+w /etc/passwd
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/fix-permissions $HOME
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - npm cache clean --force &&     jupyter notebook --generate-config &&     rm
      -rf /home/$NB_USER/.cache/yarn &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - /bin/bash
    - start-notebook.sh
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-notebook.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-singleuser.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /etc/jupyter/
  - Name: user
    User: root
  - CmdLine:
    - fix-permissions /etc/jupyter/
    Name: run
    PrependShell: true
  - Env:
    - Key: RSTUDIO_VERSION
      Value: 1.2.5001
    Name: env
  - CmdLine:
    - gpg --keyserver keyserver.ubuntu.com --recv-key E298A3A825C0D65DFD57CBB651716619E084DAB9  &&
      gpg -a --export E298A3A825C0D65DFD57CBB651716619E084DAB9 | sudo apt-key add
      -  && echo deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/ >>
      /etc/apt/sources.list  && echo deb http://za.archive.ubuntu.com/ubuntu/ bionic-backports
      main restricted universe >> /etc/apt/sources.list  && DEBIAN_FRONTEND=noninteractive     apt-get
      update &&     apt-get upgrade -y &&     apt-get install -y --no-install-recommends     fonts-dejavu     gfortran     libclang-dev     r-base     r-recommended     r-base-dev     gdebi-core  &&
      wget --quiet https://download2.rstudio.org/server/bionic/amd64/rstudio-server-${RSTUDIO_VERSION}-amd64.deb  &&
      gdebi -n rstudio-server-${RSTUDIO_VERSION}-amd64.deb  && rm rstudio-server-${RSTUDIO_VERSION}-amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q "https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.9.923-amd64.deb"
      -O ss-latest.deb  && gdebi -n ss-latest.deb  && rm -f ss-latest.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive     apt-get update &&     apt-get install -y
      --no-install-recommends     libxml2-dev     libssh2-1-dev     libgit2-dev  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e 'install.packages(c("littler", "docopt"))'  && ln -s /usr/local/lib/R/site-library/littler/examples/install2.r
      /usr/local/bin/install2.r  && ln -s /usr/local/lib/R/site-library/littler/examples/installGithub.r
      /usr/local/bin/installGithub.r  && ln -s /usr/local/lib/R/site-library/littler/bin/r
      /usr/local/bin/r  && install2.r -e -n 3 -s --deps TRUE  devtools  shiny  rmarkdown  knitr  RJDBC
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages('IRkernel')"  && R --quiet -e "IRkernel::installspec(user=FALSE)"
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 -m pip install jupyter-server-proxy   && python3 -m pip install jupyter-rsession-proxy
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/fix-permissions $HOME
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_USER
  - Env:
    - Key: PATH
      Value: '"${PATH}:/usr/lib/rstudio-server/bin"'
    Name: env
  From:
    Image: $BASE_CONTAINER
  Name: ""
  Platform: ""
  SourceCode: FROM $BASE_CONTAINER
