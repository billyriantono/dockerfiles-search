MetaArgs:
- DefaultValue: openjdk
  Key: JAVA_IMAGE
  ProvidedValue: null
  Value: openjdk
- DefaultValue: 8-alpine
  Key: JAVA_TAG
  ProvidedValue: null
  Value: 8-alpine
Stages:
- BaseName: ${JAVA_IMAGE}:${JAVA_TAG}
  Commands:
  - Key: GS_PRODUCT
    Name: arg
    Value: insightedge
  - Key: GS_VERSION
    Name: arg
    Value: 15.2.0
  - Key: GS_MILESTONE
    Name: arg
    Value: m6
  - Key: GS_BUILD
    Name: arg
    Value: 20700-87
  - Key: GS_BUILD_NAME
    Name: arg
    Value: 15.2.0-m6-wed-20
  - Key: GS_NAME
    Name: arg
    Value: gigaspaces-${GS_PRODUCT}-enterprise-${GS_BUILD_NAME}
  - Key: GS_URL
    Name: arg
    Value: https://gigaspaces-releases-eu.s3.amazonaws.com/${GS_PRODUCT}/${GS_VERSION}/${GS_NAME}.zip
  - Env:
    - Key: GS_HOME
      Value: /opt/gigaspaces
    Name: env
  - Name: workdir
    Path: ${GS_HOME}
  - CmdLine:
    - apk --no-cache add openssl wget unzip &&    wget --progress=bar:force -O /tmp/gigaspaces.zip
      ${GS_URL} &&    unzip -q /tmp/gigaspaces.zip -d /tmp &&    mkdir -p ${GS_HOME}
      &&    mv /tmp/${GS_NAME}/* ${GS_HOME}/ &&    rm -f /tmp/gigaspaces.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache nss
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update && apk add --no-cache libc6-compat
    Name: run
    PrependShell: true
  - CmdLine:
    - if test -f ${GS_HOME}/tools/kubernetes/client/pom.xml;then    apk --no-cache
      add maven &&    mvn package clean --file=${GS_HOME}/tools/kubernetes/client/pom.xml
      &&    apk --no-cache del maven;    fi
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"/lib:/lib64"'
    Name: env
  - Env:
    - Key: GS_NIC_ADDRESS
      Value: '"#eth0:ip#"'
    Name: env
  - Env:
    - Key: GS_MULTICAST_LOOKUP_PORT
      Value: "4174"
    Name: env
  - Env:
    - Key: GS_LRMI_PORT
      Value: 8200-8300
    Name: env
  - Env:
    - Key: GS_MANAGER_REST_PORT
      Value: "8090"
    Name: env
  - Env:
    - Key: GS_WEBUI_PORT
      Value: "8099"
    Name: env
  - Env:
    - Key: GS_WEBSTER_HTTP_PORT
      Value: "8199"
    Name: env
  - Env:
    - Key: GS_RMI_REGISTRY_PORT
      Value: "10098"
    Name: env
  - Env:
    - Key: GS_REST_PORT
      Value: "8089"
    Name: env
  - Env:
    - Key: GS_ZOOKEEPER_CLIENT_PORT
      Value: "2181"
    Name: env
  - Env:
    - Key: GS_MANAGER_ZOOKEEPER_DISCOVERY_PORT
      Value: "2888"
    Name: env
  - Env:
    - Key: GS_MANAGER_ZOOKEEPER_LEADER_ELECTION_PORT
      Value: "3888"
    Name: env
  - Env:
    - Key: SPARK_MASTER_PORT
      Value: "7077"
    Name: env
  - Env:
    - Key: SPARK_MASTER_WEBUI_PORT
      Value: "8080"
    Name: env
  - Env:
    - Key: SPARK_MASTER_REST_PORT
      Value: "6066"
    Name: env
  - Env:
    - Key: ZEPPELIN_PORT
      Value: "9090"
    Name: env
  - Name: expose
    Ports:
    - ${GS_LRMI_PORT}
    - ${GS_MANAGER_REST_PORT}
    - ${GS_MANAGER_ZOOKEEPER_DISCOVERY_PORT}
    - ${GS_MANAGER_ZOOKEEPER_LEADER_ELECTION_PORT}
    - ${GS_MULTICAST_LOOKUP_PORT}
    - ${GS_REST_PORT}
    - ${GS_RMI_REGISTRY_PORT}
    - ${GS_WEBSTER_HTTP_PORT}
    - ${GS_WEBUI_PORT}
    - ${GS_ZOOKEEPER_CLIENT_PORT}
    - ${SPARK_MASTER_PORT}
    - ${SPARK_MASTER_REST_PORT}
    - ${SPARK_MASTER_WEBUI_PORT}
    - ${ZEPPELIN_PORT}
  - Env:
    - Key: SPARK_HOME
      Value: ${GS_HOME}/insightedge/spark
    Name: env
  - Env:
    - Key: SPARK_CONF_DIR
      Value: '"${SPARK_HOME}/conf"'
    Name: env
  - CmdLine:
    - set -ex &&     apk upgrade --no-cache &&     apk add --no-cache bash tini libc6-compat
      linux-pam &&     mkdir -p ${SPARK_HOME} &&     mkdir -p ${SPARK_HOME}/work-dir
      &&     touch ${SPARK_HOME}/RELEASE &&     rm /bin/sh &&     ln -sv /bin/bash
      /bin/sh &&     echo "auth required pam_wheel.so use_uid" >> /etc/pam.d/su &&     chgrp
      root /etc/passwd && chmod ug+rw /etc/passwd
    Name: run
    PrependShell: true
  - Key: SPARK_K8S_CLIENT_VERSION
    Name: arg
    Value: 4.4.2
  - CmdLine:
    - wget https://repo1.maven.org/maven2/io/fabric8/kubernetes-client/${SPARK_K8S_CLIENT_VERSION}/kubernetes-client-${SPARK_K8S_CLIENT_VERSION}.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://repo1.maven.org/maven2/io/fabric8/kubernetes-model/${SPARK_K8S_CLIENT_VERSION}/kubernetes-model-${SPARK_K8S_CLIENT_VERSION}.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://repo1.maven.org/maven2/io/fabric8/kubernetes-model-common/${SPARK_K8S_CLIENT_VERSION}/kubernetes-model-common-${SPARK_K8S_CLIENT_VERSION}.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - rm ${SPARK_HOME}/jars/kubernetes-*.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - mv kubernetes-client-${SPARK_K8S_CLIENT_VERSION}.jar ${SPARK_HOME}/jars/
    Name: run
    PrependShell: true
  - CmdLine:
    - mv kubernetes-model-${SPARK_K8S_CLIENT_VERSION}.jar ${SPARK_HOME}/jars/
    Name: run
    PrependShell: true
  - CmdLine:
    - mv kubernetes-model-common-${SPARK_K8S_CLIENT_VERSION}.jar ${SPARK_HOME}/jars/
    Name: run
    PrependShell: true
  - Env:
    - Key: INSIGHTEDGE_CLASSPATH
      Value: '"${GS_HOME}/insightedge/lib/*:${GS_HOME}/insightedge/lib/jdbc/*:${GS_HOME}/insightedge/lib/analytics-xtreme/*:${GS_HOME}/lib/required/*:${GS_HOME}/lib/optional/spatial/*"'
    Name: env
  - Env:
    - Key: SPARK_DIST_CLASSPATH
      Value: '"${SPARK_DIST_CLASSPATH}:${INSIGHTEDGE_CLASSPATH}"'
    Name: env
  - Env:
    - Key: INSIGHTEDGE_SPACE_NAME
      Value: insightedge-space
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-entrypoint.sh
    - /opt/docker-entrypoint.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - entrypoint.sh
    - /opt/entrypoint.sh
  - CmdLine:
    - cp /opt/gigaspaces/insightedge/spark/kubernetes/dockerfiles/spark/entrypoint.sh
      /opt/spark_entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - host
    - run-agent
    - --auto
    Name: cmd
    PrependShell: false
  From:
    Image: ${JAVA_IMAGE}:${JAVA_TAG}
  Name: ""
  Platform: ""
  SourceCode: FROM ${JAVA_IMAGE}:${JAVA_TAG}
