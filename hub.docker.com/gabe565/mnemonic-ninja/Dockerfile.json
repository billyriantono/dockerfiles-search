{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "vendor",
      "BaseName": "gabe565/prestissimo",
      "SourceCode": "FROM gabe565/prestissimo as vendor",
      "Platform": "",
      "As": "vendor",
      "From": {
        "Image": "gabe565/prestissimo"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "composer.json",
            "composer.lock",
            "./"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 composer install         --ignore-platform-reqs         --no-autoloader         --no-interaction         --no-progress         --no-suggest"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "./"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 composer dump-autoload         --classmap-authoritative         --no-interaction"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "frontend",
      "BaseName": "node:8-alpine",
      "SourceCode": "FROM node:8-alpine as frontend",
      "Platform": "",
      "As": "frontend",
      "From": {
        "Image": "node:8-alpine"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "artisan",
            "package.json",
            "webpack.mix.js",
            "yarn.lock",
            "./"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 yarn install         --frozen-lockfile         --no-cache         --no-progress"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "resources/assets/",
            "resources/assets/"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 yarn run production         --no-progress"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "public",
            "public/"
          ]
        }
      ]
    },
    {
      "Name": "packer",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine as packer",
      "Platform": "",
      "As": "packer",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "82:82",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./",
            "."
          ]
        },
        {
          "Chown": "82:82",
          "From": "vendor",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/vendor",
            "vendor/"
          ]
        },
        {
          "Chown": "82:82",
          "From": "frontend",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/public",
            "public/"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk add --no-cache xz     \u0026\u0026 ln -s ../storage/app/public /app/public/storage     \u0026\u0026 XZ_OPT=-9e tar -Jcf /app.tar.xz -C /app .     \u0026\u0026 apk del xz"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "php:7.3-fpm-alpine",
      "SourceCode": "FROM php:7.3-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.3-fpm-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Gabe Cook \u003cgabe565@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk add --no-cache         fcgi         rsync     \u0026\u0026 docker-php-ext-install mysqli pdo_mysql     \u0026\u0026 rm -rf /tmp/* /var/cache/apk/*     \u0026\u0026 sed -ri         -e 's/;(ping\\.path)/\\1/' /usr/local/etc/php-fpm.d/www.conf     \u0026\u0026 cd \"$PHP_INI_DIR\"     \u0026\u0026 ln -s php.ini-production php.ini     \u0026\u0026 sed -ri         -e 's/^(expose_php).*$/\\1 = Off/'         php.ini-production"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Chown": "",
          "From": "packer",
          "Name": "copy",
          "SourcesAndDest": [
            "/app.tar.xz",
            "/usr/src/app.tar.xz"
          ]
        },
        {
          "Chown": "root",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/entrypoint",
            "docker/health-check",
            "/"
          ]
        },
        {
          "Health": {
            "Interval": 60000000000,
            "Test": [
              "CMD-SHELL",
              "/health-check"
            ],
            "Timeout": 5000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/entrypoint"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}