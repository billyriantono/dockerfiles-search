{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Maintainer": "Abner G Jacobsen - http://daspanel.com \u003cadmin@daspanel.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VERSION"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "$VCS_URL"
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"abnerjacobsen/dizendo-dev\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Dizendo.ai dev\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "init",
              "Value": "/lib/systemd/systemd"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "\"UTC\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "\"C.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "\"C.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "\"C.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_CTYPE",
              "Value": "\"C.UTF-8\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "debian/sources.list",
            "/etc/apt/sources.list"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "debian/preferences",
            "/etc/apt/preferences"
          ]
        },
        {
          "CmdLine": [
            "apt-get -y update     \u0026\u0026 apt-get install -y ca-certificates apt-utils apt-transport-https     \u0026\u0026 apt-get -y upgrade     \u0026\u0026 apt-get clean     \u0026\u0026 apt-get install -y         systemd         locales         tzdata         gnupg         net-tools         bash         curl         wget         unzip         patch         nano         procps         lsof         dos2unix         tree         pwgen         git         bzip2         python3         python3-all-dev         python3-pip         sudo         findutils         tar     \u0026\u0026 apt-get install -y --no-install-recommends         portaudio19-dev         swig         libpulse-dev         alsa-utils     \u0026\u0026 locale-gen C.UTF-8     \u0026\u0026 ln -fs /usr/share/zoneinfo/${TZ} /etc/localtime     \u0026\u0026 curl \"https://bootstrap.pypa.io/get-pip.py\" | python3     \u0026\u0026 pip3 install --no-cache-dir --upgrade pip setuptools     \u0026\u0026 rm -r /root/.cache     \u0026\u0026 pip3 install pipenv     \u0026\u0026 groupadd -g 1000 app     \u0026\u0026 useradd -u 1000 -d /home/app -s /bin/false -g app app     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/*     \u0026\u0026 rm -f /lib/systemd/system/multi-user.target.wants/*         /etc/systemd/system/*.wants/*         /lib/systemd/system/local-fs.target.wants/*         /lib/systemd/system/sockets.target.wants/*udev*         /lib/systemd/system/sockets.target.wants/*initctl*         /lib/systemd/system/sysinit.target.wants/systemd-tmpfiles-setup*         /lib/systemd/system/systemd-update-utmp*     \u0026\u0026 systemctl set-default multi-user.target"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R app.app /data/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "chown -R app.app /app/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/sys/fs/cgroup"
          ]
        },
        {
          "CmdLine": [
            "/lib/systemd/systemd"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}