{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "ShopfullyGroup \u003cserver@doveconviene.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk add --update --no-cache --virtual build-dependencies     python openssh-client git rsync openssl ca-certificates python-dev libffi-dev openssl-dev build-base \u0026\u0026     python -m ensurepip \u0026\u0026     pip install --upgrade pip \u0026\u0026     rm -r /usr/lib/python*/ensurepip \u0026\u0026     pip install --upgrade cffi \u0026\u0026     pip install --upgrade ansible Jinja2 ansible-lint \u0026\u0026     pip install --upgrade awscli boto3 ec2 \u0026\u0026     pip install --upgrade pyvmomi pysphere \u0026\u0026     pip install --upgrade dopy \u0026\u0026     pip install --upgrade docker-py \u0026\u0026     rm -r /root/.cache \u0026\u0026     export PATH=~/.local/bin:$PATH"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/.local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ansible-playbook"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/ansible",
            "/root/.aws",
            "/root/.ssh",
            "/var/run/docker.sock",
            "/root/.ssh",
            "/root/vault-pass.txt"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/etc/ansible"
        }
      ]
    }
  ]
}