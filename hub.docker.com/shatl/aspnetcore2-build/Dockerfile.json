{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "microsoft/dotnet:2.1-sdk",
      "SourceCode": "FROM microsoft/dotnet:2.1-sdk",
      "Platform": "",
      "From": {
        "Image": "microsoft/dotnet:2.1-sdk"
      },
      "Commands": [
        {
          "Maintainer": "\u003cvk@alphacloud.net\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "dotnet tool install --global dotnet-outdated     \u0026\u0026 dotnet tool install --global nukeeper"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "DependencyCache.csproj",
            "/work/cache/"
          ]
        },
        {
          "CmdLine": [
            "cd /work/cache     \u0026\u0026 dotnet add package AWSSDK.Core     \u0026\u0026 dotnet add package AWSSDK.Extensions.NETCore.Setup     \u0026\u0026 dotnet add package AWSSDK.IdentityManagement     \u0026\u0026 dotnet add package AWSSDK.KeyManagementService     \u0026\u0026 dotnet add package AWSSDK.S3     \u0026\u0026 dotnet add package AWSSDK.SQS     \u0026\u0026 dotnet add package AWSSDK.SimpleNotificationService     \u0026\u0026 dotnet add package AngleSharp     \u0026\u0026 dotnet add package AutoFixture     \u0026\u0026 dotnet add package AutoMapper     \u0026\u0026 dotnet add package Autofac     \u0026\u0026 dotnet add package Autofac.Extensions.DependencyInjection     \u0026\u0026 dotnet add package Autofac.Extras.DynamicProxy     \u0026\u0026 dotnet add package Autofac.Extras.Moq     \u0026\u0026 dotnet add package Autofac.Extras.Quartz     \u0026\u0026 dotnet add package Automapper     \u0026\u0026 dotnet add package Castle.Core     \u0026\u0026 dotnet add package Confluent.Kafka     \u0026\u0026 dotnet add package Dapper     \u0026\u0026 dotnet add package FluentAssertions     \u0026\u0026 dotnet add package FluentValidation     \u0026\u0026 dotnet add package FluentValidation.AspNetCore     \u0026\u0026 dotnet add package Humanizer.Core     \u0026\u0026 dotnet add package JetBrains.Annotations     \u0026\u0026 dotnet add package LibLog     \u0026\u0026 dotnet add package MOQ     \u0026\u0026 dotnet add package MassTransit     \u0026\u0026 dotnet add package MassTransit.Autofac     \u0026\u0026 dotnet add package MassTransit.Automatonymous     \u0026\u0026 dotnet add package MassTransit.Extensions.DependencyInjection     \u0026\u0026 dotnet add package MassTransit.MongoDb     \u0026\u0026 dotnet add package MassTransit.RabbitMQ     \u0026\u0026 dotnet add package MassTransit.Redis     \u0026\u0026 dotnet add package MassTransit.SerilogIntegration -v 5.*     \u0026\u0026 dotnet add package MassTransit.TestFramework     \u0026\u0026 dotnet add package MediatR     \u0026\u0026 dotnet add package MediatR.Extensions.Microsoft.DependencyInjection     \u0026\u0026 dotnet add package MessagePack     \u0026\u0026 dotnet add package MessagePackAnalyzer     \u0026\u0026 dotnet add package Microsoft.AspNetCore.Mvc.Testing     \u0026\u0026 dotnet add package Microsoft.AspNetCore.SignalR     \u0026\u0026 dotnet add package Microsoft.AspNetCore.SignalR.Common     \u0026\u0026 dotnet add package Microsoft.AspNetCore.SignalR.Protocols.Json     \u0026\u0026 dotnet add package Microsoft.AspNetCore.SignalR.Protocols.MessagePack     \u0026\u0026 dotnet add package Microsoft.CSharp     \u0026\u0026 dotnet add package Microsoft.CodeAnalysis.CSharp     \u0026\u0026 dotnet add package Microsoft.Extensions.Caching.Memory     \u0026\u0026 dotnet add package Microsoft.Extensions.Http.Polly     \u0026\u0026 dotnet add package Microsoft.IO.RecyclableMemoryStream     \u0026\u0026 dotnet add package MongoDB.Driver     \u0026\u0026 dotnet add package NHibernate     \u0026\u0026 dotnet add package Newtonsoft.Json     \u0026\u0026 dotnet add package Polly     \u0026\u0026 dotnet add package Polly.Caching.IDistributedCache     \u0026\u0026 dotnet add package Polly.Caching.MemoryCache     \u0026\u0026 dotnet add package Polly.Extensions.Http     \u0026\u0026 dotnet add package Quartz     \u0026\u0026 dotnet add package RabbitMQ     \u0026\u0026 dotnet add package RedLock.net     \u0026\u0026 dotnet add package RedLock.net.StrongName     \u0026\u0026 dotnet add package Serilog     \u0026\u0026 dotnet add package Serilog.AspNetCore     \u0026\u0026 dotnet add package Serilog.Exceptions     \u0026\u0026 dotnet add package Serilog.Extensions.Logging     \u0026\u0026 dotnet add package Serilog.Sinks.ColoredConsole     \u0026\u0026 dotnet add package Serilog.Sinks.File     \u0026\u0026 dotnet add package StackExchange.Redis     \u0026\u0026 dotnet add package SwashBuckle.AspNetCore.Examples     \u0026\u0026 dotnet add package Swashbuckle.AspNetCore     \u0026\u0026 dotnet add package System.Buffers     \u0026\u0026 dotnet add package System.ComponentModel.Annotations     \u0026\u0026 dotnet add package System.ComponentModel.Primitives     \u0026\u0026 dotnet add package System.Data.SqlClient     \u0026\u0026 dotnet add package System.Dynamic.Runtime     \u0026\u0026 dotnet add package System.Linq.Queryable     \u0026\u0026 dotnet add package System.Reflection.Emit     \u0026\u0026 dotnet add package System.Reflection.TypeExtensions     \u0026\u0026 dotnet add package System.Reflection.TypeExtensions     \u0026\u0026 dotnet add package System.Reflection.TypeExtensions     \u0026\u0026 dotnet add package System.Runtime.Loader     \u0026\u0026 dotnet add package System.Security.SecureString     \u0026\u0026 dotnet add package System.Threading.Tasks.Extensions     \u0026\u0026 dotnet add package System.ValueTuple     \u0026\u0026 dotnet add package System.Xml.XmlSerializer     \u0026\u0026 dotnet add package librdkafka.redist     \u0026\u0026 dotnet add package xunit     \u0026\u0026 dotnet add package xunit.runner.visualstudio     \u0026\u0026 dotnet restore     \u0026\u0026 cat /work/cache/DependencyCache.csproj     \u0026\u0026 cd /     \u0026\u0026 rm -rf /work/cache/*     \u0026\u0026 echo \"# Add .Net Core tools\" \u003e\u003e ~/.bash_profile     \u0026\u0026 echo \"export PATH=\\\"\\$PATH:/root/.dotnet/tools\\\"\" \u003e\u003e ~/.bash_profile"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}