MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: boredazfcuk
    Name: maintainer
  - Key: app_repo
    Name: arg
    Value: '"SickGear/SickGear"'
  - Key: build_dependencies
    Name: arg
    Value: '"py-pip gcc python-dev libxml2-dev libxslt-dev musl-dev"'
  - Key: app_dependencies
    Name: arg
    Value: '"git python libxml2 libxslt tzdata unrar unzip p7zip openssl wget"'
  - Env:
    - Key: app_base_dir
      Value: '"/SickGear"'
    - Key: config_dir
      Value: '"/config"'
    Name: env
  - CmdLine:
    - echo "$(date '+%d/%m/%Y - %H:%M:%S') | ***** BUILD STARTED *****" && echo "$(date
      '+%d/%m/%Y - %H:%M:%S') | Create application directory" &&    mkdir -p "${app_base_dir}"
      && echo "$(date '+%d/%m/%Y - %H:%M:%S') | Install build dependencies" &&    apk
      add --no-cache --no-progress --virtual=build-deps ${build_dependencies} && echo
      "$(date '+%d/%m/%Y - %H:%M:%S') | Install dependencies" &&    apk add --no-cache
      --no-progress ${app_dependencies} && echo "$(date '+%d/%m/%Y - %H:%M:%S') |
      Install ${app_repo}" &&    git clone -b develop "https://github.com/${app_repo}.git"
      "${app_base_dir}" && echo "$(date '+%d/%m/%Y - %H:%M:%S') | Install Python requirements"
      &&    echo -e "\nlxml\nregex\nscandir" >> "${app_base_dir}/requirements.txt"
      &&    pip install --no-cache-dir -r "${app_base_dir}/requirements.txt" && echo
      "$(date '+%d/%m/%Y - %H:%M:%S') | Clean up" &&    apk del --purge build-deps
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-sickgear.sh
    - /usr/local/bin/start-sickgear.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - healthcheck.sh
    - /usr/local/bin/healthcheck.sh
  - CmdLine:
    - echo "$(date '+%d/%m/%Y - %H:%M:%S') | Set permissions on scripts" &&    chmod
      +x /usr/local/bin/start-sickgear.sh /usr/local/bin/healthcheck.sh && echo "$(date
      '+%d/%m/%Y - %H:%M:%S') | ***** BUILD COMPLETE *****"
    Name: run
    PrependShell: true
  - Health:
      Interval: 60000000000
      StartPeriod: 10000000000
      Test:
      - CMD-SHELL
      - /usr/local/bin/healthcheck.sh
      Timeout: 10000000000
    Name: healthcheck
  - Name: volume
    Volumes:
    - '"${config_dir}"'
  - Name: workdir
    Path: '"${app_base_dir}"'
  - CmdLine:
    - /usr/local/bin/start-sickgear.sh
    Name: cmd
    PrependShell: true
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
