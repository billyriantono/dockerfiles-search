{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"Ubuntu-based development environment for Statistical Machine Translation (SMT) research.\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "reference1",
              "Value": "\"Reference for SMT environment: https://qiita.com/R-Yoshi/items/9a809c0a03e02874fabb#no4\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "reference2",
              "Value": "\"Reference for Dockerfile for containerized dev env: https://dev.to/aghost7/developing-from-containers-42fp\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "reference3",
              "Value": "\"Detailed reference for Dockerfile for containerized dev env: https://github.com/AGhost-7/docker-dev/tree/master/tutorial\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Ivan Setiawan \u003cj.ivan.setiawan@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "vendor",
              "Value": "\"Arcadia, Inc.\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"2.2\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_USER",
              "Value": "smtdev"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBCONF_NOWARNINGS",
              "Value": "yes"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     sudo     build-essential     git-core     pkg-config     automake     libtool     wget     zlib1g-dev     python-dev     libbz2-dev     bash-completion     curl     tmux     byobu     vim     libboost-all-dev     openssh-client     \u0026\u0026     yes | sudo unminimize \u0026\u0026     adduser --disabled-password --gecos '' \"$DOCKER_USER\" \u0026\u0026     adduser \"$DOCKER_USER\" sudo \u0026\u0026     echo '%sudo ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers \u0026\u0026     touch /home/$DOCKER_USER/.sudo_as_admin_successful \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "\"$DOCKER_USER\""
        },
        {
          "Name": "workdir",
          "Path": "\"/home/$DOCKER_USER\""
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./dot.vimrc",
            "/tmp/dot.vimrc"
          ]
        },
        {
          "CmdLine": [
            "echo 'set -o noclobber' \u003e\u003e /home/$DOCKER_USER/.bashrc \u0026\u0026     echo 'alias ex=\"exit\"' \u003e\u003e /home/$DOCKER_USER/.bashrc \u0026\u0026     echo 'alias rm=\"rm -i\"' \u003e\u003e /home/$DOCKER_USER/.bashrc \u0026\u0026     echo 'alias cp=\"cp -i\"' \u003e\u003e /home/$DOCKER_USER/.bashrc \u0026\u0026     echo 'alias mv=\"mv -i\"' \u003e\u003e /home/$DOCKER_USER/.bashrc \u0026\u0026     echo '2' | byobu-ctrl-a \u0026\u0026     cat /tmp/dot.vimrc \u003e /home/$DOCKER_USER/.vimrc \u0026\u0026     sudo rm /tmp/dot.vimrc \u0026\u0026     mkdir -p /home/$DOCKER_USER/localwks/moses/mosesdecoder \u0026\u0026     git clone https://github.com/moses-smt/mosesdecoder.git     /home/$DOCKER_USER/localwks/moses/mosesdecoder \u0026\u0026     curl -L -o /home/$DOCKER_USER/localwks/sample-models.tgz     http://www.statmt.org/moses/download/sample-models.tgz \u0026\u0026     tar xzf /home/$DOCKER_USER/localwks/sample-models.tgz     -C /home/$DOCKER_USER/localwks \u0026\u0026     cd /home/$DOCKER_USER/localwks/moses/mosesdecoder \u0026\u0026 ./bjam \u0026\u0026     cd /home/$DOCKER_USER/localwks/sample-models \u0026\u0026     /home/$DOCKER_USER/localwks/moses/mosesdecoder/bin/moses     -f phrase-model/moses.ini \u003c phrase-model/in \u003e out"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}