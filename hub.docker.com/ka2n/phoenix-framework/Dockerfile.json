{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "shanesveller/elixir-lang:latest",
      "SourceCode": "FROM shanesveller/elixir-lang:latest",
      "Platform": "",
      "From": {
        "Image": "shanesveller/elixir-lang:latest"
      },
      "Commands": [
        {
          "Maintainer": "Shane Sveller \u003cshane@shanesveller.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive \u0026\u0026     apt-get update -q \u0026\u0026     apt-get -y install apt-transport-https \u0026\u0026     curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \u0026\u0026     echo 'deb https://deb.nodesource.com/node_5.x trusty main' \u003e /etc/apt/sources.list.d/nodesource.list \u0026\u0026     apt-get update -q \u0026\u0026     apt-get -y install git inotify-tools nodejs=5.0.0-1nodesource1~trusty1 postgresql-client \u0026\u0026     apt-get clean -y \u0026\u0026     rm -rf /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Expression": "WORKDIR /usr/src/app",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY *.js* /usr/src/app/",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN npm install",
          "Name": "onbuild"
        },
        {
          "Expression": "ENV MIX_ENV prod",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY mix.* /usr/src/app/",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY config /usr/src/app/",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN mix do deps.get, deps.compile",
          "Name": "onbuild"
        }
      ]
    }
  ]
}