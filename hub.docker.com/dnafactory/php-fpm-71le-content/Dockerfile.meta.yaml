MetaArgs: null
Stages:
- BaseName: gw000/keras:2.1.1-gpu
  Commands:
  - Maintainer: gw0 [http://gw.tnode.com/] <gw.2017@ena.one>
    Name: maintainer
  - Key: THEANO_VERSION
    Name: arg
    Value: 1.0.0
  - Env:
    - Key: THEANO_FLAGS
      Value: '''device=cpu,floatX=float32'''
    Name: env
  - CmdLine:
    - pip --no-cache-dir install git+https://github.com/Theano/Theano.git@rel-${THEANO_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://archive.ubuntu.com/ubuntu/ xenial main restricted universe
      multiverse' > /etc/apt/sources.list.d/ubuntu-16.04.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq  && apt-get install --no-install-recommends -y     ubuntu-archive-keyring  &&
      apt-get install --no-install-recommends -y     openmpi-bin=1.10.2-8ubuntu1     openmpi-common=1.10.2-8ubuntu1  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Key: CNTK_VERSION
    Name: arg
    Value: "2.3"
  - Key: CNTK_DEVICE
    Name: arg
    Value: CPU-Only
  - CmdLine:
    - pip --no-cache-dir install https://cntk.ai/PythonWheel/${CNTK_DEVICE}/cntk-${CNTK_VERSION}-cp27-cp27mu-linux_x86_64.whl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq  && apt-get install --no-install-recommends -y     python3     python3-dev     python3-pip     python3-setuptools     python3-virtualenv     python3-wheel     pkg-config     libopenblas-base     python3-numpy     python3-scipy     python3-h5py     python3-yaml     python3-pydot  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Key: TENSORFLOW_VERSION
    Name: arg
    Value: 1.4.0
  - Key: TENSORFLOW_DEVICE
    Name: arg
    Value: gpu
  - Key: TENSORFLOW_APPEND
    Name: arg
    Value: _gpu
  - CmdLine:
    - pip3 --no-cache-dir install https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_DEVICE}/tensorflow${TENSORFLOW_APPEND}-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl
    Name: run
    PrependShell: true
  - Key: THEANO_VERSION
    Name: arg
    Value: 1.0.0
  - Env:
    - Key: THEANO_FLAGS
      Value: '''device=cpu,floatX=float32'''
    Name: env
  - CmdLine:
    - pip3 --no-cache-dir install git+https://github.com/Theano/Theano.git@rel-${THEANO_VERSION}
    Name: run
    PrependShell: true
  - Key: CNTK_VERSION
    Name: arg
    Value: "2.3"
  - Key: CNTK_DEVICE
    Name: arg
    Value: GPU
  - CmdLine:
    - pip3 --no-cache-dir install https://cntk.ai/PythonWheel/${CNTK_DEVICE}/cntk-${CNTK_VERSION}-cp35-cp35m-linux_x86_64.whl
    Name: run
    PrependShell: true
  - Key: KERAS_VERSION
    Name: arg
    Value: 2.1.1
  - Env:
    - Key: KERAS_BACKEND
      Value: tensorflow
    Name: env
  - CmdLine:
    - pip3 --no-cache-dir install --no-dependencies git+https://github.com/fchollet/keras.git@${KERAS_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq  && apt-get install --no-install-recommends -y     less     procps     vim-tiny     build-essential     libffi-dev     python-matplotlib     python-pillow     python3-matplotlib     python3-pillow  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install     ipython     ipykernel     jupyter     pandas     scikit-learn     statsmodels  &&
      python -m ipykernel.kernelspec  && pip3 --no-cache-dir install     ipython     ipykernel     pandas     scikit-learn     statsmodels  &&
      python3 -m ipykernel.kernelspec
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''alias ll="ls --color=auto -lA"'' >> /root/.bashrc  && echo ''"\e[5~":
      history-search-backward'' >> /root/.inputrc  && echo ''"\e[6~": history-search-forward''
      >> /root/.inputrc'
    Name: run
    PrependShell: true
  - Env:
    - Key: PASSWD
      Value: '''sha1:98b767162d34:8da1bc3c75a0f29145769edc977375a373407824'''
    Name: env
  - CmdLine:
    - python -c "import tensorflow; print(tensorflow.__version__)"  && python -c "import
      theano; print(theano.__version__)"  && python -c "import cntk; print(cntk.__version__)"  &&
      python3 -c "import tensorflow; print(tensorflow.__version__)"  && python3 -c
      "import theano; print(theano.__version__)"  && python3 -c "import cntk; print(cntk.__version__)"  &&
      dpkg-query -l > /dpkg-query-l.txt  && pip2 freeze > /pip2-freeze.txt  && pip3
      freeze > /pip3-freeze.txt
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - Name: expose
    Ports:
    - "6006"
  - Name: workdir
    Path: /srv/
  - CmdLine:
    - /bin/bash -c 'jupyter notebook --allow-root --no-browser --ip=127.0.0.1 --NotebookApp.password="$PASSWD"
      "$@"'
    Name: cmd
    PrependShell: true
  From:
    Image: gw000/keras:2.1.1-gpu
  Name: ""
  Platform: ""
  SourceCode: FROM gw000/keras:2.1.1-gpu
