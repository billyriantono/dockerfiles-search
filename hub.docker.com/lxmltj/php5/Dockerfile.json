{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-apache",
      "SourceCode": "FROM php:5.6-apache",
      "Platform": "",
      "From": {
        "Image": "php:5.6-apache"
      },
      "Commands": [
        {
          "Maintainer": "Ximing LU \u003clxmltj@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "APACHE_DOCUMENT_ROOT",
              "Value": "/var/www/html"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf     \u0026\u0026 sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf     \u0026\u0026 openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/ssl-cert-snakeoil.key -out /etc/ssl/certs/ssl-cert-snakeoil.pem -subj \"/CN=*\"     \u0026\u0026 a2enmod rewrite     \u0026\u0026 a2ensite default-ssl     \u0026\u0026 a2enmod ssl     \u0026\u0026 usermod -u 1000 www-data     \u0026\u0026 chown -R www-data:www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \tapt-get install -y --no-install-recommends \t\tlibjpeg-dev \t\tlibpng-dev \t; \t\tdocker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \tdocker-php-ext-install gd mysqli opcache; \t\tapt-mark auto '.*' \u003e /dev/null; \tapt-mark manual $savedAptMark; \tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \t\t| awk '/=\u003e/ { print $3 }' \t\t| sort -u \t\t| xargs -r dpkg-query -S \t\t| cut -d: -f1 \t\t| sort -u \t\t| xargs -rt apt-mark manual; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'date.timezone = Europe/Paris'; \t\techo 'upload_max_filesize = 256M'; \t\techo 'post_max_size = 256M'; \t\techo 'xdebug.max_nesting_level = 256'; \t} \u003e /usr/local/etc/php/conf.d/custom.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libmemcached11 libmemcachedutil2 build-essential libmemcached-dev libz-dev     \u0026\u0026 pecl install memcached-2.2.0     \u0026\u0026 echo extension=memcached.so \u003e\u003e /usr/local/etc/php/conf.d/memcached.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer     \u0026\u0026 chmod a+x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}