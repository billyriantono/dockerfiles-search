MetaArgs: null
Stages:
- BaseName: electronifie/docker-scientific-python:latest
  Commands:
  - Maintainer: Ian McAllister "https://github.com/imcallister/pythonart"
    Name: maintainer
  - CmdLine:
    - yum install -y libffi-devel && yum install -y cairo-devel
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /tmp
  - CmdLine:
    - pip install --upgrade pip && pip install -r /tmp/requirements.txt && rm -f /tmp/requirements.txt
    Name: run
    PrependShell: true
  - Env:
    - Key: JUPYTER_HOME
      Value: /jupyter
    Name: env
  - Env:
    - Key: JUPYTER_NOTEBOOK_DIR
      Value: $JUPYTER_HOME/notebook
    Name: env
  - Env:
    - Key: JUPYTER_PORT
      Value: "8080"
    Name: env
  - Env:
    - Key: USERID
      Value: "5000"
    Name: env
  - CmdLine:
    - groupadd -g $USERID artist
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -u $USERID -g artist artist
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.6.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /usr/bin/tini
  - CmdLine:
    - chmod +x /usr/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - Name: user
    User: $USERID
  - CmdLine:
    - mkdir /home/artist/work
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/artist/work
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - jupyter
    - notebook
    - --port=8888
    - --no-browser
    - --ip=0.0.0.0
    Name: cmd
    PrependShell: false
  From:
    Image: electronifie/docker-scientific-python:latest
  Name: ""
  Platform: ""
  SourceCode: FROM electronifie/docker-scientific-python:latest
