{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:trusty",
      "SourceCode": "FROM ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "ubuntu:trusty"
      },
      "Commands": [
        {
          "Maintainer": "David Karchmer \u003cdkarchmer@ampervue.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "8.0.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YASM_VERSION",
              "Value": "1.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NUM_CORES",
              "Value": "4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq remove ffmpeg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get purge -y python.*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo deb http://archive.ubuntu.com/ubuntu trusty universe multiverse \u003e\u003e /etc/apt/sources.list;     apt-get update -qq \u0026\u0026 apt-get install -y --force-yes     ant     autoconf     automake     build-essential     curl     checkinstall     cmake     default-jdk     f2c     gfortran     git     g++     imagemagick     libass-dev     libatlas-base-dev     libavcodec-dev     libavformat-dev     libcnf-dev     libfaac-dev     libfreeimage-dev     libjpeg-dev     libjasper-dev     libgnutls-dev     liblapack3     libmp3lame-dev     libpq-dev     libpng-dev     libssl-dev     libtheora-dev     libtiff4-dev     libtool     libxine-dev     libxvidcore-dev     libv4l-dev     libvorbis-dev     mercurial     openssl     pkg-config     postgresql-client     supervisor     wget     unzip;     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 97FC712E4C024BBEA48A61ED3A5CA953F73C700D"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 mkdir -p /usr/src/python \t\u0026\u0026 curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \t\u0026\u0026 curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \t\u0026\u0026 gpg --verify python.tar.xz.asc \t\u0026\u0026 tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t\u0026\u0026 rm python.tar.xz* \t\u0026\u0026 cd /usr/src/python \t\u0026\u0026 ./configure --enable-shared \t\u0026\u0026 make -j$(nproc) \t\u0026\u0026 make install \t\u0026\u0026 ldconfig \t\u0026\u0026 find /usr/local \t\t\\( -type d -a -name test -o -name tests \\) \t\t-o \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \t\t-exec rm -rf '{}' + \t\u0026\u0026 rm -rf /usr/src/python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/bin \t\u0026\u0026 ln -s easy_install-3.4 easy_install \t\u0026\u0026 ln -s idle3 idle \t\u0026\u0026 ln -s pip3 pip \t\u0026\u0026 ln -s pydoc3 pydoc \t\u0026\u0026 ln -s python3 python \t\u0026\u0026 ln -s python-config3 python-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir --upgrade --ignore-installed pip==$PYTHON_PIP_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src"
        },
        {
          "CmdLine": [
            "curl -Os http://www.tortall.net/projects/yasm/releases/yasm-${YASM_VERSION}.tar.gz     \u0026\u0026 tar xzvf yasm-${YASM_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src/yasm-${YASM_VERSION}"
        },
        {
          "CmdLine": [
            "./configure     \u0026\u0026 make -j ${NUM_CORES}     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/"
        },
        {
          "CmdLine": [
            "rm -rf /usr/local/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoremove -y; apt-get clean -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /work"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/work"
        }
      ]
    }
  ]
}