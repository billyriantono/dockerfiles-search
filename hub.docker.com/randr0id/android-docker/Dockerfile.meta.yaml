MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"randy@randr0id.com"'
    Name: label
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    Name: label
  - Labels:
    - Key: org.label-schema.name
      Value: '"randr0id/android-docker"'
    Name: label
  - Labels:
    - Key: org.label-schema.description
      Value: '"A Docker image for building and testing Android apps."'
    Name: label
  - Labels:
    - Key: org.label-schema.version
      Value: '"1.0"'
    Name: label
  - Labels:
    - Key: org.label-schema.build-date
      Value: ${BUILD_DATE}
    Name: label
  - Labels:
    - Key: org.label-schema.url
      Value: '"https://hub.docker.com/r/randr0id/android-docker"'
    Name: label
  - Labels:
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/randr0id/android-docker"'
    Name: label
  - Labels:
    - Key: org.label-schema.vcs-ref
      Value: ${VCS_REF}
    Name: label
  - Env:
    - Key: VERSION_SDK_TOOLS
      Value: '"4333796"'
    Name: env
  - Env:
    - Key: ANDROID_HOME
      Value: '"/sdk"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"${PATH}:${ANDROID_HOME}/tools"'
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt -qq update &&     apt install -qqy --no-install-recommends         build-essential         bzip2         curl         git-core         html2text         libc6-i386         lib32stdc++6         lib32gcc1         lib32ncurses5         lib32z1         openjdk-8-jdk         qemu-kvm         unzip     &&
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f /etc/ssl/certs/java/cacerts;     /var/lib/dpkg/info/ca-certificates-java.postinst
      configure
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s "https://dl.google.com/android/repository/sdk-tools-linux-${VERSION_SDK_TOOLS}.zip"
      > /sdk.zip &&     unzip /sdk.zip -d ${ANDROID_HOME} &&     rm -v /sdk.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "${ANDROID_HOME}/licenses/" &&     printf "8933bad161af4178b1185d1a37fbf41ea5269c55\\nd56f5187479451eabf01fb78af6dfcb131a6481e"
      > "${ANDROID_HOME}/licenses/android-sdk-license" &&     printf "84831b9409646a918e30573bab4c9c91346d8abd\\n504667f4c0de7af1a06de9f4b1727b84351f2910"
      > "${ANDROID_HOME}/licenses/android-sdk-preview-license"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /root/.android &&     touch /root/.android/repositories.cfg &&     "${ANDROID_HOME}/tools/bin/sdkmanager"
      --update
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - packages.txt
    - /sdk
  - CmdLine:
    - while read -r package; do PACKAGES="${PACKAGES}${package} "; done < /sdk/packages.txt
      &&     "${ANDROID_HOME}/tools/bin/sdkmanager" ${PACKAGES}
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | "${ANDROID_HOME}/tools/bin/sdkmanager" --licenses
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /utils
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install-google-cloud-sdk.sh
    - /utils
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - start-test-emulator.sh
    - /utils
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - wait-for-emulator.sh
    - /utils
  - CmdLine:
    - '"${ANDROID_HOME}/tools/bin/sdkmanager" --update'
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
