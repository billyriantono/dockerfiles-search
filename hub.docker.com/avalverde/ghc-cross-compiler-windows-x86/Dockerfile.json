{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "avalverde/cross-compiler-windows-x86",
      "SourceCode": "FROM avalverde/cross-compiler-windows-x86",
      "Platform": "",
      "From": {
        "Image": "avalverde/cross-compiler-windows-x86"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            ": \"Install i386 libs and some deps \"  \u0026\u0026 dpkg --add-architecture i386  \u0026\u0026 apt-get update  \u0026\u0026 apt-get -y install       gcc-multilib       libc6:i386       ncurses-dev:i386       libgmp-dev:i386       libbz2-dev:i386       libz-dev:i386  \u0026\u0026 : \"Install libgmp-mingw32\" \u0026\u0026 cd /usr/src/mxe \u0026\u0026 make gmp  \u0026\u0026 : \"Clean up to keep the image small\" \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            ": \"Add non-root user\"  \u0026\u0026 adduser --disabled-password --shell /bin/bash --uid 1000 xghc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GHC_VERSION",
              "Value": "8.0.1"
            },
            {
              "Key": "STACK_RESOLVER",
              "Value": "nightly-2016-07-01"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "wrappers/",
            "/usr/src/mxe/usr/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "stack.xz",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            ": \"Download and unpack i386-linux GHC from binary distribution\"  \u0026\u0026 curl -L https://downloads.haskell.org/~ghc/${GHC_VERSION}/ghc-${GHC_VERSION}-i386-deb8-linux.tar.xz | tar xvJ  \u0026\u0026 cd /tmp/ghc-${GHC_VERSION}  \u0026\u0026 : \"Configure and install i386-linux GHC from binary distribution\"  \u0026\u0026 ./configure --prefix=/usr/src/mxe/usr/i386-unknown-linux                 --with-gcc=/usr/src/mxe/usr/bin/i386-unknown-linux-gcc                 --with-as=/usr/src/mxe/usr/bin/i386-unknown-linux-as                 --with-ld=/usr/src/mxe/usr/bin/i386-unknown-linux-ld  \u0026\u0026 make install  \u0026\u0026 : \"link to prefixed versions in PATH\"  \u0026\u0026 for bin in /usr/src/mxe/usr/i386-unknown-linux/bin/*; do     ln -s ${bin} /usr/src/mxe/usr/bin/i386-unknown-linux-$(basename ${bin}); done  \u0026\u0026 : \"Install i386-unknown-linux-stack\"  \u0026\u0026 xz -d /tmp/stack.xz  \u0026\u0026 chmod +x /tmp/stack  \u0026\u0026 mv /tmp/stack /usr/local/bin  \u0026\u0026 : \"Install i386-unknown-linux-cabal\"  \u0026\u0026 chown root /home/xghc  \u0026\u0026 STACK_ROOT=/home/xghc/.stack i386-unknown-linux-stack        --local-bin-path=/usr/local/bin        install cabal-install happy alex  \u0026\u0026 chown -R xghc /home/xghc  \u0026\u0026 : \"Clean up to keep the image small\" \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOST_TRIPLE",
              "Value": "i686-w64-mingw32"
            },
            {
              "Key": "WINDRES",
              "Value": "/usr/src/mxe/usr/bin/${CROSS_TRIPLE}-windres"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            ": \"Prepare mingw32 cross-compiling env\"  \u0026\u0026 : \"link to a CROSS_TRIPLE versions to HOST_TRIPLE versions because some \"       \"configure scripts choke on it\"  \u0026\u0026 for src in /usr/src/mxe/usr/bin/${CROSS_TRIPLE}-*; do     ln -s ${src} $(src=${src} bash -c 'echo ${src/${CROSS_TRIPLE}/${HOST_TRIPLE}}');     done  \u0026\u0026 : \"Wrap windres so it gets the path to the cross system includes\"  \u0026\u0026 echo '#!/bin/bash' \u003e\u003e /usr/local/bin/windres  \u0026\u0026 echo 'exec $WINDRES -I/usr/src/mxe/usr/i686-w64-mingw32.static/include \"$@\"' \u003e\u003e /usr/local/bin/windres  \u0026\u0026 chmod +x /usr/local/bin/windres  \u0026\u0026 : \"Symlink header since some step expects it with a different case\"  \u0026\u0026 ln -s /usr/src/mxe/usr/${CROSS_TRIPLE}/include/shlobj.h          /usr/src/mxe/usr/${CROSS_TRIPLE}/include/Shlobj.h"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "patches/",
            "/tmp/patches/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build.mk",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            ": \"Download source to build cross-compiler\"  \u0026\u0026 curl -L https://www.haskell.org/ghc/dist/${GHC_VERSION}/ghc-${GHC_VERSION}-src.tar.xz  | tar xvJ   \u0026\u0026 cd /tmp/ghc-${GHC_VERSION}  \u0026\u0026 : \"Apply patches for cross-compiling, copy configuration file and configure\"  \u0026\u0026 for p in /tmp/patches/ghc/*.patch; do patch -p1 -i ${p}; done  \u0026\u0026 for p in /tmp/patches/hsc2hs/*.patch; do patch -p1 -d utils/hsc2hs -i ${p}; done  \u0026\u0026 autoreconf  \u0026\u0026 cp /tmp/build.mk mk/build.mk  \u0026\u0026 ./configure --target=${HOST_TRIPLE}                 --prefix=/usr/src/mxe/usr                 --with-ghc=i386-unknown-linux-ghc                 --with-emulator=$(which wine)                 --with-gmp-includes=/usr/src/mxe/usr/include                 --with-gmp-libraries=/usr/src/mxe/usr/lib  \u0026\u0026 : \"Build and install cross-compiler\"  \u0026\u0026 make -j8  \u0026\u0026 make install  \u0026\u0026 : \"Clean up to keep the image small\" \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "TestTH.hs",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            ": \"Test that we can cross-compile TemplateHaskell\"  \u0026\u0026 ${HOST_TRIPLE}-ghc --make TestTH.hs -fexternal-interpreter  \u0026\u0026 wine TestTH.exe  \u0026\u0026 : \"Clean up to keep the image small\" \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "xghc"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/home/xghc/.local/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/home/xghc"
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}