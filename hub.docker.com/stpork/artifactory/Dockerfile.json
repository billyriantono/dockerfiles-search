{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jdk",
      "SourceCode": "FROM openjdk:8-jdk",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jdk"
      },
      "Commands": [
        {
          "Maintainer": "stpork from Mordor team",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "ARTIFACTORY_VERSION",
              "Value": "5.8.1"
            },
            {
              "Key": "ARTIFACTORY_HOME",
              "Value": "/var/opt/artifactory"
            },
            {
              "Key": "ARTIFACTORY_DATA",
              "Value": "/data/artifactory"
            },
            {
              "Key": "ARTIFACTORY_URL",
              "Value": "http://artifactory:8081/artifactory"
            },
            {
              "Key": "HAZELCAST_INTERFACE",
              "Value": "10.*.*.*"
            },
            {
              "Key": "HAZELCAST_PORT",
              "Value": "10001"
            },
            {
              "Key": "DB_HOST",
              "Value": "postgresql"
            },
            {
              "Key": "DB_PORT",
              "Value": "5432"
            },
            {
              "Key": "DB_USER",
              "Value": "artifactory"
            },
            {
              "Key": "DB_NAME",
              "Value": "artifactory"
            },
            {
              "Key": "DB_PASSWORD",
              "Value": "JEurqTbgSUbf7QbTndZ8Ckb1ZyRAociRRGqFHYhzwAuio9bu1LQtniqnQkSNXHsH7i1tGS6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TOMCAT_HOME",
              "Value": "${ARTIFACTORY_HOME}/tomcat"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 mkdir -p /var/opt  \u0026\u0026 cd /var/opt \u0026\u0026 ARTIFACTORY_INSTALL=artifactory-pro-${ARTIFACTORY_VERSION} \u0026\u0026 PACKAGE=jfrog-${ARTIFACTORY_INSTALL}.zip \u0026\u0026 curl -fsSL \"https://bintray.com/jfrog/artifactory-pro/download_file?file_path=org/artifactory/pro/jfrog-artifactory-pro/${ARTIFACTORY_VERSION}/${PACKAGE}\" -o ${PACKAGE} \u0026\u0026 unzip -q ${PACKAGE} \u0026\u0026 mv ${ARTIFACTORY_INSTALL}/etc ${ARTIFACTORY_INSTALL}/etc-clean \u0026\u0026 rm -rf ${PACKAGE} ${ARTIFACTORY_INSTALL}/logs \u0026\u0026 mv ${ARTIFACTORY_INSTALL} ${ARTIFACTORY_HOME} \u0026\u0026 find $ARTIFACTORY_HOME -type f -name \"*.exe\" -o -name \"*.bat\" | xargs /bin/rm \u0026\u0026 mkdir -p ${ARTIFACTORY_DATA} \u0026\u0026 ln -s ${ARTIFACTORY_DATA}/access ${ARTIFACTORY_HOME}/access \u0026\u0026 ln -s ${ARTIFACTORY_DATA}/backup ${ARTIFACTORY_HOME}/backup \u0026\u0026 ln -s ${ARTIFACTORY_DATA}/data ${ARTIFACTORY_HOME}/data \u0026\u0026 ln -s ${ARTIFACTORY_DATA}/logs ${ARTIFACTORY_HOME}/logs \u0026\u0026 ln -s ${ARTIFACTORY_DATA}/run ${ARTIFACTORY_HOME}/run \u0026\u0026 ln -s ${ARTIFACTORY_DATA}/etc ${ARTIFACTORY_HOME}/etc \u0026\u0026 sed -i 's/-n \"\\$ARTIFACTORY_PID\"/-d $(dirname \"$ARTIFACTORY_PID\")/' $ARTIFACTORY_HOME/bin/artifactory.sh \u0026\u0026 echo 'if [ ! -z \"${EXTRA_JAVA_OPTIONS}\" ]; then export JAVA_OPTIONS=\"$JAVA_OPTIONS $EXTRA_JAVA_OPTIONS\"; fi' \u003e\u003e $ARTIFACTORY_HOME/bin/artifactory.default \u0026\u0026 POSTGRESQL_JAR=postgresql-42.1.4.jar \u0026\u0026 curl -fsSL \"https://jdbc.postgresql.org/download/${POSTGRESQL_JAR}\" -o $TOMCAT_HOME/lib/${POSTGRESQL_JAR} \u0026\u0026 chown -R 1001:0 ${ARTIFACTORY_HOME} \u0026\u0026 chmod -R 777 ${ARTIFACTORY_HOME} \u0026\u0026 chown -R 1001:0 ${ARTIFACTORY_DATA} \u0026\u0026 chmod -R 777 ${ARTIFACTORY_DATA}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chown -R 1001:0 /entrypoint.sh \u0026\u0026 chmod -R 755 /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "1001"
        },
        {
          "Health": {
            "Interval": 300000000000,
            "Test": [
              "CMD-SHELL",
              "curl -f http://localhost:8081/artifactory || exit 1"
            ],
            "Timeout": 3000000000
          },
          "Name": "healthcheck"
        },
        {
          "Name": "volume",
          "Volumes": [
            "${ARTIFACTORY_DATA}"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${ARTIFACTORY_DATA}"
        },
        {
          "Name": "expose",
          "Ports": [
            "8019",
            "8081"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}