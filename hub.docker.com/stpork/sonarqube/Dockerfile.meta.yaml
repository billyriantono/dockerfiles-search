MetaArgs: null
Stages:
- BaseName: openjdk:8-alpine
  Commands:
  - Maintainer: stpork from Mordor team
    Name: maintainer
  - Env:
    - Key: SONAR_VERSION
      Value: 6.7.1
    - Key: SONAR_HOME
      Value: /opt/sonarqube
    - Key: SONAR_JDBC_USERNAME
      Value: sonaruser
    - Key: SONAR_JDBC_PASSWORD
      Value: sonar-pass
    - Key: SONAR_JDBC_URL
      Value: jdbc:postgresql://postgresql:5432/sonarqube
    Name: env
  - Env:
    - Key: HOME
      Value: ${SONAR_HOME}
    Name: env
  - CmdLine:
    - set -x && apk update -qq && update-ca-certificates && apk add --no-cache ca-certificates
      curl bash unzip su-exec libressl tini && rm -rf /var/cache/apk/* /var/lib/{apt,dpkg,cache,log}/
      /tmp/* /var/tmp/* && mkdir /opt && cd /opt && curl -fsSL "https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-$SONAR_VERSION.zip"
      -o sonarqube.zip && unzip -q sonarqube.zip && mv sonarqube-$SONAR_VERSION sonarqube
      && rm sonarqube.zip* && rm -rf $SONAR_HOME/bin/* && chown -R 1001:0 ${SONAR_HOME}
      && chmod -R 775 ${SONAR_HOME}
    Name: run
    PrependShell: true
  - Name: user
    User: "1001"
  - Name: expose
    Ports:
    - "9000"
  - Name: volume
    Volumes:
    - $SONAR_HOME/data
    - $SONAR_HOME/extensions
  - Name: workdir
    Path: $SONAR_HOME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run.sh
    - $SONAR_HOME/bin/
  - CmdLine:
    - ./bin/run.sh
    Name: cmd
    PrependShell: false
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  From:
    Image: openjdk:8-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-alpine
