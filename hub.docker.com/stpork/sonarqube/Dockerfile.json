{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-alpine",
      "SourceCode": "FROM openjdk:8-alpine",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-alpine"
      },
      "Commands": [
        {
          "Maintainer": "stpork from Mordor team",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "SONAR_VERSION",
              "Value": "6.7.1"
            },
            {
              "Key": "SONAR_HOME",
              "Value": "/opt/sonarqube"
            },
            {
              "Key": "SONAR_JDBC_USERNAME",
              "Value": "sonaruser"
            },
            {
              "Key": "SONAR_JDBC_PASSWORD",
              "Value": "sonar-pass"
            },
            {
              "Key": "SONAR_JDBC_URL",
              "Value": "jdbc:postgresql://postgresql:5432/sonarqube"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "${SONAR_HOME}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 apk update -qq \u0026\u0026 update-ca-certificates \u0026\u0026 apk add --no-cache ca-certificates curl bash unzip su-exec libressl tini \u0026\u0026 rm -rf /var/cache/apk/* /var/lib/{apt,dpkg,cache,log}/ /tmp/* /var/tmp/* \u0026\u0026 mkdir /opt \u0026\u0026 cd /opt \u0026\u0026 curl -fsSL \"https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-$SONAR_VERSION.zip\" -o sonarqube.zip \u0026\u0026 unzip -q sonarqube.zip \u0026\u0026 mv sonarqube-$SONAR_VERSION sonarqube \u0026\u0026 rm sonarqube.zip* \u0026\u0026 rm -rf $SONAR_HOME/bin/* \u0026\u0026 chown -R 1001:0 ${SONAR_HOME} \u0026\u0026 chmod -R 775 ${SONAR_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "1001"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$SONAR_HOME/data",
            "$SONAR_HOME/extensions"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$SONAR_HOME"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "$SONAR_HOME/bin/"
          ]
        },
        {
          "CmdLine": [
            "./bin/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}