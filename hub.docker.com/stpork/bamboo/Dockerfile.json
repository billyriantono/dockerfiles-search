{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jdk-alpine",
      "SourceCode": "FROM openjdk:8-jdk-alpine",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jdk-alpine"
      },
      "Commands": [
        {
          "Maintainer": "stpork from Mordor team",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "OCP_VERSION",
              "Value": "v3.7.0"
            },
            {
              "Key": "OCP_BUILD",
              "Value": "7ed6862"
            },
            {
              "Key": "CLI_VERSION",
              "Value": "7.5.0"
            },
            {
              "Key": "CLI_BUILD",
              "Value": "16285777"
            },
            {
              "Key": "GRADLE_VERSION",
              "Value": "4.3.1"
            },
            {
              "Key": "JMETER_VERSION",
              "Value": "3.3"
            },
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.5.2"
            },
            {
              "Key": "BAMBOO_VERSION",
              "Value": "6.3.0"
            },
            {
              "Key": "BAMBOO_INSTALL",
              "Value": "/opt/atlassian/bamboo"
            },
            {
              "Key": "BAMBOO_HOME",
              "Value": "/var/atlassian/application-data/bamboo"
            },
            {
              "Key": "RUN_USER",
              "Value": "daemon"
            },
            {
              "Key": "RUN_GROUP",
              "Value": "daemon"
            },
            {
              "Key": "BAMBOO_HOME",
              "Value": "/var/atlassian/application-data/bamboo"
            },
            {
              "Key": "MAVEN_HOME",
              "Value": "/usr/local/maven"
            },
            {
              "Key": "GRADLE_HOME",
              "Value": "/usr/local/gradle"
            },
            {
              "Key": "JMETER_HOME",
              "Value": "/usr/local/jmeter"
            },
            {
              "Key": "MAVEN_SETTINGS_URL",
              "Value": "\"https://bitbucket.org/stpork/bamboo-agent/downloads/settings.xml\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "$BAMBOO_HOME/home"
            },
            {
              "Key": "M2_HOME",
              "Value": "$MAVEN_HOME"
            },
            {
              "Key": "PATH",
              "Value": "$MAVEN_HOME/bin:$GRADLE_HOME/bin:$JMETER_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_TOOL_OPTIONS",
              "Value": "\"-Duser.home=${HOME} -Dbamboo.fs.timestamp.precision=1000\""
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "io.k8s.description",
              "Value": "\"Atlassian Bamboo\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "io.k8s.display-name",
              "Value": "\"Bamboo ${BAMBOO_VERSION}\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "io.openshift.expose-services",
              "Value": "\"8085:http, 54663:tcp\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026 apk update -qq \u0026\u0026 update-ca-certificates \u0026\u0026 apk add --no-cache ca-certificates curl git openssh bash procps openssl perl ttf-dejavu tini nano \u0026\u0026 rm -rf /var/cache/apk/* /var/lib/{apt,dpkg,cache,log}/ /tmp/* /var/tmp/* \u0026\u0026 mkdir -p ${BAMBOO_INSTALL} \u0026\u0026 mkdir -p ${BAMBOO_HOME} \u0026\u0026 mkdir -p ${MAVEN_HOME} \u0026\u0026 curl -fsSL \"http://www.nic.funet.fi/pub/mirrors/apache.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz\" | tar -xz --strip-components=1 -C ${MAVEN_HOME} \u0026\u0026 mkdir -p ${HOME}/.m2 \u0026\u0026 curl -fsSL ${MAVEN_SETTINGS_URL} -o ${HOME}/.m2/settings.xml \u0026\u0026 USR_LOCAL_BIN=/usr/local/bin \u0026\u0026 curl -fsSL \"http://github.com/openshift/origin/releases/download/${OCP_VERSION}/openshift-origin-client-tools-${OCP_VERSION}-${OCP_BUILD}-linux-64bit.tar.gz\" | tar -xz --strip-components=1 -C ${USR_LOCAL_BIN} \u0026\u0026 mkdir -p ${JMETER_HOME} \u0026\u0026 curl -fsSL \"http://mirror.stjschools.org/public/apache/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz\" | tar -xz --strip-components=1 -C ${JMETER_HOME} \u0026\u0026 cd ${BAMBOO_INSTALL} \u0026\u0026 curl -fsSL \"http://bobswift.atlassian.net/wiki/download/attachments/${CLI_BUILD}/atlassian-cli-${CLI_VERSION}-distribution.zip\" -o atlassian-cli.zip \u0026\u0026 unzip -q atlassian-cli.zip \u0026\u0026 mv atlassian-cli-${CLI_VERSION}/* ${USR_LOCAL_BIN} \u0026\u0026 rm -rf atlassian-cli* \u0026\u0026 curl -fsSL \"https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\" -o gradle.zip \u0026\u0026 mkdir -p $GRADLE_HOME \u0026\u0026 unzip -q gradle.zip \u0026\u0026 mv gradle-${GRADLE_VERSION}/* ${GRADLE_HOME} \u0026\u0026 rm -rf gradle* \u0026\u0026 curl -fsSL \"http://www.atlassian.com/software/bamboo/downloads/binary/atlassian-bamboo-${BAMBOO_VERSION}.tar.gz\" | tar -xz --strip-components=1 -C ${BAMBOO_INSTALL} \u0026\u0026 JMETER_PLUGIN=atlassian-bamboo-jmeter-aggregator-5.14.0.jar \u0026\u0026 curl -fsSL \"https://marketplace-cdn.atlassian.com/files/artifact/c89b23ee-76d4-4237-b637-24692f8fb694/${JMETER_PLUGIN}\" -o ${BAMBOO_INSTALL}/atlassian-bamboo/WEB-INF/lib/${JMETER_PLUGIN} \u0026\u0026 echo -e \"\\nbamboo.home=$BAMBOO_HOME\" \u003e\u003e \"${BAMBOO_INSTALL}/atlassian-bamboo/WEB-INF/classes/bamboo-init.properties\" \u0026\u0026 mkdir /lib64 \u0026\u0026 ln -s /lib/ld-musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2 \u0026\u0026 chown -R ${RUN_USER}:${RUN_GROUP} ${BAMBOO_INSTALL} \u0026\u0026 chmod -R 777 ${BAMBOO_INSTALL} \u0026\u0026 chown -R ${RUN_USER}:${RUN_GROUP} ${BAMBOO_HOME} \u0026\u0026 chmod -R 777 ${BAMBOO_HOME} \u0026\u0026 chmod -R 755 ${USR_LOCAL_BIN}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${RUN_USER}:${RUN_GROUP}"
        },
        {
          "Name": "expose",
          "Ports": [
            "8085"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "54663"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "${BAMBOO_HOME}"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${BAMBOO_HOME}"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh",
            "-fg"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}