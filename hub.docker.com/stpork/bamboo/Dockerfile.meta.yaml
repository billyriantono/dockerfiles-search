MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk-alpine
  Commands:
  - Maintainer: stpork from Mordor team
    Name: maintainer
  - Env:
    - Key: OCP_VERSION
      Value: v3.7.0
    - Key: OCP_BUILD
      Value: 7ed6862
    - Key: CLI_VERSION
      Value: 7.5.0
    - Key: CLI_BUILD
      Value: "16285777"
    - Key: GRADLE_VERSION
      Value: 4.3.1
    - Key: JMETER_VERSION
      Value: "3.3"
    - Key: MAVEN_VERSION
      Value: 3.5.2
    - Key: BAMBOO_VERSION
      Value: 6.3.0
    - Key: BAMBOO_INSTALL
      Value: /opt/atlassian/bamboo
    - Key: BAMBOO_HOME
      Value: /var/atlassian/application-data/bamboo
    - Key: RUN_USER
      Value: daemon
    - Key: RUN_GROUP
      Value: daemon
    - Key: BAMBOO_HOME
      Value: /var/atlassian/application-data/bamboo
    - Key: MAVEN_HOME
      Value: /usr/local/maven
    - Key: GRADLE_HOME
      Value: /usr/local/gradle
    - Key: JMETER_HOME
      Value: /usr/local/jmeter
    - Key: MAVEN_SETTINGS_URL
      Value: '"https://bitbucket.org/stpork/bamboo-agent/downloads/settings.xml"'
    Name: env
  - Env:
    - Key: HOME
      Value: $BAMBOO_HOME/home
    - Key: M2_HOME
      Value: $MAVEN_HOME
    - Key: PATH
      Value: $MAVEN_HOME/bin:$GRADLE_HOME/bin:$JMETER_HOME/bin:$PATH
    Name: env
  - Env:
    - Key: JAVA_TOOL_OPTIONS
      Value: '"-Duser.home=${HOME} -Dbamboo.fs.timestamp.precision=1000"'
    Name: env
  - Labels:
    - Key: io.k8s.description
      Value: '"Atlassian Bamboo"'
    Name: label
  - Labels:
    - Key: io.k8s.display-name
      Value: '"Bamboo ${BAMBOO_VERSION}"'
    Name: label
  - Labels:
    - Key: io.openshift.expose-services
      Value: '"8085:http, 54663:tcp"'
    Name: label
  - CmdLine:
    - set -x && apk update -qq && update-ca-certificates && apk add --no-cache ca-certificates
      curl git openssh bash procps openssl perl ttf-dejavu tini nano && rm -rf /var/cache/apk/*
      /var/lib/{apt,dpkg,cache,log}/ /tmp/* /var/tmp/* && mkdir -p ${BAMBOO_INSTALL}
      && mkdir -p ${BAMBOO_HOME} && mkdir -p ${MAVEN_HOME} && curl -fsSL "http://www.nic.funet.fi/pub/mirrors/apache.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz"
      | tar -xz --strip-components=1 -C ${MAVEN_HOME} && mkdir -p ${HOME}/.m2 && curl
      -fsSL ${MAVEN_SETTINGS_URL} -o ${HOME}/.m2/settings.xml && USR_LOCAL_BIN=/usr/local/bin
      && curl -fsSL "http://github.com/openshift/origin/releases/download/${OCP_VERSION}/openshift-origin-client-tools-${OCP_VERSION}-${OCP_BUILD}-linux-64bit.tar.gz"
      | tar -xz --strip-components=1 -C ${USR_LOCAL_BIN} && mkdir -p ${JMETER_HOME}
      && curl -fsSL "http://mirror.stjschools.org/public/apache/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz"
      | tar -xz --strip-components=1 -C ${JMETER_HOME} && cd ${BAMBOO_INSTALL} &&
      curl -fsSL "http://bobswift.atlassian.net/wiki/download/attachments/${CLI_BUILD}/atlassian-cli-${CLI_VERSION}-distribution.zip"
      -o atlassian-cli.zip && unzip -q atlassian-cli.zip && mv atlassian-cli-${CLI_VERSION}/*
      ${USR_LOCAL_BIN} && rm -rf atlassian-cli* && curl -fsSL "https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip"
      -o gradle.zip && mkdir -p $GRADLE_HOME && unzip -q gradle.zip && mv gradle-${GRADLE_VERSION}/*
      ${GRADLE_HOME} && rm -rf gradle* && curl -fsSL "http://www.atlassian.com/software/bamboo/downloads/binary/atlassian-bamboo-${BAMBOO_VERSION}.tar.gz"
      | tar -xz --strip-components=1 -C ${BAMBOO_INSTALL} && JMETER_PLUGIN=atlassian-bamboo-jmeter-aggregator-5.14.0.jar
      && curl -fsSL "https://marketplace-cdn.atlassian.com/files/artifact/c89b23ee-76d4-4237-b637-24692f8fb694/${JMETER_PLUGIN}"
      -o ${BAMBOO_INSTALL}/atlassian-bamboo/WEB-INF/lib/${JMETER_PLUGIN} && echo -e
      "\nbamboo.home=$BAMBOO_HOME" >> "${BAMBOO_INSTALL}/atlassian-bamboo/WEB-INF/classes/bamboo-init.properties"
      && mkdir /lib64 && ln -s /lib/ld-musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2
      && chown -R ${RUN_USER}:${RUN_GROUP} ${BAMBOO_INSTALL} && chmod -R 777 ${BAMBOO_INSTALL}
      && chown -R ${RUN_USER}:${RUN_GROUP} ${BAMBOO_HOME} && chmod -R 777 ${BAMBOO_HOME}
      && chmod -R 755 ${USR_LOCAL_BIN}
    Name: run
    PrependShell: true
  - Name: user
    User: ${RUN_USER}:${RUN_GROUP}
  - Name: expose
    Ports:
    - "8085"
  - Name: expose
    Ports:
    - "54663"
  - Name: volume
    Volumes:
    - ${BAMBOO_HOME}
  - Name: workdir
    Path: ${BAMBOO_HOME}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - /entrypoint.sh
    - -fg
    Name: cmd
    PrependShell: false
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  From:
    Image: openjdk:8-jdk-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-alpine
