MetaArgs: null
Stages:
- BaseName: debian:latest
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y pgp nano git sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo 'deb http://deb.torproject.org/torproject.org stretch main' \t>> /etc/apt/sources.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo 'deb-src http://deb.torproject.org/torproject.org stretch main' \t>> /etc/apt/sources.list"
    Name: run
    PrependShell: true
  - CmdLine:
    - "gpg --keyserver pgp.mit.edu \t--recv A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89
      && \tgpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | apt-key add -"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \ttor \tgit \tsudo \tnginx \tnodejs \tscreen
      \tpython3 \tmongodb \tbuild-essential \tca-certificates"
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -p $(openssl passwd -1 'yoyyyoyocleartext') fofo
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -u 4523 fofo
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''fofo ALL = (root) NOPASSWD: /bin/chown'' >> /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''fofo ALL = (root) NOPASSWD: /bin/chmod'' >> /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''fofo ALL = (root) NOPASSWD: /usr/sbin/nginx'' >> /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y paxctl && paxctl -cm $(which node)
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/app/coin_board/coin_board
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package*.json
    - /usr/src/app/coin_board/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '*/package.json'
    - /usr/src/app/coin_board/coin_board/
  - CmdLine:
    - cd /usr/src/app/coin_board &&  yarn install && cd coin_board && yarn install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ./usr/src/app/coin_board/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/onion/onion.nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/onion/*.onion.nginx
    - /etc/nginx/sites-enabled/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/onion/torrc
    - /etc/tor/torrc
  - CmdLine:
    - "usermod -aG debian-tor fofo && \tchown -R fofo:fofo /var/lib/tor && \tchown
      -R root:fofo /var/log/tor && \tchmod -R 770 /var/log/tor && \tgroupadd foobar
      && usermod -aG foobar fofo && \tusermod -aG foobar root && \tchown root:fofo
      /usr/src/app/coin_board && \tchmod 775 /usr/src/app/coin_board && \tchmod +x
      /usr/src/app/coin_board/conf/onion/turnmeon.sh && \techo 'fooinitsecret' > /usr/src/app/coin_board/log.txt
      && \tchown fofo:fofo /usr/src/app/coin_board/log.txt && \tchmod u=rw /usr/src/app/coin_board/log.txt"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y tree
    Name: run
    PrependShell: true
  - Name: user
    User: fofo
  - Env:
    - Key: SERV_ENV
      Value: onion
    - Key: NODE_ENV
      Value: production
    Name: env
  - Name: workdir
    Path: /usr/src/app/coin_board
  - CmdLine:
    - /usr/src/app/coin_board/conf/onion/turnmeon.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: debian:latest
  Name: ""
  Platform: ""
  SourceCode: FROM  debian:latest
