{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "CC",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get upgrade -y \u0026\u0026   apt-get install -y wget apt-transport-https software-properties-common python python-software-properties g++ make \u0026\u0026   wget -qO- https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \u0026\u0026   echo 'deb https://deb.nodesource.com/node precise main' \u003e /etc/apt/sources.list.d/nodesource.list \u0026\u0026   echo 'deb-src https://deb.nodesource.com/node precise main' \u003e\u003e /etc/apt/sources.list.d/nodesource.list \u0026\u0026   apt-get update \u0026\u0026   apt-get install -y nodejs \u0026\u0026   apt-get purge -y wget apt-transport-https software-properties-common python python-software-properties g++ make \u0026\u0026   apt-get autoremove -y \u0026\u0026   apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/nodejs/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "node -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm-color"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update;     apt-get install -y     bison     build-essential     curl     flex     g++     git     gperf     sqlite3     libsqlite3-dev     fontconfig     libfontconfig1     libfontconfig1-dev     libfreetype6     libfreetype6-dev     libicu-dev     libjpeg-dev     libpng-dev     libssl-dev     libqt5webkit5-dev     ruby     perl     unzip     wget     imagemagick \u0026\u0026     npm install pm2 -g \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src;     cd /usr/src;     wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.0.0-source.zip;     unzip phantomjs-2.0.0-source.zip;     rm phantomjs-2.0.0-source.zip;     cd phantomjs-2.0.0;     ./build.sh --confirm \u0026\u0026     cp /usr/src/phantomjs-2.0.0/bin/phantomjs /usr/local/bin/phantomjs \u0026\u0026     rm -r /usr/src/phantomjs-2.0.0/ \u0026\u0026     rm -r /usr/share/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "init.sh",
            "/init.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /init.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "CmdLine": [
            "sh",
            "/init.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}