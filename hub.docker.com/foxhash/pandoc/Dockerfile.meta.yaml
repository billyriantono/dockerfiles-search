MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     wget     curl     xz-utils     git     build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_VERSION
      Value: 1.9.1
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/go/bin
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:~/go/bin
    Name: env
  - CmdLine:
    - "curl -O https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz
      \t&& tar -xvf go${GO_VERSION}.linux-amd64.tar.gz \t&& mv go /usr/local"
    Name: run
    PrependShell: true
  - CmdLine:
    - go get -u github.com/tcnksm/ghr
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y texlive
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y pandoc
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /root/.latexmkrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "@generated_exts = ('aux', 'bcf', 'fls', 'idx', 'ind', 'lof', 'lot', 'out',
      'toc', 'nav', 'snm', 'dvi');" >>  /root/.latexmkrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "\$pdflatex = 'pdflatex -halt-on-error --shell-escape -synctex=1';" >>
      /root/.latexmkrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "\$pdf_mode = 1;" >> /root/.latexmkrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "\$bibtex_use = 1;" >> /root/.latexmkrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "\$clean_ext = 'synctex.gz';" >> /root/.latexmkrc
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
