{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "Lawrence Stubbs \u003ctechnoexpressnet@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm     \u0026\u0026 yum install -y wget     \u0026\u0026 rpm -Uvh http://repo.iotti.biz/CentOS/7/noarch/lux-release-7-1.noarch.rpm     \u0026\u0026 rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-LUX     \u0026\u0026 wget -q http://www.webmin.com/jcameron-key.asc     \u0026\u0026 rpm --import jcameron-key.asc     \u0026\u0026 wget -q http://repo.issabel.org/issabel/RPM-GPG-KEY-Issabel     \u0026\u0026 rpm --import RPM-GPG-KEY-Issabel     \u0026\u0026 rm -f jcameron-key.asc \u0026\u0026 rm -f RPM-GPG-KEY-Issabel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc",
            "/etc/"
          ]
        },
        {
          "CmdLine": [
            "yum -y install perl perl-Archive-Tar perl-Business-ISBN perl-Business-ISBN-Data perl-Carp perl-CGI perl-Compress-Raw-Bzip2 perl-Compress-Raw-Zlib perl-constant perl-Convert-BinHex perl-Crypt-OpenSSL-Bignum perl-Crypt-OpenSSL-Random perl-Crypt-OpenSSL-RSA perl-Data-Dumper perl-Date-Manip perl-DBD-MySQL perl-DB_File perl-DBI perl-devel perl-Digest perl-Digest-HMAC perl-Digest-MD5 perl-Digest-SHA perl-Encode perl-Encode-Detect perl-Encode-Locale perl-Error perl-Exporter perl-ExtUtils-Install perl-ExtUtils-MakeMaker perl-ExtUtils-Manifest perl-ExtUtils-ParseXS perl-FCGI perl-File-Listing perl-File-Path perl-File-Temp perl-Filter perl-Getopt-Long perl-HTML-Parser perl-HTML-Tagset perl-HTTP-Cookies perl-HTTP-Daemon perl-HTTP-Date perl-HTTP-Message perl-HTTP-Negotiate perl-HTTP-Tiny perl-IO-Compress perl-IO-HTML perl-IO-Socket-INET6 perl-IO-Socket-IP perl-IO-Socket-SSL perl-IO-Zlib perl-libs perl-libwww-perl perl-LWP-MediaTypes perl-macros perl-Mail-DKIM perl-Mail-IMAPClient perl-Mail-SPF perl-MailTools perl-MIME-tools perl-NetAddr-IP perl-Net-Daemon perl-Net-DNS perl-Net-HTTP perl-Net-LibIDN perl-Net-SMTP-SSL perl-Net-SSLeay perl-Package-Constants perl-parent perl-Parse-RecDescent perl-PathTools perl-PlRPC perl-Pod-Escapes perl-podlators perl-Pod-Perldoc perl-Pod-Simple perl-Pod-Usage perl-Scalar-List-Utils perl-Socket perl-Socket6 perl-Storable perl-Sys-Syslog perl-Test-Harness perl-Text-ParseWords perl-threads perl-threads-shared perl-TimeDate perl-Time-HiRes perl-Time-Local perl-URI perl-version perl-WWW-RobotRules"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install python python-inotify python-backports python-backports-ssl_match_hostname python-cjson python-configobj python-crypto python-daemon python-decorator python-ecdsa python-eventlet python-greenlet python-iniparse python-libs python-lockfile python-paramiko python-pycurl python-pyudev python-setuptools python-six python-slip python-slip-dbus python-sqlalchemy python-tempita python-urlgrabber python-simplejson python-dns certbot python2-certbot python2-certbot-apache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install acl alsa-firmware alsa-lib alsa-tools-firmware apr apr-util tcpdump screen libXcomposite mod_ssl openfire avahi-devel bash-completion mc mdadm nss-mdns chrony cyrus-sasl cyrus-sasl-plain procmail dos2unix gdb hdparm httpd httpd-tools ipset lame lame-devel libxml2-devel mariadb mariadb-server opus vim git uuid-devel libuuid-devel libesd.so.0 flac mpg123 unixODBC unixODBC-devel libtool-ltdl libtool-ltdl-devel mysql-connector-odbc dmidecode openssh-server iptables-utils iptables-services initscripts elfutils-libelf elfutils-libs glances htop sysstat net-tools fail2ban-server fail2ban-hostsdeny denyhosts whois"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install php-jpgraph php-fedora-autoloader php-IDNA_Convert php-Smarty php-PHPMailer php-pear-DB php-simplepie php-tcpdf php php-bcmath php-imap php-cli php-common php-soap php-devel php-mcrypt php-intl php-mysql php-pdo php-pear php-pecl-imagick php-process php-xml php-magpierss php-gd php-mbstring php-tidy php-adodb php-ldap php-google-apiclient"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "systemctl.py",
            "/usr/bin/systemctl.py"
          ]
        },
        {
          "CmdLine": [
            "cp -f /usr/bin/systemctl /usr/bin/systemctl.original     \u0026\u0026 chmod +x /usr/bin/systemctl.py     \u0026\u0026 cp -f /usr/bin/systemctl.py /usr/bin/systemctl     \u0026\u0026 ln -s /usr/lib/systemd/system/mariadb.service /usr/lib/systemd/system/mysqld.service     \u0026\u0026 echo \"#\\!/bin/bash\" \u003e /etc/init.d/mysqld     \u0026\u0026 sed -i 's|\\\\||' /etc/init.d/mysqld     \u0026\u0026 echo \"service mariadb \\$1\" \u003e\u003e /etc/init.d/mysqld     \u0026\u0026 chmod +x /etc/init.d/mysqld"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "systemctl.original enable mariadb.service httpd.service     \u0026\u0026 systemctl start httpd     \u0026\u0026 systemctl start mariadb     \u0026\u0026 mysql -e \"SET PASSWORD FOR 'root'@'localhost' = PASSWORD('iSsAbEl.2o17')\" \t\u0026\u0026 mysql -piSsAbEl.2o17 -e \"create database mya2billing;\"     \u0026\u0026 mysql -piSsAbEl.2o17 -e \"create database asteriskcdrdb; use asteriskcdrdb; create table cdr ( calldate datetime NOT NULL default '0000-00-00 00:00:00', clid varchar(80) NOT NULL default '', src varchar(80) NOT NULL default '', dst varchar(80) NOT NULL default '', dcontext varchar(80) NOT NULL default '', channel varchar(80) NOT NULL default '', dstchannel varchar(80) NOT NULL default '', lastapp varchar(80) NOT NULL default '', lastdata varchar(80) NOT NULL default '', duration int(11) NOT NULL default '0', billsec int(11) NOT NULL default '0', disposition varchar(45) NOT NULL default '', amaflags int(11) NOT NULL default '0', accountcode varchar(20) NOT NULL default '', uniqueid varchar(32) NOT NULL default '', userfield varchar(255) NOT NULL default '' ); \"     \u0026\u0026 mysql -piSsAbEl.2o17 -e \"GRANT ALL PRIVILEGES ON mya2billing.* TO root@localhost;\" \t\u0026\u0026 mysql -piSsAbEl.2o17 -e \"GRANT ALL PRIVILEGES ON asterisk.* TO asteriskuser@localhost;\"     \u0026\u0026 mysql -piSsAbEl.2o17 -e \"GRANT ALL PRIVILEGES ON asteriskcdrdb.* TO asteriskuser@localhost;\"     \u0026\u0026 adduser asterisk -m -c \"Asterisk User\"     \u0026\u0026 yum -y install asterisk13     \u0026\u0026 mkdir -p /var/www/db     \u0026\u0026 mkdir -p /var/log/asterisk/mod     \u0026\u0026 touch /var/www/db/fax.db /var/www/db/email.db /var/www/db/control_panel_design.db /var/log/asterisk/issabelpbx.log /var/lib/asterisk/moh     \u0026\u0026 chown -R asterisk.asterisk /var/www/html     \u0026\u0026 chown -R asterisk.asterisk /etc/asterisk     \u0026\u0026 chown -R asterisk.asterisk /var/lib/asterisk     \u0026\u0026 chown -R asterisk.asterisk /var/log/asterisk     \u0026\u0026 sed -i 's@ulimit @#ulimit @' /usr/sbin/safe_asterisk     \u0026\u0026 systemctl stop httpd     \u0026\u0026 systemctl stop mariadb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "mya2billing_schema.sql",
            "/tmp/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "mya2billing_update.sql",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "systemctl start httpd     \u0026\u0026 systemctl start mariadb     \u0026\u0026 mysql -piSsAbEl.2o17 \u003c /tmp/mya2billing_schema.sql     \u0026\u0026 mysql -piSsAbEl.2o17 \u003c /tmp/mya2billing_update.sql     \u0026\u0026 yum -y install issabel issabel-a2billing issabel-a2billing-callback_daemon issabel-addons issabel-agenda issabel-asterisk-sounds issabel-email_admin issabel-endpointconfig2 issabel-extras issabel-fax issabel-firstboot issabel-framework issabel-im issabel-my_extension issabel-pbx issabel-portknock issabel-reports issabel-security issabel-system     \u0026\u0026 systemctl stop httpd     \u0026\u0026 systemctl stop mariadb     \u0026\u0026 rm -f /etc/yum.repos.d/Issabel.repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "systemctl start httpd     \u0026\u0026 systemctl start mariadb     \u0026\u0026 mv /etc/asterisk/extensions_custom.conf.sample /etc/asterisk/extensions_custom.conf     \u0026\u0026 yum -y install issabel-callcenter fop2 issabel-roomx     \u0026\u0026 systemctl stop httpd     \u0026\u0026 systemctl stop mariadb     \u0026\u0026 systemctl stop mysqld"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install webmin yum-versionlock     \u0026\u0026 yum versionlock systemd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "systemctl start httpd     \u0026\u0026 systemctl start mysqld \t\u0026\u0026 rm -f /etc/issabel.conf \t\u0026\u0026 mysql -piSsAbEl.2o17 -e \"SET PASSWORD FOR 'root'@'localhost' = PASSWORD('')\" \t\u0026\u0026 issabel-admin-passwords --cli change 'iSsAbEl.2o17' 'issabel-4'     \u0026\u0026 systemctl stop httpd     \u0026\u0026 systemctl stop mysqld"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "systemctl stop dbus     \u0026\u0026 systemctl.original disable dbus avahi-daemon chronyd ntpd dkms mdmonitor issabel-firstboot a2b-callback-daemon     \u0026\u0026 (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i ==     systemd-tmpfiles-setup.service ] || rm -f $i; done);     rm -f /lib/systemd/system/multi-user.target.wants/*;     rm -f /lib/systemd/system/local-fs.target.wants/*;     rm -f /lib/systemd/system/sockets.target.wants/*udev*;     rm -f /lib/systemd/system/sockets.target.wants/*initctl*;     rm -f /lib/systemd/system/basic.target.wants/*;     rm -f /lib/systemd/system/anaconda.target.wants/*;     rm -f /etc/dbus-1/system.d/*;     rm -f /etc/systemd/system/dbus-org.freedesktop.Avahi.service;     rm -f /etc/systemd/system/sockets.target.wants/*;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "postfix.main.cf",
            "/etc/postfix/main.cf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "postfix.master.cf",
            "/etc/postfix/master.cf"
          ]
        },
        {
          "CmdLine": [
            "chmod 6711 /usr/bin/procmail     \u0026\u0026 chown root:root /usr/bin/procmail     \u0026\u0026 chown -R postfix:postdrop /var/spool/postfix     \u0026\u0026 touch /etc/postfix/dependent.db /var/log/asterisk/full /var/log/secure /var/log/maillog /var/log/httpd/access_log /etc/httpd/logs/error_log /var/log/fail2ban.log     \u0026\u0026 sed -i 's#LE-SA-v1.1.1-August-1-2016#LE-SA-v1.2-November-15-2017#' /usr/libexec/webmin/webmin/acme_tiny.py     \u0026\u0026 sed -i \"s#Listen 80#Listen 880#\" /etc/httpd/conf/httpd.conf     \u0026\u0026 sed -i \"s#Listen 443#Listen 4443#\" /etc/httpd/conf.d/ssl.conf     \u0026\u0026 sed -i \"s#_:443#_:4443#\" /etc/httpd/conf.d/ssl.conf     \u0026\u0026 sed -i \"s@#Port 22@Port 2122@\" /etc/ssh/sshd_config     \u0026\u0026 sed -i \"s#10000#9900#\" /etc/webmin/miniserv.conf     \u0026\u0026 sed -i \"s#9000 -j ACCEPT#9000 -j ACCEPT\\n-A INPUT -p tcp -m multiport --dports 880 -j ACCEPT#\" /etc/sysconfig/iptables     \u0026\u0026 sed -i \"s#9000 -j ACCEPT#9000 -j ACCEPT\\n-A INPUT -p tcp -m multiport --dports 4443 -j ACCEPT#\" /etc/sysconfig/iptables     \u0026\u0026 sed -i \"s#9000 -j ACCEPT#9000 -j ACCEPT\\n-A INPUT -p tcp -m multiport --dports 2122 -j ACCEPT#\" /etc/sysconfig/iptables     \u0026\u0026 sed -i \"s#9000 -j ACCEPT#9900 -j ACCEPT\\n-A INPUT -p udp -m multiport --dports 9900 -j ACCEPT#\" /etc/sysconfig/iptables     \u0026\u0026 sed -i 's#issabeldialer.service webmin.service#issabeldialer.service\\nAfter=crond.service\\nAfter=postfix.service\\nAfter=mariadb.service\\nAfter=saslauthd.service\\nAfter=cyrus-imapd.service\\nAfter=httpd.service\\nAfter=fail2ban.service\\nAfter=denyhosts.service\\nAfter=sshd-keygen.service\\nAfter=sshd.service\\nAfter=asterisk.service\\nAfter=fop2.service\\nAfter=hylafax.service\\nAfter=wakeup_survey\\nAfter=webmin.service#' /etc/systemd/system/containerstartup.service     \u0026\u0026 chown -R asterisk.asterisk /var/www/db      \u0026\u0026 systemctl.original enable denyhosts.service fail2ban.service mariadb.service asterisk.service httpd.service issabeldialer.service fop2.service hylafax.service wakeup_survey crond.service postfix.service saslauthd.service cyrus-imapd.service sshd-keygen.service sshd.service webmin.service containerstartup.service     \u0026\u0026 sed -i 's#localhost.key#localhost.key\\ncat \\\"/etc/letsencrypt/archive/$HOSTNAME/privkey1.pem\\\" \\\"/etc/letsencrypt/archive/$HOSTNAME/cert1.pem\\\" \u003e/etc/webmin/miniserv.pem#' /etc/containerstartup.sh     \u0026\u0026 chmod +x /etc/containerstartup.sh     \u0026\u0026 mv -f /etc/containerstartup.sh /containerstartup.sh     \u0026\u0026 rm -f /tmp/mya2billing_*     \u0026\u0026 echo \"root:issabel\" | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HTTPPORT",
              "Value": "880"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSLPORT",
              "Value": "4443"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSHPORT",
              "Value": "2122"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEBMINPORT",
              "Value": "9900"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "10000-10100/tcp",
            "10000-10100/udp",
            "2122",
            "25",
            "4443",
            "465",
            "5038",
            "5060/tcp",
            "5060/udp",
            "5061/tcp",
            "5061/udp",
            "8001",
            "8003",
            "8088",
            "8089",
            "880",
            "9900/tcp",
            "9900/udp"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/systemctl",
            "default",
            "--init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}