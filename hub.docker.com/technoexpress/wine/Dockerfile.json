{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "Lawrence Stubbs \u003ctechnoexpressnet@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \t\u0026\u0026 yum -y install curl unzip git vim wget which sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build-wine-i686-centos7.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /build-wine-i686-centos7.sh     \u0026\u0026 yum install -y https://iweb.dl.sourceforge.net/project/rpmerizor/2.10/rpmerizor-2.10-1.noarch.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./build-wine-i686-centos7.sh     \u0026\u0026 yum erase *-devel -y     \u0026\u0026 rm -rf /usr/src/wine-2.0.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "systemctl.py",
            "/usr/bin/systemctl.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "py2exe.sh",
            "/usr/local/bin/py2exe"
          ]
        },
        {
          "CmdLine": [
            "cp -f /usr/bin/systemctl /usr/bin/systemctl.original     \u0026\u0026 chmod +x /usr/bin/systemctl.py     \u0026\u0026 chmod +x /usr/local/bin/py2exe     \u0026\u0026 cp -f /usr/bin/systemctl.py /usr/bin/systemctl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q http://download.microsoft.com/download/9/5/A/95A9616B-7A37-4AF6-BC36-D6EA96C8DAAE/dotNetFx40_Full_x86_x64.exe \t\u0026\u0026 wine dotNetFx40_Full_x86_x64.exe /q /norestart"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://www.python.org/ftp/python/2.7.14/python-2.7.14.amd64.msi     \u0026\u0026 wine msiexec /i python-2.7.14.amd64.msi /quiet /qn     \u0026\u0026 wget -q https://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi \t\u0026\u0026 wine msiexec /i VCForPython27.msi /quiet /qn     \u0026\u0026 cd ~/.wine/drive_c/Python27 \t\u0026\u0026 mkdir pyfor_exe     \u0026\u0026 wine python.exe Scripts/pip.exe install --upgrade setuptools     \u0026\u0026 wine python.exe Scripts/pip.exe install pyinstaller \t\u0026\u0026 wine python.exe Scripts/pip.exe install pexpect \t\u0026\u0026 wine python.exe Scripts/pip.exe install pycrypto"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install python2-pip python2-devel gcc     \u0026\u0026 pip install --upgrade pip     \u0026\u0026 pip install pyinstaller     \u0026\u0026 pip install pexpect     \u0026\u0026 pip install pycrypto     \u0026\u0026 pip install when-changed"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "make_wine_*",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc",
            "/etc/"
          ]
        },
        {
          "CmdLine": [
            "yum install yum-cron yum-versionlock -y \u0026\u0026 yum versionlock systemd     \u0026\u0026 (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i ==     systemd-tmpfiles-setup.service ] || rm -f $i; done);     rm -f /lib/systemd/system/multi-user.target.wants/*;     rm -f /lib/systemd/system/local-fs.target.wants/*;     rm -f /lib/systemd/system/sockets.target.wants/*udev*;     rm -f /lib/systemd/system/sockets.target.wants/*initctl*;     rm -f /lib/systemd/system/basic.target.wants/*;     rm -f /lib/systemd/system/anaconda.target.wants/*;     rm -f /etc/dbus-1/system.d/*;     rm -f /etc/systemd/system/sockets.target.wants/*; \tsystemctl.original enable yum-cron.service containerstartup.service"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x make_wine_profile_rpm.sh     \u0026\u0026 chmod +x make_wine_rpm.sh \t\u0026\u0026 mkdir -p /opt/watch \t\u0026\u0026 mkdir -p /opt/windows"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/systemctl",
            "default",
            "--init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}