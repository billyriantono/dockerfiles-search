{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "wrenchproject/wrench-build:ubuntu-bionic-gcc7",
      "SourceCode": "FROM wrenchproject/wrench-build:ubuntu-bionic-gcc7",
      "Platform": "",
      "From": {
        "Image": "wrenchproject/wrench-build:ubuntu-bionic-gcc7"
      },
      "Commands": [
        {
          "Maintainer": "Rafael Ferreira da Silva \u003crafsilva@isi.edu\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "CXX",
              "Value": "\"g++-7\""
            },
            {
              "Key": "CC",
              "Value": "\"gcc-7\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "wget https://newcontinuum.dl.sourceforge.net/project/asciidoc/asciidoc/8.6.9/asciidoc-8.6.9.tar.gz \u0026\u0026 tar -xzf asciidoc-8.6.9.tar.gz \u0026\u0026 cd asciidoc-8.6.9 \u0026\u0026 ./configure \u0026\u0026 sudo make install \u0026\u0026 cd .. \u0026\u0026 rm -rf asciidoc*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y m4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y automake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libtool libtool-bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libsodium-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://ftp.gnu.org/gnu/gmp/gmp-6.1.2.tar.xz \u0026\u0026 tar -xf gmp-6.1.2.tar.xz \u0026\u0026 cd gmp-6.1.2/ \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 sudo make install \u0026\u0026 cd .. \u0026\u0026 rm -rf gmp*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/Tencent/rapidjson/archive/v1.1.0.tar.gz \u0026\u0026 gunzip v1.1.0.tar.gz \u0026\u0026 tar -xf v1.1.0.tar \u0026\u0026 cd rapidjson-1* \u0026\u0026 find ./ -type f -exec sed -i -e 's/-Werror//g' {} \\; \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. \u0026\u0026 make \u0026\u0026 sudo make install \u0026\u0026 cd ../../ \u0026\u0026 rm -rf rapidjson-1* v1.1.0.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/redis/hiredis.git \u0026\u0026 cd hiredis \u0026\u0026 make \u0026\u0026 sudo make install \u0026\u0026 cd .. \u0026\u0026 rm -rf hiredis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libev4 libev-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/hmartiro/redox.git \u0026\u0026 cd redox \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/ \u0026\u0026 make \u0026\u0026 sudo make install \u0026\u0026 cd ../../ \u0026\u0026 rm -rf redox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libboost-all-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/zeromq/libzmq/releases/download/v4.2.2/zeromq-4.2.2.tar.gz \u0026\u0026 tar xvzf zeromq-4.2.2.tar.gz \u0026\u0026 cd zeromq-4.2.2 \u0026\u0026 ./configure \u0026\u0026 make install \u0026\u0026 cd .. \u0026\u0026 rm -rf zeromq-4.2.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/zeromq/cppzmq/archive/v4.2.2.tar.gz \u0026\u0026 tar xf v4.2.2.tar.gz \u0026\u0026 cd cppzmq-4.2.2/ \u0026\u0026 mkdir build \u0026\u0026 cd build/ \u0026\u0026 cmake .. \u0026\u0026 sudo make -j4 install \u0026\u0026 cd ../../ \u0026\u0026 rm -rf v4.2.2.tar.gz cppzmq*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python3-pip ninja-build \u0026\u0026 pip3 install --user meson \u0026\u0026 mv /root/.local/bin/meson /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://framagit.org/batsim/intervalset/repository/master/archive.tar.gz \u0026\u0026 tar -xf archive.tar.gz \u0026\u0026 cd intervalset-master-* \u0026\u0026 meson build \u0026\u0026 cd build \u0026\u0026 ninja \u0026\u0026 sudo meson install \u0026\u0026 cd ../.. \u0026\u0026 rm -rf intervalset-master-* archive.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/emilk/loguru/archive/v2.0.0.tar.gz \u0026\u0026 tar -xf v2.0.0.tar.gz \u0026\u0026 cd loguru-* \u0026\u0026  sudo cp ./loguru.hpp /usr/local/include/ \u0026\u0026 $CXX -std=c++11 -o libloguru.so -shared -pthread -fPIC loguru.cpp \u0026\u0026 sudo cp ./libloguru.so /usr/local/lib/ \u0026\u0026  cd .. \u0026\u0026 rm -rf loguru-* v2.0.0.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://gitlab.inria.fr/batsim/batsched/repository/master/archive.tar.gz \u0026\u0026 tar -xf archive.tar.gz \u0026\u0026 cd batsched-master-* \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. -DREDOX_LIBRARY:FILEPATH=/usr/local/lib64/libredox.so \u0026\u0026 make \u0026\u0026 sudo make install \u0026\u0026 cd ../../ \u0026\u0026 rm -rf batsched-master* archive.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "wrench"
        },
        {
          "Name": "workdir",
          "Path": "/home/wrench"
        },
        {
          "Env": [
            {
              "Key": "CXX",
              "Value": "\"g++-7\""
            },
            {
              "Key": "CC",
              "Value": "\"gcc-7\""
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}