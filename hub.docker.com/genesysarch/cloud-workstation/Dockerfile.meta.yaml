MetaArgs: null
Stages:
- BaseName: gliderlabs/alpine:3.3
  Commands:
  - CmdLine:
    - apk add --update --no-cache     ca-certificates curl wget make bash openssh-client     bash
      git sshpass rsync
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache python    python-dev    py-pip  && pip install virtualenv
      docopts  && rm -rf /var/cache/apk/*  && pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - build/aws/aws_bash_helpers.sh
    - /root/.bashrc
  - Key: TERRAFORM_VERSION
    Name: arg
    Value: 0.8.5
  - CmdLine:
    - wget -P /tmp https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      &&     unzip /tmp/terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/bin
      &&     rm -rf /tmp/* &&     rm -rf /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -P /tmp https://github.com/CiscoCloud/terraform.py/blob/master/terraform.py
      &&    mv /tmp/terraform.py /usr/local/bin && chmod 755 /usr/local/bin/terraform.py
    Name: run
    PrependShell: true
  - Key: TERRAFORM_INVENTORY_VERSION
    Name: arg
    Value: v0.6.1
  - Env:
    - Key: PATH
      Value: /ansible/bin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: /ansible/lib
    Name: env
  - Env:
    - Key: ANSIBLE_LIBRARY
      Value: /ansible/library
    Name: env
  - CmdLine:
    - apk --no-cache add --update -t deps git gcc make musl-dev libxml2-dev     libxslt-dev
      openssl-dev libffi-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ansible ansible-vault
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $ANSIBLE_LIBRARY && wget https://github.com/adammck/terraform-inventory/releases/download/$TERRAFORM_INVENTORY_VERSION/terraform-inventory_${TERRAFORM_INVENTORY_VERSION}_linux_amd64.zip     &&
      unzip terraform-inventory_${TERRAFORM_INVENTORY_VERSION}_linux_amd64.zip     &&
      chmod 755 terraform-inventory && mv terraform-inventory $ANSIBLE_LIBRARY/ &&
      rm terraform-inventory_${TERRAFORM_INVENTORY_VERSION}_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del --purge deps;
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/calj/bats.git && bats/install.sh /usr/local    &&
      rm -rf bats
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.3.0
    Name: env
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz   &&
      tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz   &&
      rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: DIRENV_VERSION
      Value: v2.11.3
    Name: env
  - CmdLine:
    - wget -O direnv  https://github.com/direnv/direnv/releases/download/$DIRENV_VERSION/direnv.linux-amd64  https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz   &&
      chmod 755 direnv && mv direnv /usr/local/bin
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - build/direnv/direnv_helpers.sh
    - /root/.bashrc
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./build/scripts/*
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./build/templates
    - /opt/cloud-workstation/templates
  - CmdLine:
    - chmod 755 /usr/local/bin/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /workspace
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: true
  From:
    Image: gliderlabs/alpine:3.3
  Name: ""
  Platform: ""
  SourceCode: FROM gliderlabs/alpine:3.3
