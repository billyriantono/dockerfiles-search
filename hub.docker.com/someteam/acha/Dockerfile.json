{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "clojure",
      "SourceCode": "FROM clojure AS builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "clojure"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/build"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/build"
        },
        {
          "CmdLine": [
            "lein do clean, cljsbuild once prod, uberjar"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "openjdk:8-jre-alpine",
      "SourceCode": "FROM openjdk:8-jre-alpine",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jre-alpine"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".ssh/insecure_key",
            "/root/.ssh/id_rsa"
          ]
        },
        {
          "CmdLine": [
            "chmod 600 /root/.ssh/id_rsa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"Host *\\n\\tStrictHostKeyChecking no\" \u003e /root/.ssh/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/build/target/acha-uber.jar",
            "/app/acha-uber.jar"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "java",
            "-jar",
            "acha-uber.jar"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}