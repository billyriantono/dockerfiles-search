MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk
  Commands:
  - Maintainer: Tobias Theobald <t.theobald@resolution.de>
    Name: maintainer
  - CmdLine:
    - apt-get update     && apt-get install -y apt-transport-https nano less vim xmlstarlet
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://packages.atlassian.com/atlassian-sdk-deb stable contrib" >>
      /etc/apt/sources.list     && wget https://packages.atlassian.com/api/gpg/key/public     &&
      apt-key add public     && rm public     && apt-get update     && apt-get install
      -y atlassian-plugin-sdk     && xmlstarlet ed --inplace -N "my=http://maven.apache.org/SETTINGS/1.0.0"
      -s "/my:settings/my:profiles/my:profile/my:properties" --type elem -n "argLine"
      -v "-Djdk.net.URLClassPath.disableClassPathURLCheck=true" /usr/share/atlassian-plugin-sdk-*/apache-maven-*/conf/settings.xml
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/.java
    - /root/.java
  - Key: NODE_MAJOR_VERSION
    Name: arg
    Value: '"8"'
  - Env:
    - Key: NODE_MAJOR_VERSION
      Value: ${NODE_MAJOR_VERSION}
    Name: env
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_${NODE_MAJOR_VERSION}.x | bash -     &&
      apt-get install -y nodejs jq     && npm install -g npm@latest     && echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'
      > ~/.npmrc
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     && echo
      "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list     &&
      apt-get update     && apt-get install -y yarn     && yarn --version
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y awscli
    Name: run
    PrependShell: true
  - Env:
    - Key: RANCHER_VERSION
      Value: v2.3.0
    Name: env
  - CmdLine:
    - curl -Lso /tmp/rancher.tar.gz https://github.com/rancher/cli/releases/download/${RANCHER_VERSION}/rancher-linux-amd64-${RANCHER_VERSION}.tar.gz
      &&   cd /tmp &&   tar xzf /tmp/rancher.tar.gz --strip-components=2 &&   mv /tmp/rancher
      /usr/local/bin/rancher &&   rm /tmp/rancher.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - Env:
    - Key: IMAGESCRIPTS_DIR
      Value: /opt/imagescripts
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - imagescripts
    - ${IMAGESCRIPTS_DIR}
  - CmdLine:
    - atlas-version
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8-jdk
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk
