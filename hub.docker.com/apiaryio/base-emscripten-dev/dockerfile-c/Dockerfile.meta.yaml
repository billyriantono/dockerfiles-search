MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Name: expose
    Ports:
    - "1935"
  - Name: expose
    Ports:
    - "80"
  - Env:
    - Key: DATA_DIR
      Value: /data
    Name: env
  - Env:
    - Key: LOGS_DIR
      Value: /logs
    Name: env
  - Env:
    - Key: WWW_USER
      Value: www
    Name: env
  - Env:
    - Key: NGINX_VERSION
      Value: 1.12.0
    Name: env
  - Env:
    - Key: RTMP_VERSION
      Value: 1.1.11
    Name: env
  - CmdLine:
    - useradd --user-group --shell /bin/bash www
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p   /src   /config   $DATA_DIR   $LOGS_DIR &&   chown -R www:www $DATA_DIR
      $LOGS_DIR
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $DATA_DIR
  - Name: volume
    Volumes:
    - $LOGS_DIR
  - CmdLine:
    - apt-get update &&   apt-get upgrade -y &&   apt-get clean &&   apt-get install
      -y --no-install-recommends build-essential   wget software-properties-common
      curl &&   add-apt-repository ppa:mc3man/trusty-media &&   apt-get update &&   apt-get
      install -y --no-install-recommends ffmpeg &&   apt-get install -y --no-install-recommends
      libaio1 libpcre3-dev   zlib1g-dev openssl libssl-dev wget &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  - CmdLine:
    - wget http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz &&   tar zxf nginx-$NGINX_VERSION.tar.gz
      &&   rm nginx-$NGINX_VERSION.tar.gz &&   wget https://github.com/arut/nginx-rtmp-module/archive/v$RTMP_VERSION.tar.gz
      &&   tar zxf v$RTMP_VERSION.tar.gz &&   rm v$RTMP_VERSION.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src/nginx-$NGINX_VERSION
  - CmdLine:
    - ./configure --add-module=/src/nginx-rtmp-module-$RTMP_VERSION   --user=www   --with-file-aio   --with-debug   --with-http_realip_module   --conf-path=/config/nginx.conf   --error-log-path=/logs/error.log   --http-log-path=/logs/access.log
      &&   make &&   make install &&   ln -s /usr/local/nginx/sbin/nginx /usr/bin/nginx
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - nginx.conf
    - /config/nginx.conf
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - set -x   && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)"   && wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc"   && export GNUPGHOME="$(mktemp -d)"   && gpg --keyserver
      ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4   &&
      gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu   && rm -r
      "$GNUPGHOME" /usr/local/bin/gosu.asc   && chmod +x /usr/local/bin/gosu   &&
      gosu nobody true
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /logs/access.log   && ln -sf /dev/stderr /logs/error.log
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
