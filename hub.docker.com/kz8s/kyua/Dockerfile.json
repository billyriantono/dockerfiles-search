{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "kz8s/yocto:jessie",
      "SourceCode": "FROM kz8s/yocto:jessie",
      "Platform": "",
      "From": {
        "Image": "kz8s/yocto:jessie"
      },
      "Commands": [
        {
          "Maintainer": "jono \u003cjono@bowerswilkins.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "set -eux \u0026\u0026    apt-get update \u0026\u0026    apt-get upgrade -y \u0026\u0026    apt-get install -yq         autoconf clang cmake fontconfig gdb graphviz libcairo2-dev libfreetype6-dev         libgbm-dev libgl1-mesa-dri libgles1-mesa-dev libgles2-mesa-dev         libjpeg62-turbo-dev liblua5.1-0-dev libpango1.0-dev libsqlite3-dev python3-dev uuid-dev \u0026\u0026    rm -rf /var/lib/apt-lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "CmdLine": [
            "set -eux \u0026\u0026    git clone https://github.com/jmmv/atf \u0026\u0026    git clone https://github.com/jmmv/lutok \u0026\u0026    git clone https://github.com/jmmv/kyua \u0026\u0026    git clone https://github.com/google/protobuf \u0026\u0026    git clone https://github.com/dropbox/json11"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "*.patch",
            "/src/lutok/"
          ]
        },
        {
          "Env": [
            {
              "Key": "CC",
              "Value": "clang"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CXX",
              "Value": "clang++"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux \u0026\u0026    cd atf \u0026\u0026    autoreconf -i -s -I/usr/share/aclocal \u0026\u0026    ./configure --prefix=/usr \u0026\u0026    make \u0026\u0026    make install clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux \u0026\u0026    cd lutok \u0026\u0026    patch configure.ac 0001-set-WITH_ATF-false.patch \u0026\u0026    patch configure.ac 0002-don-t-check-for-ATF.patch \u0026\u0026    autoreconf -i -s -I/usr/share/aclocal \u0026\u0026    ./configure --prefix=/usr \u0026\u0026    make \u0026\u0026    make install clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux \u0026\u0026    cd kyua \u0026\u0026    autoreconf -i -s \u0026\u0026    ./configure --prefix=/usr \u0026\u0026    make \u0026\u0026    make install clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux \u0026\u0026    cd protobuf \u0026\u0026    ./autogen.sh \u0026\u0026    ./configure \u0026\u0026    make \u0026\u0026    make install clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux \u0026\u0026    cd json11 \u0026\u0026    cmake -D CMAKE_CXX_FLAGS=-std=c++11 . \u0026\u0026    make \u0026\u0026    make install clean \u0026\u0026    mkdir -p /usr/include/json11 \u0026\u0026    mv /usr/include/x86_64-linux-gnu/json11.hpp /usr/include/json11/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}