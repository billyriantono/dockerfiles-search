MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Maintainer: Felix Hummel "felix@felixhummel.de"
    Name: maintainer
  - Env:
    - Key: NGINX_VERSION
      Value: 1.10.3
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sregex/
    - /usr/src/sregex
  - CmdLine:
    - "addgroup -S nginx \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G
      nginx nginx \t&& apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev
      \t\tmake \t\topenssl-dev \t\tpcre-dev \t\tzlib-dev \t\tlinux-headers \t\tcurl
      \t\tgnupg \t\tlibxslt-dev \t\tgd-dev \t\tgeoip-dev \t\tperl-dev"
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEYS
      Value: B0F4253373F8F6F510D42178520A9993A1C052F8
    Name: env
  - Env:
    - Key: CONFIG
      Value: "\"\t\t--prefix=/etc/nginx \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules
        \t\t--conf-path=/etc/nginx/nginx.conf \t\t--error-log-path=/var/log/nginx/error.log
        \t\t--http-log-path=/var/log/nginx/access.log \t\t--pid-path=/var/run/nginx.pid
        \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp
        \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
        \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
        \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module
        \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module
        \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module
        \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module
        \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic
        \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic
        \t\t--with-http_perl_module=dynamic \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module
        \t\t--with-http_slice_module \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-file-aio
        \t\t--with-http_v2_module \t\t--with-ipv6     --add-module=/usr/src/replace-filter-nginx-module
        \t\""
    Name: env
  - CmdLine:
    - "export GNUPGHOME=\"$(mktemp -d)\" \t&& mkdir -p /usr/src   && cd /usr/src \t&&
      curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz
      \t&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o
      nginx.tar.gz.asc \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys
      \"$GPG_KEYS\" \t&& gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \t&& rm
      -r \"$GNUPGHOME\" nginx.tar.gz.asc"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src/sregex   && make   && make install   && cd /usr/src   && rm -r /usr/src/sregex
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./replace-filter-nginx-module
    - /usr/src/replace-filter-nginx-module
  - CmdLine:
    - "cd /usr/src   && tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz \t&&
      cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug \t&&
      make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug \t&&
      mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so
      \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so
      \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&&
      mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \t&& ./configure
      $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make install \t&& rm -rf
      /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/
      \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644
      html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug
      \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so
      \t&& install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so
      \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx*
      \t&& strip /usr/lib/nginx/modules/*.so \t&& rm -rf /usr/src/nginx-$NGINX_VERSION
      \t\t&& apk add --no-cache --virtual .gettext gettext \t&& mv /usr/bin/envsubst
      /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so
      /tmp/envsubst \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'
      \t\t\t| sort -u \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t)\"
      \t&& apk add --no-cache --virtual .nginx-rundeps $runDeps \t&& apk del .build-deps
      \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t\t&& ln -sf /dev/stdout
      /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./dumb-init_1.2.0_amd64
    - /usr/local/bin/dumb-init
  - CmdLine:
    - chmod +x /usr/local/bin/dumb-init
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/dumb-init
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - apk add --update inotify-tools bash
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx-reload.sh
    - /app/nginx-reload.sh
  - CmdLine:
    - chmod +x /app/nginx-reload.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
    - "8080"
  - CmdLine:
    - /app/nginx-reload.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
