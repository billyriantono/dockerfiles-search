{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"jacob.alberty@foundigital.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PREFIX",
              "Value": "/usr/local/firebird"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VOLUME",
              "Value": "/firebird"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FBURL",
              "Value": "https://github.com/FirebirdSQL/firebird/releases/download/R2_5_8/Firebird-2.5.8.27089-0.tar.bz2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DBPATH",
              "Value": "/firebird/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -qy --no-install-recommends         bzip2         ca-certificates         curl         g++         gcc         libicu52         libicu-dev         libncurses5-dev         make \u0026\u0026     mkdir -p /home/firebird \u0026\u0026     cd /home/firebird \u0026\u0026     curl -L -o firebird-source.tar.bz2 -L         \"${FBURL}\" \u0026\u0026     tar --strip=1 -xf firebird-source.tar.bz2 \u0026\u0026     ./configure --enable-superserver         --prefix=${PREFIX} --with-fbbin=${PREFIX}/bin --with-fbsbin=${PREFIX}/bin --with-fblib=${PREFIX}/lib         --with-fbinclude=${PREFIX}/include --with-fbdoc=${PREFIX}/doc --with-fbudf=${PREFIX}/UDF         --with-fbsample=${PREFIX}/examples --with-fbsample-db=${PREFIX}/examples/empbuild --with-fbhelp=${PREFIX}/help         --with-fbintl=${PREFIX}/intl --with-fbmisc=${PREFIX}/misc --with-fbplugins=${PREFIX}         --with-fblog=${VOLUME}/log --with-fbglock=/var/firebird/run         --with-fbconf=${VOLUME}/etc --with-fbmsg=${PREFIX}         --with-fbsecure-db=${VOLUME}/system --with-system-icu \u0026\u0026    make \u0026\u0026     make silent_install \u0026\u0026     cd / \u0026\u0026     rm -rf /home/firebird \u0026\u0026     find ${PREFIX} -name .debug -prune -exec rm -rf {} \\; \u0026\u0026     apt-get purge -qy --auto-remove         libncurses5-dev         bzip2         ca-certificates         curl         gcc         g++         make         libicu-dev \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     mkdir -p \"${PREFIX}/skel\" \u0026\u0026     mv ${VOLUME}/system/security2.fdb ${PREFIX}/skel/security2.fdb \u0026\u0026     mv \"${VOLUME}/etc\" \"${PREFIX}/skel\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/firebird"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3050/tcp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "${PREFIX}/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x ${PREFIX}/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-healthcheck.sh",
            "${PREFIX}/docker-healthcheck.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x ${PREFIX}/docker-healthcheck.sh     \u0026\u0026 apt-get update     \u0026\u0026 apt-get -qy install netcat     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Health": {
            "Test": [
              "CMD-SHELL",
              "${PREFIX}/docker-healthcheck.sh || exit 1"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/usr/local/firebird/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/local/firebird/bin/fbguard"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}