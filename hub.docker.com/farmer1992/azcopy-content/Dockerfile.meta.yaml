MetaArgs: null
Stages:
- BaseName: node:10-alpine
  Commands:
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - CmdLine:
    - apk add --no-cache ca-certificates
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 2.7.15
    Name: env
  - CmdLine:
    - set -ex     && apk add --no-cache --virtual .fetch-deps         gnupg         libressl         tar         xz         &&
      wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"     &&
      wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$GPG_KEY"     && gpg --batch --verify python.tar.xz.asc python.tar.xz     &&
      rm -rf python.tar.xz.asc     && mkdir -p /usr/src/python     && tar -xJC /usr/src/python
      --strip-components=1 -f python.tar.xz     && rm python.tar.xz         && apk
      add --no-cache --virtual .build-deps          bzip2-dev         coreutils         dpkg-dev
      dpkg         gcc         gdbm-dev         libc-dev         linux-headers         make         ncurses-dev         libressl         libressl-dev         pax-utils         readline-dev         sqlite-dev         tcl-dev         tk         tk-dev         zlib-dev     &&
      apk del .fetch-deps         && cd /usr/src/python     && gnuArch="$(dpkg-architecture
      --query DEB_BUILD_GNU_TYPE)"     && ./configure         --build="$gnuArch"         --enable-shared         --enable-unicode=ucs4     &&
      make -j "$(nproc)"         EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"     &&
      make install         && runDeps="$(         scanelf --needed --nobanner --format
      '%n#p' --recursive /usr/local             | tr ',' '\n'             | sort -u             |
      awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'     )"     &&
      apk add --virtual .python-rundeps $runDeps     && apk del .build-deps         &&
      find /usr/local -depth         \(             \( -type d -a \( -name test -o
      -name tests \) \)             -o             \( -type f -a \( -name '*.pyc'
      -o -name '*.pyo' \) \)         \) -exec rm -rf '{}' +     && rm -rf /usr/src/python
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 10.0.1
    Name: env
  - CmdLine:
    - set -ex;         apk add --no-cache --virtual .fetch-deps libressl;         wget
      -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py';         apk del .fetch-deps;         python
      get-pip.py         --disable-pip-version-check         --no-cache-dir         "pip==$PYTHON_PIP_VERSION"     ;     pip
      --version;         find /usr/local -depth         \(             \( -type d
      -a \( -name test -o -name tests \) \)             -o             \( -type f
      -a \( -name '*.pyc' -o -name '*.pyo' \) \)         \) -exec rm -rf '{}' +;     rm
      -f get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache             libpng             libpng-dev             git             g++             gcc             libgcc             libstdc++             linux-headers             make             curl             python             which             bash
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz > /tmp/google-cloud-sdk.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/gcloud   && tar -C /usr/local/gcloud -xvf /tmp/google-cloud-sdk.tar.gz   &&
      /usr/local/gcloud/google-cloud-sdk/install.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/gcloud/google-cloud-sdk/bin
    Name: env
  - CmdLine:
    - echo '[http]\nsslverify = false\n'> $HOME/.gitconfig
    Name: run
    PrependShell: true
  From:
    Image: node:10-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10-alpine
