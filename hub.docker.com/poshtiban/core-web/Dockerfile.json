{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Poshtiban.io",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/app"
          ]
        },
        {
          "CmdLine": [
            "sed -i \"s|'http://127.0.0.1'|'https://atoms.poshtiban.com'|\" src/app/services/endpoint.service.js"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x ./setup_6.x"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./setup_6.x"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     nginx     nodejs     build-essential     libssl-dev     git     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker/nginx-default",
            "/etc/nginx/sites-enabled/default"
          ]
        },
        {
          "CmdLine": [
            "npm -g install bower gulp-cli     \u0026\u0026 npm install     \u0026\u0026 bower install --allow-root    \u0026\u0026 gulp build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "find -maxdepth 1 ! -name 'dist' ! -name '.' -exec rm -rf {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /app/dist"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get purge -y     nodejs     build-essential     libssl-dev     git     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}