MetaArgs: null
Stages:
- BaseName: debian:testing
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./start.sh
    - start.sh
  - Env:
    - Key: instancename
      Value: docker_book
    Name: env
  - Env:
    - Key: booktypeversion
      Value: "2.0"
    Name: env
  - Env:
    - Key: HTTP_HOST
      Value: localhost
    Name: env
  - Env:
    - Key: DJANGO_SETTINGS_MODULE
      Value: settings.prod
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $PYTHONPATH://:/${instancename}/lib/:/Booktype/lib:/${instancename}
    Name: env
  - Env:
    - Key: BOOKTYPE_USER
      Value: booktype
    Name: env
  - Env:
    - Key: BOOKTYPE_PASS
      Value: booktype
    Name: env
  - Env:
    - Key: BOOKTYPE_DB
      Value: booktype
    Name: env
  - Env:
    - Key: PG_HOST
      Value: booktyppostgres
    Name: env
  - Env:
    - Key: PG_PORT
      Value: '''5432'''
    Name: env
  - Env:
    - Key: REDIS_HOST
      Value: '''booktyperedis'''
    Name: env
  - Name: expose
    Ports:
    - "8000"
  - Name: expose
    Ports:
    - "8080"
  - Name: volume
    Volumes:
    - /logs
  - CmdLine:
    - apt-get update && apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget     unzip     python     python-dev     git-core     python-pip     python-virtualenv     redis-server     libxml2-dev     libxslt-dev     zlib1g-dev     libpq-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - virtualenv --distribute /docker_booktype
    Name: run
    PrependShell: true
  - CmdLine:
    - '#!/bin/bash . /docker_booktype/bin/activate'
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/sourcefabric/Booktype/archive/${booktypeversion}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip /${booktypeversion}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /Booktype-${booktypeversion} /Booktype
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /${booktypeversion}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -r /Booktype/requirements/prod.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - /Booktype/scripts/createbooktype --database postgresql ${instancename}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /${instancename}/settings
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -lah /${instancename}/settings
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./prod.py
    - /${instancename}/settings/prod.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./base.py
    - /${instancename}/settings/base.py
  - CmdLine:
    - /bin/bash
    - start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: debian:testing
  Name: ""
  Platform: ""
  SourceCode: FROM debian:testing
