{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:unstable-slim",
      "SourceCode": "FROM debian:unstable-slim",
      "Platform": "",
      "From": {
        "Image": "debian:unstable-slim"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/usr/local/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/go/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/lib64:/usr/local/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PKG_CONFIG_PATH",
              "Value": "/usr/local/lib/pkgconfig:/usr/local/lib64/pkgconfig:/usr/local/share/pkgconfig"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LDFLAGS",
              "Value": "\"-L/usr/local/lib64\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'path-exclude=/usr/share/doc/*' \u003e /etc/dpkg/dpkg.cfg.d/99-exclude-cruft"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'path-exclude=/usr/share/man/*' \u003e\u003e /etc/dpkg/dpkg.cfg.d/99-exclude-cruft"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '#!/bin/sh' \u003e /usr/sbin/policy-rc.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'exit 101' \u003e\u003e /usr/sbin/policy-rc.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/sbin/policy-rc.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo deb-src http://deb.debian.org/debian unstable main \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install ca-certificates \u0026\u0026     apt-get -y install --no-install-recommends       libgbm-dev       libxvmc-dev       autoconf       golang-go       cmake       spirv-headers       xinit       check       linux-image-amd64       git       procps       systemd       dbus       strace       systemd-coredump       time       busybox       kbd       ccache       xserver-xorg-core       xterm \u0026\u0026     apt-get -y build-dep --no-install-recommends       qemu       mesa       virglrenderer       libepoxy       piglit \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -v github.com/tomeuv/fakemachine/cmd/fakemachine"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go install -x github.com/tomeuv/fakemachine/cmd/fakemachine"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "KNOWN_GOOD_EPOXY",
          "Name": "arg",
          "Value": "737b6918703c"
        },
        {
          "Name": "workdir",
          "Path": "/libepoxy"
        },
        {
          "CmdLine": [
            "git clone https://github.com/anholt/libepoxy.git . \u0026\u0026     git checkout ${KNOWN_GOOD_EPOXY} \u0026\u0026     git log --oneline -n 1 \u0026\u0026     ./autogen.sh --prefix=/usr/local \u0026\u0026     make -j$(nproc) install \u0026\u0026     rm -rf /libepoxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Key": "KNOWN_GOOD_CTS",
          "Name": "arg",
          "Value": "fd68124a565e"
        },
        {
          "Name": "workdir",
          "Path": "/VK-GL-CTS"
        },
        {
          "CmdLine": [
            "git clone https://github.com/KhronosGroup/VK-GL-CTS.git . \u0026\u0026     git checkout ${KNOWN_GOOD_CTS} \u0026\u0026     git log --oneline -n 1 \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake .. -DDEQP_TARGET=x11_egl \u0026\u0026     make -j$(nproc)  \u0026\u0026 find . -type f | xargs  strip  || true \u0026\u0026     mv /VK-GL-CTS/build /usr/local/VK-GL-CTS \u0026\u0026     rm -rf /VK-GL-CTS"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Key": "KNOWN_GOOD_PIGLIT",
          "Name": "arg",
          "Value": "1a2f49f17fb45"
        },
        {
          "Name": "workdir",
          "Path": "/piglit"
        },
        {
          "CmdLine": [
            "git clone https://gitlab.freedesktop.org/mesa/piglit.git . \u0026\u0026     git checkout ${KNOWN_GOOD_PIGLIT} \u0026\u0026     git log --oneline -n 1 \u0026\u0026     mkdir /usr/local/piglit  \u0026\u0026     cmake -DCMAKE_INSTALL_PREFIX=/usr/local/piglit . \u0026\u0026     make -j$(nproc) install \u0026\u0026 rm -rf /piglit     find /usr/loca/piglit -type f | xargs  strip  || true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Key": "KNOWN_GOOD_MESA",
          "Name": "arg",
          "Value": "8efdffba9408"
        },
        {
          "Name": "workdir",
          "Path": "/mesa"
        },
        {
          "CmdLine": [
            "git clone https://gitlab.collabora.com/tomeu/mesa.git . \u0026\u0026     git checkout ${KNOWN_GOOD_MESA} \u0026\u0026     git log --oneline -n 1 \u0026\u0026     ./autogen.sh --prefix=/usr/local --with-platforms=\"drm x11 wayland\" --with-dri-drivers=\"i965\" --with-gallium-drivers=\"swrast virgl radeonsi r600\" --enable-debug --enable-llvm ac_cv_path_LLVM_CONFIG=llvm-config-6.0 --enable-driglx-direct --enable-glx-tls --enable-texture-float \u0026\u0026     make -j$(nproc) install \u0026\u0026     rm -rf /mesa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        }
      ]
    }
  ]
}