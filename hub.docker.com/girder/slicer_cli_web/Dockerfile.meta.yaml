MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Deepak Roy Chittajallu <deepk.chittajallu@kitware.com>
    Name: maintainer
  - CmdLine:
    - apt-get update &&     apt-get install -y     build-essential     wget     git     emacs
      vim     make cmake cmake-curses-gui     ninja-build &&     apt-get autoremove
      &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: BUILD_PATH
      Value: $PWD/build
    Name: env
  - CmdLine:
    - mkdir -p $BUILD_PATH &&     wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh     -O
      $BUILD_PATH/install_miniconda.sh &&     bash $BUILD_PATH/install_miniconda.sh
      -b -p $BUILD_PATH/miniconda &&     rm $BUILD_PATH/install_miniconda.sh &&     chmod
      -R +r $BUILD_PATH &&     chmod +x $BUILD_PATH/miniconda/bin/python
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $BUILD_PATH/miniconda/bin:${PATH}
    Name: env
  - Env:
    - Key: CMAKE_ARCHIVE_SHA256
      Value: fdda4a8324e23c705ef0c2c45ba934ff3bd43798fb5631eec2d453693dbe777c
    Name: env
  - Env:
    - Key: CMAKE_VERSION_MAJOR
      Value: "3"
    Name: env
  - Env:
    - Key: CMAKE_VERSION_MINOR
      Value: "6"
    Name: env
  - Env:
    - Key: CMAKE_VERSION_PATCH
      Value: "1"
    Name: env
  - Env:
    - Key: CMAKE_VERSION
      Value: ${CMAKE_VERSION_MAJOR}.${CMAKE_VERSION_MINOR}.${CMAKE_VERSION_PATCH}
    Name: env
  - CmdLine:
    - cd $BUILD_PATH &&   wget https://cmake.org/files/v${CMAKE_VERSION_MAJOR}.${CMAKE_VERSION_MINOR}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz
      &&   hash=$(sha256sum ./cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz | awk '{
      print $1 }') &&   [ $hash = "${CMAKE_ARCHIVE_SHA256}" ] &&   tar -xzvf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz
      &&   rm cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $BUILD_PATH/cmake-${CMAKE_VERSION}-Linux-x86_64/bin:${PATH}
    Name: env
  - CmdLine:
    - git config --global advice.detachedHead false
    Name: run
    PrependShell: true
  - Env:
    - Key: ITK_GIT_TAG
      Value: v4.10.0
    Name: env
  - CmdLine:
    - cd $BUILD_PATH && git clone --depth 1 -b ${ITK_GIT_TAG} git://itk.org/ITK.git
      &&     mkdir ITK-build &&     cd ITK-build &&     cmake         -G Ninja         -DCMAKE_INSTALL_PREFIX:PATH=/usr         -DBUILD_EXAMPLES:BOOL=OFF         -DBUILD_TESTING:BOOL=OFF         -DBUILD_SHARED_LIBS:BOOL=ON         -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON         -DITK_LEGACY_REMOVE:BOOL=ON         -DITK_BUILD_DEFAULT_MODULES:BOOL=OFF         -DITK_USE_SYSTEM_LIBRARIES:BOOL=OFF         -DModule_ITKCommon:BOOL=ON         -DModule_ITKIOXML:BOOL=ON         -DModule_ITKExpat:BOOL=ON         ../ITK
      &&     ninja install &&     cd $BUILD_PATH && rm -rf ITK ITK-build
    Name: run
    PrependShell: true
  - Env:
    - Key: SEM_GIT_TAG
      Value: 7525fc777a064529aff55e41aef6d91a85074553
    Name: env
  - CmdLine:
    - cd $BUILD_PATH &&     git clone git://github.com/Slicer/SlicerExecutionModel.git
      &&     (cd SlicerExecutionModel && git checkout ${SEM_GIT_TAG}) &&     mkdir
      SEM-build && cd SEM-build &&     cmake         -G Ninja         -DCMAKE_BUILD_TYPE:STRING=Release         -DBUILD_TESTING:BOOL=OFF         ../SlicerExecutionModel
      &&     ninja
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --yes -c cdeepakroy ctk-cli=1.4.1
    Name: run
    PrependShell: true
  - Env:
    - Key: slicer_cli_web_path
      Value: $BUILD_PATH/slicer_cli_web
    Name: env
  - CmdLine:
    - mkdir -p $slicer_cli_web_path
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $slicer_cli_web_path/
  - Name: workdir
    Path: $slicer_cli_web_path/server
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
