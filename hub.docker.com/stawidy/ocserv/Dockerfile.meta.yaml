MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Maintainer: stawidy <duyizhaozj321@yahoo.com>
    Name: maintainer
  - Key: OC_VERSION
    Name: arg
    Value: 0.12.5
  - CmdLine:
    - "buildDeps=\" \t\tcurl \t\tg++ \t\tgnutls-dev \t\tgpgme \t\tlibev-dev \t\tlibnl3-dev
      \t\tlibseccomp-dev \t\tlinux-headers \t\tlinux-pam-dev \t\tlz4-dev \t\tmake
      \t\treadline-dev \t\ttar \t\txz \t\"; \tset -x \t&& apk add --update --virtual
      .build-deps $buildDeps \t&& curl -SL \"ftp://ftp.infradead.org/pub/ocserv/ocserv-$OC_VERSION.tar.xz\"
      -o ocserv.tar.xz \t&& curl -SL \"ftp://ftp.infradead.org/pub/ocserv/ocserv-$OC_VERSION.tar.xz.sig\"
      -o ocserv.tar.xz.sig \t&& gpg --keyserver pool.sks-keyservers.net --recv-key
      7F343FA7 \t&& gpg --keyserver pool.sks-keyservers.net --recv-key 96865171 \t&&
      gpg --verify ocserv.tar.xz.sig \t&& mkdir -p /usr/src/ocserv \t&& tar -xf ocserv.tar.xz
      -C /usr/src/ocserv --strip-components=1 \t&& rm ocserv.tar.xz* \t&& cd /usr/src/ocserv
      \t&& ./configure \t&& make \t&& make install \t&& mkdir -p /etc/ocserv \t&&
      cd / \t&& rm -fr /usr/src/ocserv \t&& runDeps=\"$( \t\tscanelf --needed --nobanner
      /usr/local/sbin/ocserv \t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\"
      $2 }' \t\t\t| xargs -r apk info --installed \t\t\t| sort -u \t\t)\" \t&& apk
      add --virtual .run-deps $runDeps gnutls-utils iptables \t&& apk del .build-deps
      \    && rm -rf /var/cache/apk/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: CA_CN
      Value: '"Sample CN"'
    - Key: CA_ORG
      Value: '"Sample ORG"'
    - Key: CA_DAYS
      Value: "9999"
    - Key: SRV_CN
      Value: '"your.domain.name"'
    - Key: SRV_ORG
      Value: '"Sample ORG"'
    - Key: SRV_DAYS
      Value: "9999"
    - Key: VPN_NETWORK
      Value: 10.0.6.0
    - Key: VPN_NETMASK
      Value: 255.255.255.0
    Name: env
  - Name: workdir
    Path: /etc/ocserv
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ocserv.conf
    - /etc/ocserv/ocserv.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - 443/tcp
    - 443/udp
  - CmdLine:
    - ocserv
    - -c
    - /etc/ocserv/ocserv.conf
    - -f
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
