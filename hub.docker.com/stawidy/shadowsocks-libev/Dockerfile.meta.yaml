MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Maintainer: stawidy <duyizhaozj321@yahoo.com>
    Name: maintainer
  - Key: SS_VER
    Name: arg
    Value: 3.3.0
  - Key: SS_URL
    Name: arg
    Value: https://github.com/shadowsocks/shadowsocks-libev/releases/download/v$SS_VER/shadowsocks-libev-$SS_VER.tar.gz
  - Env:
    - Key: SERVER_ADDR
      Value: 0.0.0.0
    Name: env
  - Env:
    - Key: SERVER_PORT
      Value: "8388"
    Name: env
  - Env:
    - Key: PASSWORD
      Value: ""
    Name: env
  - Env:
    - Key: METHOD
      Value: xchacha20-ietf-poly1305
    Name: env
  - Env:
    - Key: TIMEOUT
      Value: "600"
    Name: env
  - Env:
    - Key: DNS_ADDR
      Value: 8.8.8.8
    Name: env
  - Env:
    - Key: DNS_ADDR_2
      Value: 8.8.4.4
    Name: env
  - Env:
    - Key: ARGS
      Value: ""
    Name: env
  - CmdLine:
    - set -ex &&     apk add --no-cache --virtual .build-deps                                 autoconf                                 build-base                                 curl                                 libev-dev                                 linux-headers                                 libsodium-dev                                 mbedtls-dev                                 pcre-dev                                 tar                                 c-ares-dev
      &&     cd /tmp &&     curl -sSL $SS_URL | tar xz --strip 1 &&     ./configure
      --prefix=/usr --disable-documentation &&     make install &&     cd .. &&     runDeps="$(         scanelf
      --needed --nobanner /usr/bin/ss-*             | awk '{ gsub(/,/, "\nso:", $2);
      print "so:" $2 }'             | xargs -r apk info --installed             |
      sort -u     )" &&     apk add --no-cache --virtual .run-deps $runDeps &&     apk
      del .build-deps &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Name: user
    User: nobody
  - Name: expose
    Ports:
    - $SERVER_PORT/tcp
    - $SERVER_PORT/udp
  - CmdLine:
    - ss-server -s $SERVER_ADDR               -p $SERVER_PORT               -k ${PASSWORD:-$(hostname)}               -m
      $METHOD               -t $TIMEOUT               --fast-open               -d
      $DNS_ADDR               -d $DNS_ADDR_2               -u               $ARGS
    Name: cmd
    PrependShell: true
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
