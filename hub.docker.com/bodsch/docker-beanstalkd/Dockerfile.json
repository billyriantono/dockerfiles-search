{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8 as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_TYPE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BEANSTALKD_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "apk update --quiet --no-cache \u0026\u0026   apk upgrade --quiet --no-cache \u0026\u0026   apk add --quiet --no-cache     build-base git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026   git clone https://github.com/kr/beanstalkd.git \u0026\u0026   cd beanstalkd \u0026\u0026   if [ \"${BUILD_TYPE}\" == \"stable\" ] ; then     echo \"switch to stable Tag v${BEANSTALKD_VERSION}\" \u0026\u0026     git checkout tags/v${BEANSTALKD_VERSION} 2\u003e /dev/null ;   fi \u0026\u0026   sed -i 's,sys/fcntl.h,fcntl.h,' sd-daemon.c \u0026\u0026   make \u0026\u0026   mv beanstalkd /usr/bin/ \u0026\u0026   /usr/bin/beanstalkd -v"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "'Europe/Berlin'"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "11300"
          ]
        },
        {
          "CmdLine": [
            "apk update --quiet --no-cache \u0026\u0026   apk upgrade --quiet --no-cache \u0026\u0026   apk add --quiet --no-cache --virtual .build-deps     tzdata \u0026\u0026   cp /usr/share/zoneinfo/${TZ} /etc/localtime \u0026\u0026   echo ${TZ} \u003e /etc/timezone \u0026\u0026   mkdir /var/cache/beanstalkd \u0026\u0026   apk del --quiet .build-deps \u0026\u0026   rm -rf     /tmp/*     /var/cache/apk/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/beanstalkd",
            "/usr/bin/"
          ]
        },
        {
          "Health": {
            "Interval": 5000000000,
            "Retries": 12,
            "Test": [
              "CMD-SHELL",
              "ps ax | grep -v grep | grep -c beanstalkd || exit 1"
            ],
            "Timeout": 2000000000
          },
          "Name": "healthcheck"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/beanstalkd"
          ]
        },
        {
          "CmdLine": [
            "/init/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "beanstalkd",
            "-f",
            "3200"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "${BUILD_VERSION}"
            },
            {
              "Key": "maintainer",
              "Value": "\"Bodo Schulz \u003cbodo@boone-schulz.de\u003e\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "${BUILD_DATE}"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"beanstalkd Docker Image\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Inofficial beanstalkd Docker Image\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"http://kr.github.io/beanstalkd/\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/bodsch/docker-beanstalkd\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Bodo Schulz\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "${BEANSTALKD_VERSION}"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "com.microscaling.docker.dockerfile",
              "Value": "\"/Dockerfile\""
            },
            {
              "Key": "com.microscaling.license",
              "Value": "\"Unlicense\""
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}