{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "golang:1-alpine",
      "SourceCode": "FROM golang:1-alpine as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "golang:1-alpine"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Name": "workdir",
          "Path": "/opt/go"
        },
        {
          "CmdLine": [
            "apk update --no-cache \u0026\u0026   apk upgrade --no-cache \u0026\u0026   apk add     ca-certificates curl g++ git make python libuv nodejs nodejs-npm \u0026\u0026   echo \"export BUILD_DATE=${BUILD_DATE}\" \u003e /etc/enviroment"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export GOPATH=/opt/go \u0026\u0026   go get github.com/aerth/markdownd || true \u0026\u0026   mkdir /tmp/markdownd \u0026\u0026   export GOPATH=/opt/go \u0026\u0026   export GOMAXPROCS=4 \u0026\u0026   export GOARCH=amd64 \u0026\u0026   cd ${GOPATH}/src/github.com/aerth/markdownd \u0026\u0026   version=$(git describe --tags --always | sed 's/^v//') \u0026\u0026   echo \"build version: ${version}\" \u0026\u0026   ls -1 \u0026\u0026   /bin/sh ./build.sh \u0026\u0026   mv markdownd /tmp/markdownd/ \u0026\u0026   mv theme /tmp/markdownd/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/enviroment",
            "/etc/enviroment"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/markdownd/",
            "/markdownd"
          ]
        },
        {
          "CmdLine": [
            "export TZ='Europe/Berlin' \u0026\u0026   apk update --quiet --no-cache update \u0026\u0026   apk add --quiet --no-cache --virtual .build-deps     tzdata \u0026\u0026   cp /usr/share/zoneinfo/${TZ} /etc/localtime \u0026\u0026   echo ${TZ} \u003e /etc/timezone \u0026\u0026   if [ -f /etc/enviroment ] ; then . /etc/enviroment; fi \u0026\u0026   apk del --quiet .build-deps \u0026\u0026   rm -rf     /tmp/*     /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/markdownd",
            "/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/markdownd"
        },
        {
          "CmdLine": [
            "/markdownd/markdownd"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-toc",
            "-footer",
            "/data/themes/footer.html",
            "-header",
            "/data/themes/header.html",
            "-index",
            "index.md",
            "/data"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"${BUILD_VERSION}\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Bodo Schulz \u003cbodo@boone-schulz.de\u003e\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "${BUILD_DATE}"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"markdownd Docker Image\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Inofficial markdownd Docker Image\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://markdownd.herokuapp.com/\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/bodsch/docker-markdownd\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Bodo Schulz\""
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "com.microscaling.docker.dockerfile",
              "Value": "\"/Dockerfile\""
            },
            {
              "Key": "com.microscaling.license",
              "Value": "\"MIT License\""
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}