MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1-alpine
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: BUILD_VERSION
    Name: arg
    Value: null
  - Name: workdir
    Path: /opt/go
  - CmdLine:
    - apk update --no-cache &&   apk upgrade --no-cache &&   apk add     ca-certificates
      curl g++ git make python libuv nodejs nodejs-npm &&   echo "export BUILD_DATE=${BUILD_DATE}"
      > /etc/enviroment
    Name: run
    PrependShell: true
  - CmdLine:
    - 'export GOPATH=/opt/go &&   go get github.com/aerth/markdownd || true &&   mkdir
      /tmp/markdownd &&   export GOPATH=/opt/go &&   export GOMAXPROCS=4 &&   export
      GOARCH=amd64 &&   cd ${GOPATH}/src/github.com/aerth/markdownd &&   version=$(git
      describe --tags --always | sed ''s/^v//'') &&   echo "build version: ${version}"
      &&   ls -1 &&   /bin/sh ./build.sh &&   mv markdownd /tmp/markdownd/ &&   mv
      theme /tmp/markdownd/'
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/sh
    Name: cmd
    PrependShell: false
  From:
    Image: golang:1-alpine
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1-alpine as builder
- BaseName: alpine:3.8
  Commands:
  - Name: expose
    Ports:
    - "8080"
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /etc/enviroment
    - /etc/enviroment
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /tmp/markdownd/
    - /markdownd
  - CmdLine:
    - export TZ='Europe/Berlin' &&   apk update --quiet --no-cache update &&   apk
      add --quiet --no-cache --virtual .build-deps     tzdata &&   cp /usr/share/zoneinfo/${TZ}
      /etc/localtime &&   echo ${TZ} > /etc/timezone &&   if [ -f /etc/enviroment
      ] ; then . /etc/enviroment; fi &&   apk del --quiet .build-deps &&   rm -rf     /tmp/*     /var/cache/apk/*
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /markdownd
    - /data
  - Name: workdir
    Path: /markdownd
  - CmdLine:
    - /markdownd/markdownd
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - -toc
    - -footer
    - /data/themes/footer.html
    - -header
    - /data/themes/header.html
    - -index
    - index.md
    - /data
    Name: cmd
    PrependShell: false
  - Labels:
    - Key: version
      Value: '"${BUILD_VERSION}"'
    - Key: maintainer
      Value: '"Bodo Schulz <bodo@boone-schulz.de>"'
    - Key: org.label-schema.build-date
      Value: ${BUILD_DATE}
    - Key: org.label-schema.name
      Value: '"markdownd Docker Image"'
    - Key: org.label-schema.description
      Value: '"Inofficial markdownd Docker Image"'
    - Key: org.label-schema.url
      Value: '"https://markdownd.herokuapp.com/"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/bodsch/docker-markdownd"'
    - Key: org.label-schema.vendor
      Value: '"Bodo Schulz"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: com.microscaling.docker.dockerfile
      Value: '"/Dockerfile"'
    - Key: com.microscaling.license
      Value: '"MIT License"'
    Name: label
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
