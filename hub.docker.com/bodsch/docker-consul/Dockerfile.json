{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "golang:1-alpine",
      "SourceCode": "FROM golang:1-alpine as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "golang:1-alpine"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_TYPE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "CONSUL_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            },
            {
              "Key": "GOPATH",
              "Value": "/opt/go"
            },
            {
              "Key": "GOOS",
              "Value": "linux"
            },
            {
              "Key": "GOARCH",
              "Value": "amd64"
            },
            {
              "Key": "GOMAXPROCS",
              "Value": "4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update  --quiet --no-cache \u0026\u0026   apk upgrade --quiet --no-cache \u0026\u0026   apk add     --quiet     bash git ncurses make zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"get sources ...\" \u0026\u0026   go get github.com/hashicorp/consul || true \u0026\u0026   cd ${GOPATH}/src/github.com/hashicorp/consul \u0026\u0026   if [ \"${BUILD_TYPE}\" == \"stable\" ] ; then     echo \"switch to stable Tag v${CONSUL_VERSION}\" \u0026\u0026     git checkout tags/v${CONSUL_VERSION} 2\u003e /dev/null ;   fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${GOPATH}/src/github.com/hashicorp/consul"
        },
        {
          "CmdLine": [
            "export PATH=${GOPATH}/bin:${PATH} \u0026\u0026   make linux"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/consul.d \u0026\u0026   cp -a   bin/consul /usr/bin/ \u0026\u0026   cp -ar  bench/conf/*.json  /etc/consul.d/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Name": "expose",
          "Ports": [
            "8300",
            "8301",
            "8301/udp",
            "8302",
            "8302/udp",
            "8400",
            "8500",
            "8600",
            "8600/udp"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/consul",
            "/usr/bin/consul"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/consul.d",
            "/etc/consul.d"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/consul"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "agent",
            "-data-dir",
            "/data"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"${BUILD_VERSION}\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Bodo Schulz \u003cbodo@boone-schulz.de\u003e\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "${BUILD_DATE}"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"Consul Docker Image\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Inofficial Consul Docker Image\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://www.consul.io/\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/bodsch/docker-consul\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Bodo Schulz\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "${CONSUL_VERSION}"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "com.microscaling.docker.dockerfile",
              "Value": "\"/Dockerfile\""
            },
            {
              "Key": "com.microscaling.license",
              "Value": "\"GNU Lesser General Public License v2.1\""
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}