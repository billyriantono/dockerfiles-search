MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1-alpine
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: BUILD_VERSION
    Name: arg
    Value: null
  - Key: BUILD_TYPE
    Name: arg
    Value: null
  - Key: VAULT_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: TERM
      Value: xterm
    - Key: GOPATH
      Value: /opt/go
    - Key: GOMAXPROCS
      Value: "4"
    - Key: GOOS
      Value: linux
    Name: env
  - CmdLine:
    - echo "export BUILD_DATE=${BUILD_DATE}"         > /etc/profile.d/vault.sh &&   echo
      "export BUILD_TYPE=${BUILD_TYPE}"        >> /etc/profile.d/vault.sh &&   echo
      "export VAULT_VERSION=${VAULT_VERSION}"  >> /etc/profile.d/vault.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update  --quiet &&   apk upgrade --quiet &&   apk add     --quiet     bash
      git make ncurses zip
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "get sources ..." &&   go get github.com/hashicorp/vault || true &&   cd
      ${GOPATH}/src/github.com/hashicorp/vault &&   if [ "${BUILD_TYPE}" == "stable"
      ] ; then     echo "switch to stable Tag v${VAULT_VERSION}" &&     git checkout
      tags/v${VAULT_VERSION} 2> /dev/null ;   fi
    Name: run
    PrependShell: true
  - CmdLine:
    - export PATH=${GOPATH}/bin:${PATH} &&   cd ${GOPATH}/src/github.com/hashicorp/vault
      &&   make bootstrap &&   make &&   cp -v bin/vault /usr/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: golang:1-alpine
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1-alpine as builder
- BaseName: alpine:3.8
  Commands:
  - Name: expose
    Ports:
    - "8200"
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /etc/profile.d/vault.sh
    - /etc/profile.d/vault.sh
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/bin/vault
    - /usr/bin/vault
  - CmdLine:
    - /usr/bin/vault
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - version
    Name: cmd
    PrependShell: false
  - Labels:
    - Key: version
      Value: '"${BUILD_VERSION}"'
    - Key: maintainer
      Value: '"Bodo Schulz <bodo@boone-schulz.de>"'
    - Key: org.label-schema.build-date
      Value: ${BUILD_DATE}
    - Key: org.label-schema.name
      Value: '"Vault Docker Image"'
    - Key: org.label-schema.description
      Value: '"Inofficial Vault Docker Image"'
    - Key: org.label-schema.url
      Value: '"https://www.vaultproject.io/"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/bodsch/docker-vault"'
    - Key: org.label-schema.vendor
      Value: '"Bodo Schulz"'
    - Key: org.label-schema.version
      Value: ${VAULT_VERSION}
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: com.microscaling.docker.dockerfile
      Value: '"/Dockerfile"'
    - Key: com.microscaling.license
      Value: '"GNU Lesser General Public License v2.1"'
    Name: label
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
