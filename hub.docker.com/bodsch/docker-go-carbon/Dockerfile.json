{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "golang:1-alpine",
      "SourceCode": "FROM golang:1-alpine as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "golang:1-alpine"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_TYPE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "GOCARBON_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/opt/go"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update  --quiet --no-cache \u0026\u0026   apk upgrade --quiet --no-cache \u0026\u0026   apk add     --quiet     g++ git make musl-dev \u0026\u0026   echo \"export BUILD_DATE=${BUILD_DATE}\"  \u003e /etc/profile.d/go-carbon.sh \u0026\u0026   echo \"export BUILD_TYPE=${BUILD_TYPE}\" \u003e\u003e /etc/profile.d/go-carbon.sh \u0026\u0026   echo \"export VERSION=${VERSION}\"       \u003e\u003e /etc/profile.d/go-carbon.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p     ${GOPATH}     /var/log/go-carbon \u0026\u0026   cd ${GOPATH} \u0026\u0026   export PATH=\"${PATH}:${GOPATH}/bin\" \u0026\u0026   git clone https://github.com/lomik/go-carbon.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${GOPATH} \u0026\u0026   export PATH=\"${PATH}:${GOPATH}/bin\" \u0026\u0026   cd go-carbon \u0026\u0026   if [ \"${BUILD_TYPE}\" == \"stable\" ] ; then     echo \"switch to stable Tag v${GOCARBON_VERSION}\" \u0026\u0026     git checkout tags/v${GOCARBON_VERSION} 2\u003e /dev/null ;   fi \u0026\u0026   version=$(git describe --tags --always | sed 's/^v//') \u0026\u0026   echo \"build version: ${version}\" \u0026\u0026   make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /go-carbon/etc \u0026\u0026   mv ${GOPATH}/go-carbon/go-carbon                       /go-carbon/go-carbon \u0026\u0026   mv ${GOPATH}/go-carbon/deploy/go-carbon.conf           /go-carbon/etc/go-carbon.conf \u0026\u0026   mv ${GOPATH}/go-carbon/deploy/storage-schemas.conf     /go-carbon/etc/go-carbon_storage-schemas.conf \u0026\u0026   mv ${GOPATH}/go-carbon/deploy/storage-aggregation.conf /go-carbon/etc/go-carbon_storage-aggregation.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "'Europe/Berlin'"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "2003",
            "2003/udp",
            "2004",
            "7002",
            "7003",
            "7007",
            "8080"
          ]
        },
        {
          "CmdLine": [
            "apk update --quiet --no-cache \u0026\u0026   apk add    --quiet --no-cache --virtual .build-deps     shadow tzdata \u0026\u0026   cp /usr/share/zoneinfo/${TZ} /etc/localtime \u0026\u0026   echo ${TZ} \u003e /etc/timezone \u0026\u0026   /usr/sbin/useradd --system -U -s /bin/false -c \"User for Graphite daemon\" carbon \u0026\u0026   mkdir /var/log/go-carbon \u0026\u0026   apk del --quiet --purge .build-deps \u0026\u0026   rm -rf     /tmp/*     /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/profile.d/go-carbon.sh",
            "/etc/profile.d/go-carbon.sh"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/go-carbon/etc",
            "/etc/go-carbon/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/go-carbon/go-carbon",
            "/usr/bin/go-carbon"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/srv"
          ]
        },
        {
          "Health": {
            "Interval": 5000000000,
            "Retries": 12,
            "Test": [
              "CMD-SHELL",
              "ps ax | grep -v grep | grep -c go-carbon || exit 1"
            ],
            "Timeout": 2000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/init/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"${BUILD_TYPE}\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Bodo Schulz \u003cbodo@boone-schulz.de\u003e\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "${BUILD_DATE}"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"go carbon Docker Image\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Inofficial go carbon Docker Image\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/lomik/go-carbon\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/bodsch/docker-go-carbon\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Bodo Schulz\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "${GOCARBON_VERSION}"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "com.microscaling.docker.dockerfile",
              "Value": "\"/Dockerfile\""
            },
            {
              "Key": "com.microscaling.license",
              "Value": "\"The Unlicense\""
            }
          ],
          "Name": "label"
        }
      ]
    }
  ]
}