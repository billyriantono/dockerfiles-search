{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Name": "expose",
          "Ports": [
            "22222",
            "8080"
          ]
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "TOMCAT_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "JOLOKIA_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "HAWTIO_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            },
            {
              "Key": "APACHE_MIRROR",
              "Value": "archive.apache.org"
            },
            {
              "Key": "CATALINA_HOME",
              "Value": "/opt/tomcat"
            },
            {
              "Key": "OPENJDK_VERSION",
              "Value": "\"8.151.12\""
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/default-jvm"
            },
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/jdk/bin:${CATALINA_HOME}/bin"
            },
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "${BUILD_VERSION}"
            },
            {
              "Key": "maintainer",
              "Value": "\"Bodo Schulz \u003cbodo@boone-schulz.de\u003e\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "${BUILD_DATE}"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"Jolokia Docker Image\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Inofficial Jolokia Docker Image\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://jolokia.org\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/bodsch/docker-jolokia\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Bodo Schulz\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$JOLOKIA_VERSION"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "com.microscaling.docker.dockerfile",
              "Value": "\"/Dockerfile\""
            },
            {
              "Key": "com.microscaling.license",
              "Value": "\"GNU General Public License v3.0\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk update --quiet --no-cache \u0026\u0026   apk upgrade --quiet --no-cache \u0026\u0026   apk add --quiet --no-cache     curl     openjdk8-jre-base     tomcat-native \u0026\u0026   echo \"export LANG=${LANG}\" \u003e /etc/profile.d/locale.sh \u0026\u0026   echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' \u003e\u003e /etc/nsswitch.conf \u0026\u0026   sed -i 's,#networkaddress.cache.ttl=-1,networkaddress.cache.ttl=30,' ${JAVA_HOME}/jre/lib/security/java.security \u0026\u0026   mkdir /opt \u0026\u0026   echo \"download tomcat version $TOMCAT_VERSION (https://$APACHE_MIRROR/dist/tomcat/tomcat-9)\" \u0026\u0026   curl     --silent     --location     --retry 3     --cacert /etc/ssl/certs/ca-certificates.crt     https://$APACHE_MIRROR/dist/tomcat/tomcat-9/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz     | gunzip     | tar x -C /opt/ \u0026\u0026   ln -s /opt/apache-tomcat-$TOMCAT_VERSION ${CATALINA_HOME} \u0026\u0026   ln -s ${CATALINA_HOME}/logs /var/log/jolokia \u0026\u0026   rm -rf ${CATALINA_HOME}/webapps/* \u0026\u0026   echo \"download jolokia version $JOLOKIA_VERSION (https://repo1.maven.org/maven2/org/jolokia/jolokia-war)\" \u0026\u0026   curl     --silent     --location     --retry 3     --cacert /etc/ssl/certs/ca-certificates.crt     --output ${CATALINA_HOME}/webapps/jolokia.war   https://repo1.maven.org/maven2/org/jolokia/jolokia-war/$JOLOKIA_VERSION/jolokia-war-$JOLOKIA_VERSION.war \u0026\u0026   echo \"download hawtio version $HAWTIO_VERSION (https://github.com/hawtio/hawtio/tags)\" \u0026\u0026   curl     --silent     --location     --retry 3     --cacert /etc/ssl/certs/ca-certificates.crt     --output ${CATALINA_HOME}/webapps/hawtio.war     https://oss.sonatype.org/content/repositories/public/io/hawt/hawtio-default/$HAWTIO_VERSION/hawtio-default-$HAWTIO_VERSION.war \u0026\u0026   cd ${CATALINA_HOME}/webapps/ \u0026\u0026   mkdir     jolokia hawtio \u0026\u0026   unzip jolokia.war -d jolokia \u003e /dev/null \u0026\u0026   unzip hawtio.war -d hawtio \u003e /dev/null \u0026\u0026   rm -f *.war \u0026\u0026   rm -f ${CATALINA_HOME}/LICENSE \u0026\u0026   rm -f ${CATALINA_HOME}/NOTICE \u0026\u0026   rm -f ${CATALINA_HOME}/RELEASE-NOTES \u0026\u0026   rm -f ${CATALINA_HOME}/RUNNING.txt \u0026\u0026   rm -f ${CATALINA_HOME}/bin/*.bat \u0026\u0026   rm -rf     /tmp/*     /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${CATALINA_HOME}/webapps/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "Health": {
            "Interval": 5000000000,
            "Retries": 12,
            "Test": [
              "CMD-SHELL",
              "curl --silent --fail http://localhost:8080/jolokia || exit 1"
            ],
            "Timeout": 2000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/init/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}