{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "bodsch/docker-dashing:1801-r1",
      "SourceCode": "FROM bodsch/docker-dashing:1801-r1",
      "Platform": "",
      "From": {
        "Image": "bodsch/docker-dashing:1801-r1"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "BUILD_DATE",
              "Value": "\"2018-01-25\""
            },
            {
              "Key": "TZ",
              "Value": "'Europe/Berlin'"
            },
            {
              "Key": "DASHBOARD",
              "Value": "\"icinga2\""
            },
            {
              "Key": "ICINGA2_GEM_VERSION",
              "Value": "\"0.9\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "3030"
          ]
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"1801\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Bodo Schulz \u003cbodo@boone-schulz.de\u003e\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "${BUILD_DATE}"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"Dashing Icinga2 Docker Image\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Inofficial Dashing Icinga2 Docker Image\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/Smashing/smashing\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/bodsch/docker-dashing-icinga2\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Bodo Schulz\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "${ICINGA_VERSION}"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "com.microscaling.docker.dockerfile",
              "Value": "\"/Dockerfile\""
            },
            {
              "Key": "com.microscaling.license",
              "Value": "\"GNU General Public License v3.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build",
            "/build"
          ]
        },
        {
          "CmdLine": [
            "apk update  --quiet --no-cache \u0026\u0026   apk upgrade --quiet --no-cache \u0026\u0026   apk add --quiet --virtual .build-deps     build-base git ruby-dev openssl-dev \u0026\u0026   apk add --quiet --no-cache     jq tzdata yajl-tools \u0026\u0026   cp /usr/share/zoneinfo/${TZ} /etc/localtime \u0026\u0026   echo ${TZ} \u003e /etc/timezone \u0026\u0026   cd /opt \u0026\u0026   smashing new ${DASHBOARD} \u0026\u0026   rm -f /opt/${DASHBOARD}/jobs/twitter* \u0026\u0026   rm -f /opt/${DASHBOARD}/dashboards/* \u0026\u0026   cd ${DASHBOARD} \u0026\u0026   bundle config local.icinga2 /build \u0026\u0026   sed -i \"/gem 'twitter'/d\" Gemfile \u0026\u0026   echo \"gem 'puma', '~\u003e 3.10'\" \u003e\u003e Gemfile \u0026\u0026   count=$(ls -1 /build/*.gem 2\u003e /dev/null | tail -n1) \u0026\u0026   if [ ! -z ${count} ] ; then     gem install --no-rdoc --no-ri ${count} ;   else     echo \"gem 'icinga2', '~\u003e ${ICINGA2_GEM_VERSION}'\" \u003e\u003e Gemfile ;   fi \u0026\u0026   bundle update --quiet \u0026\u0026   apk del --quiet --purge .build-deps \u0026\u0026   rm -rf     /tmp/*     /build     /var/cache/apk/*     /usr/lib/ruby/gems/current/cache/*     /root/.gem     /root/.bundle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/${DASHBOARD}"
        },
        {
          "Health": {
            "Interval": 5000000000,
            "Retries": 12,
            "Test": [
              "CMD-SHELL",
              "curl --silent --fail http://localhost:3030/dashing/${DASHBOARD} || exit 1"
            ],
            "Timeout": 2000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/init/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}