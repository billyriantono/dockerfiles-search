{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "GRAPHITE_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "PYTHON_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "BUILD_TYPE",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "'Europe/Berlin'"
            },
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "2003",
            "2003/udp",
            "7002",
            "8080"
          ]
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"1807\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Bodo Schulz \u003cbodo@boone-schulz.de\u003e\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "${BUILD_DATE}"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"Graphite Docker Image\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Inofficial Graphite Docker Image\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://graphite.readthedocs.io/en/latest/index.html\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/bodsch/docker-graphite\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Bodo Schulz\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "${GRAPHITE_VERSION}"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "com.microscaling.docker.dockerfile",
              "Value": "\"/Dockerfile\""
            },
            {
              "Key": "com.microscaling.license",
              "Value": "\"The Unlicense\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo \"export TZ=${TZ}\"                              \u003e /etc/enviroment \u0026\u0026   echo \"export BUILD_DATE=${BUILD_DATE}\"             \u003e\u003e /etc/enviroment \u0026\u0026   echo \"export BUILD_TYPE=${BUILD_TYPE}\"             \u003e\u003e /etc/enviroment \u0026\u0026   echo \"export GRAPHITE_VERSION=${GRAPHITE_VERSION}\" \u003e\u003e /etc/enviroment \u0026\u0026   apk update --quiet --no-cache \u0026\u0026   apk upgrade --quiet --no-cache \u0026\u0026   apk add --quiet --no-cache --virtual .build-deps     build-base git libffi-dev py${PYTHON_VERSION}-pip python${PYTHON_VERSION}-dev \u0026\u0026   apk add --quiet --no-cache     cairo curl mariadb-client nginx supervisor python${PYTHON_VERSION} py${PYTHON_VERSION}-cairo py${PYTHON_VERSION}-parsing py-mysqldb \u0026\u0026   pip${PYTHON_VERSION} install     --quiet --trusted-host http://d.pypi.python.org/simple --upgrade pip \u0026\u0026   mkdir /src \u0026\u0026   git clone https://github.com/graphite-project/whisper.git      /src/whisper      \u0026\u0026   git clone https://github.com/graphite-project/carbon.git       /src/carbon       \u0026\u0026   git clone https://github.com/graphite-project/graphite-web.git /src/graphite-web \u0026\u0026   if [ \"${BUILD_TYPE}\" == \"stable\" ] ; then     for i in whisper carbon graphite-web ; do       echo \"switch to stable Tag ${GRAPHITE_VERSION} for $i\" \u0026\u0026       cd /src/$i ;       git checkout tags/${GRAPHITE_VERSION} 2\u003e /dev/null ;     done ;   fi \u0026\u0026   if [[ \"${PYTHON_VERSION}\" = 3 ]] ; then      sed -i 's|^python-memcached|# python-memcached|g' /src/graphite-web/requirements.txt;   fi \u0026\u0026   cd /src/graphite-web \u0026\u0026  pip${PYTHON_VERSION} install --quiet --requirement requirements.txt \u0026\u0026   cd /src/whisper      \u0026\u0026  python -W ignore::UserWarning:distutils.dist setup.py install --quiet \u003e /dev/null \u0026\u0026   cd /src/carbon       \u0026\u0026  python -W ignore::UserWarning:distutils.dist setup.py install --quiet \u003e /dev/null \u0026\u0026   cd /src/graphite-web \u0026\u0026  python -W ignore::UserWarning:distutils.dist setup.py install --quiet \u003e /dev/null \u0026\u0026   mv /opt/graphite/conf/graphite.wsgi.example /opt/graphite/webapp/graphite/graphite_wsgi.py \u0026\u0026   mv /src/carbon/lib/carbon/tests/data/conf-directory/storage-aggregation.conf /opt/graphite/conf/storage-aggregation.conf-DIST \u0026\u0026   mv /src/carbon/lib/carbon/tests/data/conf-directory/storage-schemas.conf /opt/graphite/conf/storage-schemas.conf-DIST \u0026\u0026   apk del --quiet .build-deps \u0026\u0026   rm -rf     /src     /tmp/*     /root/.cache     /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/srv"
          ]
        },
        {
          "Health": {
            "Interval": 5000000000,
            "Retries": 12,
            "Test": [
              "CMD-SHELL",
              "curl --silent --fail http://localhost:8080 || exit 1"
            ],
            "Timeout": 2000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/init/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}