{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            },
            {
              "Key": "BUILD_DATE",
              "Value": "\"2018-04-04\""
            },
            {
              "Key": "ICINGAWEB_VERSION",
              "Value": "\"2.5.1\""
            },
            {
              "Key": "INSTALL_THEMES",
              "Value": "\"true\""
            },
            {
              "Key": "INSTALL_MODULES",
              "Value": "\"true\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"1804\""
            },
            {
              "Key": "maintainer",
              "Value": "\"Bodo Schulz \u003cbodo@boone-schulz.de\u003e\""
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "${BUILD_DATE}"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"IcingaWeb2 Docker Image\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Inofficial IcingaWeb2 Docker Image\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://www.icinga.org/\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/bodsch/docker-icingaweb2\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Bodo Schulz\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "${ICINGAWEB_VERSION}"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "com.microscaling.docker.dockerfile",
              "Value": "\"/Dockerfile\""
            },
            {
              "Key": "com.microscaling.license",
              "Value": "\"GNU General Public License v3.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build",
            "/build"
          ]
        },
        {
          "CmdLine": [
            "apk update --quiet --no-cache \u0026\u0026   apk upgrade --quiet --no-cache \u0026\u0026   apk add --quiet --no-cache --virtual .build-deps     git shadow \u0026\u0026   apk add --quiet --no-cache     bash     ca-certificates     curl     jq     mysql-client     nginx     netcat-openbsd     openssl     php7     php7-ctype     php7-fpm     php7-pdo_mysql     php7-openssl     php7-intl     php7-ldap     php7-gettext     php7-json     php7-mbstring     php7-curl     php7-iconv     php7-session     php7-xml     php7-dom     php7-soap     php7-posix     pwgen     yajl-tools \u0026\u0026   [ -e /usr/bin/php ]     || ln -s /usr/bin/php7      /usr/bin/php \u0026\u0026   [ -e /usr/bin/php-fpm ] || ln -s /usr/sbin/php-fpm7 /usr/bin/php-fpm \u0026\u0026   mkdir /usr/share/webapps \u0026\u0026   echo \"install 'icingaweb2' v${ICINGAWEB_VERSION}\" \u0026\u0026   curl     --silent     --location     --retry 3     --cacert /etc/ssl/certs/ca-certificates.crt     \"https://github.com/Icinga/icingaweb2/archive/v${ICINGAWEB_VERSION}.tar.gz\"     | gunzip     | tar x -C /usr/share/webapps/ \u0026\u0026   ln -s /usr/share/webapps/icingaweb2-${ICINGAWEB_VERSION} /usr/share/webapps/icingaweb2 \u0026\u0026   ln -s /usr/share/webapps/icingaweb2/bin/icingacli /usr/bin/icingacli \u0026\u0026   mkdir -p /var/log/icingaweb2 \u0026\u0026   mkdir -p /etc/icingaweb2/modules \u0026\u0026   mkdir -p /etc/icingaweb2/enabledModules \u0026\u0026   /build/install_modules.sh \u0026\u0026   /build/install_themes.sh \u0026\u0026   /usr/bin/icingacli module disable setup \u0026\u0026   /usr/bin/icingacli module enable monitoring \u0026\u0026   /usr/bin/icingacli module enable translation \u0026\u0026   /usr/bin/icingacli module enable doc \u0026\u0026   mkdir /run/nginx \u0026\u0026   mkdir /var/log/php-fpm \u0026\u0026   apk del --quiet .build-deps \u0026\u0026   rm -rf     /build     /tmp/*     /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs/",
            "/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/etc/icingaweb2"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/icingaweb2"
          ]
        },
        {
          "Health": {
            "Interval": 5000000000,
            "Retries": 12,
            "Test": [
              "CMD-SHELL",
              "curl --silent --fail http://localhost/health || exit 1"
            ],
            "Timeout": 2000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/init/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}