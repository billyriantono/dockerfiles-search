MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Env:
    - Key: TERM
      Value: xterm
    - Key: TZ
      Value: '''Europe/Berlin'''
    - Key: BUILD_DATE
      Value: '"2018-01-24"'
    - Key: BUILD_TYPE
      Value: '"stable"'
    - Key: CERT_SERVICE_VERSION
      Value: '"0.16.5"'
    - Key: ICINGA_VERSION
      Value: '"2.8.0-r0"'
    Name: env
  - Name: expose
    Ports:
    - "5665"
    - "8080"
  - Labels:
    - Key: version
      Value: '"1801"'
    - Key: maintainer
      Value: '"Bodo Schulz <bodo@boone-schulz.de>"'
    - Key: org.label-schema.build-date
      Value: ${BUILD_DATE}
    - Key: org.label-schema.name
      Value: '"Icinga2 Docker Image"'
    - Key: org.label-schema.description
      Value: '"Inofficial Icinga2 Docker Image"'
    - Key: org.label-schema.url
      Value: '"https://www.icinga.org/"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/bodsch/docker-icinga2"'
    - Key: org.label-schema.vendor
      Value: '"Bodo Schulz"'
    - Key: org.label-schema.version
      Value: ${ICINGA_VERSION}
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: com.microscaling.docker.dockerfile
      Value: '"/Dockerfile"'
    - Key: com.microscaling.license
      Value: '"GNU General Public License v3.0"'
    Name: label
  - CmdLine:
    - 'apk update --quiet --no-cache  &&   apk upgrade --quiet --no-cache &&   apk
      add --quiet --no-cache --virtual .build-deps     libffi-dev g++ make git openssl-dev
      ruby-dev &&   apk add --quiet --no-cache     bash bind-tools curl expect fping
      inotify-tools icinga2 jq mailx monitoring-plugins mariadb-client netcat-openbsd
      nmap nrpe-plugin openssl pwgen ruby rsync ssmtp tzdata unzip &&   cp /etc/icinga2/conf.d.example/*
      /etc/icinga2/conf.d/ &&   ln -s /usr/lib/nagios/plugins/* /usr/lib/monitoring-plugins/
      &&   /usr/sbin/icinga2 feature enable command checker mainlog notification &&   mkdir
      -p /etc/icinga2/objects.d &&   mkdir -p /run/icinga2/cmd &&   mkdir -p /etc/icinga2/zones.d/global-templates
      &&   mkdir -p /etc/icinga2/zones.d/director-global &&   cp /etc/icinga2/zones.conf
      /etc/icinga2/zones.conf-distributed &&   chmod u+s /bin/busybox &&   echo ''gem:
      --no-document'' >> /etc/gemrc &&   gem install --quiet --no-rdoc --no-ri     io-console
      bundler &&   cd /tmp &&   if [ "${BUILD_TYPE}" == "local" ] ; then     echo
      "use local sources" &&     mv /ruby-icinga-cert-service /tmp/ &&     cd ruby-icinga-cert-service
      ;   else     git clone https://github.com/bodsch/ruby-icinga-cert-service.git
      &&     cd ruby-icinga-cert-service &&     if [ "${BUILD_TYPE}" == "stable" ]
      ; then       echo "switch to stable Tag v${CERT_SERVICE_VERSION}" &&       git
      checkout tags/${CERT_SERVICE_VERSION} 2> /dev/null ;     elif [ "${BUILD_TYPE}"
      == "development" ] ; then       echo "switch to development Branch" &&       git
      checkout development 2> /dev/null ;     fi   fi &&   bundle install --quiet
      &&   gem uninstall --quiet     io-console bundler &&   cp -ar /tmp/ruby-icinga-cert-service/bin
      /usr/local/ &&   cp -ar /tmp/ruby-icinga-cert-service/lib /usr/local/ &&   apk
      del --quiet --purge .build-deps &&   rm -rf     /tmp/*     /var/cache/apk/*     /root/.gem     /root/.bundle'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs/
    - /
  - Name: workdir
    Path: '"/etc/icinga2"'
  - Name: volume
    Volumes:
    - /etc/icinga2
    - /var/lib/icinga2
  - Health:
      Interval: 5000000000
      Retries: 12
      StartPeriod: 10000000000
      Test:
      - CMD-SHELL
      - ps ax | grep -v grep | grep -c "/usr/lib/icinga2/sbin/icinga2" || exit 1
      Timeout: 2000000000
    Name: healthcheck
  - CmdLine:
    - /init/run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
