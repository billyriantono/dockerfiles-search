{
  "MetaArgs": [
    {
      "Key": "PACKER_VERSION",
      "DefaultValue": "1.4.0",
      "ProvidedValue": null,
      "Value": "1.4.0"
    },
    {
      "Key": "DOCKER_VERSION",
      "DefaultValue": "18.09.6",
      "ProvidedValue": null,
      "Value": "18.09.6"
    }
  ],
  "Stages": [
    {
      "Name": "packer",
      "BaseName": "hashicorp/packer:${PACKER_VERSION}",
      "SourceCode": "FROM hashicorp/packer:${PACKER_VERSION} as packer",
      "Platform": "",
      "As": "packer",
      "From": {
        "Image": "hashicorp/packer:${PACKER_VERSION}"
      },
      "Commands": null
    },
    {
      "Name": "docker",
      "BaseName": "docker:${DOCKER_VERSION}",
      "SourceCode": "FROM docker:${DOCKER_VERSION} as docker",
      "Platform": "",
      "As": "docker",
      "From": {
        "Image": "docker:${DOCKER_VERSION}"
      },
      "Commands": null
    },
    {
      "Name": "",
      "BaseName": "python:3.6.8-slim-stretch",
      "SourceCode": "FROM python:3.6.8-slim-stretch",
      "Platform": "",
      "From": {
        "Image": "python:3.6.8-slim-stretch"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "com.kaliop.vendor",
              "Value": "Kaliop"
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_VERSION",
              "Value": "2.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MOLECULE_VERSION",
              "Value": "2.20.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TESTINFRA_VERSION",
              "Value": "3.0.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "1.24.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOCALE",
              "Value": "fr_FR.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y       curl       gcc       git       zip       jq       locales       wget       linkchecker       python-apt   \u0026\u0026 rm -f /var/cache/apt/archives/*.deb   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure locales \u0026\u0026     echo $LOCALE' UTF-8'\u003e\u003e /etc/locale.gen \u0026\u0026     locale-gen $LOCALE \u0026\u0026     /usr/sbin/update-locale LANG=$LOCALE"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "$LOCALE"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "$LOCALE"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip3 install       ansible==${ANSIBLE_VERSION}       docker-py       molecule==${MOLECULE_VERSION}       testinfra==${TESTINFRA_VERSION}     \u0026\u0026 rm -Rf /root/.cache/pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "docker",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/docker",
            "/usr/local/bin/docker"
          ]
        },
        {
          "Chown": "",
          "From": "packer",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/packer",
            "/usr/local/bin/packer"
          ]
        },
        {
          "CmdLine": [
            "curl         -L \"https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)\"         -o /usr/local/bin/docker-compose   \u0026\u0026 chmod a+x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}