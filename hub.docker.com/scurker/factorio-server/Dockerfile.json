{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "frolvlad/alpine-glibc:alpine-3.9",
      "SourceCode": "FROM frolvlad/alpine-glibc:alpine-3.9",
      "Platform": "",
      "From": {
        "Image": "frolvlad/alpine-glibc:alpine-3.9"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"https://github.com/dtandersen/docker_factorio_server\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "USER",
          "Name": "arg",
          "Value": "factorio"
        },
        {
          "Key": "GROUP",
          "Name": "arg",
          "Value": "factorio"
        },
        {
          "Key": "PUID",
          "Name": "arg",
          "Value": "845"
        },
        {
          "Key": "PGID",
          "Name": "arg",
          "Value": "845"
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "34197"
            },
            {
              "Key": "RCON_PORT",
              "Value": "27015"
            },
            {
              "Key": "VERSION",
              "Value": "0.16.51"
            },
            {
              "Key": "SHA1",
              "Value": "127e7ff484ab263b13615d6114013ce0a66ac929"
            },
            {
              "Key": "SAVES",
              "Value": "/factorio/saves"
            },
            {
              "Key": "CONFIG",
              "Value": "/factorio/config"
            },
            {
              "Key": "MODS",
              "Value": "/factorio/mods"
            },
            {
              "Key": "SCENARIOS",
              "Value": "/factorio/scenarios"
            },
            {
              "Key": "SCRIPTOUTPUT",
              "Value": "/factorio/script-output"
            },
            {
              "Key": "PUID",
              "Value": "$PUID"
            },
            {
              "Key": "PGID",
              "Value": "$PGID"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /opt /factorio \u0026\u0026     apk add --update --no-cache pwgen su-exec binutils gettext libintl shadow \u0026\u0026     apk add --update --no-cache --virtual .build-deps curl \u0026\u0026     curl -sSL https://www.factorio.com/get-download/$VERSION/headless/linux64         -o /tmp/factorio_headless_x64_$VERSION.tar.xz \u0026\u0026     echo \"$SHA1  /tmp/factorio_headless_x64_$VERSION.tar.xz\" | sha1sum -c \u0026\u0026     tar xf /tmp/factorio_headless_x64_$VERSION.tar.xz --directory /opt \u0026\u0026     chmod ugo=rwx /opt/factorio \u0026\u0026     rm /tmp/factorio_headless_x64_$VERSION.tar.xz \u0026\u0026     ln -s $SAVES /opt/factorio/saves \u0026\u0026     ln -s $MODS /opt/factorio/mods \u0026\u0026     ln -s $SCENARIOS /opt/factorio/scenarios \u0026\u0026     ln -s $SCRIPTOUTPUT /opt/factorio/script-output \u0026\u0026     apk del .build-deps \u0026\u0026     addgroup -g $PGID -S $GROUP \u0026\u0026     adduser -u $PUID -G $GROUP -s /bin/sh -SDH $USER \u0026\u0026     chown -R $USER:$GROUP /opt/factorio /factorio"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/factorio"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "$PORT/udp",
            "$RCON_PORT/tcp"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}