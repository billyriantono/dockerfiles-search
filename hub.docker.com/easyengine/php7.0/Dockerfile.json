{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.0-fpm",
      "SourceCode": "FROM php:7.0-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.0-fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Mriyam Tamuli \u003cmbtamuli@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0.0-rc1\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"EasyEngine\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.name",
              "Value": "\"php\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\timagemagick \t\tless \t\tlibc-client-dev \t\tlibfreetype6-dev \t\tlibjpeg-dev \t\tlibjpeg62-turbo-dev \t\tlibkrb5-dev \t\tlibmagickwand-dev \t\tlibmcrypt-dev \t\tlibmemcached-dev \t\tlibxml2-dev \t\tlibpng-dev \t\tlibzip-dev \t\tmariadb-client \t\tmsmtp \t\tunzip \t\tvim \t\tzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install imagick memcached; \tprintf \"\\n\" | pecl install mcrypt-1.0.1; \tprintf \"\\n\" | pecl install redis; \tdocker-php-ext-configure gd --enable-gd-native-ttf --with-freetype-dir=/usr/include/freetype2 --with-png-dir=/usr/include --with-jpeg-dir=/usr/include; \tdocker-php-ext-configure zip --with-libzip; \tdocker-php-ext-configure --with-php-config=/usr/local/bin/php-config; \tdocker-php-ext-configure imap --with-kerberos --with-imap-ssl; \tdocker-php-ext-install gd imap mcrypt mysqli opcache soap zip; \tdocker-php-ext-install exif; \tdocker-php-ext-enable imagick mcrypt redis; \tdocker-php-ext-install bcmath; \techo \"extension=memcached.so\" \u003e\u003e /usr/local/etc/php/conf.d/memcached.ini; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \trm -rf /var/lib/apt/lists/*;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src/php/ext; \tcd /usr/src/php/ext/; \tcurl -sSL -o php7.zip https://github.com/websupport-sk/pecl-memcache/archive/NON_BLOCKING_IO_php7.zip; \tunzip php7.zip; \tmv pecl-memcache-NON_BLOCKING_IO_php7 memcache; \trm -rf /tmp/pecl-memcache-php7 /usr/src/php/ext/php7.zip; \tdocker-php-ext-configure memcache --with-php-config=/usr/local/bin/php-config;   docker-php-ext-install memcache;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/lib/php/extensions/no-debug-non-zts-20170718 \u0026\u0026 \tln -s /usr/local/lib/php/extensions/no-debug-non-zts-20151012/opcache.so /usr/local/lib/php/extensions/no-debug-non-zts-20170718/opcache.so \u0026\u0026 \tln -s /usr/local/lib/php/extensions/no-debug-non-zts-20151012/mcrypt.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/mycrypt.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install libsodium-dev -y \u0026\u0026 pecl install -f libsodium"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL \"https://getcomposer.org/installer\" | php \t\t\u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O \"https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\" \t\t\u0026\u0026 chmod +x wp-cli.phar \t\t\u0026\u0026 mv wp-cli.phar /usr/local/bin/wp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/wp-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'path: /var/www/htdocs'; \t\t} \u003e /etc/wp-cli/config.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"host postfix\\ntls off\\nfrom ee4@easyengine.io\" \u003e /etc/msmtprc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://download.newrelic.com/php_agent/release/newrelic-php5-9.4.1.250-linux.tar.gz | tar -C /tmp -zx \u0026\u0026 export NR_INSTALL_USE_CP_NOT_LN=1 \u0026\u0026 export NR_INSTALL_SILENT=1 \u0026\u0026 /tmp/newrelic-php5-*/newrelic-install install \u0026\u0026 rm -rf /tmp/newrelic-php5-* /tmp/nrinstall*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NR_PORT",
              "Value": "/run/newrelic/newrelic.sock"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/php; \tchown -R www-data: /var/log/php; \trm /usr/local/etc/php-fpm.d/*; \tmv /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "easyengine.conf",
            "/usr/local/etc/php-fpm.d/easyengine.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "expose_off.ini",
            "/usr/local/etc/php/conf.d/expose_off.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bashrc",
            "/root/.bashrc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bashrc",
            "/var/www/.bashrc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "newrelic.ini",
            "/usr/local/etc/php/conf.d/newrelic.ini"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/htdocs"
        },
        {
          "Name": "user",
          "User": "www-data"
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}