{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "yobasystems/alpine:3.8-amd64",
      "SourceCode": "FROM yobasystems/alpine:3.8-amd64",
      "Platform": "",
      "From": {
        "Image": "yobasystems/alpine:3.8-amd64"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Dominic Taylor \u003cdominic@yobasystems.co.uk\u003e\" architecture=\"AMD64/x86_64\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "syncthing-version",
              "Value": "\"1.0.1\""
            },
            {
              "Key": "alpine-version",
              "Value": "\"3.9.0\""
            },
            {
              "Key": "date",
              "Value": "\"11-Feb-2019\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "SYNCTHING_VERSION",
              "Value": "1.0.1"
            },
            {
              "Key": "SYNCTHING_USERID",
              "Value": "1027"
            },
            {
              "Key": "GOSU_VERSION",
              "Value": "1.11"
            },
            {
              "Key": "STNOUPGRADE",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026    apk -U add openssl gnupg \u0026\u0026     echo \"Getting GPG keys for gosu and Syncthing\" \u0026\u0026     gpg-agent --daemon \u0026\u0026     gpg --quiet --keyserver hkp://keyserver.ubuntu.com:80  --recv-keys 37C84554E7E0A261E4F76E1ED26E6ED000654A3E B42F6819007F00F88E364FD4036A9C25BF357DD4 \u0026\u0026     echo \"Getting gosu and its signature\" \u0026\u0026     wget -q https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc \u0026\u0026     wget -q https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64 \u0026\u0026    echo \"Checking gosu signature\" \u0026\u0026     gpg --quiet --verify gosu-amd64.asc \u0026\u0026     echo \"Installing gosu\" \u0026\u0026     chmod +x gosu-amd64 \u0026\u0026 mv gosu-amd64 /bin/gosu \u0026\u0026     echo \"Getting Syncthing and its signature\" \u0026\u0026     wget -q https://github.com/syncthing/syncthing/releases/download/v${SYNCTHING_VERSION}/sha1sum.txt.asc \u0026\u0026     wget -q https://github.com/syncthing/syncthing/releases/download/v${SYNCTHING_VERSION}/syncthing-linux-amd64-v${SYNCTHING_VERSION}.tar.gz \u0026\u0026     echo \"Checking gosu sha1 sum signature\" \u0026\u0026     gpg --quiet --verify sha1sum.txt.asc \u0026\u0026     echo \"Checking gosu sha1 checksum\" \u0026\u0026     grep syncthing-linux-amd64-v${SYNCTHING_VERSION}.tar.gz sha1sum.txt.asc | sha1sum -c - \u0026\u0026     echo \"Installing syncthing\" \u0026\u0026     tar -xzf syncthing-linux-amd64-v${SYNCTHING_VERSION}.tar.gz syncthing-linux-amd64-v${SYNCTHING_VERSION}/syncthing \u0026\u0026     mv syncthing-linux-amd64-v${SYNCTHING_VERSION}/syncthing /bin/ \u0026\u0026     echo \"Cleaning up\" \u0026\u0026     rm -rf /tmp/* \u0026\u0026     rm -rf /root/* \u0026\u0026     apk del gnupg openssl \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/start.sh",
            "/srv/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /srv/start.sh \u0026\u0026 mkdir -p /srv/config /srv/data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "21027/udp",
            "22000",
            "8384"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/srv/data",
            "/srv/config"
          ]
        },
        {
          "CmdLine": [
            "/srv/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}