{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "yobasystems/alpine:3.9.0-amd64",
      "SourceCode": "FROM yobasystems/alpine:3.9.0-amd64",
      "Platform": "",
      "From": {
        "Image": "yobasystems/alpine:3.9.0-amd64"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Dominic Taylor \u003cdominic@yobasystems.co.uk\u003e\" architecture=\"AMD64/x86_64\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "alpine-version",
              "Value": "\"3.9.0\""
            },
            {
              "Key": "caddy-version",
              "Value": "\"0.11.2\""
            },
            {
              "Key": "build",
              "Value": "\"05-Feb-2019\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "plugins",
          "Name": "arg",
          "Value": "http.git,http.cache,http.expires,http.minify,http.realip"
        },
        {
          "CmdLine": [
            "apk add --no-cache openssh-client git libcap tar php7 php7-fpm curl     php7-curl php7-gd php7-zip php7-iconv php7-sqlite3 php7-mysqli php7-pgsql php7-json php7-phar php7-openssl php7-zlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error --fail --location       --header \"Accept: application/tar+gzip, application/x-gzip, application/octet-stream\"       \"https://getcomposer.org/installer\"     | php -- --install-dir=/usr/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"clear_env = no\" \u003e\u003e /etc/php7/php-fpm.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --show-error --fail --location --header \"Accept: application/tar+gzip, application/x-gzip, application/octet-stream\" -o -       \"https://caddyserver.com/download/linux/amd64?plugins=${plugins}\u0026license=personal\u0026telemetry=off\"     | tar --no-same-owner -C /usr/bin/ -xz caddy  \u0026\u0026 chmod 0755 /usr/bin/caddy  \u0026\u0026 addgroup -S caddy  \u0026\u0026 adduser -D -S -s /sbin/nologin -G caddy caddy  \u0026\u0026 setcap cap_net_bind_service=+ep `readlink -f /usr/bin/caddy`  \u0026\u0026 /usr/bin/caddy -version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "2015",
            "443",
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/srv"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/Caddyfile",
            "/etc/Caddyfile"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/index.php",
            "/srv/index.php"
          ]
        },
        {
          "CmdLine": [
            "chown -R caddy:caddy /srv /var/log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "caddy"
        },
        {
          "CmdLine": [
            "/usr/bin/caddy"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--conf",
            "/etc/Caddyfile"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}