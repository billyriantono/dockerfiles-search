{
  "MetaArgs": [
    {
      "Key": "version",
      "DefaultValue": "3.7",
      "ProvidedValue": null,
      "Value": "3.7"
    }
  ],
  "Stages": [
    {
      "Name": "base_3.5",
      "BaseName": "minidocks/base:3.5",
      "SourceCode": "FROM minidocks/base:3.5 AS base_3.5",
      "Platform": "",
      "As": "base_3.5",
      "From": {
        "Image": "minidocks/base:3.5"
      },
      "Commands": null
    },
    {
      "Name": "base_3.6",
      "BaseName": "minidocks/base:3.9",
      "SourceCode": "FROM minidocks/base:3.9 AS base_3.6",
      "Platform": "",
      "As": "base_3.6",
      "From": {
        "Image": "minidocks/base:3.9"
      },
      "Commands": null
    },
    {
      "Name": "base_2.7",
      "BaseName": "minidocks/base:3.10",
      "SourceCode": "FROM minidocks/base:3.10 AS base_2.7",
      "Platform": "",
      "As": "base_2.7",
      "From": {
        "Image": "minidocks/base:3.10"
      },
      "Commands": null
    },
    {
      "Name": "base_3.7",
      "BaseName": "minidocks/base:3.10",
      "SourceCode": "FROM minidocks/base:3.10 AS base_3.7",
      "Platform": "",
      "As": "base_3.7",
      "From": {
        "Image": "minidocks/base:3.10"
      },
      "Commands": null
    },
    {
      "Name": "latest",
      "BaseName": "base_$version",
      "SourceCode": "FROM base_$version AS latest",
      "Platform": "",
      "As": "latest",
      "From": {
        "Image": "base_$version"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Martin Hasoň \u003cmartin.hason@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PIP_NO_COMPILE",
              "Value": "1"
            },
            {
              "Key": "PIP_CACHE_DIR",
              "Value": "/pip-cache"
            },
            {
              "Key": "CLEAN",
              "Value": "\"$CLEAN:\\$PIP_CACHE_DIR/:pyclean\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "Key": "version",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "if [ \"${version%%.*}\" = 2 ]; then apk -U add python2 py2-pip; else apk -U add python3; fi \u0026\u0026 clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if [ \"${version%%.*}\" = 3 ]; then         ln -s /usr/bin/python3 /usr/bin/python;         ln -s /usr/bin/pip3 /usr/bin/pip;         ln -s /usr/bin/easy_install-$version /usr/bin/easy_install;         ln -s /usr/bin/idle3 /usr/bin/idle;         ln -s /usr/bin/pydoc3 /usr/bin/pydoc;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir \"$PIP_CACHE_DIR\" \u0026\u0026 chmod a+rwx \"$PIP_CACHE_DIR\"     \u0026\u0026 pip install -U pip pipenv wheel \u0026\u0026 if [ \"${version%%.*}\" = 3 ]; then pip install flit; fi     \u0026\u0026 clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    },
    {
      "Name": "uwsgi",
      "BaseName": "latest",
      "SourceCode": "FROM latest AS uwsgi",
      "Platform": "",
      "As": "uwsgi",
      "From": {
        "Stage": {
          "Named": "latest",
          "Index": 4
        }
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Martin Hasoň \u003cmartin.hason@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk --update --no-cache add nginx         uwsgi         uwsgi-alarm_curl         uwsgi-cache         uwsgi-carbon         uwsgi-cgi         uwsgi-cheaper_backlog2         uwsgi-cheaper_busyness         uwsgi-corerouter         uwsgi-curl_cron         uwsgi-dumbloop         uwsgi-dummy         uwsgi-echo         uwsgi-emperor_amqp         uwsgi-emperor_pg         uwsgi-emperor_zeromq         uwsgi-fastrouter         uwsgi-forkptyrouter         uwsgi-geoip         uwsgi-gevent         uwsgi-gevent3         uwsgi-graylog2         uwsgi-http         uwsgi-legion_cache_fetch         uwsgi-logcrypto         uwsgi-logfile         uwsgi-logpipe         uwsgi-logsocket         uwsgi-logzmq         uwsgi-lua         uwsgi-msgpack         uwsgi-nagios         uwsgi-notfound         uwsgi-pam         uwsgi-ping         uwsgi-pty         uwsgi-python3         uwsgi-rawrouter         uwsgi-redislog         uwsgi-router_basicauth         uwsgi-router_cache         uwsgi-router_expires         uwsgi-router_hash         uwsgi-router_http         uwsgi-router_memcached         uwsgi-router_metrics         uwsgi-router_radius         uwsgi-router_redirect         uwsgi-router_redis         uwsgi-router_rewrite         uwsgi-router_static         uwsgi-router_uwsgi         uwsgi-rpc         uwsgi-rrdtool         uwsgi-rsyslog         uwsgi-signal         uwsgi-spooler         uwsgi-sslrouter         uwsgi-stats_pusher_file         uwsgi-stats_pusher_socket         uwsgi-stats_pusher_statsd         uwsgi-symcall         uwsgi-syslog         uwsgi-transformation_chunked         uwsgi-transformation_gzip         uwsgi-transformation_offload         uwsgi-transformation_template         uwsgi-transformation_tofile         uwsgi-tuntap         uwsgi-ugreen         uwsgi-webdav         uwsgi-xslt         uwsgi-zabbix         uwsgi-zergpool     \u0026\u0026 clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs-uwsgi",
            "/"
          ]
        },
        {
          "CmdLine": [
            "uwsgi",
            "--ini",
            "/etc/uwsgi/uwsgi.ini"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "latest",
      "SourceCode": "FROM latest",
      "Platform": "",
      "From": {
        "Stage": {
          "Named": "latest",
          "Index": 4
        }
      },
      "Commands": null
    }
  ]
}