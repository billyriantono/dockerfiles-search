{
  "MetaArgs": [
    {
      "Key": "version",
      "DefaultValue": "8.3.1",
      "ProvidedValue": null,
      "Value": "8.3.1"
    },
    {
      "Key": "qpdf_version",
      "DefaultValue": "8.4.2",
      "ProvidedValue": null,
      "Value": "8.4.2"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "minidocks/base:build",
      "SourceCode": "FROM minidocks/base:build",
      "Platform": "",
      "From": {
        "Image": "minidocks/base:build"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk --update add python3-dev py-defusedxml py-lxml libjpeg-turbo-dev zlib-dev libxml2-dev libxslt-dev py3-pybind11@edge"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "qpdf_version",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "wget -O /tmp/qpdf.tar.gz \"https://github.com/qpdf/qpdf/releases/download/release-qpdf-${qpdf_version}/qpdf-${qpdf_version}.tar.gz\"     \u0026\u0026 tar -xzf /tmp/qpdf.tar.gz -C /tmp \u0026\u0026 cd /tmp/qpdf*     \u0026\u0026 ./configure --disable-static \u0026\u0026 make \u0026\u0026 make install \u0026\u0026 mkdir -p /tmp/build \u0026\u0026 make DESTDIR=/tmp/build install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/build/usr \u0026\u0026 pip3 install --install-option=\"--prefix=/tmp/build/usr\" pikepdf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/build/usr \u0026\u0026 pip3 install --install-option=\"--prefix=/tmp/build/usr\" pycryptodome"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "find \"/tmp/build\" -type f -name \\*.pyc -o -name \\*.pyo -o -name __pycache__ | xargs rm -rf"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "minidocks/img2pdf",
      "SourceCode": "FROM minidocks/img2pdf",
      "Platform": "",
      "From": {
        "Image": "minidocks/img2pdf"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Martin Haso≈à \u003cmartin.hason@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "version",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "OCRMYPDF_VERSION",
              "Value": "$version"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/build",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "apk -U add py-cffi py3-defusedxml py3-lxml py3-reportlab libjpeg-turbo zlib pngquant jbig2enc@edge \u0026\u0026 clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install ocrmypdf==$OCRMYPDF_VERSION \u0026\u0026 clean     \u0026\u0026 patch \"$(pip show ocrmypdf | grep Location | cut -d' ' -f2-)/ocrmypdf/pdfa.py\" /root/pdfa.py.patch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ocrmypdf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}