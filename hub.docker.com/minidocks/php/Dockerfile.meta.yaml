MetaArgs:
- DefaultValue: "7.3"
  Key: version
  ProvidedValue: null
  Value: "7.3"
- DefaultValue: "7"
  Key: major
  ProvidedValue: null
  Value: "7"
- DefaultValue: 1.8.6
  Key: composer_version
  ProvidedValue: null
  Value: 1.8.6
- DefaultValue: 1.25.0
  Key: blackfire_version
  ProvidedValue: null
  Value: 1.25.0
Stages:
- As: v7.0
  BaseName: minidocks/base:3.5
  Commands: null
  From:
    Image: minidocks/base:3.5
  Name: v7.0
  Platform: ""
  SourceCode: FROM minidocks/base:3.5 AS v7.0
- As: v7.1
  BaseName: minidocks/base:3.7
  Commands: null
  From:
    Image: minidocks/base:3.7
  Name: v7.1
  Platform: ""
  SourceCode: FROM minidocks/base:3.7 AS v7.1
- As: v5.6
  BaseName: minidocks/base:3.8
  Commands: null
  From:
    Image: minidocks/base:3.8
  Name: v5.6
  Platform: ""
  SourceCode: FROM minidocks/base:3.8 AS v5.6
- As: v7.2
  BaseName: minidocks/base:3.9
  Commands: null
  From:
    Image: minidocks/base:3.9
  Name: v7.2
  Platform: ""
  SourceCode: FROM minidocks/base:3.9 AS v7.2
- As: v7.3
  BaseName: minidocks/base:3.10
  Commands: null
  From:
    Image: minidocks/base:3.10
  Name: v7.3
  Platform: ""
  SourceCode: FROM minidocks/base:3.10 AS v7.3
- As: base
  BaseName: v$version
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Martin Haso≈à <martin.hason@gmail.com>"'
    Name: label
  - Key: version
    Name: arg
    Value: null
  - Key: major
    Name: arg
    Value: null
  - CmdLine:
    - addgroup -g 82 -S www-data && adduser -u 82 -S -s /bin/sh -G www-data www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - for module in ctype curl iconv json openssl pcntl phar posix; do modules="$modules
      php$major-$module"; done     && if [ "$version" = "5.6" ]; then modules="$modules
      php5-cli"; fi     && if [ "$version" != "5.6" ]; then modules="$modules php7-mbstring";
      fi     && if echo "7.0" | grep -q "$version"; then modules="$modules php7-zlib";
      fi     && if echo "5.6 7.0" | grep -qv "$version"; then modules="$modules php7-tokenizer";
      fi     && if echo "5.6 7.0 7.1" | grep -q "$version"; then modules="$modules
      php${major}-apcu"; else modules="$modules php7-pecl-apcu"; fi     && apk --update
      add "php$major" $modules && clean     && if [ ! -f /usr/bin/php ]; then ln -s
      "/usr/bin/php$major" /usr/bin/php; fi     && if [ ! -f /usr/bin/phpize ]; then
      ln -s "/usr/bin/phpize$major" /usr/bin/phpize; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://psysh.org/psysh && chmod +x psysh && mv psysh /usr/bin/psysh
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /etc/php$major
    - Key: PHP_ERROR_LOG
      Value: /dev/stderr.pipe
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    - Key: COMPOSER_HOME
      Value: /composer
    - Key: COMPOSER_CACHE_DIR
      Value: /composer-cache
    - Key: COMPOSER_HTACCESS_PROTECT
      Value: "0"
    - Key: COMPOSER_MEMORY_LIMIT
      Value: "-1"
    - Key: CLEAN
      Value: '"$CLEAN:\$COMPOSER_CACHE_DIR/"'
    Name: env
  - Key: composer_version
    Name: arg
    Value: null
  - CmdLine:
    - mkdir -p /var/www "$COMPOSER_HOME" "$COMPOSER_CACHE_DIR" && chown www-data:www-data
      /var/www "$COMPOSER_HOME" "$COMPOSER_CACHE_DIR" && chmod a+rwx "$COMPOSER_HOME"
      "$COMPOSER_CACHE_DIR"
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"     &&
      php composer-setup.php --install-dir=/usr/bin --filename=composer --version="$composer_version"     &&
      php -r "unlink('composer-setup.php');"     && packages="webuni/composer-yaml-plugin
      webuni/composer-neon-plugin"     && if echo "5.6 7.0" | grep -qv "$version";
      then packages="$packages localheinz/composer-normalize"; fi     && su-exec user
      composer global require $packages     && clean
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - rootfs
    - /
  - CmdLine:
    - psysh
    - -c
    - /etc/psysh
    Name: cmd
    PrependShell: false
  From:
    Image: v$version
  Name: base
  Platform: ""
  SourceCode: FROM v$version AS base
- As: latest
  BaseName: base
  Commands:
  - Key: version
    Name: arg
    Value: null
  - Key: major
    Name: arg
    Value: null
  - CmdLine:
    - for module in         bcmath         calendar         cgi         dom         exif         fpm         ftp         gd         gettext         gmp         ldap         opcache         pdo_mysql         pdo_pgsql         pdo_sqlite         soap         sockets         xml         xmlreader         xmlrpc         xsl         zip     ;
      do modules="$modules php${major}-$module"; done     && if [ "$version" = "5.6"
      ]; then modules="$modules php5-xdebug@35"; else modules="$modules php7-xdebug
      php7-mysqlnd php7-session"; fi     && if echo "5.6 7.0" | grep -qv "$version";
      then modules="$modules php7-redis php7-fileinfo php7-simplexml php7-xmlwriter";
      fi     && if echo "5.6 7.0 7.1" | grep -q "$version"; then modules="$modules
      php${major}-mcrypt"; else modules="$modules php7-pecl-mcrypt"; fi     && apk
      --update --force-broken-world add $modules     && if [ ! -f /usr/bin/php-fpm
      ]; then ln -s "/usr/sbin/php-fpm${major}" /usr/bin/php-fpm; fi     && clean
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXT_XDEBUG
      Value: "0"
    - Key: FPM_PID
      Value: run/php-fpm.pid
    - Key: FPM_DAEMONIZE
      Value: "no"
    - Key: FPM_ERROR_LOG
      Value: /dev/stderr.pipe
    - Key: FPM_WWW_ACCESS__LOG
      Value: /dev/stdout.pipe
    - Key: FPM_WWW_CATCH_WORKERS_OUTPUT
      Value: "yes"
    - Key: FPM_WWW_CLEAR_ENV
      Value: "no"
    - Key: FPM_WWW_GROUP
      Value: www-data
    - Key: FPM_WWW_LISTEN
      Value: '"[::]:9000"'
    - Key: FPM_WWW_USER
      Value: www-data
    - Key: FPM_WWW_SLOWLOG
      Value: /dev/stdout.pipe
    - Key: PHP_XDEBUG__REMOTE_ENABLE
      Value: "1"
    - Key: PHP_XDEBUG__REMOTE_HOST
      Value: 172.17.0.1
    - Key: PHP_XDEBUG__REMOTE_PORT
      Value: "9000"
    - Key: PHP_XDEBUG__REMOTE_CONNECT_BACK
      Value: "0"
    - Key: PHP_XDEBUG__IDEKEY
      Value: PHPSTORM
    Name: env
  - Key: blackfire_version
    Name: arg
    Value: null
  - CmdLine:
    - wget -O "/usr/lib/php${major}/modules/blackfire.so" https://packages.blackfire.io/binaries/blackfire-php/${blackfire_version}/blackfire-php-alpine_amd64-php-${version/./}.so     &&
      mkdir /var/run/blackfire     && chmod a+x /var/run/blackfire/ "/usr/lib/php${major}/modules/blackfire.so"     &&
      echo -e "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707"
      > "${PHP_INI_DIR}/conf.d/blackfire.ini"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  From:
    Stage:
      Index: 5
      Named: base
  Name: latest
  Platform: ""
  SourceCode: FROM base AS latest
- As: intl
  BaseName: latest
  Commands:
  - Key: major
    Name: arg
    Value: null
  - CmdLine:
    - apk --update --force-broken-world add "php${major}-intl" && clean
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 6
      Named: latest
  Name: intl
  Platform: ""
  SourceCode: FROM latest AS intl
- BaseName: latest
  Commands: null
  From:
    Stage:
      Index: 6
      Named: latest
  Name: ""
  Platform: ""
  SourceCode: FROM latest
