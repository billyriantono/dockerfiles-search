{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         build-essential         cmake         git         wget         libopenblas-dev         libboost-all-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         python-dev         python-numpy         python-pip         python-setuptools         python-scipy \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CAFFE_ROOT",
              "Value": "/opt/caffe"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $CAFFE_ROOT \u0026\u0026 cd $CAFFE_ROOT \u0026\u0026     git init \u0026\u0026 git remote add origin https://github.com/BVLC/caffe \u0026\u0026     git fetch origin pull/4163/head:pr4163 \u0026\u0026 git checkout pr4163"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$CAFFE_ROOT"
        },
        {
          "CmdLine": [
            "pip install --upgrade pip \u0026\u0026 cd python \u0026\u0026 for req in $(cat requirements.txt) pydot; do python -m pip install --no-cache $req; done \u0026\u0026 cd .. \u0026\u0026     mkdir build \u0026\u0026 cd build \u0026\u0026     cmake -DCPU_ONLY=1 -DBLAS=Open .. \u0026\u0026     make -j\"$(nproc)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python -m pip install --no-cache opencv-python dask toolz tqdm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYCAFFE_ROOT",
              "Value": "$CAFFE_ROOT/python"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "$PYCAFFE_ROOT:$PYTHONPATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"$CAFFE_ROOT/build/lib\" \u003e\u003e /etc/ld.so.conf.d/caffe.conf \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /code"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/code"
        },
        {
          "CmdLine": [
            "wget http://download.europe.naverlabs.com/Computer-Vision-CodeandModels/deep_retrieval.tgz \u0026\u0026     tar xf deep_retrieval.tgz         deep_retrieval/custom_layers.py         deep_retrieval/model.caffemodel         deep_retrieval/deploy_resnet101.prototxt         deep_retrieval/deploy_resnet101_normpython.prototxt \u0026\u0026     mv deep_retrieval net \u0026\u0026 mv net/custom_layers.py . \u0026\u0026 rm deep_retrieval.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install tornado flask-restful"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/code"
          ]
        },
        {
          "CmdLine": [
            "python"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "service.py"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}