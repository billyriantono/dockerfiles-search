MetaArgs: null
Stages:
- BaseName: debian:buster-slim
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"slothofanarchy1@gmail.com"'
    Name: label
  - Labels:
    - Key: org.label-schema.name
      Value: '"slothofanarchy/trump-label"'
    Name: label
  - Labels:
    - Key: org.label-schema.description
      Value: '"OSM dynamic label API server (extracts labels from osm.pbf)"'
    Name: label
  - Labels:
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/trump-fmi/trump-docker"'
    Name: label
  - Labels:
    - Key: org.label-schema.docker.cmd
      Value: '"docker run --name trump-label --network=trump-docker_default -v trump-docker_labels:/home/osm/labels
        --env-file=./label/env -itd slothofanarchy/trump-label"'
    Name: label
  - CmdLine:
    - apt update   && apt install -y -q --no-install-recommends apt-transport-https
      ca-certificates gnupg wget curl   && apt autoremove -y   && apt clean   && rm
      -rf rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update   && apt install -y -q --no-install-recommends     wget curl git
      sudo     golang g++ make cmake python libcairo2-dev protobuf-compiler libprotoc-dev
      libcgal-dev libcppunit-dev libjsoncpp-dev ttf-dejavu   && apt autoremove -y   &&
      apt clean   && rm -rf rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/include/jsoncpp/json/ /usr/include/json   && mkdir -p /usr/share/fonts/TTF/   &&
      ln -s /usr/share/fonts/truetype/ttf-dejavu/DejaVuSans.ttf /usr/share/fonts/TTF/DejaVuSansMono.ttf
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -mg users -s /bin/bash osm
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/osm
  - Name: user
    User: osm
  - CmdLine:
    - mkdir /home/osm/go
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/trump-fmi/modular_osm_label_server.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ./modular_osm_label_server
  - CmdLine:
    - 'echo ''[{"name" : "citynames", "path" : "/home/osm/labels/labels.osm.pbf.ce"}]''
      > default.json'
    Name: run
    PrependShell: true
  - CmdLine:
    - GOPATH=/home/osm/go go get -u github.com/trump-fmi/modular_osm_label_server
    Name: run
    PrependShell: true
  - CmdLine:
    - GOPATH=/home/osm/go go build
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --recursive https://github.com/krumpefp/label_pipeline.git /home/osm/label_pipeline
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/osm/label_pipeline
  - CmdLine:
    - ./install.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /home/osm/labels
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt purge -y python g++ make cmake libprotoc-dev libcppunit-dev   && apt autoremove
      -y   && apt clean   && rm -rf rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /usr/local/sbin/entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - update-labels.sh
    - /usr/local/bin/update-labels
  - CmdLine:
    - /usr/local/bin/update-labels
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /usr/local/sbin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: debian:buster-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:buster-slim
