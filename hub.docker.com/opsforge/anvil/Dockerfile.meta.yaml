MetaArgs: null
Stages:
- BaseName: opsforge/anvil:lite
  Commands:
  - Env:
    - Key: VAULTVER
      Value: '"1.1.2"'
    Name: env
  - Env:
    - Key: TFVER
      Value: '"0.11.14"'
    Name: env
  - Env:
    - Key: BOSHVER
      Value: '"5.5.1"'
    Name: env
  - Env:
    - Key: CONSULVER
      Value: '"1.5.1"'
    Name: env
  - Maintainer: opsforge.io
    Name: maintainer
  - Labels:
    - Key: type
      Value: '"full"'
    Name: label
  - Name: user
    User: root
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - CmdLine:
    - apt-get update &&     curl -fsSL https://get.docker.com | bash &&     apt-get
      clean &&     mkdir -p /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install boto3 &&     pip install docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     curl -LO https://github.com/kubernetes/kops/releases/download/$(curl
      -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name
      | cut -d '"' -f 4)/kops-linux-amd64 &&     chmod +x kops-linux-amd64 &&     mv
      kops-linux-amd64 /usr/local/bin/kops
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl
      -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      &&     chmod +x ./kubectl &&     mv ./kubectl /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     curl -LO https://releases.hashicorp.com/vault/${VAULTVER}/vault_${VAULTVER}_linux_amd64.zip
      &&     unzip vault_${VAULTVER}_linux_amd64.zip &&     chmod +x vault &&     mv
      vault /usr/local/bin/vault &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     curl -LO https://releases.hashicorp.com/terraform/${TFVER}/terraform_${TFVER}_linux_amd64.zip
      &&     unzip terraform_${TFVER}_linux_amd64.zip &&     chmod +x terraform &&     mv
      terraform /usr/local/bin/terraform &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     wget "https://releases.hashicorp.com/consul/${CONSULVER}/consul_${CONSULVER}_linux_amd64.zip"
      &&     unzip consul_* &&     chmod +x consul &&     mv consul /usr/local/bin/
      &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y golang &&     apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install nodejs npm -y &&     apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     curl -sSL https://rvm.io/mpapis.asc | gpg --import - &&     curl
      -sSL https://rvm.io/pkuczynski.asc | gpg --import - &&     curl -sSL https://get.rvm.io
      | bash -s stable --ruby &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     curl -L -o cf.deb "https://cli.run.pivotal.io/stable?release=debian64&source=github"
      &&     dpkg -i cf.deb &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     curl -LO https://github.com/pivotal-cf/om/releases/download/$(curl
      -s https://github.com/pivotal-cf/om/releases/latest | sed 's/^.*tag\///' | sed
      's/\".*$//')/om-linux &&     chmod +x om-linux &&     mv om-linux /usr/local/bin/om
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     curl -LO https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-${BOSHVER}-linux-amd64
      &&     chmod +x bosh-cli-${BOSHVER}-linux-amd64 &&     mv bosh-cli-${BOSHVER}-linux-amd64
      /usr/local/bin/bosh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     curl -LO https://github.com/concourse/concourse/releases/download/$(curl
      -s https://github.com/concourse/concourse/releases/latest | sed 's/^.*tag\///'
      | sed 's/\".*$//')/fly_linux_amd64 &&     chmod +x fly_linux_amd64 &&     mv
      fly_linux_amd64 /usr/local/bin/fly
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp
    Name: run
    PrependShell: true
  - Name: shell
    Shell:
    - /bin/zsh
    - -c
  - CmdLine:
    - /root/entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: opsforge/anvil:lite
  Name: ""
  Platform: ""
  SourceCode: FROM opsforge/anvil:lite
