{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "quay.io/fenicsproject/dev-env:latest",
      "SourceCode": "FROM quay.io/fenicsproject/dev-env:latest",
      "Platform": "",
      "From": {
        "Image": "quay.io/fenicsproject/dev-env:latest"
      },
      "Commands": [
        {
          "Maintainer": "fenics-project \u003cfenics-support@googlegroups.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "FENICS_PYTHON",
              "Value": "python3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOLFIN_VERSION",
              "Value": "\"2019.1.0.post0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MSHR_VERSION",
              "Value": "\"2019.1.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYPI_FENICS_VERSION",
              "Value": "\"\u003e=2019.1.0,\u003c2019.2.0\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "la.cpp.patch",
            "/tmp/la.cpp.patch"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -c \"PIP_NO_CACHE_DIR=off ${FENICS_PYTHON} -m pip install 'fenics${PYPI_FENICS_VERSION}' \u0026\u0026                   git clone https://bitbucket.org/fenics-project/dolfin.git \u0026\u0026                   cd dolfin \u0026\u0026                   git checkout ${DOLFIN_VERSION} \u0026\u0026                   patch python/src/la.cpp \u003c ../la.cpp.patch \u0026\u0026                   mkdir build \u0026\u0026                   cd build \u0026\u0026                   cmake ../ \u0026\u0026                   make \u0026\u0026                   make install \u0026\u0026                   mv /usr/local/share/dolfin/demo /tmp/demo \u0026\u0026                   mkdir -p /usr/local/share/dolfin/demo \u0026\u0026                   mv /tmp/demo /usr/local/share/dolfin/demo/cpp \u0026\u0026                   cd ../python \u0026\u0026                   PIP_NO_CACHE_DIR=off ${FENICS_PYTHON} -m pip install . \u0026\u0026                   cd demo \u0026\u0026                   python3 generate-demo-files.py \u0026\u0026                   mkdir -p /usr/local/share/dolfin/demo/python \u0026\u0026                   cp -r documented /usr/local/share/dolfin/demo/python \u0026\u0026                   cp -r undocumented /usr/local/share/dolfin/demo/python\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c  \"${FENICS_PYTHON} -m pip install meshio[all]\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c  \"cd /tmp/ \u0026\u0026                   git clone https://bitbucket.org/fenics-project/mshr.git \u0026\u0026                   cd mshr \u0026\u0026                   git checkout ${MSHR_VERSION} \u0026\u0026                   mkdir build \u0026\u0026                   cd build \u0026\u0026                   cmake ../ \u0026\u0026                   make \u0026\u0026                   make install \u0026\u0026                   cd ../python \u0026\u0026                   PIP_NO_CACHE_DIR=off ${FENICS_PYTHON} -m pip install . \u0026\u0026                   ldconfig \u0026\u0026                   rm -rf /tmp/*\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c \"cp -r /usr/local/share/dolfin/demo $FENICS_HOME/demo \u0026\u0026                   rm -rf /home/fenics/local \u0026\u0026                   rm -rf $FENICS_HOME/bin \u0026\u0026                   echo '' \u003e\u003e $FENICS_HOME/.profile\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "fenics"
        },
        {
          "CmdLine": [
            "/bin/bash -c \"mkdir -p /home/fenics/.local\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$FENICS_HOME"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "WELCOME",
            "$FENICS_HOME/WELCOME"
          ]
        },
        {
          "Name": "user",
          "User": "root"
        }
      ]
    }
  ]
}