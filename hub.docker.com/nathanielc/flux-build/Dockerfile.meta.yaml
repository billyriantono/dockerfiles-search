MetaArgs: null
Stages:
- BaseName: golang:1.12
  Commands:
  - CmdLine:
    - apt-get update &&     apt-get install --no-install-recommends -y     libtinfo5     ruby     ca-certificates
      curl file     build-essential cmake     autoconf automake autotools-dev libtool
      xutils-dev &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: RAGEL_VERSION
      Value: "6.10"
    Name: env
  - CmdLine:
    - curl http://www.colm.net/files/ragel/ragel-${RAGEL_VERSION}.tar.gz -O &&     tar
      -xzf ragel-${RAGEL_VERSION}.tar.gz &&     cd ragel-${RAGEL_VERSION}/ &&     ./configure
      --prefix=/usr/local &&     make &&     make install &&     cd .. && rm -rf ragel-${RAGEL_VERSION}*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/usr/local/bin:${PATH}"'
    Name: env
  - Env:
    - Key: FLATBUFFERS_VERSION
      Value: 1.11.0
    Name: env
  - CmdLine:
    - curl -LS https://github.com/google/flatbuffers/archive/v${FLATBUFFERS_VERSION}.tar.gz
      | gunzip -c | tar x &&     mkdir flatbuffers-${FLATBUFFERS_VERSION}/build &&     cd
      flatbuffers-${FLATBUFFERS_VERSION}/build &&     cmake -G "Unix Makefiles" ..
      &&     make && make install &&     cd ../.. && rm -rf flatbuffers-${FLATBUFFERS_VERSION}
    Name: run
    PrependShell: true
  - Env:
    - Key: SSL_VERSION
      Value: 1.0.2t
    Name: env
  - CmdLine:
    - curl https://www.openssl.org/source/openssl-$SSL_VERSION.tar.gz -O &&     tar
      -xzf openssl-$SSL_VERSION.tar.gz &&     cd openssl-$SSL_VERSION && ./config
      && make depend && make install &&     cd .. && rm -rf openssl-$SSL_VERSION*
    Name: run
    PrependShell: true
  - Env:
    - Key: OPENSSL_LIB_DIR
      Value: /usr/local/ssl/lib
    - Key: OPENSSL_INCLUDE_DIR
      Value: /usr/local/ssl/include
    - Key: OPENSSL_STATIC
      Value: "1"
    Name: env
  - CmdLine:
    - curl -SL http://releases.llvm.org/8.0.0/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz     |
      tar -xJC . &&     mv clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-18.04 clang_8.0.0
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/go/clang_8.0.0/bin:${PATH}"'
    - Key: LD_LIBRARY_PATH
      Value: '"/clang_8.0.0/lib:${LD_LIBRARY_PATH}"'
    - Key: CC
      Value: clang
    Name: env
  - Env:
    - Key: UNAME
      Value: builder
    Name: env
  - Key: UID
    Name: arg
    Value: "1000"
  - Key: GID
    Name: arg
    Value: "1000"
  - CmdLine:
    - groupadd -g $GID -o $UNAME
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -u $UID -g $UNAME -s /bin/bash $UNAME
    Name: run
    PrependShell: true
  - Name: user
    User: $UNAME
  - Env:
    - Key: HOME
      Value: /home/$UNAME
    Name: env
  - CmdLine:
    - curl https://sh.rustup.rs -sSf |     sh -s -- --default-toolchain stable -y
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$HOME/.cargo/bin:${PATH}"'
    Name: env
  - CmdLine:
    - rustup component add rustfmt
    Name: run
    PrependShell: true
  - CmdLine:
    - cargo install wasm-pack sccache
    Name: run
    PrependShell: true
  - CmdLine:
    - rustup component add rust-std --target wasm32-unknown-unknown
    Name: run
    PrependShell: true
  - Env:
    - Key: RUSTC_WRAPPER
      Value: sccache
    Name: env
  - Name: workdir
    Path: $HOME
  From:
    Image: golang:1.12
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.12
