{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Rui NI \u003cranqus@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_SOURCE_GIT_REPOSITORY",
              "Value": "https://github.com/golang/go.git"
            },
            {
              "Key": "GOLANG_SOURCE_GIT_BRANCH",
              "Value": "release-branch.go1.13"
            },
            {
              "Key": "GOLANG_SOURCE_GIT_BOOTSTRAP_BRANCH",
              "Value": "release-branch.go1.4"
            },
            {
              "Key": "TOR_SOURCE_GIT_REPOSITORY",
              "Value": "https://git.torproject.org/tor.git"
            },
            {
              "Key": "TOR_SOURCE_GIT_BRANCH",
              "Value": "tor-0.4.1.5"
            },
            {
              "Key": "OBFS4_SOURCE_GIT_REPOSITORY",
              "Value": "https://git.torproject.org/pluggable-transports/obfs4.git"
            },
            {
              "Key": "OBFS4_SOURCE_GIT_BRANCH",
              "Value": "obfs4proxy-0.0.11"
            },
            {
              "Key": "MEEK_SOURCE_GIT_REPOSITORY",
              "Value": "https://git.torproject.org/pluggable-transports/meek.git"
            },
            {
              "Key": "MEEK_SOURCE_GIT_BRANCH",
              "Value": "0.34"
            },
            {
              "Key": "TOR_CUSTOM_CONFIGURATION",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     cd / \u0026\u0026     echo \"res=0; for i in \\$(seq 0 29); do \\$@; res=\\$?; [ \\$res == 0 ] \u0026\u0026 exit \\$res || sleep 10; done; exit \\$res\" \u003e /try.sh \u0026\u0026 chmod +x /try.sh \u0026\u0026     echo \"cpid=\\\"\\\"; ret=0; i=0; for c in \\\"\\$@\\\"; do ( (((((eval \\$c; echo \\$? \u003e\u00263) | sed \\\"s/^/|-(\\$i) /\\\" \u003e\u00264) 2\u003e\u00261 | sed \\\"s/^/|-(\\$i)!/\\\" \u003e\u00262) 3\u003e\u00261) | (read xs; exit \\$xs))  4\u003e\u00261) \u0026 ppid=\\$!; cpid=\\\"\\$cpid \\$ppid\\\"; echo \\\"+ Child \\$i (PID \\$ppid): \\$c ...\\\"; i=\\$((i+1)); done; for c in \\$cpid; do wait \\$c; cret=\\$?; [ \\$cret -eq 0 ] \u0026\u0026 continue; echo \\\"* Child PID \\$c has failed.\\\" \u003e\u00262; ret=\\$cret; done; exit \\$ret\" \u003e /child.sh \u0026\u0026 chmod +x /child.sh \u0026\u0026     /try.sh apk add --no-cache --virtual .build-deps         bash         autoconf         automake         build-base         musl-dev         libevent-dev         openssl-dev         zlib-dev         git \u0026\u0026     mkdir /tmp/.build -p \u0026\u0026     ([ -z $HTTP_PROXY ] || git config --global http.proxy \"$HTTP_PROXY\") \u0026\u0026     ([ -z $HTTPS_PROXY ] || git config --global https.proxy \"$HTTPS_PROXY\") \u0026\u0026     /child.sh         \"/try.sh git clone --depth 1 --branch \\\"\\$GOLANG_SOURCE_GIT_BOOTSTRAP_BRANCH\\\" \\\"\\$GOLANG_SOURCE_GIT_REPOSITORY\\\" /tmp/.build/go1.4_bootstrap\"         \"/try.sh git clone --depth 1 --branch \\\"\\$GOLANG_SOURCE_GIT_BRANCH\\\" \\\"\\$GOLANG_SOURCE_GIT_REPOSITORY\\\" /tmp/.build/go\"         \"/try.sh git clone --depth 1 --branch \\\"\\$TOR_SOURCE_GIT_BRANCH\\\" \\\"\\$TOR_SOURCE_GIT_REPOSITORY\\\" /tmp/.build/tor\"         \"/try.sh git clone --depth 1 --branch \\\"\\$OBFS4_SOURCE_GIT_BRANCH\\\" \\\"\\$OBFS4_SOURCE_GIT_REPOSITORY\\\" /tmp/.build/obfs4\"         \"/try.sh git clone --depth 1 --branch \\\"\\$MEEK_SOURCE_GIT_BRANCH\\\" \\\"\\$MEEK_SOURCE_GIT_REPOSITORY\\\" /tmp/.build/meek\"     \u0026\u0026     /child.sh         \"cd /tmp/.build/tor \u0026\u0026 /try.sh ./autogen.sh \u0026\u0026 /try.sh ./configure --disable-asciidoc \u0026\u0026 /try.sh make \u0026\u0026 /try.sh make install\"         \"             cd /tmp/.build/go1.4_bootstrap/src \u0026\u0026 /try.sh ./make.bash \u0026\u0026             export GOROOT_BOOTSTRAP=/tmp/.build/go1.4_bootstrap \u0026\u0026             cd /tmp/.build/go/src \u0026\u0026 /try.sh ./make.bash \u0026\u0026             export GOROOT=/tmp/.build/go \u0026\u0026             export GOPATH=/tmp/.build \u0026\u0026             export PATH=\\$PATH:\\$GOROOT/bin \u0026\u0026             /child.sh                 \\\"cd /tmp/.build/obfs4 \u0026\u0026 /try.sh go build -o /usr/local/bin/obfs4proxy ./obfs4proxy\\\"                 \\\"cd /tmp/.build/meek/meek-client \u0026\u0026 /try.sh go get -d ./... \u0026\u0026 /try.sh go build -o /usr/local/bin/meek-client\\\"                 \\\"cd /tmp/.build/meek/meek-server \u0026\u0026 /try.sh go get -d ./... \u0026\u0026 /try.sh go build -o /usr/local/bin/meek-server\\\"         \"     \u0026\u0026     cd / \u0026\u0026     apk del .build-deps \u0026\u0026     /try.sh apk add --no-cache libgcc libevent openssl zlib ca-certificates \u0026\u0026     rm /try.sh /child.sh /tmp/* /tmp/.[!.]* /root/* /root/.[!.]* /var/cache/apk/* /var/log/* /usr/local/share/tor/* /usr/local/etc/tor/* -rf \u0026\u0026     adduser -D tor_user \u0026\u0026     tor --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "tor.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "torrc",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9050"
          ]
        },
        {
          "Name": "user",
          "User": "tor_user"
        },
        {
          "CmdLine": [
            "/tor.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}