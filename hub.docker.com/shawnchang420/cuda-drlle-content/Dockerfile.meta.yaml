MetaArgs: null
Stages:
- BaseName: lsiobase/alpine:3.10
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: build_version
      Value: '"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"sparklyballs"'
    Name: label
  - CmdLine:
    - "echo \"**** install packages ****\" &&  apk add --no-cache \tcurl \tfindutils
      \tjq \topenssl \tp7zip \tpython \trsync \ttar \ttransmission-cli \ttransmission-daemon
      \tunrar \tunzip &&  echo \"**** install third party themes ****\" &&  curl -o
      \t/tmp/combustion.zip -L \t\"https://github.com/Secretmapper/combustion/archive/release.zip\"
      &&  unzip \t/tmp/combustion.zip -d \t/ &&  mkdir -p /tmp/twctemp &&  TWCVERSION=$(curl
      -sX GET \"https://api.github.com/repos/ronggang/transmission-web-control/releases/latest\"
      \t| awk '/tag_name/{print $4;exit}' FS='[\"\"]') &&  curl -o \t/tmp/twc.tar.gz
      -L \t\"https://github.com/ronggang/transmission-web-control/archive/${TWCVERSION}.tar.gz\"
      &&  tar xf \t/tmp/twc.tar.gz -C \t/tmp/twctemp --strip-components=1 &&  mv /tmp/twctemp/src
      /transmission-web-control &&  mkdir -p /kettu &&  curl -o \t/tmp/kettu.tar.gz
      -L \t\"https://github.com/endor/kettu/archive/master.tar.gz\" &&  tar xf \t/tmp/kettu.tar.gz
      -C \t/kettu --strip-components=1 &&  echo \"**** cleanup ****\" &&  rm -rf \t/tmp/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - LOCALE.md
    - /tmp/
  - CmdLine:
    - ALPINE_GLIBC_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases/download"
      &&     ALPINE_GLIBC_PACKAGE_VERSION="2.29-r0" &&     ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     mkdir -p /tmp &&     mkdir -p /var/cache/apk &&     apk add --no-cache
      --virtual=.build-dependencies wget ca-certificates &&     apk add --no-cache
      parallel &&     wget "https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub"          -O
      "/etc/apk/keys/sgerrand.rsa.pub" &&     wget "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"          "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"          "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&     apk add --no-cache         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&     cat /tmp/LOCALE.md | parallel "echo generate locale {}; /usr/glibc-compat/bin/localedef
      --force --inputfile {} --charmap UTF-8 {}.UTF-8;" &&     apk del .build-dependencies
      &&     rm "/etc/apk/keys/sgerrand.rsa.pub" &&     rm "/root/.wget-hsts" &&     rm
      "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"        "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"        "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"/usr/lib:/opt/calibre/lib"'
    - Key: PATH
      Value: '"$PATH:/opt/calibre"'
    - Key: LC_ALL
      Value: '"C"'
    - Key: CALIBRE_INSTALLER_SOURCE_CODE_URL
      Value: '"https://raw.githubusercontent.com/kovidgoyal/calibre/master/setup/linux-installer.py"'
    Name: env
  - CmdLine:
    - apk update &&     apk add --no-cache --upgrade         bash         ca-certificates         gcc         libxcomposite         mesa-gl         python         qt5-qtbase-x11         xdg-utils         xz         wget
      &&     wget -O- ${CALIBRE_INSTALLER_SOURCE_CODE_URL} |       python -c       "import
      sys;        main=lambda:sys.stderr.write('Download failed\n');        exec(sys.stdin.read());        main(install_dir='/opt',
      isolated=True)" &&     rm -rf /tmp/calibre-installer-cache &&     apk del --purge
      $PKG_DEV                     $PKG_IMAGES_DEV &&     mkdir -p $APP_HOME/app &&     rm
      -rf /tmp &&     rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - Name: expose
    Ports:
    - "51413"
    - "9091"
  - Name: volume
    Volumes:
    - /config
    - /downloads
    - /watch
  From:
    Image: lsiobase/alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM lsiobase/alpine:3.10
