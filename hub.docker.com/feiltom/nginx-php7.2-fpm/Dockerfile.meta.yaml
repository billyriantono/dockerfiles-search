MetaArgs: null
Stages:
- BaseName: php:7.2-fpm
  Commands:
  - Env:
    - Key: NGINX_VERSION
      Value: 1.15.7-1~stretch
    Name: env
  - Env:
    - Key: NJS_VERSION
      Value: 1.15.7.0.2.6-1~stretch
    Name: env
  - CmdLine:
    - apt-get update;apt-get -y install git zip zlib1g-dev libicu-dev libfreetype6-dev
      libjpeg62-turbo-dev libpng-dev g++ ca-certificates wget cron;apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');";
    Name: run
    PrependShell: true
  - CmdLine:
    - php composer-setup.php --install-dir=/bin --filename=composer;php -r "unlink('composer-setup.php');"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install intl gd pdo pdo_mysql exif zip
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests
      -y gnupg1 apt-transport-https ca-certificates \t&& \tNGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;
      \tfound=''; \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80
      \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching
      GPG key $NGINX_GPGKEY from $server\"; \t\tapt-key adv --keyserver \"$server\"
      --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes &&
      break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG
      key $NGINX_GPGKEY\" && exit 1; \tapt-get remove --purge --auto-remove -y gnupg1
      && rm -rf /var/lib/apt/lists/* \t&& dpkgArch=\"$(dpkg --print-architecture)\"
      \t&& nginxPackages=\" \t\tnginx=${NGINX_VERSION} \t\tnginx-module-xslt=${NGINX_VERSION}
      \t\tnginx-module-geoip=${NGINX_VERSION} \t\tnginx-module-image-filter=${NGINX_VERSION}
      \t\tnginx-module-njs=${NJS_VERSION} \t\" \t&& case \"$dpkgArch\" in \t\tamd64|i386)
      \t\t\techo \"deb https://nginx.org/packages/mainline/debian/ stretch nginx\"
      >> /etc/apt/sources.list.d/nginx.list \t\t\t&& apt-get update \t\t\t;; \t\t*)
      \t\t\techo \"deb-src https://nginx.org/packages/mainline/debian/ stretch nginx\"
      >> /etc/apt/sources.list.d/nginx.list \t\t\t\t\t\t&& tempDir=\"$(mktemp -d)\"
      \t\t\t&& chmod 777 \"$tempDir\" \t\t\t\t\t\t&& savedAptMark=\"$(apt-mark showmanual)\"
      \t\t\t\t\t\t&& apt-get update \t\t\t&& apt-get build-dep -y $nginxPackages \t\t\t&&
      ( \t\t\t\tcd \"$tempDir\" \t\t\t\t&& DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"
      \t\t\t\t\tapt-get source --compile $nginxPackages \t\t\t) \t\t\t\t\t\t&& apt-mark
      showmanual | xargs apt-mark auto > /dev/null \t\t\t&& { [ -z \"$savedAptMark\"
      ] || apt-mark manual $savedAptMark; } \t\t\t\t\t\t&& ls -lAFh \"$tempDir\" \t\t\t&&
      ( cd \"$tempDir\" && dpkg-scanpackages . > Packages ) \t\t\t&& grep '^Package:
      ' \"$tempDir/Packages\" \t\t\t&& echo \"deb [ trusted=yes ] file://$tempDir
      ./\" > /etc/apt/sources.list.d/temp.list \t\t\t&& apt-get -o Acquire::GzipIndexes=false
      update \t\t\t;; \tesac \t\t&& apt-get install --no-install-recommends --no-install-suggests
      -y \t\t\t\t\t\t$nginxPackages \t\t\t\t\t\tgettext-base \t&& apt-get remove --purge
      --auto-remove -y apt-transport-https && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list
      \t\t&& if [ -n \"$tempDir\" ]; then \t\tapt-get purge -y --auto-remove \t\t&&
      rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \tfi"
    Name: run
    PrependShell: true
  - CmdLine:
    - "ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-entrypoint
    - /usr/local/bin/docker-php-entrypoint
  - Name: workdir
    Path: /var/apps/application
  - CmdLine:
    - mkdir /var/www/.ssh /var/www/.composer /var/www/ftp /var/www/ftp-extract /var/www/ftp-extract/tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - chown 33:33 /var/www/.ssh /var/www/.composer /var/www/ftp /var/www/ftp-extract
      /var/www/ftp-extract/tmp
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/conf.d/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.ini
    - /usr/local/etc/php/conf.d/symfony.ini
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/Europe/Paris /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Europe/Paris">/etc/timezone
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: stopsignal
    Signal: SIGTERM
  From:
    Image: php:7.2-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-fpm
