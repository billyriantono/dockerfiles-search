{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jupyter/pyspark-notebook",
      "SourceCode": "FROM jupyter/pyspark-notebook",
      "Platform": "",
      "From": {
        "Image": "jupyter/pyspark-notebook"
      },
      "Commands": [
        {
          "Maintainer": "Jupyter Project \u003cjupyter@googlegroups.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "R_LIBS_USER",
              "Value": "$SPARK_HOME/R/lib"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends     fonts-dejavu     gfortran     gcc \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main\" \u003e /etc/apt/sources.list.d/pgdg.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y     postgresql-9.4     libpq-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "postgres"
        },
        {
          "CmdLine": [
            "/etc/init.d/postgresql start \u0026\u0026    psql --command \"CREATE USER docker WITH SUPERUSER PASSWORD 'docker';\" \u0026\u0026    createdb -O docker docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"host all  all    0.0.0.0/0  md5\" \u003e\u003e /etc/postgresql/9.4/main/pg_hba.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"listen_addresses='*'\" \u003e\u003e /etc/postgresql/9.4/main/postgresql.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "CmdLine": [
            "conda config --add channels r \u0026\u0026     conda install --quiet --yes     'r-base=3.3.1 1'     'r-irkernel=0.7*'     'r-ggplot2=2.1*'     'r-rcurl=1.95*' \u0026\u0026 conda clean -tipsy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip --no-cache-dir install https://dist.apache.org/repos/dist/dev/incubator/toree/0.2.0/snapshots/dev1/toree-pip/toree-0.2.0.dev1.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install psycopg2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter toree install --user"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}