MetaArgs: null
Stages:
- BaseName: lsiobase/alpine:3.10
  Commands:
  - Key: VERSION
    Name: arg
    Value: '"0.9"'
  - Key: DATE
    Name: arg
    Value: '"2020/01/06"'
  - Labels:
    - Key: build_version
      Value: '"rtorrent-autodl version:- ${VERSION}, ${DATE}"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"tsubus"'
    Name: label
  - Env:
    - Key: HOME
      Value: '"/config/rtorrent-autodl"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - patches/
    - /defaults/patches/
  - Name: volume
    Volumes:
    - /config
    - /media
  - CmdLine:
    - "echo \"**** install nginx packages ****\" &&  apk update &&  apk add --no-cache
      \tapache2-utils \tgit \tlibressl2.7-libssl \tlogrotate \tnano \tnginx \topenssl
      \tphp7 \tphp7-fileinfo \tphp7-fpm \tphp7-json \tphp7-mbstring \tphp7-openssl
      \tphp7-session \tphp7-simplexml \tphp7-xml \tphp7-xmlwriter \tphp7-zlib &&  echo
      \"**** configure nginx ****\" &&  echo 'fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;'
      >> \t/etc/nginx/fastcgi_params &&  rm -f /etc/nginx/conf.d/default.conf &&  echo
      \"**** fix logrotate ****\" &&  sed -i \"s#/var/log/messages {}.*# #g\" /etc/logrotate.conf
      &&  sed -i 's#/usr/sbin/logrotate /etc/logrotate.conf#/usr/sbin/logrotate /etc/logrotate.conf
      -s /config/log/logrotate.status#g' \t/etc/periodic/daily/logrotate"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"**** install rutorrent packages ****\" &&  apk add --no-cache --virtual=build-dependencies
      \tg++ \tlibffi-dev \tmake \tmusl \topenssl-dev \tpython3-dev &&  echo \"****
      install runtime packages ****\" &&  apk add --no-cache --upgrade \tbind-tools
      \tcurl \tfcgi \tffmpeg \tgeoip \tgzip \tlibffi \tmediainfo \topenssl \tphp7
      \tphp7-curl \tphp7-cgi \tphp7-pear \tphp7-zip \tprocps \tpython3 \trtorrent
      \tscreen \tsox \tunrar \tzip &&  echo \"**** install pip packages ****\" &&
      \ pip3 install --no-cache-dir -U \tcfscrape \tcloudscraper &&  echo \"**** install
      rutorrent ****\" &&  RUTORRENT_RELEASE=$(curl -sX GET \"https://api.github.com/repos/Novik/ruTorrent/releases/latest\"
      \t| awk '/tag_name/{print $4;exit}' FS='[\"\"]') &&  curl -o  /tmp/rutorrent.tar.gz
      -L \t\"https://github.com/Novik/rutorrent/archive/${RUTORRENT_RELEASE}.tar.gz\"
      &&  mkdir -p \t/app/rutorrent \t/defaults/rutorrent-conf &&  tar xf  /tmp/rutorrent.tar.gz
      -C \t/app/rutorrent --strip-components=1 &&  mv /app/rutorrent/conf/* \t/defaults/rutorrent-conf/
      &&  rm -rf \t/defaults/rutorrent-conf/users &&  echo \"**** patch snoopy.inc
      for rss fix ****\" &&  cd /app/rutorrent/php &&  patch < /defaults/patches/snoopy.patch
      &&  echo \"**** install autodl-irssi rutorrent plugin ****\" &&  apk add --no-cache
      --upgrade     php7-sockets     git     zlib &&  git clone --depth 1 --single-branch
      \    https://github.com/autodl-community/autodl-rutorrent.git     /app/rutorrent/plugins/autodl-irssi
      &&  echo \"**** install irssi and autodl ****\" &&  apk add --no-cache --repository
      http://nl.alpinelinux.org/alpine/edge/main     perl     perl-dev     perl-utils
      \    perl-archive-zip     perl-net-ssleay     perl-html-parser     perl-digest-sha1
      \    perl-json     irssi     irssi-perl &&  apk add --no-cache --repository
      http://nl.alpinelinux.org/alpine/edge/community     perl-xml-libxml &&  PERL_MM_USE_DEFAULT=1
      cpan JSON::XS &&  git clone --depth 1 --single-branch      https://gitlab.com/tylagat/autodl-curl-sonarr.git
      \     /app/autodl-curl-sonarr &&  echo \"**** cleanup ****\" &&  apk del --purge
      \tbuild-dependencies &&  rm -rf \t/etc/nginx/conf.d/default.conf \t/root/.cache
      \t/tmp/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  From:
    Image: lsiobase/alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM lsiobase/alpine:3.10
