{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "Maintainer": "Jacopo De Stefani \u003cjdestefa@ulb.ac.be\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y --no-install-recommends       build-essential \t  ed \t  less \t  curl \t  git \t  emacs-nox \t  wget \t  ca-certificates \t  fonts-texgyre \t  locales \t  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -qsSLkO     https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-`uname -p`.sh \t\u0026\u0026 bash Miniconda3-latest-Linux-`uname -p`.sh -b \t\u0026\u0026 rm Miniconda3-latest-Linux-`uname -p`.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/root/miniconda3/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "python_version",
          "Name": "arg",
          "Value": "3.5"
        },
        {
          "CmdLine": [
            "conda install -y python=${python_version} \u0026\u0026 \tconda install -y     \th5py \tpandas \tpygpu==0.6.2 \tnose \tmkl \tsix \tpyyaml \tjupyter \tmatplotlib \tseaborn \tscikit-learn \t\u0026\u0026 conda clean --yes --tarballs --packages --source-cache \t\u0026\u0026 pip install --upgrade -I setuptools \t\u0026\u0026 pip install --upgrade \tkeras==2.0.5 \ttensorflow-gpu==1.2.0 \tplotly \tipyparallel \u0026\u0026 ipcluster nbextension enable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -c conda-forge -y blas \u0026\u0026 \tconda clean -yt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CUDA_HOME",
              "Value": "/usr/local/cuda-8.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$LD_LIBRARY_PATH:/usr/local/cuda-8.0/lib64:/usr/local/cuda-8.0/lib64/stubs"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/cuda-8.0/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -s /usr/local/cuda-8.0/lib64/stubs/libcuda.so /usr/local/cuda-8.0/lib64/stubs/libcuda.so.1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "cudnn-8.0-linux-x64-v5.1.tgz",
            "/root/cudnn-8.0-linux-x64-v5.1"
          ]
        },
        {
          "CmdLine": [
            "cd /root/cudnn-8.0-linux-x64-v5.1/cuda \u0026\u0026  \tcp lib64/* /usr/local/cuda/lib64/ \u0026\u0026  \tcp include/* /usr/local/cuda/include/ \u0026\u0026  \tcd ~ \u0026\u0026  \trm -rf cudnn-8.0-linux-x64-v5.1 \u0026\u0026  \tcd / RUN echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \t\u0026\u0026 locale-gen en_US.utf8 \t\u0026\u0026 /usr/sbin/update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "/docker_volume/samples",
            "/root/samples"
          ]
        }
      ]
    }
  ]
}