MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04
  Commands:
  - Maintainer: Jacopo De Stefani <jdestefa@ulb.ac.be>
    Name: maintainer
  - CmdLine:
    - "apt-get update   && apt-get install -y --no-install-recommends       build-essential
      \t  ed \t  less \t  curl \t  git \t  emacs-nox \t  wget \t  ca-certificates
      \t  fonts-texgyre \t  locales \t  && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -qsSLkO     https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-`uname
      -p`.sh \t&& bash Miniconda3-latest-Linux-`uname -p`.sh -b \t&& rm Miniconda3-latest-Linux-`uname
      -p`.sh"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /root/miniconda3/bin:$PATH
    Name: env
  - Key: python_version
    Name: arg
    Value: "3.5"
  - CmdLine:
    - "conda install -y python=${python_version} && \tconda install -y     \th5py
      \tpandas \tpygpu==0.6.2 \tnose \tmkl \tsix \tpyyaml \tjupyter \tmatplotlib \tseaborn
      \tscikit-learn \t&& conda clean --yes --tarballs --packages --source-cache \t&&
      pip install --upgrade -I setuptools \t&& pip install --upgrade \tkeras==2.0.5
      \ttensorflow-gpu==1.2.0 \tplotly \tipyparallel && ipcluster nbextension enable"
    Name: run
    PrependShell: true
  - CmdLine:
    - "conda install -c conda-forge -y blas && \tconda clean -yt"
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_HOME
      Value: /usr/local/cuda-8.0
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $LD_LIBRARY_PATH:/usr/local/cuda-8.0/lib64:/usr/local/cuda-8.0/lib64/stubs
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/cuda-8.0/bin
    Name: env
  - CmdLine:
    - ln -s /usr/local/cuda-8.0/lib64/stubs/libcuda.so /usr/local/cuda-8.0/lib64/stubs/libcuda.so.1
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - cudnn-8.0-linux-x64-v5.1.tgz
    - /root/cudnn-8.0-linux-x64-v5.1
  - CmdLine:
    - "cd /root/cudnn-8.0-linux-x64-v5.1/cuda &&  \tcp lib64/* /usr/local/cuda/lib64/
      &&  \tcp include/* /usr/local/cuda/include/ &&  \tcd ~ &&  \trm -rf cudnn-8.0-linux-x64-v5.1
      &&  \tcd / RUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \t&& locale-gen
      en_US.utf8 \t&& /usr/sbin/update-locale LANG=en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - /docker_volume/samples
    - /root/samples
  From:
    Image: nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04
