{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tensorflow/tensorflow:1.6.0-devel-gpu-py3",
      "SourceCode": "FROM tensorflow/tensorflow:1.6.0-devel-gpu-py3",
      "Platform": "",
      "From": {
        "Image": "tensorflow/tensorflow:1.6.0-devel-gpu-py3"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python3-tk protobuf-compiler python3-lxml git    \u0026\u0026 pip3 install Cython"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tensorflow/models"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/dcarnino/models.git /tensorflow/models"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/cocodataset/cocoapi.git     \u0026\u0026 cd cocoapi/PythonAPI     \u0026\u0026 python3 setup.py build_ext --inplace \t\u0026\u0026 rm -rf build     \u0026\u0026 cp -r pycocotools /tensorflow/models/research/     \u0026\u0026 cd ../../"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tensorflow/models/research"
        },
        {
          "CmdLine": [
            "sed -i '87d' object_detection/protos/ssd.proto     \u0026\u0026 sed -i -e \"168s/range(num_boundaries)/list(range(num_boundaries))/\" object_detection/utils/learning_schedules.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "protoc object_detection/protos/*.proto --python_out=."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --upgrade pip     \u0026\u0026 pip3 install --upgrade dask     \u0026\u0026 pip3 install pandas     \u0026\u0026 pip3 install Pillow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install tf-nightly-gpu==1.9.0.dev20180503"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 setup.py sdist     \u0026\u0026 (cd slim \u0026\u0026 python3 setup.py sdist)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "$PYTHONPATH:`pwd`:`pwd`/slim"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}