{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"kamil.bobrowski@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "OPENCV_VERSION",
          "Name": "arg",
          "Value": "3.3.1"
        },
        {
          "Key": "TENSORFLOW_VERSION",
          "Name": "arg",
          "Value": "1.3.0"
        },
        {
          "Key": "PYTORCH_LINK",
          "Name": "arg",
          "Value": "'http://download.pytorch.org/whl/cu80/torch-0.2.0.post3-cp35-cp35m-manylinux1_x86_64.whl'"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends \tbuild-essential \tcurl \tlibfreetype6-dev \tlibpng12-dev \tlibzmq3-dev \tpkg-config \tpython3 \tpython3-dev \trsync \tsoftware-properties-common \tunzip \t\u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     python-pip python3-pip     \u0026\u0026 pip2 install --upgrade pip     \u0026\u0026 pip3 install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install         Pillow         h5py         ipykernel         jupyter         matplotlib         numpy         pandas         scipy         sklearn         \u0026\u0026     python3 -m ipykernel.kernelspec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install     https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-${TENSORFLOW_VERSION}-cp35-cp35m-linux_x86_64.whl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \tapt-get install -y \tbuild-essential \tcmake \tgit \twget \tunzip \tyasm \tpkg-config \tlibswscale-dev \tlibtbb2 \tlibtbb-dev \tlibjpeg-dev \tlibpng-dev \tlibtiff-dev \tlibjasper-dev \tlibavformat-dev \tlibpq-dev \tlibgtk2.0-dev \t\u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \u0026\u0026 unzip ${OPENCV_VERSION}.zip \u0026\u0026 mkdir /opencv-${OPENCV_VERSION}/cmake_binary \u0026\u0026 cd /opencv-${OPENCV_VERSION}/cmake_binary \u0026\u0026 cmake -DBUILD_TIFF=ON   -DBUILD_opencv_java=OFF   -DWITH_CUDA=OFF   -DENABLE_AVX=ON   -DWITH_OPENGL=ON   -DWITH_OPENCL=ON   -DWITH_IPP=ON   -DWITH_TBB=ON   -DWITH_EIGEN=ON   -DWITH_V4L=ON   -DWITH_GTK=ON   -DWITH_GTK_2_X=ON   -DBUILD_TESTS=OFF   -DBUILD_PERF_TESTS=OFF   -DCMAKE_BUILD_TYPE=RELEASE   -DCMAKE_INSTALL_PREFIX=$(python3 -c \"import sys; print(sys.prefix)\")   -DPYTHON_EXECUTABLE=$(which python3)   -DPYTHON_INCLUDE_DIR=$(python3 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\")   -DPYTHON_PACKAGES_PATH=$(python3 -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\") .. \u0026\u0026 make install \u0026\u0026 rm /${OPENCV_VERSION}.zip \u0026\u0026 rm -r /opencv-${OPENCV_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install ${PYTORCH_LINK}     \u0026\u0026 pip3 install torchvision"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install keras"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         ffmpeg         libav-tools         python3-tk \t\u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir         scikit-image         sk-video"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}