{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "vipconsult/base:jessie",
      "SourceCode": "FROM vipconsult/base:jessie",
      "Platform": "",
      "From": {
        "Image": "vipconsult/base:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Vip Consult Solutions \u003cteam@vip-consult.solutions\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.11.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPS_VERSION",
              "Value": "1.11.33.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENSSL_VERSION",
              "Value": "1.1.0e"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install autotools-dev zlib1g-dev libpcre3 libpcre3-dev \u0026\u0026     apt-get build-dep nginx \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MODULE_DIR",
              "Value": "/usr/src/nginx-modules"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir ${MODULE_DIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src \u0026\u0026     wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     tar xzf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     rm -rf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026     cd /usr/src \u0026\u0026     wget ftp://ftp.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \u0026\u0026     tar xzf openssl-${OPENSSL_VERSION}.tar.gz \u0026\u0026     rm -rf openssl-${OPENSSL_VERSION}.tar.gz \u0026\u0026     cd ${MODULE_DIR} \u0026\u0026     wget --no-check-certificate https://github.com/pagespeed/ngx_pagespeed/archive/release-${NPS_VERSION}-beta.tar.gz \u0026\u0026     tar zxf release-${NPS_VERSION}-beta.tar.gz \u0026\u0026     rm -rf release-${NPS_VERSION}-beta.tar.gz \u0026\u0026     cd ngx_pagespeed-release-${NPS_VERSION}-beta/ \u0026\u0026     wget --no-check-certificate https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz \u0026\u0026     tar zxf ${NPS_VERSION}.tar.gz \u0026\u0026     rm -rf ${NPS_VERSION}.tar.gz \u0026\u0026     cd /usr/src/nginx-${NGINX_VERSION} \u0026\u0026     ./configure     --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --conf-path=/etc/nginx/nginx.conf     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --user=nobody --group=nogroup     --with-http_dav_module     --with-http_ssl_module     --with-http_v2_module     --with-http_realip_module     --with-http_flv_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_secure_link_module     --with-http_auth_request_module     --with-file-aio     --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-z,relro -Wl,--as-needed'     --with-ipv6     --with-sha1=/usr/include/openssl     --with-md5=/usr/include/openssl     --with-openssl=\"../openssl-${OPENSSL_VERSION}\"     --add-module=${MODULE_DIR}/ngx_pagespeed-release-${NPS_VERSION}-beta \u0026\u0026     cd /usr/src/nginx-${NGINX_VERSION} \u0026\u0026     make \u0026\u0026 make install \u0026\u0026     rm -rf /usr/src/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/nginx \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026     mkdir -p /var/log/nginx \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/nginx",
            "/var/cache/ngx_pagespeed"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /entrypoint.sh     \u0026\u0026 sed -i -e 's/\\r$//' /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nginx",
            "-c",
            "/home/http/default/main.conf",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}