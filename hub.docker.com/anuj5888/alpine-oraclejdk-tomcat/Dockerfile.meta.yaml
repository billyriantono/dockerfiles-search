MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Maintainer: Anuj Patel <anuj5888@gmail.com>
    Name: maintainer
  - Env:
    - Key: JAVA_VERSION_MAJOR
      Value: "8"
    - Key: JAVA_VERSION_MINOR
      Value: "102"
    - Key: JAVA_VERSION_BUILD
      Value: "14"
    - Key: JAVA_VERSION
      Value: 8u102
    - Key: JAVA_PACKAGE
      Value: jdk
    - Key: JAVA_JCE
      Value: unlimited
    - Key: JAVA_HOME
      Value: /opt/jdk
    - Key: PATH
      Value: ${PATH}:/opt/jdk/bin
    - Key: GLIBC_VERSION
      Value: 2.23-r3
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - 'apk upgrade --update &&     apk add --update libstdc++ curl ca-certificates
      bash &&     for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION};
      do curl -sSL https://github.com/andyshinn/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${pkg}.apk
      -o /tmp/${pkg}.apk; done &&     apk add --allow-untrusted /tmp/*.apk &&     rm
      -v /tmp/*.apk &&     ( /usr/glibc-compat/bin/localedef --force --inputfile POSIX
      --charmap UTF-8 C.UTF-8 || true ) &&     echo "export LANG=C.UTF-8" > /etc/profile.d/locale.sh
      &&     /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib &&     mkdir
      /tmp/dcevm &&     curl -L -o /tmp/dcevm/DCEVM-light-8u74-installer.jar "https://github.com/dcevm/dcevm/releases/download/light-jdk8u74%2B1/DCEVM-light-8u74-installer.jar"
      &&     mkdir /opt &&     curl -jksSLH "Cookie: oraclelicense=accept-securebackup-cookie"
      -o /tmp/java.tar.gz       http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz
      &&     curl -jksSLH "Cookie: oraclelicense=accept-securebackup-cookie" -o /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip       http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION_MAJOR}/jce_policy-${JAVA_VERSION_MAJOR}.zip
      &&     gunzip /tmp/java.tar.gz &&     tar -C /opt -xf /tmp/java.tar &&     ln
      -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk &&     cd
      /tmp/dcevm &&     unzip DCEVM-light-8u74-installer.jar &&     mkdir -p /opt/jdk/jre/lib/amd64/dcevm
      &&     cp linux_amd64_compiler2/product/libjvm.so /opt/jdk/jre/lib/amd64/dcevm/libjvm.so
      &&     if [ "${JAVA_JCE}" == "unlimited" ]; then echo "Installing Unlimited
      JCE policy" &&       curl -jksSLH "Cookie: oraclelicense=accept-securebackup-cookie"
      -o /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip         http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION_MAJOR}/jce_policy-${JAVA_VERSION_MAJOR}.zip
      &&       cd /tmp && unzip /tmp/jce_policy-${JAVA_VERSION_MAJOR}.zip &&       cp
      -v /tmp/UnlimitedJCEPolicyJDK8/*.jar /opt/jdk/jre/lib/security/;     fi &&     sed
      -i s/#networkaddress.cache.ttl=-1/networkaddress.cache.ttl=30/ $JAVA_HOME/jre/lib/security/java.security
      &&     apk del curl glibc-i18n &&     rm -rf /opt/jdk/*src.zip            /opt/jdk/lib/missioncontrol            /opt/jdk/lib/visualvm            /opt/jdk/lib/*javafx*            /opt/jdk/jre/plugin            /opt/jdk/jre/bin/javaws            /opt/jdk/jre/bin/jjs            /opt/jdk/jre/bin/keytool            /opt/jdk/jre/bin/orbd            /opt/jdk/jre/bin/pack200            /opt/jdk/jre/bin/policytool            /opt/jdk/jre/bin/rmid            /opt/jdk/jre/bin/rmiregistry            /opt/jdk/jre/bin/servertool            /opt/jdk/jre/bin/tnameserv            /opt/jdk/jre/bin/unpack200            /opt/jdk/jre/lib/javaws.jar            /opt/jdk/jre/lib/deploy*            /opt/jdk/jre/lib/desktop            /opt/jdk/jre/lib/*javafx*            /opt/jdk/jre/lib/*jfx*            /opt/jdk/jre/lib/amd64/libdecora_sse.so            /opt/jdk/jre/lib/amd64/libprism_*.so            /opt/jdk/jre/lib/amd64/libfxplugins.so            /opt/jdk/jre/lib/amd64/libglass.so            /opt/jdk/jre/lib/amd64/libgstreamer-lite.so            /opt/jdk/jre/lib/amd64/libjavafx*.so            /opt/jdk/jre/lib/amd64/libjfx*.so            /opt/jdk/jre/lib/ext/jfxrt.jar            /opt/jdk/jre/lib/ext/nashorn.jar            /opt/jdk/jre/lib/oblique-fonts            /opt/jdk/jre/lib/plugin.jar            /tmp/*
      /var/cache/apk/* &&     echo ''hosts: files mdns4_minimal [NOTFOUND=return]
      dns mdns4'' >> /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - Env:
    - Key: CATALINA_HOME
      Value: /usr/local/tomcat
    Name: env
  - Env:
    - Key: PATH
      Value: $CATALINA_HOME/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$CATALINA_HOME"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $CATALINA_HOME
  - Env:
    - Key: TOMCAT_NATIVE_LIBDIR
      Value: $CATALINA_HOME/native-jni-lib
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR
    Name: env
  - CmdLine:
    - apk add --no-cache gnupg
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& for key in \t\t05AB33110949707C93A279E3D3EFE6B686867BA6 \t\t07E48665A34DCAFAE522E5E6266191C37C037D42
      \t\t47309207D818FFD8DCD3F83F1931D684307A10A5 \t\t541FBE7D8F78B25E055DDEE13C370389288584E7
      \t\t61B832AC2F1C5A90F0F9B00A1C506407564C17A3 \t\t713DA88BE50911535FE716F5208B0AB1D63011C7
      \t\t79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED \t\t9BA44C2621385CB966EBA586F72C284D731FABEE
      \t\tA27677289986DB50844682F8ACB77FC2E86E29AC \t\tA9C5DF4D22E99998D9875A5110C01C5A2F6059E7
      \t\tDCFD35E0BF8CA7344752DE8B6FB21E8933C60243 \t\tF3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE
      \t\tF7DA48BB64BCB84ECBA7EE6935CD23C10D498E23 \t; do \t\tgpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$key\"; \tdone"
    Name: run
    PrependShell: true
  - Env:
    - Key: TOMCAT_MAJOR
      Value: "8"
    Name: env
  - Env:
    - Key: TOMCAT_VERSION
      Value: 8.5.4
    Name: env
  - Env:
    - Key: TOMCAT_TGZ_URL
      Value: https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz
    Name: env
  - CmdLine:
    - "set -x \t\t&& apk add --no-cache --virtual .fetch-deps \t\tca-certificates
      \t\ttar \t\topenssl \t&& wget -O tomcat.tar.gz \"$TOMCAT_TGZ_URL\" \t&& wget
      -O tomcat.tar.gz.asc \"$TOMCAT_TGZ_URL.asc\" \t&& gpg --batch --verify tomcat.tar.gz.asc
      tomcat.tar.gz \t&& tar -xvf tomcat.tar.gz --strip-components=1 \t&& rm bin/*.bat
      \t&& rm tomcat.tar.gz* \t\t&& nativeBuildDir=\"$(mktemp -d)\" \t&& tar -xvf
      bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 \t&& apk
      add --no-cache --virtual .native-build-deps \t\tapr-dev \t\tgcc \t\tlibc-dev
      \t\tmake \t\topenssl-dev \t&& ( \t\texport CATALINA_HOME=\"$PWD\" \t\t&& cd
      \"$nativeBuildDir/native\" \t\t&& ./configure \t\t\t--libdir=\"$TOMCAT_NATIVE_LIBDIR\"
      \t\t\t--prefix=\"$CATALINA_HOME\" \t\t\t--with-apr=\"$(which apr-1-config)\"
      \t\t\t--with-java-home=\"$JAVA_HOME\" \t\t\t--with-ssl=yes \t\t&& make -j$(getconf
      _NPROCESSORS_ONLN) \t\t&& make install \t) \t&& runDeps=\"$( \t\tscanelf --needed
      --nobanner --recursive \"$TOMCAT_NATIVE_LIBDIR\" \t\t\t| awk '{ gsub(/,/, \"\\nso:\",
      $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info --installed
      \t\t\t| sort -u \t)\" \t&& apk add --virtual .tomcat-native-rundeps $runDeps
      \t&& apk del .fetch-deps .native-build-deps \t&& rm -rf \"$nativeBuildDir\"
      \t&& rm bin/tomcat-native.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -e \t&& nativeLines=\"$(catalina.sh configtest 2>&1)\" \t&& nativeLines=\"$(echo
      \"$nativeLines\" | grep 'Apache Tomcat Native')\" \t&& nativeLines=\"$(echo
      \"$nativeLines\" | sort -u)\" \t&& if ! echo \"$nativeLines\" | grep 'INFO:
      Loaded APR based Apache Tomcat Native library' >&2; then \t\techo >&2 \"$nativeLines\";
      \t\texit 1; \tfi"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -e \t&& echo \"alias ll='ls -la'\" >> /root/.profile \t&& echo \"alias
      l='ls -lart'\" >> /root/.profile \t&& echo 'export PS1=\"[\\[\\e[1;31m\\]\\t
      \\[\\e[1;32m\\]\\w\\[\\e[0m\\]]$ \"' >> /root/.profile \t&& chmod +x /root/.profile
      \t&& cp /root/.profile /root/.bashrc \t&& cp /root/.profile /root/.ashrc"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - startup.sh
    - ;
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - tail
    - -f
    - /dev/null
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
