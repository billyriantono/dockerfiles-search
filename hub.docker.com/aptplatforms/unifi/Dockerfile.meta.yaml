MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Chris Cosby <chris.cosby@aptplatforms.com>"'
    Name: label
  - Key: UNIFI_SDN_VERSION
    Name: arg
    Value: 5.11.50
  - CmdLine:
    - ':  && echo "###    Alpine Linux :: UPGRADE"  && apk update  && apk upgrade
      --purge  && echo "###    Alpine Linux :: UniFi SDN support"  && apk add curl
      libc6-compat nss openjdk8-jre-base mongodb tini  && echo "###    Alpine Linux
      :: CLEANUP"  && rm -rf /var/cache/apk/*'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - CmdLine:
    - ':  && echo "### UniFi SDN $UNIFI_SDN_VERSION :: INSTALL"  && rm -rf /usr/lib/unifi  &&
      mkdir -p /usr/lib  && curl -sL -o /tmp/UniFi.unix.zip http://www.ubnt.com/downloads/unifi/$UNIFI_SDN_VERSION/UniFi.unix.zip  &&
      unzip -q /tmp/UniFi.unix.zip -d /usr/lib  && ln -s ./UniFi /usr/lib/unifi  &&
      rm -rf /tmp/UniFi.unix.zip  && :  && echo "### UniFi SDN $UNIFI_SDN_VERSION
      :: SETUP(MongoDB)"  && rm -rf /usr/lib/unifi/bin/mongod  && ln -s `which mongod`
      /usr/lib/unifi/bin/mongod  && :  && echo "### UniFi SDN $UNIFI_SDN_VERSION ::
      SETUP(LOGS)"  && mkdir -p /usr/lib/unifi/logs  && rm -f /usr/lib/unifi/logs/server.log  &&
      ln -s /proc/self/fd/1 /usr/lib/unifi/logs/server.log  && :  && chmod 00555 /docker-entrypoint.sh'
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/tini
    - -v
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /docker-entrypoint.sh
    Name: cmd
    PrependShell: false
  - Name: workdir
    Path: /usr/lib/unifi
  - Name: volume
    Volumes:
    - /usr/lib/unifi/data
  - Name: expose
    Ports:
    - 3478/udp
    - 443/tcp
    - 80/tcp
    - 8080/tcp
    - 8443/tcp
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
