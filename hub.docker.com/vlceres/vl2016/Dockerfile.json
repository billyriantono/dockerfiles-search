{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "from ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Maintainer": "Naohiro Manago \u003cmanago.naohiro@chiba-u.jp\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            },
            {
              "Key": "PYTHONIOENCODING",
              "Value": "UTF-8"
            },
            {
              "Key": "PATH",
              "Value": "/usr/local/anaconda3/bin:.:/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update --fix-missing \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y vim wget bzip2 curl grep sed dpkg     ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1     git mercurial subversion npm ttf-freefont \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/nodejs /usr/bin/node"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g configurable-http-proxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:'` \u0026\u0026     curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" \u003e tini.deb \u0026\u0026     dpkg -i tini.deb \u0026\u0026     rm tini.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet https://repo.continuum.io/archive/Anaconda3-4.1.1-Linux-x86_64.sh -O ~/anaconda.sh \u0026\u0026     /bin/bash ~/anaconda.sh -b -p /usr/local/anaconda3 \u0026\u0026     rm ~/anaconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda update -y pip ipython jupyter jupyter_core jupyter_console jupyter_client ipywidgets"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -y basemap netcdf4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install jupyter_contrib_nbextensions jupyter-js-widgets-nbextension jupyter_nbextensions_configurator jupyterhub images2gif"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "custom.js",
            "/usr/local/anaconda3/lib/python3.5/site-packages/notebook/static/custom/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "custom.css",
            "/usr/local/anaconda3/lib/python3.5/site-packages/notebook/static/custom/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "style.min.css",
            "/usr/local/anaconda3/lib/python3.5/site-packages/notebook/static/style/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "__init__.py",
            "/usr/local/anaconda3/lib/python3.5/site-packages/images2gif/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "images2gif.py",
            "/usr/local/anaconda3/lib/python3.5/site-packages/images2gif/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/"
          ]
        },
        {
          "CmdLine": [
            "jupyter contrib nbextension install --user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension enable --py --sys-prefix widgetsnbextension"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl http://www.cr.chiba-u.jp/~kuze-lab/temporary/VL2016.tar.bz2 | tar -xjC /root/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "exercise_main.js",
            "/root/.local/share/jupyter/nbextensions/exercise/main.js"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "exercise2_main.js",
            "/root/.local/share/jupyter/nbextensions/exercise2/main.js"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "exercise2_main.css",
            "/root/.local/share/jupyter/nbextensions/exercise2/main.css"
          ]
        },
        {
          "CmdLine": [
            "mkdir /root/.jupyter/nbconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "notebook.json",
            "/root/.jupyter/nbconfig/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tree.json",
            "/root/.jupyter/nbconfig/"
          ]
        },
        {
          "CmdLine": [
            "ipython profile create"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.InlineBackend.rc = {'image.cmap':'gray'}\" \u003e\u003e/root/.ipython/profile_default/ipython_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/VL2016"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook",
            "--no-browser"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}