MetaArgs: null
Stages:
- BaseName: clojure
  Commands:
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update --fix-missing
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y vim
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install maven -y
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | sudo bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - node -v
    Name: run
    PrependShell: true
  - CmdLine:
    - npm -v
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install build-essential chrpath libssl-dev libxft-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install libfreetype6 libfreetype6-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install libfontconfig1 libfontconfig1-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/Medium/phantomjs/releases/download/v2.1.1/phantomjs-2.1.1-linux-x86_64.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mv phantomjs-2.1.1-linux-x86_64 /usr/local/share
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo ln -sf /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - phantomjs --version
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://releases.hashicorp.com/terraform/0.11.8/terraform_0.11.8_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip terraform_0.11.8_linux_amd64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mv terraform /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - terraform --version
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get -y install python python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo pip install awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awsebcli
    Name: run
    PrependShell: true
  - CmdLine:
    - aws --version
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ruby ruby-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i google-chrome-stable_current_amd64.deb; apt-get -fy install
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -N http://chromedriver.storage.googleapis.com/2.40/chromedriver_linux64.zip
      -P ~/
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip ~/chromedriver_linux64.zip -d ~/
    Name: run
    PrependShell: true
  - CmdLine:
    - rm ~/chromedriver_linux64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mv -f ~/chromedriver /usr/local/bin/chromedriver
    Name: run
    PrependShell: true
  - CmdLine:
    - chown root:root /usr/local/bin/chromedriver
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 0755 /usr/local/bin/chromedriver
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-transport-https ca-certificates curl software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian
      jessie stable"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y docker-ce
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g firebase-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g karma-cli@1.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g shadow-cljs@2.4.1
    Name: run
    PrependShell: true
  - CmdLine:
    - export CLOUD_SDK_REPO="cloud-sdk-stretch" &&     echo "deb http://packages.cloud.google.com/apt
      $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key
      add - &&     apt-get update -y && apt-get install google-cloud-sdk -y &&     gcloud
      config set core/disable_usage_reporting true &&     gcloud config set component_manager/disable_update_check
      true &&     gcloud config set metrics/environment github_docker_image &&     gcloud
      config set pass_credentials_to_gsutil false &&     gcloud --version &&     gsutil
      --version
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y netcat
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y postgresql-client
    Name: run
    PrependShell: true
  - Env:
    - Key: FLYWAY_VERSION
      Value: 5.2.0
    Name: env
  - CmdLine:
    - mkdir /fw   && cd /fw   && curl -L https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/${FLYWAY_VERSION}/flyway-commandline-${FLYWAY_VERSION}.tar.gz
      -o flyway-commandline-${FLYWAY_VERSION}.tar.gz   && tar -xzf flyway-commandline-${FLYWAY_VERSION}.tar.gz
      --strip-components=1   && rm flyway-commandline-${FLYWAY_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:/fw/
    Name: env
  - CmdLine:
    - apt-get install -y jq
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64
    - /usr/local/bin/dumb-init
  - CmdLine:
    - chmod +x /usr/local/bin/dumb-init
    Name: run
    PrependShell: true
  - CmdLine:
    - dumb-init
    - --
    Name: cmd
    PrependShell: false
  From:
    Image: clojure
  Name: ""
  Platform: ""
  SourceCode: FROM clojure
