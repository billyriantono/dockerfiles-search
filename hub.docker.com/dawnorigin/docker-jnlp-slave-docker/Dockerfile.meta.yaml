MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk-alpine
  Commands:
  - Maintainer: Xi Song <songxic@gmail.com>
    Name: maintainer
  - Env:
    - Key: HOME
      Value: /home/jenkins
    Name: env
  - CmdLine:
    - addgroup -S -g 10000 jenkins
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser -S -u 10000 -h $HOME -G jenkins jenkins
    Name: run
    PrependShell: true
  - Labels:
    - Key: Description
      Value: '"This is a base image, which provides the Jenkins agent executable (slave.jar)"'
    - Key: Vendor
      Value: '"Jenkins project"'
    - Key: Version
      Value: '"3.10"'
    Name: label
  - CmdLine:
    - "apk add --no-cache \t\tca-certificates"
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_CHANNEL
      Value: stable
    Name: env
  - Env:
    - Key: DOCKER_VERSION
      Value: 17.06.2-ce
    Name: env
  - CmdLine:
    - "set -ex; \tapk add --no-cache --virtual .fetch-deps \t\tcurl \t\ttar \t; \t\tapkArch=\"$(apk
      --print-arch)\"; \tcase \"$apkArch\" in \t\tx86_64) dockerArch='x86_64' ;; \t\ts390x)
      dockerArch='s390x' ;; \t\t*) echo >&2 \"error: unsupported architecture ($apkArch)\";
      exit 1 ;;\tesac; \t\tif ! curl -fL -o docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz\";
      then \t\techo >&2 \"error: failed to download 'docker-${DOCKER_VERSION}' from
      '${DOCKER_CHANNEL}' for '${dockerArch}'\"; \t\texit 1; \tfi; \t\ttar --extract
      \t\t--file docker.tgz \t\t--strip-components 1 \t\t--directory /usr/local/bin/
      \t; \trm docker.tgz; \t\tapk del .fetch-deps; \t\tdockerd -v; \tdocker -v"
    Name: run
    PrependShell: true
  - Key: VERSION
    Name: arg
    Value: "3.10"
  - Key: AGENT_WORKDIR
    Name: arg
    Value: /home/jenkins/agent
  - CmdLine:
    - apk add --update --no-cache curl bash git openssh-client openssl   && curl --create-dirs
      -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar   &&
      chmod 755 /usr/share/jenkins   && chmod 644 /usr/share/jenkins/slave.jar   &&
      apk del curl
    Name: run
    PrependShell: true
  - Name: user
    User: jenkins
  - Env:
    - Key: AGENT_WORKDIR
      Value: ${AGENT_WORKDIR}
    Name: env
  - CmdLine:
    - mkdir /home/jenkins/.jenkins && mkdir -p ${AGENT_WORKDIR}
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/jenkins/.jenkins
  - Name: volume
    Volumes:
    - ${AGENT_WORKDIR}
  - Name: workdir
    Path: /home/jenkins
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins-slave
    - /usr/local/bin/jenkins-slave
  - CmdLine:
    - jenkins-slave
    Name: entrypoint
    PrependShell: false
  From:
    Image: openjdk:8-jdk-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-alpine
