{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"technical@viascom.ch\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/opt/jdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/jdk/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLIBC_REPO",
              "Value": "https://github.com/sgerrand/alpine-pkg-glibc"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GLIBC_VERSION",
              "Value": "2.27-r0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026     apk upgrade --update \u0026\u0026     apk add --update libstdc++ curl ca-certificates bash java-cacerts \u0026\u0026     for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION}; do curl -sSL ${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done \u0026\u0026     apk add --allow-untrusted /tmp/*.apk \u0026\u0026     rm -v /tmp/*.apk \u0026\u0026     ( /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 || true ) \u0026\u0026     echo \"export LANG=C.UTF-8\" \u003e /etc/profile.d/locale.sh \u0026\u0026     /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib \u0026\u0026     mkdir /opt \u0026\u0026     curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/java.tar.gz       http://download.oracle.com/otn-pub/java/jdk/10.0.1+10/fb4372174a714e6b8c52526dc134031e/serverjre-10.0.1_linux-x64_bin.tar.gz \u0026\u0026     JAVA_PACKAGE_SHA256=$(curl -sSL https://www.oracle.com/webfolder/s/digest/10-0-1checksum.html | grep -E \"serverjre-10.0.1_linux-x64_bin\\.tar\\.gz\" | grep -Eo '(sha256: )[^\u003c]+' | cut -d: -f2 | xargs) \u0026\u0026     echo \"${JAVA_PACKAGE_SHA256}  /tmp/java.tar.gz\" \u003e /tmp/java.tar.gz.sha256 \u0026\u0026     sha256sum -c /tmp/java.tar.gz.sha256 \u0026\u0026     gunzip /tmp/java.tar.gz \u0026\u0026     tar -C /opt -xf /tmp/java.tar \u0026\u0026     ln -s /opt/jdk-10.0.1 /opt/jdk  \u0026\u0026     curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\" -o /tmp/jce_policy-8.zip       http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip \u0026\u0026     cd /tmp \u0026\u0026 unzip /tmp/jce_policy-8.zip \u0026\u0026     cp -v /tmp/UnlimitedJCEPolicyJDK8/*.jar /opt/jdk/lib/security/ \u0026\u0026     apk del curl glibc-i18n \u0026\u0026     rm -rf /tmp/* /var/cache/apk/* \u0026\u0026     ln -sf /etc/ssl/certs/java/cacerts $JAVA_HOME/lib/security/cacerts \u0026\u0026     echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' \u003e\u003e /etc/nsswitch.conf"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}