{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "golang:alpine",
      "SourceCode": "FROM golang:alpine as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "golang:alpine"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/golang/dep/releases/download/v0.5.0/dep-linux-amd64",
            "/usr/bin/dep"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/bin/dep"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade \u0026\u0026 apk add git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH/src/github.com/tellytv/telly"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Gopkg.toml",
            "Gopkg.lock",
            "./"
          ]
        },
        {
          "CmdLine": [
            "dep ensure --vendor-only"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "./"
          ]
        },
        {
          "CmdLine": [
            "CGO_ENABLED=0 GOOS=linux go build -a -installsuffix nocgo -o /app ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache ca-certificates   \u0026\u0026 find . -type f -print0 | xargs -0 sed -i 's/\"listen\", \"localhost/\"listen\", \"0.0.0.0/g'   \u0026\u0026 CGO_ENABLED=0 GOOS=linux go install -ldflags '-w -s -extldflags \"-static\"'"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "scratch",
      "SourceCode": "FROM scratch",
      "Platform": "",
      "From": {
        "Scratch": true
      },
      "Commands": [
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/app",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/etc/ssl/certs/",
            "/etc/ssl/certs/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6077"
          ]
        },
        {
          "CmdLine": [
            "./app"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}