MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: quyenluu
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install --no-install-recommends --no-install-suggests
      -y             nano             git             curl             unzip             zip             apache2             cron
      &&     touch /var/log/cron.log
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r mysql && useradd -r -g mysql mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends gnupg dirmngr &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& gpgconf
      --kill all \t&& rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x
      /usr/local/bin/gosu \t&& gosu nobody true \t&& apt-get purge -y --auto-remove
      ca-certificates wget"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tpwgen \t\topenssl
      \t\tperl \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \tkey='A4A9406876FCBD3C456770C88C718D3B5072E1F5'; \texport GNUPGHOME=\"$(mktemp
      -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";
      \tgpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/mysql.gpg; \tgpgconf
      --kill all; \trm -rf \"$GNUPGHOME\"; \tapt-key list > /dev/null"
    Name: run
    PrependShell: true
  - Env:
    - Key: MYSQL_MAJOR
      Value: "5.7"
    Name: env
  - Env:
    - Key: MYSQL_VERSION
      Value: 5.7.26-1debian9
    Name: env
  - CmdLine:
    - echo "deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}" >
      /etc/apt/sources.list.d/mysql.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo mysql-community-server mysql-community-server/data-dir select '';
      \t\techo mysql-community-server mysql-community-server/root-pass password '';
      \t\techo mysql-community-server mysql-community-server/re-root-pass password
      ''; \t\techo mysql-community-server mysql-community-server/remove-test-db select
      false; \t} | debconf-set-selections \t&& apt-get update && apt-get install -y
      mysql-server=\"${MYSQL_VERSION}\" && rm -rf /var/lib/apt/lists/* \t&& rm -rf
      /var/lib/mysql && mkdir -p /var/lib/mysql /var/run/mysqld \t&& chown -R mysql:mysql
      /var/lib/mysql /var/run/mysqld \t&& chmod 777 /var/run/mysqld \t&& find /etc/mysql/
      -name '*.cnf' -print0 \t\t| xargs -0 grep -lZE '^(bind-address|log)' \t\t| xargs
      -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \t&& echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve'
      > /etc/mysql/conf.d/docker.cnf"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/mysql
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - CmdLine:
    - 'ln -s /usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat'
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Env:
    - Key: PHP_VER
      Value: "7.3"
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install software-properties-common -y
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:ondrej/php
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install --no-install-recommends --no-install-suggests
      -y         php${PHP_VER}         php${PHP_VER}-cli         php${PHP_VER}-curl         php${PHP_VER}-fpm         php${PHP_VER}-intl         php${PHP_VER}-json         php${PHP_VER}-mbstring         php${PHP_VER}-mysql         php${PHP_VER}-xml         php${PHP_VER}-zip         php${PHP_VER}-ldap         php${PHP_VER}-gd         php${PHP_VER}-geoip         php${PHP_VER}-gnupg         php${PHP_VER}-igbinary         php${PHP_VER}-imagick         php${PHP_VER}-mailparse         php${PHP_VER}-memcached         php${PHP_VER}-mongodb         php${PHP_VER}-oauth         php${PHP_VER}-radius         php${PHP_VER}-raphf         php${PHP_VER}-redis         php${PHP_VER}-soap         php${PHP_VER}-solr
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash - &&     apt-get install
      -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-entrypoint.sh
    - /usr/local/bin/docker-php-entrypoint.sh
  - CmdLine:
    - chmod 755 /usr/local/bin/docker-php-entrypoint.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - apache2-foreground
    - /usr/local/bin/
  - CmdLine:
    - chmod 755 /usr/local/bin/apache2-foreground
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/html
  - CmdLine:
    - echo "ServerName localhost" >> /etc/apache2/apache2.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - auto-start.sh
    - /auto-start.sh
  - CmdLine:
    - chmod a+x /auto-start.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3306"
    - "80"
  - CmdLine:
    - /auto-start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
