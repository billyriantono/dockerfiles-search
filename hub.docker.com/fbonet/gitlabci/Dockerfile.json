{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "ubusolnode",
      "BaseName": "ubuntu:bionic",
      "SourceCode": "FROM ubuntu:bionic AS ubusolnode",
      "Platform": "",
      "As": "ubusolnode",
      "From": {
        "Image": "ubuntu:bionic"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Fabio Bonfiglio \u003cfabio.bonfiglio@fbo.network\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"This image is used as a docker executor for Gitlab CI/CD of Solidity smart contracts projects.\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \tapt-get install -y libjpeg-turbo8-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \tapt-get install -y software-properties-common \u0026\u0026 \tadd-apt-repository ppa:ethereum/ethereum \u0026\u0026 \tapt-get update \u0026\u0026 \tapt-get install -y solc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -fs /usr/share/zoneinfo/Europe/Bern /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure --frontend noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y -q graphviz curl git make g++ php \u0026\u0026 \tcurl -sL https://deb.nodesource.com/setup_12.x | bash - \u0026\u0026 \tapt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y pandoc \u0026\u0026 \tapt-get install -y pandoc-citeproc texlive"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "fbonetci",
      "BaseName": "ubusolnode",
      "SourceCode": "FROM ubusolnode AS fbonetci",
      "Platform": "",
      "As": "fbonetci",
      "From": {
        "Stage": {
          "Named": "ubusolnode",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "npm install -g --unsafe-perm=true --allow-root truffle \u0026\u0026 \tnpm install -g --unsafe-perm=true --allow-root @truffle/hdwallet-provider"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g --unsafe-perm=true --allow-root ganache-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g --unsafe-perm=true --allow-root solgraph"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/src"
        },
        {
          "CmdLine": [
            "npm install @truffle/hdwallet-provider"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}