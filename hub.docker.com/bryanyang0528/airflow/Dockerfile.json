{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6-slim",
      "SourceCode": "FROM python:3.6-slim",
      "Platform": "",
      "From": {
        "Image": "python:3.6-slim"
      },
      "Commands": [
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-xc"
          ]
        },
        {
          "Key": "APT_DEPS",
          "Name": "arg",
          "Value": "\"libsasl2-dev freetds-bin build-essential default-libmysqlclient-dev apt-utils curl rsync netcat locales procps\""
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$HOME/.npm-packages/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -euxo pipefail     \u0026\u0026 apt update     \u0026\u0026 if [ -n \"${APT_DEPS}\" ]; then apt install -y $APT_DEPS; fi     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_10.x | bash -     \u0026\u0026 apt update     \u0026\u0026 apt install -y nodejs     \u0026\u0026 apt autoremove -yqq --purge     \u0026\u0026 apt clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/opt/airflow/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/airflow/airflow/www"
        },
        {
          "CmdLine": [
            "npm install     \u0026\u0026 npm run prod"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "AIRFLOW_DEPS",
          "Name": "arg",
          "Value": "\"all,google_auth\""
        },
        {
          "Key": "PYTHON_DEPS",
          "Name": "arg",
          "Value": "\"\""
        },
        {
          "Key": "BUILD_DEPS",
          "Name": "arg",
          "Value": "\"freetds-dev libkrb5-dev libssl-dev libffi-dev libpq-dev git\""
        },
        {
          "Name": "workdir",
          "Path": "/opt/airflow"
        },
        {
          "CmdLine": [
            "set -euxo pipefail     \u0026\u0026 apt update     \u0026\u0026 if [ -n \"${BUILD_DEPS}\" ]; then apt install -y $BUILD_DEPS; fi     \u0026\u0026 if [ -n \"${PYTHON_DEPS}\" ]; then pip install --no-cache-dir ${PYTHON_DEPS}; fi     \u0026\u0026 pip install --no-cache-dir --upgrade pip==19.0.1     \u0026\u0026 pip install --no-cache-dir --no-use-pep517 -e .[$AIRFLOW_DEPS]     \u0026\u0026 apt purge --auto-remove -yqq $BUILD_DEPS     \u0026\u0026 apt autoremove -yqq --purge     \u0026\u0026 apt clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/"
          ]
        },
        {
          "CmdLine": [
            "pip install -U --ignore-installed --no-cache-dir -r /requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh -c 'echo \"deb https://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google.list'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install google-chrome-stable -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "AIRFLOW_HOME",
              "Value": "/usr/local/airflow"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$AIRFLOW_HOME"
        },
        {
          "CmdLine": [
            "mkdir -p $AIRFLOW_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/docker/entrypoint.sh",
            "/entrypoint.sh"
          ]
        }
      ]
    }
  ]
}