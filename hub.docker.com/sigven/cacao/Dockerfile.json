{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y python3-pip python3-dev   \u0026\u0026 cd /usr/local/bin   \u0026\u0026 ln -s /usr/bin/python3 python   \u0026\u0026 pip3 install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install apache2 apt-utils build-essential curl git unzip vim wget sudo libudunits2-dev libgeos-dev libgdal-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install apt-transport-https"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get update    \u0026\u0026 sudo apt-get -y install software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Env": [
            {
              "Key": "PACKAGE_BIO",
              "Value": "\"libhts1 bedtools\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PACKAGE_DEV",
              "Value": "\"gfortran gcc-multilib autoconf libmariadb-client-lgpl-dev liblzma-dev libncurses5-dev libblas-dev liblapack-dev libssh2-1-dev libxml2-dev vim libssl-dev libcairo2-dev libbz2-dev libcurl4-openssl-dev\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_MODULES",
              "Value": "\"numpy cython scipy pandas cyvcf2 toml\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends \t\tnano ed locales vim-tiny fonts-texgyre     $PACKAGE_DEV $PACKAGE_BIO \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bunzip2 -dc samtools-1.9.tar.bz2 | tar xvf -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd samtools-1.9 \u0026\u0026 ./configure --prefix=/usr/local/bin \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends   r-base-core   r-recommended  \tr-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages(c('configr','rmarkdown','dplyr','stringr','tidyr','magrittr','devtools','htmltools','plotly','ggplot2'), dependencies = T, repos = 'http://cran.us.r-project.org')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"library(devtools); devtools::install_github('rstudio/DT'); devtools::install_github('mjkallen/rlogging'); devtools::install_github('kent37/summarywidget')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"library(devtools); devtools::install_github('rstudio/crosstalk')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /tmp/R*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo -H pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo -H pip install -U setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo -H pip install $PYTHON_MODULES"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean autoclean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/{dpkg,cache,log}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /samtools-1.9.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/usr/local"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash Miniconda3-latest-Linux-x86_64.sh -b"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/miniconda3/bin:"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "conda config --add channels bioconda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install mosdepth"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /Miniconda3-latest-Linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/jgm/pandoc/releases/download/2.4/pandoc-2.4-1-amd64.deb \u0026\u0026   dpkg -i pandoc* \u0026\u0026   rm pandoc* \u0026\u0026   apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "cacao.R",
            "/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "cacao.py",
            "/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "R",
            "/"
          ]
        },
        {
          "CmdLine": [
            "R -e \"devtools::install('cacao')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/workdir/output"
        }
      ]
    }
  ]
}