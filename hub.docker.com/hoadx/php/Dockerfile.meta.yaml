MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"HoaDX <duongxuanhoa@gmail.com>"'
    Name: label
  - Env:
    - Key: USERNAME
      Value: www
    Name: env
  - Env:
    - Key: GROUPNAME
      Value: www
    Name: env
  - Env:
    - Key: USER_ID
      Value: "5353"
    Name: env
  - Env:
    - Key: GROUP_ID
      Value: "5353"
    Name: env
  - Env:
    - Key: CHANGE_OWNER
      Value: "0"
    Name: env
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tdpkg-dev dpkg \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake
        \t\tpcre \t\tpkgconf \t\tre2c"
    Name: env
  - CmdLine:
    - "apk add --no-cache --virtual .persistent-deps \t\tca-certificates \t\tcurl
      \t\ttar \t\txz \t\tfreetype \t\tlibpng \t\tlibjpeg-turbo \t\ticu \t\tlibxslt
      \t\tlibmcrypt \t\tlibpng \t\tlibjpeg-turbo \t\topenssl"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --enable-fpm --with-fpm-user=$USERNAME --with-fpm-group=$GROUPNAME
    Name: env
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.0.4
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"http://php.net/get/php-7.0.4.tar.xz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"http://php.net/distributions/php-7.0.4.tar.xz.asc"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"584e0e374e357a71b6e95175a2947d787453afc7f9ab7c55651c10491c4df532"'
    - Key: PHP_MD5
      Value: '""'
    Name: env
  - CmdLine:
    - "set -x \t&& addgroup -g $GROUP_ID -S $USERNAME \t&& adduser -u $USER_ID -s
      /bin/sh -D -S -G $GROUPNAME $USERNAME"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe; \t\tapk add --no-cache --virtual .fetch-deps \t\tgnupg \t; \t\tmkdir
      -p /usr/src; \tcd /usr/src; \t\twget -O php.tar.xz \"$PHP_URL\"; \t\tif [ -n
      \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c
      -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.xz\" |
      md5sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\twget -O php.tar.xz.asc
      \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS;
      do \t\t\tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \t\tdone;
      \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \t\trm -rf \"$GNUPGHOME\";
      \tfi; \t\tapk del .fetch-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - docker-php-ext-*
    - /usr/local/bin/
  - CmdLine:
    - "set -xe \t&& apk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\tcoreutils
      \t\tcurl-dev \t\tlibedit-dev \t\topenssl-dev \t\tlibxml2-dev \t\tsqlite-dev
      \t\ticu-dev \t\tlibxslt-dev \t\tlibmcrypt-dev \t\tpcre-dev \t\tfreetype-dev
      \t\tlibpng-dev \t\tlibjpeg-turbo-dev \t\t&& export CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\"
      \t\tLDFLAGS=\"$PHP_LDFLAGS\" \t&& docker-php-source extract \t&& cd /usr/src/php
      \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \t&& ./configure
      \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"
      \t\t--disable-cgi \t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd
      \t\t--with-curl \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib \t\t--with-pcre-regex=/usr
      \t\t$PHP_EXTRA_CONFIGURE_ARGS \t&& make -j \"$(nproc)\" \t&& make install \t&&
      { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all
      '{}' + || true; } \t&& make clean \t&& cd / \t&& docker-php-source delete \t\t&&
      runDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local
      \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\"
      $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t&& apk add --no-cache
      --virtual .php-rundeps $runDeps \t&& apk add --no-cache  \t&& docker-php-ext-configure
      gd \t\t--with-gd \t\t--with-freetype-dir=/usr \t\t--with-png-dir=/usr \t\t--with-jpeg-dir=/usr
      \t&& docker-php-ext-install mcrypt gd pdo_mysql intl soap xsl zip \t&& curl
      -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer  && chmod +x /usr/local/bin/composer \t\t&& apk del .build-deps
      \t&& pecl update-channels \t&& rm -rf /tmp/pear ~/.pearrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex \t&& cd /usr/local/etc \t&& if [ -d php-fpm.d ]; then \t\tsed 's!=NONE/!=!g'
      php-fpm.conf.default | tee php-fpm.conf > /dev/null; \t\tcp php-fpm.d/www.conf.default
      php-fpm.d/www.conf; \telse \t\tmkdir php-fpm.d; \t\tcp php-fpm.conf.default
      php-fpm.d/www.conf; \t\t{ \t\t\techo '[global]'; \t\t\techo 'include=etc/php-fpm.d/*.conf';
      \t\t} | tee php-fpm.conf; \tfi \t&& { \t\techo '[global]'; \t\techo 'error_log
      = /proc/self/fd/2'; \t\techo; \t\techo '[www]'; \t\techo '; if we send this
      to /proc/self/fd/1, it never appears'; \t\techo 'access.log = /proc/self/fd/2';
      \t\techo; \t\techo 'clear_env = no'; \t\techo; \t\techo '; Ensure worker stdout
      and stderr are sent to the main error log.'; \t\techo 'catch_workers_output
      = yes'; \t} | tee php-fpm.d/docker.conf \t&& { \t\techo '[global]'; \t\techo
      'daemonize = no'; \t\techo; \t\techo '[www]'; \t\techo 'listen = [::]:9000';
      \t} | tee php-fpm.d/zz-docker.conf"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - docker-entrypoint
    - /usr/local/bin/
  - CmdLine:
    - docker-entrypoint
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
