{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "dockerfile/java:oracle-java7",
      "SourceCode": "FROM dockerfile/java:oracle-java7",
      "Platform": "",
      "From": {
        "Image": "dockerfile/java:oracle-java7"
      },
      "Commands": [
        {
          "Maintainer": "Michael Klatskin \u003cmichael.ecompositor.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "mkdir /reports"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SCALA_TAR_URL",
              "Value": "http://www.scala-lang.org/files/archive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCALA_VERSION",
              "Value": "2.10.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SBT_VERSION",
              "Value": "0.13.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sudo apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get install chrpath libssl-dev libfontconfig1-dev -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget $SCALA_TAR_URL/scala-$SCALA_VERSION.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xvf scala-$SCALA_VERSION.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv scala-$SCALA_VERSION /usr/lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm scala-$SCALA_VERSION.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/lib/scala-$SCALA_VERSION /usr/lib/scala"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/lib/scala/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -O /usr/local/bin/sbt-launch.jar http://repo.typesafe.com/typesafe/ivy-releases/org.scala-sbt/sbt-launch/$SBT_VERSION/sbt-launch.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/sbt.sh",
            "/usr/local/bin/sbt"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /usr/local/bin/sbt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y python python-dev python-pip python-virtualenv \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026   wget http://nodejs.org/dist/node-latest.tar.gz \u0026\u0026   tar xvzf node-latest.tar.gz \u0026\u0026   rm -f node-latest.tar.gz \u0026\u0026   cd node-v* \u0026\u0026   ./configure \u0026\u0026   CXX=\"g++ -Wno-unused-local-typedefs\" make \u0026\u0026   CXX=\"g++ -Wno-unused-local-typedefs\" make install \u0026\u0026   cd /tmp \u0026\u0026   rm -rf /tmp/node-v* \u0026\u0026   echo '\\n# Node.js\\nexport PATH=\"node_modules/.bin:$PATH\"' \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/reports"
        },
        {
          "CmdLine": [
            "sudo apt-get install freetype* build-essential git-core -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://npmjs.org/install.sh | sh \u0026\u0026   npm install jsreport \u0026\u0026   npm install nodemailer \u0026\u0026   npm install cron \u0026\u0026   npm install http-server \u0026\u0026   node node_modules/jsreport --init \u0026\u0026   pip install --upgrade httpie"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "node server.js"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}