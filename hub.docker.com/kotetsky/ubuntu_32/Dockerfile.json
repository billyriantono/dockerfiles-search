{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ioft/i386-ubuntu_core",
      "SourceCode": "FROM ioft/i386-ubuntu_core",
      "Platform": "",
      "From": {
        "Image": "ioft/i386-ubuntu_core"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo '#!/bin/sh' \u003e /usr/sbin/policy-rc.d \u0026\u0026 echo 'exit 101' \u003e\u003e /usr/sbin/policy-rc.d \u0026\u0026 chmod +x /usr/sbin/policy-rc.d \u0026\u0026 dpkg-divert --local --rename --add /sbin/initctl \u0026\u0026 cp -a /usr/sbin/policy-rc.d /sbin/initctl \u0026\u0026 sed -i 's/^exit.*/exit 0/' /sbin/initctl \u0026\u0026 echo 'force-unsafe-io' \u003e /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \u0026\u0026 echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e /etc/apt/apt.conf.d/docker-clean \u0026\u0026 echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e\u003e /etc/apt/apt.conf.d/docker-clean \u0026\u0026 echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' \u003e\u003e /etc/apt/apt.conf.d/docker-clean \u0026\u0026 echo 'Acquire::Languages \"none\";' \u003e /etc/apt/apt.conf.d/docker-no-languages \u0026\u0026 echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' \u003e /etc/apt/apt.conf.d/docker-gzip-indexes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y upgrade \u0026\u0026 apt-get autoremove \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y openssh-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'root:screencast' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NOTVISIBLE",
              "Value": "\"in users profile\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"export VISIBLE=now\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qq update   \u0026\u0026 apt-get -qq install --yes --no-install-recommends ca-certificates wget locales   \u0026\u0026 `#----- Install the dependencies -----`   \u0026\u0026 apt-get -qq install --yes --no-install-recommends fontconfig imagemagick   \u0026\u0026 `#----- Deal with ttf-mscorefonts-installer -----`   \u0026\u0026 apt-get -qq install --yes --no-install-recommends xfonts-utils cabextract   \u0026\u0026 wget --quiet --output-document /tmp/ttf-mscorefonts-installer_3.6_all.deb http://ftp.us.debian.org/debian/pool/contrib/m/msttcorefonts/ttf-mscorefonts-installer_3.6_all.deb   \u0026\u0026 dpkg --install /tmp/ttf-mscorefonts-installer_3.6_all.deb   \u0026\u0026 rm /tmp/ttf-mscorefonts-installer_3.6_all.deb   \u0026\u0026 `#----- Install gosu -----`   \u0026\u0026 wget --quiet --output-document /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"   \u0026\u0026 chmod +x /usr/local/bin/gosu   \u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y wget gnupg2 || apt-get install -y gnupg imagemagick-6.q16 unixodbc libgsf-bin t1utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y mc"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}