MetaArgs: null
Stages:
- BaseName: ioft/i386-ubuntu_core
  Commands:
  - CmdLine:
    - 'echo ''#!/bin/sh'' > /usr/sbin/policy-rc.d && echo ''exit 101'' >> /usr/sbin/policy-rc.d
      && chmod +x /usr/sbin/policy-rc.d && dpkg-divert --local --rename --add /sbin/initctl
      && cp -a /usr/sbin/policy-rc.d /sbin/initctl && sed -i ''s/^exit.*/exit 0/''
      /sbin/initctl && echo ''force-unsafe-io'' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup
      && echo ''DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb
      /var/cache/apt/*.bin || true"; };'' > /etc/apt/apt.conf.d/docker-clean && echo
      ''APT::Update::Post-Invoke { "rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb
      /var/cache/apt/*.bin || true"; };'' >> /etc/apt/apt.conf.d/docker-clean && echo
      ''Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache "";'' >> /etc/apt/apt.conf.d/docker-clean
      && echo ''Acquire::Languages "none";'' > /etc/apt/apt.conf.d/docker-no-languages
      && echo ''Acquire::GzipIndexes "true"; Acquire::CompressionTypes::Order:: "gz";''
      > /etc/apt/apt.conf.d/docker-gzip-indexes'
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/^#\s*\(deb.*universe\)$/\1/g' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y upgrade && apt-get autoremove && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-utils
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y openssh-server
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:screencast' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      -i /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - echo "export VISIBLE=now" >> /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update   && apt-get -qq install --yes --no-install-recommends ca-certificates
      wget locales   && `#----- Install the dependencies -----`   && apt-get -qq install
      --yes --no-install-recommends fontconfig imagemagick   && `#----- Deal with
      ttf-mscorefonts-installer -----`   && apt-get -qq install --yes --no-install-recommends
      xfonts-utils cabextract   && wget --quiet --output-document /tmp/ttf-mscorefonts-installer_3.6_all.deb
      http://ftp.us.debian.org/debian/pool/contrib/m/msttcorefonts/ttf-mscorefonts-installer_3.6_all.deb   &&
      dpkg --install /tmp/ttf-mscorefonts-installer_3.6_all.deb   && rm /tmp/ttf-mscorefonts-installer_3.6_all.deb   &&
      `#----- Install gosu -----`   && wget --quiet --output-document /usr/local/bin/gosu
      "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)"   && chmod +x /usr/local/bin/gosu   && gosu nobody true
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget gnupg2 || apt-get install -y gnupg imagemagick-6.q16
      unixodbc libgsf-bin t1utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y mc
    Name: run
    PrependShell: true
  From:
    Image: ioft/i386-ubuntu_core
  Name: ""
  Platform: ""
  SourceCode: FROM ioft/i386-ubuntu_core
