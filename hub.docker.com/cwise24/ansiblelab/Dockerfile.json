{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Maintainer": "Chad Wise \u003ccwise24@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --update add --no-cache --virtual .pynacl_deps build-base g++ libffi libffi-dev openssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --update add openssl-dev python3 python3-dev openssh sshpass git py3-lxml py3-pillow bash bash-completion vim jq \u0026\u0026     echo \"Installing PIP\" \u0026\u0026     pip3 install --no-cache --upgrade pip setuptools wheel \u0026\u0026     echo \"Installing ansible and tools\" \u0026\u0026     pip3 install --no-cache ansible  f5-sdk deepdiff \u0026\u0026     pip3 install --no-cache jmespath \u0026\u0026     pip3 install --no-cache netmiko \u0026\u0026     pip3 install --no-cache ncclient \u0026\u0026     echo \"Install Linting Tools \" \u0026\u0026     pip3 install --no-cache yamllint \u0026\u0026     pip3 install --no-cache pylint \u0026\u0026     pip3 install --no-cache ansible-lint \u0026\u0026     echo \"installing Docx and PPTx\" \u0026\u0026     pip3 install --no-cache python-docx \u0026\u0026     pip3 install --no-cache python-pptx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del .pynacl_deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser --disabled-password ansible"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "ansible"
        },
        {
          "Name": "workdir",
          "Path": "/home/ansible"
        },
        {
          "CmdLine": [
            "mkdir -p /home/ansible/.ssh \u0026\u0026     touch /home/ansible/.ssh/known_hosts \u0026\u0026     touch /home/ansible/.bashrc \u0026\u0026     mkdir -p /home/ansible/ansible_lab \u0026\u0026     touch /home/ansible/.ansible.cfg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "ansible",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "error.yml",
            "/home/ansible/ansible_lab/."
          ]
        },
        {
          "Chown": "ansible",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "noerror.yml",
            "/home/ansible/ansible_lab/."
          ]
        },
        {
          "Chown": "ansible",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "switch_conf.yml",
            "/home/ansible/ansible_lab/."
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "22/tcp"
          ]
        }
      ]
    }
  ]
}