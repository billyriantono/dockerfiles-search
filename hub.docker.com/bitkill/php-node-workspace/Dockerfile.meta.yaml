MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Rui Fernandes (@bitkill)"'
    Name: label
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && apt-get update && apt-get install -y locales
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_CTYPE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - apt-get update -y &&     apt-get install -y software-properties-common &&     add-apt-repository
      -y ppa:ondrej/php
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update &&     apt-get install -y --allow-downgrades --allow-remove-essential
      \        --allow-change-held-packages         php7.3-cli         php7.3-common
      \        php7.3-curl         php7.3-intl         php7.3-json         php7.3-xml
      \        php7.3-mbstring         php7.3-mysql         php7.3-pgsql         php7.3-sqlite
      \        php7.3-sqlite3         php7.3-zip         php7.3-bcmath         php7.3-memcached
      \        php7.3-gd         php7.3-dev         pkg-config         libcurl4-openssl-dev
      \        libedit-dev         libssl-dev         libxml2-dev         xz-utils
      \        libsqlite3-dev         sqlite3         git         curl         vim
      \        nano         postgresql-client         mysql-client \tpython         openssh-server
      &&         mkdir /var/run/sshd"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s http://getcomposer.org/installer | php &&     echo "export PATH=${PATH}:/var/www/vendor/bin"
      >> ~/.bashrc &&     mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - . ~/.bashrc
    Name: run
    PrependShell: true
  - Key: PUID
    Name: arg
    Value: "1000"
  - Key: PGID
    Name: arg
    Value: "1000"
  - Env:
    - Key: PUID
      Value: ${PUID}
    Name: env
  - Env:
    - Key: PGID
      Value: ${PGID}
    Name: env
  - CmdLine:
    - groupadd -g ${PGID} workspace && useradd -u ${PUID} -g workspace -m workspace
    Name: run
    PrependShell: true
  - Key: TZ
    Name: arg
    Value: UTC
  - Env:
    - Key: TZ
      Value: ${TZ}
    Name: env
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - Key: INSTALL_PHPREDIS
    Name: arg
    Value: "true"
  - Env:
    - Key: INSTALL_PHPREDIS
      Value: ${INSTALL_PHPREDIS}
    Name: env
  - CmdLine:
    - if [ ${INSTALL_PHPREDIS} = true ]; then     pecl channel-update pecl.php.net
      &&     printf "\n" | pecl -q install -o -f redis &&     echo "extension=redis.so"
      >> /etc/php/7.2/mods-available/redis.ini &&     phpenmod redis ;fi
    Name: run
    PrependShell: true
  - Key: NODE_VERSION
    Name: arg
    Value: stable
  - Env:
    - Key: NODE_VERSION
      Value: ${NODE_VERSION}
    Name: env
  - Key: NPM_REGISTRY
    Name: arg
    Value: null
  - Env:
    - Key: NPM_REGISTRY
      Value: ${NPM_REGISTRY}
    Name: env
  - Env:
    - Key: NVM_DIR
      Value: /home/workspace/.nvm
    Name: env
  - CmdLine:
    - 'curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh
      | bash &&     . $NVM_DIR/nvm.sh &&     nvm install ${NODE_VERSION} &&     nvm
      use ${NODE_VERSION} &&     nvm alias ${NODE_VERSION} &&     if [ ${NPM_REGISTRY}
      ]; then     npm config set registry ${NPM_REGISTRY}     ;fi &&     npm install
      -g gulp yarn webpack vue-cli RUN if true; then     echo "" >> ~/.bashrc &&     echo
      ''export NVM_DIR="$HOME/.nvm"'' >> ~/.bashrc &&     echo ''[ -s "$NVM_DIR/nvm.sh"
      ] && . "$NVM_DIR/nvm.sh"  # This loads nvm'' >> ~/.bashrc ;fi'
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - 'if true; then     echo "" >> ~/.bashrc &&     echo ''export NVM_DIR="/home/workspace/.nvm"''
      >> ~/.bashrc &&     echo ''[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  #
      This loads nvm'' >> ~/.bashrc ;fi'
    Name: run
    PrependShell: true
  - Name: user
    User: workspace
  - CmdLine:
    - 'if true; then     echo "" >> ~/.bashrc &&     echo ''export NVM_DIR="/home/workspace/.nvm"''
      >> ~/.bashrc &&     echo ''[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  #
      This loads nvm'' >> ~/.bashrc ;fi'
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:$NVM_DIR/versions/node/v${NODE_VERSION}/bin
    Name: env
  - Name: user
    User: root
  - Env:
    - Key: PATH
      Value: $PATH:$NVM_DIR/versions/node/v${NODE_VERSION}/bin
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - Name: workdir
    Path: /var/www
  - CmdLine:
    - /usr/sbin/sshd
    - -D
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
