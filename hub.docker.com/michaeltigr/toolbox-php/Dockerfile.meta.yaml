MetaArgs:
- DefaultValue: 0.35.1
  Key: VARIANT_VERSION
  ProvidedValue: null
  Value: 0.35.1
- DefaultValue: 0.1.7
  Key: UNICONF_VERSION
  ProvidedValue: null
  Value: 0.1.7
- DefaultValue: v3.5.0
  Key: GOMPLATE_VERSION
  ProvidedValue: null
  Value: v3.5.0
- DefaultValue: 2.4.0
  Key: YQ_VERSION
  ProvidedValue: null
  Value: 2.4.0
- DefaultValue: latest
  Key: TOOLBOX_VERSION
  ProvidedValue: null
  Value: latest
Stages:
- As: variant
  BaseName: aroq/variant:$VARIANT_VERSION
  Commands: null
  From:
    Image: aroq/variant:$VARIANT_VERSION
  Name: variant
  Platform: ""
  SourceCode: FROM aroq/variant:$VARIANT_VERSION as variant
- As: uniconf
  BaseName: aroq/uniconf:$UNICONF_VERSION
  Commands: null
  From:
    Image: aroq/uniconf:$UNICONF_VERSION
  Name: uniconf
  Platform: ""
  SourceCode: FROM aroq/uniconf:$UNICONF_VERSION as uniconf
- As: gomplate
  BaseName: hairyhenderson/gomplate:$GOMPLATE_VERSION
  Commands: null
  From:
    Image: hairyhenderson/gomplate:$GOMPLATE_VERSION
  Name: gomplate
  Platform: ""
  SourceCode: FROM hairyhenderson/gomplate:$GOMPLATE_VERSION as gomplate
- As: yq
  BaseName: mikefarah/yq:$YQ_VERSION
  Commands: null
  From:
    Image: mikefarah/yq:$YQ_VERSION
  Name: yq
  Platform: ""
  SourceCode: FROM mikefarah/yq:$YQ_VERSION as yq
- As: toolbox
  BaseName: aroq/toolbox:$TOOLBOX_VERSION
  Commands: null
  From:
    Image: aroq/toolbox:$TOOLBOX_VERSION
  Name: toolbox
  Platform: ""
  SourceCode: FROM aroq/toolbox:$TOOLBOX_VERSION as toolbox
- As: builder
  BaseName: golang:1-alpine
  Commands:
  - CmdLine:
    - set -eux; apk add --no-cache --virtual .composer-rundeps   git   curl   ca-certificates   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  From:
    Image: golang:1-alpine
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1-alpine as builder
- BaseName: php:7.2-cli-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Michael Molchanov <mmolchanov@adyax.com>"'
    Name: label
  - Name: user
    User: root
  - CmdLine:
    - mkdir -p /root/.ssh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config/ssh
    - /root/.ssh/config
  - CmdLine:
    - chown root:root /root/.ssh/config && chmod 600 /root/.ssh/config
    Name: run
    PrependShell: true
  - Chown: ""
    From: yq
    Name: copy
    SourcesAndDest:
    - /usr/bin/yq
    - /usr/bin/yq
  - Chown: ""
    From: variant
    Name: copy
    SourcesAndDest:
    - /usr/bin/variant
    - /usr/bin/
  - Chown: ""
    From: gomplate
    Name: copy
    SourcesAndDest:
    - /gomplate
    - /usr/bin/
  - Chown: ""
    From: uniconf
    Name: copy
    SourcesAndDest:
    - /uniconf/uniconf
    - /usr/bin/uniconf
  - Chown: ""
    From: toolbox
    Name: copy
    SourcesAndDest:
    - /usr/bin/go-getter
    - /usr/bin
  - Chown: ""
    From: toolbox
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/fd
    - /usr/local/bin
  - CmdLine:
    - set -eux; apk add --no-cache --virtual .composer-rundeps   autoconf   automake   bash   build-base   bzip2   ca-certificates   coreutils   curl   freetype   fuse   gawk   git   git-lfs   gmp   gmp-dev   grep   gzip   jq   libbz2   libffi   libffi-dev   libjpeg-turbo   libmcrypt   libpq   libpng   libxml2   libxslt   libzip   make   mercurial   mysql-client   openssh   openssh-client   libressl   libressl-dev   patch   procps   postgresql-client   rsync   sqlite   strace   subversion   tar   tini   unzip   wget   zip   zlib   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe   && apk add --no-cache --virtual .build-deps     $PHPIZE_DEPS     curl-dev     libedit-dev     libxml2-dev     sqlite-dev     freetype-dev     libjpeg-turbo-dev     libmcrypt-dev     libpng-dev     bzip2-dev     libstdc++     libxslt-dev     libzip-dev     openldap-dev     postgresql-dev     zlib-dev   &&
      export CFLAGS="$PHP_CFLAGS"     CPPFLAGS="$PHP_CPPFLAGS"     LDFLAGS="$PHP_LDFLAGS"   &&
      docker-php-source extract   && cd /usr/src/php   && docker-php-ext-install bcmath
      zip bz2 gmp mbstring pcntl xsl mysqli pgsql pdo_mysql pdo_pgsql   && docker-php-ext-configure
      gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/   && docker-php-ext-install
      gd   && docker-php-ext-configure ldap --with-libdir=lib/   && docker-php-ext-install
      ldap   && git clone --branch="develop" https://github.com/phpredis/phpredis.git
      /usr/src/php/ext/redis   && docker-php-ext-install redis   && php -m && php
      -r "new Redis();"   && pecl install channel://pecl.php.net/mcrypt-1.0.2   &&
      docker-php-ext-install sockets   && docker-php-source delete   && runDeps="$(     scanelf
      --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions       |
      tr ',' '\n'       | sort -u       | awk 'system("[ -e /usr/local/lib/" $1 "
      ]") == 0 { next } { print "so:" $1 }'     )"   && apk add --no-cache --virtual
      .composer-phpext-rundeps $runDeps   && apk del .build-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "# composer php cli ini settings\ndate.timezone=UTC\nmemory_limit=-1\n"
      > $PHP_INI_DIR/php-cli.ini
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - Env:
    - Key: COMPOSER_HOME
      Value: /tmp
    Name: env
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.9.1
    Name: env
  - CmdLine:
    - set -eux;   curl --silent --fail --location --retry 3 --output /tmp/installer.php
      --url https://raw.githubusercontent.com/composer/getcomposer.org/cb19f2aa3aeaa2006c0cd69a7ef011eb31463067/web/installer;   php
      -r "     \$signature = '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5';     \$hash
      = hash('sha384', file_get_contents('/tmp/installer.php'));     if (!hash_equals(\$signature,
      \$hash)) {       unlink('/tmp/installer.php');       echo 'Integrity check failed,
      installer is either corrupt or worse.' . PHP_EOL;       exit(1);     }";   php
      /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION};   composer
      --ansi --version --no-interaction;   rm -f /tmp/installer.php;   find /tmp -type
      d -exec chmod -v 1777 {} +
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require hirak/prestissimo
    Name: run
    PrependShell: true
  - Env:
    - Key: DRUSH_VERSION
      Value: 8.3.0
    Name: env
  - CmdLine:
    - curl -fsSL -o /usr/local/bin/drush "https://github.com/drush-ops/drush/releases/download/$DRUSH_VERSION/drush.phar"
      &&   chmod +x /usr/local/bin/drush
    Name: run
    PrependShell: true
  - CmdLine:
    - drush core-status
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache -X http://dl-cdn.alpinelinux.org/alpine/edge/testing git-secret
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/toolbox/deps/toolbox
    Name: run
    PrependShell: true
  - Chown: ""
    From: toolbox
    Name: copy
    SourcesAndDest:
    - /usr/toolbox/deps/toolbox/*
    - /usr/toolbox/deps/toolbox/
  From:
    Image: php:7.2-cli-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-cli-alpine
