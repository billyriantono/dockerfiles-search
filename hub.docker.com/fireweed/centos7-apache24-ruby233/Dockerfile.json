{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "\"fireweed-lin\" hikelin314@gmail.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "container",
              "Value": "docker"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); rm -f /lib/systemd/system/multi-user.target.wants/*;rm -f /etc/systemd/system/*.wants/*;rm -f /lib/systemd/system/local-fs.target.wants/*; rm -f /lib/systemd/system/sockets.target.wants/*udev*; rm -f /lib/systemd/system/sockets.target.wants/*initctl*; rm -f /lib/systemd/system/basic.target.wants/*;rm -f /lib/systemd/system/anaconda.target.wants/*;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r httpd24 \u0026\u0026 useradd -r --create-home -g httpd24 httpd24"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HTTPD_PREFIX",
              "Value": "/usr/local/apache2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$HTTPD_PREFIX/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$HTTPD_PREFIX\" \t\u0026\u0026 chown httpd24:httpd24 \"$HTTPD_PREFIX\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$HTTPD_PREFIX"
        },
        {
          "CmdLine": [
            "yum install make automake gcc autoconf libtool openssl-devel pcre-devel apr-devel apr-util-devel bzip2 wget -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HTTPD_VERSION",
              "Value": "2.4.25"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HTTPD_BZ2_URL",
              "Value": "https://www.apache.org/dyn/closer.cgi?action=download\u0026filename=httpd/httpd-$HTTPD_VERSION.tar.bz2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -O httpd.tar.bz2 \"$HTTPD_BZ2_URL\" \t\t\u0026\u0026 mkdir -p src \t\u0026\u0026 tar -xf httpd.tar.bz2 -C src --strip-components=1 \t\u0026\u0026 rm httpd.tar.bz2 \t\u0026\u0026 cd src \t\t\u0026\u0026 ./configure \t\t--prefix=\"$HTTPD_PREFIX\" \t\t--enable-mods-shared=reallyall \t\u0026\u0026 make -j \"$(nproc)\" \t\u0026\u0026 make install \t\t\u0026\u0026 cd .. \t\u0026\u0026 rm -r src man manual \t\t\u0026\u0026 sed -ri \t\t-e 's!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g' \t\t-e 's!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g' \t\t\"$HTTPD_PREFIX/conf/httpd.conf\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum install which mysql mysql-devel lmygcc nodejs libcurl-devel -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \u0026\u0026 curl -sSL https://get.rvm.io | bash -s stable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -l -c 'rvm install ruby-2.3.3'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -l -c 'rvm use --default ruby-2.3.3'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -l -c 'gem install passenger --version 5.1.1' \u0026\u0026 /bin/bash -l -c 'passenger-install-apache2-module --auto'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e 'LoadModule passenger_module /usr/local/rvm/gems/ruby-2.3.3/gems/passenger-5.1.1/buildout/apache2/mod_passenger.so\\n  \u003cIfModule mod_passenger.c\u003e\\n  PassengerRoot /usr/local/rvm/gems/ruby-2.3.3/gems/passenger-5.1.1\\n  PassengerDefaultRuby /usr/local/rvm/gems/ruby-2.3.3/wrappers/ruby\\n \u003c/IfModule\u003e' \u003e /usr/local/apache2/conf/extra/passenger.conf \u0026\u0026 sed -i '$a Include conf/extra/passenger.conf' /usr/local/apache2/conf/httpd.conf \u0026\u0026 mkdir /usr/local/apache2/conf/client \u0026\u0026 sed -i '$a Include conf/client/*.conf' /usr/local/apache2/conf/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -l -c 'gem install bundle'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "httpd-foreground",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chown httpd24:httpd24 /usr/local/bin/httpd-foreground     \u0026\u0026 chmod 777 /usr/local/bin/httpd-foreground"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/httpd-foreground"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}