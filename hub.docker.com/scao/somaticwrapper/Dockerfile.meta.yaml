MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Labels:
    - Key: author
      Value: '"Matt Wyczalkowski"'
    - Key: maintainer
      Value: '"m.wyczalkowski@wustl.edu"'
    Name: label
  - CmdLine:
    - apt-get update && apt-get install -y     autoconf     bedtools     build-essential     bwa     cmake     cpanminus     curl     default-jre     gawk     git     libbz2-dev     liblzma-dev     libncurses-dev     python     python-dev     python-pip     sshpass     subversion     unzip     vim     wget     zlib1g-dev     &&
      apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local     && git clone https://github.com/samtools/htslib.git     &&
      cd /usr/local/htslib     && make     && make lib-static     && make install
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/htslib
    Name: env
  - CmdLine:
    - cd /usr/local/     && git clone https://github.com/samtools/samtools.git     &&
      cd samtools     && make     && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/     && git clone --recursive https://github.com/genome/pindel.git      &&
      cd /usr/local/pindel/     && ./INSTALL /usr/local/htslib
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install     pyvcf     pysam     numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - cpanm XML::XPath
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local     && wget https://sites.google.com/site/strelkasomaticvariantcaller/home/download/strelka_workflow-1.0.15.tar.gz     &&
      tar -zxf strelka_workflow-1.0.15.tar.gz     && cd /usr/local/strelka_workflow-1.0.15     &&
      ./configure --prefix=/usr/local/strelka     && make     && make install     &&
      ln -s /usr/local/samtools /usr/local/strelka_workflow-1.0.15/src/perl/opt     &&
      rm /usr/local/strelka_workflow-1.0.15.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local     && wget https://sourceforge.net/projects/varscan/files/VarScan.v2.3.8.jar     &&
      ln -s VarScan.v2.3.8.jar VarScan.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local     && wget https://github.com/genome/bam-readcount/archive/master.tar.gz     &&
      tar -zxf master.tar.gz     && rm master.tar.gz     && mkdir bam-readcount-master/build     &&
      cd bam-readcount-master/build     && cmake ../     && make     && cp bin/bam-readcount
      /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local     && wget http://sourceforge.net/projects/snpeff/files/snpEff_latest_core.zip     &&
      unzip snpEff_latest_core.zip     && rm snpEff_latest_core.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local     && wget https://software.broadinstitute.org/gatk/download/auth?package=GATK
      -O GATK.tar.bz2     && bunzip2 GATK.tar.bz2     && tar -xf GATK.tar     && wget
      https://github.com/broadinstitute/picard/releases/download/2.12.1/picard.jar
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && {         echo debconf debconf/frontend select Noninteractive;         echo
      mysql-community-server mysql-community-server/data-dir select '';         echo
      mysql-community-server mysql-community-server/root-pass password '';         echo
      mysql-community-server mysql-community-server/re-root-pass password '';         echo
      mysql-community-server mysql-community-server/remove-test-db select true;     }
      | debconf-set-selections     && apt-get install -y mysql-server libmysqlclient-dev     &&
      apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - cpanm DBI DBD::mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local     && git clone https://github.com/Ensembl/ensembl-vep.git      &&
      cd /usr/local/ensembl-vep     && perl INSTALL.pl /data/D_Ensembl -a a
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - vimrc
    - /root/.vimrc
  - CmdLine:
    - cd /usr/local     &&  git clone -b docker https://github.com/ding-lab/somaticwrapper
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local     &&  git clone -b d2 https://github.com/ding-lab/germlinewrapper
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/somaticwrapper
  - Name: volume
    Volumes:
    - /data
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
