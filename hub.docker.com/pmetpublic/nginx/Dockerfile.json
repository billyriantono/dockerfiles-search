{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Keith Bentrup \u003ckbentrup@magento.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.10.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes curl     install-info     gnupg     build-essential     libpcre3     libpcre3-dev     zlib1g-dev     ca-certificates     libssl-dev     zip     libgd2-xpm-dev \u0026\u0026   cd /tmp \u0026\u0026   curl -O http://nginx.org/download/nginx-1.10.0.tar.gz \u0026\u0026   tar -zxf nginx-1.10.0.tar.gz \u0026\u0026   cd nginx-1.10.0 \u0026\u0026   ./configure     --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp     --user=nginx     --group=nginx     --with-http_ssl_module     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_dav_module     --with-http_flv_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_random_index_module     --with-http_secure_link_module     --with-http_stub_status_module     --with-http_auth_request_module     --with-http_image_filter_module     --with-mail     --with-mail_ssl_module     --with-file-aio     --with-http_v2_module     --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2'     --with-ld-opt='-Wl,-z,relro -Wl,--as-needed'     --with-ipv6 \u0026\u0026   make \u0026\u0026   cp /tmp/nginx-1.10.0/objs/nginx /usr/sbin/nginx \u0026\u0026   useradd nginx \u0026\u0026   apt-get --purge autoremove -y --force-yes curl     install-info     build-essential     libpcre3-dev     ca-certificates     libssl-dev     zip \u0026\u0026   apt-get clean \u0026\u0026   rm -rf /var/lib/{apt,dpkg,cache,log}/ /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx",
            "/etc/nginx/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/nginx/conf.d /var/log/nginx \u0026\u0026   ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026   ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/nginx"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        }
      ]
    }
  ]
}