MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Yamada, Yasuhiro <greengregson@gmail.com>
    Name: maintainer
  - Env:
    - Key: DEBFULLNAME
      Value: '"Yamada, Yasuhiro"'
    - Key: DEBEMAIL
      Value: greengregson@gmail.com
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt update && apt install -y sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -d /home/docker -s /bin/bash docker &&      echo "docker ALL=(ALL)
      NOPASSWD:ALL" >> /etc/sudoers
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - Env:
    - Key: HOME
      Value: /home/docker
    Name: env
  - Env:
    - Key: USER_NAME
      Value: docker
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Name: workdir
    Path: /home/docker
  - CmdLine:
    - sudo apt install -y locales &&     sudo localedef -f UTF-8 -i ja_JP ja_JP.utf8
      &&     sudo apt-get -y install tzdata &&     sudo apt install -y git vim curl
      make netcat libreadline-dev nkf bc expect tree inotify-tools sl jq dnsutils
      kakasi mecab mecab-ipadic-utf8 dc     dh-make fakeroot pbuilder     software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y haskell-platform libncurses-dev &&     cabal update &&     cabal
      install egison egison-tutorial
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y build-essential libssl-dev libffi-dev libreadline-dev &&     git
      clone https://github.com/sstephenson/rbenv.git $HOME/.rbenv &&     git clone
      https://github.com/sstephenson/ruby-build.git $HOME/.rbenv/plugins/ruby-build
      &&     $HOME/.rbenv/bin/rbenv install 2.5.0 &&     $HOME/.rbenv/bin/rbenv global
      2.5.0 &&     $HOME/.rbenv/shims/gem install cureutils gist snacknomama matsuya
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y zsh python &&     export ZPLUG_HOME=$HOME/.zplug &&     git
      clone https://github.com/zplug/zplug $ZPLUG_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y dh-autoreconf pkg-config &&     git clone https://github.com/universal-ctags/ctags.git
      $HOME/repos/universal-ctags/ctags &&     cd $HOME/repos/universal-ctags/ctags
      &&     ./autogen.sh &&     ./configure &&     make &&     sudo make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME &&     mkdir $HOME/.go &&     curl -L https://storage.googleapis.com/golang/go1.10.linux-amd64.tar.gz
      | tar zxv &&     sudo mv go /usr/local &&     ls /usr/local/go/bin/ | sed 's;.*;sudo
      ln -s /usr/local/go/bin/& /usr/local/bin/&;' | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME &&     curl -L https://github.com/monochromegane/the_platinum_searcher/releases/download/v2.1.5/pt_linux_amd64.tar.gz
      | tar zxv &&     sudo cp pt_linux_amd64/pt /usr/local/bin &&     rm -rf pt_linux_amd64
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME &&     sudo apt install -y wget &&     wget https://github.com/jhawthorn/fzy/releases/download/0.8/fzy_0.8-1_amd64.deb
      &&     sudo dpkg -i fzy_0.8-1_amd64.deb &&     rm fzy_0.8-1_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME &&     sudo apt install -y g++ &&     git clone https://github.com/ryuichiueda/GlueLang.git
      &&     cd GlueLang &&     make &&     sudo make install &&     cd $HOME &&     rm
      -rf GlueLang
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y libevent-dev ncurses-dev &&     export TMUX_VERSION=2.5
      &&     curl -L "https://github.com/tmux/tmux/releases/download/${TMUX_VERSION}/tmux-${TMUX_VERSION}.tar.gz"
      | tar zxv &&     cd tmux-${TMUX_VERSION} &&     curl -L https://raw.githubusercontent.com/silenvx/PKGBUILD/master/tmux/borders.patch
      > borders.patch &&     patch tty-acs.c < borders.patch &&     ./configure; make
      &&     sudo make install &&     cd .. && rm -rf tmux-${TMUX_VERSION} &&     git
      clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/greymd/tmux-xpanes/master/bin/xpanes
      | sudo tee /usr/bin/xpanes > /dev/null &&     sudo chmod +x /usr/bin/xpanes
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone "git://github.com/creationix/nvm.git" $HOME/.nvm &&     bash -c 'source
      $HOME/.nvm/nvm.sh && nvm install v8.1.4 && npm install --global yarn faker-cli
      emspect'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir "$HOME/bin" &&     git clone https://github.com/ShellShoccar-jpn/Parsrs.git
      "$HOME/Parsrs" &&     bash -c 'ls $HOME/Parsrs/*.sh | while read f;do cp "$f"
      "$HOME/bin/$(basename ${f%.sh})";done' &&     rm -rf "$HOME/Parsrs"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y xvfb x11vnc x11-xkb-utils xfonts-100dpi xfonts-75dpi xfonts-scalable
      xfonts-cyrillic x11-apps                         wget curl git gcc make zip
      libswt-gtk-3-jni &&     curl -s "https://get.sdkman.io" | bash &&     bash -c
      'source "$HOME/.sdkman/bin/sdkman-init.sh" && sdk install java 9ea13-zulu &&
      sdk install java 8u131-zulu && sdk use java 8u131-zulu && sdk install gradle
      4.0.1 && sdk install ant 1.10.1 && sdk install maven 3.5.0'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $HOME/repos/greymd &&     git clone https://github.com/greymd/dotfiles.git
      $HOME/repos/greymd/dotfiles &&     cd $HOME/repos/greymd/dotfiles &&     ls
      -a | grep '^\.'  | grep -vFw '.' | grep -v '^\.git$' | sed 's|^|rm -f $HOME/|'
      | sh &&     ls -a | grep '^\.' | grep -v '^\.git$' | grep -vwF '.' | sed 's/^.*/echo
      ln -s $(pwd)\/& $HOME\/&/' | sh | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $HOME/repos/zsh-users/antigen &&     git clone https://github.com/zsh-users/antigen.git
      $HOME/repos/zsh-users/antigen
    Name: run
    PrependShell: true
  - CmdLine:
    - zsh --rcs $HOME/.zshrc -c 'antigen-update'
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt install -y vim &&     mkdir -p $HOME/.cache/dein &&     curl -L https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh
      > $HOME/installer.sh &&     sh $HOME/installer.sh $HOME/.cache/dein &&     rm
      $HOME/installer.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | vim -c ":silent call dein#install() | :q"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $HOME/.cache/dein/repos/github.com/Shougo/vimproc.vim &&     make
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_TOOL_OPTIONS
      Value: '"-Dfile.encoding=UTF8"'
    Name: env
  - Env:
    - Key: DISPLAY
      Value: :1
    Name: env
  - Env:
    - Key: WORKSPACE
      Value: /home/docker/workspace
    Name: env
  - CmdLine:
    - sudo apt install -y tcpdump iputils-ping ngrep
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: ja_JP.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: ja_JP.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: ja_JP.UTF-8
    Name: env
  - CmdLine:
    - sudo apt clean &&     sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - if ( type Xvfb > /dev/null 2>&1 ) && ! ( ps alx | grep -wq '[X]vfb' ) ;then
      nohup Xvfb :1 -screen 0 1024x768x24 &> /dev/null & fi; zsh -c 'tmux -2'
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
