{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1.32-fpm",
      "SourceCode": "FROM php:7.1.32-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1.32-fpm"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "STAGING_ENV",
              "Value": "prod"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER_UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER_GID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSH_AUTH_SOCK",
              "Value": "/ssh-agent"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SSH_PRIVATE_KEY",
              "Value": "/home/www-data/private_key"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /home/www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends ca-certificates wget         curl         git         ntp         nano         openssh-client         libicu-dev         libz-dev         libpq-dev         libjpeg-dev         libfreetype6-dev         libssl-dev         libxslt-dev         libmcrypt-dev         libmagickwand-dev         supervisor         subversion make g++ python chrpath         \u0026\u0026 rm -r /var/lib/apt/lists/* \u0026\u0026         sed -i 's/^\\(\\[supervisord\\]\\)$/\\1\\nnodaemon=true/' /etc/supervisor/supervisord.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/supervisor/conf.d"
          ]
        },
        {
          "CmdLine": [
            "supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 wget http://curl.haxx.se/ca/cacert.pem \u0026\u0026 mv /tmp/cacert.pem /usr/lib/ssl/cert.pem"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mcrypt bcmath intl pdo_mysql     \u0026\u0026 docker-php-ext-configure bcmath --enable-bcmath     \u0026\u0026 docker-php-ext-configure intl --enable-intl     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 docker-php-ext-configure gd         --enable-gd-native-ttf         --with-jpeg-dir=/usr/lib         --with-freetype-dir=/usr/include/freetype2     \u0026\u0026 docker-php-ext-install mbstring     \u0026\u0026 docker-php-ext-install mysqli     \u0026\u0026 docker-php-ext-install opcache     \u0026\u0026 docker-php-ext-install soap     \u0026\u0026 docker-php-ext-install exif     \u0026\u0026 docker-php-ext-install xsl     \u0026\u0026 docker-php-ext-install pcntl     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 pecl install imagick-beta     \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 php -r \"readfile('https://getcomposer.org/installer');\" | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 chmod +x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=mongodb.so\" \u003e /usr/local/etc/php/conf.d/mongodb.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_VERSION",
              "Value": "2.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pecl install channel://pecl.php.net/xdebug-${XDEBUG_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Europe/Paris\" \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"date.timezone=${PHP_TIMEZONE:-UTC}\" \u003e $PHP_INI_DIR/conf.d/date_timezone.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"memory_limit=-1\" \u003e $PHP_INI_DIR/conf.d/memory-limit.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/local/bin/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}