{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Atreya Shankar\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "OPENCV_VERSION",
          "Name": "arg",
          "Value": "\"3.3.1\""
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y build-essential checkinstall cmake pkg-config yasm git gfortran g++ libjpeg8-dev libjasper-dev libpng12-dev libtiff5-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "git clone https://github.com/opencv/opencv.git \u0026\u0026 cd opencv \u0026\u0026 git checkout $OPENCV_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/opencv/opencv_contrib.git \u0026\u0026 cd opencv_contrib \u0026\u0026 git checkout $OPENCV_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine2-dev libv4l-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev qt5-default libgtk2.0-dev libtbb-dev libatlas-base-dev libfaac-dev libmp3lame-dev libtheora-dev libvorbis-dev libxvidcore-dev libopencore-amrnb-dev libopencore-amrwb-dev x264 v4l-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python3-dev python3-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install -U pip numpy scipy matplotlib scikit-image scikit-learn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y software-properties-common apt-transport-https"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:openjdk-r/ppa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y r-base tesseract-ocr libtesseract-dev imagemagick libpoppler-cpp-dev openjdk-8-jdk"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp/opencv"
        },
        {
          "CmdLine": [
            "mkdir /tmp/opencv/build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp/opencv/build"
        },
        {
          "CmdLine": [
            "cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D INSTALL_PYTHON_EXAMPLES=ON -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make -j3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh -c 'echo \"/usr/local/lib\" \u003e\u003e /etc/ld.so.conf.d/opencv.conf'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libcurl4-openssl-dev libmagick++-dev libleptonica-dev nano"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e 'install.packages(\"pdftools\"); install.packages(\"tesseract\"); install.packages(\"png\"); install.packages(\"magick\")'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libcanberra-gtk-module libcanberra-gtk3-module"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home"
        },
        {
          "CmdLine": [
            "export uid=1000 gid=1000 \u0026\u0026     mkdir -p /etc/sudoers.d \u0026\u0026     echo \"developer:x:${uid}:${gid}:Developer,,,:/home:/bin/bash\" \u003e\u003e /etc/passwd \u0026\u0026     echo \"developer:x:${uid}:\" \u003e\u003e /etc/group \u0026\u0026     echo \"developer ALL=(ALL) NOPASSWD: ALL\" \u003e /etc/sudoers.d/developer \u0026\u0026     chmod 0440 /etc/sudoers.d/developer \u0026\u0026     chown ${uid}:${gid} -R /home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "developer"
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}