{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-apache",
      "SourceCode": "FROM php:7.1-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1-apache"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/bashrc",
            "/root/"
          ]
        },
        {
          "CmdLine": [
            "mv /root/bashrc /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --fix-missing wget -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://packages.dotdeb.org jessie all\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb-src http://packages.dotdeb.org jessie all\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 wget https://www.dotdeb.org/dotdeb.gpg \u0026\u0026 apt-key add dotdeb.gpg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --fix-missing -y   apt-transport-https   apt-utils   cloc   imagemagick   graphviz   git   libicu-dev   libmemcached-tools   libmemcached-dev   libpng12-dev   libjpeg62-turbo-dev   libmcrypt-dev   libxml2-dev   libxslt1-dev   libyaml-dev   linux-libc-dev   mysql-client   nano   ruby-dev   rubygems   sudo   tree   vim   wget   zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 git clone https://github.com/php-memcached-dev/php-memcached.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/php-memcached \u0026\u0026 sudo git checkout php7 \u0026\u0026 phpize \u0026\u0026 ./configure --disable-memcached-sasl \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /usr/local/etc/php/conf.d/memcached.ini \u0026\u0026 echo \"extension=/usr/local/lib/php/extensions/no-debug-non-zts-20160303/memcached.so\" \u003e\u003e /usr/local/etc/php/conf.d/memcached.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-php-ext-install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ \u0026\u0026 docker-php-ext-install   calendar   exif   gd   intl   mbstring   mcrypt   opcache   pdo_mysql   soap   xsl   zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "core/memcached.conf",
            "/etc/memcached.conf"
          ]
        },
        {
          "CmdLine": [
            "gem install sass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install compass"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | sudo bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get -yq --no-install-recommends install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g less \u0026\u0026 npm install -g less-plugin-clean-css"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g gulp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src \u0026\u0026 curl -sS http://getcomposer.org/installer | php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src \u0026\u0026 mv composer.phar /usr/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ \u0026\u0026 wget http://xdebug.org/files/xdebug-2.5.4.tgz \u0026\u0026 tar -xvzf xdebug-2.5.4.tgz \u0026\u0026 cd xdebug-2.5.4/ \u0026\u0026 phpize \u0026\u0026 ./configure --enable-xdebug --with-php-config=/usr/local/bin/php-config \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/xdebug-2.5.4 \u0026\u0026 cp modules/xdebug.so /usr/local/lib/php/extensions/no-debug-non-zts-20160303/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'zend_extension = /usr/local/lib/php/extensions/no-debug-non-zts-20160303/xdebug.so' \u003e\u003e /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026  echo xdebug.remote_enable=1 \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026  echo xdebug.remote_autostart=0 \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026  echo xdebug.remote_connect_back=1 \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026  echo xdebug.remote_port=9000 \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini \u0026\u0026  echo xdebug.remote_log=/tmp/php5-xdebug.log \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/www/html \u0026\u0026   mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html \u0026\u0026   chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require drupal/coder"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s ~/.composer/vendor/bin/phpcs /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s ~/.composer/vendor/bin/phpcbf /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install --fix-missing -y ssmtp \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "core/ssmtp.conf",
            "/etc/ssmtp/ssmtp.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "core/php-smtp.ini",
            "/usr/local/etc/php/conf.d/php-smtp.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/apache2.conf",
            "/etc/apache2"
          ]
        },
        {
          "CmdLine": [
            "(   echo \"opcache.memory_consumption=128\";   echo \"opcache.interned_strings_buffer=8\";   echo \"opcache.max_accelerated_files=4000\";   echo \"opcache.revalidate_freq=2\";   echo \"opcache.fast_shutdown=1\";   echo \"opcache.enable_cli=1\";   ) \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite expires \u0026\u0026 service apache2 restart"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require phpmd/phpmd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s ~/.composer/vendor/bin/phpmd /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "CmdLine": [
            "mkdir /var/www/.ssh/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/www/.ssh/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 600 /var/www/.ssh/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80",
            "9000"
          ]
        }
      ]
    }
  ]
}