{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "fedora:30",
      "SourceCode": "FROM fedora:30",
      "Platform": "",
      "From": {
        "Image": "fedora:30"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "aallrd"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GROUP",
              "Value": "aallrd"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/aallrd"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOSTNAME",
              "Value": "fooswan"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "screen-256color"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-o",
            "pipefail",
            "-c"
          ]
        },
        {
          "CmdLine": [
            "echo \"fastestmirror=true\" \u003e\u003e /etc/dnf/dnf.conf     \u0026\u0026 echo \"timeout=500\" \u003e\u003e /etc/yum.conf     \u0026\u0026 echo \"minrate=1\" \u003e\u003e /etc/yum.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dnf -y update     \u0026\u0026 dnf -y upgrade     \u0026\u0026 dnf -y install       basesystem        bash       coreutils       sed       gawk       grep       gzip       tar       unzip       curl       wget       less       sudo       hostname       which       xz       gettext       git       ctags       elfutils       indent       bzip2       cpio       findutils       info       make       cmake       autoconf       automake       binutils       bison       flex       gcc       gcc-c++       gdb       glibc       glibc-common       glibc-devel       glibc-langpack-en       libtool       pkgconf       patch       diffutils       ncurses       util-linux       vim-minimal       audit       filesystem       rootfiles       initscripts       dhcp-client       dnf       dnf-yum       iproute       iputils       kbd       man-db       openssh-clients       openssh-server       passwd       sssd-common       sssd-kcm       systemd       rpm       shadow-utils       util-linux-user     \u0026\u0026 dnf clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo ${HOSTNAME} \u003e /etc/hostname     \u0026\u0026 groupadd -g 1000 ${GROUP}     \u0026\u0026 useradd -u 1000 -r --gid 1000 -G wheel -m -d ${HOME} -s /bin/bash -c \"System User\" ${USER}     \u0026\u0026 echo ${USER}:${USER} | chpasswd     \u0026\u0026 sed -i 's/^#\\s*\\(%wheel\\s\\+ALL=(ALL)\\s\\+NOPASSWD:\\s\\+ALL\\)/\\1/' /etc/sudoers     \u0026\u0026 chmod -R 755 ${HOME}     \u0026\u0026 chsh --shell /bin/bash ${USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NOTVISIBLE",
              "Value": "\"in users profile\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/sshd     \u0026\u0026 sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd     \u0026\u0026 echo \"export VISIBLE=now\" \u003e\u003e /etc/profile     \u0026\u0026 /usr/bin/ssh-keygen -A"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${USER}"
        },
        {
          "Name": "workdir",
          "Path": "${HOME}"
        },
        {
          "Key": "CACHEBUST",
          "Name": "arg",
          "Value": "1"
        },
        {
          "CmdLine": [
            "curl -fsSL https://raw.githubusercontent.com/aallrd/dotfiles/master/bootstrap | bash \u0026\u0026 cd ~/dotfiles \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start_sshd.sh",
            "/tmp/start_sshd.sh"
          ]
        },
        {
          "CmdLine": [
            "/tmp/start_sshd.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}