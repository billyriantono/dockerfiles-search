MetaArgs: null
Stages:
- BaseName: ubuntu:precise
  Commands:
  - Maintainer: Caner Candan <caner@candan.fr>
    Name: maintainer
  - Env:
    - Key: TEMPDIR
      Value: /tmp
    Name: env
  - Env:
    - Key: HOST
      Value: x86_64-w64-mingw32
    Name: env
  - Env:
    - Key: INSTALLPREFIX
      Value: /staging64
    Name: env
  - Env:
    - Key: ROOTDIR
      Value: /build
    Name: env
  - Env:
    - Key: BUILDDIR
      Value: /build64
    Name: env
  - Env:
    - Key: INPUTS
      Value: /build/inputs
    Name: env
  - Env:
    - Key: BITS
      Value: "64"
    Name: env
  - Env:
    - Key: OUTDIR
      Value: /out
    Name: env
  - Env:
    - Key: TEMPDIR
      Value: /build/tmp
    Name: env
  - Env:
    - Key: OPTFLAGS
      Value: -O2
    Name: env
  - Env:
    - Key: DEPSDIR
      Value: /deps64
    Name: env
  - Env:
    - Key: BITCOINDIR
      Value: /build/bitcoin
    Name: env
  - Env:
    - Key: DISTSRCDIR
      Value: /build64/distsrc
    Name: env
  - Env:
    - Key: DISTBINDIR
      Value: /dist
    Name: env
  - Env:
    - Key: BINDIR
      Value: /out/64
    Name: env
  - Name: workdir
    Path: /build
  - CmdLine:
    - "mkdir -p $ROOTDIR $INSTALLPREFIX $BUILDDIR $OUTDIR $TEMPDIR $INPUTS $INSTALLPREFIX/host/bin
      \    \t     $DEPSDIR $BINDIR $BITCOINDIR $DISTSRCDIR $DISTBINDIR"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get -qq update &&     apt-get install -qqy mingw-w64 g++-mingw-w64 git-core
      unzip nsis     \t    \t    \t faketime autoconf2.13 libtool automake pkg-config
      \t\t\t bsdmainutils wget bzip2 zip psmisc build-essential \t\t\t unzip libz-dev"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: inputs
  - CmdLine:
    - '{     wget -q ''http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.9.tar.gz''
      -O miniupnpc-1.9.tar.gz &&     wget -q ''https://www.openssl.org/source/openssl-1.0.1h.tar.gz''
      &&     wget -q ''http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz''
      &&     wget -q ''http://zlib.net/zlib-1.2.8.tar.gz'' &&     wget -q ''ftp://ftp.simplesystems.org/pub/png/src/history/libpng16/libpng-1.6.8.tar.gz''
      &&     wget -q ''https://fukuchi.org/works/qrencode/qrencode-3.4.3.tar.bz2''
      &&     wget -q ''https://downloads.sourceforge.net/project/boost/boost/1.55.0/boost_1_55_0.tar.bz2''
      &&     wget -q ''https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch''
      -O boost-mingw-gas-cross-compile-2013-03-03.patch &&     wget -q ''https://download.qt-project.org/official_releases/qt/5.2/5.2.0/single/qt-everywhere-opensource-src-5.2.0.tar.gz''
      &&     wget -q ''https://download.qt-project.org/official_releases/qt/5.2/5.2.1/single/qt-everywhere-opensource-src-5.2.1.tar.gz''
      &&     wget -q ''https://download.qt-project.org/archive/qt/4.6/qt-everywhere-opensource-src-4.6.4.tar.gz''
      &&     wget -q ''https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2''
      &&     wget -q ''https://github.com/mingwandroid/toolchain4/archive/10cc648683617cca8bcbeae507888099b41b530c.tar.gz''
      &&     wget -q ''http://www.opensource.apple.com/tarballs/cctools/cctools-809.tar.gz''
      &&     wget -q ''http://www.opensource.apple.com/tarballs/dyld/dyld-195.5.tar.gz''
      &&     wget -q ''http://www.opensource.apple.com/tarballs/ld64/ld64-127.2.tar.gz''
      &&     wget -q ''http://pkgs.fedoraproject.org/repo/pkgs/cdrkit/cdrkit-1.1.11.tar.gz/efe08e2f3ca478486037b053acd512e9/cdrkit-1.1.11.tar.gz''
      &&     wget -q ''https://github.com/theuni/libdmg-hfsplus/archive/libdmg-hfsplus-v0.1.tar.gz''
      &&     wget -q ''http://llvm.org/releases/3.2/clang+llvm-3.2-x86-linux-ubuntu-12.04.tar.gz''
      -O clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz &&     wget -q ''https://raw.githubusercontent.com/theuni/osx-cross-depends/master/patches/cdrtools/genisoimage.diff''
      -O cdrkit-deterministic.patch;     }'
    Name: run
    PrependShell: true
  - CmdLine:
    - '{     echo "fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2"
      | shasum -c &&     echo "d2b7f6a1d7051faef3c9cf41a92fa3671d905ef1e1da920d07651a43299f6268  boost-mingw-gas-cross-compile-2013-03-03.patch"
      | shasum -c &&     echo "9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz"  |
      sha256sum -c &&     echo "12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz"    |
      sha256sum -c &&     echo "2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz"   |
      sha256sum -c &&     echo "36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d  zlib-1.2.8.tar.gz"      |
      sha256sum -c &&     echo "32c7acf1608b9c8b71b743b9780adb7a7b347563dbfb4a5263761056da44cc96  libpng-1.6.8.tar.gz"    |
      sha256sum -c &&     echo "dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2"
      | sha256sum -c &&     echo "395ec72277c5786c65b8163ef5817fd03d0a1f524a6d47f53624baf8056f1081  qt-everywhere-opensource-src-5.2.0.tar.gz"
      | sha256sum -c &&     echo "13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2"
      | sha256sum -c;     }'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /build64
  - CmdLine:
    - '{     tar --warning=no-timestamp -xjf $INPUTS/boost_1_55_0.tar.bz2 &&     tar
      xzf $INPUTS/openssl-1.0.1h.tar.gz &&     tar xzf $INPUTS/db-4.8.30.NC.tar.gz
      &&     tar xzf $INPUTS/miniupnpc-1.9.tar.gz &&     tar xzf $INPUTS/zlib-1.2.8.tar.gz
      &&     tar xzf $INPUTS/libpng-1.6.8.tar.gz &&     tar xjf $INPUTS/qrencode-3.4.3.tar.bz2
      &&     tar xzf $INPUTS/qt-everywhere-opensource-src-5.2.0.tar.gz &&     tar
      xjf $INPUTS/protobuf-2.5.0.tar.bz2;     }'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: boost_1_55_0
  - CmdLine:
    - '{     echo "using gcc : $($HOST-g++ -E -dM $(mktemp --suffix=.h) | grep __VERSION__
      | cut -d '' '' -f 3 | cut -d ''"'' -f 2) : $HOST-g++";     echo "    :";     echo
      "    <rc>$HOST-windres";     echo "    <archiver>$HOST-ar";     echo "    <cxxflags>-frandom-seed=boost1";     echo
      "    <ranlib>$HOST-ranlib";     echo ";";     } > user-config.jam'
    Name: run
    PrependShell: true
  - CmdLine:
    - ./bootstrap.sh --without-icu
    Name: run
    PrependShell: true
  - CmdLine:
    - patch -p0 < $INPUTS/boost-mingw-gas-cross-compile-2013-03-03.patch
    Name: run
    PrependShell: true
  - CmdLine:
    - '{     sed -i ''s^\[ ac.check-library /zlib//zlib : <library>/zlib//zlib^^''
      libs/iostreams/build/Jamfile.v2 &&     sed -i ''s^<source>zlib.cpp <source>gzip.cpp
      \]^^'' libs/iostreams/build/Jamfile.v2;     }'
    Name: run
    PrependShell: true
  - CmdLine:
    - ./bjam toolset=gcc binary-format=pe target-os=windows threadapi=win32     address-model=$BITS
      threading=multi variant=release link=static     runtime-link=static --user-config=user-config.jam
      --without-mpi     --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged     --build-type=complete
      --prefix="$INSTALLPREFIX" $MAKEOPTS install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ../openssl-1.0.1h
  - Env:
    - Key: OPENSSL_TGT
      Value: mingw64
    Name: env
  - CmdLine:
    - '{     ./Configure --cross-compile-prefix=$HOST- ${OPENSSL_TGT} no-shared no-dso
      --openssldir=$INSTALLPREFIX &&     make && make install_sw;     }'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ../db-4.8.30.NC/build_unix
  - CmdLine:
    - '{     ../dist/configure --prefix=$INSTALLPREFIX --enable-mingw --enable-cxx
      --host=$HOST --disable-shared &&     make $MAKEOPTS library_build &&     make
      install_lib install_include;     }'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ../../miniupnpc-1.9
  - Chown: ""
    Name: add
    SourcesAndDest:
    - miniupnpc-1.9.patch
    - /build64/miniupnpc-1.9/
  - CmdLine:
    - '{     sed -i "s/VERSIONHERE/$(cat VERSION)/" miniupnpc-1.9.patch &&     patch
      -p1 < miniupnpc-1.9.patch &&     mkdir -p dll &&     make -f Makefile.mingw
      CC=$HOST-gcc AR=$HOST-ar libminiupnpc.a &&     install -d $INSTALLPREFIX/include/miniupnpc
      &&     install *.h $INSTALLPREFIX/include/miniupnpc &&     install libminiupnpc.a  $INSTALLPREFIX/lib;     }'
    Name: run
    PrependShell: true
  - CmdLine:
    - '{     cd $BUILDDIR/zlib-1.2.8 &&     CROSS_PREFIX=$HOST- ./configure --prefix=$INSTALLPREFIX
      --static &&     make && make install;     }'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ../libpng-1.6.8
  - CmdLine:
    - '{     CPPFLAGS="${OPTFLAGS} -I$INSTALLPREFIX/include" CFLAGS="${OPTFLAGS} -I$INSTALLPREFIX/include"
      LDFLAGS="${OPTFLAGS} -L$INSTALLPREFIX/lib" ./configure --disable-shared --prefix=$INSTALLPREFIX
      --host=$HOST &&     make $MAKEOPTS && make install;     }'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ../qrencode-3.4.3
  - CmdLine:
    - '{     png_CFLAGS="-I$INSTALLPREFIX/include" png_LIBS="-L$INSTALLPREFIX/lib
      -lpng" ./configure --prefix=$INSTALLPREFIX --host=$HOST --enable-static --disable-shared
      --without-tools --disable-dependency-tracking &&     find . -print0 | xargs
      -r0 touch -t 200001010000 &&     make && make install;     }'
    Name: run
    PrependShell: true
  - Env:
    - Key: QT_RCC_TEST
      Value: "1"
    Name: env
  - Name: workdir
    Path: ../qt-everywhere-opensource-src-5.2.0
  - Env:
    - Key: SPECNAME
      Value: win32-g++
    Name: env
  - Env:
    - Key: SPECFILE
      Value: qtbase/mkspecs/win32-g++/qmake.conf
    Name: env
  - CmdLine:
    - '{     sed ''s/qt_instdate=`date +%Y-%m-%d`/qt_instdate=2011-01-30/'' -i qtbase/configure
      &&     sed --posix "s|QMAKE_CFLAGS            = -pipe -fno-keep-inline-dllexport|QMAKE_CFLAGS\t\t=
      -pipe -fno-keep-inline-dllexport -isystem /usr/$HOST/include/ -frandom-seed=qtbuild
      -I$INSTALLPREFIX/include|" -i ${SPECFILE} &&     sed --posix "s|QMAKE_LFLAGS            =|QMAKE_LFLAGS\t\t=
      -L$INSTALLPREFIX/lib|" -i ${SPECFILE} &&     OPENSSL_LIBS="-L$INSTALLPREFIX/lib
      -lssl -lcrypto -lgdi32" ./configure -prefix $INSTALLPREFIX -bindir $INSTALLPREFIX/host/bin
      -confirm-license -release -opensource -static -xplatform $SPECNAME -device-option
      CROSS_COMPILE="$HOST-" -no-audio-backend -no-javascript-jit -no-sql-sqlite -no-sql-odbc
      -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-opengl -no-compile-examples
      -no-feature-style-windowsce -no-feature-style-windowsmobile -no-qml-debug -openssl-linked
      -skip qtsvg -skip qtwebkit -skip qtwebkit-examples -skip qtserialport -skip
      qtdeclarative -skip qtmultimedia -skip qtimageformats -skip qtlocation -skip
      qtsensors -skip qtquick1 -skip qtquickcontrols -skip qtactiveqt -skip qtconnectivity
      -skip qtwinextras -skip qtxmlpatterns -skip qtscript -skip qtdoc -system-libpng
      -system-zlib -continue &&     make $MAKEOPTS install;     }'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /staging64
  - CmdLine:
    - '{     rm host/bin/qtpaths.exe lib/libQt5Bootstrap.a lib/libQt5Bootstrap.la
      &&     find -print0 | xargs -r0 touch;     }'
    Name: run
    PrependShell: true
  - Env:
    - Key: QT_RCC_TEST
      Value: "1"
    Name: env
  - CmdLine:
    - export PATH=$INSTALLPREFIX/host/bin:$PATH
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /build64/protobuf-2.5.0
  - CmdLine:
    - '{     ./configure --enable-shared=no --disable-dependency-tracking --without-zlib
      CXXFLAGS="-frandom-seed=11 ${OPTFLAGS}" &&     make &&     cp src/protoc $INSTALLPREFIX/host/bin
      &&     make distclean &&     ./configure --prefix=$INSTALLPREFIX --enable-shared=no
      --disable-dependency-tracking --without-zlib --with-protoc=$INSTALLPREFIX/host/bin/protoc
      --host=$HOST CXXFLAGS="-frandom-seed=11 ${OPTFLAGS}" &&     make && make install;     }'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /build/bitcoin
  - CmdLine:
    - '{     git clone https://github.com/bitcoin/bitcoin.git . &&     ./autogen.sh
      &&     ./configure --bindir=$OUTDIR --prefix=$INSTALLPREFIX --host=$HOST --with-qt-plugindir=$INSTALLPREFIX/plugins  --with-qt-incdir=$INSTALLPREFIX/include
      --with-qt-bindir=$INSTALLPREFIX/host/bin --with-boost=$INSTALLPREFIX --disable-maintainer-mode
      --with-protoc-bindir=$INSTALLPREFIX/host/bin --disable-dependency-tracking CPPFLAGS="-I$INSTALLPREFIX/include
      ${OPTFLAGS}" LDFLAGS="-L$INSTALLPREFIX/lib ${OPTFLAGS}" CXXFLAGS="-frandom-seed=bitcoin
      ${OPTFLAGS}" &&     make dist;     }'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /build64/distsrc
  - CmdLine:
    - '{     tar --strip-components=1 -xf /build/bitcoin/`echo bitcoin-*.tar.gz` &&     ./configure
      --enable-upnp-default --bindir=$BINDIR --prefix=$INSTALLPREFIX --host=$HOST
      --with-qt-plugindir=$INSTALLPREFIX/plugins  --with-qt-incdir=$INSTALLPREFIX/include
      --with-qt-bindir=$INSTALLPREFIX/host/bin --with-boost=$INSTALLPREFIX --disable-maintainer-mode
      --with-protoc-bindir=$INSTALLPREFIX/host/bin --disable-dependency-tracking CPPFLAGS="-I$INSTALLPREFIX/include
      ${OPTFLAGS}" LDFLAGS="-L$INSTALLPREFIX/lib ${OPTFLAGS}" CXXFLAGS="-frandom-seed=bitcoin
      ${OPTFLAGS}" &&     make $MAKEOPTS && make deploy && make install-strip &&     cp
      -f bitcoin-*setup*.exe $BINDIR/;     }'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /build/bitcoin
  - CmdLine:
    - '{     DISTNAME=`echo bitcoin-*.tar.gz` &&     mkdir -p $OUTDIR/src &&     rm
      -rf $TEMPDIR &&     mkdir -p $TEMPDIR &&     cd $TEMPDIR &&     tar -xvf /build/bitcoin/$DISTNAME
      | sort | tar --no-recursion -cT /dev/stdin --mode=''u+rw,go+r-w,a+X'' --owner=0
      --group=0 | gzip -n > $OUTDIR/src/$DISTNAME;     }'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /dist
  - Name: volume
    Volumes:
    - /dist
  - CmdLine:
    - cp -a $OUTDIR/* $DISTBINDIR/
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:precise
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:precise
