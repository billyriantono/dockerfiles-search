{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:testing-slim",
      "SourceCode": "FROM       debian:testing-slim",
      "Platform": "",
      "From": {
        "Image": "debian:testing-slim"
      },
      "Commands": [
        {
          "Maintainer": "Florian Oetke",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install -y --no-install-recommends git git-lfs ninja-build make binutils-gold xorg-dev xutils-dev libsdl2-dev libsdl2-mixer-dev libsdl2-image-dev cmake wget xz-utils ca-certificates gcc-8 g++-8 libstdc++-8-dev clang-7 libc++-dev libc++abi-dev clang-tools-7 lld-7 python2 python \u0026\u0026 \tupdate-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-7 100 \u0026\u0026 \tupdate-alternatives --install /usr/bin/clang clang /usr/bin/clang-7 100 \u0026\u0026 \tupdate-alternatives --install /usr/bin/g++ g++ /usr/bin/x86_64-linux-gnu-g++-8 100 \u0026\u0026 \tupdate-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100 \u0026\u0026 \tupdate-alternatives --install /usr/bin/scan-build scan-build /usr/bin/scan-build-7 100 \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/clang-check \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/clang-import-test \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/clang-query \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/clang-refactor \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/clangd \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/clang-change-namespace \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/clang-include-fixer \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/find-all-symbols \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/clang-rename \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/clang-reorder-fields \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/c-index-test \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/modularize \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/clang-func-mapping \u0026\u0026 \trm -f /usr/lib/llvm-6.0/bin/clang-apply-replacements \u0026\u0026 \trm -f /usr/lib/llvm-6.0/lib/libLLV*.a \u0026\u0026 \tgit clone https://github.com/google/shaderc \u0026\u0026 \tcd shaderc \u0026\u0026 \tgit checkout a84571caead1f963701fd6ff859a32c4b2d5a702 \u0026\u0026 \tgit clone https://github.com/google/googletest.git third_party/googletest \u0026\u0026 \tcd third_party/googletest \u0026\u0026 git checkout 440527a61e1c91188195f7de212c63c77e8f0a45 \u0026\u0026 cd ../.. \u0026\u0026 \tgit clone https://github.com/google/glslang.git third_party/glslang \u0026\u0026 \tcd third_party/glslang \u0026\u0026 git checkout 91ac4290bcf2cb930b4fb0981f09c00c0b6797e1 \u0026\u0026 cd ../.. \u0026\u0026 \tgit clone https://github.com/KhronosGroup/SPIRV-Tools.git third_party/spirv-tools \u0026\u0026 \tcd third_party/spirv-tools \u0026\u0026 git checkout ad0232dee5f5c15a5713d5b14e1763fcca6b02b8 \u0026\u0026 cd ../.. \u0026\u0026 \tgit clone https://github.com/KhronosGroup/SPIRV-Headers.git third_party/spirv-tools/external/spirv-headers \u0026\u0026 \tcd third_party/spirv-tools/external/spirv-headers \u0026\u0026 git checkout d5b2e1255f706ce1f88812217e9a554f299848af \u0026\u0026 cd ../../../.. \u0026\u0026 \tmkdir build \u0026\u0026 cd build \u0026\u0026 \tcmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local .. \u0026\u0026 \tcmake --build . -- -j2 install \u0026\u0026 \tcd ../.. \u0026\u0026 rm -rf shaderc \u0026\u0026 \tgit clone --recursive https://github.com/KhronosGroup/Vulkan-Hpp.git \u0026\u0026     cd Vulkan-Hpp \u0026\u0026 \tgit checkout eaf0fda6de05628efa009b465124e9cfaca74832 \u0026\u0026 \tcd Vulkan-Docs \u0026\u0026 \tgit checkout v1.1.73 \u0026\u0026 \tcd .. \u0026\u0026 \tmkdir build \u0026\u0026 cd build \u0026\u0026 \tcmake .. \u0026\u0026 cmake --build . \u0026\u0026 ./VulkanHppGenerator \u0026\u0026 \twget --no-check-certificate -O VulkanSDK.run https://vulkan.lunarg.com/sdk/download/1.1.73.0/linux/vulkansdk-linux-x86_64-1.1.73.0.run?Human=true \u0026\u0026 \tchmod ugo+x VulkanSDK.run \u0026\u0026 \t./VulkanSDK.run --target /VulkanSDK \u0026\u0026 rm -f VulkanSDK.run \u0026\u0026 \tcp ../vulkan/vulkan.hpp /VulkanSDK/1.1.73.0/x86_64/include/vulkan/ \u0026\u0026 \tcd ../.. \u0026\u0026 \trm -r Vulkan-Hpp \u0026\u0026 \tapt-get purge -y gdb man vim-common python3 python2 locales \u0026\u0026 \tapt-get autoremove -y \u0026\u0026 \tapt-get install -y --no-install-recommends libsdl2-dev libsdl2-mixer-dev libsdl2-image-dev \u0026\u0026 \tapt-get clean \u0026\u0026 \trm -rf /var/lib/apt/lists/* \u0026\u0026 \trm -rf /VulkanSDK/1.1.73.0/doc \u0026\u0026 \trm -rf /VulkanSDK/1.1.73.0/source"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "VULKAN_SDK",
              "Value": "\"/VulkanSDK/1.1.73.0/x86_64\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${VULKAN_SDK}/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "\"${VULKAN_SDK}/lib:${LD_LIBRARY_PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VK_LAYER_PATH",
              "Value": "\"${VULKAN_SDK}/etc/explicit_layer.d\""
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}