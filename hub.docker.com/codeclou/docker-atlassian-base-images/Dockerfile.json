{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8u181-alpine3.8",
      "SourceCode": "FROM openjdk:8u181-alpine3.8",
      "Platform": "",
      "From": {
        "Image": "openjdk:8u181-alpine3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CONFLUENCE_VERSION",
              "Value": "6.14.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "$LD_LIBRARY_PATH:/usr/lib/jvm/java-1.8-openjdk/lib/amd64/:/usr/lib/:/lib/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache libgcc                        ttf-dejavu                        fontconfig                        libgcc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/test-fontconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "test.ttf",
            "/opt/test-fontconfig/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "TestFontConfig.java",
            "/opt/test-fontconfig/"
          ]
        },
        {
          "CmdLine": [
            "cd /opt/test-fontconfig/ \u0026\u0026     javac TestFontConfig.java \u0026\u0026     java -Dsun.java2d.debugfonts=true -cp . TestFontConfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -g 10777 worker \u0026\u0026     adduser -h /work -H -D -G worker -u 10777 worker \u0026\u0026     mkdir -p /work \u0026\u0026     mkdir -p /work-private \u0026\u0026     mkdir /confluence \u0026\u0026 mkdir /confluence-home \u0026\u0026 mkdir /confluence-shared-home \u0026\u0026     chown -R worker:worker /work/ \u0026\u0026     chown -R worker:worker /work-private/ \u0026\u0026     apk add --no-cache             bash             musl-utils             curl             tar             postgresql             postgresql-client             python             py-pip \u0026\u0026             pip install shinto-cli \u0026\u0026     curl -jkSL -o /opt/confluence.tar.gz          https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-${CONFLUENCE_VERSION}.tar.gz  \u0026\u0026     tar zxf /opt/confluence.tar.gz -C /confluence \u0026\u0026     cd /confluence \u0026\u0026     ln -s atlassian-confluence-${CONFLUENCE_VERSION} atlassian-confluence-latest \u0026\u0026     rm /opt/confluence.tar.gz \u0026\u0026     chown -R worker:worker /confluence \u0026\u0026     chown -R worker:worker /confluence-home/ \u0026\u0026     chown -R worker:worker /confluence-shared-home \u0026\u0026     echo -e \"\\nconfluence.home=/confluence-home/\" \u003e\u003e /confluence/atlassian-confluence-latest/confluence/WEB-INF/classes/confluence-init.properties"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}