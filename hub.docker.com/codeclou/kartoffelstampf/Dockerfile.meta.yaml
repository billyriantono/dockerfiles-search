MetaArgs: null
Stages:
- BaseName: node:11.6.0-alpine
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /opt/docker-entrypoint.sh
  - CmdLine:
    - echo "@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - echo  >> /etc/apk/repositories &&     apk add --no-cache             bash             wget             gzip             exiftool             fbida-exiftran             jpegoptim@testing             pngquant@testing             imagemagick             optipng
      &&     mkdir -p /u/ &&     mkdir -p /opt/npm/ &&     mkdir -p /opt/node/ &&     mkdir
      -p /opt/npm/uploads &&     mkdir -p /opt/npm/app &&     addgroup -g 10777 nodeworker
      &&     adduser -D -G nodeworker -u 10777 nodeworker &&     chmod u+rx,g+rx,o+rx,a-w
      /opt/docker-entrypoint.sh &&     chown -R nodeworker:nodeworker /opt/npm &&     chown
      -R nodeworker:nodeworker /u
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps             libstdc++             binutils-gold             curl             g++             gcc             gnupg             libgcc             linux-headers             make             git
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/optipng-build/ &&     wget -O /opt/optipng-0.7.6.zip https://codeclou.github.io/kartoffelstampf/repo/optipng-0.7.6-patched.zip
      &&     unzip /opt/optipng-0.7.6.zip -d /opt/optipng-build/ &&     cd /opt/optipng-build/optipng-0.7.6/
      &&     ./configure  &&     make  &&     make install  &&     rm -rf /opt/optipng-build/
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps-gflags cmake &&     mkdir -p /opt/build/gflags/gflags-2.2.0
      &&     wget -O /opt/build/gflags/gflags-2.2.0.zip https://codeclou.github.io/kartoffelstampf/repo/gflags-2.2.0-pre-configured-cmake.zip
      &&     unzip /opt/build/gflags/gflags-2.2.0.zip -d /opt/build/gflags/gflags-2.2.0
      &&     cd /opt/build/gflags/gflags-2.2.0 &&     make &&     make install &&     rm
      -rf /opt/build/gflags/
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps-guetzli libpng libpng-dev &&     mkdir
      -p /opt/build/guetzli/guetzli-1.0 &&     wget -O /opt/build/guetzli/guetzli-1.0.zip
      https://github.com/google/guetzli/archive/v1.0.zip &&     unzip /opt/build/guetzli/guetzli-1.0.zip
      -d /opt/build/guetzli/guetzli-1.0 &&     cd /opt/build/guetzli/guetzli-1.0/guetzli-1.0
      &&     make &&     mv /opt/build/guetzli/guetzli-1.0/guetzli-1.0/bin/Release/guetzli
      /usr/local/bin &&     rm -rf /opt/build/guetzli/
    Name: run
    PrependShell: true
  - Name: user
    User: nodeworker
  - Env:
    - Key: KARTOFFELSTAMPF_SERVER_VERSION
      Value: v2.3.0
    Name: env
  - Env:
    - Key: KARTOFFELSTAMPF_CLIENT_VERSION
      Value: v2.3.0
    Name: env
  - CmdLine:
    - wget -O /opt/npm/kartoffelstampf-server.zip https://github.com/codeclou/kartoffelstampf-server/releases/download/${KARTOFFELSTAMPF_SERVER_VERSION}/dist.zip
      &&     unzip /opt/npm/kartoffelstampf-server.zip -d /opt/npm/app/ &&     rm
      -f /opt/npm/kartoffelstampf-server.zip  &&     ls -lah /opt/npm/app/ &&     mkdir
      /opt/npm/public/ &&     wget -O /opt/npm/kartoffelstampf-client.zip https://github.com/codeclou/kartoffelstampf-client/releases/download/${KARTOFFELSTAMPF_CLIENT_VERSION}/dist.zip
      &&     unzip /opt/npm/kartoffelstampf-client.zip -d /opt/npm/public/ &&     rm
      -f /opt/npm/kartoffelstampf-client.zip  &&     ls -lah /opt/npm/public/ &&     cd
      /opt/npm/app/ && npm install && npm prune --production
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9999"
  - Name: volume
    Volumes:
    - /opt/npm/app/
  - Name: volume
    Volumes:
    - /u
  - Name: workdir
    Path: /opt/npm/app/
  - CmdLine:
    - /opt/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - npm
    - run
    - start:prod
    Name: cmd
    PrependShell: false
  From:
    Image: node:11.6.0-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:11.6.0-alpine
