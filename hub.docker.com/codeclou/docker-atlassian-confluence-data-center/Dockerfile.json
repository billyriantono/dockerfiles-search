{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache             bash             curl             apache2             apache2-proxy             apache2-utils             python             py-pip \u0026\u0026             pip install shinto-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/work-private/docker-entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "proxy.conf",
            "/etc/apache2/conf.d/proxy.conf"
          ]
        },
        {
          "CmdLine": [
            "chmod u+rx,g+rx,o+rx,a-w /work-private/docker-entrypoint.sh \u0026\u0026     ln -sf /dev/stderr /var/log/apache2/error.log \u0026\u0026     addgroup -g 10777 worker \u0026\u0026     adduser -h /work -H -D -G worker -u 10777 worker \u0026\u0026     mkdir -p /work \u0026\u0026     mkdir -p /work-private \u0026\u0026     chown -R worker:worker /work/ \u0026\u0026     chown -R worker:worker /work-private \u0026\u0026     chown -R worker:worker /var/www/logs \u0026\u0026     chown -R worker:worker /etc/apache2/ \u0026\u0026     touch /var/www/logs/error.log \u0026\u0026 chown -R worker:worker /var/www/logs/error.log \u0026\u0026     touch /var/www/logs/access.log \u0026\u0026 chown -R worker:worker /var/www/logs/access.log \u0026\u0026     chown -R worker:worker /var/log/apache2 \u0026\u0026     mkdir /run/apache2 \u0026\u0026 chown -R worker:worker /run/apache2 \u0026\u0026     sed -i -e 's/Listen 80/Listen 26140\\nServerName localhost/g' /etc/apache2/httpd.conf \u0026\u0026     sed -i -e 's/AllowOverride\\s*None/AllowOverride All/ig' /etc/apache2/httpd.conf \u0026\u0026     echo \"LoadModule proxy_module modules/mod_proxy.so\" \u003e\u003e /etc/apache2/httpd.conf \u0026\u0026     echo \"LoadModule rewrite_module modules/mod_rewrite.so\" \u003e\u003e /etc/apache2/httpd.conf \u0026\u0026     echo \"LoadModule proxy_http_module modules/mod_proxy_http.so\" \u003e\u003e /etc/apache2/httpd.conf \u0026\u0026     echo \"LoadModule proxy_balancer_module modules/mod_proxy_balancer.so\" \u003e\u003e /etc/apache2/httpd.conf \u0026\u0026     echo \"LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so\" \u003e\u003e /etc/apache2/httpd.conf \u0026\u0026     echo \"LoadModule slotmem_shm_module modules/mod_slotmem_shm.so\" \u003e\u003e /etc/apache2/httpd.conf \u0026\u0026     echo \"LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so\" \u003e\u003e /etc/apache2/httpd.conf \u0026\u0026     echo \"Include /work-private/loadbalancer-virtual-host.conf\" \u003e\u003e /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "loadbalancer-virtual-host.conf.jinja2",
            "/work-private"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/work"
        },
        {
          "Name": "expose",
          "Ports": [
            "26140"
          ]
        },
        {
          "Name": "user",
          "User": "worker"
        },
        {
          "Env": [
            {
              "Key": "NODES",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/work"
          ]
        },
        {
          "CmdLine": [
            "/work-private/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "httpd",
            "-DFOREGROUND"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}