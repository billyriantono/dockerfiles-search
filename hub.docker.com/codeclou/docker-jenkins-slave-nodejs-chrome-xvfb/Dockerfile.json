{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -g 10000 jenkins \u0026\u0026     useradd -c \"Jenkins user\" -d $HOME -u 10000 -g 10000 -m jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -qqy update     \u0026\u0026 apt-get -qqy --no-install-recommends install     openjdk-8-jre     bzip2     ca-certificates     unzip     wget     curl     git     jq     zip     xvfb     pulseaudio     dbus     dbus-x11     build-essential \u0026\u0026     rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash - \u0026\u0026     apt-get update -qqy \u0026\u0026 apt-get -qqy install -y nodejs \u0026\u0026     rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CHROME_VERSION",
          "Name": "arg",
          "Value": "\"google-chrome-stable\""
        },
        {
          "CmdLine": [
            "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026     echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list \u0026\u0026     apt-get update -qqy \u0026\u0026 apt-get -qqy install ${CHROME_VERSION:-google-chrome-stable} \u0026\u0026     rm /etc/apt/sources.list.d/google-chrome.list \u0026\u0026     rm -rf /var/lib/apt/lists/* /var/cache/apt/* \u0026\u0026     ln -s /usr/bin/google-chrome /usr/bin/chromium-browser"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | apt-key add - \u0026\u0026     echo \"deb http://packages.cloudfoundry.org/debian stable main\" \u003e\u003e /etc/apt/sources.list.d/cloudfoundry-cli.list \u0026\u0026     apt-get update -qqy \u0026\u0026 apt-get -qqy install cf-cli \u0026\u0026     rm /etc/apt/sources.list.d/cloudfoundry-cli.list \u0026\u0026     rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \u0026\u0026     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" \u003e /etc/apt/sources.list.d/yarn.list \u0026\u0026     apt-get update -qqy \u0026\u0026 apt-get -qqy install yarn \u0026\u0026     rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dbus-system.conf",
            "/tmp/dbus-system.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir /var/run/dbus/ \u0026\u0026     chown -R jenkins:jenkins /var/run/dbus/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/opt/docker-entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod u+rx,g+rx,o+rx,a-w /opt/docker-entrypoint.sh \u0026\u0026     mkdir /tmp/.X11-unix \u0026\u0026     chown -R root:root /tmp/.X11-unix \u0026\u0026     chmod 1777 /tmp/.X11-unix \u0026\u0026     chown -R jenkins:jenkins /home/jenkins/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "CmdLine": [
            "mkdir /home/jenkins/.jenkins/ \u0026\u0026 mkdir /home/jenkins/.bin/ \u0026\u0026     curl -sSLo /home/jenkins/.bin/jenkins-slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/3.9/remoting-3.9.jar \u0026\u0026     chmod 644 /home/jenkins/.bin/jenkins-slave.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/jenkins/.jenkins"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/jenkins"
        },
        {
          "CmdLine": [
            "/opt/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}