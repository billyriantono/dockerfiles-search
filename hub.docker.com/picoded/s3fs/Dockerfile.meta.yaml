MetaArgs: null
Stages:
- BaseName: picoded/ubuntu-base
  Commands:
  - CmdLine:
    - "apt-get update && \tapt-get install -y automake autotools-dev fuse g++ git
      libcurl4-gnutls-dev libfuse-dev libssl-dev libxml2-dev make pkg-config;"
    Name: run
    PrependShell: true
  - Env:
    - Key: S3FS_GITHASH
      Value: '"ae4caa96a002151615f241d87af59b15e933ec47"'
    Name: env
  - CmdLine:
    - "cd /tmp && \tgit clone https://github.com/s3fs-fuse/s3fs-fuse.git && \tcd s3fs-fuse
      \tgit reset --hard \"$S3FS_GITHASH\" && \t./autogen.sh && \t./configure && \tmake
      && \tmake install && \trm -R /tmp/*;"
    Name: run
    PrependShell: true
  - CmdLine:
    - "s3fs --version && \ts3fs --help;"
    Name: run
    PrependShell: true
  - Env:
    - Key: S3FS_MOUNTPOINT
      Value: '''/workspace'''
    - Key: S3FS_BUCKET_NAME
      Value: ''''''
    - Key: S3FS_ACCESS_KEY_ID
      Value: ''''''
    - Key: S3FS_ACCESS_KEY_SECRET
      Value: ''''''
    - Key: S3FS_URL
      Value: '''https://s3.amazonaws.com'''
    - Key: S3FS_RUNMODE
      Value: '''-f'''
    - Key: S3FS_AUTHFILE
      Value: '''/root/.s3fs'''
    - Key: S3FS_CACHE_DIR
      Value: '''/tmp/s3fs'''
    - Key: S3FS_CACHE_ENSURE_DISKFREE_MB
      Value: '''2048'''
    - Key: S3FS_OPTIONS
      Value: '''-o use_xattr'''
    Name: env
  - CmdLine:
    - "echo '#!/bin/bash' > /entrypoint/s3fs.sh && \techo ''                                                                       >>
      /entrypoint/s3fs.sh && \techo '# Configuration checks'                                                 >>
      /entrypoint/s3fs.sh && \techo 'if [ -z \"${S3FS_BUCKET_NAME}\" ]; then'                                  >>
      /entrypoint/s3fs.sh && \techo '    echo \"Error: S3FS_BUCKET_NAME is not specified\"'
      \                   >> /entrypoint/s3fs.sh && \techo '    exit 128'                                                           >>
      /entrypoint/s3fs.sh && \techo 'fi'                                                                     >>
      /entrypoint/s3fs.sh && \techo ''                                                                       >>
      /entrypoint/s3fs.sh && \techo '# Write auth file if it does not exist'                                 >>
      /entrypoint/s3fs.sh && \techo 'if [ ! -f \"${S3FS_AUTHFILE}\" ]; then'                                   >>
      /entrypoint/s3fs.sh && \techo '    if [ -z \"${S3FS_ACCESS_KEY_ID}\" ] || [
      -z \"{$S3FS_ACCESS_KEY_SECRET}\" ]; then'          >> /entrypoint/s3fs.sh &&
      \techo '        echo \"Error: Missing S3FS_ACCESS_KEY_ID/SECRET or ${S3FS_AUTHFILE}
      not provided\"'   >> /entrypoint/s3fs.sh && \techo '        exit 128'                                                                           >>
      /entrypoint/s3fs.sh && \techo '    fi'                                                                                     >>
      /entrypoint/s3fs.sh && \techo '    echo \"${S3FS_ACCESS_KEY_ID}:${S3FS_ACCESS_KEY_SECRET}\"
      > ${S3FS_AUTHFILE}'              >> /entrypoint/s3fs.sh && \techo '    chmod
      400 ${S3FS_AUTHFILE}'                                                             >>
      /entrypoint/s3fs.sh && \techo 'fi'                                                                     >>
      /entrypoint/s3fs.sh && \techo ''                                                                       >>
      /entrypoint/s3fs.sh && \techo '# Prepare S3FS Cache options'                                           >>
      /entrypoint/s3fs.sh && \techo 'S3FS_CACHE_OPT=\"\"'                                                      >>
      /entrypoint/s3fs.sh && \techo 'if [ -z \"${S3FS_CACHE_DIR}\" ]; then'                                    >>
      /entrypoint/s3fs.sh && \techo '    mkdir -p \"${S3FS_CACHE_DIR}\"'                                       >>
      /entrypoint/s3fs.sh && \techo '    S3FS_CACHE_OPT=\"-o use_cache=\\\\\"${S3FS_CACHE_DIR}\\\\\"
      -o ensure_diskfree=${S3FS_CACHE_ENSURE_DISKFREE_MB}\"' >> /entrypoint/s3fs.sh
      && \techo 'fi'                                                                     >>
      /entrypoint/s3fs.sh && \techo ''                                                                       >>
      /entrypoint/s3fs.sh && \techo 'echo \"==> [picoded/ufs-client-stack] : Mounting
      S3 Filesystem\"'         >> /entrypoint/s3fs.sh && \techo 'mkdir -p ${S3FS_MOUNTPOINT}'
      \                                           >> /entrypoint/s3fs.sh && \techo
      ''                                                                       >>
      /entrypoint/s3fs.sh && \techo '# s3fs mount command'                                                   >>
      /entrypoint/s3fs.sh && \techo 's3fs $S3FS_RUNMODE $S3FS_CACHE_OPT $S3FS_OPTIONS
      -o passwd_file=\"${S3FS_AUTHFILE}\" -o url=${S3FS_URL} ${S3FS_BUCKET_NAME} ${S3FS_MOUNTPOINT}'
      >> /entrypoint/s3fs.sh && \techo ''                                                                       >>
      /entrypoint/s3fs.sh && \techo 'echo \"==> [picoded/ufs-client-stack] : Entrypoint
      Chain\"'               >> /entrypoint/s3fs.sh && \techo 'exec \"$@\"'                                                              >>
      /entrypoint/s3fs.sh && \tchmod +x /entrypoint/s3fs.sh;"
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint/primer.sh
    - /entrypoint/s3fs.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: picoded/ubuntu-base
  Name: ""
  Platform: ""
  SourceCode: FROM picoded/ubuntu-base
