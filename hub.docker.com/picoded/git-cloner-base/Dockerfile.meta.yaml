MetaArgs: null
Stages:
- BaseName: picoded/ubuntu-base
  Commands:
  - CmdLine:
    - apt-get update && apt-get install -y git && apt-get clean;
    Name: run
    PrependShell: true
  - Env:
    - Key: GIT_REPO
      Value: '"https://github.com/picoded/dockerfiles.git"'
    Name: env
  - Env:
    - Key: GIT_COMMIT
      Value: '"master"'
    Name: env
  - Env:
    - Key: GIT_FOLDER
      Value: '"."'
    Name: env
  - Env:
    - Key: GIT_PRESCRIPT
      Value: '""'
    Name: env
  - Env:
    - Key: GIT_POSTSCRIPT
      Value: '""'
    Name: env
  - CmdLine:
    - "echo '#!/bin/bash'                                                               >
      /entrypoint/git-cloner.sh && \techo 'echo \"###\"'                                                                 >>
      /entrypoint/git-cloner.sh && \techo 'echo \"### Start of picoded/git-cloner
      : entrypoint/git-cloner.sh\"'          >> /entrypoint/git-cloner.sh && \techo
      'echo \"###\"'                                                                 >>
      /entrypoint/git-cloner.sh && \techo ''                                                                           >>
      /entrypoint/git-cloner.sh && \techo '# Enters the /workspace'                                                    >>
      /entrypoint/git-cloner.sh && \techo 'cd /workspace;'                                                             >>
      /entrypoint/git-cloner.sh && \techo ''                                                                           >>
      /entrypoint/git-cloner.sh && \techo 'if [ -n \"$GIT_PRESCRIPT\" ]; then '                                          >>
      /entrypoint/git-cloner.sh && \techo '   eval \"$GIT_PRESCRIPT\";'                                                  >>
      /entrypoint/git-cloner.sh && \techo 'fi '                                                                        >>
      /entrypoint/git-cloner.sh && \techo ''                                                                           >>
      /entrypoint/git-cloner.sh && \techo '# Ensures the git repo is cloned'                                           >>
      /entrypoint/git-cloner.sh && \techo 'if [ ! -d \"$GIT_FOLDER/.git\" ]; then
      '                                      >> /entrypoint/git-cloner.sh && \techo
      '   git clone --recursive \"$GIT_REPO\" \"$GIT_FOLDER\";'                        >>
      /entrypoint/git-cloner.sh && \techo 'fi '                                                                        >>
      /entrypoint/git-cloner.sh && \techo ''                                                                           >>
      /entrypoint/git-cloner.sh && \techo '# Enter git repo and pull updates (if needed)'
      \                             >> /entrypoint/git-cloner.sh && \techo 'cd \"$GIT_FOLDER\"'
      \                                                          >> /entrypoint/git-cloner.sh
      && \techo 'git fetch;'                                                                 >>
      /entrypoint/git-cloner.sh && \techo 'git checkout \"$GIT_COMMIT\";'                                                >>
      /entrypoint/git-cloner.sh && \techo 'git pull;'                                                                  >>
      /entrypoint/git-cloner.sh && \techo ''                                                                           >>
      /entrypoint/git-cloner.sh && \techo 'if [ -n \"$GIT_POSTSCRIPT\" ]; then '                                         >>
      /entrypoint/git-cloner.sh && \techo '   eval \"$GIT_POSTSCRIPT\";'                                                 >>
      /entrypoint/git-cloner.sh && \techo 'fi '                                                                        >>
      /entrypoint/git-cloner.sh && \techo ''                                                                           >>
      /entrypoint/git-cloner.sh && \techo 'echo \"###\"'                                                                 >>
      /entrypoint/git-cloner.sh && \techo 'echo \"### Finished picoded/git-cloner
      : entrypoint/git-cloner.sh\"'          >> /entrypoint/git-cloner.sh && \techo
      'echo \"###\"'                                                                 >>
      /entrypoint/git-cloner.sh && \techo ''                                                                           >>
      /entrypoint/git-cloner.sh && \techo 'cd \"/workspace/$GIT_FOLDER/\"'                                               >>
      /entrypoint/git-cloner.sh && \techo 'exec \"$@\"'                                                                  >>
      /entrypoint/git-cloner.sh && \tchmod +x /entrypoint/git-cloner.sh;"
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint/primer.sh
    - /entrypoint/git-cloner.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - 'echo "hello world : run your actual command here"'
    Name: cmd
    PrependShell: true
  From:
    Image: picoded/ubuntu-base
  Name: ""
  Platform: ""
  SourceCode: FROM picoded/ubuntu-base
