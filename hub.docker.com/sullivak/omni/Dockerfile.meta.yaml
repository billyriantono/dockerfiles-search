MetaArgs: null
Stages:
- BaseName: tensorflow/tensorflow:1.0.1-gpu
  Commands:
  - Maintainer: Ken Sullivan <ken.sullivan@kohyoung.com>
    Name: maintainer
  - Key: OPENCV_VERSION
    Name: arg
    Value: 3.2.0
  - Key: KERAS_VERSION
    Name: arg
    Value: 1.2.0
  - Key: CAFFE_CLONE_TAG
    Name: arg
    Value: rc4
  - Env:
    - Key: KERAS_BACKEND
      Value: tensorflow
    Name: env
  - Env:
    - Key: PYCHARM_HOME
      Value: /opt/pycharm
    Name: env
  - Env:
    - Key: CAFFE_ROOT
      Value: /opt/caffe
    Name: env
  - Env:
    - Key: OPENCV_ROOT
      Value: /opt/opencv
    Name: env
  - Env:
    - Key: MXNET_ROOT
      Value: /opt/mxnet
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends   libtiff5=4.0.6-1   libtiffxx5=4.0.6-1   libtiff5-dev=4.0.6-1   build-essential   checkinstall   cmake   gfortran   git   graphviz   libavcodec-dev   libavformat-dev   libboost-all-dev   libdc1394-22-dev   libeigen3-dev   libgflags-dev   libgoogle-glog-dev   libgraphviz-dev   libgstreamer0.10-dev   libgstreamer-plugins-base0.10-dev   libgtk2.0-dev   libhdf5-serial-dev   libjasper-dev   libjpeg-dev   liblapack-dev   liblapacke-dev   libleveldb-dev   liblmdb-dev   libmp3lame-dev   libopenblas-dev   libopencore-amrnb-dev   libopencore-amrwb-dev   libprotobuf-dev   libqt4-dev   libsnappy-dev   libswscale-dev   libtbb-dev   libtheora-dev   libv4l-dev   libvorbis-dev   libxrender1   libxtst6   libxvidcore-dev   openslide-tools   protobuf-compiler   pkg-config   python-dev   python-h5py   python-numpy   python-tk   python-vtk   python-yaml   python-pycurl   qt4-default   unzip   v4l-utils   wget   x264   yasm   &&   apt-get
      clean &&   apt-get autoremove &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $OPENCV_ROOT
  - CmdLine:
    - git clone https://github.com/opencv/opencv.git && cd opencv && git checkout
      3668a01fca0858c32b
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $OPENCV_ROOT
  - CmdLine:
    - git clone https://github.com/opencv/opencv_contrib.git && cd opencv_contrib
      && git checkout abf44fcccfe2f281b
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $OPENCV_ROOT/opencv/build
  - CmdLine:
    - cmake -D CMAKE_BUILD_TYPE=RELEASE     -D CMAKE_INSTALL_PREFIX=/usr/local     -D
      WITH_TBB=ON     -D BUILD_NEW_PYTHON_SUPPORT=ON     -D WITH_V4L=ON     -D BUILD_TIFF=ON     -D
      WITH_QT=4     -D OPENCV_EXTRA_MODULES_PATH=$OPENCV_ROOT/opencv_contrib/modules     -D
      WITH_OPENGL=ON .. &&   make -j4 &&   make install &&   echo "/usr/local/lib"
      | tee -a /etc/ld.so.conf.d/opencv.conf &&   ldconfig &&   cp $OPENCV_ROOT/opencv/build/lib/cv2.so
      /usr/lib/python2.7/dist-packages/cv2.so &&   rm -rf $OPENCV_ROOT/opencv/build
      &&   rm -rf $OPENCV_ROOT/opencv/.git &&   rm -rf $OPENCV_ROOT/opencv_contrib/.git
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install --no-dependencies git+git://github.com/fchollet/keras.git@${KERAS_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir --timeout=60 install     graphviz     line_profiler     mayavi     nibabel     openslide-python     Pillow     pydicom     pyside     scikit-image     SimpleITK     sklearn     theano     &&     python
      -m ipykernel.kernelspec
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $CAFFE_ROOT
  - CmdLine:
    - git clone -b ${CAFFE_CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git
      . &&     pip install --upgrade pip &&     cd python && for req in $(cat requirements.txt)
      pydot; do pip install $req; done && cd .. &&     git clone https://github.com/NVIDIA/nccl.git
      && cd nccl && make -j install && cd .. && rm -rf nccl &&     mkdir build &&
      cd build &&     cmake -DUSE_CUDNN=1 -DUSE_NCCL=1 -DBLAS=open .. &&     make
      -j"$(nproc)" &&     rm -rf $CAFFE_ROOT/.git
    Name: run
    PrependShell: true
  - Env:
    - Key: PYCAFFE_ROOT
      Value: $CAFFE_ROOT/python
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: $PYCAFFE_ROOT:$PYTHONPATH
    Name: env
  - Env:
    - Key: PATH
      Value: $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH
    Name: env
  - CmdLine:
    - echo "$CAFFE_ROOT/build/lib" >> /etc/ld.so.conf.d/caffe.conf && ldconfig
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $MXNET_ROOT
  - CmdLine:
    - git clone --recursive https://github.com/dmlc/mxnet . &&   cp make/config.mk
      config.mk &&   sed -i 's/USE_BLAS = atlas/USE_BLAS = openblas/g' config.mk &&   echo
      "USE_CUDA=1" >>config.mk &&   echo "USE_CUDA_PATH=/usr/local/cuda" >>config.mk
      &&   echo "USE_CUDNN=1" >>config.mk &&   make -j"$(nproc)" &&   cd $MXNET_ROOT/python
      && python setup.py install &&   echo "export PYTHONPATH=$MXNET_ROOT/python:$PYTHONPATH"
      >> /root/.bashrc &&   rm -rf $MXNET_ROOT/build &&   rm -rf $MXNET_ROOT/.git
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://download.jetbrains.com/python/pycharm-community-2017.2.2.tar.gz
      -O /tmp/pycharm.tar.gz &&    mkdir -p ${PYCHARM_HOME} && tar -xzvf /tmp/pycharm.tar.gz
      -C ${PYCHARM_HOME} --strip=1 &&    ln -s ${PYCHARM_HOME}/bin/pycharm.sh /bin/pycharm
      &&    rm -rf /tmp/pycharm.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pycharm_quiet.sh
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - qopen.sh
    - .
  - CmdLine:
    - chmod +x pycharm_quiet.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x qopen.sh
    Name: run
    PrependShell: true
  From:
    Image: tensorflow/tensorflow:1.0.1-gpu
  Name: ""
  Platform: ""
  SourceCode: FROM tensorflow/tensorflow:1.0.1-gpu
