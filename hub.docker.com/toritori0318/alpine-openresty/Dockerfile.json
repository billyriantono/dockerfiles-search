{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gliderlabs/alpine:latest",
      "SourceCode": "FROM gliderlabs/alpine:latest",
      "Platform": "",
      "From": {
        "Image": "gliderlabs/alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "TSUYOSHI TORII toritori0318",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk add curl git openssh-client ca-certificates openssl-dev make gcc g++ musl-dev perl             bash wget tar gzip unzip \u0026\u0026     rm /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PCRE_VERSION",
              "Value": "8.38"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENRESTY_VERSION",
              "Value": "1.11.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAROCKS_VERSION",
              "Value": "2.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${PCRE_VERSION}.tar.gz \u0026\u0026     tar zxf pcre-${PCRE_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget https://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz \u0026\u0026     tar zxf openresty-${OPENRESTY_VERSION}.tar.gz \u0026\u0026     cd openresty-${OPENRESTY_VERSION} \u0026\u0026     ./configure --with-luajit --prefix=/opt/openresty         --with-pcre=/tmp/pcre-${PCRE_VERSION} --with-pcre-jit         --with-luajit-xcflags=-DLUAJIT_ENABLE_LUA52COMPAT         --http-client-body-temp-path=/var/nginx/client_body_temp         --http-proxy-temp-path=/var/nginx/proxy_temp         --http-log-path=/var/nginx/access.log         --error-log-path=/var/nginx/error.log         --pid-path=/var/nginx/nginx.pid         --lock-path=/var/nginx/nginx.lock         --with-http_gunzip_module         --with-http_stub_status_module         --with-http_ssl_module         --with-http_realip_module         --without-http_fastcgi_module         --without-http_uwsgi_module         --without-http_scgi_module         --with-md5-asm         --with-sha1-asm \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     rm -rf openresty-* \u0026\u0026     rm -rf pcre-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget http://luarocks.org/releases/luarocks-${LUAROCKS_VERSION}.tar.gz \u0026\u0026     tar -xzvf luarocks-${LUAROCKS_VERSION}.tar.gz \u0026\u0026     cd luarocks-${LUAROCKS_VERSION}/ \u0026\u0026     ./configure --prefix=/opt/openresty/luajit         --with-lua=/opt/openresty/luajit/         --with-lua-include=/opt/openresty/luajit/include/luajit-2.1         --lua-suffix=jit \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     rm -rf luarocks-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /opt/openresty/luajit/bin/luajit /usr/bin/lua \u0026\u0026     ln -s /opt/openresty/luajit/bin/luarocks /usr/bin/luarocks"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}