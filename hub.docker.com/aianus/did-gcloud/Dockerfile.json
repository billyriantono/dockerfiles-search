{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:stable",
      "SourceCode": "FROM docker:stable",
      "Platform": "",
      "From": {
        "Image": "docker:stable"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CLOUD_SDK_VERSION",
              "Value": "211.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBECTL_VERSION",
              "Value": "1.11.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "2.9.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add         curl         python         py-crcmod         terraform         bash         libc6-compat         openssh-client         git     \u0026\u0026 curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     ln -s /lib /lib64 \u0026\u0026     gcloud config set core/disable_usage_reporting true \u0026\u0026     gcloud config set component_manager/disable_update_check true \u0026\u0026     gcloud config set metrics/environment github_docker_image \u0026\u0026     gcloud --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl",
            "/usr/local/bin/kubectl"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache py-pip \u0026\u0026     pip install docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz | tar -xzO linux-amd64/helm \u003e /usr/local/bin/helm \u0026\u0026     chmod +x /usr/local/bin/helm"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}