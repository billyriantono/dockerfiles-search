{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "rickshawhobo \u003crickshawhobo@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install --yes     python-pip     jq     apt-transport-https     ca-certificates     curl     git     vim     maven     openjdk-8-jdk     openjdk-8-jre     npm     nodejs-legacy     software-properties-common     \u0026\u0026 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -     \u0026\u0026 add-apt-repository     \"deb [arch=amd64] https://download.docker.com/linux/ubuntu     $(lsb_release -cs)     stable\"     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install --yes docker-ce     \u0026\u0026 systemctl enable docker     \u0026\u0026 curl -L https://github.com/docker/compose/releases/download/1.12.0/docker-compose-`uname -s`-`uname -m` \u003e /usr/local/bin/docker-compose     \u0026\u0026 chmod +x /usr/local/bin/docker-compose     \u0026\u0026 pip install --upgrade pip     \u0026\u0026 pip install --upgrade awscli     \u0026\u0026 npm install -g gulp bower     \u0026\u0026 apt-get remove -y --purge python-software-properties software-properties-common     \u0026\u0026 apt-get --purge autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm cache clean \u0026\u0026 npm install -g n \u0026\u0026 n stable \u0026\u0026 curl -L https://npmjs.org/install.sh | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/ci"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./wrapdocker",
            "/usr/local/bin/wrapdocker"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/wrapdocker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/cf-deploy",
            "/usr/local/bin/cf-deploy"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/ecs-deploy",
            "/usr/local/bin/ecs-deploy"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/cf-deploy \u0026\u0026 chmod +x /usr/local/bin/ecs-deploy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "CmdLine": [
            "wrapdocker"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}