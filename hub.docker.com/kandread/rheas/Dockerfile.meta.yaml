MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: Kostas Andreadis <kandread@jpl.nasa.gov>
    Name: maintainer
  - Env:
    - Key: POSTGIS_VERSION
      Value: 2.4.3
    Name: env
  - Env:
    - Key: NETCDF_VERSION
      Value: 4.6.1
    Name: env
  - CmdLine:
    - mkdir -p /etc/apk
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "http://dl-8.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "http://dl-8.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps automake autoconf gcc g++ make python-dev
      gfortran musl-dev libxslt-dev openblas-dev postgresql-dev hdf5-dev gdal-dev
      curl-dev wget m4 cython-dev git json-c-dev libtool libxml2-dev proj4-dev geos-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache python py-pip freetype libgfortran libgcc libpng libstdc++
      musl openblas cython curl wine gdal hdf5 postgresql bash json-c geos proj4
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/include/locale.h /usr/include/xlocale.h
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/Unidata/netcdf-c/archive/v$NETCDF_VERSION.tar.gz &&
      tar xf v$NETCDF_VERSION.tar.gz && cd netcdf-c-$NETCDF_VERSION && ./configure
      --prefix=/usr --disable-dependency-tracking && make -j2 && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O postgis.tar.gz "https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz"
      && mkdir -p /usr/src/postgis && tar --extract --file postgis.tar.gz --directory
      /usr/src/postgis --strip-components 1 && rm postgis.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/src/postgis && ./autogen.sh && ./configure && make && make install &&
      cd / && rm -rf /usr/src/postgis
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /
  - CmdLine:
    - pip install --no-cache-dir -r /requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup -g 888 rheas
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser -D -u 888 -G rheas rheas
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/nasa/RHEAS.git /rheas
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R rheas:rheas /rheas
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /rheas
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - buildout.cfg
    - .
  - Env:
    - Key: USER
      Value: rheas
    Name: env
  - Env:
    - Key: EARTHDATA_USER
      Value: nasarheas
    Name: env
  - Env:
    - Key: EARTHDATA_PASSWORD
      Value: rheas@Earthdata1
    Name: env
  - CmdLine:
    - python bootstrap.py
    Name: run
    PrependShell: true
  - CmdLine:
    - ./bin/buildout
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del .build-deps && rm -rf /root/.cache
    Name: run
    PrependShell: true
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
