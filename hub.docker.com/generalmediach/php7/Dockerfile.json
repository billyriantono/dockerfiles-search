{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.0-apache",
      "SourceCode": "FROM php:7.2.0-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.2.0-apache"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Generalmedia SA \u003cwebmaster@generalmedia.ch\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "IMAGICK_VERSION",
              "Value": "3.4.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_REDIS_VERSION",
              "Value": "3.1.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y     libicu-dev     libmcrypt-dev     libxslt1-dev     zlib1g-dev     nano     cron     libmagickwand-dev     --no-install-recommends     \u0026\u0026 echo \"Enable build-in php extensions\"     \u0026\u0026 docker-php-ext-install -j$(nproc) opcache intl xsl zip bcmath mbstring     \u0026\u0026 echo \"Install Imagick\"     \u0026\u0026 cd /tmp     \u0026\u0026 curl https://pecl.php.net/get/imagick-$IMAGICK_VERSION.tgz -o imagick-$IMAGICK_VERSION.tgz     \u0026\u0026 tar xvzf imagick-$IMAGICK_VERSION.tgz     \u0026\u0026 cd imagick-$IMAGICK_VERSION     \u0026\u0026 phpize     \u0026\u0026 ./configure     \u0026\u0026 make install     \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 rm -rf /tmp/imagick-$IMAGICK_VERSION*     \u0026\u0026 cd     \u0026\u0026 echo \"Install redis\"     \u0026\u0026 docker-php-source extract     \u0026\u0026 curl -L -o /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/$PHP_REDIS_VERSION.tar.gz     \u0026\u0026 tar xfz /tmp/redis.tar.gz     \u0026\u0026 rm -r /tmp/redis.tar.gz     \u0026\u0026 mv phpredis-$PHP_REDIS_VERSION /usr/src/php/ext/redis     \u0026\u0026 docker-php-ext-install redis     \u0026\u0026 docker-php-source delete     \u0026\u0026 echo \"Cleanup apt\"     \u0026\u0026 apt-get autoremove --purge -y     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "9.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ARCH= \u0026\u0026 dpkgArch=\"$(dpkg --print-architecture)\"   \u0026\u0026 case \"${dpkgArch##*-}\" in     amd64) ARCH='x64';;     ppc64el) ARCH='ppc64le';;     s390x) ARCH='s390x';;     arm64) ARCH='arm64';;     armhf) ARCH='armv7l';;     i386) ARCH='x86';;     *) echo \"unsupported architecture\"; exit 1 ;;   esac   \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\"   \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner   \u0026\u0026 rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\"   \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/home/.composer/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.5.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -s -f -L -o /tmp/installer.php https://raw.githubusercontent.com/composer/getcomposer.org/863c57de1807c99d984f7b56f0ea56ebd7e5045b/web/installer  \u0026\u0026 php -r \"     \\$signature = '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061';     \\$hash = hash('SHA384', file_get_contents('/tmp/installer.php'));     if (!hash_equals(\\$signature, \\$hash)) {         unlink('/tmp/installer.php');         echo 'Integrity check failed, installer is either corrupt or worse.' . PHP_EOL;         exit(1);     }\"  \u0026\u0026 php /tmp/installer.php --no-ansi --install-dir=/usr/bin --filename=composer --version=${COMPOSER_VERSION}  \u0026\u0026 composer --ansi --version --no-interaction  \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite headers ssl deflate expires"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apache/000-default.conf",
            "/etc/apache2/sites-available/000-default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apache/000-dev.conf",
            "/etc/apache2/sites-available/000-dev.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apache/deflate_gzip.conf",
            "/etc/apache2/mods-available/deflate_gzip.conf"
          ]
        },
        {
          "CmdLine": [
            "ln -sr /etc/apache2/mods-available/deflate_gzip.conf /etc/apache2/mods-enabled/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2ensite 000-dev 000-default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/self-signed.key -out /tmp/self-signed.crt -subj /C=CH/ST=VD/L=Lausanne/CN=localhost"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apache/000-dev.conf",
            "/etc/apache2/sites-available/000-dev.conf"
          ]
        },
        {
          "CmdLine": [
            "rm -f /etc/apache2/sites-enabled/000-default.conf \u0026\u0026 ln -sr /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-enabled/000-default.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php/*.ini",
            "/etc/php/7.2/mods-available/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /etc/php/7.2/mods-enabled/  \u0026\u0026 ln -sr /etc/php/7.2/mods-available/99-gm.ini /etc/php/7.2/mods-enabled/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/uploads/ \u0026\u0026 chmod +w -R /tmp/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/var/www/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /var/www/entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/var/www/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}