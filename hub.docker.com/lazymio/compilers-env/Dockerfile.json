{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:buster",
      "SourceCode": "FROM debian:buster",
      "Platform": "",
      "From": {
        "Image": "debian:buster"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install wget curl gnupg2 -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_12.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor \u003e microsoft.asc.gpg \u0026\u0026     mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/ \u0026\u0026     wget -q https://packages.microsoft.com/config/debian/10/prod.list \u0026\u0026     mv prod.list /etc/apt/sources.list.d/microsoft-prod.list \u0026\u0026     chown root:root /etc/apt/trusted.gpg.d/microsoft.asc.gpg \u0026\u0026     chown root:root /etc/apt/sources.list.d/microsoft-prod.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install apt-transport-https -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install build-essential     g++ gcc python3.7 openjdk-11-jdk cmake make     automake openssh-server git dotnet-sdk-3.0 nodejs -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install maven -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "goRelSha256='692d17071736f74be04a72a06dab9cac1cd759377bd85316e52b2227604c004c' ;     url=\"https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz\";     wget -O go.tgz \"$url\";     echo \"${goRelSha256} *go.tgz\" | sha256sum -c -;     tar -C /usr/local -xzf go.tgz;     rm go.tgz;     export PATH=\"/usr/local/go/bin:$PATH\";     go version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \u0026\u0026 chmod -R 777 \"$GOPATH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/root/.cargo/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}