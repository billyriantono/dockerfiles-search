MetaArgs: null
Stages:
- BaseName: microsoft/dotnet:2.1-sdk
  Commands:
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://download.mono-project.com/repo/debian stable-stretch main"  |
      tee /etc/apt/sources.list.d/mono-official-stable.list   && apt-get update   &&
      apt-get install -y mono-devel   && rm -rf /var/lib/apt/lists/* /tmp/*   && curl
      -o /usr/local/bin/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe   &&
      echo "alias nuget=\"mono /usr/local/bin/nuget.exe\"" | tee ~/.bash_profile
    Name: run
    PrependShell: true
  - Env:
    - Key: FrameworkPathOverride
      Value: /usr/lib/mono/4.6.1-api/
    Name: env
  - Env:
    - Key: SONAR_SCANNER_VERSION
      Value: 3.2.0.1227
    - Key: SONAR_SCANNER_MSBUILD_VERSION
      Value: 4.3.0.1333
    - Key: SONAR_SCANNER_MSBUILD_PATH
      Value: /opt/sonar-scanner-msbuild
    - Key: DOTNET_BUILD_DIR
      Value: /build_dir
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tbzip2 \t\tunzip
      \t\txz-utils \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -svT "/usr/lib/jvm/java-8-openjdk-$(dpkg --print-architecture)" /docker-java-home
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /docker-java-home/jre
    Name: env
  - CmdLine:
    - "set -ex; \t\tif [ ! -d /usr/share/man/man1 ]; then \t\tmkdir -p /usr/share/man/man1;
      \tfi; \t    echo 'deb http://deb.debian.org/debian stretch-backports main'       >
      /etc/apt/sources.list.d/stretch-backports.list; \tapt-get update -y;\tapt-get
      install -t \t\tstretch-backports \t\topenjdk-8-jre-headless \t\tca-certificates-java
      -y; \trm -rf /var/lib/apt/lists/*; \t\t[ \"$(readlink -f \"$JAVA_HOME\")\" =
      \"$(docker-java-home)\" ]; \t\tupdate-alternatives --get-selections | awk -v
      home=\"$(readlink -f \"$JAVA_HOME\")\" 'index($3, home) == 1 { $2 = \"manual\";
      print | \"update-alternatives --set-selections\" }'; \tupdate-alternatives --query
      java | grep -q 'Status: manual'"
    Name: run
    PrependShell: true
  - CmdLine:
    - /var/lib/dpkg/info/ca-certificates-java.postinst configure
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/$SONAR_SCANNER_MSBUILD_VERSION/sonar-scanner-msbuild-$SONAR_SCANNER_MSBUILD_VERSION-netcoreapp2.0.zip
      -O /opt/sonar-scanner-msbuild.zip   && mkdir -p $SONAR_SCANNER_MSBUILD_PATH   &&
      mkdir -p $DOTNET_BUILD_DIR   && unzip /opt/sonar-scanner-msbuild.zip -d $SONAR_SCANNER_MSBUILD_PATH   &&
      rm /opt/sonar-scanner-msbuild.zip   && chmod -R 775 $SONAR_SCANNER_MSBUILD_PATH   &&
      chmod -R 775 $DOTNET_BUILD_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -O /bin/jq     &&
      chmod +x /bin/jq
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$SONAR_SCANNER_MSBUILD_PATH:$SONAR_SCANNER_MSBUILD_PATH/sonar-scanner-$SONAR_SCANNER_VERSION/bin:${PATH}"'
    Name: env
  - Name: workdir
    Path: $DOTNET_BUILD_DIR
  From:
    Image: microsoft/dotnet:2.1-sdk
  Name: ""
  Platform: ""
  SourceCode: FROM microsoft/dotnet:2.1-sdk
