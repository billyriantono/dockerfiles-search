{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Maintainer": "Taewan Kim \u003ctaewanme@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update    \u0026\u0026  apt-get install -y curl apt-utils git make build-essential                libssl-dev libffi-dev zlib1g-dev libbz2-dev libreadline-dev                  libsqlite3-dev python3.6 python-pip python3-pip libjpeg8-dev python-dev                language-pack-ko python3-dev libxml2 libxml2-dev libxslt1-dev                fonts-nanum fonts-nanum-coding fonts-nanum-extra                cmake git wget unzip yasm pkg-config libswscale-dev                libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libavformat-dev libpq-dev    \u0026\u0026 apt-get clean    \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen ko_KR.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "ko_KR.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "ko_KR.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "ko_KR.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "python3 -m pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install numpy           \u0026\u0026 pip3 install Pandas          \u0026\u0026 pip3 install Theano          \u0026\u0026 pip3 install NLTK            \u0026\u0026 pip3 install gensim           \u0026\u0026 pip3 install beautifulsoup4        \u0026\u0026 pip3 install jupyter          \u0026\u0026 pip3 install feedparser   \u0026\u0026 pip3 install PyPDF2       \u0026\u0026 pip3 install keras       \u0026\u0026 pip3 install python-docx  \u0026\u0026 pip3 install scikit-learn   \u0026\u0026 pip3 install mglearn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3",
            "-c",
            "import nltk; nltk.download('all')"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "mkdir -p /root/.jupyter/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start-notebook.sh",
            "/usr/local/bin"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/ipython"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "/bin/bash",
            "start-notebook.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}