{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Taewan Kim \u003ctaewanme@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026  apt-get install -y curl apt-utils git make build-essential                          libssl-dev libffi-dev zlib1g-dev libbz2-dev libreadline-dev                 libsqlite3-dev python-pip python3-pip libjpeg8-dev python-dev               language-pack-ko python3-dev libxml2 libxml2-dev libxslt1-dev   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen ko_KR.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "ko_KR.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "ko_KR.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "ko_KR.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "python3 -m pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install xlrd             \u0026\u0026 pip3 install numpy           \u0026\u0026 pip3 install pillow          \u0026\u0026 pip3 install matplotlib      \u0026\u0026 pip3 install scikit-learn    \u0026\u0026 pip3 install Pandas          \u0026\u0026 pip3 install scrapy          \u0026\u0026 pip3 install NLTK            \u0026\u0026 pip3 install bokeh           \u0026\u0026 pip3 install NetworkX        \u0026\u0026 pip3 install scipy           \u0026\u0026 pip3 install Seaborn         \u0026\u0026 pip3 install jupyter          \u0026\u0026 pip3 install beautifulsoup4   \u0026\u0026 pip3 install keras            \u0026\u0026 pip3 install http://download.pytorch.org/whl/cpu/torch-0.3.1-cp35-cp35m-linux_x86_64.whl   \u0026\u0026 pip3 install torchvision      \u0026\u0026 pip3 install --upgrade tensorflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /root/.jupyter/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start-notebook.sh",
            "/usr/local/bin"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6006"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/ipython"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "/bin/bash",
            "start-notebook.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}