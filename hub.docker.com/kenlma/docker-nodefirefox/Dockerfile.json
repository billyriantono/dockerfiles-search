{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "selenium/node-base:3.4.0-einsteinium",
      "SourceCode": "FROM selenium/node-base:3.4.0-einsteinium",
      "Platform": "",
      "From": {
        "Image": "selenium/node-base:3.4.0-einsteinium"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "authors",
              "Value": "SeleniumHQ"
            }
          ],
          "Name": "label"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Key": "FIREFOX_VERSION",
          "Name": "arg",
          "Value": "54.0"
        },
        {
          "CmdLine": [
            "apt-get update -qqy   \u0026\u0026 apt-get -qqy --no-install-recommends install firefox   \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/*   \u0026\u0026 wget --no-verbose -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2   \u0026\u0026 apt-get -y purge firefox   \u0026\u0026 rm -rf /opt/firefox   \u0026\u0026 tar -C /opt -xjf /tmp/firefox.tar.bz2   \u0026\u0026 rm /tmp/firefox.tar.bz2   \u0026\u0026 mv /opt/firefox /opt/firefox-$FIREFOX_VERSION   \u0026\u0026 ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "GECKODRIVER_VERSION",
          "Name": "arg",
          "Value": "0.17.0"
        },
        {
          "CmdLine": [
            "wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz   \u0026\u0026 rm -rf /opt/geckodriver   \u0026\u0026 tar -C /opt -zxf /tmp/geckodriver.tar.gz   \u0026\u0026 rm /tmp/geckodriver.tar.gz   \u0026\u0026 mv /opt/geckodriver /opt/geckodriver-$GECKODRIVER_VERSION   \u0026\u0026 chmod 755 /opt/geckodriver-$GECKODRIVER_VERSION   \u0026\u0026 ln -fs /opt/geckodriver-$GECKODRIVER_VERSION /usr/bin/geckodriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HTTP_PROXY",
              "Value": "'http://s1firewall:8080/'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HTTPS_PROXY",
              "Value": "'http://s1firewall:8080/'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FTP_PROXY",
              "Value": "'http://s1firewall:8080/'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "http_proxy",
              "Value": "'http://s1firewall:8080/'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "https_proxy",
              "Value": "'http://s1firewall:8080/'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ftp_proxy",
              "Value": "'http://s1firewall:8080/'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "no_proxy",
              "Value": "'localhost,127.0.0.1'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NO_PROXY",
              "Value": "'localhost,127.0.0.1'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "node_proxy",
              "Value": "'http://s1firewall:8080/'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "printenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "seluser"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "generate_config",
            "/opt/bin/generate_config"
          ]
        },
        {
          "CmdLine": [
            "sudo chmod +x /opt/bin/generate_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo echo \"\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}