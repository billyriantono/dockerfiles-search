{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "bitnami/minideb:buster",
      "SourceCode": "FROM bitnami/minideb:buster",
      "Platform": "",
      "From": {
        "Image": "bitnami/minideb:buster"
      },
      "Commands": [
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-euxo",
            "pipefail",
            "-c"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "install_packages   apt-transport-https   build-essential   ca-certificates   curl   dirmngr   git   gnupg   gosu   jq   libaio1   locales   openssh-client   pkg-config   procps   python3   python3-pip   python3-setuptools   python3-venv   unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-locale LANG=C.UTF-8 LC_MESSAGES=POSIX   \u0026\u0026 locale-gen en_US.UTF-8   \u0026\u0026 DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales   \u0026\u0026 useradd -ms /bin/bash dadsgarage"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^PASS_MAX_DAYS.*/PASS_MAX_DAYS    90/' /etc/login.defs   \u0026\u0026 sed -i 's/^PASS_MIN_DAYS.*/PASS_MIN_DAYS    1/' /etc/login.defs   \u0026\u0026 sed -i 's/sha512/sha512 minlen=8/' /etc/pam.d/common-password"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "TINI_VERSION",
          "Name": "arg",
          "Value": "v0.18.0"
        },
        {
          "CmdLine": [
            "curl -sOL https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini \u0026\u0026     chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "KUBECTL_VERSION",
          "Name": "arg",
          "Value": "1.16.3-00"
        },
        {
          "CmdLine": [
            "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \u0026\u0026   echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list \u0026\u0026   install_packages kubectl=${KUBECTL_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "K9S_VERSION",
          "Name": "arg",
          "Value": "0.9.3"
        },
        {
          "CmdLine": [
            "curl -LO https://github.com/derailed/k9s/releases/download/${K9S_VERSION}/k9s_${K9S_VERSION}_Linux_x86_64.tar.gz \u0026\u0026   tar -C /usr/local/bin -xzvf k9s_${K9S_VERSION}_Linux_x86_64.tar.gz k9s \u0026\u0026   chmod +x /usr/local/bin/k9s \u0026\u0026   rm -rf k9s_${K9S_VERSION}_Linux_x86_64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "HELM2_VERSION",
          "Name": "arg",
          "Value": "v2.16.1"
        },
        {
          "CmdLine": [
            "curl -LO https://get.helm.sh/helm-${HELM2_VERSION}-linux-amd64.tar.gz \u0026\u0026     tar -zxvf helm-${HELM2_VERSION}-linux-amd64.tar.gz \u0026\u0026     mv linux-amd64/helm /usr/local/bin/helm2 \u0026\u0026     chmod +x /usr/local/bin/helm2 \u0026\u0026     rm -rf linux-amd64 helm-${HELM2_VERSION}-linux-amd64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "HELM3_VERSION",
          "Name": "arg",
          "Value": "v3.0.2"
        },
        {
          "CmdLine": [
            "curl -LO https://get.helm.sh/helm-${HELM3_VERSION}-linux-amd64.tar.gz \u0026\u0026     tar -zxvf helm-${HELM3_VERSION}-linux-amd64.tar.gz \u0026\u0026     mv linux-amd64/helm /usr/local/bin/helm \u0026\u0026     chmod +x /usr/local/bin/helm \u0026\u0026     rm -rf linux-amd64 helm-${HELM3_VERSION}-linux-amd64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "HELMFILE_VERSION",
          "Name": "arg",
          "Value": "v0.97.0"
        },
        {
          "CmdLine": [
            "curl -sOL https://github.com/roboll/helmfile/releases/download/${HELMFILE_VERSION}/helmfile_linux_amd64 \u0026\u0026     chmod +x ./helmfile_linux_amd64 \u0026\u0026     mv helmfile_linux_amd64 /usr/local/bin/helmfile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "TERRAFORM_VERSION",
          "Name": "arg",
          "Value": "0.12.18"
        },
        {
          "CmdLine": [
            "curl -sOL https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \u0026\u0026     unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin/ \u0026\u0026     rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "AZURE_CLI",
          "Name": "arg",
          "Value": "2.0.78-1~buster"
        },
        {
          "CmdLine": [
            "curl -sL https://packages.microsoft.com/keys/microsoft.asc |     gpg --dearmor \u003e /etc/apt/trusted.gpg.d/microsoft.asc.gpg \u0026\u0026     echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ buster main\" |     tee -a /etc/apt/sources.list.d/azure-cli.list \u0026\u0026     install_packages azure-cli=${AZURE_CLI}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "dadsgarage"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"${PATH}:/home/dadsgarage/.local/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "python3 -m pip install --user pipx   \u0026\u0026 pipx ensurepath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "PRE_COMMIT_VERSION",
          "Name": "arg",
          "Value": "1.20.0"
        },
        {
          "CmdLine": [
            "pipx install pre-commit==${PRE_COMMIT_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "AWS_CLI_VERSION",
          "Name": "arg",
          "Value": "1.16.287"
        },
        {
          "CmdLine": [
            "pipx install awscli==${AWS_CLI_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "HELMDIFF_VERSION",
          "Name": "arg",
          "Value": "v3.0.0-rc.7"
        },
        {
          "CmdLine": [
            "helm2 init --client-only \u0026\u0026     helm2 plugin install https://github.com/databus23/helm-diff --version ${HELMDIFF_VERSION} \u0026\u0026     alias helmfile2=\"helmfile --helm-binary helm2\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "helm plugin install https://github.com/databus23/helm-diff --version ${HELMDIFF_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/dadsgarage"
        },
        {
          "CmdLine": [
            "/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}