{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Niema Moshiri \u003cniemamoshiri@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y upgrade \u0026\u0026     apt-get install -y autoconf curl default-jre git gsl-bin libcurl4-openssl-dev libgsl0-dev libmodule-install-perl libncurses5-dev libncursesw5-dev libssl-dev python python-pip python3 python3-pip unzip wget zlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e \"'urllist' =\u003e [\\n    q[http://mirror.bhoovd.com/CPAN/],\\n    q[http://cpan.develooper.com/],\\n    q[http://cpan.cs.utah.edu/]\\n],\" \u003e\u003e /etc/perl/CPAN/Config.pm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e \"y\\nexit\\n\" | cpan"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install dendropy \u0026\u0026     pip3 install treeswift \u0026\u0026     pip3 install treesap \u0026\u0026     pip3 install networkx \u0026\u0026     pip3 install numpy \u0026\u0026     pip3 install scipy \u0026\u0026     pip3 install pyvolve"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O- \"https://github.com/niemasd/FAVITES/blob/master/dependencies/artsrcmountrainier2016.06.05linux.tgz?raw=true\" | tar xz \u0026\u0026     cd art_src_MountRainier_Linux \u0026\u0026 make \u0026\u0026 mv art_* /usr/local/bin \u0026\u0026 cd .. \u0026\u0026 rm -rf art_src_MountRainier_Linux"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --recursive https://github.com/nh13/DWGSIM.git \u0026\u0026     cd DWGSIM \u0026\u0026 make \u0026\u0026 mv dwgsim* /usr/local/bin \u0026\u0026 cd .. \u0026\u0026 rm -rf DWGSIM"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/niemasd/GEMF.git \u0026\u0026     cd GEMF \u0026\u0026 make \u0026\u0026 mv GEMF /usr/local/bin \u0026\u0026 cd .. \u0026\u0026 rm -rf GEMF"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-check-certificate -qO- https://tenet.dl.sourceforge.net/project/biogrinder/biogrinder/Grinder-0.5.4/Grinder-0.5.4.tar.gz | tar -xz \u0026\u0026     cd Grinder* \u0026\u0026 echo -e \"y\\n\" | perl \"Makefile.PL\" \u0026\u0026 echo -e \"yes\\n\" | make \u0026\u0026 make install \u0026\u0026 cd .. \u0026\u0026 rm -rf Grinder*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl http://eddylab.org/software/hmmer3/3.1b2/hmmer-3.1b2-linux-intel-x86_64.tar.gz | tar xz \u0026\u0026     mv hmmer*/binaries/* /usr/local/bin \u0026\u0026 rm -rf hmmer*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/rambaut/Seq-Gen.git \u0026\u0026     cd Seq-Gen/source \u0026\u0026 make \u0026\u0026 mv seq-gen /usr/local/bin \u0026\u0026 cd ../.. \u0026\u0026 rm -rf Seq-Gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/niemasd/Dual-Birth-Simulator.git \u0026\u0026     cd Dual-Birth-Simulator \u0026\u0026 make \u0026\u0026 mv dualbirth /usr/local/bin \u0026\u0026 mv yule /usr/local/bin \u0026\u0026 cd .. \u0026\u0026 rm -rf Dual-Birth-Simulator"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl http://cegg.unige.ch/pub/newick-utils-1.6-Linux-x86_64-disabled-extra.tar.gz | tar xz \u0026\u0026     mv newick-utils*/src/nw_* /usr/local/bin \u0026\u0026 rm -rf newick-utils*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://www.mabs.at/ewing/msms/msms3.2rc-b163.zip \u0026\u0026 unzip msms3.2rc-b163.zip \u0026\u0026     mv msms/lib/* /usr/local/lib \u0026\u0026 mv msms/bin/* /usr/local/bin \u0026\u0026 chmod a+x /usr/local/bin/msms \u0026\u0026 rm -rf msms*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O- \"https://github.com/niemasd/POPART-IBM/blob/PangeaSim/PANGEA_SIM.tar.gz?raw=true\" | tar -zx \u0026\u0026     mkdir /usr/local/bin/PangeaSim \u0026\u0026     cd PANGEA_SIM/SCENARIO_HIGHACUTE \u0026\u0026 make \u0026\u0026 mv popart-simul.exe /usr/local/bin/PangeaSim/popart-simul-highacute \u0026\u0026 mv PangeaParams /usr/local/bin/PangeaSim/PangeaParams_HighAcute \u0026\u0026     cd         ../SCENARIO_LOWACUTE  \u0026\u0026 make \u0026\u0026 mv popart-simul.exe /usr/local/bin/PangeaSim/popart-simul-lowacute  \u0026\u0026 mv PangeaParams /usr/local/bin/PangeaSim/PangeaParams_LowAcute  \u0026\u0026     echo -e '#!/usr/bin/env bash\\n/usr/local/bin/PangeaSim/popart-simul-highacute /usr/local/bin/PangeaSim/PangeaParams_HighAcute' \u003e /usr/local/bin/PangeaSim_HighAcute \u0026\u0026     echo -e '#!/usr/bin/env bash\\n/usr/local/bin/PangeaSim/popart-simul-lowacute /usr/local/bin/PangeaSim/PangeaParams_LowAcute'   \u003e /usr/local/bin/PangeaSim_LowAcute  \u0026\u0026     chmod a+x /usr/local/bin/PangeaSim_*Acute \u0026\u0026 cd ../.. \u0026\u0026 rm -rf PANGEA_SIM"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O- \"https://github.com/adamallo/SimPhy/releases/download/v1.0.2/SimPhy_1.0.2.tar.gz\" | tar -zx \u0026\u0026     mv SimPhy_1.0.2/bin/simphy_lnx64 /usr/local/bin/simphy \u0026\u0026 chmod a+x /usr/local/bin/simphy \u0026\u0026     rm -rf *SimPhy* .*SimPhy*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/niemasd/FAVITES.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/FAVITES:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FAVITES_DOCKER",
              "Value": "TRUE"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /FAVITES_MOUNT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "find /usr/lib/python3.*/ -name 'tests' -exec rm -r '{}' + \u0026\u0026     rm -rf /root/.cache \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c",
            "run_favites.py"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}