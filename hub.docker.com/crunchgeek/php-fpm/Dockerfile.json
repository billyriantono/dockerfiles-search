{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-fpm",
      "SourceCode": "FROM php:7.3-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.3-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install gcc make autoconf libc-dev pkg-config libzip-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends \tgit \tlibmemcached-dev \tlibz-dev \tlibpq-dev \tlibssl-dev libssl-doc libsasl2-dev \tlibmcrypt-dev \tlibxml2-dev \tzlib1g-dev libicu-dev g++ \tlibldap2-dev libbz2-dev \tcurl libcurl4-openssl-dev \tlibenchant-dev libgmp-dev firebird-dev libib-util \tre2c libpng++-dev \tlibwebp-dev libjpeg-dev libjpeg62-turbo-dev libpng-dev libvpx-dev libfreetype6-dev \tlibmagick++-dev \tlibmagickwand-dev \tzlib1g-dev libgd-dev \tlibtidy-dev libxslt1-dev libmagic-dev libexif-dev file \tsqlite3 libsqlite3-dev libxslt-dev \tlibmhash2 libmhash-dev libc-client-dev libkrb5-dev libssh2-1-dev \tunzip libpcre3 libpcre3-dev \tpoppler-utils ghostscript libmagickwand-6.q16-dev libsnmp-dev libedit-dev libreadline6-dev libsodium-dev \tfreetds-bin freetds-dev freetds-common libct4 libsybdb5 tdsodbc libreadline-dev librecode-dev libpspell-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/lib/x86_64-linux-gnu/libsybdb.so /usr/lib/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure hash --with-mhash \u0026\u0026 \tdocker-php-ext-install hash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure imap --with-kerberos --with-imap-ssl \u0026\u0026 \tdocker-php-ext-install imap iconv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install bcmath bz2 calendar ctype curl dba dom enchant"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install fileinfo exif ftp gettext gmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install interbase intl json ldap mbstring mysqli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install opcache pcntl pspell"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo pdo_dblib pdo_mysql pdo_pgsql pdo_sqlite pgsql phar posix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install readline recode"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install session shmop simplexml soap sockets sodium"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install sysvmsg sysvsem sysvshm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "export CFLAGS=\"-I/usr/src/php\" \u0026\u0026 docker-php-ext-install xmlreader xmlwriter xml xmlrpc xsl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install tidy tokenizer wddx zend_test zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install ds \u0026\u0026 \tpecl install imagick \u0026\u0026 \tpecl install igbinary \u0026\u0026 \tpecl install redis \u0026\u0026 \tpecl install memcached \u0026\u0026 \tdocker-php-ext-enable ds imagick igbinary redis memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mongodb \u0026\u0026 docker-php-ext-enable mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes \"\" | pecl install msgpack \u0026\u0026 \tdocker-php-ext-enable msgpack"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install apcu \u0026\u0026 \tdocker-php-ext-enable apcu --ini-name docker-php-ext-10-apcu.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026 apt-get install -y apt-transport-https locales gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd \t--with-png-dir \t--with-jpeg-dir \t--with-xpm-dir \t--with-webp-dir \t--with-freetype-dir \t\u0026\u0026 docker-php-ext-install -j$(nproc) gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "'en_US.UTF-8'"
            },
            {
              "Key": "LANGUAGE",
              "Value": "'en_US:en'"
            },
            {
              "Key": "LC_ALL",
              "Value": "'en_US.UTF-8'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -y install libfcgi0ldbl nano htop iotop lsof mariadb-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \t\u0026\u0026 php -r \"if (hash_file('sha384', 'composer-setup.php') === 'baf1608c33254d00611ac1705c1d9958c817a1a33bce370c0595974b342601bd80b92a3f46067da89e3b06bff421f182') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \t\u0026\u0026 php composer-setup.php \t\u0026\u0026 php -r \"unlink('composer-setup.php');\" \t\u0026\u0026 mv composer.phar /usr/local/sbin/composer \t\u0026\u0026 chmod +x /usr/local/sbin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' | tee /etc/apt/sources.list.d/newrelic.list \u0026\u0026 \tcurl https://download.newrelic.com/548C16BF.gpg | apt-key add - \u0026\u0026 \tapt-get -y update \u0026\u0026 \tDEBIAN_FRONTEND=noninteractive apt-get -y install newrelic-php5 newrelic-sysmond \u0026\u0026 \texport NR_INSTALL_SILENT=1 \u0026\u0026 newrelic-install install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"postfix postfix/mailname string localhost\" | debconf-set-selections \u0026\u0026 \techo \"postfix postfix/main_mailer_type string 'Internet Site'\" | debconf-set-selections \u0026\u0026 \tDEBIAN_FRONTEND=noninteractive apt-get install postfix libsasl2-modules -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "scripts/*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x  /usr/local/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "configs/php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "configs/www.conf",
            "/usr/local/etc/php-fpm.d/"
          ]
        },
        {
          "CmdLine": [
            "echo '#!/bin/bash' \u003e /healthcheck \u0026\u0026 \techo 'SCRIPT_NAME=/health SCRIPT_FILENAME=/health REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000 || exit 1' \u003e\u003e /healthcheck \u0026\u0026 \tchmod +x /healthcheck"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get remove -y git \u0026\u0026 apt-get autoremove -y \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}