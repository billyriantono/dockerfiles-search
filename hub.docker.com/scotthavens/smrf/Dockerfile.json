{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "usdaarsnwrc/ipw:latest",
      "SourceCode": "FROM usdaarsnwrc/ipw:latest",
      "Platform": "",
      "From": {
        "Image": "usdaarsnwrc/ipw:latest"
      },
      "Commands": [
        {
          "Maintainer": "Scott Havens \u003cscott.havens@ars.usda.gov\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "WFX",
              "Value": "\"0.5.4\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y --no-install-recommends libblas-dev     git     liblapack-dev     libatlas-base-dev     libffi-dev     libssl-dev     gfortran     libyaml-dev     libfreetype6-dev     libpng-dev     libhdf5-serial-dev     python3-dev     python3-pip     python3-tk     curl     libeccodes-dev     libeccodes-tools     \u0026\u0026 cd /code     \u0026\u0026 curl -L https://github.com/USDA-ARS-NWRC/weather_forecast_retrieval/archive/v${WFX}.tar.gz | tar xz     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 apt remove -y curl     \u0026\u0026 apt autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/",
            "/code/smrf/"
          ]
        },
        {
          "CmdLine": [
            "mkdir /data     \u0026\u0026 cd /code/smrf     \u0026\u0026 python3 -m pip install --upgrade pip     \u0026\u0026 python3 -m pip install setuptools wheel     \u0026\u0026 python3 -m pip install -r /code/smrf/requirements.txt     \u0026\u0026 python3 setup.py build_ext --inplace     \u0026\u0026 python3 setup.py install     \u0026\u0026 cd /code     \u0026\u0026 git clone https://github.com/jswhit/pygrib.git     \u0026\u0026 cd /code/pygrib     \u0026\u0026 git checkout 8a87238     \u0026\u0026 python3 -m pip install pyproj==1.9.5.1     \u0026\u0026 cp /code/weather_forecast_retrieval-${WFX}/setup.cfg.pygrib /code/pygrib     \u0026\u0026 mv /code/pygrib/setup.cfg.pygrib /code/pygrib/setup.cfg     \u0026\u0026 python3 setup.py build     \u0026\u0026 python3 setup.py install     \u0026\u0026 cd /code/weather_forecast_retrieval-${WFX}     \u0026\u0026 python3 -m pip install -r requirements_dev.txt     \u0026\u0026 python3 setup.py install     \u0026\u0026 rm -r /root/.cache/pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}