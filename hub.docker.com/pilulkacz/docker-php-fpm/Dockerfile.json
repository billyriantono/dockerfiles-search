{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "\"/home/docker/eshop\""
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install curl ruby-full gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install scss_lint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install git mc htop nodejs yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install gulp-cli -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install gulp -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install gulp-yarn --save-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install gulp-util"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     libfreetype6-dev     libjpeg62-turbo-dev     libpng-dev     libmcrypt-dev     libxml2-dev     \u0026\u0026 docker-php-ext-install pdo pdo_mysql mbstring gd iconv mcrypt zip xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -o -f redis     \u0026\u0026 docker-php-ext-enable redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y sqlite3 libsqlite3-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo_sqlite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install bcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer     \u0026\u0026 composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | pecl install xdebug     \u0026\u0026 echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" \u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_enable=on\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini     \u0026\u0026 echo \"xdebug.remote_autostart=off\" \u003e\u003e /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\")     \u0026\u0026 curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version     \u0026\u0026 tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp     \u0026\u0026 mv /tmp/blackfire-*.so $(php -r \"echo ini_get('extension_dir');\")/blackfire.so     \u0026\u0026 printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" \u003e $PHP_INI_DIR/conf.d/blackfire.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}