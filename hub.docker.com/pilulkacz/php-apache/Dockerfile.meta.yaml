MetaArgs: null
Stages:
- BaseName: php:7.3-apache
  Commands:
  - Maintainer: Jiri Dedic <jiri.dedic@pilulka.cz>
    Name: maintainer
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y     git     mc     htop     curl     wget     vim     libmcrypt-dev     libpng-dev     libjpeg-dev     libfreetype6-dev     libxml2-dev     libedit-dev     libicu-dev     libssl-dev     freetds-dev     libc-client-dev     libkrb5-dev     libzip-dev     uuid-dev     rsyslog
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install gd soap pdo_mysql mysqli intl pcntl zip xmlrpc bcmath
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mbstring opcache
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure imap --with-kerberos --with-imap-ssl     && docker-php-ext-install
      imap
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install -o -f redis     && docker-php-ext-enable redis
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install sockets && docker-php-ext-enable sockets
    Name: run
    PrependShell: true
  - CmdLine:
    - version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;")     && curl -A
      "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version     &&
      tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp     && mv /tmp/blackfire-*.so $(php
      -r "echo ini_get('extension_dir');")/blackfire.so     && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n"
      > $PHP_INI_DIR/conf.d/blackfire.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "xdebug.remote_enable=1" >> /usr/local/etc/php/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "session.gc_maxlifetime=1209600" >> /usr/local/etc/php/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mongodb && docker-php-ext-enable mongodb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y supervisor
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php     && mv composer.phar /usr/bin/composer     &&
      composer global require hirak/prestissimo     && ln -s /root/.composer/vendor/bin/*
      /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install npm
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install npm@latest -g
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install gulp-cli -g
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install gulp -g
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install gulp-yarn -g --save-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install gulp-util -g
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install eslint -g
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install sass-lint -g
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install sass-lint-auto-fix -g
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-entrypoint
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/docker-php-entrypoint
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/ssl-cert-snakeoil.key
      -out /etc/ssl/certs/ssl-cert-snakeoil.pem -subj "/C=AT/ST=Vienna/L=Vienna/O=Security/OU=Development/CN=localhost"
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - a2ensite default-ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - apache2-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.3-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3-apache
