MetaArgs: null
Stages:
- BaseName: php:7.2-fpm-alpine
  Commands:
  - CmdLine:
    - "apk add --no-cache \t\tbash \t\tsed"
    Name: run
    PrependShell: true
  - CmdLine:
    - mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --update add git   build-base   libmemcached-dev   libmcrypt-dev   libxml2-dev   zlib-dev   autoconf   cyrus-sasl-dev   libgsasl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install mysqli mbstring pdo pdo_mysql tokenizer xml opcache zip
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl channel-update pecl.php.net
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mcrypt-1.0.1 && docker-php-ext-enable mcrypt
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | pecl install xdebug     && echo "zend_extension=$(find /usr/local/lib/php/extensions/
      -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.remote_enable=on"
      >> /usr/local/etc/php/conf.d/xdebug.ini     && echo "xdebug.remote_autostart=off"
      >> /usr/local/etc/php/conf.d/xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \t\tapk add --no-cache --virtual .build-deps \t\tlibjpeg-turbo-dev
      \t\tlibpng-dev \t; \t\tdocker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr;
      \tdocker-php-ext-install gd; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner
      --format '%n#p' --recursive /usr/local/lib/php/extensions \t\t\t| tr ',' '\\n'
      \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0
      { next } { print \"so:\" $1 }' \t)\"; \tapk add --virtual .wordpress-phpexts-rundeps
      $runDeps; \tapk del .build-deps"
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8';
      \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2';
      \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t} > /usr/local/etc/php/conf.d/opcache-recommended.ini"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/www/html
  - Env:
    - Key: WORDPRESS_VERSION
      Value: 5.0.3
    Name: env
  - Env:
    - Key: WORDPRESS_SHA1
      Value: f9a4b482288b5be7a71e9f3dc9b5b0c1f881102b
    Name: env
  - CmdLine:
    - "set -ex; \tcurl -o wordpress.tar.gz -fSL \"https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz\";
      \techo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c -; \ttar -xzf wordpress.tar.gz
      -C /usr/src/; \trm wordpress.tar.gz; \tchown -R www-data:www-data /usr/src/wordpress"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$PATH:/usr/local/bin/"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - 'ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat'
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - CmdLine:
    - curl --silent --show-error https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add automake
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update nodejs;     apk add --update npm;
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.28-r0/glibc-2.28-r0.apk;     apk
      add --allow-untrusted glibc-2.28-r0.apk;
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVAVER
      Value: '"jre1.8.0_201"'
    Name: env
  - Env:
    - Key: JAVAPATH
      Value: '"/opt/java/current"'
    Name: env
  - CmdLine:
    - 'apk add attr;     mkdir -p /opt/java;     cd /opt/java;     wget --no-check-certificate
      -c --header "Cookie: oraclelicense=accept-securebackup-cookie" https://download.oracle.com/otn-pub/java/jdk/8u201-b09/42970487e3af4f5aa5bca3f542482c60/jre-8u201-linux-x64.tar.gz;     tar
      -xzf jre-8u201-linux-x64.tar.gz -C /opt/java;     ln -s $JAVAVER $JAVAPATH;     apk
      add paxctl;     cd $JAVAPATH/bin;     paxctl -c java;     paxctl -m java;     setfattr
      -n user.pax.flags -v "mr" java;'
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: $JAVAPATH
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$JAVAPATH/bin
    Name: env
  - CmdLine:
    - apk add py-pip;
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "TEST_URL=127.0.0.1" > .env;
    Name: run
    PrependShell: true
  - CmdLine:
    - bash
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.2-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2-fpm-alpine
