{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Alexis Duque  \u003calexisd@rtone.fr\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "VERSION_SDK_TOOLS",
              "Value": "\"3859397\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "\"/sdk\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SDK_HOME",
              "Value": "\"/opt\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$PATH:${ANDROID_HOME}/tools\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODEJS_DEFAULT_VERSION",
              "Value": "6.9.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CORDOVA_DEFAULT_VERSION",
              "Value": "7.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/opt/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq update \u0026\u0026     apt-get install -qqy --no-install-recommends       curl       html2text       openjdk-8-jdk       libc6-i386       lib32stdc++6       lib32gcc1       lib32ncurses5       lib32z1       unzip     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /etc/ssl/certs/java/cacerts;     /var/lib/dpkg/info/ca-certificates-java.postinst configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://dl.google.com/android/repository/sdk-tools-linux-${VERSION_SDK_TOOLS}.zip \u003e /sdk.zip \u0026\u0026     unzip /sdk.zip -d /sdk \u0026\u0026     rm -v /sdk.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $ANDROID_HOME/licenses/   \u0026\u0026 echo \"8933bad161af4178b1185d1a37fbf41ea5269c55\" \u003e $ANDROID_HOME/licenses/android-sdk-license   \u0026\u0026 echo \"84831b9409646a918e30573bab4c9c91346d8abd\" \u003e $ANDROID_HOME/licenses/android-sdk-preview-license"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash \u0026\u0026     [ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 . \"$NVM_DIR/nvm.sh\" \u0026\u0026     nvm install ${NODEJS_DEFAULT_VERSION} \u0026\u0026     chmod -R 777 ${NVM_DIR} \u0026\u0026     npm install -g cordova@${CORDOVA_DEFAULT_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_VERSION",
              "Value": "4.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRADLE_SDK_URL",
              "Value": "https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sSL \"${GRADLE_SDK_URL}\" -o gradle-${GRADLE_VERSION}-bin.zip  \t\u0026\u0026 unzip gradle-${GRADLE_VERSION}-bin.zip -d ${SDK_HOME}  \t\u0026\u0026 rm -rf gradle-${GRADLE_VERSION}-bin.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GRADLE_HOME",
              "Value": "${SDK_HOME}/gradle-${GRADLE_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${GRADLE_HOME}/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "packages.txt",
            "/sdk"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /root/.android \u0026\u0026   touch /root/.android/repositories.cfg \u0026\u0026   ${ANDROID_HOME}/tools/bin/sdkmanager --update \u0026\u0026   (while [ 1 ]; do sleep 5; echo y; done) | ${ANDROID_HOME}/tools/bin/sdkmanager --package_file=/sdk/packages.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod -R a+rwx ${ANDROID_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}