MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - CmdLine:
    - "apk add --no-cache \t\tca-certificates"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apk -v --update add \t  bash \t  git     curl     make     gcc     musl-dev
      \    openssl     go     python     py-pip     feh     rm -f /var/cache/apk/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - '[ ! -e /etc/nsswitch.conf ] && echo ''hosts: files dns'' > /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.10.3
    Name: env
  - CmdLine:
    - set -eux;
    Name: run
    PrependShell: true
  - CmdLine:
    - "export\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go
      env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env
      GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in
      \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget
      -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2
      *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd
      /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\"
      ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches;
      \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
