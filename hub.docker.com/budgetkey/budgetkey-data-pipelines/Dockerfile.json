{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "frictionlessdata/datapackage-pipelines:latest",
      "SourceCode": "FROM frictionlessdata/datapackage-pipelines:latest",
      "Platform": "",
      "From": {
        "Image": "frictionlessdata/datapackage-pipelines:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --update --no-cache libxml2 libxslt sudo openssh-client curl jpeg-dev antiword poppler-utils libmagic binutils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup dpp \u0026\u0026 adduser -s /bin/bash -D -G dpp dpp \u0026\u0026 addgroup dpp root \u0026\u0026 addgroup dpp redis \u0026\u0026     mkdir -p /var/datapackages \u0026\u0026 chown dpp.dpp /var/datapackages -R \u0026\u0026     mkdir -p /home/dpp/.ssh \u0026\u0026 chown dpp.dpp /home/dpp/.ssh -R \u0026\u0026     chown dpp.dpp /var/log/redis -R \u0026\u0026     chown dpp.dpp /var/lib/redis -R \u0026\u0026     chown dpp.dpp /var/run/redis -R \u0026\u0026     chmod 700 /home/dpp/.ssh \u0026\u0026     echo '%root ALL=(ALL) NOPASSWD: ALL' \u003e /etc/sudoers.d/root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --update --no-cache --virtual=build-dependencies add build-base libxml2-dev libxslt-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install textract==1.5.0 pyquery \"rfc3986\u003c1.0\" filemagic"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./",
            "/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "dpp-runners.yaml",
            "/datapackage_pipelines_budgetkey/pipelines/"
          ]
        },
        {
          "CmdLine": [
            "chown dpp.dpp /datapackage_pipelines_budgetkey -R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -e /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del build-dependencies \u0026\u0026     sudo rm -rf /var/cache/apk/* \u0026\u0026     ln -s /usr/lib/libmagic.so.1 /usr/lib/libmagic.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "dpp"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DPP_PROCESSOR_PATH",
              "Value": "/datapackage_pipelines_budgetkey/processors"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DPP_REDIS_HOST",
              "Value": "localhost"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_USER",
              "Value": "dpp"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_GROUP",
              "Value": "dpp"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/datapackage_pipelines_budgetkey/pipelines/"
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        },
        {
          "CmdLine": [
            "/startup.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}