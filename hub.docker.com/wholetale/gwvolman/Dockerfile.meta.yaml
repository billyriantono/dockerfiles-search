MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - CmdLine:
    - apt-get update -qqy &&   apt-get install -qy software-properties-common python3-software-properties
      &&   DEBIAN_FRONTEND=noninteractive apt-get -qy install     build-essential     vim     git     wget     python3     fuse     davfs2     libffi-dev     libssl-dev     libjpeg-dev     zlib1g-dev     libfuse-dev     libpython3-dev
      &&   apt-get -qqy clean all &&   echo "user_allow_other" >> /etc/fuse.conf &&   rm
      -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://bootstrap.pypa.io/get-pip.py && python3 get-pip.py
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /gwvolman/requirements.txt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - setup.py
    - /gwvolman/setup.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gwvolman
    - /gwvolman/gwvolman
  - Name: workdir
    Path: /gwvolman
  - CmdLine:
    - LDFLAGS="-Wl,-rpath='/usr/local/lib',--enable-new-dtags $LDFLAGS" pip install
      --no-cache-dir -r requirements.txt -e . && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - mount.c
    - /tmp/mount.c
  - CmdLine:
    - gcc -Wall -fPIC -shared -o /usr/local/lib/container_mount.so /tmp/mount.c -ldl
      -D_FILE_OFFSET_BITS=64 &&    rm  /tmp/mount.c &&    chmod +x /usr/local/lib/container_mount.so
      &&    echo "/usr/local/lib/container_mount.so" > /etc/ld.so.preload
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -g 100 -G 100 -u 1000 -s /bin/bash wtuser
    Name: run
    PrependShell: true
  - CmdLine:
    - girder-worker-config set celery backend redis://redis/ &&   girder-worker-config
      set celery broker redis://redis/ &&   girder-worker-config set girder_worker
      tmp_root /tmp
    Name: run
    PrependShell: true
  - Env:
    - Key: C_FORCE_ROOT
      Value: "1"
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - sed   -e 's/return decode(data/&.decode("utf-8")/'   -i /usr/local/lib/python3.5/dist-packages/kombu/serialization.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed   -e "/'kwargs':/ s/task_kwargs/json.dumps(&)/"   -i /usr/local/lib/python3.5/dist-packages/girder_worker/context/nongirder_context.py
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "use_locks 0" >> /etc/davfs2/davfs2.conf &&   echo "backup_dir .lost+found"
      >> /etc/davfs2/davfs2.conf &&   echo "gui_optimize 1" >> /etc/davfs2/davfs2.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - CmdLine:
    - chmod +x /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
