{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jdk",
      "SourceCode": "FROM openjdk:8-jdk",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jdk"
      },
      "Commands": [
        {
          "Maintainer": "Daniel Zauner \u003cdaniel.zauner@epos-cat.de\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "ARTIFACTORY_HOME",
              "Value": "/var/opt/artifactory"
            },
            {
              "Key": "ARTIFACTORY_DATA",
              "Value": "/data/artifactory"
            },
            {
              "Key": "ARTIFACTORY_USER_ID",
              "Value": "1030"
            },
            {
              "Key": "DB_HOST",
              "Value": "postgresql"
            },
            {
              "Key": "DB_PORT",
              "Value": "5432"
            },
            {
              "Key": "DB_USER",
              "Value": "artifactory"
            },
            {
              "Key": "DB_PASSWORD",
              "Value": "password"
            },
            {
              "Key": "DB_NAME",
              "Value": "artifactory"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ARTIFACTORY_VERSION=5.4.4   ARTIFACTORY_SHA256=f2f258afcd5692f4a3618ba6dc6808f2c997d5e764cc2679b14f53e2e7b38f91   ARTIFACTORY_URL=https://bintray.com/jfrog/artifactory-pro/download_file?file_path=org/artifactory/pro/jfrog-artifactory-pro/${ARTIFACTORY_VERSION}/jfrog-artifactory-pro-${ARTIFACTORY_VERSION}.zip   ARTIFACTORY_TEMP=$(mktemp -t \"$(basename $0).XXXXXXXXXX.zip\") \u0026\u0026   curl -L -o ${ARTIFACTORY_TEMP} ${ARTIFACTORY_URL} \u0026\u0026   printf '%s\\t%s\\n' $ARTIFACTORY_SHA256 $ARTIFACTORY_TEMP | sha256sum -c \u0026\u0026   unzip -q $ARTIFACTORY_TEMP -d /tmp \u0026\u0026   mv /tmp/artifactory-pro-${ARTIFACTORY_VERSION} ${ARTIFACTORY_HOME} \u0026\u0026   find $ARTIFACTORY_HOME -type f -name \"*.exe\" -o -name \"*.bat\" | xargs /bin/rm \u0026\u0026   rm -r $ARTIFACTORY_TEMP ${ARTIFACTORY_HOME}/logs \u0026\u0026   ln -s ${ARTIFACTORY_DATA}/access ${ARTIFACTORY_HOME}/access \u0026\u0026   ln -s ${ARTIFACTORY_DATA}/backup ${ARTIFACTORY_HOME}/backup \u0026\u0026   ln -s ${ARTIFACTORY_DATA}/data ${ARTIFACTORY_HOME}/data \u0026\u0026   ln -s ${ARTIFACTORY_DATA}/logs ${ARTIFACTORY_HOME}/logs \u0026\u0026   ln -s ${ARTIFACTORY_DATA}/run ${ARTIFACTORY_HOME}/run \u0026\u0026   mv ${ARTIFACTORY_HOME}/etc ${ARTIFACTORY_HOME}/etc-clean \u0026\u0026   ln -s ${ARTIFACTORY_DATA}/etc ${ARTIFACTORY_HOME}/etc \u0026\u0026   sed -i 's/-n \"\\$ARTIFACTORY_PID\"/-d $(dirname \"$ARTIFACTORY_PID\")/' $ARTIFACTORY_HOME/bin/artifactory.sh \u0026\u0026   echo 'if [ ! -z \"${EXTRA_JAVA_OPTIONS}\" ]; then export JAVA_OPTIONS=\"$JAVA_OPTIONS $EXTRA_JAVA_OPTIONS\"; fi' \u003e\u003e $ARTIFACTORY_HOME/bin/artifactory.default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "POSTGRESQL_JAR_VERSION=9.4.1212   POSTGRESQL_JAR=https://jdbc.postgresql.org/download/postgresql-${POSTGRESQL_JAR_VERSION}.jar \u0026\u0026   curl -L -o $ARTIFACTORY_HOME/tomcat/lib/postgresql-${POSTGRESQL_JAR_VERSION}.jar ${POSTGRESQL_JAR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/port=\"8081\"/port=\"8080\"/' ${ARTIFACTORY_HOME}/tomcat/conf/server.xml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/entrypoint-artifactory.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chown -R ${ARTIFACTORY_USER_ID}:${ARTIFACTORY_USER_ID} ${ARTIFACTORY_HOME} \u0026\u0026   chmod -R 777 ${ARTIFACTORY_HOME} \u0026\u0026   chown -R ${ARTIFACTORY_USER_ID}:${ARTIFACTORY_USER_ID} /entrypoint-artifactory.sh \u0026\u0026   chmod -R 777 /entrypoint-artifactory.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$ARTIFACTORY_USER_ID"
        },
        {
          "Health": {
            "Interval": 300000000000,
            "Test": [
              "CMD-SHELL",
              "curl -f http://localhost:8080/artifactory || exit 1"
            ],
            "Timeout": 3000000000
          },
          "Name": "healthcheck"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data/artifactory",
            "/data/artifactory/backup"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data/artifactory"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint-artifactory.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}