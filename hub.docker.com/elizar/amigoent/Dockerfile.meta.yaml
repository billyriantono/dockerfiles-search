MetaArgs:
- DefaultValue: jupyter/pyspark-notebook
  Key: BASE_CONTAINER
  ProvidedValue: null
  Value: jupyter/pyspark-notebook
Stages:
- BaseName: $BASE_CONTAINER
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Ray Hilton <ray.hilton@eliiza.com.au>"'
    Name: label
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64/
    Name: env
  - Env:
    - Key: PYSPARK_PYTHON
      Value: python3
    Name: env
  - Env:
    - Key: PYSPARK_DRIVER_PYTHON
      Value: python3
    Name: env
  - Env:
    - Key: R_LIBS_USER
      Value: $SPARK_HOME/R/lib
    Name: env
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - spark/spark-defaults.conf
    - /usr/local/spark/conf/spark-defaults.conf
  - CmdLine:
    - apt-get update --fix-missing &&     apt-get install -y --no-install-recommends     curl     lsb-release     gnupg2     apt-utils
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb http://packages.cloud.google.com/apt
      $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update --fix-missing &&     apt-get install -y --no-install-recommends
      \    ssh     vim     libapparmor1 \t\tlibedit2 \t\tpsmisc \t\tlibssl1.0.0     awscli
      \    dnsutils     wget     fonts-dejavu     tzdata     gfortran     gcc     libjq-dev
      \    libv8-3.14-dev     protobuf-compiler     libprotobuf-dev     libudunits2-dev
      \    libgdal-dev     libgdal20     libgeos-dev     google-cloud-sdk     zlib1g-dev
      \    libjpeg-dev     cmake     swig     libboost-all-dev     libsdl2-dev     libosmesa6-dev
      \    patchelf     ffmpeg     xvfb &&     rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends gnupg2 curl ca-certificates
      &&     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
      | apt-key add - &&     echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64
      /" > /etc/apt/sources.list.d/cuda.list &&     echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64
      /" > /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get purge --autoremove
      -y curl &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_VERSION
      Value: 10.0.130
    Name: env
  - Env:
    - Key: CUDA_PKG_VERSION
      Value: 10-0=$CUDA_VERSION-1
    Name: env
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: compute,utility
    Name: env
  - Env:
    - Key: NVIDIA_REQUIRE_CUDA
      Value: '"cuda>=10.0 brand=tesla,driver>=384,driver<385"'
    Name: env
  - Env:
    - Key: NCCL_VERSION
      Value: 2.4.2
    Name: env
  - Env:
    - Key: CUDNN_VERSION
      Value: 7.4.2.24
    Name: env
  - Labels:
    - Key: com.nvidia.cudnn.version
      Value: '"${CUDNN_VERSION}"'
    Name: label
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION         cuda-compat-10-0=410.48-1         libcudnn7=$CUDNN_VERSION-1+cuda10.0         cuda-libraries-$CUDA_PKG_VERSION         cuda-nvtx-$CUDA_PKG_VERSION         libnccl2=$NCCL_VERSION-1+cuda10.0         cuda-command-line-tools-$CUDA_PKG_VERSION
      &&     ln -s cuda-10.0 /usr/local/cuda &&     apt-mark hold libnccl2 libcudnn7
      &&     rm -rf /var/lib/apt/lists/* &&     ldconfig /usr/local/cuda/compat/
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/cuda/bin:${PATH}
    Name: env
  - Env:
    - Key: LIBRARY_PATH
      Value: /usr/local/cuda/lib64/stubs
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64:${LD_LIBRARY_PATH}
    Name: env
  - CmdLine:
    - mkdir -p /opt/swift &&    cd /opt/swift &&    apt update -y &&    apt install
      -y clang libcurl3 libicu-dev libpython-dev libncurses5-dev libblocksruntime-dev
      &&    wget https://storage.googleapis.com/s4tf-kokoro-artifact-testing/latest/swift-tensorflow-DEVELOPMENT-cuda10.0-cudnn7-ubuntu18.04.tar.gz
      &&    tar -vxzf swift-tensorflow-DEVELOPMENT-cuda10.0-cudnn7-ubuntu18.04.tar.gz
      &&    rm *.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/swift/usr/bin:${PATH}
    Name: env
  - CmdLine:
    - fix-permissions $CONDA_DIR &&     fix-permissions /home/$NB_USER &&     fix-permissions
      $R_LIBS_USER &&     fix-permissions /home/$NB_USER/.conda/
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  From:
    Image: $BASE_CONTAINER
  Name: ""
  Platform: ""
  SourceCode: FROM $BASE_CONTAINER
