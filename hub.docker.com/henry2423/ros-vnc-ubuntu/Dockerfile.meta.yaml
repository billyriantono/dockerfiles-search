MetaArgs: null
Stages:
- BaseName: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Henry Huang"'
    Name: label
  - Maintainer: Henry Huang "https://github.com/henry2423"
    Name: maintainer
  - Env:
    - Key: REFRESHED_AT
      Value: "2018-10-29"
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y sudo     xterm     curl
    Name: run
    PrependShell: true
  - Key: user
    Name: arg
    Value: ros
  - Key: passwd
    Name: arg
    Value: ros
  - Key: uid
    Name: arg
    Value: "1000"
  - Key: gid
    Name: arg
    Value: "1000"
  - Env:
    - Key: USER
      Value: $user
    Name: env
  - Env:
    - Key: PASSWD
      Value: $passwd
    Name: env
  - Env:
    - Key: UID
      Value: $uid
    Name: env
  - Env:
    - Key: GID
      Value: $gid
    Name: env
  - CmdLine:
    - groupadd $USER &&     useradd --create-home --no-log-init -g $USER $USER &&     usermod
      -aG sudo $USER &&     echo "$PASSWD:$PASSWD" | chpasswd &&     chsh -s /bin/bash
      $USER &&     usermod  --uid $UID $USER &&     groupmod --gid $GID $USER
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
      &&     sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
      &&     sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode
      stable main" > /etc/apt/sources.list.d/vscode.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo apt-get install -y apt-transport-https &&     sudo apt-get update &&     sudo
      apt-get install -y code
    Name: run
    PrependShell: true
  - Labels:
    - Key: io.k8s.description
      Value: '"Headless VNC Container with Xfce window manager, firefox and chromium"'
    - Key: io.k8s.display-name
      Value: '"Headless VNC Container based on Ubuntu"'
    - Key: io.openshift.expose-services
      Value: '"6901:http,5901:xvnc"'
    - Key: io.openshift.tags
      Value: '"vnc, ubuntu, xfce"'
    - Key: io.openshift.non-scalable
      Value: "true"
    Name: label
  - Env:
    - Key: DISPLAY
      Value: :1
    - Key: VNC_PORT
      Value: "5901"
    - Key: NO_VNC_PORT
      Value: "6901"
    Name: env
  - Name: expose
    Ports:
    - $NO_VNC_PORT
    - $VNC_PORT
  - Env:
    - Key: VNCPASSWD
      Value: vncpassword
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$USER
    - Key: TERM
      Value: xterm
    - Key: STARTUPDIR
      Value: /dockerstartup
    - Key: INST_SCRIPTS
      Value: /home/$USER/install
    - Key: NO_VNC_HOME
      Value: /home/$USER/noVNC
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: VNC_COL_DEPTH
      Value: "24"
    - Key: VNC_RESOLUTION
      Value: 1920x1080
    - Key: VNC_PW
      Value: $VNCPASSWD
    - Key: VNC_VIEW_ONLY
      Value: "false"
    Name: env
  - Name: workdir
    Path: $HOME
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./src/common/install/
    - $INST_SCRIPTS/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./src/ubuntu/install/
    - $INST_SCRIPTS/
  - CmdLine:
    - find $INST_SCRIPTS -name '*.sh' -exec chmod a+x {} +
    Name: run
    PrependShell: true
  - CmdLine:
    - $INST_SCRIPTS/tools.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '''en_US.UTF-8'''
    - Key: LANGUAGE
      Value: '''en_US:en'''
    - Key: LC_ALL
      Value: '''en_US.UTF-8'''
    Name: env
  - CmdLine:
    - $INST_SCRIPTS/tigervnc.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - $INST_SCRIPTS/no_vnc.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - $INST_SCRIPTS/firefox.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - $INST_SCRIPTS/chrome.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - $INST_SCRIPTS/xfce_ui.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./src/common/xfce/
    - $HOME/
  - CmdLine:
    - $INST_SCRIPTS/libnss_wrapper.sh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./src/common/scripts
    - $STARTUPDIR
  - CmdLine:
    - $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR $HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y vim     tmux     git
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "deb http://packages.ros.org/ros/ubuntu xenial main" >                 /etc/apt/sources.list.d/ros-latest.list'
      &&     apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key
      421C365BD9FF1F717815A3895523BAEEB01FA116 &&     apt-get update && apt-get install
      -y ros-lunar-desktop &&     apt-get install -y python-rosinstall &&     rosdep
      init
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release
      -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list' &&     wget http://packages.osrfoundation.org/gazebo.key
      -O - | sudo apt-key add - &&     apt-get update &&     apt-get install -y gazebo9
      libgazebo9-dev &&     apt-get install -y ros-lunar-gazebo9-ros-pkgs ros-lunar-gazebo9-ros-control
    Name: run
    PrependShell: true
  - Name: user
    User: $USER
  - CmdLine:
    - rosdep fix-permissions && rosdep update
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /opt/ros/lunar/setup.bash" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "source ~/.bashrc"
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get install -y wget python-pip python-dev libgtk2.0-0 unzip libblas-dev
      liblapack-dev libhdf5-dev &&     curl https://bootstrap.pypa.io/get-pip.py -o
      get-pip.py &&     python get-pip.py
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.11.0-cp27-none-linux_x86_64.whl
      &&     pip install keras==2.2.4 matplotlib pandas scipy h5py testresources scikit-learn
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "6006"
  - Name: expose
    Ports:
    - "8888"
  - Name: user
    User: $USER
  - CmdLine:
    - /dockerstartup/vnc_startup.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - --wait
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
