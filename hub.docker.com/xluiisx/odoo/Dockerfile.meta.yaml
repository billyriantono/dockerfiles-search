MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Luis Triana <luis.triana@jarsa.com.mx>
    Name: maintainer
  - CmdLine:
    - echo 'APT::Get::Assume-Yes "true";' >> /etc/apt/apt.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install sudo gnupg language-pack-es -y     &&
      locale-gen "en_US.UTF-8" "fr_FR.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: '"en_US.UTF-8"'
    - Key: LANGUAGE
      Value: '"en_US.UTF-8"'
    - Key: LC_ALL
      Value: '"en_US.UTF-8"'
    - Key: PYTHONIOENCODING
      Value: '"UTF-8"'
    - Key: TERM
      Value: '"xterm"'
    - Key: DEBIAN_FRONTEND
      Value: '"noninteractive"'
    Name: env
  - CmdLine:
    - apt-get update -q && apt-get upgrade -q &&     apt-get install --allow-unauthenticated
      -q     wget
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main' >> /etc/apt/sources.list.d/pgdg.list
      &&     wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc
      |     sudo apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://security.ubuntu.com/ubuntu xenial-security main' >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -q && apt-get upgrade -q &&     apt-get install --allow-unauthenticated
      -q         aptitude         build-essential         curl         fontconfig         git         libevent-dev         libfontconfig1         libjpeg-turbo8         libldap2-dev         libpng12-0         libsasl2-dev         libssl1.0-dev         libxml2-dev         libxrender1         libxslt-dev         nano         node-gyp         node-less         nodejs         nodejs-dev         npm         openssh-server         openssl         openssl         postgresql-9.6         postgresql-client-9.6         postgresql-contrib-9.6         postgresql-server-dev-9.6         python3         python3-dev         python3-pip         swig         xmlstarlet         xsltproc         xz-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.1/wkhtmltox-0.12.1_linux-trusty-amd64.deb     &&
      dpkg -i wkhtmltox-0.12.1_linux-trusty-amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     wget -q https://raw.githubusercontent.com/odoo/odoo/12.0/requirements.txt
      &&     pip3 install -r requirements.txt && pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install vobject qrcode pyldap num2words
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser --home=/home/odoo-12.0/ --disabled-password --gecos "" --shell=/bin/bash
      odoo
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:odoo**' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "odoo ALL=(root) NOPASSWD:ALL" | tee -a /etc/sudoers.d/user &&     chmod
      0440 /etc/sudoers.d/user
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/odoo-server.conf
    - /home/odoo-12.0/odoo-server.conf
  - CmdLine:
    - chown odoo /home/odoo-12.0/odoo-server.conf &&     chmod +x /home/odoo-12.0/odoo-server.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /home/odoo-12.0/ && git clone -b 12.0 --single-branch --depth=1 https://github.com/odoo/odoo.git
      odoo
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R odoo:odoo /home/ && chmod +x /home/odoo-12.0/odoo
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/.local/share/Odoo/filestore &&     chown -R odoo:odoo /home/.local/share/Odoo/filestore
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /home/odoo-12.0/extra-addons         && chown -R odoo /home/odoo-12.0/extra-addons
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/.local/share/Odoo/filestore
    - /home/odoo-12.0/extra-addons
    - /home/odoo-12.0/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/ssl/private-copy &&     mv /etc/ssl/private/* /etc/ssl/private-copy/
      &&     rm -r /etc/ssl/private &&     mv /etc/ssl/private-copy /etc/ssl/private
      &&     chmod -R 0700 /etc/ssl/private &&     chown -R postgres /etc/ssl/private
    Name: run
    PrependShell: true
  - Name: user
    User: postgres
  - CmdLine:
    - /etc/init.d/postgresql start &&     psql --command "CREATE USER odoo WITH SUPERUSER
      PASSWORD 'odoo';"
    Name: run
    PrependShell: true
  - Name: user
    User: odoo
  - CmdLine:
    - /entrypoint.sh
    Name: cmd
    PrependShell: true
  - Name: expose
    Ports:
    - "8069"
  - Name: expose
    Ports:
    - "8072"
  - Name: expose
    Ports:
    - "22"
  - Name: expose
    Ports:
    - "5432"
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
