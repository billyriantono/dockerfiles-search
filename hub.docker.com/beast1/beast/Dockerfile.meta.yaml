MetaArgs: null
Stages:
- BaseName: dorowu/ubuntu-desktop-lxde-vnc
  Commands:
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - "apt-get update && apt-get install -y \tant \tbuild-essential \tautoconf \tautomake
      \tlibtool \tsubversion \tpkg-config \tgit \topenjdk-7-jdk"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y autoremove
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - which gcc
    Name: run
    PrependShell: true
  - CmdLine:
    - gcc --version
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-7-openjdk-amd64
    Name: env
  - Env:
    - Key: JAVA_TOOL_OPTIONS
      Value: -Dfile.encoding=UTF8
    Name: env
  - Env:
    - Key: ROOT_HOME
      Value: /root
    Name: env
  - Env:
    - Key: USER_HOME
      Value: /home/ubuntu
    Name: env
  - Name: workdir
    Path: ${ROOT_HOME}
  - CmdLine:
    - git clone --depth=1 https://beast-dev@github.com/beast-dev/beast-mcmc.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${ROOT_HOME}/beast-mcmc
  - CmdLine:
    - ls
    Name: run
    PrependShell: true
  - CmdLine:
    - ant linux
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ${ROOT_HOME}/beast-mcmc/release/Linux/BEASTv1* /usr/local/beast
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${ROOT_HOME}
  - CmdLine:
    - git clone --depth=1 https://beagle-lib@github.com/beagle-dev/beagle-lib.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${ROOT_HOME}/beagle-lib
  - CmdLine:
    - ./autogen.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure --disable-sse --disable-march-native --prefix=/usr/local
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Labels:
    - Key: com.nvidia.volumes.needed
      Value: '"nvidia_driver"'
    Name: label
  - Env:
    - Key: NVIDIA_GPGKEY_SUM
      Value: bd841d59a27a406e513db7d405550894188a4c1cd96bf8aa4f82f1b39e0b5c1c
    Name: env
  - Env:
    - Key: NVIDIA_GPGKEY_FPR
      Value: 889bee522da690103c4b085ed88c3d385c37d3be
    Name: env
  - CmdLine:
    - apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/GPGKEY
      &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n
      +2 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum
      -c --strict - && rm cudasign.pub &&     echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64
      /" > /etc/apt/sources.list.d/cuda.list
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_VERSION
      Value: "7.5"
    Name: env
  - Labels:
    - Key: com.nvidia.cuda.version
      Value: '"7.5"'
    Name: label
  - Env:
    - Key: CUDA_PKG_VERSION
      Value: 7-5=7.5-18
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends --force-yes         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-$CUDA_PKG_VERSION         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION
      &&     ln -s cuda-$CUDA_VERSION /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/cuda/lib" >> /etc/ld.so.conf.d/cuda.conf &&     echo "/usr/local/cuda/lib64"
      >> /etc/ld.so.conf.d/cuda.conf &&     ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64"
      >> /etc/ld.so.conf.d/nvidia.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends --force-yes         cuda-core-$CUDA_PKG_VERSION         cuda-misc-headers-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-license-$CUDA_PKG_VERSION         cuda-nvrtc-dev-$CUDA_PKG_VERSION         cuda-cusolver-dev-$CUDA_PKG_VERSION         cuda-cublas-dev-$CUDA_PKG_VERSION         cuda-cufft-dev-$CUDA_PKG_VERSION         cuda-curand-dev-$CUDA_PKG_VERSION         cuda-cusparse-dev-$CUDA_PKG_VERSION         cuda-npp-dev-$CUDA_PKG_VERSION         cuda-cudart-dev-$CUDA_PKG_VERSION         cuda-driver-dev-$CUDA_PKG_VERSION
      &&     cd /tmp && apt-get download gpu-deployment-kit &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/gpu-deployment-kit && cd /tmp/gpu-deployment-kit &&     dpkg -x /tmp/gpu-deployment-kit_*.deb
      . &&     mv usr/include/nvidia/gdk/* /usr/local/cuda/include &&     mv usr/src/gdk/nvml/lib/*
      /usr/local/cuda/lib64/stubs &&     rm -rf /tmp/gpu-deployment-kit*
    Name: run
    PrependShell: true
  - Env:
    - Key: LIBRARY_PATH
      Value: /usr/local/cuda/lib64/stubs:${LIBRARY_PATH}
    Name: env
  - CmdLine:
    - useradd --create-home --shell /bin/bash --user-group --groups adm,sudo ubuntu
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "ubuntu:ubuntu" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''export PS1="[beast docker \u] \W # "'' >> ${USER_HOME}/.bashrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH=/usr/local/beast/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:$PATH'
      >> ${USER_HOME}/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}'
      >> ${USER_HOME}/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LIBRARY_PATH}' >> ${USER_HOME}/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo -u ubuntu -i bash -c "mkdir -p /home/ubuntu/.config/pcmanfm/LXDE/     &&
      cp /usr/share/doro-lxde-wallpapers/desktop-items-0.conf /home/ubuntu/.config/pcmanfm/LXDE/"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "6080"
  - Name: workdir
    Path: /root
  - Chown: ""
    Name: add
    SourcesAndDest:
    - startup.sh
    - /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - run_server.sh
    - /
  - Chown: ""
    Name: add
    SourcesAndDest:
    - reinstall_beagle
    - /usr/local/bin
  - CmdLine:
    - /startup.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: dorowu/ubuntu-desktop-lxde-vnc
  Name: ""
  Platform: ""
  SourceCode: FROM dorowu/ubuntu-desktop-lxde-vnc
