{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "alpine:3.10.3",
      "SourceCode": "FROM alpine:3.10.3 as base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "alpine:3.10.3"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Denys Zhdanov \u003cdenis.zhdanov@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "true  \u0026\u0026 apk add --no-cache       cairo       collectd       collectd-disk       collectd-nginx       findutils       librrd       logrotate       memcached       nginx       nodejs       npm       py3-pyldap       redis       runit       sqlite       expect       dcron       py-mysqldb       mysql-dev       mysql-client       postgresql-dev       postgresql-client  \u0026\u0026 rm -rf       /etc/nginx/conf.d/default.conf  \u0026\u0026 mkdir -p       /var/log/carbon       /var/log/graphite"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "build",
      "BaseName": "base",
      "SourceCode": "FROM base as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Denys Zhdanov \u003cdenis.zhdanov@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "true  \u0026\u0026 apk add --update       alpine-sdk       git       libffi-dev       pkgconfig       py3-cairo       py3-pip       py3-pyldap       py3-virtualenv       py-rrd       py-mysqldb       openldap-dev       python3-dev       rrdtool-dev       wget  \u0026\u0026 virtualenv /opt/graphite  \u0026\u0026 . /opt/graphite/bin/activate  \u0026\u0026 pip3 install       django==1.11.25       django-statsd-mozilla       fadvise       gunicorn==19.9.0       msgpack-python       redis       rrdtool       python-ldap       mysqlclient       psycopg2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "version",
          "Name": "arg",
          "Value": "1.1.6"
        },
        {
          "Key": "whisper_version",
          "Name": "arg",
          "Value": "${version}"
        },
        {
          "Key": "whisper_repo",
          "Name": "arg",
          "Value": "https://github.com/graphite-project/whisper.git"
        },
        {
          "CmdLine": [
            "git clone -b ${whisper_version} --depth 1 ${whisper_repo} /usr/local/src/whisper  \u0026\u0026 cd /usr/local/src/whisper  \u0026\u0026 . /opt/graphite/bin/activate  \u0026\u0026 python3 ./setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "carbon_version",
          "Name": "arg",
          "Value": "${version}"
        },
        {
          "Key": "carbon_repo",
          "Name": "arg",
          "Value": "https://github.com/graphite-project/carbon.git"
        },
        {
          "CmdLine": [
            ". /opt/graphite/bin/activate  \u0026\u0026 git clone -b ${carbon_version} --depth 1 ${carbon_repo} /usr/local/src/carbon  \u0026\u0026 cd /usr/local/src/carbon  \u0026\u0026 pip3 install -r requirements.txt  \u0026\u0026 python3 ./setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "graphite_version",
          "Name": "arg",
          "Value": "${version}"
        },
        {
          "Key": "graphite_repo",
          "Name": "arg",
          "Value": "https://github.com/graphite-project/graphite-web.git"
        },
        {
          "CmdLine": [
            ". /opt/graphite/bin/activate  \u0026\u0026 git clone -b ${graphite_version} --depth 1 ${graphite_repo} /usr/local/src/graphite-web  \u0026\u0026 cd /usr/local/src/graphite-web  \u0026\u0026 pip3 install -r requirements.txt  \u0026\u0026 python3 ./setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "statsd_version",
          "Name": "arg",
          "Value": "0.8.5"
        },
        {
          "Key": "statsd_repo",
          "Name": "arg",
          "Value": "https://github.com/statsd/statsd.git"
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "git clone \"${statsd_repo}\"  \u0026\u0026 cd /opt/statsd  \u0026\u0026 git checkout tags/v\"${statsd_version}\"  \u0026\u0026 npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/opt/graphite/conf/",
            "/opt/defaultconf/graphite/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/opt/graphite/webapp/graphite/local_settings.py",
            "/opt/defaultconf/graphite/local_settings.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/opt/graphite/conf/*.conf",
            "/opt/graphite/conf/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/opt/graphite/webapp/graphite/local_settings.py",
            "/opt/graphite/webapp/graphite/local_settings.py"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/graphite/webapp"
        },
        {
          "CmdLine": [
            "mkdir -p /var/log/graphite/   \u0026\u0026 PYTHONPATH=/opt/graphite/webapp /opt/graphite/bin/django-admin.py collectstatic --noinput --settings=graphite.settings"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/opt/statsd/config/",
            "/opt/defaultconf/statsd/config/"
          ]
        }
      ]
    },
    {
      "Name": "production",
      "BaseName": "base",
      "SourceCode": "FROM base as production",
      "Platform": "",
      "As": "production",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Denys Zhdanov \u003cdenis.zhdanov@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "STATSD_INTERFACE",
              "Value": "udp"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt",
            "/opt"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2003-2004",
            "2013-2014",
            "2023-2024",
            "80",
            "8080",
            "8125",
            "8125/udp",
            "8126"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/graphite/conf",
            "/opt/graphite/storage",
            "/opt/graphite/webapp/graphite/functions/custom",
            "/etc/nginx",
            "/opt/statsd/config",
            "/etc/logrotate.d",
            "/var/log",
            "/var/lib/redis"
          ]
        },
        {
          "Name": "stopsignal",
          "Signal": "SIGHUP"
        },
        {
          "CmdLine": [
            "/entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}