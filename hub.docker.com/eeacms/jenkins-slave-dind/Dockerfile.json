{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "eeacms/jenkins-slave:3.17",
      "SourceCode": "FROM eeacms/jenkins-slave:3.17",
      "Platform": "",
      "From": {
        "Image": "eeacms/jenkins-slave:3.17"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "17.12.1"
            },
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "1.25.0"
            },
            {
              "Key": "DOCKER_COMPOSE_MD5",
              "Value": "8def6e62e57d24a58d99437407e9f9e6"
            },
            {
              "Key": "CLAIR_SCANNER_VERSION",
              "Value": "v12"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends apt-transport-https ca-certificates software-properties-common acl  \u0026\u0026 curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -  \u0026\u0026 add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends docker-ce=$DOCKER_VERSION*  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 curl -o /bin/docker-compose -SL https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-Linux-x86_64  \u0026\u0026 echo \"$DOCKER_COMPOSE_MD5  /bin/docker-compose\" | md5sum -c -  \u0026\u0026 chmod +x /bin/docker-compose  \u0026\u0026 pip install j2cli  \u0026\u0026 curl -L -o /usr/bin/clair-scanner https://github.com/arminc/clair-scanner/releases/download/$CLAIR_SCANNER_VERSION/clair-scanner_linux_amd64  \u0026\u0026 chmod 777 /usr/bin/clair-scanner"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ini/settings.xml.j2",
            "/tmp/settings.xml.j2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/scan_catalog_entry.sh",
            "docker-entrypoint-dind.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint-dind.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "java",
            "-jar",
            "/bin/swarm-client.jar"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}