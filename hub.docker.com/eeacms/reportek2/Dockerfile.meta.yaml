MetaArgs: null
Stages:
- BaseName: python:3.6-slim
  Commands:
  - Key: REQUIREMENTS_FILE
    Name: arg
    Value: requirements.txt
  - Env:
    - Key: PYTHONUNBUFFERED
      Value: "1"
    Name: env
  - Env:
    - Key: APP_HOME
      Value: /var/local/reportek/
    Name: env
  - Env:
    - Key: MEDIA_ROOT
      Value: /var/local/uploads/
    Name: env
  - Env:
    - Key: PROTECTED_ROOT
      Value: = /var/local/protected_uploads
    Name: env
  - Env:
    - Key: DOWNLOAD_STAGING_ROOT
      Value: = /var/local/download_staging
    Name: env
  - CmdLine:
    - apt-get update -y   && apt-get install -y --no-install-recommends apt-utils
      curl bzip2 netcat-traditional lsb-release ca-certificates   && sh -c 'echo "deb
      http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'   &&
      curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -   &&
      curl -sL https://deb.nodesource.com/setup_8.x | bash -   && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg
      | apt-key add -   && echo "deb https://dl.yarnpkg.com/debian/ stable main" |
      tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - runDeps="gcc postgresql-client-10 libxml2-dev libxslt-dev libsasl2-dev python-dev
      libldap2-dev libssl-dev git nodejs yarn"  && apt-get update -y  && apt-get install
      -y --no-install-recommends $runDeps  && apt-get clean  && rm -vrf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $APP_HOME $MEDIA_ROOT $PROTECTED_ROOT $DOWNLOAD_STAGING_ROOT
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - yarn.lock
    - package*.json
    - $REQUIREMENTS_FILE
    - $APP_HOME
  - Name: workdir
    Path: $APP_HOME
  - CmdLine:
    - pip install --no-cache-dir -r $REQUIREMENTS_FILE
    Name: run
    PrependShell: true
  - CmdLine:
    - npm_config_tmp=$APP_HOME yarn
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $APP_HOME
  - CmdLine:
    - npm run build
    Name: run
    PrependShell: true
  - CmdLine:
    - ./docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - run
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.6-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-slim
