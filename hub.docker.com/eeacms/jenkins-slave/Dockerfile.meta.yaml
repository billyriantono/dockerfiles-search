MetaArgs: null
Stages:
- BaseName: openjdk:8
  Commands:
  - Env:
    - Key: GOSU_VERSION
      Value: "1.11"
    - Key: SWARM_VERSION
      Value: "3.17"
    - Key: MD5
      Value: 4127f1f832d227d3e6a3bfd419edc0de
    - Key: PHANTOMJS_VERSION
      Value: phantomjs-2.1.1-linux-x86_64
    - Key: MD5PHANTOMJS
      Value: 1c947d57fce2f21ce0b43fe2ed7cd361
    - Key: CASPERJS_VERSION
      Value: 1.1.4-2
    Name: env
  - CmdLine:
    - apt-get update  && apt-get install -y --no-install-recommends ca-certificates
      wget bzip2 python  && rm -rf /var/lib/apt/lists/*  && wget -O /usr/local/bin/gosu
      "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)"  && wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc"  && export GNUPGHOME="$(mktemp -d)"  && GPG_KEYS=B42F6819007F00F88E364FD4036A9C25BF357DD4  &&
      gpg --keyserver hkp://:p80.pool.sks-keyservers.net:80 --recv-keys "$GPG_KEYS"   ||
      gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEYS"   || gpg
      --keyserver pgp.mit.edu --recv-keys "$GPG_KEYS"   || gpg --keyserver keyserver.pgp.com
      --recv-keys "$GPG_KEYS"  && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu  &&
      rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc  && chmod +x /usr/local/bin/gosu  &&
      gosu nobody true
    Name: run
    PrependShell: true
  - CmdLine:
    - curl "https://bootstrap.pypa.io/get-pip.py" -o "/tmp/get-pip.py"  && python
      /tmp/get-pip.py  && pip install virtualenv  && rm /tmp/get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --no-check-certificate https://bitbucket.org/ariya/phantomjs/downloads/$PHANTOMJS_VERSION.tar.bz2  &&
      echo "$MD5PHANTOMJS  ${PHANTOMJS_VERSION}.tar.bz2" | md5sum -c -  && tar xvf
      ${PHANTOMJS_VERSION}.tar.bz2  && mv $PHANTOMJS_VERSION/bin/phantomjs /usr/local/bin/  &&
      rm -rf phantom*
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone  -b ${CASPERJS_VERSION}  git://github.com/casperjs/casperjs.git  &&
      mv casperjs /opt/  && ln -sf /opt/casperjs/bin/casperjs /usr/local/bin/casperjs
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/jenkins_home  && useradd -d /var/jenkins_home/worker -u 1000 -m
      -s /bin/bash jenkins  && curl -o /bin/swarm-client.jar -SL https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/$SWARM_VERSION/swarm-client-$SWARM_VERSION.jar  &&
      echo "$MD5  /bin/swarm-client.jar" | md5sum -c -
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - Name: volume
    Volumes:
    - /var/jenkins_home/worker
  - Name: workdir
    Path: /var/jenkins_home/worker
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - java
    - -jar
    - /bin/swarm-client.jar
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8
