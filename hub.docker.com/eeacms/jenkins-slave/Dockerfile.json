{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8",
      "SourceCode": "FROM openjdk:8",
      "Platform": "",
      "From": {
        "Image": "openjdk:8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.11"
            },
            {
              "Key": "SWARM_VERSION",
              "Value": "3.17"
            },
            {
              "Key": "MD5",
              "Value": "4127f1f832d227d3e6a3bfd419edc0de"
            },
            {
              "Key": "PHANTOMJS_VERSION",
              "Value": "phantomjs-2.1.1-linux-x86_64"
            },
            {
              "Key": "MD5PHANTOMJS",
              "Value": "1c947d57fce2f21ce0b43fe2ed7cd361"
            },
            {
              "Key": "CASPERJS_VERSION",
              "Value": "1.1.4-2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates wget bzip2 python  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"  \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"  \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"  \u0026\u0026 GPG_KEYS=B42F6819007F00F88E364FD4036A9C25BF357DD4  \u0026\u0026 gpg --keyserver hkp://:p80.pool.sks-keyservers.net:80 --recv-keys \"$GPG_KEYS\"   || gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\"   || gpg --keyserver pgp.mit.edu --recv-keys \"$GPG_KEYS\"   || gpg --keyserver keyserver.pgp.com --recv-keys \"$GPG_KEYS\"  \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu  \u0026\u0026 rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc  \u0026\u0026 chmod +x /usr/local/bin/gosu  \u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl \"https://bootstrap.pypa.io/get-pip.py\" -o \"/tmp/get-pip.py\"  \u0026\u0026 python /tmp/get-pip.py  \u0026\u0026 pip install virtualenv  \u0026\u0026 rm /tmp/get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-check-certificate https://bitbucket.org/ariya/phantomjs/downloads/$PHANTOMJS_VERSION.tar.bz2  \u0026\u0026 echo \"$MD5PHANTOMJS  ${PHANTOMJS_VERSION}.tar.bz2\" | md5sum -c -  \u0026\u0026 tar xvf ${PHANTOMJS_VERSION}.tar.bz2  \u0026\u0026 mv $PHANTOMJS_VERSION/bin/phantomjs /usr/local/bin/  \u0026\u0026 rm -rf phantom*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone  -b ${CASPERJS_VERSION}  git://github.com/casperjs/casperjs.git  \u0026\u0026 mv casperjs /opt/  \u0026\u0026 ln -sf /opt/casperjs/bin/casperjs /usr/local/bin/casperjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/jenkins_home  \u0026\u0026 useradd -d /var/jenkins_home/worker -u 1000 -m -s /bin/bash jenkins  \u0026\u0026 curl -o /bin/swarm-client.jar -SL https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/$SWARM_VERSION/swarm-client-$SWARM_VERSION.jar  \u0026\u0026 echo \"$MD5  /bin/swarm-client.jar\" | md5sum -c -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/jenkins_home/worker"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/jenkins_home/worker"
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "java",
            "-jar",
            "/bin/swarm-client.jar"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}