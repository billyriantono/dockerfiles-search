{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6",
      "SourceCode": "FROM python:3.6",
      "Platform": "",
      "From": {
        "Image": "python:3.6"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex;     key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg --export \"$key\" \u003e /etc/apt/trusted.gpg.d/postgres.gpg; \trm -r \"$GNUPGHOME\"; \tapt-key list \t\u0026\u0026 \techo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' 9.5 \u003e /etc/apt/sources.list.d/pgdg.list     \u0026\u0026     apt-get update \u0026\u0026 apt-get install -y --no-install-recommends \t\tpostgresql-client-9.5 \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir uwsgi psycopg2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -r django     \u0026\u0026 useradd -r -g django django"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./requirements.txt",
            "/requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r /requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./compose/django/entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh     \u0026\u0026 chown django /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./code",
            "/app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Env": [
            {
              "Key": "DJANGO_READ_DOT_ENV_FILE",
              "Value": "False"
            },
            {
              "Key": "DJANGO_SECRET_KEY",
              "Value": "'stub'"
            },
            {
              "Key": "DJANGO_ALLOWED_HOSTS",
              "Value": "'stub'"
            },
            {
              "Key": "POSTGRES_DB",
              "Value": "'stub'"
            },
            {
              "Key": "POSTGRES_USER",
              "Value": "'stub'"
            },
            {
              "Key": "POSTGRES_PASSWORD",
              "Value": "'stub'"
            },
            {
              "Key": "POSTGRES_HOST",
              "Value": "'stub'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ./staticfiles \u0026\u0026 python ./manage.py collectstatic -i node_modules --no-input \u0026\u0026 python ./manage.py compress --force \u0026\u0026 chown -R django:django ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "django"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}