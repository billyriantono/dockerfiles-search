{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6-alpine3.6",
      "SourceCode": "FROM python:3.6-alpine3.6",
      "Platform": "",
      "From": {
        "Image": "python:3.6-alpine3.6"
      },
      "Commands": [
        {
          "Key": "REQUIREMENTS_FILE",
          "Name": "arg",
          "Value": "requirements.txt"
        },
        {
          "Env": [
            {
              "Key": "PROJ_DIR",
              "Value": "/var/local/reportek/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MEDIA_ROOT",
              "Value": "/var/local/uploads/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROTECTED_ROOT",
              "Value": "= /var/local/protected_uploads"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOWNLOAD_STAGING_ROOT",
              "Value": "= /var/local/download_staging"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "runDeps=\"gcc musl-dev postgresql-dev postgresql-client libressl-dev libxml2-dev libxslt-dev openldap git\"     \u0026\u0026 apk add --no-cache $runDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps         gcc musl-dev postgresql-dev libressl-dev libxml2-dev libxslt-dev openldap-dev     \u0026\u0026 mkdir -p $PROJ_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "*requirements.txt",
            "$PROJ_DIR"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$PROJ_DIR"
        },
        {
          "CmdLine": [
            "pip install --no-cache-dir -r $REQUIREMENTS_FILE     \u0026\u0026 apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "$PROJ_DIR"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p $MEDIA_ROOT $PROTECTED_ROOT $DOWNLOAD_STAGING_ROOT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if [ \"x$DJANGO_COLLECT_STATIC\" = \"xyes\" ] ; then python manage.py collectstatic --noinput ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "./docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "run"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}