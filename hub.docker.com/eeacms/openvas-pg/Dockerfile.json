{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "fedora",
      "SourceCode": "FROM fedora",
      "Platform": "",
      "From": {
        "Image": "fedora"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"andrei.cenja@eea.europa.eu\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "dnf -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dnf -y install openvas-* redis bzip2 which findutils sqlite procps-ng nmap mingw32-nsis texlive-latex-bin-bin openssh gnutls-utils net-tools alien nikto ike-scan net-snmp-utils openldap-clients samba-client ncrack ssmtp gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's|# unixsocket |unixsocket |' /etc/redis.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's|daemonize no|daemonize yes|' /etc/redis.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's|port 6379|port 0|' /etc/redis.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/openvas/openvasmd/gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "startd",
            "update",
            "/usr/sbin/"
          ]
        },
        {
          "CmdLine": [
            "dnf -y install dnf-plugins-core"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dnf download --source openvas-manager"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rpm -i openvas-manager-*.src.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "openvas-manager.spec-*-postgresql.patch",
            "/"
          ]
        },
        {
          "CmdLine": [
            "patch $HOME/rpmbuild/SPECS/openvas-manager.spec openvas-manager.spec-*-postgresql.patch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dnf -y builddep $HOME/rpmbuild/SPECS/openvas-manager.spec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rpmbuild -bb $HOME/rpmbuild/SPECS/openvas-manager.spec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dnf -y reinstall $HOME/rpmbuild/RPMS/x86_64/openvas-manager-*.x86_64.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"/usr/lib/openvasmd/pg\" \u003e /etc/ld.so.conf.d/openvas-manager.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.18.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/tini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc",
            "/tini.asc"
          ]
        },
        {
          "CmdLine": [
            "gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7  \u0026\u0026 gpg --verify /tini.asc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/sbin/startd"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}