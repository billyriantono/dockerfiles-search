{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "pyannote/base-scientific-python",
      "SourceCode": "FROM pyannote/base-scientific-python",
      "Platform": "",
      "From": {
        "Image": "pyannote/base-scientific-python"
      },
      "Commands": [
        {
          "Maintainer": "Herv√© Bredin \u003cbredin@limsi.fr\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends     libass-dev     libfdk-aac-dev     libmp3lame-dev     libopus-dev     libtheora-dev     libvdpau-dev     libvorbis-dev     libvpx-dev     libx264-dev     yasm     nasm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/ffmpeg_sources   \u0026\u0026 cd /tmp/ffmpeg_sources   \u0026\u0026 wget http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2   \u0026\u0026 tar xjvf ffmpeg-snapshot.tar.bz2   \u0026\u0026 rm ffmpeg-snapshot.tar.bz2   \u0026\u0026 cd ffmpeg   \u0026\u0026 ./configure      --enable-shared      --enable-gpl      --enable-libass      --enable-libfdk-aac      --enable-libfreetype      --enable-libmp3lame      --enable-libopus      --enable-libtheora      --enable-libvorbis      --enable-libvpx      --enable-libx264      --enable-nonfree   \u0026\u0026 make   \u0026\u0026 make install   \u0026\u0026 make distclean   \u0026\u0026 hash -r   \u0026\u0026 rm -rf /tmp/ffmpeg_sources"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends   libgtk2.0-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/opencv_sources   \u0026\u0026 cd /tmp/opencv_sources   \u0026\u0026 wget https://github.com/Itseez/opencv/archive/master.zip   \u0026\u0026 unzip master.zip   \u0026\u0026 rm master.zip   \u0026\u0026 cd /tmp/opencv_sources   \u0026\u0026 wget https://github.com/Itseez/opencv_contrib/archive/master.zip   \u0026\u0026 unzip master.zip   \u0026\u0026 rm master.zip   \u0026\u0026 mkdir /tmp/opencv_sources/opencv-master/build   \u0026\u0026 cd /tmp/opencv_sources/opencv-master/build   \u0026\u0026 cmake -D CMAKE_BUILD_TYPE=RELEASE            -D CMAKE_INSTALL_PREFIX=/usr/local            -D INSTALL_C_EXAMPLES=OFF            -D INSTALL_PYTHON_EXAMPLES=ON            -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_sources/opencv_contrib-master/modules            -D BUILD_EXAMPLES=ON ..    \u0026\u0026 make -j2    \u0026\u0026 make install    \u0026\u0026 ldconfig    \u0026\u0026 rm -rf /tmp/opencv_sources"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends     libboost-dev     libboost-python-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install dlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends  libmpg123-dev  libsndfile1  libsndfile1-dev  libhdf5-dev  libargtable2-0  libargtable2-dev  libfftw3-3  libfftw3-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pytest"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/Yaafe/Yaafe/archive/v0.65.1.tar.gz \u0026\u0026     tar xzvf v0.65.1.tar.gz \u0026\u0026     cd Yaafe-0.65.1 \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake -DCMAKE_INSTALL_PREFIX=/usr/local           -DCMAKE_INSTALL_PYTHON_PACKAGES=/usr/local/lib/python2.7/dist-packages           -DCMAKE_INSTALL_YAAFE_EXTENSIONS=/usr/local/lib/python2.7/dist-packages           -DWITH_FFTW3=ON           -DWITH_LAPACK=ON           -DWITH_MATLAB_MEX=OFF           -DWITH_MPG123=ON           -DWITH_SNDFILE=ON           -DWITH_HDF5=ON           .. \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd ../.. \u0026\u0026     rm -rf Yaafe-0.65.1 v0.65.1.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "YAAFE_PATH",
              "Value": "/usr/local/lib/python2.7/dist-packages"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}