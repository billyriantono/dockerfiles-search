MetaArgs: null
Stages:
- As: golang-tools
  BaseName: ubuntu:rolling
  Commands:
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -qy --no-install-recommends curl
      git ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz >/tmp/go.tgz
      &&  tar -C /usr/local -xz -f /tmp/go.tgz &&  chown -R root:root /usr/local/go
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /tmp/go
    - Key: GOBIN
      Value: /usr/local/go/bin
    - Key: PATH
      Value: ${PATH}:/usr/local/go/bin
    Name: env
  - CmdLine:
    - go get golang.org/x/tools/cmd/godoc
    Name: run
    PrependShell: true
  - CmdLine:
    - go get golang.org/x/tools/cmd/goimports
    Name: run
    PrependShell: true
  - CmdLine:
    - go get golang.org/x/tools/cmd/gorename
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/nsf/gocode
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/rogpeppe/godef
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/kisielk/errcheck
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/jstemmer/gotags
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/Originate/git-town
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/erning/gorun
    Name: run
    PrependShell: true
  - CmdLine:
    - go get mvdan.cc/sh/cmd/shfmt
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/containous/yaegi/cmd/yaegi
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/digitalocean/doctl/cmd/doctl
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/charmbracelet/glow
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:rolling
  Name: golang-tools
  Platform: ""
  SourceCode: FROM ubuntu:rolling as golang-tools
- As: downloaded-tools
  BaseName: ubuntu:rolling
  Commands:
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -qy --no-install-recommends curl
      ca-certificates unzip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/local/bin
  - CmdLine:
    - curl -sSL https://releases.hashicorp.com/terraform/0.12.18/terraform_0.12.18_linux_amd64.zip
      >/tmp/terraform.zip &&  unzip /tmp/terraform.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://storage.googleapis.com/container-diff/latest/container-diff-linux-amd64
      >/usr/local/bin/container-diff
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSLO https://storage.googleapis.com/kubernetes-release/release/$(curl
      -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname
      -s)-$(uname -m) > /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest
      >/usr/local/bin/ecs-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://github.com/drone/drone-cli/releases/download/v1.0.7/drone_linux_amd64.tar.gz
      | tar zx
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/*
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:rolling
  Name: downloaded-tools
  Platform: ""
  SourceCode: FROM ubuntu:rolling as downloaded-tools
- As: built-tools
  BaseName: ubuntu:rolling
  Commands:
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -qy --no-install-recommends wget
      git ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -qy golang-go libgpgme-dev libassuan-dev
      libbtrfs-dev libdevmapper-dev libostree-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /tmp/go
    - Key: GOBIN
      Value: /usr/local/go/bin
    - Key: PATH
      Value: ${PATH}:/usr/local/go/bin
    Name: env
  - CmdLine:
    - git clone --depth 1 https://github.com/containers/skopeo $GOPATH/src/github.com/containers/skopeo
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GOPATH/src/github.com/containers/skopeo &&  make binary-local DISABLE_CGO=1
      &&  mv skopeo /usr/local/bin/
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:rolling
  Name: built-tools
  Platform: ""
  SourceCode: FROM ubuntu:rolling as built-tools
- BaseName: cell/playground
  Commands:
  - Env:
    - Key: DOCKER_IMAGE
      Value: '"cell/czsh"'
    Name: env
  - CmdLine:
    - apt-get update &&  apt-get install -qy --no-install-recommends zsh &&  apt-get
      clean -y && rm -rf /var/lib/apt/lists/* &&  git clone --depth 1 https://github.com/robbyrussell/oh-my-zsh.git
      /etc/skel/.oh-my-zsh &&  ln -s /etc/skel/.oh-my-zsh /root &&  ln -s /etc/skel/.zshrc
      /root
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 https://github.com/Cellophan/agnoster-zsh-theme /etc/skel/.oh-my-zsh/custom/themes/agnoster-zsh-theme
      &&  ln -s /etc/skel/.oh-my-zsh/custom/themes/agnoster-zsh-theme/agnoster.zsh-theme
      /etc/skel/.oh-my-zsh/custom/themes
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 https://github.com/zsh-users/zsh-autosuggestions /etc/skel/.oh-my-zsh/custom/plugins/zsh-autosuggestions
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 https://github.com/zsh-users/zsh-syntax-highlighting.git
      /etc/skel/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 https://github.com/Cellophan/terragrunt.plugin.zsh.git /etc/skel/.oh-my-zsh/custom/plugins/terragrunt
    Name: run
    PrependShell: true
  - Chown: ""
    From: downloaded-tools
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/kubectl
    - /usr/local/bin/kubectl
  - CmdLine:
    - mkdir -p /etc/skel/.oh-my-zsh/custom/plugins/kubectl &&  kubectl completion
      zsh > /etc/skel/.oh-my-zsh/custom/plugins/kubectl/kubectl.plugin.zsh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&  apt-get install -qy --no-install-recommends silversearcher-ag
      &&  apt-get clean -y && rm -rf /var/lib/apt/lists/* &&  git clone --depth 1
      https://github.com/junegunn/fzf.git /etc/skel/.oh-my-zsh/custom/plugins/fzf
      &&  /etc/skel/.oh-my-zsh/custom/plugins/fzf/install --bin &&  git clone --depth
      1 https://github.com/Treri/fzf-zsh.git /etc/skel/.oh-my-zsh/custom/plugins/fzf-zsh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&  apt-get install -qy --no-install-recommends wget dconf-cli
      &&  apt-get clean -y && rm -rf /var/lib/apt/lists/* &&  mkdir -p /etc/skel/.fonts
      /etc/skel.config/fontconfig/conf.d &&  wget -q -P /etc/skel/.fonts/ https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf
      &&  wget -q -P /etc/skel/.config/fontconfig/conf.d https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf
      &&  apt-get remove -y wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&  apt-get install -qy --no-install-recommends fontconfig locales
      &&  apt-get clean -y && rm -rf /var/lib/apt/lists/* &&  locale-gen en_US.UTF-8
      en_US &&  DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales &&  /usr/sbin/update-locale
      LANG=C.UTF-8 &&  chsh -s /bin/zsh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - material/payload/deploy/czsh
    - /usr/local/bin/
  - CmdLine:
    - apt-get update &&  DEBIAN_FRONTEND=noninteractive apt-get install -qy --no-install-recommends
      nnn &&  apt-get clean -y && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&  DEBIAN_FRONTEND=noninteractive apt-get install -qy --no-install-recommends
      pass gnupg2 qrencode xclip &&  apt-get clean -y && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&  DEBIAN_FRONTEND=noninteractive apt-get install -qy --no-install-recommends
      python3 python3-pip groff &&  pip3 install --system setuptools &&  pip3 install
      --system awscli &&  apt-get clean -y && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update &&  apt install -qy gnupg &&  curl -sL "https://keybase.io/crystal/pgp_keys.asc"
      | sudo apt-key add - &&  echo "deb https://dist.crystal-lang.org/apt crystal
      main" | sudo tee /etc/apt/sources.list.d/crystal.list &&  apt-get update &&  apt
      install -qy crystal libssl-dev libxml2-dev libyaml-dev libgmp-dev libreadline-dev
      libz-dev &&  apt-get clean -y && rm -rf /var/lib/apt/lists/
    Name: run
    PrependShell: true
  - Chown: ""
    From: golang-tools
    Name: copy
    SourcesAndDest:
    - /usr/local/go
    - /usr/local/go
  - Chown: ""
    From: downloaded-tools
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/*
    - /usr/local/bin/
  - Chown: ""
    From: built-tools
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/*
    - /usr/local/bin/
  - CmdLine:
    - apt-get update &&  apt-get install -qy --no-install-recommends make &&  apt-get
      clean -y && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&  apt-get install -qy --no-install-recommends pass gnupg2 &&  apt-get
      clean -y && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - material/payload
    - /opt/payload/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - material/scripts
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - material/profile.d
    - /etc/profile.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - material/virtualenv.sudoers
    - /etc/sudoers.d/virtualenv
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - material/skel
    - /etc/skel
  From:
    Image: cell/playground
  Name: ""
  Platform: ""
  SourceCode: FROM cell/playground
