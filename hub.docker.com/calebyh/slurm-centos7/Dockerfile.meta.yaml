MetaArgs: null
Stages:
- BaseName: centos:7
  Commands:
  - Labels:
    - Key: org.opencontainers.image.source
      Value: '"https://github.com/calebho/docker-centos7-slurm"'
    - Key: org.label-schema.docker.cmd
      Value: '"docker run -it -h ernie calebho/docker-centos7-slurm:latest"'
    - Key: org.opencontainers.image.title
      Value: '"docker-centos7-slurm"'
    - Key: org.opencontainers.image.description
      Value: '"SLURM in CentOS 7 with Python 3.6 and 3.7"'
    - Key: org.opencontainers.image.authors
      Value: '"Caleb Ho"'
    Name: label
  - Key: SLURM_TAG
    Name: arg
    Value: slurm-19-05-1-2
  - Env:
    - Key: PATH
      Value: '"/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin"'
    Name: env
  - CmdLine:
    - set -ex     && yum makecache fast     && yum -y update     && yum -y install
      epel-release     && yum -y install         autoconf         bash-completion         bzip2         bzip2-devel         file         gcc         gcc-c++         gdbm-devel         git         glibc-devel         gmp-devel         libffi-devel         libGL-devel         libX11-devel         make         mariadb-server         mariadb-devel         munge         munge-devel         ncurses-devel         openssl-devel         openssl-libs         perl         pkconfig         psmisc         python-devel         python-pip         readline-devel         sqlite-devel         tcl-devel         tix-devel         tk         tk-devel         supervisor         wget         vim-enhanced         zlib         zlib-devel     &&
      yum -y install https://centos7.iuscommunity.org/ius-release.rpm     && yum -y
      install         python36u         python36u-devel         python36u-pip     &&
      yum clean all     && rm -rf /var/cache/yum
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && cd /usr/src     && wget https://www.python.org/ftp/python/3.7.4/Python-3.7.4.tgz     &&
      tar xzf Python-3.7.4.tgz     && cd Python-3.7.4     && ./configure --enable-optimizations     &&
      make altinstall     && rm /usr/src/Python-3.7.4.tgz     && python3.7 -V
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && git clone https://github.com/SchedMD/slurm.git     && pushd slurm     &&
      git checkout tags/$SLURM_TAG     && ./configure --enable-debug --enable-front-end
      --prefix=/usr        --sysconfdir=/etc/slurm --with-mysql_config=/usr/bin        --libdir=/usr/lib64     &&
      make install     && install -D -m644 etc/cgroup.conf.example /etc/slurm/cgroup.conf.example     &&
      install -D -m644 etc/slurm.conf.example /etc/slurm/slurm.conf.example     &&
      install -D -m644 etc/slurmdbd.conf.example /etc/slurm/slurmdbd.conf.example     &&
      install -D -m644 contribs/slurm_completion_help/slurm_completion.sh /etc/profile.d/slurm_completion.sh     &&
      popd     && rm -rf slurm     && groupadd -r slurm      && useradd -r -g slurm
      slurm     && mkdir /etc/sysconfig/slurm         /var/spool/slurmd         /var/run/slurmd         /var/lib/slurmd         /var/log/slurm     &&
      chown slurm:root /var/spool/slurmd         /var/run/slurmd         /var/lib/slurmd         /var/log/slurm     &&
      /sbin/create-munge-key
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - slurm.conf
    - /etc/slurm/slurm.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gres.conf
    - /etc/slurm/gres.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - slurmdbd.conf
    - /etc/slurm/slurmdbd.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/
  - Name: volume
    Volumes:
    - /var/lib/mysql
    - /var/lib/slurmd
    - /var/spool/slurmd
    - /var/log/slurm
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - Env:
    - Key: TINI_VERSION
      Value: v0.18.0
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /tini
  - CmdLine:
    - chmod +x /tini
    Name: run
    PrependShell: true
  - CmdLine:
    - /tini
    - --
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: centos:7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:7
