{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "node",
      "BaseName": "node:10-alpine",
      "SourceCode": "FROM node:10-alpine AS node",
      "Platform": "",
      "As": "node",
      "From": {
        "Image": "node:10-alpine"
      },
      "Commands": null
    },
    {
      "Name": "",
      "BaseName": "php:7.3-fpm-alpine",
      "SourceCode": "FROM php:7.3-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.3-fpm-alpine"
      },
      "Commands": [
        {
          "Maintainer": "dyoshikawa",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk add -U --no-cache     bash     git     curl-dev     libxml2-dev     postgresql-dev     libpng-dev     libjpeg-turbo-dev     zip     libzip-dev     unzip     gmp-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-source extract     \u0026\u0026 cp /usr/src/php/ext/openssl/config0.m4 /usr/src/php/ext/openssl/config.m4     \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr/include --with-jpeg-dir=/usr/include     \u0026\u0026 docker-php-ext-install pdo     pdo_mysql     mysqli     pdo_pgsql     pgsql     mbstring     curl     ctype     xml     json     tokenizer     openssl     gd     zip     gmp     bcmath     exif"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache gcc g++ make autoconf     \u0026\u0026 git clone https://github.com/nikic/php-ast.git     \u0026\u0026 cd php-ast     \u0026\u0026 phpize     \u0026\u0026 ./configure     \u0026\u0026 make install     \u0026\u0026 echo 'extension=ast.so' \u003e /usr/local/etc/php/php.ini     \u0026\u0026 cd .. \u0026\u0026 rm -rf php-ast"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer     \u0026\u0026 composer global require laravel/installer     \u0026\u0026 composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "~/.composer/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKERIZE_VERSION",
              "Value": "v0.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz     \u0026\u0026 rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add sudo shadow     \u0026\u0026 groupadd -g 1000 dyoshikawa     \u0026\u0026 useradd -u 1000 -g 1000 dyoshikawa     \u0026\u0026 sed -e 's/# %wheel ALL=(ALL) NOPASSWD: ALL/%wheel ALL=(ALL) NOPASSWD: ALL/g'     -i /etc/sudoers     \u0026\u0026 sed -e 's/^wheel:\\(.*\\)/wheel:\\1,dyoshikawa/g' -i /etc/group     \u0026\u0026 mkdir /home/dyoshikawa \u0026\u0026 chown 1000:1000 -R /home/dyoshikawa     \u0026\u0026 mkdir /work \u0026\u0026 chown 1000:1000 -R /work"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache supervisor     \u0026\u0026 mkdir /run/supervisor     \u0026\u0026 apk add --no-cache nginx     \u0026\u0026 mkdir /run/nginx     \u0026\u0026 chown -R 1000:1000 /run/nginx     \u0026\u0026 chown -R 1000:1000 /var/lib/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache apache2-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "node",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local",
            "/usr/local"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache python make g++     \u0026\u0026 rm /usr/local/bin/yarn /usr/local/bin/yarnpkg     \u0026\u0026 npm i -g yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/work"
        },
        {
          "Name": "user",
          "User": "dyoshikawa"
        },
        {
          "CmdLine": null,
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}