{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docxs/spark:1.4",
      "SourceCode": "FROM   docxs/spark:1.4",
      "Platform": "",
      "From": {
        "Image": "docxs/spark:1.4"
      },
      "Commands": [
        {
          "Maintainer": "pjan vandaele \"pjan@pjan.io\"",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.4.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENBLAS_VERSION",
              "Value": "0.2.14"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_NUMPY_VERSION",
              "Value": "1.9.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_SCIPY_VERSION",
              "Value": "0.15.1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config",
            "/src/config"
          ]
        },
        {
          "CmdLine": [
            "apt-prepare  \u0026\u0026 echo \"Installing the necessary packages ...\"  \u0026\u0026 echo \"deb http://http.debian.net/debian wheezy-backports main\" \u003e\u003e /etc/apt/sources.list  \u0026\u0026 curl -sL https://deb.nodesource.com/setup_0.12 | bash -  \u0026\u0026 apt-get install -q -y --no-install-recommends       build-essential       gfortran       git-core       pandoc       sqlite3       npm       nodejs      libatlas3-base       libxml2-dev       libpq-dev       libssl-dev       zlib1g-dev       libsqlite3-dev       libzmq3-dev       libcurl4-openssl-dev       libfreetype6-dev       libhdf5-dev       libpng-dev  \u0026\u0026 echo \"Installing python ...\"  \u0026\u0026 apt-get remove -q -y --purge       python       python-minimal       python2.7       python2.7-dev       python2.7-minimal  \u0026\u0026 curl -sL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz | tar xzf - -C /opt/  \u0026\u0026 cd /opt/Python-${PYTHON_VERSION}  \u0026\u0026 ./configure  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 ln -s /usr/local/bin/python3 /usr/bin/python  \u0026\u0026 pip3 install --upgrade pip  \u0026\u0026 pip3 install cython  \u0026\u0026 echo \"Installing jupyter ...\"  \u0026\u0026 mkdir -p /opt/jupyter  \u0026\u0026 cd /opt/jupyter  \u0026\u0026 git clone https://github.com/jupyter/notebook.git  \u0026\u0026 cd notebook  \u0026\u0026 pip3 install -r requirements.txt -e .  \u0026\u0026 python3 -m ipykernel.kernelspec  \u0026\u0026 echo \"Installing openBLAS ...\"  \u0026\u0026 cd /opt  \u0026\u0026 git clone -q --branch=master git://github.com/xianyi/OpenBLAS.git  \u0026\u0026 cd OpenBLAS/  \u0026\u0026 git checkout tags/v${OPENBLAS_VERSION}  \u0026\u0026 make DYNAMIC_ARCH=1 NO_AFFINITY=1 NUM_THREADS=32  \u0026\u0026 make install  \u0026\u0026 export LD_LIBRARY_PATH=/opt/OpenBLAS/lib/  \u0026\u0026 echo \"Installing numpy ...\"  \u0026\u0026 cd /opt  \u0026\u0026 git clone -q --branch=master git://github.com/numpy/numpy.git  \u0026\u0026 cd numpy  \u0026\u0026 git checkout tags/v${PYTHON_NUMPY_VERSION}  \u0026\u0026 cp /src/config/numpy-site.cfg /opt/numpy/site.cfg  \u0026\u0026 python3 setup.py install  \u0026\u0026 echo \"Installing scipy ...\"  \u0026\u0026 cd /opt  \u0026\u0026 git clone -q --branch=master git://github.com/scipy/scipy.git  \u0026\u0026 cd scipy  \u0026\u0026 git checkout tags/v${PYTHON_SCIPY_VERSION}  \u0026\u0026 cp /src/config/scipy-site.cfg /opt/scipy/site.cfg  \u0026\u0026 ldconfig \u0026\u0026 export LD_LIBRARY_PATH=/opt/OpenBLAS/lib/  \u0026\u0026 python3 setup.py install  \u0026\u0026 echo \"Installing additional python packages ...\"  \u0026\u0026 pip3 install       pandas       scikit-learn       scikit-image       matplotlib       seaborn       h5py       yt       sympy       patsy       statsmodels       husl       ggplot       vincent       dill       networkx       tabulate       pymongo       redis       psycopg2       cloudant  \u0026\u0026 echo \"Installing tex support ...\"  \u0026\u0026 apt-get install -q -y --no-install-recommends       texlive       texlive-latex-extra  \u0026\u0026 echo \"Installing pySpark Jupyter kernel ...\"  \u0026\u0026 mkdir -p /usr/local/share/jupyter/kernels/pyspark/  \u0026\u0026 cp -r /src/config/pyspark_kernel/* /usr/local/share/jupyter/kernels/pyspark/  \u0026\u0026 echo \"Installing the bootstrap script ...\"  \u0026\u0026 mv /bin/bootstrap /bin/bootstrap-spark  \u0026\u0026 echo \"Cleaning up ...\"  \u0026\u0026 apt-get remove -q -y       libxml2-dev       libpq-dev       libssl-dev       zlib1g-dev       libsqlite3-dev  \u0026\u0026 apt-cleanup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bin",
            "/bin/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/notebooks"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "bootstrap"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-d"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}