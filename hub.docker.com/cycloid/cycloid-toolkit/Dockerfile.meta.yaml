MetaArgs: null
Stages:
- BaseName: alpine:3.6
  Commands:
  - Labels:
    - Key: Description
      Value: '"Cycloid toolkit"'
    - Key: Vendor
      Value: '"Cycloid.io"'
    - Key: Version
      Value: '"1.0"'
    Name: label
  - Maintainer: Cycloid.io
    Name: maintainer
  - Key: PYTHON_VERSION
    Name: arg
    Value: "2"
  - Key: ANSIBLE_VERSION
    Name: arg
    Value: 2.*
  - Chown: ""
    Name: add
    SourcesAndDest:
    - requirements.txt
    - /opt/
  - CmdLine:
    - ln -s /lib /lib64     &&         apk --upgrade add --no-cache             bash             sed             git             sudo             curl             zip             jq             xmlsec             yaml             ipcalc             libc6-compat             libxml2             py-lxml             pwgen             python${PYTHON_VERSION}             openssl             ca-certificates             openssh-client             rsync             patch             gettext             findutils     &&         if
      [ ${PYTHON_VERSION} -eq 2 ]; then apk add --no-cache py-pip; fi     &&         apk
      --upgrade add --no-cache --virtual             build-dependencies             build-base             python${PYTHON_VERSION}-dev             libffi-dev             openssl-dev             linux-headers             libxml2-dev     &&         pip${PYTHON_VERSION}
      install pip --upgrade &&         pip${PYTHON_VERSION} install --upgrade --no-cache-dir
      -r /opt/requirements.txt &&         pip${PYTHON_VERSION} install --upgrade --no-cache-dir
      ansible==${ANSIBLE_VERSION}     &&         ln -s $(which python${PYTHON_VERSION})
      /bin/python     &&         apk del             build-dependencies             build-base             python${PYTHON_VERSION}-dev             libffi-dev             openssl-dev             linux-headers             libxml2-dev     &&         rm
      -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - files/ssh
    - /root/.ssh
  - CmdLine:
    - chmod -R 600 /root/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/cycloidio/aws-amicleaner     && cd aws-amicleaner     &&
      pip${PYTHON_VERSION} install --no-cache-dir -q -e .     && pip${PYTHON_VERSION}
      install --no-cache-dir -q future     && rm -rf .git
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/cycloidio/ecr-cleanup-lambda/master/main.py
      > /usr/bin/aws-ecr-cleaner     && chmod +x /usr/bin/aws-ecr-cleaner
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/aws/aws-sdk-net/master/sdk/src/Core/endpoints.json
      > /etc/endpoints_new.json     && pip${PYTHON_VERSION} install --no-cache-dir
      --upgrade boto     && cp /etc/endpoints_new.json $(python${PYTHON_VERSION} -c
      "import boto; print('%s/endpoints.json' % boto.__path__[0])")
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/ansible/
    - /etc/ansible/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/*
    - /usr/bin/
  - CmdLine:
    - patch -i /etc/ansible/patch_s3_object_version $(python${PYTHON_VERSION} -c "import
      ansible; print('%s/modules/cloud/amazon/aws_s3.py' % ansible.__path__[0])")
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.6
