{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "handflucht \"handflucht@gmail.com\"",
          "Name": "maintainer"
        },
        {
          "Key": "TMP_DIR",
          "Name": "arg",
          "Value": "/tmp/docker-build-mount"
        },
        {
          "CmdLine": [
            "export DEBIAN_FRONTEND=noninteractive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \tapt-get upgrade -y \u0026\u0026 \tapt-get install -y wget nano bzip2 dos2unix \u0026\u0026 \tapt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install git autoconf libtool automake build-essential mono-devel gettext cmake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://download.mono-project.com/sources/mono/mono-4.8.0.472.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xvf mono-4.8.0.472.tar.bz2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd  mono-4.8.0; ./configure --prefix=/usr/local; make; make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mono --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cert-sync /etc/ssl/certs/ca-certificates.crt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd --create-home --home-dir /home/condauser --shell /bin/bash condauser"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "src/",
            "$TMP_DIR"
          ]
        },
        {
          "CmdLine": [
            "chmod -R +x $TMP_DIR/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dos2unix $TMP_DIR/get_anaconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$TMP_DIR/get_anaconda.sh $TMP_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "condauser"
        },
        {
          "CmdLine": [
            "bash /home/condauser/Anaconda.sh -b"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/home/condauser/anaconda3/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install --upgrade pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get install -y texlive texlive-latex-extra pandoc \u0026\u0026     pip install https://github.com/Anaconda-Server/nbbrowserpdf/archive/master.zip \u0026\u0026     python -m nbbrowserpdf.install --enable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dos2unix $TMP_DIR/config_jupyter.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$TMP_DIR/config_jupyter.sh $TMP_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/condauser/.ipython/profile_default/startup \u0026\u0026     cp $TMP_DIR/matplotlib_nb_init.py /home/condauser/.ipython/profile_default/startup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown condauser:condauser /home/condauser/.ipython /home/condauser/.jupyter /home/condauser/jupyterbooks -R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dos2unix $TMP_DIR/get_icsharp.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp $TMP_DIR/get_icsharp.sh /home/condauser/ \u0026\u0026     /home/condauser/get_icsharp.sh $TMP_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dos2unix /home/condauser/icsharp/build.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/condauser/icsharp/; /home/condauser/icsharp/build.sh brew"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed  -i 's:\"\u003cINSTALL_PATH\u003e:\"mono\", \"/home/condauser:g' /home/condauser/icsharp/kernel-spec/kernel.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/share/jupyter/kernels/icsharp \u0026\u0026 \tcp /home/condauser/icsharp/kernel-spec/* /usr/local/share/jupyter/kernels/icsharp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /home/condauser/get_icsharp.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf $TMP_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "condauser"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/condauser"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "condauser"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/condauser/jupyterbooks"
        },
        {
          "CmdLine": [
            "/bin/sh",
            "-c"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "jupyter notebook"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}