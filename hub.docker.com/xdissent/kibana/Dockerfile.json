{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "dockerfile/java:oracle-java7",
      "SourceCode": "FROM dockerfile/java:oracle-java7",
      "Platform": "",
      "From": {
        "Image": "dockerfile/java:oracle-java7"
      },
      "Commands": [
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs ruby ruby-dev ruby-bundler libssl-dev zip \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/kibana"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/kibana"
        },
        {
          "CmdLine": [
            "npm install \u0026\u0026   bower install --allow-root \u0026\u0026   bundle \u0026\u0026   cd src/server \u0026\u0026 bundle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/dev/null"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "grunt download_jruby"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            ".jruby/bin/jruby -S gem install warbler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "grunt build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir jar \u0026\u0026 cd jar \u0026\u0026 unzip ../build/dist/kibana/lib/kibana.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"\\nrequire 'bundler'\\nrequire 'bundler/index'\\nrequire 'bundler/remote_specification'\\nrequire 'bundler/endpoint_specification'\\nrequire 'bundler/dep_proxy'\" \u003e\u003e jar/META-INF/init.rb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd jar \u0026\u0026 zip ../build/dist/kibana/lib/kibana.jar META-INF/init.rb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/sh",
            "-c",
            "/kibana/build/dist/kibana/bin/kibana -e http://$ELASTICSEARCH_PORT_9200_TCP_ADDR:$ELASTICSEARCH_PORT_9200_TCP_PORT"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "5601"
          ]
        }
      ]
    }
  ]
}