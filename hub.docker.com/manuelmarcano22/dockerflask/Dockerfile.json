{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "Sebastien Binet \"binet@cern.ch\"",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "http://linux.web.cern.ch/linux/centos7/CentOS-CERN.repo",
            "/etc/yum.repos.d/CentOS-CERN.repo"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "http://linuxsoft.cern.ch/cern/centos/7.1/os/x86_64/RPM-GPG-KEY-cern",
            "/tmp/RPM-GPG-KEY-cern"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/rpm --import /tmp/RPM-GPG-KEY-cern \u0026\u0026     /bin/rm /tmp/RPM-GPG-KEY-cern"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum update -y \u0026\u0026 \tyum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install            file which"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install binutils-devel gcc gcc-c++ gcc-gfortran git make patch python-devel \t   glibc.i686 zlib.i686 ncurses-libs.i686 bzip2-libs.i686 uuid.i686 libxcb.i686 \t   libXmu.so.6 libncurses.so.5 tcsh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install            bzip2-devel            libXpm-devel libXft-devel libXext-devel            libxml2-devel            libuuid-devel            ncurses-devel            texinfo            wget \t   bzip2 sudo passwd bc csh vim libXScrnSaver evince"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=/opt/conda/bin:$PATH' \u003e /etc/profile.d/conda.sh \u0026\u0026     wget --quiet https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh  -O ~/miniconda.sh \u0026\u0026     /bin/bash ~/miniconda.sh -b -p /opt/conda \u0026\u0026     rm ~/miniconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/opt/conda/bin/conda config --add channels http://ssb.stsci.edu/astroconda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/opt/conda/bin/conda config --add channels http://ssb.stsci.edu/astroconda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/conda/bin/conda create -y -n iraf27 python=2.7 iraf pyraf Flask bokeh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install uwsgi supervisor uwsgitop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "uwsgi.ini",
            "/etc/uwsgi/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "uwsgi.ini",
            "/etc/uwsgi/"
          ]
        },
        {
          "CmdLine": [
            "yum -y install epel-release"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum -y install nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/opt/conda/etc/supervisord.conf"
          ]
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log \t\u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"/root\""
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "login.cl",
            "/root/login.cl"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "simpleapp.py",
            "/root/simpleapp.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "wsgi.py",
            "/root/wsgi.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".tmux.conf",
            "/root/.tmux.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "templates",
            "/root/templates/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "static",
            "/root/static/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "images",
            "/root/images/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80",
            "8080"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/root/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash",
            "start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}