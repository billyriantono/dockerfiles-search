{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Key": "version",
          "Name": "arg",
          "Value": "7.2"
        },
        {
          "Env": [
            {
              "Key": "BUILDDEPS",
              "Value": "autoconf         dpkg-dev         freetds-dev         g++         gcc         libbz2-dev         libc-client2007e-dev         libc-dev         libcurl4-openssl-dev         libdb-dev         libedit-dev         libfreetype6-dev         libgdbm-dev         libgmp-dev         libgpgme11-dev         libjpeg-dev         libkrb5-dev         libldap2-dev         libmagickcore-dev         libmagickwand-dev         libmcrypt-dev         libmemcached-dev         libmysqlclient-dev         libpng-dev         libpq-dev         libpspell-dev         libreadline-dev         libsasl2-dev         libsqlite3-dev         libssh2-1-dev         libssl-dev         libsslcommon2-dev         libtidy-dev         libxml2-dev         libxpm-dev         libxslt-dev         libyaml-dev         libzip-dev         make         pkg-config         re2c         zlib1g-dev"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-o",
            "pipefail",
            "-c"
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/php/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "\"${version}\"-config",
            "/usr/src/config"
          ]
        },
        {
          "CmdLine": [
            ". /usr/src/config \u0026\u0026         apt-get update \u0026\u0026 apt-get install -y         ${BUILDDEPS}         ca-certificates         curl         file         lsb-release         wget         xz-utils         --no-install-recommends \u0026\u0026 rm -r /var/lib/apt/lists/* \u0026\u0026                 cd /usr/src \u0026\u0026         curl --silent --location --output php.tar.xz \"http://us1.php.net/get/php-${EXACT_VERSION}.tar.xz/from/this/mirror\" \u0026\u0026         tar xf php.tar.xz \u0026\u0026         cd /usr/src/php-* \u0026\u0026         ln -s /usr/lib/libc-client.a /usr/lib/x86_64-linux-gnu/libc-client.a \u0026\u0026         ./configure ${CLI_CONFIGURE_OPTIONS} \u0026\u0026         make -j \"$(nproc)\" \u0026\u0026         make install \u0026\u0026         ./configure ${FPM_CONFIGURE_OPTIONS} \u0026\u0026         make -j \"$(nproc)\" \u0026\u0026         make install \u0026\u0026                 mkdir -p \"/usr/local/php/etc/conf.d/\" \"/usr/local/php/etc/cli/conf.d/\" \"/usr/local/php/etc/fpm/conf.d/\" \u0026\u0026         echo \"${CLI_INI}\" \u003e \"${CLI_INI_FILE}\" \u0026\u0026         echo \"${FPM_INI}\" \u003e \"${FPM_INI_FILE}\" \u0026\u0026                 pecl channel-update pecl.php.net;         cd /usr/src \u0026\u0026         curl --silent --location --output xhprof.tar.gz https://github.com/tideways/php-xhprof-extension/archive/v4.1.5.tar.gz \u0026\u0026         tar xzf xhprof.tar.gz \u0026\u0026         cd php-xhprof-extension-* \u0026\u0026         phpize \u0026\u0026         ./configure \u0026\u0026         make \u0026\u0026         make install  \u0026\u0026        yes '' | pecl install -n ${PECL} ssh2-1.1.2;         mv /usr/local/php/lib/php/extensions/no-debug-non-zts-[0-9]*/* /usr/local/php/lib/php/extensions \u0026\u0026         yes '' | pecl install -n ${PECL};         mv /usr/local/php/lib/php/extensions/no-debug-non-zts-[0-9]*/* /usr/local/php/lib/php/extensions \u0026\u0026         sed -i'' -e 's/^group = nobody/group = nogroup/' /usr/local/php/etc/php-fpm.d/www.conf.default \u0026\u0026                 rm -rf /usr/src/* \u0026\u0026         apt-get purge -y ${BUILDDEPS} \u0026\u0026                 if ! diff -uw \u003c(lsb_release -ir) \u003c(echo \"${DISTRO}\"); then echo \"Distro does not match expected\"; exit 1; fi \u0026\u0026         if ! diff -uw \u003c(php -r '$e = get_loaded_extensions(); sort($e); print(implode(PHP_EOL, $e));') \u003c(echo \"${EXTENSIONS}\"); then echo \"PHP extensions do not match expected\"; exit 2; fi \u0026\u0026         if ! diff -uw \u003c(php -r 'foreach (ini_get_all() as $k =\u003e $v) { print \"$k: $v['global_value']\\n\"; }') \u003c(echo \"${CONFIG}\"); then echo \"PHP config does not match expected\"; exit 3; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/php/etc"
        },
        {
          "CmdLine": [
            "if [ -d php-fpm.d ]; then         sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf \u003e /dev/null;         cp php-fpm.d/www.conf.default php-fpm.d/www.conf;         else         mkdir php-fpm.d;         cp php-fpm.conf.default php-fpm.d/www.conf;         {         echo '[global]';         echo 'include=etc/php-fpm.d/*.conf';         } | tee php-fpm.conf;         fi         \u0026\u0026 {         echo '[global]';         echo 'error_log = /proc/self/fd/2';         echo;         echo '[www]';         echo '; if we send this to /proc/self/fd/1, it never appears';         echo 'access.log = /proc/self/fd/2';         echo;         echo 'clear_env = no';         echo;         echo '; Ensure worker stdout and stderr are sent to the main error log.';         echo 'catch_workers_output = yes';         } | tee php-fpm.d/docker.conf         \u0026\u0026 {         echo '[global]';         echo 'daemonize = no';         echo;         echo '[www]';         echo 'listen = 9000';         } | tee php-fpm.d/zz-docker.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "/usr/local/php/sbin/php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}