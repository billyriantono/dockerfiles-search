MetaArgs: null
Stages:
- BaseName: alpine:3.4
  Commands:
  - Env:
    - Key: PHPIZE_DEPS
      Value: "autoconf \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkgconf
        \t\tre2c"
    Name: env
  - CmdLine:
    - "apk add --no-cache --virtual .persistent-deps \t\tca-certificates \t\topenldap-dev
      \t\tcurl \t\ttar \t\txz"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& addgroup -g 82 -S www-data \t&& adduser -u 82 -D -S -G www-data
      www-data"
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - Env:
    - Key: PHP_EXTRA_CONFIGURE_ARGS
      Value: --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 5.4.45
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"http://php.net/get/php-5.4.45.tar.gz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"http://php.net/get/php-5.4.45.tar.gz.asc/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '""'
    - Key: PHP_MD5
      Value: '"ba580e774ed1ab256f22d1fa69a59311"'
    Name: env
  - CmdLine:
    - "set -xe; \t\tapk add --no-cache --virtual .fetch-deps \t\tgnupg \t\topenssl
      \t; \t\tmkdir -p /usr/src; \tcd /usr/src; \t\twget -O php.tar.gz \"$PHP_URL\";
      \t\tif [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.gz\" | sha256sum
      -c -; \tfi; \tif [ -n \"$PHP_MD5\" ]; then \t\techo \"$PHP_MD5 *php.tar.gz\"
      | md5sum -c -; \tfi; \t\tapk del .fetch-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - "set -xe \t&& apk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\tcurl-dev
      \t\tlibedit-dev \t\tlibxml2-dev \t\topenssl-dev \t\tsqlite-dev \t\t&& docker-php-source
      extract \t&& cd /usr/src/php \t&& ./configure \t\t--with-config-file-path=\"$PHP_INI_DIR\"
      \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t\t\t--disable-cgi
      \t\t\t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd \t\t\t\t--with-curl
      \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib \t\t\t\t$PHP_EXTRA_CONFIGURE_ARGS
      \t&& make -j \"$(getconf _NPROCESSORS_ONLN)\" \t&& make install \t&& { find
      /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}'
      + || true; } \t&& make clean \t&& docker-php-source delete \t\t&& runDeps=\"$(
      \t\tscanelf --needed --nobanner --recursive /usr/local \t\t\t| awk '{ gsub(/,/,
      \"\\nso:\", $2); print \"so:\" $2 }' \t\t\t| sort -u \t\t\t| xargs -r apk info
      --installed \t\t\t| sort -u \t)\" \t&& apk add --no-cache --virtual .php-rundeps
      $runDeps \t\t&& apk del .build-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-*
    - /usr/local/bin/
  - Name: workdir
    Path: /var/www/html
  - CmdLine:
    - "set -ex \t&& cd /usr/local/etc \t&& if [ -d php-fpm.d ]; then \t\tsed 's!=NONE/!=!g'
      php-fpm.conf.default | tee php-fpm.conf > /dev/null; \t\tcp php-fpm.d/www.conf.default
      php-fpm.d/www.conf; \telse \t\tmkdir php-fpm.d; \t\tcp php-fpm.conf.default
      php-fpm.d/www.conf; \t\t{ \t\t\techo '[global]'; \t\t\techo 'include=etc/php-fpm.d/*.conf';
      \t\t} | tee php-fpm.conf; \tfi \t&& { \t\techo '[global]'; \t\techo 'error_log
      = /proc/self/fd/2'; \t\techo; \t\techo '[www]'; \t\techo '; if we send this
      to /proc/self/fd/1, it never appears'; \t\techo 'access.log = /proc/self/fd/2';
      \t\techo; \t\techo 'clear_env = no'; \t\techo; \t\techo '; Ensure worker stdout
      and stderr are sent to the main error log.'; \t\techo 'catch_workers_output
      = yes'; \t} | tee php-fpm.d/docker.conf \t&& { \t\techo '[global]'; \t\techo
      'daemonize = no'; \t\techo; \t\techo '[www]'; \t\techo 'listen = [::]:9000';
      \t} | tee php-fpm.d/zz-docker.conf"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: false
  - CmdLine:
    - docker-php-ext-install mysqli
    Name: run
    PrependShell: true
  - CmdLine:
    - apk upgrade --update && apk add   coreutils   freetype-dev   libjpeg-turbo-dev   libltdl   libmcrypt-dev   libpng-dev   dcron   nano   bash
      && docker-php-ext-configure ldap --with-libdir=lib/ && docker-php-ext-install
      ldap && docker-php-ext-install -j$(nproc) iconv mcrypt && docker-php-ext-configure
      gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ && docker-php-ext-install
      -j$(nproc) gd && docker-php-ext-install mysql pdo_mysql && addgroup -g 1800
      -S deployer && adduser -u 1800 -D -S -G deployer deployer
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./www.conf
    - /usr/local/etc/php-fpm.d/www.conf
  From:
    Image: alpine:3.4
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.4
