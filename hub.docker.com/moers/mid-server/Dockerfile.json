{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "mkdir -p /opt \u0026\u0026     groupadd -g 999 mid \u0026\u0026     useradd -r -u 999 -g mid mid"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -q update \u0026\u0026 apt-get install -qy unzip     wget vim \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOST",
              "Value": "\"default-host\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER_NAME",
              "Value": "\"default-user\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PASSWORD",
              "Value": "\"default-password\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROXY",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROXY_PORT",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Key": "URL",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "echo \"mid binary url: ${URL}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "test -n \"$URL\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "PIN",
              "Value": "${VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"pinned to version: ${VERSION}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --progress=bar:force --no-check-certificate     ${URL} -O /tmp/mid.zip \u0026\u0026     unzip -d /opt /tmp/mid.zip \u0026\u0026     chmod -R 755 /opt/agent \u0026\u0026     chown -R mid:mid /opt/* \u0026\u0026     mv /opt/agent/config.xml /opt/. \u0026\u0026     rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -c 'if [[ ! -d \"/opt/agent/jre\" ]] ; then apt-get update \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y --no-install-recommends software-properties-common \u0026\u0026     add-apt-repository -y ppa:openjdk-r/ppa \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y openjdk-8-jre \u0026\u0026     update-alternatives --config java \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm -rf /tmp/* \u0026\u0026     ln -s /usr/lib/jvm/java-8-openjdk-amd64/jre /opt/agent/.     ; fi'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./start.sh",
            "/opt"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "mid"
        },
        {
          "CmdLine": [
            "/opt/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}