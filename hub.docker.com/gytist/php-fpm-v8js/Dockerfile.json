{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3.1-fpm",
      "SourceCode": "FROM php:7.3.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.3.1-fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Gytis Tamulynas \u003cGytisT1@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"1.1.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "description",
              "Value": "\"PHP 7.3.1 FPM with v8 7.4 + v8js and some other essentials\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends     mysql-client     git     build-essential     curl     python     libglib2.0-dev \tpatchelf     \u0026\u0026 docker-php-ext-install pdo_mysql bcmath     \u0026\u0026 cd /tmp         \u0026\u0026 git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git --progress --verbose     \u0026\u0026 export PATH=\"$PATH:/tmp/depot_tools\"         \u0026\u0026 fetch v8     \u0026\u0026 cd v8     \u0026\u0026 git checkout 7.4.195     \u0026\u0026 gclient sync         \u0026\u0026 tools/dev/v8gen.py -vv x64.release -- \tbinutils_path=\\\"/usr/bin\\\"     target_os=\\\"linux\\\"     target_cpu=\\\"x64\\\"     v8_target_cpu=\\\"x64\\\"     v8_use_external_startup_data=false     is_official_build=true     is_component_build=true     is_cfi=false     is_clang=false     use_custom_libcxx=false     use_sysroot=false     use_gold=false     use_allocator_shim=false     treat_warnings_as_errors=false     symbol_level=0         \u0026\u0026 ninja -C out.gn/x64.release/     \u0026\u0026 mkdir -p /opt/libv8-7.4/lib     \u0026\u0026 mkdir /opt/libv8-7.4/include     \u0026\u0026 cp out.gn/x64.release/lib*.so out.gn/x64.release/icudtl.dat \t/opt/libv8-7.4/lib/     \u0026\u0026 cp -R include/* /opt/libv8-7.4/include/ \t\u0026\u0026 for A in /opt/libv8-7.4/lib/*.so; do patchelf --set-rpath '$ORIGIN' $A;done         \u0026\u0026 cd /tmp     \u0026\u0026 git clone https://github.com/phpv8/v8js.git     \u0026\u0026 cd v8js     \u0026\u0026 git checkout php7     \u0026\u0026 phpize     \u0026\u0026 ./configure --with-v8js=/opt/libv8-7.4     \u0026\u0026 export NO_INTERACTION=1     \u0026\u0026 make \t\u0026\u0026 make test     \u0026\u0026 make install     \u0026\u0026 docker-php-ext-enable v8js         \u0026\u0026 rm -rf /tmp/* \t\u0026\u0026 apt-get remove -y git build-essential curl python libglib2.0-dev \t\u0026\u0026 apt-get autoremove -y \t\u0026\u0026 apt-get clean \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}