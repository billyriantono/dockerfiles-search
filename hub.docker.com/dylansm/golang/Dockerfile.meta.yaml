MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - CmdLine:
    - addgroup app && adduser -h /home/app -s /bin/sh -D -G app app &&     apk update
      &&     apk upgrade &&     apk add --no-cache     gcc     g++     git     openssl     sqlite-dev     ca-certificates
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.8.1
    Name: env
  - Env:
    - Key: GOLANG_SRC_URL
      Value: https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz
    Name: env
  - Env:
    - Key: GOLANG_SRC_SHA256
      Value: 33daf4c03f86120fdfdc66bddf6bfff4661c7ca11c5da473e537f4d69b470e57
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - no-pic.patch
    - /
  - CmdLine:
    - "set -ex \t&& apk add --no-cache --virtual .build-deps \t\tbash \t\tmusl-dev
      \t\tgo \t\t&& export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\t&& wget -q \"$GOLANG_SRC_URL\"
      -O golang.tar.gz \t&& echo \"$GOLANG_SRC_SHA256  golang.tar.gz\" | sha256sum
      -c - \t&& tar -C /usr/local -xzf golang.tar.gz \t&& rm golang.tar.gz \t&& cd
      /usr/local/go/src \t&& patch -p2 -i /no-pic.patch \t&& ./make.bash \t\t&& rm
      -rf /*.patch \t&& apk del .build-deps"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /home/app/go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/pkg" "$GOPATH/bin" && chown -R app:app "$GOPATH"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - go-wrapper
    - /usr/local/bin/
  - Name: workdir
    Path: $GOPATH
  - Env:
    - Key: HOME
      Value: /home/app
    Name: env
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
