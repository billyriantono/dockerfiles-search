MetaArgs: null
Stages:
- BaseName: docker:18.01.0-ce-dind
  Commands:
  - Env:
    - Key: COMPOSE_VERSION
      Value: 1.19.0-rc3
    Name: env
  - Env:
    - Key: JAVA_ALPINE_VERSION
      Value: 8.151.12-r0
    Name: env
  - Env:
    - Key: VAGRANT_VERSION
      Value: 2.0.2
    Name: env
  - CmdLine:
    - apk add --no-cache py-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install docker-compose=="$COMPOSE_VERSION"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u111
    Name: env
  - CmdLine:
    - "set -x \t&& apk add --no-cache \t\topenjdk8=\"$JAVA_ALPINE_VERSION\" \t&& [
      \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache git openssh
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -R usr/lib/python2.7/site-packages/PyYAML-3.12-py2.7.egg-info
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x &&   apk add --no-cache bash rsync openssh ruby curl ruby-dev &&   curl
      -L https://releases.hashicorp.com/vagrant/${VAGRANT_VERSION}/vagrant_${VAGRANT_VERSION}_x86_64.deb
      -O &&   apk add --no-cache --virtual .vagrant dpkg tar &&   dpkg -x vagrant_${VAGRANT_VERSION}_x86_64.deb
      / &&   apk del .vagrant
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f vagrant_${VAGRANT_VERSION}_x86_64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - ALPINE_GLIBC_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases/download"
      &&     ALPINE_GLIBC_PACKAGE_VERSION="2.23-r3" &&     ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     apk add --no-cache --virtual=.build-dependencies wget ca-certificates
      &&     wget         "https://raw.githubusercontent.com/andyshinn/alpine-pkg-glibc/master/sgerrand.rsa.pub"         -O
      "/etc/apk/keys/sgerrand.rsa.pub" &&     wget         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&     apk add --no-cache         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&         rm "/etc/apk/keys/sgerrand.rsa.pub" &&     /usr/glibc-compat/bin/localedef
      --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true &&     echo "export
      LANG=C.UTF-8" > /etc/profile.d/locale.sh &&         apk del glibc-i18n &&         rm
      "/root/.wget-hsts" &&     apk del .build-dependencies &&     rm         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
    Name: run
    PrependShell: true
  - CmdLine:
    - vagrant plugin install docker
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache openssl
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /start.sh
  - CmdLine:
    - chmod +x /start.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /start.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - ""
    Name: cmd
    PrependShell: false
  From:
    Image: docker:18.01.0-ce-dind
  Name: ""
  Platform: ""
  SourceCode: FROM docker:18.01.0-ce-dind
