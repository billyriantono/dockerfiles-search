{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ivlis/docker-erlang:OTP-18",
      "SourceCode": "FROM ivlis/docker-erlang:OTP-18",
      "Platform": "",
      "From": {
        "Image": "ivlis/docker-erlang:OTP-18"
      },
      "Commands": [
        {
          "Maintainer": "ivlis",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "COUCHDB_VERSION",
              "Value": "1.6.x"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sudo adduser --disabled-login --disabled-password --no-create-home --gecos \"\" couchdb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get install  -y --no-install-recommends     curl ca-certificates  build-essential autotools-dev autoconf automake     libicu-dev libmozjs185-dev libcurl4-openssl-dev git-core     libtool autoconf-archive \u0026\u0026     git clone https://github.com/apache/couchdb.git \u0026\u0026     cd couchdb \u0026\u0026     git checkout ${COUCHDB_VERSION} \u0026\u0026     /bin/sh bootstrap \u0026\u0026     ./configure --with-erlang=/opt/erlang/lib/erlang/usr/include/ \u0026\u0026     make \u0026\u0026 sudo make install \u0026\u0026     cd .. \u0026\u0026 rm -rf couchdb \u0026\u0026     apt-get purge -y     curl ca-certificates  build-essential autotools-dev autoconf automake     libicu-dev libmozjs185-dev libcurl4-openssl-dev git-core     libtool autoconf-archive \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get install -y --no-install-recommends     libmozjs185-1.0 curl openssl libicu52 \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo chown -R couchdb:couchdb /usr/local/var/lib/couchdb \u0026\u0026    sudo chown -R couchdb:couchdb /usr/local/var/log/couchdb \u0026\u0026    sudo chown -R couchdb:couchdb /usr/local/var/run/couchdb \u0026\u0026    sudo chown -R couchdb:couchdb /usr/local/etc/couchdb \u0026\u0026    sudo chmod 0770 /usr/local/var/lib/couchdb/ \u0026\u0026    sudo chmod 0770 /usr/local/var/log/couchdb/ \u0026\u0026    sudo chmod 0770 /usr/local/var/run/couchdb/ \u0026\u0026    sudo chmod 0770 /usr/local/etc/couchdb/*.ini \u0026\u0026    sudo chmod 0770 /usr/local/etc/couchdb/*.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -e 's/^bind_address = .*$/bind_address = 0.0.0.0/' -i /usr/local/etc/couchdb/default.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5984"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/lib/couchdb"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "couchdb"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}