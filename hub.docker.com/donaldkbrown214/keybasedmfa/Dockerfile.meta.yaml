MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Env:
    - Key: KEYBASE_ALLOW_ROOT
      Value: "1"
    Name: env
  - Env:
    - Key: KB_TYPE
      Value: changeme
    Name: env
  - Env:
    - Key: KB_TEAM
      Value: changeme
    Name: env
  - Env:
    - Key: KB_USER
      Value: changeme
    Name: env
  - Env:
    - Key: KB_CHANNEL
      Value: changeme
    Name: env
  - Env:
    - Key: AUTH_TOKEN
      Value: changeme
    Name: env
  - Env:
    - Key: FLASK_ENV
      Value: changeme
    Name: env
  - Env:
    - Key: KEYBASE_USERNAME
      Value: changeme
    Name: env
  - Env:
    - Key: KEYBASE_PAPERKEY
      Value: changeme
    Name: env
  - CmdLine:
    - apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y curl python3 python3-dev python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --remote-name https://prerelease.keybase.io/keybase_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y ./keybase_amd64.deb
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - main.py
    - /main.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - models.py
    - /models.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - functions.py
    - /functions.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /requirements.txt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker_run.sh
    - /docker_run.sh
  - CmdLine:
    - chmod +x /docker_run.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -r requirements.txt
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5000"
  - CmdLine:
    - /docker_run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
