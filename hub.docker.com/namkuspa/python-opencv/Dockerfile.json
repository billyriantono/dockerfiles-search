{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.6.6-slim-stretch",
      "SourceCode": "FROM python:3.6.6-slim-stretch",
      "Platform": "",
      "From": {
        "Image": "python:3.6.6-slim-stretch"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Jose Truyol \u003cjose@namku.cl\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "RUNTIME_DEPS",
          "Name": "arg",
          "Value": "'ca-certificates libpng-dev libjpeg-dev libwebp-dev                   libtiff5-dev libopenexr-dev libopenblas-dev                  libx11-dev liblapack-dev liblapacke-dev libglib2.0-0'"
        },
        {
          "Key": "BUILD_DEPS",
          "Name": "arg",
          "Value": "'apt-utils wget unzip cmake build-essential pkg-config'"
        },
        {
          "Key": "LIB_PREFIX",
          "Name": "arg",
          "Value": "'/usr/local'"
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "'3.4.1'"
        },
        {
          "Env": [
            {
              "Key": "OPENCV_VERSION",
              "Value": "${VERSION}"
            },
            {
              "Key": "LIB_PREFIX",
              "Value": "${LIB_PREFIX}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"OpenCV: ${OPENCV_VERSION}\"     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y ${BUILD_DEPS} ${RUNTIME_DEPS} --no-install-recommends     \u0026\u0026 wget https://github.com/Itseez/opencv/archive/${OPENCV_VERSION}.zip -O opencv.zip     \u0026\u0026 wget https://github.com/Itseez/opencv_contrib/archive/${OPENCV_VERSION}.zip -O opencv_contrib.zip     \u0026\u0026 pip install --upgrade pip    \u0026\u0026 pip install numpy     \u0026\u0026 mkdir /opencv     \u0026\u0026 mv opencv.zip opencv_contrib.zip /opencv     \u0026\u0026 cd /opencv     \u0026\u0026 unzip -qq opencv.zip     \u0026\u0026 mv opencv-${OPENCV_VERSION} opencv     \u0026\u0026 unzip -qq opencv_contrib.zip     \u0026\u0026 mv opencv_contrib-${OPENCV_VERSION} opencv_contrib     \u0026\u0026 mkdir opencv/build     \u0026\u0026 cd opencv/build     \u0026\u0026 cp /usr/include/lapacke*.h /usr/include/openblas/     \u0026\u0026 opencv_cmake_flags=\"-D CMAKE_BUILD_TYPE=RELEASE     -D BUILD_DOCS=OFF     -D BUILD_TESTS=OFF     -D BUILD_PERF_TESTS=OFF     -D BUILD_JAVA=OFF     -D BUILD_opencv_apps=OFF     -D BUILD_opencv_aruco=OFF     -D BUILD_opencv_bgsegm=OFF     -D BUILD_opencv_bioinspired=OFF     -D BUILD_opencv_ccalib=OFF     -D BUILD_opencv_datasets=OFF     -D BUILD_opencv_dnn_objdetect=OFF     -D BUILD_opencv_dpm=OFF     -D BUILD_opencv_fuzzy=OFF     -D BUILD_opencv_hfs=OFF     -D BUILD_opencv_java_bindings_generator=OFF     -D BUILD_opencv_js=OFF     -D BUILD_opencv_img_hash=OFF     -D BUILD_opencv_line_descriptor=OFF     -D BUILD_opencv_optflow=OFF     -D BUILD_opencv_phase_unwrapping=OFF     -D BUILD_opencv_python3=OFF     -D BUILD_opencv_python_bindings_generator=OFF     -D BUILD_opencv_reg=OFF     -D BUILD_opencv_rgbd=OFF     -D BUILD_opencv_saliency=OFF     -D BUILD_opencv_shape=OFF     -D BUILD_opencv_stereo=OFF     -D BUILD_opencv_stitching=OFF     -D BUILD_opencv_structured_light=OFF     -D BUILD_opencv_superres=OFF     -D BUILD_opencv_surface_matching=OFF     -D BUILD_opencv_ts=OFF     -D BUILD_opencv_xobjdetect=OFF     -D BUILD_opencv_xphoto=OFF     -D CMAKE_INSTALL_PREFIX=$LIB_PREFIX     -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules\"     \u0026\u0026 cmake $opencv_cmake_flags ..     \u0026\u0026 make -j $(getconf _NPROCESSORS_ONLN)     \u0026\u0026 cd /opencv/opencv/build     \u0026\u0026 make install     \u0026\u0026 cd /     \u0026\u0026 rm -rf /opencv     \u0026\u0026 apt-get purge -y --auto-remove $BUILD_DEPS     \u0026\u0026 apt-get autoremove -y --purge     \u0026\u0026 apt-get install -y $RUNTIME_DEPS --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/* /usr/share/man /usr/local/share/man /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install opencv-python-headless"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}