MetaArgs: null
Stages:
- BaseName: vrtsystems/baseimage:develop
  Commands:
  - Maintainer: VRT Engineering <engineering@vrt.com.au>
    Name: maintainer
  - CmdLine:
    - groupadd -r postgres && useradd -r -g postgres postgres
    Name: run
    PrependShell: true
  - Env:
    - Key: PG_MAJOR
      Value: "9.3"
    Name: env
  - Env:
    - Key: PG_VERSION
      Value: 9.3.25-1.pgdg90+1
    Name: env
  - Env:
    - Key: HEALTHCHK_D
      Value: /usr/local/etc/docker-postgres/healthcheck.d
    Name: env
  - Env:
    - Key: PRESTART_INIT_D
      Value: /usr/local/etc/docker-postgres/prestart-init.d
    Name: env
  - Env:
    - Key: POSTSTART_INIT_D
      Value: /usr/local/etc/docker-postgres/poststart-init.d
    Name: env
  - Env:
    - Key: POSTSTART_INIT_STATUS_FILE
      Value: /tmp/postinit.txt
    Name: env
  - CmdLine:
    - apt-key adv --keyserver hkps://keyserver.ubuntu.com/ --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' $PG_MAJOR
      > /etc/apt/sources.list.d/pgdg.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install -y postgresql-common \t&& sed -ri 's/#(create_main_cluster)
      .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \t&& apt-get install
      -y postgresql-$PG_MAJOR=$PG_VERSION \t&& mkdir -p ${PRESTART_INIT_D} \t&& mkdir
      -p ${POSTSTART_INIT_D} \t&& mkdir -p ${HEALTHCHK_D} \t&& mkdir -p /var/run/postgresql
      \t&& chown -R postgres /var/run/postgresql \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/lib/postgresql/$PG_MAJOR/bin:$PATH
    Name: env
  - Env:
    - Key: PGDATA
      Value: /var/lib/postgresql/data
    Name: env
  - Name: volume
    Volumes:
    - /var/lib/postgresql/data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/sbin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-healthcheck.sh
    - /usr/local/sbin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord-postinit.sh
    - /usr/local/sbin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Name: expose
    Ports:
    - "5432"
  - Name: expose
    Ports:
    - "9001"
  - CmdLine:
    - /usr/local/sbin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Health:
      Interval: 15000000000
      Test:
      - CMD-SHELL
      - /usr/local/sbin/docker-healthcheck.sh
      Timeout: 5000000000
    Name: healthcheck
  - CmdLine:
    - supervisor
    Name: cmd
    PrependShell: false
  From:
    Image: vrtsystems/baseimage:develop
  Name: ""
  Platform: ""
  SourceCode: FROM vrtsystems/baseimage:develop
