MetaArgs: null
Stages:
- BaseName: alpine:3.10.0
  Commands:
  - CmdLine:
    - echo http://dl-cdn.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update && apk upgrade
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - CmdLine:
    - apk add --no-cache build-base git curl wget bash ctags
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache libxml2-dev libxslt-dev libgcrypt-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache libffi openssl-dev libffi-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache python3 py-pip python2-dev python3-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache ruby ruby-dev ruby-bundler ruby-json ruby-irb ruby-rake ruby-bigdecimal
      ruby-rdoc
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache composer php7-simplexml php7-tokenizer php7-xmlwriter
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache inotify-tools elixir erlang erlang-inets erlang-ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache openjdk8-jre
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache neovim
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache tidyhtml
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache the_silver_searcher
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global config minimum-stability dev
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require felixfbecker/language-server
    Name: run
    PrependShell: true
  - CmdLine:
    - composer run-script --working-dir=/root/.composer/vendor/felixfbecker/language-server
      parse-stubs
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require squizlabs/php_codesniffer
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require vimeo/psalm
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache nodejs nodejs-npm
    Name: run
    PrependShell: true
  - CmdLine:
    - npm config set unsafe-perm true
    Name: run
    PrependShell: true
  - Env:
    - Key: VERSION
      Value: "01072019"
    Name: env
  - CmdLine:
    - npm install -g typescript vale
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g eslint babel-eslint       eslint-config-airbnb eslint-plugin-jest
      eslint-plugin-flowtype       eslint-plugin-babel eslint-plugin-import eslint-plugin-lodash-fp       eslint-plugin-jsx-a11y
      eslint-plugin-react eslint-config-airbnb-base
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g yaml-language-server typings pug-lint js-yaml js-beautify jsonlint
      neovim
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g stylelint stylelint-config-recommended
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --compressed -o- -L https://yarnpkg.com/install.sh | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install pkg-config solargraph --no-document -- --use-system-libraries
    Name: run
    PrependShell: true
  - CmdLine:
    - solargraph download-core
    Name: run
    PrependShell: true
  - CmdLine:
    - yard config --gem-install-yri
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install rubocop rubocop-rspec rubocop-performance --no-document
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install haml-lint slim_lint rake neovim --no-document
    Name: run
    PrependShell: true
  - CmdLine:
    - 'pip install yamllint ansible-lint python-language-server bashate neovim jedi
      rope isort # black'
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://languagetool.org/download/LanguageTool-stable.zip --output languagetool.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip languagetool.zip && rm -rf languagetool.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mix local.hex --force
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf       && ~/.fzf/install
      --key-bindings --update-rc --completion       && cp /root/.fzf/bin/fzf /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/vimrc
    - /root/.config/nvim/init.vim
  - Env:
    - Key: PATH
      Value: $HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH
    Name: env
  - Env:
    - Key: PATH
      Value: $HOME/.composer/vendor/bin:$PATH
    Name: env
  - CmdLine:
    - nvim -i NONE -c PlugInstall -c quitall
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - languagetool.sh
    - /usr/local/bin/languagetool
  - CmdLine:
    - chmod +x /usr/local/bin/languagetool
    Name: run
    PrependShell: true
  - Env:
    - Key: FZF_DEFAULT_COMMAND
      Value: '''ag -g ""'''
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/coc-settings.json
    - /root/.config/nvim/coc-settings.json
  - CmdLine:
    - nvim
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.10.0
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10.0
