{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "CmdLine": [
            "ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \u0026\u0026     ALPINE_GLIBC_PACKAGE_VERSION=\"2.26-r0\" \u0026\u0026     ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     apk add --no-cache --virtual=.build-dependencies wget ca-certificates bash curl \u0026\u0026     wget         \"https://raw.githubusercontent.com/andyshinn/alpine-pkg-glibc/master/sgerrand.rsa.pub\"         -O \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026     wget         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026     apk add --no-cache         \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026         rm \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026     /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true \u0026\u0026     echo \"export LANG=C.UTF-8\" \u003e /etc/profile.d/locale.sh \u0026\u0026         apk del glibc-i18n \u0026\u0026         rm \"/root/.wget-hsts\" \u0026\u0026     apk del .build-dependencies \u0026\u0026     rm         \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DUMB_INIT_VERSION",
              "Value": "1.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SU_EXEC_VERSION",
              "Value": "0.2"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apk update  \u0026\u0026 apk upgrade  \u0026\u0026 apk add --no-cache         ca-certificates         ruby ruby-irb         su-exec==${SU_EXEC_VERSION}-r0         dumb-init==${DUMB_INIT_VERSION}-r0  \u0026\u0026 apk add --no-cache --virtual .build-deps         build-base         ruby-dev wget gnupg  \u0026\u0026 update-ca-certificates  \u0026\u0026 echo 'gem: --no-document' \u003e\u003e /etc/gemrc  \u0026\u0026 gem install oj -v 2.18.3  \u0026\u0026 gem install json -v 2.1.0  \u0026\u0026 gem install fluentd -v 0.12.40  \u0026\u0026 apk del .build-deps  \u0026\u0026 rm -rf /var/cache/apk/*  \u0026\u0026 rm -rf /tmp/* /var/tmp/* /usr/lib/ruby/gems/*/cache/*.gem  \u0026\u0026 apk add --no-cache  bash wget curl ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /fluentd/log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /fluentd/etc /fluentd/plugins"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}