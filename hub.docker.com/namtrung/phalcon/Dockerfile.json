{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"https://github.com/amq/\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PHALCON_VERSION",
              "Value": "3.2.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEVTOOLS_VERSION",
              "Value": "3.2.2"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php/php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 curl -LO https://github.com/phalcon/cphalcon/archive/v${PHALCON_VERSION}.tar.gz     \u0026\u0026 tar xzf v${PHALCON_VERSION}.tar.gz     \u0026\u0026 cd cphalcon-${PHALCON_VERSION}/build     \u0026\u0026 ./install     \u0026\u0026 echo \"extension=phalcon.so\" \u003e /usr/local/etc/php/conf.d/phalcon.ini     \u0026\u0026 cd ../..     \u0026\u0026 rm -rf v${PHALCON_VERSION}.tar.gz cphalcon-${PHALCON_VERSION}     \u0026\u0026 curl -LO https://github.com/phalcon/phalcon-devtools/archive/v${DEVTOOLS_VERSION}.tar.gz     \u0026\u0026 tar xzf v${DEVTOOLS_VERSION}.tar.gz     \u0026\u0026 mv phalcon-devtools-${DEVTOOLS_VERSION} /usr/local/phalcon-devtools     \u0026\u0026 ln -s /usr/local/phalcon-devtools/phalcon.php /usr/local/bin/phalcon     \u0026\u0026 rm -f v${DEVTOOLS_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.5.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L https://getcomposer.org/installer -o composer-setup.php     \u0026\u0026 php composer-setup.php --version=${COMPOSER_VERSION} --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 rm -f composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y libfreetype6-dev libjpeg62-turbo-dev libpng12-dev libxml2-dev zlib1g-dev unzip git --no-install-recommends --no-install-suggests     \u0026\u0026 apt-get clean -y     \u0026\u0026 pecl install redis xdebug     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-enable redis xdebug     \u0026\u0026 docker-php-ext-install mbstring xml opcache pdo_mysql mysqli soap zip session bcmath ctype dom hash sockets pdo fileinfo gettext iconv xmlrpc xmlwriter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}