{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm",
      "SourceCode": "FROM php:7.2-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"https://github.com/namtrung804\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "1.7.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L https://getcomposer.org/installer -o composer-setup.php     \u0026\u0026 php composer-setup.php --version=${COMPOSER_VERSION} --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 rm -f composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y libfreetype6-dev libjpeg62-turbo-dev libpng-dev libxml2-dev zlib1g-dev unzip git jpegoptim optipng pngquant gifsicle --no-install-recommends --no-install-suggests     \u0026\u0026 apt-get clean -y     \u0026\u0026 pecl install redis xdebug     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-install -j$(nproc) iconv     \u0026\u0026 docker-php-ext-enable redis xdebug     \u0026\u0026 docker-php-ext-install mbstring xml opcache pdo_mysql mysqli soap zip session bcmath ctype dom hash sockets pdo fileinfo gettext xmlrpc xmlwriter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/phalcon/cphalcon     \u0026\u0026 cd cphalcon/build     \u0026\u0026 ./install     \u0026\u0026 echo \"extension=phalcon.so\" \u003e /usr/local/etc/php/conf.d/phalcon.ini     \u0026\u0026 cd ../..     \u0026\u0026 rm -rf cphalcon"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone git://github.com/phalcon/phalcon-devtools.git     \u0026\u0026 cd phalcon-devtools/     \u0026\u0026 ./phalcon.sh     \u0026\u0026 ln -s ~/phalcon-devtools/phalcon.php /usr/local/bin/phalcon"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}