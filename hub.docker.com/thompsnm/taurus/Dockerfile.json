{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "http://gettaurus.org/snapshots/blazemeter-pbench-extras_0.1.10.1_amd64.deb",
            "/tmp"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "http://chromedriver.storage.googleapis.com/2.25/chromedriver_linux64.zip",
            "/tmp"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/mozilla/geckodriver/releases/download/v0.11.1/geckodriver-v0.11.1-linux64.tar.gz",
            "/tmp"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://dl-ssl.google.com/linux/linux_signing_key.pub",
            "/tmp"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://deb.nodesource.com/setup_6.x",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "apt-get -y update   \u0026\u0026 apt-get -y install --no-install-recommends software-properties-common   \u0026\u0026 apt-add-repository multiverse   \u0026\u0026 add-apt-repository ppa:yandex-load/main   \u0026\u0026 apt-add-repository ppa:nilarimogard/webupd8   \u0026\u0026 cat /tmp/linux_signing_key.pub | apt-key add -   \u0026\u0026 echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google.list   \u0026\u0026 bash /tmp/setup_6.x   \u0026\u0026 apt-get -y update   \u0026\u0026 apt-cache policy firefox   \u0026\u0026 apt-get -y install --no-install-recommends     kmod     unzip     build-essential     libxslt1-dev     zlib1g-dev     libxi6     libgconf-2-4     libexif12     udev     python-dev     python-pip     default-jdk     xvfb     libyaml-dev     siege     tsung     apache2-utils     phantom     phantom-ssl     firefox     google-chrome-stable     pepperflashplugin-nonfree     flashplugin-installer     phantomjs     ruby ruby-dev     nodejs   \u0026\u0026 pip install --upgrade setuptools pip   \u0026\u0026 pip install locustio bzt \u0026\u0026 pip uninstall -y bzt   \u0026\u0026 pip install --upgrade selenium   \u0026\u0026 npm install -g mocha   \u0026\u0026 gem install rspec   \u0026\u0026 gem install selenium-webdriver   \u0026\u0026 dpkg -i /tmp/blazemeter-pbench-extras_0.1.10.1_amd64.deb   \u0026\u0026 unzip -d /usr/bin /tmp/chromedriver_linux64.zip   \u0026\u0026 tar -xzf /tmp/geckodriver-v0.11.1-linux64.tar.gz --directory /usr/local/bin   \u0026\u0026 rm -rf /var/lib/apt/lists/*   \u0026\u0026 firefox --version \u0026\u0026 google-chrome-stable --version \u0026\u0026 /usr/bin/chromedriver --version \u0026\u0026 geckodriver --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bzt/resources/chrome_launcher.sh",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "mv /opt/google/chrome/google-chrome /opt/google/chrome/_google-chrome   \u0026\u0026 mv /tmp/chrome_launcher.sh /opt/google/chrome/google-chrome   \u0026\u0026 chmod +x /opt/google/chrome/google-chrome"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DBUS_SESSION_BUS_ADDRESS",
              "Value": "/dev/null"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/tmp/bzt-src"
          ]
        },
        {
          "CmdLine": [
            "pip install /tmp/bzt-src   \u0026\u0026 echo '{\"install-id\": \"Docker\"}' \u003e /etc/bzt.d/99-zinstallID.json   \u0026\u0026 echo '{\"settings\": {\"artifacts-dir\": \"/tmp/artifacts\"}}' \u003e /etc/bzt.d/90-artifacts-dir.json   \u0026\u0026 echo '{\"modules\": {\"console\": {\"disable\": true}}}' \u003e /etc/bzt.d/90-no-console.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bzt /tmp/bzt-src/examples/all-executors.yml -o settings.artifacts-dir=/tmp/all-executors-artifacts -sequential || (cat /tmp/all-executors-artifacts/webdriver-1.log; exit 1)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /bzt-configs   \u0026\u0026 rm -rf /tmp/*   \u0026\u0026 mkdir /tmp/artifacts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/bzt-configs"
        },
        {
          "CmdLine": [
            "sh",
            "-c",
            "bzt -l /tmp/artifacts/bzt.log \"$@\"",
            "ignored"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}