MetaArgs: null
Stages:
- BaseName: debian
  Commands:
  - Name: user
    User: root
  - CmdLine:
    - apt-get update &&     apt-get install -qq -y --no-install-recommends       apt-transport-https       ca-certificates       curl       dirmngr       telnet       netcat       traceroute       gnupg2       software-properties-common       xz-utils
    Name: run
    PrependShell: true
  - Env:
    - Key: KUBERNETES_VERSION
      Value: '"1.11.3"'
    Name: env
  - CmdLine:
    - curl -L https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/amd64/kubectl
      -o /usr/local/bin/kubectl     && chmod +x /usr/local/bin/kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/amd64/kubeadm
      -o /usr/local/bin/kubeadm     && chmod +x /usr/local/bin/kubeadm
    Name: run
    PrependShell: true
  - Env:
    - Key: HELM_VERSION
      Value: '"2.9.1"'
    Name: env
  - CmdLine:
    - curl -L http://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz
      -o /tmp/helm.tar.gz     && tar -zxvf /tmp/helm.tar.gz -C /tmp     && cp /tmp/linux-amd64/helm
      /usr/local/bin/helm
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_VERSION
      Value: '"18.06.1"'
    Name: env
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - &&     apt-key
      fingerprint 0EBFCD88 &&     add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian
      stretch stable" &&     add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian
      stretch stable" &&     apt-get update &&     apt-get install -qq -y --no-install-recommends
      docker-ce=${DOCKER_VERSION}~ce~3-0~debian
    Name: run
    PrependShell: true
  - Key: DOCKER_COMPOSE_VERSION
    Name: arg
    Value: '"1.21.1"'
  - CmdLine:
    - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname
      -s`-`uname -m` -o /usr/local/bin/docker-compose &&     chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qq -y --no-install-recommends mongodb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean     && rm -rf /tmp/* ~/*.tgz     && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - kubectl version --client
    Name: run
    PrependShell: true
  - CmdLine:
    - helm version --client
    Name: run
    PrependShell: true
  - CmdLine:
    - docker -v
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-compose -v
    Name: run
    PrependShell: true
  - CmdLine:
    - mongo --version
    Name: run
    PrependShell: true
  From:
    Image: debian
  Name: ""
  Platform: ""
  SourceCode: FROM debian
