MetaArgs: null
Stages:
- BaseName: ruby:2.3.8-alpine3.8
  Commands:
  - Env:
    - Key: RAILS_ENV
      Value: production
    Name: env
  - Env:
    - Key: DATABASE_ADAPTER
      Value: postgresql
    Name: env
  - Env:
    - Key: DATABASE_ENCODING
      Value: unicode
    Name: env
  - Env:
    - Key: DATABASE_HOST
      Value: 127.0.0.1
    Name: env
  - Env:
    - Key: DATABASE_POOL
      Value: "5"
    Name: env
  - Env:
    - Key: DATABASE_NAME
      Value: consul
    Name: env
  - Env:
    - Key: DATABASE_USER
      Value: postgres
    Name: env
  - Env:
    - Key: DATABASE_PASSWORD
      Value: postgres
    Name: env
  - Env:
    - Key: RAILS_SERVE_STATIC_FILES
      Value: "true"
    Name: env
  - Env:
    - Key: SMTP_HOST
      Value: smtp.example.com
    Name: env
  - Env:
    - Key: SMTP_PORT
      Value: "587"
    Name: env
  - Env:
    - Key: SMTP_DOMAIN
      Value: example.com
    Name: env
  - Env:
    - Key: SMTP_USER
      Value: username
    Name: env
  - Env:
    - Key: SMTP_PASSWORD
      Value: password
    Name: env
  - Env:
    - Key: SMTP_AUTHENTICATION
      Value: plain
    Name: env
  - Env:
    - Key: SMTP_STARTTLS_AUTO
      Value: "true"
    Name: env
  - Env:
    - Key: SECRET_TOKEN
      Value: 56792feef405a59b18ea7db57b4777e855103882b926413d4afdfb8c0ea8aa86ea6649da4e729c5f5ae324c0ab9338f789174cf48c544173bc18fdc3b14262e4
    Name: env
  - CmdLine:
    - apk --update add build-base nodejs tzdata postgresql-dev postgresql-client libxslt-dev
      libxml2-dev imagemagick unzip linux-headers curl git
    Name: run
    PrependShell: true
  - CmdLine:
    - adduser --shell /bin/sh --disabled-password --gecos "" consul
    Name: run
    PrependShell: true
  - Env:
    - Key: RAILS_ROOT
      Value: /var/www/consul
    Name: env
  - CmdLine:
    - mkdir -p $RAILS_ROOT/tmp/pids
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $RAILS_ROOT
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile*
    - ./
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - if [[ "$RAILS_ENV" == "production" ]]; then bundle install --without development
      test; else bundle install; fi
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - Name: volume
    Volumes:
    - $RAILS_ROOT/config
  - Name: volume
    Volumes:
    - $RAILS_ROOT/public/system/images/attachments
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - bundle
    - exec
    - rails
    - server
    - -b
    - 0.0.0.0
    Name: cmd
    PrependShell: false
  From:
    Image: ruby:2.3.8-alpine3.8
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2.3.8-alpine3.8
