MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: Milo van der Linden <milo@dogodigi.net>
    Name: maintainer
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: GDAL_DATA
      Value: /usr/share/gdal/1.10
    Name: env
  - Env:
    - Key: BUNDLE_PATH
      Value: /bundle_cache
    Name: env
  - Env:
    - Key: CPLUS_INCLUDE_PATH
      Value: /usr/include/gdal
    Name: env
  - Env:
    - Key: C_INCLUDE_PATH
      Value: /usr/include/gdal
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/carto/node_modules/grunt-cli/bin
    Name: env
  - Env:
    - Key: CARTO_ENV
      Value: development
    Name: env
  - Env:
    - Key: CARTO_ASSET_HOST
      Value: //cartodb-libs.global.ssl.fastly.net/cartodbui
    Name: env
  - Env:
    - Key: CARTO_HOST
      Value: localhost.localdomain
    Name: env
  - Env:
    - Key: CARTO_SESSION_DOMAIN
      Value: localdomain
    Name: env
  - Env:
    - Key: CARTO_SESSION_PORT
      Value: "3000"
    Name: env
  - Env:
    - Key: CARTO_PROTOCOL
      Value: http
    Name: env
  - Env:
    - Key: MAP_API_HOST
      Value: maps-api
    Name: env
  - Env:
    - Key: MAP_API_PORT
      Value: "8181"
    Name: env
  - Env:
    - Key: MAP_API_PROTOCOL
      Value: http
    Name: env
  - Env:
    - Key: DB_HOST
      Value: db
    Name: env
  - Env:
    - Key: DB_PORT
      Value: "5432"
    Name: env
  - Env:
    - Key: DB_USER
      Value: postgres
    Name: env
  - Env:
    - Key: REDIS_HOST
      Value: redis
    Name: env
  - Env:
    - Key: REDIS_PORT
      Value: "6379"
    Name: env
  - Env:
    - Key: CORS_ENABLED
      Value: "true"
    Name: env
  - Env:
    - Key: WINDSHAFT_PORT
      Value: "8181"
    Name: env
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8
      && dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && DEBIAN_FRONTEND=noninteractive     apt-get install -y --no-install-recommends
      apt-utils make g++ git-core       unp zip unzip curl       libicu-dev libgif-dev
      libjpeg-dev libcairo2-dev       libhiredis-dev libmapnik-dev       ca-certificates       python-mapnik
      mapnik-utils       libprotobuf-dev       gdal-bin libgdal1-dev libgdal-dev libproj-dev       python-all-dev
      python-pip       nodejs npm phantomjs &&       rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.email docker@codefor.nl
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.name "CodeForNL docker"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && git clone https://github.com/OSGeo/gdal ogr2ogr2 && cd ogr2ogr2 &&   git
      remote add cartodb https://github.com/cartodb/gdal && git fetch cartodb &&   git
      checkout trunk && git pull origin trunk &&   git checkout upstream && git merge
      -s ours --ff-only origin/trunk &&   git checkout ogr2ogr2 && git merge -s ours
      upstream -m "Merged it" &&   cd ogr2ogr2 && ./configure --disable-shared &&
      make -j 4 &&   cp apps/ogr2ogr /usr/bin/ogr2ogr && ln -s /usr/bin/ogr2ogr /usr/bin/ogr2ogr2
      && rm -rf /opt/ogr2ogr2 /root/.gitconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/nodejs /usr/bin/node && curl -L https://get.rvm.io | bash -s
      stable --ruby &&   echo 'source /usr/local/rvm/scripts/rvm' >> /etc/bash.bashrc
      &&   /bin/bash -l -c rvm requirements
    Name: run
    PrependShell: true
  - CmdLine:
    - echo rvm_max_time_flag=15 >> ~/.rvmrc &&   /bin/bash -l -c 'rvm install 2.2.3'
      &&   /bin/bash -l -c 'rvm use 2.2.3 --default' &&   /bin/bash -l -c 'gem install
      bundle archive-tar-minitar' && /bin/bash -l -c 'gem install bundler --no-doc
      --no-ri'
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /bundle_cache
  - CmdLine:
    - git clone --depth 1 --branch master https://github.com/cartodb/cartodb.git /carto
      && cd /carto &&   git submodule init &&   git submodule foreach --recursive
      'git rev-parse HEAD | xargs -I {} git fetch origin {} && git reset --hard FETCH_HEAD'
      &&   git submodule update --recursive
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /carto
  - CmdLine:
    - pip install --no-use-wheel -r python_requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - app_config.yml
    - /carto/config/app_config.yml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - grunt_docker.json
    - /carto/config/grunt_docker.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - database.yml
    - /carto/config/database.yml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gruntfile.js
    - /carto/Gruntfile.js
  - CmdLine:
    - mkdir -p /carto/public/assets
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /carto/public/assets
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run.sh
    - /run.sh
  - CmdLine:
    - chmod 755 /*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
