{
  "MetaArgs": [
    {
      "Key": "RESTY_IMAGE_BASE",
      "DefaultValue": "\"alpine\"",
      "ProvidedValue": null,
      "Value": "\"alpine\""
    },
    {
      "Key": "RESTY_IMAGE_TAG",
      "DefaultValue": "\"3.8\"",
      "ProvidedValue": null,
      "Value": "\"3.8\""
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG}",
      "SourceCode": "FROM ${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG}",
      "Platform": "",
      "From": {
        "Image": "${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG}"
      },
      "Commands": [
        {
          "Maintainer": "Miracle",
          "Name": "maintainer"
        },
        {
          "Key": "OPENWAF_VERSION",
          "Name": "arg",
          "Value": "\"0.0.6\""
        },
        {
          "Key": "OPENWAF_PREFIX",
          "Name": "arg",
          "Value": "\"/opt\""
        },
        {
          "Key": "OPENRESTY_PREFIX",
          "Name": "arg",
          "Value": "\"/usr/local/openresty\""
        },
        {
          "Key": "OPENRESTY_VERSION",
          "Name": "arg",
          "Value": "\"1.13.6.2\""
        },
        {
          "Key": "PCRE_VERSION",
          "Name": "arg",
          "Value": "\"8.42\""
        },
        {
          "Key": "OPENSSL_VERSION",
          "Name": "arg",
          "Value": "\"1.1.0h\""
        },
        {
          "Key": "OPENWAF_J",
          "Name": "arg",
          "Value": "\"1\""
        },
        {
          "Key": "OPENWAF_CONFIG_OPTIONS",
          "Name": "arg",
          "Value": "\"     --with-pcre-jit --with-ipv6     --with-http_stub_status_module     --with-http_ssl_module     --with-http_realip_module     --with-http_sub_module     --with-http_geoip_module     --with-pcre=${OPENWAF_PREFIX}/pcre-${PCRE_VERSION}     \""
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps         build-base         curl         gd-dev         geoip-dev         libxslt-dev         linux-headers         make         perl-dev         readline-dev         zlib-dev     \u0026\u0026 apk add --no-cache         gd         geoip         libgcc         libxslt         zlib     \u0026\u0026 mkdir ${OPENWAF_PREFIX}     \u0026\u0026 cd ${OPENWAF_PREFIX}     \u0026\u0026 curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${PCRE_VERSION}.tar.gz -o pcre-${PCRE_VERSION}.tar.gz     \u0026\u0026 curl -fSL https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz -o openssl-${OPENSSL_VERSION}.tar.gz     \u0026\u0026 curl -fSL https://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz -o openresty-${OPENRESTY_VERSION}.tar.gz     \u0026\u0026 tar xzf pcre-${PCRE_VERSION}.tar.gz     \u0026\u0026 tar xzf openssl-${OPENSSL_VERSION}.tar.gz     \u0026\u0026 tar xzf openresty-${OPENRESTY_VERSION}.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${OPENWAF_PREFIX}/openssl-${OPENSSL_VERSION}     \u0026\u0026 ./config no-async     \u0026\u0026 make     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${OPENWAF_PREFIX}     \u0026\u0026 apk add --no-cache --virtual .openwaf_build_deps git     \u0026\u0026 apk add --no-cache swig     \u0026\u0026 git clone https://github.com/titansec/OpenWAF.git     \u0026\u0026 mv ${OPENWAF_PREFIX}/OpenWAF/lib/openresty/ngx_openwaf.conf /etc     \u0026\u0026 mv ${OPENWAF_PREFIX}/OpenWAF/lib/openresty/configure ${OPENWAF_PREFIX}/openresty-${OPENRESTY_VERSION}     \u0026\u0026 cp -RP ${OPENWAF_PREFIX}/OpenWAF/lib/openresty/* ${OPENWAF_PREFIX}/openresty-${OPENRESTY_VERSION}/bundle/     \u0026\u0026 cd ${OPENWAF_PREFIX}/OpenWAF     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${OPENWAF_PREFIX}/openresty-${OPENRESTY_VERSION}/     \u0026\u0026 ./configure -j${OPENWAF_J} ${OPENWAF_CONFIG_OPTIONS}     \u0026\u0026 make -j${OPENWAF_J}     \u0026\u0026 make -j${OPENWAF_J} install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ${OPENWAF_PREFIX}     \u0026\u0026 rm -rf         pcre-${PCRE_VERSION}         openssl-${OPENSSL_VERSION}         pcre-${PCRE_VERSION}.tar.gz         openresty-${OPENRESTY_VERSION}         openssl-${OPENSSL_VERSION}.tar.gz         openresty-${OPENRESTY_VERSION}.tar.gz         OpenWAF/doc         OpenWAF/lib/openresty     \u0026\u0026 cd OpenWAF     \u0026\u0026 rm -rf `ls -Fa | grep '^\\.\\w'`     \u0026\u0026 rm -f `ls -F | grep -v '/$'`     \u0026\u0026 apk del .build-deps     \u0026\u0026 apk del .openwaf_build_deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${OPENRESTY_PREFIX}/luajit/bin/:${OPENRESTY_PREFIX}/nginx/sbin/:${OPENRESTY_PREFIX}/bin/:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "openresty",
            "-c",
            "/etc/ngx_openwaf.conf",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "stopsignal",
          "Signal": "SIGQUIT"
        }
      ]
    }
  ]
}