MetaArgs: null
Stages:
- As: build
  BaseName: maven
  Commands:
  - Name: workdir
    Path: /build
  - Chown: ""
    Name: add
    SourcesAndDest:
    - pom.xml
    - /build
  - CmdLine:
    - mvn dependency:go-offline dependency:resolve-plugins
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - src
    - /build/src
  - CmdLine:
    - mvn package
    Name: run
    PrependShell: true
  From:
    Image: maven
  Name: build
  Platform: ""
  SourceCode: FROM maven AS build
- BaseName: openjdk:8-jdk
  Commands:
  - Name: workdir
    Path: /app
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/target/memoryhog.jar
    - /app
  - Env:
    - Key: JMX_HOSTNAME
      Value: localhost
    Name: env
  - Env:
    - Key: MAX_RAM_FRACTION
      Value: "1"
    Name: env
  - CmdLine:
    - java ${JAVA_OPTS} -Djava.security.egd=file:/dev/./urandom     -XX:+UnlockExperimentalVMOptions     -XX:+UseCGroupMemoryLimitForHeap     -XshowSettings:vm
      -XX:MaxRAMFraction=$MAX_RAM_FRACTION     -Dcom.sun.management.jmxremote=true     -Dcom.sun.management.jmxremote.local.only=false     -Dcom.sun.management.jmxremote.authenticate=false     -Dcom.sun.management.jmxremote.ssl=false     -Djava.rmi.server.hostname=$JMX_HOSTNAME     -Dcom.sun.management.jmxremote.port=9999     -Dcom.sun.management.jmxremote.rmi.port=9999     -jar
      /app/memoryhog.jar
    Name: cmd
    PrependShell: true
  From:
    Image: openjdk:8-jdk
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk
