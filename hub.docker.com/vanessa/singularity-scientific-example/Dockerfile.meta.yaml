MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: vsochat@stanford.edu
    Name: maintainer
  - CmdLine:
    - locale-gen "en_US.UTF-8"
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - CmdLine:
    - export LANGUAGE="en_US.UTF-8"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'LANGUAGE="en_US.UTF-8"' >> /etc/default/locale
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'LC_ALL="en_US.UTF-8"' >> /etc/default/locale
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /share /local-scratch /Software
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /scratch/data
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 777 /scratch
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +t /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 777 /Software
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-transport-https build-essential cmake curl libsm6 libxrender1
      libfontconfig1 wget vim git unzip python-setuptools ruby bc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 51716619E084DAB9
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://cloud.r-project.org/bin/linux/ubuntu trusty/" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y r-base-dev gdebi-core
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y time
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m singularity
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /Software
  - CmdLine:
    - su -c 'git clone https://github.com/Linuxbrew/brew.git' singularity
    Name: run
    PrependShell: true
  - CmdLine:
    - su -c '/Software/brew/bin/brew install bsdmainutils parallel util-linux' singularity
    Name: run
    PrependShell: true
  - CmdLine:
    - su -c '/Software/brew/bin/brew tap homebrew/science' singularity
    Name: run
    PrependShell: true
  - CmdLine:
    - su -c '/Software/brew/bin/brew install art bwa samtools' singularity
    Name: run
    PrependShell: true
  - CmdLine:
    - su -c 'rm -r $(/Software/brew/bin/brew --cache)' singularity
    Name: run
    PrependShell: true
  - CmdLine:
    - su -c 'wget http://repo.continuum.io/archive/Anaconda3-4.1.1-Linux-x86_64.sh'
      singularity
    Name: run
    PrependShell: true
  - CmdLine:
    - bash Anaconda3-4.1.1-Linux-x86_64.sh -b -p /Software/anaconda3
    Name: run
    PrependShell: true
  - CmdLine:
    - rm Anaconda3-4.1.1-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /Software/anaconda3/bin/conda update -y conda
    Name: run
    PrependShell: true
  - CmdLine:
    - /Software/anaconda3/bin/conda update -y anaconda
    Name: run
    PrependShell: true
  - CmdLine:
    - /Software/anaconda3/bin/conda config --add channels bioconda
    Name: run
    PrependShell: true
  - CmdLine:
    - /Software/anaconda3/bin/conda install -y --channel bioconda kallisto
    Name: run
    PrependShell: true
  - CmdLine:
    - /Software/anaconda3/bin/conda clean -y --all
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --no-check-certificate https://github.com/RealTimeGenomics/rtg-core/releases/download/3.6.2/rtg-core-non-commercial-3.6.2-linux-x64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip rtg-core-non-commercial-3.6.2-linux-x64.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "n" | /Software/rtg-core-non-commercial-3.6.2/rtg --version
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /code
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /code
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-start.sh
    - /code/docker-start.sh
  - CmdLine:
    - chmod u+x /code/docker-start.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /code
  - Env:
    - Key: WORKDIR
      Value: /scratch/data
    Name: env
  - Env:
    - Key: RUNDIR
      Value: /code/cloud
    Name: env
  - Env:
    - Key: BASE
      Value: /code
    Name: env
  - Env:
    - Key: TIME_LOG
      Value: $RUNDIR/logs/stats.log
    Name: env
  - Env:
    - Key: TIME
      Value: '''%C\t%E\t%I\t%K\t%M\t%O\t%P\t%U\t%W\t%X\t%e\t%k\t%p\t%r\t%s\t%t\t%w\n'''
    Name: env
  - Env:
    - Key: PATH
      Value: /Software/brew/bin:/Software/anaconda3/bin:/Software/rtg-core-non-commercial-3.6.2:$PATH
    Name: env
  - CmdLine:
    - '"/code/docker-start.sh"'
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
