MetaArgs: null
Stages:
- BaseName: tianon/docker-tianon
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Key: R_VERSION
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: BUILD_DATE
      Value: ${BUILD_DATE:-2019-03-07}
    Name: env
  - Env:
    - Key: R_VERSION
      Value: ${R_VERSION:-3.5.2}
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: TERM
      Value: xterm
    Name: env
  - CmdLine:
    - apt update &&     mkdir -p /usr/share/man/man1 &&     apt install -y --no-install-recommends     bash-completion     ca-certificates     file     fonts-texgyre     gdebi-core     g++     git     gfortran     gsfonts     libblas-dev     libbz2-1.0     libcurl3     libssl-dev     libicu57     libjpeg62-turbo     libopenblas-dev     libpangocairo-1.0-0     libcurl4-gnutls-dev     libcairo2-dev     libxt-dev     libpcre3     libpng16-16     libreadline7     libtiff5     liblzma5     locales     make     pandoc     pandoc-citeproc     sudo     unzip     wget     xtail     zip     zlib1g
      &&   echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen &&   locale-gen en_US.utf8
      &&   /usr/sbin/update-locale LANG=en_US.UTF-8 &&   BUILDDEPS="curl     default-jdk     libbz2-dev     libcairo2-dev     libcurl4-openssl-dev     libpango1.0-dev     libjpeg-dev     libicu-dev     libpcre3-dev     libpng-dev     libreadline-dev     libtiff5-dev     liblzma-dev     libx11-dev     libxt-dev     perl     tcl8.6-dev     tk8.6-dev     texinfo     texlive-extra-utils     texlive-fonts-recommended     texlive-fonts-extra     texlive-latex-recommended     x11proto-core-dev     xauth     xfonts-base     xvfb     zlib1g-dev"
      &&   apt install -y --no-install-recommends $BUILDDEPS
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - curl -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz &&     tar
      -xf R-${R_VERSION}.tar.gz &&     cd R-${R_VERSION} &&     R_PAPERSIZE=letter     R_BATCHSAVE="--no-save
      --no-restore"     R_BROWSER=xdg-open     PAGER=/usr/bin/pager     PERL=/usr/bin/perl     R_UNZIPCMD=/usr/bin/unzip     R_ZIPCMD=/usr/bin/zip     R_PRINTCMD=/usr/bin/lpr     LIBnn=lib     AWK=/usr/bin/awk     CFLAGS="-g
      -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2
      -g"     CXXFLAGS="-g -O2 -fstack-protector-strong -Wformat -Werror=format-security
      -Wdate-time -D_FORTIFY_SOURCE=2 -g"   ./configure --enable-R-shlib                --enable-memory-profiling                --with-readline                --with-blas                --with-tcltk                --disable-nls                --with-recommended-packages
      &&   make &&   make install &&   echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'),
      download.file.method = 'libcurl')" >> /usr/local/lib/R/etc/Rprofile.site &&    mkdir
      -p /usr/local/lib/R/site-library &&    chown root:staff /usr/local/lib/R/site-library
      &&    chmod g+wx /usr/local/lib/R/site-library &&    echo "R_LIBS_USER='/usr/local/lib/R/site-library'"
      >> /usr/local/lib/R/etc/Renviron &&    echo "R_LIBS=\${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}"
      >> /usr/local/lib/R/etc/Renviron &&   [ -z "$BUILD_DATE" ] && BUILD_DATE=$(TZ="America/Los_Angeles"
      date -I) || true &&   MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE}
      &&   echo MRAN=$MRAN >> /etc/environment &&   export MRAN=$MRAN &&   mkdir -p
      /usr/local/lib/R/etc &&   echo "options(repos = c(CRAN='$MRAN'), download.file.method
      = 'libcurl')" >> /usr/local/lib/R/etc/Rprofile.site
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages(c('littler', 'docopt'), repo = '$MRAN')" &&   mkdir
      -p /usr/share/man/man1/ &&   ln -s /usr/local/lib/R/site-library/littler/examples/install2.r
      /usr/local/bin/install2.r &&   ln -s /usr/local/lib/R/site-library/littler/examples/installGithub.r
      /usr/local/bin/installGithub.r &&   ln -s /usr/local/lib/R/site-library/littler/bin/r
      /usr/local/bin/r
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --no-verbose https://download3.rstudio.org/ubuntu-14.04/x86_64/VERSION
      -O "version.txt" &&     VERSION=$(cat version.txt)  &&     wget --no-verbose
      "https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-$VERSION-amd64.deb"
      -O ss-latest.deb &&     gdebi -n ss-latest.deb &&     rm -f version.txt ss-latest.deb
      &&     . /etc/environment &&     R -e "install.packages(c('shiny', 'rmarkdown'),
      repos='$MRAN')" &&     cp -R /usr/local/lib/R/site-library/shiny/examples/*
      /srv/shiny-server/ &&     cd / &&     rm -rf /tmp/* &&     apt remove --purge
      -y $BUILDDEPS &&     apt autoremove -y &&     apt autoclean -y &&     rm -rf
      /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e "install.packages('remotes', repos = 'http://cran.us.r-project.org')"
      &&     Rscript -e "remotes::install_github('researchapps/rize@add/dockerize-arguments')"
      &&     docker --version
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript
    - -e
    - rize::shiny_dockerize()
    Name: cmd
    PrependShell: false
  From:
    Image: tianon/docker-tianon
  Name: ""
  Platform: ""
  SourceCode: FROM tianon/docker-tianon
