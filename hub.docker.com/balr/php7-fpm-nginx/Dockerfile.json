{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE",
              "Value": "DontWarn"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "\u003e\u00262 echo \"# Installing some basic packages...\"     \u0026\u0026 apt-get -y update     \u0026\u0026 apt-get install -y         apt-utils locales         sudo man git htop vim mc         software-properties-common         apt-transport-https lsb-release wget lynx telnet curl         parallel bzip2 acl gnupg         exim4-daemon-light         supervisor nginx         jpegoptim optipng"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "\u003e\u00262 echo \"# Configuring locales...\"     \u0026\u0026 echo en_US.UTF-8 UTF-8 | tee /etc/locale.gen     \u0026\u0026 locale-gen     \u0026\u0026 dpkg-reconfigure locales     \u0026\u0026 update-locale LANG=\"en_US.UTF-8\" LANGUAGE=\"en_US:en\" LC_ALL=\"en_US.UTF-8\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "\u003e\u00262 echo \"# Setting system timezone...\"     \u0026\u0026 echo \"Europe/Amsterdam\" | tee /etc/timezone     \u0026\u0026 dpkg-reconfigure tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "\u003e\u00262 echo \"# Setting up users and permissions...\"     \u0026\u0026 adduser --gecos '' --uid 1000 --gid 50 --disabled-password php     \u0026\u0026 adduser php staff"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "\u003e\u00262 echo \"# Install PHP 7 with extensions and update settings\"     \u0026\u0026 wget -O - https://www.dotdeb.org/dotdeb.gpg | apt-key add -     \u0026\u0026 echo \"deb https://packages.dotdeb.org $(lsb_release -sc) all\" | tee /etc/apt/sources.list.d/php.list     \u0026\u0026 echo \"deb-src https://packages.dotdeb.org $(lsb_release -sc) all\" | tee -a /etc/apt/sources.list.d/php.list     \u0026\u0026 apt-get -y update     \u0026\u0026 apt-get install -y php7.0-fpm php7.0-cli php7.0-mbstring php7.0-mcrypt php7.0-intl     php7.0-mysql php7.0-redis php7.0-memcached php7.0-gd php7.0-curl php7.0-xsl php-imagick     \u0026\u0026 sed -i \"s/^;\\(date\\.timezone\\(\\s*\\)\\?=\\).*/\\1 Europe\\/Amsterdam/\" /etc/php/7.0/cli/php.ini     \u0026\u0026 sed -i \"s/^;\\(date\\.timezone\\(\\s*\\)\\?=\\).*/\\1 Europe\\/Amsterdam/\" /etc/php/7.0/fpm/php.ini     \u0026\u0026 sed -i \"s/^\\(memory_limit\\(\\s*\\)\\?=\\).*/\\1 4G/\" /etc/php/7.0/cli/php.ini     \u0026\u0026 sed -i \"s/^\\(memory_limit\\(\\s*\\)\\?=\\).*/\\1 256M/\" /etc/php/7.0/fpm/php.ini     \u0026\u0026 phpenmod -v 7.0 -s ALL mbstring mcrypt intl pdo_mysql redis memcached gd curl xml xsl imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php-fpm.conf",
            "/etc/php/7.0/fpm/php-fpm.conf"
          ]
        },
        {
          "CmdLine": [
            "\u003e\u00262 echo \"# Installing tooling (composer, nodejs)...\"     \u0026\u0026 EXPECTED_SIGNATURE=$(wget -q -O - 'https://composer.github.io/installer.sig')     \u0026\u0026 wget -O composer-installer.php 'https://getcomposer.org/installer'     \u0026\u0026 INSTALLER_SIGNATURE=$(openssl dgst --sha384 -hex composer-installer.php | sed 's/^.* \\(.*\\)$/\\1/')     \u0026\u0026 if [ \"$INSTALLER_SIGNATURE\" != \"$EXPECTED_SIGNATURE\" ] ; then \u003e\u00262 echo 'ERROR: Invalid installer signature' \u0026\u0026 exit 1 ; fi     \u0026\u0026 php composer-installer.php --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 rm composer-installer.php     \u0026\u0026 curl -sL https://deb.nodesource.com/setup_6.x | bash -     \u0026\u0026 apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "\u003e\u00262 echo \"# Ensure everything is up to date and cleaning up...\"     \u0026\u0026 apt-get -y update \u0026\u0026 apt-get -y dist-upgrade     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* index.nginx-debian.html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./web",
            "/var/www/html/web"
          ]
        },
        {
          "CmdLine": [
            "\u003e\u00262 echo \"# Give ownership of the web files to the php user\"     \u0026\u0026 chown -R php.staff /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "\u003e\u00262 echo \"# Redirecting nginx logs to stdout and stderr ...\"     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx-site.conf",
            "/etc/nginx/sites-enabled/default"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}