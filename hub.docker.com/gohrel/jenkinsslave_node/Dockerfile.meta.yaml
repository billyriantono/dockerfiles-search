MetaArgs: null
Stages:
- BaseName: node:latest
  Commands:
  - Maintainer: Holger Zunker <holger50@gmx.de>
    Name: maintainer
  - CmdLine:
    - useradd -m user
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/user
  - Name: user
    User: root
  - CmdLine:
    - sed -i 's/# \(.*multiverse$\)/\1/g' /etc/apt/sources.list &&   apt-get update
      &&   apt-get -y upgrade &&   apt-get install -y build-essential &&   apt-get
      install -y software-properties-common &&   apt-get install -y curl git htop
      man unzip vim wget curl zip unzip apt-utils apt-transport-https ca-certificates
      gnupg2 software-properties-common &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get update && apt-get install -y python python-dev python-pip python-virtualenv
      && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main" | tee
      /etc/apt/sources.list.d/webupd8team-java.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main"
      | tee -a /etc/apt/sources.list.d/webupd8team-java.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver http://keyserver.ubuntu.com:80 --recv-keys EEA14886
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 select true"
      | debconf-set-selections
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install oracle-java8-installer -y
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_9.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install npm@latest -g
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - apt-get update && apt-get -y upgrade
    Name: run
    PrependShell: true
  - Name: user
    User: user
  - Env:
    - Key: JENKINS_MASTER_USERNAME
      Value: '"jenkins"'
    - Key: JENKINS_MASTER_PASSWORD
      Value: '"jenkins"'
    - Key: JENKINS_MASTER_URL
      Value: '"http://jenkins:8080/"'
    - Key: JENKINS_SLAVE_MODE
      Value: '"exclusive"'
    - Key: JENKINS_SLAVE_NAME
      Value: '"swarm-node-$RANDOM"'
    - Key: JENKINS_SLAVE_WORKERS
      Value: '"1"'
    - Key: JENKINS_SLAVE_LABELS
      Value: '"Node node python java8 oracle-java8"'
    - Key: AVD
      Value: '""'
    Name: env
  - Env:
    - Key: JENKINS_SLAVE_ROOT
      Value: '"/home/user/"'
    Name: env
  - Env:
    - Key: HOME
      Value: /home/user
    - Key: JENKINS_SWARM_VERSION
      Value: "3.9"
    - Key: JENKINS_SWARM_JAR_PATH
      Value: /home/user
    Name: env
  - Env:
    - Key: JENKINS_SWARM_JAR
      Value: ${JENKINS_SWARM_JAR_PATH}/swarm.jar
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/entrypoint.sh
    - /home/user/scripts/
  - CmdLine:
    - mkdir -p "$JENKINS_SLAVE_ROOT"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $JENKINS_SWARM_JAR_PATH     && chmod 755 $JENKINS_SWARM_JAR_PATH     &&
      curl -SLo $JENKINS_SWARM_JAR http://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/$JENKINS_SWARM_VERSION/swarm-client-$JENKINS_SWARM_VERSION.jar
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - env | grep -E "(JENKINS|JAVA)" > /etc/docker.properties
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - chmod +x /home/user/scripts/entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R user:user /home/user/scripts/*
    Name: run
    PrependShell: true
  - CmdLine:
    - /home/user/scripts/entrypoint.sh
    Name: entrypoint
    PrependShell: true
  - Name: user
    User: user
  - Name: volume
    Volumes:
    - ${HOME}
  - Name: workdir
    Path: ${HOME}
  From:
    Image: node:latest
  Name: ""
  Platform: ""
  SourceCode: FROM node:latest
