{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ouspg/libfuzzer-base",
      "SourceCode": "FROM ouspg/libfuzzer-base",
      "Platform": "",
      "From": {
        "Image": "ouspg/libfuzzer-base"
      },
      "Commands": [
        {
          "Maintainer": "https://github.com/ouspg/libfuzzerification",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GHC_VERSION",
              "Value": "8.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CABAL_VERSION",
              "Value": "1.24"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GHC_LLVM",
              "Value": "3.7"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "hvr-ghc.list",
            "/etc/apt/sources.list.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "hvr-ghc.key",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "apt-key add /tmp/hvr-ghc.key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026     apt-get -y install         cabal-install-${CABAL_VERSION}         ghc-${GHC_VERSION}         llvm-${GHC_LLVM}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install emacs-nox"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dotemacs",
            "/root/.emacs"
          ]
        },
        {
          "CmdLine": [
            "update-alternatives --set cc /usr/bin/clang \u0026\u0026     update-alternatives --set c89 /usr/bin/clang \u0026\u0026     update-alternatives --set c99 /usr/bin/clang \u0026\u0026     update-alternatives --install /usr/bin/gcc gcc /usr/bin/clang 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/opt opt /usr/bin/opt-${GHC_LLVM} 1 \u0026\u0026     update-alternatives --install /usr/bin/llc llc /usr/bin/llc-${GHC_LLVM} 1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/ghc/${GHC_VERSION}/bin/:/opt/cabal/${CABAL_VERSION}/bin/:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ghc-wrapper",
            "ghc-asan",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod a+x /usr/local/bin/ghc-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/src/hs-libfuzzer"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "hs-libfuzzer",
            "/src/hs-libfuzzer"
          ]
        },
        {
          "CmdLine": [
            "cd /src/hs-libfuzzer \u0026\u0026     cabal update \u0026\u0026     cabal install \u0026\u0026     rm -rf /src/hs-libfuzzer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cabal.config",
            "/root/.cabal/config"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/haskell/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/hsinit.c",
            "src/test.hs",
            "src/build.sh",
            "/haskell/"
          ]
        }
      ]
    }
  ]
}