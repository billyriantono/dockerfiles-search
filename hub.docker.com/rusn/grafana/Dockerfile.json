{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.3",
      "SourceCode": "FROM alpine:3.3",
      "Platform": "",
      "From": {
        "Image": "alpine:3.3"
      },
      "Commands": [
        {
          "Maintainer": "Nikita Rusin \u003crusinnick@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            },
            {
              "Key": "REPO_PATH",
              "Value": "github.com/grafana/grafana"
            },
            {
              "Key": "REPO_TAG",
              "Value": "v2.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update --virtual build-deps                                       go nodejs build-base git mercurial                \u0026\u0026 git clone https://$REPO_PATH.git -b $REPO_TAG --depth 1                  /go/src/$REPO_PATH                         \u0026\u0026 cd /go/src/$REPO_PATH                                \u0026\u0026 go run build.go setup                                \u0026\u0026 /go/bin/godep restore                                \u0026\u0026 go run build.go build                                \u0026\u0026 npm install --unsafe-perm                            \u0026\u0026 npm install -g grunt-cli                             \u0026\u0026 grunt                                                \u0026\u0026 mkdir -p /grafana /grafana/conf                      \u0026\u0026 cp ./bin/grafana-server /grafana/grafana-server      \u0026\u0026 cp -r ./public_gen /grafana/public                   \u0026\u0026 cp conf/*.ini /grafana/conf                          \u0026\u0026 rm -rf /go                                           \u0026\u0026 apk del --purge build-deps                           \u0026\u0026 rm -rf /var/cache/apk/*                              \u0026\u0026 rm -rf /tmp/*                                        \u0026\u0026 rm -rf /root/.n*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/grafana"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config.ini",
            "/grafana/conf/config.ini"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "CmdLine": [
            "./grafana-server"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-config=conf/config.ini"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}