MetaArgs: null
Stages:
- As: build_container
  BaseName: node:12.6.0-alpine
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./
    - /colorsplash
  - Name: workdir
    Path: /colorsplash
  - CmdLine:
    - 'set -xe;     sed -i ''s|"homepage": "http://.*"|"homepage": "http://localhost/"|g''
      package.json;     npm install;     npm run build;'
    Name: run
    PrependShell: true
  From:
    Image: node:12.6.0-alpine
  Name: build_container
  Platform: ""
  SourceCode: FROM node:12.6.0-alpine as build_container
- BaseName: alpine:3.10
  Commands:
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Key: LANG
    Name: arg
    Value: '"en_US.UTF-8"'
  - Labels:
    - Key: maintainer
      Value: '"James Brink, brink.james@gmail.com"'
    - Key: org.label-schema.build-date
      Value: '"${BUILD_DATE}"'
    - Key: org.label-schema.decription
      Value: '"Colorsplash"'
    - Key: org.label-schema.name
      Value: '"colorsplash"'
    - Key: org.label-schema.schema-version
      Value: '"1.0.0-rc1"'
    - Key: org.label-schema.vcs-ref
      Value: '"${VCS_REF}"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/utensils/colorsplash"'
    - Key: org.label-schema.vendor
      Value: '"Utensils"'
    - Key: org.label-schema.version
      Value: '"${VERSION}"'
    Name: label
  - CmdLine:
    - set -xe;     addgroup -g 1000 -S colorsplash;     adduser -u 1000 -S -h /colorsplash
      -s /bin/sh -G colorsplash colorsplash;
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe;     apk add --update --no-cache lighttpd;
    Name: run
    PrependShell: true
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-assets/
    - /
  - Chown: colorsplash:colorsplash
    From: build_container
    Name: copy
    SourcesAndDest:
    - /colorsplash/build/
    - /colorsplash/
  - Name: workdir
    Path: /colorsplash
  - Name: user
    User: colorsplash
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
