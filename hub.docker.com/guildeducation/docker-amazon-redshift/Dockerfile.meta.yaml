MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - CmdLine:
    - groupadd -r postgres --gid=999 && useradd -r -g postgres --uid=999 postgres
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true \t&& apt-get purge -y --auto-remove ca-certificates wget"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - Env:
    - Key: PGPORT
      Value: "5439"
    Name: env
  - Env:
    - Key: PGDATA
      Value: /var/lib/postgresql/data
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/local/pgsql/bin:$PATH
    Name: env
  - Env:
    - Key: PG_MAJOR
      Value: 8.0.2
    Name: env
  - Env:
    - Key: PG_MD5
      Value: 62ca2786a4856c492fbdcd23bedb48c6
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y locales curl make gcc libreadline-dev zlib1g-dev
      libssl-dev     && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias
      en_US.UTF-8     && curl -O https://ftp.postgresql.org/pub/source/v$PG_MAJOR/postgresql-$PG_MAJOR.tar.gz     &&
      echo "$PG_MD5 *postgresql-$PG_MAJOR.tar.gz" | md5sum -c -     && tar xf postgresql-$PG_MAJOR.tar.gz     &&
      cd postgresql-$PG_MAJOR     && ./configure       --enable-integer-datetimes       --enable-thread-safety       --enable-tap-tests       --disable-rpath       --with-uuid=e2fs       --with-pgport=$PGPORT       --with-system-tzdata=/usr/share/zoneinfo       --prefix=/usr/local       --with-includes=/usr/local/include       --with-libraries=/usr/local/lib       --with-openssl       --with-libxml       --with-libxslt     &&
      make && make install     && rm -rf postgresql-$PG_MAJOR* /usr/local/share/man     &&
      apt-get purge -y --auto-remove curl make gcc     && find /usr/local -name '*.a'
      -delete     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample
      \t&& sed -ri \"s!^#?(port)\\s*=\\s*\\S+.*!\\1 = ${PGPORT}!\" /usr/local/share/postgresql/postgresql.conf.sample"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql
      && chmod 2777 /var/run/postgresql
    Name: run
    PrependShell: true
  - CmdLine:
    - 'mkdir -p "$PGDATA" && chown -R postgres:postgres "$PGDATA" && chmod 777 "$PGDATA"
      # this 777 will be replaced by 700 at runtime (allows semi-arbitrary "--user"
      values)'
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/postgresql/data
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - 'ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat'
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "5439"
  - CmdLine:
    - postmaster
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
