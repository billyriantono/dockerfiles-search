MetaArgs: null
Stages:
- BaseName: ruby:2.6.0
  Commands:
  - Maintainer: Yanhao Yang <yanhao.yang@gmail.com>
    Name: maintainer
  - CmdLine:
    - "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add - && \techo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >>
      /etc/apt/sources.list.d/google.list && \tapt-get update -y && \tapt-get install
      -y --no-install-recommends wget xvfb unzip &&\tapt-get install -y google-chrome-stable"
    Name: run
    PrependShell: true
  - Env:
    - Key: CHROMEDRIVER_VERSION
      Value: "2.39"
    Name: env
  - Env:
    - Key: CHROMEDRIVER_DIR
      Value: /usr/bin
    Name: env
  - CmdLine:
    - "wget -q --continue -P $CHROMEDRIVER_DIR \"http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip\"
      && \tunzip $CHROMEDRIVER_DIR/chromedriver* -d $CHROMEDRIVER_DIR && \trm $CHROMEDRIVER_DIR/chromedriver*.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y apt-transport-https &&   apt-get update
      &&   DEBIAN_FRONTEND=noninteractive apt-get install -y   python-dev libncurses5-dev
      libncursesw5-dev   python3-dev ruby-dev lua5.1 liblua5.1-dev   zsh silversearcher-ag
      locales sudo   &&   apt-get autoremove -y &&   apt-get autoclean &&   apt-get
      clean &&   rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/rtags
    - /usr/local/bin/rtags
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/gs
    - /usr/local/bin/gs
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/dummy_server
    - /usr/local/bin/dummy_server
  - CmdLine:
    - chsh --shell /bin/zsh &&   echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&   locale-gen
      &&   groupadd --gid 1000 docker &&   useradd --gid 1000 --uid 1000 --create-home
      docker &&   echo "docker ALL=(root) NOPASSWD:ALL" > /etc/sudoers.d/user &&   chmod
      0440 /etc/sudoers.d/user &&   cd /tmp &&   git clone https://github.com/vim/vim.git
      &&   cd /tmp/vim &&   ./configure     --with-features=huge     --enable-multibyte     --enable-rubyinterp=yes     --enable-pythoninterp=yes     --with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu     --enable-python3interp=yes     --with-python3-config-dir=/usr/lib/python3.4/config-3.4m-x86_64-linux-gnu     --enable-luainterp=yes     --enable-cscope   &&   make
      &&   make install &&   cd ~ &&   rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: TERM
      Value: xterm-256color
    Name: env
  - Env:
    - Key: SHELL
      Value: /usr/bin/zsh
    Name: env
  - Name: user
    User: docker
  - CmdLine:
    - sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      &&   git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
      &&   git clone https://github.com/zsh-users/zsh-autosuggestions.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
      &&   git clone https://github.com/YanhaoYang/vim-for-ruby.git ~/.vim &&   git
      clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf &&   ~/.fzf/install
      --all
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/.zshrc
    - /home/docker/.zshrc
  - Env:
    - Key: NODE_VERSION
      Value: v10.15.0
    Name: env
  - CmdLine:
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh
      | bash &&   bash -c "    source $HOME/.nvm/nvm.sh &&     nvm install $NODE_VERSION
      &&     nvm use $NODE_VERSION &&     npm install -g yarn &&     echo 'export
      NVM_DIR=\"$HOME/.nvm\"' >> ~/.zshrc.local &&     echo '[ -s \"\$NVM_DIR/nvm.sh\"
      ] && . \"\$NVM_DIR/nvm.sh\"' >> ~/.zshrc.local &&     echo 'nvm use $NODE_VERSION'
      >> ~/.zshrc.local"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - /usr/local/bin/dummy_server
    Name: entrypoint
    PrependShell: false
  From:
    Image: ruby:2.6.0
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2.6.0
