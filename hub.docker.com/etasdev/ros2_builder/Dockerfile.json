{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "ROS_DISTRO",
              "Value": "bouncy"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends curl gnupg ca-certificates wget python3 tzdata bash     \u0026\u0026 ln -fs /usr/share/zoneinfo/UTC /etc/localtime     \u0026\u0026 dpkg-reconfigure --frontend noninteractive tzdata     \u0026\u0026 curl http://repo.ros2.org/repos.key | apt-key add -     \u0026\u0026 echo \"deb [arch=amd64,arm64] http://repo.ros2.org/ubuntu/main bionic main\" \u003e /etc/apt/sources.list.d/ros2-latest.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends ros-${ROS_DISTRO}-ros-base                                                   build-essential                                                   cmake                                                   git                                                   python3-colcon-common-extensions                                                   python3-pip                                                   python-rosdep                                                   python3-vcstool                                                   libasio-dev                                                   libtinyxml2-dev                                                   libpython3-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 python3 -m pip install --quiet --no-cache-dir -U argcomplete                                                         flake8                                                         flake8-blind-except                                                         flake8-builtins                                                         flake8-class-newline                                                         flake8-comprehensions                                                         flake8-deprecated                                                         flake8-docstrings                                                         flake8-import-order                                                         flake8-quotes                                                         pytest-repeat                                                         pytest-rerunfailures"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/rosdep"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}