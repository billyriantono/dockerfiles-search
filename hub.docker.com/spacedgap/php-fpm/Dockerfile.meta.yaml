MetaArgs: null
Stages:
- BaseName: centos:6.8
  Commands:
  - Key: BUILD_ENV
    Name: arg
    Value: live
  - Env:
    - Key: BUILD_ENV
      Value: ${BUILD_ENV}
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - yum update -y     && yum upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "ENVIRONMENT::$BUILD_ENV"
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "${BUILD_ENV}" = "dev" ]; then echo "${BUILD_ENV}"; fi
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
    Name: run
    PrependShell: true
  - CmdLine:
    - rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
    Name: run
    PrependShell: true
  - CmdLine:
    - yum repolist
    Name: run
    PrependShell: true
  - CmdLine:
    - yum update -y
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - yum --enablerepo remi-php55,remi,epel install -y         php         php-bcmath         php-cli         php-common         php-dba         php-devel         php-enchant         php-fpdf         php-fpm         php-gd         php-gmp         php-imap         php-intl         php-ldap         php-mbstring         php-mcrypt         php-mysqlnd         php-oauth         php-opcache         php-pdo         php-pear         php-pgsql         php-process         php-pspell         php55-runtime         php-soap         php-tidy         php-xml         php-xmlrpc         php-pecl-amqp         php-pecl-igbinary         php-pecl-imagick         php-pecl-jsonc         php-pecl-jsonc-devel         php-pecl-memcache         php-pecl-mongo         php-pecl-oauth         php-pecl-pdflib         php-pecl-redis         php-pecl-runkit         php-pecl-ssh2         php-pecl-zip
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ ${BUILD_ENV} = 'dev' ]; then     yum --enablerepo remi-php55,remi,epel
      install -y         php-pecl-xdebug ;fi
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - yum clean all -y     && rm -rf         /tmp/*         /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-entrypoint
    - /usr/local/bin/
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /var/www/html
  - CmdLine:
    - sed -i 's/daemonize = yes/daemonize = no/' /etc/php-fpm.conf     && sed -i 's/listen.allowed_clients
      = 127.0.0.1/;listen.allowed_clients = 127.0.0.1/' /etc/php-fpm.d/www.conf     &&
      sed -i 's/listen = 127.0.0.1:9000/listen = [::]:9000/' /etc/php-fpm.d/www.conf     &&
      sed -i 's/;catch_workers_output = yes/catch_workers_output = yes/' /etc/php-fpm.d/www.conf     &&
      sed -i 's/error_log = \/var\/log\/php-fpm\/error.log/error_log = \/dev\/stderr/'
      /etc/php-fpm.conf     && sed -i 's/php_admin_value\[error_log\] = \/var\/log\/php-fpm\/www-error.log/php_admin_value[error_log]
      = \/dev\/stderr/' /etc/php-fpm.d/www.conf     && {         echo '[www]';         echo
      'access.log = /dev/stdout';         echo 'clear_env = no';     } | tee /etc/php-fpm.d/docker.conf
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - CmdLine:
    - php-fpm
    - -F
    Name: cmd
    PrependShell: false
  From:
    Image: centos:6.8
  Name: ""
  Platform: ""
  SourceCode: FROM centos:6.8
