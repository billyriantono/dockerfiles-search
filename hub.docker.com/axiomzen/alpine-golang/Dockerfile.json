{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:alpine",
      "SourceCode": "FROM golang:alpine",
      "Platform": "",
      "From": {
        "Image": "golang:alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "CURL_VERSION",
              "Value": "7.50.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update --no-cache openssl openssl-dev ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache --virtual curldeps g++ make perl \u0026\u0026     wget https://curl.haxx.se/download/curl-$CURL_VERSION.tar.bz2 \u0026\u0026     tar xjvf curl-$CURL_VERSION.tar.bz2 \u0026\u0026     rm curl-$CURL_VERSION.tar.bz2 \u0026\u0026     cd curl-$CURL_VERSION \u0026\u0026     ./configure         --prefix=/usr         --with-ssl         --enable-ipv6         --enable-unix-sockets         --without-libidn         --disable-shared         --enable-static         --disable-ldap         --with-pic \u0026\u0026     make \u0026\u0026     rm src/curl \u0026\u0026     make LDFLAGS=-all-static \u0026\u0026     make install \u0026\u0026     cd .. \u0026\u0026     rm -r curl-$CURL_VERSION \u0026\u0026     rm -r /var/cache/apk \u0026\u0026     rm -r /usr/share/man \u0026\u0026     apk del curldeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache git sed"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get -u -v golang.org/x/tools/cmd/godoc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/curl"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}