MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - CmdLine:
    - apt-get update -q     && apt-get upgrade -q -y     && apt-get install -y         build-essential         curl         git         libbz2-dev         libncurses5-dev         libreadline-dev         libsqlite3-dev         libssl-dev         zlib1g-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /root
    - Key: PYENV_ROOT
      Value: /opt/pyenv
    - Key: PATH
      Value: /opt/pyenv/shims:/opt/pyenv/bin:$PATH
    Name: env
  - CmdLine:
    - curl https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer
      | bash
    Name: run
    PrependShell: true
  - Env:
    - Key: PY3VER
      Value: 3.7.4
    Name: env
  - Env:
    - Key: PY2VER
      Value: 2.7.16
    Name: env
  - CmdLine:
    - apt-get install libffi-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv install $PY3VER
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv install $PY2VER
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv global $PY2VER
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv global $PY3VER
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv global $PY3VER $PY2VER
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install vim-tiny -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install nano
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install tree
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install iputils-ping -yq
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install traceroute
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install net-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install tcpdump -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install telnet
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install netcat -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install dnsutils -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install hashalot
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install mtr -y
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install speedtest-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install tofrodos
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get install hping3 -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install lynx -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install slurm -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install nmon -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install sysstat -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install iperf3 -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install aria2 -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install mc -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install snmp -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install snmp-mibs-downloader -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install unzip
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://docs.paloaltonetworks.com/content/dam/techdocs/en_US/zip/snmp-mib/pan-90-snmp-mib-modules.zip
      -O /tmp/temp.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip /tmp/temp.zip -d /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /tmp/*.my /usr/share/snmp/mibs
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /tmp/temp.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /tmp/*.md5
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/mibs :/# mibs :/g' /etc/snmp/snmp.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "mibs +PAN-COMMON-MIB" >> /etc/snmp/snmp.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "mibs +PAN-ENTITY-EXT-MIB" >> /etc/snmp/snmp.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "mibs +PAN-LC-MIB" >> /etc/snmp/snmp.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "mibs +PAN-TRAPS" >> /etc/snmp/snmp.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install php -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install php7.2-curl -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install php7.2-xml -y
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/swaschkut/pan-configurator/
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'include_path = ".:/pan-configurator"' >> /etc/php/7.2/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /pan-configurator/utils/alias.sh >> /root/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: ANSIBLE_VERSION
      Value: 2.8.5
    Name: env
  - CmdLine:
    - pip install ansible==${ANSIBLE_VERSION}         pandevice         pan-python         xmltodict         jsonschema
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/ansible
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '[defaults]' >> /etc/ansible/ansible.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'library = /root/.ansible/roles/PaloAltoNetworks.paloaltonetworks/library/'
      >> /etc/ansible/ansible.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'roles_path = /root/.ansible/roles' >> /etc/ansible/ansible.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'interpreter_python = auto_silent' >> /etc/ansible/ansible.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'inventory = /pwd/hosts' >> /etc/ansible/ansible.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - ansible-galaxy install PaloAltoNetworks.paloaltonetworks
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://raw.githubusercontent.com/ansible/ansible/fb9720429119cd56a7dde6d06600a082b4ab19c3/lib/ansible/modules/network/panos/_panos_set.py
      -o /root/.ansible/roles/PaloAltoNetworks.paloaltonetworks/library/panos_set.py
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /opt/pyenv/shims/python /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fL -o /tmp/nmap.tar.bz2          https://nmap.org/dist/nmap-7.70.tar.bz2  &&
      tar -xjf /tmp/nmap.tar.bz2 -C /tmp  && cd /tmp/nmap*  && ./configure         --prefix=/usr         --sysconfdir=/etc         --mandir=/usr/share/man         --infodir=/usr/share/info         --without-zenmap         --without-nmap-update         --with-openssl=/usr/lib         --with-liblua=/usr/include  &&
      make  && make install  && rm -rf /var/cache/apk/*            /tmp/nmap*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install requests
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/p0lr/Harden/ /scripts/harden
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /GoPAN
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/zepryspet/GoPAN/raw/master/binaries/linux64bit/GoPAN
      -o /GoPAN/GoPAN
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 /GoPAN/GoPAN
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://raw.githubusercontent.com/zepryspet/GoPAN/master/README.md -o
      /GoPAN/README.md
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install paramiko
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/workape/pan-toolbox
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /pan-toolbox/*.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pudb
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/ipzero209/cps_bot
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /cps_bot/cps_bot.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/python/env python/' /cps_bot/cps_bot.py
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/nembery/SLR_Bot
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/PowerShell/PowerShell/releases/download/v6.1.3/powershell_6.1.3-1.ubuntu.18.04_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y liblttng-ust0
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg -i powershell_6.1.3-1.ubuntu.18.04_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - rm powershell_6.1.3-1.ubuntu.18.04_amd64.deb
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/.config/powershell
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "# Installing Modules can be blocked by some Firewalls" >> /root/.config/powershell/profile.ps1
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Install-Module -Force Az" >> /root/.config/powershell/profile.ps1
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Import-Module Az" >> /root/.config/powershell/profile.ps1
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "***** Running Powershell... Don't be alarmed by Display Issues :) *****"
    Name: run
    PrependShell: true
  - CmdLine:
    - pwsh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Enable-AzureRmAlias" > /root/.config/powershell/profile.ps1
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install azure-cli
    Name: run
    PrependShell: true
  - Env:
    - Key: tf_ver
      Value: 0.12.9
    Name: env
  - CmdLine:
    - curl -L -o terraform.zip https://releases.hashicorp.com/terraform/${tf_ver}/terraform_${tf_ver}_linux_amd64.zip
      &&     unzip terraform.zip &&     install terraform /usr/local/bin/terraform-${tf_ver}
      &&     rm -rf terraform.zip terraform &&     mv /usr/local/bin/terraform-${tf_ver}
      /usr/local/bin/terraform
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias terraform="/usr/local/bin/terraform"' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias tf="/usr/local/bin/terraform"' >> /root/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: GCLOUD_VERSION
      Value: 263.0.0
    Name: env
  - CmdLine:
    - curl --silent -L https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-$GCLOUD_VERSION-linux-x86_64.tar.gz
      -o google-cloud-sdk.tar.gz  && tar xzf google-cloud-sdk.tar.gz  && rm google-cloud-sdk.tar.gz  &&
      google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true
      --rc-path=/.bashrc  && google-cloud-sdk/bin/gcloud config set --installation
      component_manager/disable_update_check true
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias gcloud="/google-cloud-sdk/bin/gcloud"' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias gsutil="/google-cloud-sdk/bin/gsutil"' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install awscli awsebcli
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install shodan
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install requests-toolbelt
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y autoremove &&     apt-get -y autoclean &&     apt-get -y clean all
      &&     rm -rf /root/.cache/pip &&     rm -rf /root/.pip/cache &&     rm -rf
      /var/lib/apt/lists/* &&     rm -rf /var/cache/apt
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
