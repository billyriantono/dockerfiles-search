MetaArgs:
- DefaultValue: "18.04"
  Key: UBUNTU_VERSION
  ProvidedValue: null
  Value: "18.04"
Stages:
- BaseName: ubuntu:${UBUNTU_VERSION}
  Commands:
  - Key: UBUNTU_VERSION
    Name: arg
    Value: "18.04"
  - Key: MPI_KIND
    Name: arg
    Value: OpenMPI
  - Key: PYTHON_VERSION
    Name: arg
    Value: "3.6"
  - Key: TENSORFLOW_PACKAGE
    Name: arg
    Value: tensorflow==1.14.0
  - Key: KERAS_PACKAGE
    Name: arg
    Value: keras==2.2.4
  - Key: PYTORCH_PACKAGE
    Name: arg
    Value: https://download.pytorch.org/whl/cpu/torch-1.1.0-cp36-cp36m-linux_x86_64.whl
  - Key: TORCHVISION_PACKAGE
    Name: arg
    Value: https://download.pytorch.org/whl/cpu/torchvision-0.3.0-cp36-cp36m-linux_x86_64.whl
  - Key: MXNET_PACKAGE
    Name: arg
    Value: mxnet==1.4.1
  - Key: PYSPARK_PACKAGE
    Name: arg
    Value: pyspark==2.4.0
  - Key: NUMPY_PACKAGE
    Name: arg
    Value: numpy==1.15.4
  - Name: shell
    Shell:
    - /bin/bash
    - -cu
  - CmdLine:
    - apt-get update -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         wget         ca-certificates         cmake         openssh-client         git         build-essential         g++-4.8
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:ubuntu-toolchain-r/test
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update  --fix-missing && apt-get install -y --no-install-recommends
      g++-7
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python${PYTHON_VERSION} python${PYTHON_VERSION}-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - if [[ "${PYTHON_VERSION}" == "3.6" ]]; then         apt-get install -y python${PYTHON_VERSION}-distutils;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s -f /usr/bin/python${PYTHON_VERSION} /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://bootstrap.pypa.io/get-pip.py && python get-pip.py && rm get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U --force pip setuptools requests pytest
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y openjdk-8-jdk-headless
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ${PYSPARK_PACKAGE}
    Name: run
    PrependShell: true
  - CmdLine:
    - if [[ ${MPI_KIND} == "OpenMPI" ]]; then         wget -O /tmp/openmpi-3.0.0-bin.tar.gz
      https://github.com/horovod/horovod/files/1596799/openmpi-3.0.0-bin.tar.gz &&             cd
      /usr/local && tar -zxf /tmp/openmpi-3.0.0-bin.tar.gz && ldconfig &&             echo
      "mpirun -allow-run-as-root -np 2 -H localhost:2 -bind-to none -map-by slot -mca
      mpi_abort_print_stack 1" > /mpirun_command;     elif [[ ${MPI_KIND} == "MLSL"
      ]]; then         wget -O /tmp/l_mlsl_2018.3.008.tgz https://github.com/intel/MLSL/releases/download/IntelMLSL-v2018.3-Preview/l_mlsl_2018.3.008.tgz
      &&             cd /tmp && tar -zxf /tmp/l_mlsl_2018.3.008.tgz &&             /tmp/l_mlsl_2018.3.008/install.sh
      -s -d /usr/local/mlsl &&             wget https://raw.githubusercontent.com/intel/MLSL/master/mpirt_2019/include/mpi.h
      -P /usr/local/mlsl/intel64/include &&             wget https://raw.githubusercontent.com/intel/MLSL/master/mpirt_2019/include/mpio.h
      -P /usr/local/mlsl/intel64/include &&             wget https://raw.githubusercontent.com/intel/MLSL/master/mpirt_2019/include/mpicxx.h
      -P /usr/local/mlsl/intel64/include &&             wget https://raw.githubusercontent.com/AlekseyMarchuk/MLSL/master/mpirt_2019/bin/mpicc
      -P /usr/local/mlsl/intel64/bin &&             chmod +x /usr/local/mlsl/intel64/bin/mpicc
      &&             wget https://raw.githubusercontent.com/AlekseyMarchuk/MLSL/master/mpirt_2019/bin/mpicxx
      -P /usr/local/mlsl/intel64/bin &&             chmod +x /usr/local/mlsl/intel64/bin/mpicxx
      &&             wget https://raw.githubusercontent.com/AlekseyMarchuk/MLSL/master/mpirt_2019/bin/mpigcc
      -P /usr/local/mlsl/intel64/bin &&             chmod +x /usr/local/mlsl/intel64/bin/mpigcc
      &&             wget https://raw.githubusercontent.com/AlekseyMarchuk/MLSL/master/mpirt_2019/bin/mpigxx
      -P /usr/local/mlsl/intel64/bin &&             chmod +x /usr/local/mlsl/intel64/bin/mpigxx
      &&             wget https://raw.githubusercontent.com/AlekseyMarchuk/MLSL/master/mpirt_2019/lib/libmpicxx.so
      -P /usr/local/mlsl/intel64/lib &&             chmod +x /usr/local/mlsl/intel64/lib/libmpicxx.so
      &&             echo ". /usr/local/mlsl/intel64/bin/mlslvars.sh \"thread\";                    echo
      \"mpirun is \$(which mpirun)\";                    echo \"this file is \$(cat
      /mpirun_command_script)\";                    echo \"LD_LIBRARY_PATH is \$(echo
      \$LD_LIBRARY_PATH)\";                    echo \"mlsl links with \$(ldd /usr/local/mlsl/intel64/lib/libmlsl.so)\";                    mpirun
      -np 2 -ppn 2 -hosts localhost \$@" > /mpirun_command_script &&             chmod
      +x /mpirun_command_script &&             echo "-L/usr/local/mlsl/intel64/lib/thread
      -lmpi -I/usr/local/mlsl/intel64/include" > /mpicc_mlsl &&             chmod
      +x /mpicc_mlsl &&             echo "/mpirun_command_script" > /mpirun_command;     else         apt-get
      install -y mpich &&             echo "mpirun -np 2" > /mpirun_command;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [[ ${MPI_KIND} == "MLSL" ]]; then         export I_MPI_ROOT=/usr/local/mlsl;         export
      MPICC=/usr/local/mlsl/intel64/bin/mpicc;     fi;     pip install mpi4py
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /horovod
  - CmdLine:
    - pip install ${TENSORFLOW_PACKAGE}
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ${NUMPY_PACKAGE}
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ${KERAS_PACKAGE} h5py scipy pandas
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ~/.keras
    Name: run
    PrependShell: true
  - CmdLine:
    - python -c "from keras.datasets import mnist; mnist.load_data()"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install future typing
    Name: run
    PrependShell: true
  - CmdLine:
    - if [[ ${PYTORCH_PACKAGE} == "torch-nightly" ]]; then         pip install torch_nightly
      -v -f https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html;     else         pip
      install ${PYTORCH_PACKAGE};     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ${TORCHVISION_PACKAGE} Pillow --no-deps
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install ${MXNET_PACKAGE}
    Name: run
    PrependShell: true
  - CmdLine:
    - if [[ ${MPI_KIND} == "MLSL" ]]; then       if [ -z "${LD_LIBRARY_PATH:-}" ];
      then           export LD_LIBRARY_PATH="";       fi;       if [ -z "${PYTHONPATH:-}"
      ]; then           export PYTHONPATH="";       fi;       source /usr/local/mlsl/intel64/bin/mlslvars.sh
      "thread";       export I_MPI_ROOT=/usr/local/mlsl;       export PIP_HOROVOD_MPICXX_SHOW=/usr/local/mlsl/intel64/bin/mpicxx;       echo
      "horovod python setup.py sdist, mpicxx is $(which mpicxx)";       cd /horovod
      && python setup.py sdist;     else       cd /horovod && python setup.py sdist;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [[ ${MPI_KIND} == "MLSL" ]]; then       if [ -z "${LD_LIBRARY_PATH:-}" ];
      then           export LD_LIBRARY_PATH="";       fi;       if [ -z "${PYTHONPATH:-}"
      ]; then           export PYTHONPATH="";       fi;       source /usr/local/mlsl/intel64/bin/mlslvars.sh
      "thread";       echo "pip install horovod, mpicxx is $(which mpicxx)";       pip
      install -v /horovod/dist/horovod-*.tar.gz;     else       pip install -v /horovod/dist/horovod-*.tar.gz;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [[ ${TENSORFLOW_PACKAGE} == "tensorflow==1.1.0" ]]; then         sed -i "s/from
      tensorflow import keras/from tensorflow.contrib import keras/" /horovod/examples/tensorflow_mnist.py;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/last_step=20000/last_step=100/" /horovod/examples/tensorflow_mnist.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/dataset.take(20000/dataset.take(100/" /horovod/examples/tensorflow_mnist_eager.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/dataset.take(10000/dataset.take(100/" /horovod/examples/tensorflow2_mnist.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/epochs = .*/epochs = 9/" /horovod/examples/keras_mnist_advanced.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/model.add(Conv2D(32, kernel_size=(3, 3),/model.add(Conv2D(1, kernel_size=(3,
      3),/" /horovod/examples/keras_mnist_advanced.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/model.add(Conv2D(64, (3, 3), activation='relu'))//" /horovod/examples/keras_mnist_advanced.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/epochs = .*/epochs = 9/" /horovod/examples/tensorflow2_keras_mnist.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/tf.keras.layers.Conv2D(32, \\[3, 3\\],/tf.keras.layers.Conv2D(1, [3,
      3],/" /horovod/examples/tensorflow2_keras_mnist.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/tf.keras.layers.Conv2D(64, \\[3, 3\\], activation='relu')),//" /horovod/examples/tensorflow2_keras_mnist.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/'--epochs', type=int, default=10,/'--epochs', type=int, default=2,/"
      /horovod/examples/pytorch_mnist.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/self.fc1 = nn.Linear(320, 50)/self.fc1 = nn.Linear(784, 50)/" /horovod/examples/pytorch_mnist.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/x = F.relu(F.max_pool2d(self.conv1(x), 2))//" /horovod/examples/pytorch_mnist.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/x = F.relu(F.max_pool2d(self.conv2_drop(self.conv2(x)), 2))//" /horovod/examples/pytorch_mnist.py
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/x = x.view(-1, 320)/x = x.view(-1, 784)/" /horovod/examples/pytorch_mnist.py
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:${UBUNTU_VERSION}
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:${UBUNTU_VERSION}
