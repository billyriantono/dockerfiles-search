{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --update-cache                              ca-certificates                                 cairo                                           libffi-dev                                      py-pip                                          py-twisted                                  \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip                       \u0026\u0026  pip install                                     carbon                                          gunicorn                                        whisper"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update-cache --virtual=build-deps         gcc                                             python-dev                                      musl-dev                                    \u0026\u0026 pip install                                      graphite-web                                \u0026\u0026 apk del build-deps                           \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /opt/graphite/conf/carbon.conf.example /opt/graphite/conf/carbon.conf     \u0026\u0026 cp /opt/graphite/conf/storage-schemas.conf.example                           /opt/graphite/conf/storage-schemas.conf                                   \u0026\u0026 cp /opt/graphite/webapp/graphite/local_settings.py.example                   /opt/graphite/webapp/graphite/local_settings.py                           \u0026\u0026 cp /opt/graphite/conf/graphite.wsgi.example                                  /opt/graphite/webapp/graphite/graphite_wsgi.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "PYTHONPATH=/opt/graphite/webapp django-admin.py                   collectstatic --settings=graphite.settings --no-input     \u0026\u0026 PYTHONPATH=/opt/graphite/webapp django-admin.py                makemigrations account events dashboard url_shortener         --settings=graphite.settings                              \u0026\u0026 PYTHONPATH=/opt/graphite/webapp django-admin.py                migrate --settings=graphite.settings"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "2003"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2004"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/graphite/static"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "post-setup-graphite-web.py",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}