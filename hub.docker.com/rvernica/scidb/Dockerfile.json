{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Key": "TERM",
          "Name": "arg",
          "Value": "linux"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Key": "SCIDB_NAME",
          "Name": "arg",
          "Value": "scidb"
        },
        {
          "Key": "SCIDB_LOG_LEVEL",
          "Name": "arg",
          "Value": "WARN"
        },
        {
          "Key": "SHIM_SHA1",
          "Name": "arg",
          "Value": "fbec1fc3aadcf3134cea0ceabb3fa32321474b23"
        },
        {
          "Env": [
            {
              "Key": "SCIDB_VER",
              "Value": "19.3"
            },
            {
              "Key": "SCIDB_NAME",
              "Value": "scidb"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCIDB_INSTALL_PATH",
              "Value": "/opt/scidb/$SCIDB_VER"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$SCIDB_INSTALL_PATH/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "SCIDB_SCRIPT_URL",
          "Name": "arg",
          "Value": "\"https://downloads.paradigm4.com/community/$SCIDB_VER/install-scidb-ce.sh\""
        },
        {
          "CmdLine": [
            "apt-get update                                              \u0026\u0026 apt-get install --assume-yes --no-install-recommends         apt-transport-https                                         ca-certificates                                             liblog4cxx10-dev                                            libprotobuf-dev                                             libssl-dev                                                  openssh-client                                              openssh-server                                              patch                                                       psmisc                                                      software-properties-common                                  wget                                                        zlib1g-dev                                              \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-verbose --output-document /install-scidb-ce.sh $SCIDB_SCRIPT_URL"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /install-scidb-ce.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update                                              \u0026\u0026 yes                                                      |  /install-scidb-ce.sh                                     \u0026\u0026 apt-get install --assume-yes --no-install-recommends         make                                                        scidb-$SCIDB_VER-dev                                        scidb-$SCIDB_VER-libboost1.54-dev                           scidb-$SCIDB_VER-libboost-system1.54-dev                \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'StrictHostKeyChecking no'                            \u003e\u003e /etc/ssh/ssh_config                                     \u0026\u0026 ssh-keygen -f /root/.ssh/id_rsa -q -N \"\"                \u0026\u0026 cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config.ini",
            "$SCIDB_INSTALL_PATH/etc/"
          ]
        },
        {
          "CmdLine": [
            "echo \"127.0.0.1:5432:$SCIDB_NAME:$SCIDB_NAME:`                                  date +%s | sha256sum | base64 | head -c 32`\"                    \u003e  /root/.pgpass                                                        \u0026\u0026 chmod go-r /root/.pgpass                                             \u0026\u0026 chmod a+r $SCIDB_INSTALL_PATH/etc/config.ini                         \u0026\u0026 service ssh start                                                    \u0026\u0026 service postgresql start                                             \u0026\u0026 until pg_isready; do sleep 1; done                                   \u0026\u0026 su --command=\"                                                               $SCIDB_INSTALL_PATH/bin/scidbctl.py init-syscat $SCIDB_NAME                 --db-password `                                                             cut --delimiter : --fields 5  /root/.pgpass`\"               postgres                                                            \u0026\u0026 $SCIDB_INSTALL_PATH/bin/scidbctl.py init-cluster --force                 $SCIDB_NAME                                                         \u0026\u0026 service postgresql stop                                              \u0026\u0026 sed --in-place                                                           s/log4j.rootLogger=INFO/log4j.rootLogger=$SCIDB_LOG_LEVEL/              $SCIDB_INSTALL_PATH/share/scidb/log4cxx.properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-verbose --output-document -                                   https://github.com/Paradigm4/shim/archive/$SHIM_SHA1.tar.gz     |  tar --extract --gzip --directory=/usr/local/src                  \u0026\u0026 cd /usr/local/src/shim-$SHIM_SHA1                                \u0026\u0026 make service                                                     \u0026\u0026 openssl req                                                          -new                                                                -newkey rsa:4096                                                    -days 3650                                                          -nodes                                                              -x509                                                               -subj \"/C=US/ST=MA/L=Waltham/O=Paradigm4/CN=$(hostname)\"            -keyout /var/lib/shim/ssl_cert.pem                              2\u003e /dev/null                                                        \u003e\u003e /var/lib/shim/ssl_cert.pem"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "1239",
            "8080",
            "8083"
          ]
        }
      ]
    }
  ]
}