{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends \t\ttzdata \t\tlocales \t\tapt-transport-https \t\tbzip2 \t\tca-certificates \t\tcurl \t\tpatch \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibgmp-dev \t\tlibssl-dev \t\tlibyaml-dev \t\tprocps \t\tzlib1g-dev \t\tlibncurses5-dev \t\tbuild-essential \t\tgit \t\tlibpq-dev \t\tlibffi-dev \t\tlibreadline6-dev \t\tgnupg \t\u0026\u0026 curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \t\u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list   \u0026\u0026 curl -sL https://deb.nodesource.com/setup_12.x | bash -   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y --no-install-recommends \t\tnodejs \t\tyarn \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "'en_US.UTF-8'"
            },
            {
              "Key": "LANGUAGE",
              "Value": "'en_US:en'"
            },
            {
              "Key": "LC_ALL",
              "Value": "'en_US.UTF-8'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBY_MAJOR",
              "Value": "2.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBY_VERSION",
              "Value": "2.5.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "buildDeps=' \t\tautoconf \t\tbison \t\tlibbz2-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibncurses-dev \t\tlibreadline-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\truby \t' \t\u0026\u0026 set -x \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends $buildDeps \t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 mkdir -p /usr/src/ruby \t\u0026\u0026 curl -SL \"http://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.bz2\" \t\t| tar -xjC /usr/src/ruby --strip-components=1 \t\u0026\u0026 cd /usr/src/ruby \t\u0026\u0026 autoconf \t\u0026\u0026 ./configure --disable-install-doc \t\u0026\u0026 make -j\"$(nproc)\" \t\u0026\u0026 make install \t\u0026\u0026 rm -r /usr/src/ruby \t\u0026\u0026 apt-get purge -y --auto-remove $buildDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'gem: --no-rdoc --no-ri' \u003e\u003e \"$HOME/.gemrc\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem update --system"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GEM_HOME",
              "Value": "/usr/local/bundle"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GEM_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUNDLER_VERSION",
              "Value": "2.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "gem install bundler --version \"$BUNDLER_VERSION\" \t\u0026\u0026 bundle config --global path \"$GEM_HOME\" \t\u0026\u0026 bundle config --global bin \"$GEM_HOME/bin\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BUNDLE_APP_CONFIG",
              "Value": "$GEM_HOME"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "irb"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}