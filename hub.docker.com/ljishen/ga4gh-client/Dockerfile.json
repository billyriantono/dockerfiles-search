{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "krallin/ubuntu-tini:trusty",
      "SourceCode": "FROM krallin/ubuntu-tini:trusty",
      "Platform": "",
      "From": {
        "Image": "krallin/ubuntu-tini:trusty"
      },
      "Commands": [
        {
          "Maintainer": "Jianshen Liu \u003cjliu120@ucsc.edu\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         wget         libffi-dev         zlib1g-dev         libxslt1-dev         libcurl4-openssl-dev         git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh     \u0026\u0026 /bin/bash Miniconda2-latest-Linux-x86_64.sh -b -p /opt/miniconda2     \u0026\u0026 rm Miniconda2-latest-Linux-x86_64.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/miniconda2/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "conda install --quiet --yes     jupyter     \u0026\u0026 conda clean -ay"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/ga4gh/server.git /srv/ga4gh/server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/srv/ga4gh/server"
        },
        {
          "CmdLine": [
            "pip install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home"
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "tini",
            "--",
            "jupyter",
            "notebook"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/"
          ]
        }
      ]
    }
  ]
}