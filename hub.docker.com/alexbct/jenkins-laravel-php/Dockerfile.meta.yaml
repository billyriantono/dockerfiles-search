MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Env:
    - Key: LANG
      Value: '"C.UTF-8"'
    - Key: JAVA_HOME
      Value: '"/usr/lib/jvm/java-8-openjdk-amd64"'
    - Key: JAVA_VERSION
      Value: '"8u91"'
    - Key: JAVA_DEBIAN_VERSION
      Value: '"8u91-b14-1~bpo8+1"'
    - Key: DEBIAN_FRONTEND
      Value: '"noninteractive"'
    - Key: CA_CERTIFICATES_JAVA_VERSION
      Value: '"20140324"'
    Name: env
  - CmdLine:
    - "echo 'deb http://mirrors.accretive-networks.net/debian/ jessie-backports main'
      >> /etc/apt/sources.list.d/jessie-backports.list \t&& echo 'deb http://mirrors.kernel.org/debian/
      jessie-backports main' >> /etc/apt/sources.list.d/jessie-backports.list \t&&
      apt-get clean && apt-get update \t&& apt-get install -y --force-yes --no-install-recommends
      --fix-missing \tsoftware-properties-common \tca-certificates \tcurl \twget \tbzr
      \tgit \tmercurial \topenssh-client \tsubversion \tprocps \tbzip2 \tzip \tunzip
      \txz-utils \tant \tphp5-cli \tphp-codecoverage \tphpunit \tphploc \tphp-codesniffer
      \tpdepend \tphpmd \tphpcpd \tphpdox \tbuild-essential \tfail2ban \tgcc \tlibmcrypt4
      \tlibpcre3-dev \tmake \tpython2.7 \tpython-pip \tsupervisor \tufw unattended-upgrades
      \twhois \tzsh \tphp5-gd \tphp5-curl \tphp5-mysql \tlibxrender1 \tpwgen \t&&
      { \techo '#!/bin/sh'; \techo 'set -e'; \techo; \techo 'dirname \"$(dirname \"$(readlink
      -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home \t&& set -x \t&& apt-get install
      -y \topenjdk-8-jdk=\"$JAVA_DEBIAN_VERSION\" \tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\"
      \t&& [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ] \t&& /var/lib/dpkg/info/ca-certificates-java.postinst
      configure"
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_HOME
      Value: '"/var/jenkins_home"'
    - Key: JENKINS_SLAVE_AGENT_PORT
      Value: '"50000"'
    - Key: APP_DIRECTORY
      Value: '"/home/forge"'
    - Key: TINI_SHA
      Value: '"066ad710107dc7ee05d3aa6e4974f01dc98f3888"'
    - Key: JENKINS_VERSION
      Value: '"${JENKINS_VERSION:-1.651.3}"'
    - Key: JENKINS_SHA
      Value: '"${JENKINS_SHA:-564e49fbd180d077a22a8c7bb5b8d4d58d2a18ce}"'
    - Key: JENKINS_UC
      Value: '"https://updates.jenkins.io"'
    - Key: COPY_REFERENCE_FILE_LOG
      Value: '"$JENKINS_HOME/copy_reference_file.log"'
    - Key: user
      Value: jenkins
    - Key: group
      Value: jenkins
    - Key: uid
      Value: "1000"
    - Key: gid
      Value: "1000"
    Name: env
  - CmdLine:
    - "groupadd -g ${gid} ${group} \t&& useradd -d \"$JENKINS_HOME\" -u ${uid} -g
      ${gid} -m -s /bin/bash ${user} \t&& mkdir -p /usr/share/jenkins/ref/init.groovy.d
      \t&& [ -f \"$APP_DIRECTORY\" ]  && echo \"directory already exists\"  || mkdir
      -p \"$APP_DIRECTORY\" \t&& curl -fsSL https://github.com/krallin/tini/releases/download/v0.5.0/tini-static
      -o /bin/tini && chmod +x /bin/tini \t&& echo \"$TINI_SHA  /bin/tini\" | sha1sum
      -c - \t&& curl -fsSL http://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war
      -o /usr/share/jenkins/jenkins.war \t&& echo \"$JENKINS_SHA  /usr/share/jenkins/jenkins.war\"
      | sha1sum -c -"
    Name: run
    PrependShell: true
  - Name: user
    User: ${user}
  - CmdLine:
    - '[ -f $JENKINS_HOME/.ssh/id_rsa ] && echo "ssh key already exists" || ssh-keygen
      -b 2048 -t rsa -f $JENKINS_HOME/.ssh/id_rsa -q -N ""'
    Name: run
    PrependShell: true
  - CmdLine:
    - touch $JENKINS_HOME/.ssh/known_hosts
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keyscan -T 60 -H github.com >> $JENKINS_HOME/.ssh/known_hosts
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keyscan -T 60 -H bitbucket.org >> $JENKINS_HOME/.ssh/known_hosts
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/jenkins_home
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugins.sh
    - /usr/local/bin/plugins.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install-plugins.sh
    - /usr/local/bin/install-plugins.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugins.txt
    - /usr/share/jenkins/plugins.txt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins.sh
    - /usr/local/bin/jenkins.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - script.sh
    - /usr/local/bin/script.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.groovy
    - /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy
  - CmdLine:
    - "chmod +x /usr/local/bin/jenkins.sh && chmod +x /usr/local/bin/plugins.sh &&
      chmod +x /usr/local/bin/install-plugins.sh && chmod +x /usr/local/bin/script.sh
      \t&& wget -O /usr/local/bin/composer https://getcomposer.org/composer.phar &&
      chmod +x /usr/local/bin/composer \t&& echo \"xdebug.max_nesting_level = 200\"
      >> /etc/php5/mods-available/xdebug.ini \t&& chown -R ${user} \"$JENKINS_HOME\"
      /usr/share/jenkins/ref \"$APP_DIRECTORY\""
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "50000"
    - "8080"
  - Env:
    - Key: MYSQL_MAJOR
      Value: '"5.7"'
    - Key: MYSQL_VERSION
      Value: '"5.7.13-1debian8"'
    Name: env
  - CmdLine:
    - "echo \"deb http://repo.mysql.com/apt/debian/ jessie mysql-${MYSQL_MAJOR}\"
      > /etc/apt/sources.list.d/mysql.list \t&& { \t\techo mysql-community-server
      mysql-community-server/data-dir select ''; \t\techo mysql-community-server mysql-community-server/root-pass
      password ''; \t\techo mysql-community-server mysql-community-server/re-root-pass
      password ''; \t\techo mysql-community-server mysql-community-server/remove-test-db
      select false; \t} | debconf-set-selections \t&& apt-key adv --keyserver ha.pool.sks-keyservers.net
      --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5 \t&& apt-get update &&
      apt-get install -y mysql-server=\"${MYSQL_VERSION}\" \t&& rm -rf /var/lib/mysql
      && mkdir -p /var/lib/mysql /var/run/mysqld \t&& chown -RL mysql:mysql /var/lib/mysql
      /var/run/mysqld \t&& chmod 777 /var/run/mysqld \t&& sed -Ei 's/^(bind-address|log)/#&/'
      /etc/mysql/my.cnf \t&& echo 'skip-host-cache\\nskip-name-resolve' | awk '{ print
      } $1 == \"[mysqld]\" && c == 0 { c = 1; system(\"cat\") }' /etc/mysql/my.cnf
      > /tmp/my.cnf \t&& mv /tmp/my.cnf /etc/mysql/my.cnf && echo \"default_password_lifetime
      = 0\" >> /etc/mysql/my.cnf && service mysql restart     && PASS=$(pwgen 12 1)
      \    && echo \"=> Creating MySQL user ${user} with $PASS password\"     && echo
      \"GRANT ALL ON *.* TO '${user}'@'%' IDENTIFIED BY '$PASS' WITH GRANT OPTION;
      FLUSH PRIVILEGES\" | mysql     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/mysql
  - Name: expose
    Ports:
    - "3306"
  - Name: user
    User: ${user}
  - CmdLine:
    - /bin/tini
    - --
    - /usr/local/bin/jenkins.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
