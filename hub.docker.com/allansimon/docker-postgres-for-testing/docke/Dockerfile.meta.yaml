MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Thomas Fr√∂ssman <thomasf@jossystem.se>
    Name: maintainer
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends           autogen           automake           build-essential           ca-certificates           clang           cpio           curl           gcc-mingw-w64           gcc-multilib           git           libgtk-3-dev           libnotify-dev           libssl-dev           libtool           libxml2-dev           libappindicator3-dev           llvm-dev           make           mercurial           patch           pkg-config           unzip           uuid-dev           wget           xz-utils           apt-transport-https           lsb-release           ssh           icnsutils         ;
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_4.x | bash - && apt-get install -y
      nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/go-bootstrap && curl -sSL https://storage.googleapis.com/golang/go1.7.1.linux-amd64.tar.gz
      | tar -C /tmp/go-bootstrap -xz
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://storage.googleapis.com/golang/go1.7.1.src.tar.gz | tar -C
      /usr/local -xz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/go/src && GOROOT_BOOTSTRAP=/tmp/go-bootstrap/go ./make.bash --no-clean
      2>&1
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/go-bootstrap && mkdir -p /go/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - for GOOS in linux darwin windows; do for GOARCH in amd64 386; do export GOOS;
      export GOARCH; echo "building $GOOS-$GOARCH"; go install std; done; done
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g webpack
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g         eslint         babel-eslint         eslint-plugin-react         coffeelint         jsxhint
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
