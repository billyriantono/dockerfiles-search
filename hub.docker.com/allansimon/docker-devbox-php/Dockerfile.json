{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage",
      "SourceCode": "FROM phusion/baseimage",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SUDOFILE",
              "Value": "/etc/sudoers"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "change_user_uid.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "inventory_file",
            "/etc/ansible/hosts"
          ]
        },
        {
          "CmdLine": [
            "rm -f /etc/service/sshd/down \u0026\u0026     echo 'PermitEmptyPasswords yes' \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     echo 'PasswordAuthentication yes' \u003e\u003e /etc/ssh/sshd_config \u0026\u0026     useradd         --shell /bin/bash         --create-home --base-dir /home         --user-group         --groups sudo,ssh         --password ''         vagrant \u0026\u0026     mkdir -p /home/vagrant/.ssh \u0026\u0026     chown -R vagrant:vagrant /home/vagrant/.ssh \u0026\u0026     apt-get -y update \u0026\u0026     apt-get -y upgrade \u0026\u0026     apt-get -y install         sudo         libffi-dev         libyaml-dev         libssl-dev         libpython-dev         python         python-setuptools           python-pip         aptitude     \u0026\u0026     chmod u+w ${SUDOFILE} \u0026\u0026     echo '%sudo   ALL=(ALL:ALL) NOPASSWD: ALL' \u003e\u003e ${SUDOFILE} \u0026\u0026     chmod u-w ${SUDOFILE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php -y \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y         unzip         php7.2-cli         php7.2-dev         php7.2-common         php-pear         php7.2-zip         php7.2-xml         php7.2-pgsql         php7.2-curl         php7.2-imagick         php7.2-intl         php7.2-sqlite3         php7.2-bcmath         php7.2-soap         php7.2-mysql         php7.2-gd         php7.2-xsl         php7.2-mbstring     \u0026\u0026     apt-get clean \u0026\u0026     pip install --upgrade ansible setuptools \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     touch -t 197001010000 /var/lib/apt/periodic/update-success-stamp \u0026\u0026     sed -i '/tty/!s/mesg n/true/' /root/.profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "provisioning/",
            "/provisioning"
          ]
        },
        {
          "CmdLine": [
            "ansible-playbook provisioning/site.yml -c local \u0026\u0026     chown -R vagrant /home/vagrant"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \u0026\u0026     touch -t 197001010000 /var/lib/apt/periodic/update-success-stamp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/change_user_uid.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/sbin/my_init"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}