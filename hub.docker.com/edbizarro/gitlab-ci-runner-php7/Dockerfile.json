{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Maintainer": "Eduardo Bizarro \u003cedbizarro@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "\"/root\""
            },
            {
              "Key": "PATH",
              "Value": "\"~/.yarn/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y     software-properties-common     python-software-properties     build-essential     curl     git     unzip     mcrypt     wget     openssl     autoconf     g++     make     --no-install-recommends \u0026\u0026 rm -r /var/lib/apt/lists/*     \u0026\u0026 apt-get --purge autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/openssl/include/openssl/ \u0026\u0026     ln -s /usr/include/openssl/evp.h /usr/local/openssl/include/openssl/evp.h \u0026\u0026     mkdir -p /usr/local/openssl/lib/ \u0026\u0026     ln -s /usr/lib/x86_64-linux-gnu/libssl.a /usr/local/openssl/lib/libssl.a \u0026\u0026     ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/local/openssl/lib/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_7.x | bash - \u0026\u0026     apt-get install nodejs -qq \u0026\u0026     npm install -g gulp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o- -L https://yarnpkg.com/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:ondrej/php \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y -qq     php-pear     php7.0-dev     php7.0-mcrypt     php7.0-zip     php7.0-xml     php7.0-mbstring     php7.0-curl     php7.0-json     php7.0-mysql     php7.0-tokenizer     php7.0-cli     php7.0-imap     php7.0-gd     --no-install-recommends \u0026\u0026 rm -r /var/lib/apt/lists/* \u0026\u0026     apt-get --purge autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mongodb \u0026\u0026     echo \"extension=mongodb.so\" \u003e /etc/php/7.0/cli/conf.d/20-mongodb.ini \u0026\u0026     echo \"extension=mongodb.so\" \u003e /etc/php/7.0/mods-available/mongodb.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-check-certificate https://xdebug.org/files/xdebug-2.5.0.tgz \u0026\u0026     tar -xzf xdebug-2.5.0.tgz \u0026\u0026     rm xdebug-2.5.0.tgz \u0026\u0026     cd xdebug-2.5.0 \u0026\u0026     phpize \u0026\u0026     ./configure --enable-xdebug \u0026\u0026     make \u0026\u0026     cp modules/xdebug.so /usr/lib/. \u0026\u0026     echo 'zend_extension=\"/usr/lib/xdebug.so\"' \u003e /etc/php/7.0/cli/conf.d/20-xdebug.ini \u0026\u0026     echo 'xdebug.remote_enable=1' \u003e\u003e /etc/php/7.0/cli/conf.d/20-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"date.timezone=America/Sao_Paulo\" \u003e /etc/php/7.0/cli/conf.d/date_timezone.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/composer"
          ]
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/root/composer"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer selfupdate \u0026\u0026     composer global require hirak/prestissimo --prefer-dist --no-interaction \u0026\u0026     rm -rf /root/.composer/cache/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get remove --purge autoconf g++ make -y \u0026\u0026     apt-get autoclean -y \u0026\u0026     apt-get --purge autoremove -y \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}