{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"peter@pouliot.net\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Dockerfile",
            "/Dockerfile"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "VERSION",
            "."
          ]
        },
        {
          "Env": [
            {
              "Key": "GHE_VERSION",
              "Value": "0.0.6"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache     git wget curl rsync openssh     bash openssh-server vim     expect screen byobu     sudo ruby ruby-dev g++     gcc make bison bzip2 ca-certificates     libffi-dev gdbm-dev  openssl-dev yaml-dev     python3 python3-dev jq build-base     openjdk8-jre libbz2 sqlite-dev procps zlib-dev     ruby-irb ruby-rake ruby-io-console     ruby-bigdecimal ruby-json ruby-bundler     libstdc++ tzdata bash ca-certificates     linux-headers icu-dev libxml2-dev libxslt-dev     \u0026\u0026  echo 'gem: --no-document' \u003e /etc/gemrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s `which python3` /usr/local/bin/python     \u0026\u0026 ln -s `which pip3` /usr/local/bin/pip     \u0026\u0026 pip3 install --upgrade pip     \u0026\u0026 pip3 install argparse setuptools future keyrings.alt Pygments stashy python-gitlab bitbucket-cli github2gitlab     \u0026\u0026 pip3 install git+https://github.com/ppouliot/ghe.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"*** Installing Gems required for GH-Pages/jekyll and GH-Wiki/gollum ***\"      \u0026\u0026 gem install bundler github-pages html-proofer jekyll jekyll-reload jekyll-mentions jekyll-coffeescript jekyll-sass-converter     jekyll-commonmark jekyll-paginate jekyll-compose jekyll-assets RedCloth jemoji jekyll-redirect-from kramdown rdiscount sinatra     gollum github-markdown redcarpet org-ruby rdoc rake bitbucket_rest_api webrick sassc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"*** Enabling Byobu for Startup of GHE-Helper Services ***\"     byobu-enable     byobu-enable-prompt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "byobu-ctrl-a screen     byobu-janitor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "byobu/windows.tmux",
            "/root/.byobu/windows.tmux"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "byobu/.tmux.conf",
            "/root/.byobu/.tmux.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "byobu/statusrc",
            "/usr/share/byobu/status/statusrc"
          ]
        },
        {
          "CmdLine": [
            "echo \"*** Installing GitHub Backup Utils to /usr/github-backup-utils ***\"     \u0026\u0026 git clone -b stable https://github.com/github/backup-utils /usr/github-backup-utils     \u0026\u0026 mkdir -p /etc/github-backup-utils/     \u0026\u0026 echo \"*** Installing GitHub Platform Samples to /opt/github-platform-samples ***\"     \u0026\u0026 git clone https://github.com/github/platform-samples github-platform-samples     \u0026\u0026 sed -i 's/PATH=/PATH=\\/usr\\/github-backup-utils\\/bin\\:/g' /etc/profile     \u0026\u0026 sed -i 's/\\\\h/\\\\u\\@\\\\h/g' /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/github-backup-utils/backup.config",
            "/etc/github-backup-utils/"
          ]
        },
        {
          "CmdLine": [
            "adduser -D gh-pages -h /home/gh-pages -s /bin/bash     \u0026\u0026 echo \"gh-pages:gh-pages\" | chpasswd     \u0026\u0026 echo \"gh-pages\tALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers      \u0026\u0026 adduser -D gh-backup -h /home/gh-backup -s /bin/bash     \u0026\u0026 echo \"gh-backup:gh-backup\" | chpasswd     \u0026\u0026 echo \"gh-backup\tALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/gh-pages"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "gh-pages"
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "CmdLine": [
            "echo \"*** Creating GH/GHE wiki/pages src directories ***\"     \u0026\u0026 mkdir -p wiki pages"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/gh-backup"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "gh-backup"
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "CmdLine": [
            "echo \"*** Installing GitHub Backup Utils ***\"     \u0026\u0026 mkdir bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/usr/github-backup-utils/bin:${PATH}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Dockerfile",
            "/Dockerfile"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc/motd",
            "/etc/motd"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/*",
            "/usr/local/bin/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "CmdLine": [
            "byobu"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "4000",
            "4567"
          ]
        }
      ]
    }
  ]
}