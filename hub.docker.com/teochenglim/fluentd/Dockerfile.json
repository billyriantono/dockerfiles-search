{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "fluent/fluentd",
      "SourceCode": "FROM fluent/fluentd",
      "Platform": "",
      "From": {
        "Image": "fluent/fluentd"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apk add --no-cache libmaxminddb-dev geoip geoip-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --update --virtual .build-deps         sudo build-base ruby-dev         \u0026\u0026 sudo gem install fluent-plugin-geoip                             fluent-plugin-elasticsearch                             fluent-plugin-kubernetes_metadata_filter                             fluent-plugin-remote-syslog                             fluent-plugin-s3                             fluent-plugin-prometheus                             fluent-plugin-kafka                             fluent-plugin-copy_ex                             fluent-plugin-forest         \u0026\u0026 sudo gem sources --clear-all         \u0026\u0026 apk del .build-deps         \u0026\u0026 rm -rf /tmp/* /var/tmp/* /usr/lib/ruby/gems/*/cache/*.gem"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "fluent.conf",
            "/fluentd/etc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/bin/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /fluentd/etc/conf.d/ /fluentd/buffer/ /fluentd/log     \u0026 addgroup -S fluent -g 1000 \u0026\u0026 adduser -S fluent -G fluent -u 1000"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -Rf fluent. /fluentd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "FLUENTD_CONF",
              "Value": "\"fluent.conf\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_PRELOAD",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "24224",
            "5140"
          ]
        },
        {
          "Name": "user",
          "User": "fluent"
        },
        {
          "CmdLine": [
            "fluentd"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}