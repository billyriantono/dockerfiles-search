MetaArgs: null
Stages:
- BaseName: bde2020/spark-master:2.3.0-hadoop2.7
  Commands:
  - CmdLine:
    - apt-get update &&     apt-get install -y apt-transport-https &&     apt-get
      install -y build-essential libbz2-dev libssl-dev libreadline-dev libsqlite3-dev
      tk-dev &&     apt-get install -y libpng-dev libfreetype6-dev python3-dev zip
      p7zip &&     apt-get install -y libgoogle-glog-dev libgflags-dev liblapack-dev
      &&     apt-get install -y nano vim &&     apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON3_VERSION
      Value: 3.6.6
    Name: env
  - Env:
    - Key: PYTHON2_VERSION
      Value: 2.7.15
    Name: env
  - CmdLine:
    - curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
      | bash &&     export PATH="/root/.pyenv/bin:$PATH" &&     pyenv update &&     echo
      'eval "$(pyenv init -)"' >> /root/.profile &&     echo 'eval "$(pyenv virtualenv-init
      -)"' >> /root/.profile &&     echo 'eval "$(pyenv init -)"' >> /root/.bashrc
      &&     echo 'eval "$(pyenv virtualenv-init -)"' >> /root/.bashrc &&     pyenv
      install ${PYTHON3_VERSION} &&     pyenv install ${PYTHON2_VERSION} &&     pyenv
      global ${PYTHON3_VERSION}
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/root/.pyenv/bin:${PATH}"'
    Name: env
  - Env:
    - Key: SPARK_HOME
      Value: /spark
    Name: env
  - Env:
    - Key: PATH
      Value: '"${SPARK_HOME}/bin:${PATH}"'
    Name: env
  - Env:
    - Key: PY4J_VERSION
      Value: 0.10.6
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: '"${SPARK_HOME}/python/lib/py4j-${PY4J_VERSION}-src.zip:${SPARK_HOME}/python/lib/pyspark.zip"'
    Name: env
  - CmdLine:
    - . /root/.bashrc &&     pip install jupyter&&     pip install --upgrade jupyter-client
    Name: run
    PrependShell: true
  - Env:
    - Key: SCALA_VERSION
      Value: 2.11.12
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y libjansi-java &&     wget https://downloads.lightbend.com/scala/${SCALA_VERSION}/scala-${SCALA_VERSION}.deb
      -O /tmp/scala.deb && dpkg -i /tmp/scala.deb && rm -rf /tmp/scala.deb &&     apt-get
      clean
    Name: run
    PrependShell: true
  - Env:
    - Key: NVM_DIR
      Value: /usr/local/nvm
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 10.6.0
    Name: env
  - CmdLine:
    - mkdir -p $NVM_DIR &&     curl https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh
      | bash     && . $NVM_DIR/nvm.sh     && nvm install $NODE_VERSION     && nvm
      alias default $NODE_VERSION     && nvm use default
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_PATH
      Value: '"${NVM_DIR}/v${NODE_VERSION}/lib/node_modules"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"${NVM_DIR}/v${NODE_VERSION}/bin:${PATH}"'
    Name: env
  - CmdLine:
    - mkdir -p /usr/lib &&     cd /usr/lib &&     git clone https://github.com/linkedin/photon-ml.git
      &&     cd photon-ml &&     sed -i -E s/"defaultScalaVersion '.*'"/"defaultScalaVersion
      '${SCALA_VERSION}'"/ settings.gradle &&     sed -i -E s/"targetScalaVersions
      '.*'"/"targetScalaVersions '${SCALA_VERSION}'"/ settings.gradle &&     ./gradlew
      assemble
    Name: run
    PrependShell: true
  - Env:
    - Key: PHOTONML_DIR
      Value: /usr/lib/photon-ml
    Name: env
  - Env:
    - Key: MAHOUT_VERSION
      Value: 0.13.0
    Name: env
  - CmdLine:
    - mkdir -p /usr/lib &&     wget -O /usr/lib/mahout.tar.gz http://www-eu.apache.org/dist/mahout/${MAHOUT_VERSION}/apache-mahout-distribution-${MAHOUT_VERSION}.tar.gz
      &&     cd /usr/lib/ &&     tar -zxvf /usr/lib/mahout.tar.gz &&     mv apache-mahout-distribution-${MAHOUT_VERSION}
      /usr/lib/mahout
    Name: run
    PrependShell: true
  - Env:
    - Key: MAHOUT_HOME
      Value: /usr/lib/mahout
    Name: env
  - Env:
    - Key: MAHOUT_LOCAL
      Value: "true"
    Name: env
  - Env:
    - Key: PATH
      Value: '"${MAHOUT_HOME}/bin:${PATH}"'
    Name: env
  - CmdLine:
    - . /root/.bashrc &&     pip install numpy scipy cython requests &&     pip install
      sklearn lightfm scikit-surprise &&     pip install nltk tensorflow &&     pip
      install http://download.pytorch.org/whl/cpu/torch-0.4.0-cp36-cp36m-linux_x86_64.whl
      &&     pip install torchvision &&     pip install msgpack msgpack-numpy dvc
      datmo &&     pip install keras gensim nimfa tensorrec avro &&     cd /tmp &&
      git clone https://github.com/maciejkula/spotlight.git && cd /tmp/spotlight &&     python
      setup.py install && cd /tmp && rm -rf /tmp/spotlight &&     npm install -g ger
      hapiger
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /work
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /work
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: bde2020/spark-master:2.3.0-hadoop2.7
  Name: ""
  Platform: ""
  SourceCode: FROM bde2020/spark-master:2.3.0-hadoop2.7
