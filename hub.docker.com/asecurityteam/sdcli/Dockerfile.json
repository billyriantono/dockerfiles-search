{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "golang:1.12.4",
      "SourceCode": "FROM golang:1.12.4 AS BASE",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "golang:1.12.4"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "APT_MAKE_VERSION",
              "Value": "4.1-9.1"
            },
            {
              "Key": "APT_GCC_VERSION",
              "Value": "4:6.3.0-4"
            },
            {
              "Key": "APT_GIT_VERSION",
              "Value": "1:2.11.0-3+deb9u4"
            },
            {
              "Key": "GOLANGCI_VERSION",
              "Value": "v1.16.0"
            },
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        }
      ]
    },
    {
      "Name": "system_deps",
      "BaseName": "BASE",
      "SourceCode": "FROM BASE AS SYSTEM_DEPS",
      "Platform": "",
      "As": "system_deps",
      "From": {
        "Image": "BASE"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y     apt-transport-https     ca-certificates     curl     make=${APT_MAKE_VERSION}     gcc=${APT_GCC_VERSION}     git=${APT_GIT_VERSION}     bc     jq \u0026\u0026     apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "go_deps",
      "BaseName": "SYSTEM_DEPS",
      "SourceCode": "FROM SYSTEM_DEPS AS GO_DEPS",
      "Platform": "",
      "As": "go_deps",
      "From": {
        "Image": "SYSTEM_DEPS"
      },
      "Commands": [
        {
          "CmdLine": [
            "curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get github.com/axw/gocov/... \u0026\u0026     go install github.com/axw/gocov/gocov \u0026\u0026     go get github.com/AlekSi/gocov-xml \u0026\u0026     go install github.com/AlekSi/gocov-xml \u0026\u0026     go get github.com/wadey/gocovmerge \u0026\u0026     go install github.com/wadey/gocovmerge"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b ${GOPATH}/bin ${GOLANGCI_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "js_deps",
      "BaseName": "GO_DEPS",
      "SourceCode": "FROM GO_DEPS AS JS_DEPS",
      "Platform": "",
      "As": "js_deps",
      "From": {
        "Image": "GO_DEPS"
      },
      "Commands": [
        {
          "CmdLine": [
            "curl -sfL https://deb.nodesource.com/setup_11.x | bash - \u0026\u0026     apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "python_deps",
      "BaseName": "JS_DEPS",
      "SourceCode": "FROM JS_DEPS AS PYTHON_DEPS",
      "Platform": "",
      "As": "python_deps",
      "From": {
        "Image": "JS_DEPS"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get install -y locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://bootstrap.pypa.io/get-pip.py | python3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install -U setuptools cookiecutter"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/^# *\\(en_US.UTF-8\\)/\\1/' /etc/locale.gen     \u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install -U pylint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install coverage"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install pytest"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install pytest-cov"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install pipenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install oyaml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install python-slugify"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --upgrade git+git://github.com/asecurityteam/ccextender"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install yamllint"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "ssh_deps",
      "BaseName": "PYTHON_DEPS",
      "SourceCode": "FROM PYTHON_DEPS AS SSH_DEPS",
      "Platform": "",
      "As": "ssh_deps",
      "From": {
        "Image": "PYTHON_DEPS"
      },
      "Commands": [
        {
          "CmdLine": [
            "mkdir -p /home/sdcli/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==' \u003e\u003e /home/sdcli/.ssh/known_hosts"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "user_deps",
      "BaseName": "SSH_DEPS",
      "SourceCode": "FROM SSH_DEPS AS USER_DEPS",
      "Platform": "",
      "As": "user_deps",
      "From": {
        "Image": "SSH_DEPS"
      },
      "Commands": [
        {
          "CmdLine": [
            "groupadd -r sdcli -g 1000     \u0026\u0026 useradd --no-log-init -r -g sdcli -u 1000 sdcli     \u0026\u0026 chown -R sdcli:sdcli /opt     \u0026\u0026 chown -R sdcli:sdcli /go     \u0026\u0026 chown -R sdcli:sdcli /home/sdcli     \u0026\u0026 chown -R sdcli:sdcli /usr/local"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "USER_DEPS",
      "SourceCode": "FROM USER_DEPS",
      "Platform": "",
      "From": {
        "Image": "USER_DEPS"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "sdcli"
        },
        {
          "CmdLine": [
            "mkdir -p /home/sdcli/oss-templates/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./oss-templates/",
            "/home/sdcli/oss-templates/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./commands/*",
            "/usr/bin/"
          ]
        },
        {
          "CmdLine": [
            "sdcli"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}