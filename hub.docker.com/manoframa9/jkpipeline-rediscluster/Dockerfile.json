{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "Hieu Vo \u003cvoquochieu1908@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "io.k8s.description",
              "Value": "\"3 Node Redis Cluster\""
            },
            {
              "Key": "io.k8s.display-name",
              "Value": "\"Redis Cluster\""
            },
            {
              "Key": "io.openshift.expose-services",
              "Value": "\"6379:tcp\""
            },
            {
              "Key": "io.openshift.tags",
              "Value": "\"redis-cluster\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "groupadd -r redis \u0026\u0026 useradd -r -g redis -d /home/redis -m redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yum update -y \u0026\u0026 yum install -y make gcc nmap-ncat libc6-dev tcl wget \u0026\u0026 yum clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/ruby-2.2.3-1.el7.centos.x86_64.rpm/",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "yum -y localinstall /tmp/ruby-2.2.3-1.el7.centos.x86_64.rpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src/"
        },
        {
          "CmdLine": [
            "curl -o redis-stable.tar.gz http://download.redis.io/redis-stable.tar.gz \u0026\u0026 tar xzf redis-stable.tar.gz \u0026\u0026 cd redis-stable \u0026\u0026 make MALLOC=libc \u0026\u0026 gem install redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "for file in $(grep -r --exclude=*.h --exclude=*.o /usr/local/src/redis-stable/src | awk {'print $3'}); do cp $file /usr/local/bin; done \u0026\u0026 cp /usr/local/src/redis-stable/src/redis-trib.rb /usr/local/bin \u0026\u0026 cp -r /usr/local/src/redis-stable/utils /usr/local/bin \u0026\u0026 rm -rf /usr/local/src/redis*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/redis.conf",
            "/usr/local/etc/redis.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/*.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/redis-trib.rb",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "mkdir /data \u0026\u0026 chown redis:redis /data \u0026\u0026 chown -R redis:redis /usr/local/bin/ \u0026\u0026 chown -R redis:redis /usr/local/etc/ \u0026\u0026 chown -R redis:redis /usr/local/src \u0026\u0026 chmod -R 777 /usr/local/etc \u0026\u0026 chmod +x /usr/local/bin/cluster-init.sh /usr/local/bin/redis-trib.rb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/etc"
        },
        {
          "Name": "user",
          "User": "redis"
        },
        {
          "Name": "expose",
          "Ports": [
            "16379",
            "6379"
          ]
        },
        {
          "Key": "BUILD_TIME",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "echo $BUILD_TIME \u003e imagebuildtime.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/startpod.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}