MetaArgs: null
Stages:
- As: builder
  BaseName: golang:1.10.3-alpine
  Commands:
  - CmdLine:
    - apk --no-cache add     libc-dev  && rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Key: SRC_DIR
    Name: arg
    Value: /go/src/gopkg.in/launchdarkly/ld-relay.v5
  - CmdLine:
    - mkdir -p $SRC_DIR
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $SRC_DIR
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - Env:
    - Key: GOOS
      Value: linux
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: LD_VERSION
      Value: 5.3.1
    Name: env
  - CmdLine:
    - go build -a -o ldr -ldflags="-X main.VERSION=$LD_VERSION" ./cmd/ld-relay
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10.3-alpine
  Name: builder
  Platform: ""
  SourceCode: FROM golang:1.10.3-alpine as builder
- BaseName: alpine:3.7
  Commands:
  - CmdLine:
    - apk add --no-cache     curl     ca-certificates  && update-ca-certificates  &&
      rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Key: SRC_DIR
    Name: arg
    Value: /go/src/gopkg.in/launchdarkly/ld-relay.v5
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - ${SRC_DIR}/ldr
    - /usr/bin/ldr
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/bin/
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "8030"
  - CmdLine:
    - ldr
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
