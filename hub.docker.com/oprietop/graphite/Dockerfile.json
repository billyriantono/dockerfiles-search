{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --update-cache             ca-certificates                libffi-dev                     py-cairo                       py-pip                         py-twisted                     py-psycopg2                \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip                                                   \u0026\u0026  pip install                                                                 carbon                                                                      django                                                                      django-tagging                                                              gunicorn                                                                    pyparsing                                                                   pytz                                                                        whisper                                                                 \u0026\u0026 pip install https://github.com/graphite-project/ceres/tarball/master"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update-cache --virtual=build-deps                                            gcc                                                                                python-dev                                                                         musl-dev                                                                       \u0026\u0026 pip install scandir                                                             \u0026\u0026 pip install https://github.com/graphite-project/graphite-web/tarball/master     \u0026\u0026 apk del build-deps                                                              \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /opt/graphite/conf/carbon.conf.example /opt/graphite/conf/carbon.conf     \u0026\u0026 cp /opt/graphite/conf/storage-schemas.conf.example                           /opt/graphite/conf/storage-schemas.conf                                   \u0026\u0026 cp /opt/graphite/webapp/graphite/local_settings.py.example                   /opt/graphite/webapp/graphite/local_settings.py                           \u0026\u0026 cp /opt/graphite/conf/graphite.wsgi.example                                  /opt/graphite/webapp/graphite/graphite_wsgi.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "PYTHONPATH=/opt/graphite/webapp django-admin.py                   collectstatic --settings=graphite.settings --no-input     \u0026\u0026 PYTHONPATH=/opt/graphite/webapp django-admin.py                makemigrations account events dashboard url_shortener         --settings=graphite.settings                              \u0026\u0026 PYTHONPATH=/opt/graphite/webapp django-admin.py                migrate --settings=graphite.settings"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "2003"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2004"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/graphite/static"
          ]
        },
        {
          "CmdLine": [
            "/opt/graphite/bin/carbon-cache.py start                                         \u0026\u0026 PYTHONPATH=/opt/graphite/whisper:/opt/graphite/webapp/graphite                   /usr/bin/gunicorn graphite_wsgi:application --workers 4 --bind :8080"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}