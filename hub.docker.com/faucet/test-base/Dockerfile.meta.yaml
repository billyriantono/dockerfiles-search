MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: OVSV
      Value: '"v2.12.0"'
    Name: env
  - Env:
    - Key: MININETV
      Value: '"2.3.0d6"'
    Name: env
  - Env:
    - Key: AG
      Value: '"apt-get -qqy --no-install-recommends -o=Dpkg::Use-Pty=0"'
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: SETUPQ
      Value: '"setup.py -q easy_install --always-unzip ."'
    Name: env
  - Env:
    - Key: BUILDDIR
      Value: '"/var/tmp/build"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - setup.sh
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - setupproxy.sh
    - /
  - CmdLine:
    - /setupproxy.sh &&   sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list
      &&   $AG update &&   $AG install     apt-transport-https     bc     bridge-utils     build-essential     ca-certificates     curl     devscripts     dsniff     ebtables     equivs     freeradius     fping     git     gnupg-agent     iperf     iputils-ping     iproute2     isc-dhcp-client     ladvd     locales     libpython3-dev     librsvg2-bin     libyaml-dev     lsof     netcat     ndisc6     net-tools     netcat-openbsd     nmap     parallel     patch     psmisc     python3-pip     python3-venv     software-properties-common     sudo     tcpdump     tshark     vlan     wget     wpasupplicant
    Name: run
    PrependShell: true
  - CmdLine:
    - mk-build-deps openvswitch -i -r -t "$AG" &&     /setup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      &&     add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      $(lsb_release -cs) stable" &&     $AG update &&     $AG install docker-ce
    Name: run
    PrependShell: true
  - CmdLine:
    - $AG purge openvswitch-build-deps &&     $AG autoremove --purge &&     $AG clean
      &&     rm -rf /var/lib/apt/lists/* &&     rm -rf $BUILDDIR
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
