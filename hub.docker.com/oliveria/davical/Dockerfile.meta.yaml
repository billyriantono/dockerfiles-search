MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Maintainer: Andrea Oliveri <oliveriandrea (at) gmail.com>
    Name: maintainer
  - Env:
    - Key: TIME_ZONE
      Value: '"Europe/Rome"'
    Name: env
  - CmdLine:
    - "apk --update add \tbash \tless \tnano \tsed \tsupervisor \trsyslog \tpostgresql
      \tapache2 \tapache2-utils \tphp5 \tphp5-apache2 \tphp5-pgsql \tphp5-imap \tphp5-curl
      \tphp5-cgi \tphp5-xml \tphp5-gettext \tphp5-iconv \tphp5-ldap \tphp5-pdo \tphp5-pdo_pgsql
      \tphp5-calendar \tperl \tperl-yaml \tperl-dbd-pg \tperl-dbi \tgit"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /tmp \t&& git clone https://gitlab.com/davical-project/awl.git \t&& git
      clone https://gitlab.com/davical-project/davical.git \t&& apk del git   \t&&
      rm -rf /var/cache/apk/* \t&& rm -rf ./awl/.git/ \t&& rm -rf ./davical/.git/
      \t&& mv davical/ /usr/share/ \t&& mv awl/ /usr/share/ \t&& chown -R root:apache
      /usr/share/davical \t&& cd /usr/share/davical/ \t&& find ./ -type d -exec chmod
      u=rwx,g=rx,o=rx '{}' \\; \t&& find ./ -type f -exec chmod u=rw,g=r,o=r '{}'
      \\; \t&& find ./ -type f -name *.sh -exec chmod u=rwx,g=r,o=rx '{}' \\; \t&&
      find ./ -type f -name *.php -exec chmod u=rwx,g=rx,o=r '{}' \\; \t&& chmod o=rx
      /usr/share/davical/dba/update-davical-database \t&& chmod o=rx /usr/share/davical
      \t&& chown -R root:apache /usr/share/awl \t&& cd /usr/share/awl/ \t&& find ./
      -type d -exec chmod u=rwx,g=rx,o=rx '{}' \\; \t&& find ./ -type f -exec chmod
      u=rw,g=r,o=r '{}' \\; \t&& find ./ -type f -name *.sh -exec chmod u=rwx,g=rx,o=r
      '{}' \\; \t&& find ./ -type f -name *.sh -exec chmod u=rwx,g=r,o=rx '{}' \\;
      \t&& chmod o=rx /usr/share/awl"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /run/apache2 \t&& sed -i \"s/ErrorLog logs\\/error.log/#ErrorLog log\\/error.log/g\"
      /etc/apache2/httpd.conf \t&& sed -i \"s/CustomLog logs\\/access.log combined/#CustomLog
      logs\\/access.log combined/g\" /etc/apache2/httpd.conf"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./initialize_db.sh
    - /sbin/initialize_db.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./backup_db.sh
    - /sbin/backup_db.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /sbin/docker-entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./restore_db.sh
    - /sbin/restore_db.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./apache.conf
    - /config/apache.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./davical.php
    - /config/davical.php
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./supervisord.conf
    - /config/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./rsyslog.conf
    - /config/rsyslog.conf
  - CmdLine:
    - "chmod 0755 /sbin/initialize_db.sh \t&& chmod 0755 /sbin/backup_db.sh  \t&&
      chmod 0755 /sbin/docker-entrypoint.sh \t&& chmod 0755 /sbin/restore_db.sh \t&&
      mkdir /etc/davical /etc/supervisor.d/ /etc/rsyslog.d \t&& /bin/echo -e \"\\$IncludeConfig
      /etc/rsyslog.d/*.conf\" > /etc/rsyslog.conf \t&& chown -R root:apache /etc/davical
      \t&& chmod -R u=rwx,g=rx,o= /etc/davical \t&& chown root:apache /config/davical.php
      \t&& chmod u+rwx,g+rx /config/davical.php \t&& ln -s /config/apache.conf /etc/apache2/conf.d/davical.conf
      \t&& ln -s /config/davical.php /etc/davical/config.php \t&& ln -s /sbin/backup_db.sh
      /etc/periodic/daily/backup \t&& ln -s /config/supervisord.conf /etc/supervisor.d/supervisord.ini
      \t&& ln -s /config/rsyslog.conf /etc/rsyslog.d/rsyslog-davical.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export TERM=xterm" >> /root/.bashrc
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: volume
    Volumes:
    - /var/lib/postgresql/data/
    - /config
  - CmdLine:
    - /sbin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: "FROM \talpine:edge"
