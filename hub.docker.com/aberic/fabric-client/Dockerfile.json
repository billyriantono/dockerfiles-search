{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "golang:latest",
      "SourceCode": "FROM golang:latest as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "golang:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "app",
              "Value": "\"fabric-client\""
            },
            {
              "Key": "by",
              "Value": "\"aberic\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "REPO",
              "Value": "$GOPATH/src/github.com/aberic/fabric-client"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$REPO"
        },
        {
          "CmdLine": [
            "git clone https://github.com/golang/mock.git $GOPATH/src/github.com/golang/mock \u0026\u0026     git clone https://github.com/golang/protobuf.git $GOPATH/src/github.com/golang/protobuf \u0026\u0026     git clone https://github.com/golang/sys.git $GOPATH/src/golang.org/x/sys \u0026\u0026     git clone https://github.com/golang/net.git $GOPATH/src/golang.org/x/net \u0026\u0026     git clone https://github.com/golang/text.git $GOPATH/src/golang.org/x/text \u0026\u0026     git clone https://github.com/golang/lint.git $GOPATH/src/golang.org/x/lint \u0026\u0026     git clone https://github.com/golang/tools.git $GOPATH/src/golang.org/x/tools \u0026\u0026     git clone https://github.com/golang/crypto.git $GOPATH/src/golang.org/x/crypto \u0026\u0026     git clone https://github.com/aberic/fabric-client.git $REPO \u0026\u0026     GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o $REPO/runner/fabric $REPO/runner/fabric.go"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "docker.io/alpine:latest",
      "SourceCode": "FROM docker.io/alpine:latest",
      "Platform": "",
      "From": {
        "Image": "docker.io/alpine:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"https://mirror.tuna.tsinghua.edu.cn/alpine/v3.4/main\" \u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update curl bash \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk upgrade \u0026\u0026     apk add --no-cache bash ca-certificates wget \u0026\u0026     wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \u0026\u0026     wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.29-r0/glibc-2.29-r0.apk \u0026\u0026     apk add glibc-2.29-r0.apk \u0026\u0026     rm -rf glibc-2.29-r0.apk \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /home/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "WORK_PATH",
              "Value": "/home"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BIN_PATH",
              "Value": "/home/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$WORK_PATH"
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/go/src/github.com/aberic/fabric-client/runner/fabric",
            "."
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "19865"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "19877"
          ]
        },
        {
          "CmdLine": [
            "./fabric"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}