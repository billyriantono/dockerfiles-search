{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "janeczku/alpine-kubernetes",
      "SourceCode": "FROM janeczku/alpine-kubernetes",
      "Platform": "",
      "From": {
        "Image": "janeczku/alpine-kubernetes"
      },
      "Commands": [
        {
          "Maintainer": "Evan Wies \u003cevan@neomantra.net\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "RESTY_VERSION",
          "Name": "arg",
          "Value": "\"1.9.15.1\""
        },
        {
          "Key": "RESTY_OPENSSL_VERSION",
          "Name": "arg",
          "Value": "\"1.0.2h\""
        },
        {
          "Key": "RESTY_PCRE_VERSION",
          "Name": "arg",
          "Value": "\"8.39\""
        },
        {
          "Key": "RESTY_J",
          "Name": "arg",
          "Value": "\"1\""
        },
        {
          "Key": "RESTY_CONFIG_OPTIONS",
          "Name": "arg",
          "Value": "\"    --user=nginx     --group=nginx     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --with-file-aio     --with-http_addition_module     --with-http_auth_request_module     --with-http_dav_module     --with-http_flv_module     --with-http_geoip_module=dynamic     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_image_filter_module=dynamic     --with-http_mp4_module     --with-http_random_index_module     --with-http_realip_module     --with-http_secure_link_module     --with-http_slice_module     --with-http_ssl_module     --with-http_stub_status_module     --with-http_sub_module     --with-http_v2_module     --with-http_xslt_module=dynamic     --with-ipv6     --with-mail     --with-mail_ssl_module     --with-md5-asm     --with-pcre-jit     --with-sha1-asm     --with-stream     --with-stream_ssl_module     --with-threads     --without-http_fastcgi_module     --without-http_uwsgi_module     --without-http_scgi_module     \""
        },
        {
          "Key": "_RESTY_CONFIG_DEPS",
          "Name": "arg",
          "Value": "\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\""
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps         build-base         curl         gd-dev         geoip-dev         libxslt-dev         linux-headers         make         perl-dev         readline-dev         zlib-dev     \u0026\u0026 apk add --no-cache         gd         geoip         libgcc         libxslt         zlib         unzip         ca-certificates         bash     \u0026\u0026 update-ca-certificates     \u0026\u0026 cd /tmp     \u0026\u0026 curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz --insecure     \u0026\u0026 tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz     \u0026\u0026 curl -fSL https://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz --insecure     \u0026\u0026 tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz     \u0026\u0026 curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz --insecure    \u0026\u0026 tar xzf openresty-${RESTY_VERSION}.tar.gz     \u0026\u0026 cd /tmp/openresty-${RESTY_VERSION}     \u0026\u0026 ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS}     \u0026\u0026 make -j${RESTY_J}     \u0026\u0026 make -j${RESTY_J} install     \u0026\u0026 cd /tmp     \u0026\u0026 rm -rf         openssl-${RESTY_OPENSSL_VERSION}         openssl-${RESTY_OPENSSL_VERSION}.tar.gz         openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION}         pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION}     \u0026\u0026 apk del .build-deps     \u0026\u0026 addgroup -S nginx     \u0026\u0026 adduser -S -G nginx nginx     \u0026\u0026 mkdir -p /etc/nginx/sites-enabled     \u0026\u0026 ln -s /usr/local/openresty/nginx/sbin/nginx /usr/local/bin/nginx     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 mkdir -p /tmp/nginx/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "key.pem",
            "/usr/local/openresty/nginx/config/key.pem"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "cert.pem",
            "/usr/local/openresty/nginx/config/cert.pem"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ca.pem",
            "/usr/local/openresty/nginx/config/ca.pem"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/usr/local/openresty/nginx/conf/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apis.conf",
            "/usr/local/openresty/nginx/conf/sites-enabled/apis.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "stub.conf",
            "/usr/local/openresty/nginx/conf/sites-enabled/stub.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "test.lua",
            "/usr/local/openresty/nginx/conf/lua/test.lua"
          ]
        },
        {
          "CmdLine": [
            "nginx"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}