{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "tensorflow/tensorflow:1.8.0-gpu-py3",
      "SourceCode": "FROM tensorflow/tensorflow:1.8.0-gpu-py3",
      "Platform": "",
      "From": {
        "Image": "tensorflow/tensorflow:1.8.0-gpu-py3"
      },
      "Commands": [
        {
          "CmdLine": [
            "sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -yq \u0026\u0026 apt-get install -yq build-essential cmake git pkg-config wget zip \u0026\u0026 apt-get install -yq libjpeg8-dev libtiff5-dev libjasper-dev libpng12-dev \u0026\u0026 apt-get install -yq libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \u0026\u0026 apt-get install -yq libgtk2.0-dev \u0026\u0026 apt-get install -yq libatlas-base-dev gfortran \u0026\u0026 apt-get install -yq python3 python3-dev python3-pip python3-setuptools python3-tk git swig \u0026\u0026 apt-get remove -yq python-pip python3-pip \u0026\u0026 wget https://bootstrap.pypa.io/get-pip.py \u0026\u0026 python3 get-pip.py \u0026\u0026 pip3 install Cython \u0026\u0026 cd ~ \u0026\u0026 git clone https://github.com/Itseez/opencv.git \u0026\u0026 cd opencv \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake -D CMAKE_BUILD_TYPE=RELEASE \t-D CMAKE_INSTALL_PREFIX=/usr/local \t-D INSTALL_PYTHON_EXAMPLES=ON \t-D BUILD_opencv_python3=yes -D PYTHON_EXECUTABLE=/usr/bin/python3 .. \u0026\u0026 make -j8 \u0026\u0026 make install \u0026\u0026 rm -rf /root/opencv/ \u0026\u0026 mkdir -p /root/tf-openpose \u0026\u0026 rm -rf /tmp/*.tar.gz \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /tmp/* /var/tmp* /var/lib/apt/lists/* \u0026\u0026 rm -f /etc/ssh/ssh_host_* \u0026\u0026 rm -rf /usr/share/man?? /usr/share/man/??_*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/root/tf-openpose/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./requirements.txt",
            "/root/tf-openpose/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root/tf-openpose/"
        },
        {
          "CmdLine": [
            "cd /root/tf-openpose/ \u0026\u0026 pip3 install -U setuptools \u0026\u0026 pip3 install argparse dill fire matplotlib numba psutil pycocotools requests scikit-image scipy slidingwindow tqdm pandas git+https://github.com/ppwwyyxx/tensorpack.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 git clone https://github.com/cocodataset/cocoapi \u0026\u0026 pip3 install cython \u0026\u0026 cd cocoapi/PythonAPI \u0026\u0026 python3 setup.py build_ext --inplace \u0026\u0026 python3 setup.py build_ext install \u0026\u0026 mkdir /coco \u0026\u0026 cd /coco \u0026\u0026 wget http://images.cocodataset.org/annotations/annotations_trainval2017.zip \u0026\u0026 unzip annotations_trainval2017.zip \u0026\u0026 rm -rf annotations_trainval2017.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install -U numpy"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}