{
  "MetaArgs": [
    {
      "Key": "BASE_IMAGE",
      "DefaultValue": null,
      "ProvidedValue": null,
      "Value": null
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "${BASE_IMAGE}",
      "SourceCode": "FROM ${BASE_IMAGE}",
      "Platform": "",
      "From": {
        "Image": "${BASE_IMAGE}"
      },
      "Commands": [
        {
          "Maintainer": "John Morris \u003cjohn@zultron.com\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "DEBIAN_ARCH",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "HOST_MULTIARCH",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "DISTRO_CODENAME",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "DISTRO_VER",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "SYS_ROOT",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "EXTRA_FLAGS",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "LDEMULATION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_ARCH",
              "Value": "${DEBIAN_ARCH}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOST_MULTIARCH",
              "Value": "${HOST_MULTIARCH}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DISTRO_CODENAME",
              "Value": "${DISTRO_CODENAME}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DISTRO_VER",
              "Value": "${DISTRO_VER}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SYS_ROOT",
              "Value": "${SYS_ROOT}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "EXTRA_FLAGS",
              "Value": "${EXTRA_FLAGS}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LDEMULATION",
              "Value": "${LDEMULATION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "dumb"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBCONF_NONINTERACTIVE_SEEN",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'APT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";' \u003e \t    /etc/apt/apt.conf.d/01norecommend"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "DEBIAN_MIRROR",
          "Name": "arg",
          "Value": "ftp.debian.org"
        },
        {
          "Key": "DEBIAN_SECURITY_MIRROR",
          "Name": "arg",
          "Value": "security.debian.org"
        },
        {
          "CmdLine": [
            "sed -i /etc/apt/sources.list         -e \"s/deb.debian.org/${DEBIAN_MIRROR}/\"         -e \"s/security.debian.org/${DEBIAN_SECURITY_MIRROR}/\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if test -n \"${SYS_ROOT}\"; then         dpkg --add-architecture $DEBIAN_ARCH;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y upgrade     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install \tlibfile-fcntllock-perl \tlocales \tgit \tbzip2 \tsharutils \tnet-tools \ttime \tprocps \thelp2man \txvfb \txauth \tpython-sphinx \twget \tsudo \tlftp \tapt-transport-https \tca-certificates \tmultistrap \tdebian-keyring \tdebian-archive-keyring \tpython-apt \trubygems     \u0026\u0026 { \ttest $DISTRO_VER -ge 10 \t    || apt-get install -y \t\tpython-restkit;         }     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y \tbuild-essential \tdevscripts \tfakeroot \tequivs \tlsb-release \tless \tpython-debian \tlibtool \tccache \tautoconf \tautomake \tquilt \tpsmisc \tpkg-config \tqemu-user-static \tlinux-libc-dev:${DEBIAN_ARCH}         dh-python \tlibreadline-dev     \u0026\u0026 {         if test $DISTRO_VER -ge 9 -a \t        \\( $DEBIAN_ARCH = armhf -o $DEBIAN_ARCH = arm64 \\); then             apt-get install -y \t        crossbuild-essential-${DEBIAN_ARCH};         fi;     }     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if test $DISTRO_VER -eq 8; then         apt-get install -y \t    binutils-i586-linux-gnu \t    gcc-4.9-multilib \t    g++-4.9-multilib;     elif test $DISTRO_VER -eq 9; then         apt-get install -y \t    binutils-multiarch \t    gcc-6-multilib \t    g++-6-multilib \t    libgcc-6-dev:$DEBIAN_ARCH;     else         apt-get install -y \t    binutils-multiarch \t    gcc-8-multilib \t    g++-8-multilib \t    libgcc-8-dev:$DEBIAN_ARCH;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if test $DISTRO_VER -eq 8; then         VER=4.9.4-2017.01 \u0026\u0026         ARCH=arm-linux-gnueabihf \u0026\u0026         DIR=gcc-linaro-${VER}-x86_64_${ARCH} \u0026\u0026         TXZ=${DIR}.tar.xz \u0026\u0026         URI=http://releases.linaro.org/components/toolchain/binaries/latest-4/${ARCH} \u0026\u0026         WORKD=/tmp/linaro \u0026\u0026         mkdir -p ${WORKD} \u0026\u0026 cd ${WORKD} \u0026\u0026         echo \"Downloading gcc-linaro-${VER}\" \u0026\u0026         wget --progress=dot:mega ${URI}/${TXZ} \u0026\u0026         wget -q ${URI}/${TXZ}.asc \u0026\u0026         echo \"Validating checksum of compiler download\" \u0026\u0026         md5sum -c ${TXZ}.asc \u0026\u0026         echo \"Extracting compiler to /opt/\" \u0026\u0026         tar xCf /opt ${WORKD}/${TXZ} \u0026\u0026         ln -snf ${DIR} /opt/gcc-linaro-hf \u0026\u0026         rm -rf ${WORKD} \u0026\u0026         ln -s ../../bin/ccache /usr/lib/ccache/arm-linux-gnueabihf-gcc \u0026\u0026         ln -s ../../bin/ccache /usr/lib/ccache/arm-linux-gnueabihf-g++ ;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if test $DEBIAN_ARCH = armhf -o $DEBIAN_ARCH = arm64; then         apt-get install -y qemu binfmt-support qemu-user-static         \u0026\u0026 apt-get clean;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CPPFLAGS",
              "Value": "\"${SYS_ROOT:+--sysroot=$SYS_ROOT ${EXTRA_FLAGS}}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LDFLAGS",
              "Value": "\"${SYS_ROOT:+--sysroot=$SYS_ROOT ${EXTRA_FLAGS}}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PKG_CONFIG_PATH",
              "Value": "\"${SYS_ROOT:+$SYS_ROOT/usr/lib/$HOST_MULTIARCH/pkgconfig:$SYS_ROOT/usr/lib/pkgconfig:$SYS_ROOT/usr/share/pkgconfig}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DPKG_ROOT",
              "Value": "$SYS_ROOT"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ARM_HOST_MULTIARCH",
              "Value": "arm-linux-gnueabihf"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ARM64_HOST_MULTIARCH",
              "Value": "aarch64-linux-gnu"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "I386_HOST_MULTIARCH",
              "Value": "i386-linux-gnu"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "test -z \"$SYS_ROOT\" || mkdir $SYS_ROOT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "multistrap-configs/",
            "/tmp/multistrap-configs/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "dpkg-shlibdeps-*.patch",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026     patch -p0 -F 0 -N \u003c /tmp/dpkg-shlibdeps-$DISTRO_VER.patch \u0026\u0026     rm /tmp/dpkg-shlibdeps-*.patch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "test -z \"$SYS_ROOT\"     || {         mkdir -p ${SYS_ROOT}/etc         \u0026\u0026 cp /etc/ld.so.conf ${SYS_ROOT}/etc/ld.so.conf         \u0026\u0026 echo '/lib/arm-linux-gnueabihf\\n/usr/lib/arm-linux-gnueabihf' \u003e \t    /etc/ld.so.conf.d/arm-linux-gnueabihf.conf         \u0026\u0026 echo '/lib/aarch64-linux-gnu\\n/usr/lib/aarch64-linux-gnu' \u003e \t    /etc/ld.so.conf.d/aarch64-linux-gnu.conf;     }"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "test $DISTRO_VER -gt 8 ||     for i in /usr/bin/i586-linux-gnu-*; do \tln -s $(basename $i) $(echo $i | sed 's/i586/i386/');     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "test $DISTRO_VER -eq 8 || {         ln -s x86_64-linux-gnu-objcopy /usr/bin/i686-linux-gnu-objcopy \u0026\u0026         ln -s x86_64-linux-gnu-objdump /usr/bin/i686-linux-gnu-objdump \u0026\u0026         ln -s x86_64-linux-gnu-strip /usr/bin/i686-linux-gnu-strip;     }"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if test $DISTRO_VER -eq 8; then         ln -s pkg-config /usr/bin/${ARM_HOST_MULTIARCH}-pkg-config;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 31B5958F43DDF224"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://deb.machinekit.io/debian $DISTRO_CODENAME main\" \u003e             /etc/apt/sources.list.d/machinekit.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if test $DISTRO_CODENAME = jessie -a -z \"$SYS_ROOT\"; then         apt-get install -y libxenomai-dev         \u0026\u0026 apt-get clean;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "pkgs/",
            "/tmp/pkgs/"
          ]
        },
        {
          "CmdLine": [
            "MK_CROSS_BUILDER=1 /tmp/pkgs/mk-hal/debian/configure     \u0026\u0026 if test $DISTRO_VER -eq 8; then         MK_CROSS_BUILDER=1 /tmp/pkgs/mk-cnc/debian/configure -prx;     else         MK_CROSS_BUILDER=1 /tmp/pkgs/mk-cnc/debian/configure -pr;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/debs \u0026\u0026     touch /tmp/debs/Sources"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if test $DISTRO_VER -eq 8; then         mk-build-deps --arch $DEBIAN_ARCH             /tmp/pkgs/mk-hal/debian/control             /tmp/pkgs/mk-cnc/debian/control;     else         mk-build-deps --build-arch $DEBIAN_ARCH --host-arch $DEBIAN_ARCH \t    /tmp/pkgs/mk-hal/debian/control \t    /tmp/pkgs/mk-cnc/debian/control;     fi     \u0026\u0026 mv *.deb /tmp/debs     \u0026\u0026 ( cd /tmp/debs \u0026\u0026 dpkg-scanpackages -m . \u003e /tmp/debs/Packages )"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if test $DISTRO_VER -le 9 -a $DEBIAN_ARCH = amd64; then \techo \"deb file:///tmp/debs ./\" \u003e /etc/apt/sources.list.d/local.list \t\u0026\u0026 apt-get update;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if test -z \"$SYS_ROOT\"; then         apt-get update         \u0026\u0026 if test $DISTRO_VER -le 9; then \t    apt-get install -y  -o Apt::Get::AllowUnauthenticated=true \t\tmachinekit-hal-build-deps \t\tmachinekit-cnc-build-deps \t    \u0026\u0026 sed -i /etc/apt/sources.list.d/local.list -e '/^deb/ s/^/#/' \t    \u0026\u0026 apt-get update ;         else \t    apt-get install -y /tmp/debs/machinekit-hal-build-deps_*.deb; \tfi \t\u0026\u0026 apt-get clean;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if test $DISTRO_VER -ge 9; then         sed -i /usr/sbin/multistrap \t    -e '/AllowUnauthenticated/ s/\"$/ -o Acquire::AllowInsecureRepositories=true\"/';     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "test -z \"$SYS_ROOT\"     || multistrap -f /tmp/multistrap-configs/$DISTRO_CODENAME.conf \t-a $DEBIAN_ARCH -d $SYS_ROOT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "test -z \"$SYS_ROOT\"     || {         for link in $(find $SYS_ROOT/usr/lib/${HOST_MULTIARCH}/ -type l); do             if test $(dirname $(readlink $link)) != .; then                 ln -sf ../../../lib/${HOST_MULTIARCH}/$(basename                     $(readlink $link)) $link;             fi;         done;     }"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "test -z \"$SYS_ROOT\"     || {         mkdir -p /usr/lib/${HOST_MULTIARCH} \u0026\u0026         ln -s $SYS_ROOT/usr/lib/${HOST_MULTIARCH}/tcl8.6             /usr/lib/${HOST_MULTIARCH} \u0026\u0026         ln -s $SYS_ROOT/usr/lib/${HOST_MULTIARCH}/tk8.6             /usr/lib/${HOST_MULTIARCH};     }"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "test -z \"$SYS_ROOT\"     || {         ln -s $SYS_ROOT/usr/lib/${HOST_MULTIARCH}/glib-2.0 \t    /usr/lib/${HOST_MULTIARCH} \u0026\u0026 \tln -s $SYS_ROOT/usr/lib/${HOST_MULTIARCH}/gtk-2.0 \t    /usr/lib/${HOST_MULTIARCH};     }"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "test -z \"$SYS_ROOT\" -o $DISTRO_VER -gt 8 ||     ln -s /sysroot/usr/bin/xeno-config /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         cython         uuid-runtime         protobuf-compiler         python-protobuf         python-pyftpdlib         python-tk         netcat-openbsd         tcl8.6 tk8.6         cgroup-tools     \u0026\u0026 if test $DISTRO_VER -le 9; then \t    apt-get install -y \t\tyapps2-runtime yapps2;        else \t    apt-get install -y \t\tpython-yapps yapps2;        fi     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "test -z \"$SYS_ROOT\"     || {         mv /usr/include /usr/include.build \u0026\u0026         ln -s $SYS_ROOT/usr/include /usr/include \u0026\u0026 \tln -sf /usr/include.build/x86_64-linux-gnu $SYS_ROOT/usr/include;     }"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "if test $DISTRO_VER -eq 10 -a -z \"$SYS_ROOT\"; then         apt-get install -y libsystemd-dev         \u0026\u0026 apt-get clean;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "travis"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/${USER}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/lib/ccache:/opt/gcc-linaro-hf/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"${USER}:x:${UID}:${GID}::${HOME}:${SHELL}\" \u003e\u003e /etc/passwd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"${USER}:*:17967:0:99999:7:::\" \u003e\u003e /etc/shadow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"${USER}:x:${GID}:\" \u003e\u003e /etc/group"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i /etc/bash.bashrc     -e 's/^PS1=.*/PS1=\"\\\\h:\\\\W\\\\$ \"/'     -e '$a alias ls=\"ls -aFs\"'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"ALL\tALL=(ALL:ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}