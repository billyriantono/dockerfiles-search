{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cudagl:9.2-devel-ubuntu18.04",
      "SourceCode": "FROM nvidia/cudagl:9.2-devel-ubuntu18.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cudagl:9.2-devel-ubuntu18.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Tarek Taha \u003ctarek.taha@algorythma.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y --quiet --no-install-recommends install \t\tsudo \t\tnano \t\tnet-tools \t\tiputils-* \t\tbash-completion \t\tautotools-dev \t\tdh-autoreconf \t\tbzip2 \t\tca-certificates \t\tccache \t\tcmake \t\tcppcheck \t\tcurl \t\tdirmngr \t\tdoxygen \t\tfile \t\tg++ \t\tgcc \t\tgdb \t\tgit \t\tgnupg \t\tgosu \t\tlcov \t\tlibfreetype6-dev \t\tlibgtest-dev \t\tlibpng-dev \t\tlsb-release \t\tmake \t\tninja-build \t\topenjdk-8-jdk \t\topenjdk-8-jre \t\topenssh-client \t\tpkg-config \t\tpython-pip \t\tpython-pygments \t\tpython-setuptools \t\tpython-wstool \t\tlocate \t\trsync \t\tshellcheck \t\ttzdata \t\tunzip \t\twget \t\txsltproc \t\tzip \t\u0026\u0026 apt-get -y autoremove \t\u0026\u0026 apt-get clean autoclean \t\u0026\u0026 rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/src/gtest \t\u0026\u0026 mkdir build \u0026\u0026 cd build \t\u0026\u0026 cmake .. \u0026\u0026 make \t\u0026\u0026 cp *.a /usr/lib \t\u0026\u0026 cd .. \u0026\u0026 rm -rf build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python -m pip install --upgrade pip \t\u0026\u0026 pip install setuptools pkgconfig wheel \t\u0026\u0026 pip install argparse argcomplete coverage jinja2 empy numpy requests serial toml pyyaml cerberus"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://downloads.sourceforge.net/project/astyle/astyle/astyle%202.06/astyle_2.06_linux.tar.gz -O /tmp/astyle.tar.gz \t\u0026\u0026 cd /tmp \u0026\u0026 tar zxf astyle.tar.gz \u0026\u0026 cd astyle/src \t\u0026\u0026 make -f ../build/gcc/Makefile \u0026\u0026 cp bin/astyle /usr/local/bin \t\u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd --shell /bin/bash -u 1000 -c \"\" -m aaal \u0026\u0026 usermod -a -G dialout aaal \u0026\u0026 echo \"aaal:aaal\" | chpasswd \u0026\u0026 adduser aaal sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i '/force_color_prompt/s/^#//g' ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i '/force_color_prompt/s/^#//g' /home/aaal/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/.X11-unix \u0026\u0026 \tchmod 1777 /tmp/.X11-unix \u0026\u0026 \tchown -R root:root /tmp/.X11-unix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": ":99"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CCACHE_UMASK",
              "Value": "000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FASTRTPSGEN_DIR",
              "Value": "\"/usr/local/bin/\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/usr/lib/ccache:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "UTC"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "14556/udp"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "14557/udp"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}