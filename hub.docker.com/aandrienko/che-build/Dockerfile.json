{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "eclipse/stack-base:ubuntu",
      "SourceCode": "FROM eclipse/stack-base:ubuntu",
      "Platform": "",
      "From": {
        "Image": "eclipse/stack-base:ubuntu"
      },
      "Commands": [
        {
          "CmdLine": [
            "sudo apt-get update \u0026\u0026 sudo apt-get install -y --no-install-recommends     g++     gcc     libc6-dev     make \tbuild-essential \tlibssl-dev \tlibkrb5-dev \truby-full \trubygems \t\u0026\u0026 sudo gem install sass compass \t\u0026\u0026 sudo apt-get clean \t\u0026\u0026 sudo apt-get -y autoremove     \u0026\u0026 sudo apt-get -y clean     \u0026\u0026 sudo rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.6.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_DOWNLOAD_URL",
              "Value": "https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_DOWNLOAD_SHA256",
              "Value": "e40c36ae71756198478624ed1bb4ce17597b3c19d243f3f0899bb5740d56212a"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sudo curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz     \u0026\u0026 echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c -     \u0026\u0026 sudo tar -C /usr/local -xzf golang.tar.gz     \u0026\u0026 sudo rm golang.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sudo mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \u0026\u0026 sudo chmod -R 777 \"$GOPATH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.3.9"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-1.8.0-openjdk-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "M2_HOME",
              "Value": "/home/user/apache-maven-$MAVEN_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$JAVA_HOME/bin:$M2_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /home/user/apache-maven-$MAVEN_VERSION \u0026\u0026     wget -qO- \"http://apache.ip-connect.vn.ua/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\" | tar -zx --strip-components=1 -C /home/user/apache-maven-$MAVEN_VERSION/     \u0026\u0026 sudo rm -rf apache-maven-$MAVEN_VERSION-bin.tar.gz     \u0026\u0026 echo \"export MAVEN_OPTS=\\$JAVA_OPTS\" \u003e\u003e /home/user/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "5.11.0"
            },
            {
              "Key": "NODE_PATH",
              "Value": "/usr/local/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8   ; do     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";   done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /home/user \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\"   \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"   \u0026\u0026 gpg --verify SHASUMS256.txt.asc   \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   \u0026\u0026 grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -   \u0026\u0026 sudo tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1   \u0026\u0026 sudo rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt   \u0026\u0026 sudo ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo curl -L https://npmjs.org/install.sh | sudo sh"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}