MetaArgs: null
Stages:
- As: build
  BaseName: openjdk:8-jdk-slim-stretch
  Commands:
  - Key: repo
    Name: arg
    Value: '"https://github.com/opencast/opencast.git"'
  - Key: branch
    Name: arg
    Value: '"4.3"'
  - Env:
    - Key: OPENCAST_DISTRIBUTION
      Value: '"migration"'
    - Key: OPENCAST_SRC
      Value: '"/usr/src/opencast"'
    - Key: OPENCAST_HOME
      Value: '"/opencast"'
    - Key: OPENCAST_UID
      Value: '"800"'
    - Key: OPENCAST_GID
      Value: '"800"'
    - Key: OPENCAST_REPO
      Value: '"${repo}"'
    - Key: OPENCAST_BRANCH
      Value: '"${branch}"'
    Name: env
  - CmdLine:
    - apt-get update  && apt-get install -y --no-install-recommends       tar gzip
      git       ca-certificates openssl       maven make gcc g++ libc-dev  && mkdir
      -p "${OPENCAST_SRC}" "${OPENCAST_HOME}"  && git clone --recursive "${OPENCAST_REPO}"
      "${OPENCAST_SRC}"  && cd "${OPENCAST_SRC}"  && git checkout "${OPENCAST_BRANCH}"  &&
      mvn --quiet --batch-mode install -DskipTests=true -Dcheckstyle.skip=true -DskipJasmineTests=true  &&
      tar -xzf build/opencast-dist-${OPENCAST_DISTRIBUTION}-*.tar.gz --strip 1 -C
      "${OPENCAST_HOME}"  && rm -rf "${OPENCAST_SRC}" /tmp/* /var/lib/apt/lists/*
      ~/.m2 ~/.npm ~/.node-gyp /usr/lib/node_modules
    Name: run
    PrependShell: true
  From:
    Image: openjdk:8-jdk-slim-stretch
  Name: build
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-slim-stretch AS build
- BaseName: alpine:3.7
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"WWU eLectures team <electures.dev@uni-muenster.de>"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.version
      Value: '"4.3"'
    - Key: org.label-schema.name
      Value: '"opencast-migration"'
    - Key: org.label-schema.description
      Value: '"Docker image for the Opencast migration distribution"'
    - Key: org.label-schema.usage
      Value: '"https://github.com/opencast/opencast-docker/blob/4.3/README.md"'
    - Key: org.label-schema.url
      Value: '"http://www.opencast.org/"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/opencast/opencast-docker"'
    - Key: org.label-schema.vendor
      Value: '"University of MÃ¼nster"'
    - Key: org.label-schema.docker.debug
      Value: '"docker exec -it $CONTAINER sh"'
    - Key: org.label-schema.docker.cmd.help
      Value: '"docker run --rm opencast/migration:4.3 app:help"'
    Name: label
  - Env:
    - Key: LANG
      Value: '"C.UTF-8"'
    - Key: JAVA_HOME
      Value: '"/usr/lib/jvm/java-1.8-openjdk"'
    - Key: PATH
      Value: '"$PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin"'
    - Key: HUNSPELL_BASE_URL
      Value: '"http://download.services.openoffice.org/contrib/dictionaries"'
    - Key: OPENCAST_VERSION
      Value: '"4.3"'
    - Key: OPENCAST_DISTRIBUTION
      Value: '"migration"'
    - Key: OPENCAST_HOME
      Value: '"/opencast"'
    - Key: OPENCAST_DATA
      Value: '"/data"'
    - Key: OPENCAST_CUSTOM_CONFIG
      Value: '"/etc/opencast"'
    - Key: OPENCAST_USER
      Value: '"opencast"'
    - Key: OPENCAST_GROUP
      Value: '"opencast"'
    - Key: OPENCAST_UID
      Value: '"800"'
    - Key: OPENCAST_GID
      Value: '"800"'
    Name: env
  - Env:
    - Key: OPENCAST_SCRIPTS
      Value: '"${OPENCAST_HOME}/docker/scripts"'
    - Key: OPENCAST_SUPPORT
      Value: '"${OPENCAST_HOME}/docker/support"'
    - Key: OPENCAST_CONFIG
      Value: '"${OPENCAST_HOME}/etc"'
    - Key: OPENCAST_REPO
      Value: '"${repo}"'
    - Key: OPENCAST_BRANCH
      Value: '"${branch}"'
    Name: env
  - CmdLine:
    - addgroup -S -g "${OPENCAST_GID}" "${OPENCAST_GROUP}"  && adduser -S -D -H -G
      "${OPENCAST_GROUP}" -h "${OPENCAST_HOME}" -u "${OPENCAST_UID}" "${OPENCAST_USER}"  &&
      mkdir -p "${OPENCAST_DATA}"  && chown -R "${OPENCAST_USER}:${OPENCAST_GROUP}"
      "${OPENCAST_DATA}"
    Name: run
    PrependShell: true
  - Chown: opencast:opencast
    From: build
    Name: copy
    SourcesAndDest:
    - '"${OPENCAST_HOME}"'
    - '"${OPENCAST_HOME}"'
  - Chown: opencast:opencast
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/scripts
    - '"${OPENCAST_SCRIPTS}"'
  - Chown: opencast:opencast
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/support
    - '"${OPENCAST_SUPPORT}"'
  - Chown: opencast:opencast
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/etc/*
    - '"${OPENCAST_CONFIG}/"'
  - Chown: opencast:opencast
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/etc/index/adminui/settings.yml
    - '"${OPENCAST_CONFIG}/index/adminui/"'
  - Chown: opencast:opencast
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/etc/index/externalapi/settings.yml
    - '"${OPENCAST_CONFIG}/index/externalapi/"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/docker-entrypoint.sh
    - assets/docker-healthcheck.sh
    - /
  - CmdLine:
    - apk add --no-cache       openjdk8       bash su-exec openssl tzdata curl jq       fontconfig
      ttf-dejavu ttf-freefont ttf-liberation ttf-linux-libertine       ffmpeg sox
      hunspell tesseract-ocr    && javac "${OPENCAST_SCRIPTS}/TryToConnectToDb.java"    &&
      mkdir -p /tmp/hunspell /usr/share/hunspell  && {       echo "22e217a631977d7b377f8dd22d2bbacd2d36b32765ce13f3474b03a4a97dd700  en_AU.zip";       echo
      "31fac12a1b520cde686f328d3fa7560f6eba772cddc872197ff842c57a0dc1ea  en_CA.zip";       echo
      "5869d8bd80eb2eb328ebe36b356348de4ae2acb1db6df39d1717d33f89f63728  en_GB.zip";       echo
      "6cc717b4de43240595662a2deef5447b06062e82380f5647196f07c9089284fa  en_NZ.zip";       echo
      "9227f658f182c9cece797352f041a888134765c11bffc91951c010a73187baea  en_US.zip";       echo
      "090285b721dcaabff51b467123f82a181a6904d187c90bda812c6e5f365ff19a  en_ZA.zip";     }
      > /tmp/hunspell-sha256sum.txt  && cd /tmp/hunspell  && for file in $(awk '{print
      $2}' /tmp/hunspell-sha256sum.txt); do       curl -L -o "${file}" "${HUNSPELL_BASE_URL}/${file}";       grep
      "${file}" /tmp/hunspell-sha256sum.txt | sha256sum -c -;       unzip "/tmp/hunspell/${file}";     done  &&
      cp *.aff *.dic /usr/share/hunspell  && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"${OPENCAST_HOME}"'
  - Name: expose
    Ports:
    - "8080"
  - Name: volume
    Volumes:
    - ${OPENCAST_DATA}
  - Health:
      Test:
      - CMD-SHELL
      - /docker-healthcheck.sh
      Timeout: 10000000000
    Name: healthcheck
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - app:start
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
