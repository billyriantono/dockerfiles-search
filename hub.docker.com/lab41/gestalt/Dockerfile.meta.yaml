MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: Charlie Lewis <charliel@lab41.org>
    Name: maintainer
  - Env:
    - Key: REFRESHED_AT
      Value: "2016-09-06"
    Name: env
  - CmdLine:
    - sed 's/main$/main universe/' -i /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's/us-east-1.ec2.archive.ubuntu.com/nova.clouds.archive.ubuntu.com/' -i
      /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common python-software-properties
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:ubuntu-toolchain-r/test
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main" > /etc/apt/sources.list.d/pgdg.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential                        git                        libpq-dev                        nodejs                        npm                        postgresql-9.4                        postgresql-client-9.4                        postgresql-contrib-9.4                        python-dev                        python-psycopg2                        python-setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install pip
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install web.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade psycopg2
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/nodejs /usr/bin/node
    Name: run
    PrependShell: true
  - CmdLine:
    - npm config set registry http://registry.npmjs.org/
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --global npm --save
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --global errno
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --global grunt karma grunt-karma --save-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --global grunt-cli --save-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --global grunt-contrib-imagemin --save-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --global npm --save-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --global yo --save-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --global bower --save-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: GESTALT_PULLED_AT
      Value: "2016-09-12"
    Name: env
  - CmdLine:
    - git clone https://github.com/Lab41/gestalt.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /gestalt/prototypes/tablet
  - CmdLine:
    - npm install angular --save
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install pg --save
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install express --save
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install body-parser --save
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /gestalt/prototypes/desktop
  - CmdLine:
    - npm install angular --save
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's/#\$ModLoad imudp/\$ModLoad imudp/' -i /etc/rsyslog.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's/#\$UDPServerRun 514/\$UDPServerRun 514/' -i /etc/rsyslog.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /etc/rsyslog.d/50-default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - chown postgres:postgres /etc/rsyslog.d/50-default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "postgres ALL=NOPASSWD: /etc/init.d/rsyslog start" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Name: user
    User: postgres
  - Chown: ""
    Name: add
    SourcesAndDest:
    - '*.sql'
    - /sql/
  - CmdLine:
    - /etc/init.d/postgresql start &&    psql --command "CREATE USER docker WITH SUPERUSER
      PASSWORD 'docker';" &&     createdb -O docker users &&     createdb gestalt
      &&     psql -d gestalt -c "CREATE USER gestalt_user WITH SUPERUSER LOGIN PASSWORD
      'umami';" &&     psql -d gestalt -c 'CREATE EXTENSION "adminpack";'
    Name: run
    PrependShell: true
  - Env:
    - Key: PGPASSWORD
      Value: umami
    Name: env
  - Env:
    - Key: PGHOST
      Value: 127.0.0.1
    Name: env
  - Env:
    - Key: PGUSER
      Value: gestalt_user
    Name: env
  - Env:
    - Key: PGDATABASE
      Value: gestalt
    Name: env
  - CmdLine:
    - /etc/init.d/postgresql start &&    psql -f /sql/gestalt.sql
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: volume
    Volumes:
    - /etc/postgresql
    - /var/log/postgresql
    - /var/lib/postgresql
  - Name: expose
    Ports:
    - "8000"
  - Env:
    - Key: DATABASE_URL
      Value: gestalt,gestalt_user,127.0.0.1,umami,5432
    Name: env
  - CmdLine:
    - (printf "*.*\t@$REMOTE_HOST" >> /etc/rsyslog.d/50-default.conf;     sudo /etc/init.d/rsyslog
      start;     logger started postgresql container $PARENT_HOST;     su - postgres
      -c "/usr/lib/postgresql/9.4/bin/postgres -c config_file=/etc/postgresql/9.4/main/postgresql.conf
      >/tmp/logfile 2>&1") &     python /gestalt/prototypes/desktop/app.py
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
