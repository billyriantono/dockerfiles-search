{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Maintainer": "Getty Images \"https://github.com/gettyimages\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y locales  \u0026\u0026 dpkg-reconfigure -f noninteractive locales  \u0026\u0026 locale-gen C.UTF-8  \u0026\u0026 /usr/sbin/update-locale LANG=C.UTF-8  \u0026\u0026 echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen  \u0026\u0026 locale-gen  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y curl unzip     python3 python3-setuptools  \u0026\u0026 ln -s /usr/bin/python3 /usr/bin/python  \u0026\u0026 easy_install3 pip py4j  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONHASHSEED",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_DISABLE_PIP_VERSION_CHECK",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y openjdk-8-jre  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HADOOP_VERSION",
              "Value": "3.2.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_HOME",
              "Value": "/usr/hadoop-$HADOOP_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HADOOP_CONF_DIR",
              "Value": "$HADOOP_HOME/etc/hadoop"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$HADOOP_HOME/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L --retry 3   \"http://apache.mirror.cdnetworks.com/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz\"   | gunzip   | tar -x -C /usr/  \u0026\u0026 rm -rf $HADOOP_HOME/share/doc  \u0026\u0026 chown -R root:root $HADOOP_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_VERSION",
              "Value": "2.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_PACKAGE",
              "Value": "spark-${SPARK_VERSION}-bin-hadoop2.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_HOME",
              "Value": "/usr/spark-${SPARK_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPARK_DIST_CLASSPATH",
              "Value": "\"$HADOOP_HOME/etc/hadoop/*:$HADOOP_HOME/share/hadoop/common/lib/*:$HADOOP_HOME/share/hadoop/common/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/hdfs/lib/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/yarn/lib/*:$HADOOP_HOME/share/hadoop/yarn/*:$HADOOP_HOME/share/hadoop/mapreduce/lib/*:$HADOOP_HOME/share/hadoop/mapreduce/*:$HADOOP_HOME/share/hadoop/tools/lib/*\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:${SPARK_HOME}/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L --retry 3   \"http://apache.mirror.cdnetworks.com/spark/spark-${SPARK_VERSION}/${SPARK_PACKAGE}.tgz\"   | gunzip   | tar x -C /usr/  \u0026\u0026 mv /usr/$SPARK_PACKAGE $SPARK_HOME  \u0026\u0026 chown -R root:root $SPARK_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y ssh openssh-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cat ~/.ssh/id_rsa.pub \u003e\u003e ~/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 0600 ~/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "core-site.xml",
            "$HADOOP_CONF_DIR/core-site.xml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "hdfs-site.xml",
            "$HADOOP_CONF_DIR/hdfs-site.xml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "hadoop-env.sh",
            "$HADOOP_CONF_DIR/hadoop-env.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "master.sh",
            "/root/master.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "worker.sh",
            "/root/worker.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "copy-udfs.sh",
            "/root/copy-udfs.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /root/*.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/root"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spark-env.sh",
            "$SPARK_HOME/conf/spark-env.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "poll-complete.sh",
            "/poll-complete.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /poll-complete.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SPARK_DIST_CLASSPATH",
              "Value": "$SPARK_DIST_CLASSPATH:/udf/*"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$SPARK_HOME"
        },
        {
          "CmdLine": [
            "mkdir /root/existing-udfs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/spark-events"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bin/spark-class",
            "org.apache.spark.deploy.master.Master"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}