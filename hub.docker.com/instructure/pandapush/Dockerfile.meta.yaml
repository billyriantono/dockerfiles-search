MetaArgs: null
Stages:
- BaseName: instructure/node-passenger:10
  Commands:
  - Key: prunedev
    Name: arg
    Value: "true"
  - Name: user
    User: root
  - CmdLine:
    - npm install -g npm@"6.1.0"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y redis-server     && apt-get clean     &&
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/src/app/node_modules/.bin
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - package.json
    - /usr/src/app/package.json
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .babelrc
    - /usr/src/app/.babelrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .eslintignore
    - /usr/src/app/.eslintignore
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .eslintrc
    - /usr/src/app/.eslintrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./server
    - /usr/src/app/server
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./ui
    - /usr/src/app/ui
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./client
    - /usr/src/app/client
  - CmdLine:
    - mkdir /usr/src/app/localdata
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/src/app /app
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R docker:docker /usr/src/app
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - CmdLine:
    - ln -s /usr/src/app/ui/public /usr/src/app/public
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/src/app/server/index.js /usr/src/app/app.js
    Name: run
    PrependShell: true
  - CmdLine:
    - NODE_ENV=dev npm install &&     NODE_ENV=production node_modules/.bin/webpack
      -p --config client/webpack.config.js &&     NODE_ENV=production node_modules/.bin/webpack
      -p --config ui/webpack.config.js &&     if [ "$prunedev" = "true" ]; then npm
      prune --production; fi
    Name: run
    PrependShell: true
  From:
    Image: instructure/node-passenger:10
  Name: ""
  Platform: ""
  SourceCode: FROM instructure/node-passenger:10
