MetaArgs: null
Stages:
- BaseName: instructure/ruby:2.6
  Commands:
  - Maintainer: Instructure
    Name: maintainer
  - Name: user
    User: root
  - CmdLine:
    - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7   &&
      apt-get install -y apt-transport-https ca-certificates   && sh -c 'echo deb
      https://oss-binaries.phusionpassenger.com/apt/passenger bionic main > /etc/apt/sources.list.d/passenger.list'   &&
      apt-get update   && apt-get install -y --no-install-recommends     nginx-extras     sudo     passenger     libnginx-mod-http-passenger   &&
      update-alternatives --install /usr/bin/gem gem /usr/bin/gem$RUBY_MAJOR 181   &&
      update-alternatives     --install /usr/bin/ruby ruby /usr/bin/ruby${RUBY_MAJOR}
      51     --slave /usr/bin/erb erb /usr/bin/erb${RUBY_MAJOR}     --slave /usr/bin/irb
      irb /usr/bin/irb${RUBY_MAJOR}     --slave /usr/bin/rdoc rdoc /usr/bin/rdoc${RUBY_MAJOR}     --slave
      /usr/bin/ri ri /usr/bin/ri${RUBY_MAJOR}   && apt-get clean   && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''docker ALL=(ALL) NOPASSWD: SETENV: /usr/sbin/nginx'' >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - CmdLine:
    - passenger-config build-native-support
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint
    - /usr/src/entrypoint
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf.erb
    - /usr/src/nginx/nginx.conf.erb
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - main.d/*
    - /usr/src/nginx/main.d/
  - CmdLine:
    - mkdir -p /usr/src/nginx/conf.d  && mkdir -p /usr/src/nginx/location.d  && mkdir
      -p /usr/src/nginx/main.d  && ln -sf /dev/stdout /var/log/nginx/access.log  &&
      ln -sf /dev/stderr /var/log/nginx/error.log  && chown docker:docker -R /usr/src/nginx
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /tini
    - --
    - /usr/src/entrypoint
    Name: cmd
    PrependShell: false
  From:
    Image: instructure/ruby:2.6
  Name: ""
  Platform: ""
  SourceCode: FROM instructure/ruby:2.6
