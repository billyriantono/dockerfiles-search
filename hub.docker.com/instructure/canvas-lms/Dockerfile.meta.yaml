MetaArgs: null
Stages:
- BaseName: instructure/ruby-passenger:2.4
  Commands:
  - Env:
    - Key: APP_HOME
      Value: /usr/src/app/
    Name: env
  - Env:
    - Key: RAILS_ENV
      Value: '"production"'
    Name: env
  - Env:
    - Key: NGINX_MAX_UPLOAD_SIZE
      Value: 10g
    Name: env
  - Env:
    - Key: YARN_VERSION
      Value: 1.3.2-1
    Name: env
  - Env:
    - Key: DISABLE_V8_COMPILE_CACHE
      Value: "1"
    Name: env
  - Name: user
    User: root
  - Name: workdir
    Path: /root
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -   && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg
      | apt-key add -   && echo "deb https://dl.yarnpkg.com/debian/ stable main" >
      /etc/apt/sources.list.d/yarn.list   && printf 'path-exclude /usr/share/doc/*\npath-exclude
      /usr/share/man/*' > /etc/dpkg/dpkg.cfg.d/01_nodoc   && echo "deb http://apt.postgresql.org/pub/repos/apt/
      $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list   && curl
      -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -   &&
      apt-get update -qq   && apt-get install -qqy --no-install-recommends        nodejs        yarn="$YARN_VERSION"        libxmlsec1-dev        python-lxml        libicu-dev        postgresql-client-9.5        unzip        fontforge   &&
      apt-get clean   && rm -rf /var/lib/apt/lists/*   && mkdir -p /home/docker/.gem/ruby/$RUBY_MAJOR.0
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ -e /var/lib/gems/$RUBY_MAJOR.0/gems/bundler-* ]; then BUNDLER_INSTALL="-i
      /var/lib/gems/$RUBY_MAJOR.0"; fi   && gem uninstall --all --ignore-dependencies
      --force $BUNDLER_INSTALL bundler   && gem install bundler --no-document -v 1.15.2   &&
      find $GEM_HOME ! -user docker | xargs chown docker:docker
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - build/vendor/woff-code-latest.zip
    - ./
  - CmdLine:
    - unzip woff-code-latest.zip -d woff   && cd woff   && make   && cp sfnt2woff
      /usr/local/bin   && cd -   && rm -rf woff*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $APP_HOME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile
    - ${APP_HOME}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile.d
    - ${APP_HOME}Gemfile.d
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config
    - ${APP_HOME}config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - gems
    - ${APP_HOME}gems
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - packages
    - ${APP_HOME}packages
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - script
    - ${APP_HOME}script
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - ${APP_HOME}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - yarn.lock
    - ${APP_HOME}
  - CmdLine:
    - find gems packages -type d ! -user docker -print0 | xargs -0 chown -h docker:docker
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - CmdLine:
    - bundle install --jobs 8   && yarn install --pure-lockfile
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $APP_HOME
  - CmdLine:
    - mkdir -p .yardoc              app/stylesheets/brandable_css_brands              client_apps/canvas_quizzes/node_modules              gems/canvas_i18nliner/node_modules              gems/selinimum/node_modules              log              node_modules              public/dist              public/doc/api              public/javascripts/client_apps              public/javascripts/compiled              tmp              /home/docker/.bundler/              /home/docker/.cache/yarn              /home/docker/.gem/   &&
      find ${APP_HOME} /home/docker ! -user docker -print0 | xargs -0 chown -h docker:docker
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - CmdLine:
    - COMPILE_ASSETS_NPM_INSTALL=0 bundle exec rake canvas:compile_assets
    Name: run
    PrependShell: true
  From:
    Image: instructure/ruby-passenger:2.4
  Name: ""
  Platform: ""
  SourceCode: FROM instructure/ruby-passenger:2.4
