{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jupyter/datascience-notebook",
      "SourceCode": "FROM jupyter/datascience-notebook",
      "Platform": "",
      "From": {
        "Image": "jupyter/datascience-notebook"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "build_opt",
              "Value": "-j4"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         ca-certificates         g++         make         wget         \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://mecab.googlecode.com/files/mecab-0.996.tar.gz \u0026\u0026     tar -xzf mecab-0.996.tar.gz \u0026\u0026     cd mecab-0.996 \u0026\u0026     ./configure --enable-utf8-only \u0026\u0026     make $build_opt \u0026\u0026     make install \u0026\u0026     ldconfig \u0026\u0026     cd .. \u0026\u0026     rm -rf mecab*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://mecab.googlecode.com/files/mecab-ipadic-2.7.0-20070801.tar.gz \u0026\u0026     tar -xzf mecab-ipadic-2.7.0-20070801.tar.gz \u0026\u0026     cd mecab-ipadic-2.7.0-20070801 \u0026\u0026     ./configure --with-charset=utf8 \u0026\u0026     make $build_opt \u0026\u0026     make install \u0026\u0026     cd .. \u0026\u0026     rm -rf mecab-ipadic*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"dicdir = /usr/local/lib/mecab/dic/ipadic\" \u003e /usr/local/etc/mecabrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         fonts-takao         libglib2.0-0         libsm6         libxext6         libxrender1         \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "CmdLine": [
            "conda install --yes         gensim         \u0026\u0026     conda clean -yt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python -c \"import matplotlib.pyplot\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://github.com/dmlc/xgboost/archive/0.47.tar.gz \u0026\u0026     mv 0.47.tar.gz xgboost-0.47.tar.gz \u0026\u0026     tar -xzf xgboost-0.47.tar.gz \u0026\u0026     cd xgboost-0.47 \u0026\u0026     make $build_opt \u0026\u0026     cd python-package \u0026\u0026     python setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt/conda/lib \u0026\u0026     mv libgomp.so.1.0.0 libgomp.so.1.0.0.orig \u0026\u0026     ln -s /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0 ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.7.1-cp34-none-linux_x86_64.whl \u0026\u0026     ln -s tensorflow-0.7.1-cp34-none-linux_x86_64.whl tensorflow-0.7.1-cp35-none-linux_x86_64.whl \u0026\u0026     pip install tensorflow-0.7.1-cp35-none-linux_x86_64.whl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         graphviz         graphviz-dev         pkg-config         \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "CmdLine": [
            "pip install         chainer         keras         mecab-python3         nxpd         pydot2         pygraphviz         skflow         zenhan"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "rm -rf xgboost* tensorflow*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "Name": "workdir",
          "Path": "/home/$NB_USER"
        },
        {
          "CmdLine": [
            "\"/bin/bash\""
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}