MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: DOCKER_BUCKET
      Value: '"download.docker.com"'
    - Key: DOCKER_CHANNEL
      Value: '"stable"'
    - Key: DOCKER_VERSION
      Value: '"19.03.1"'
    - Key: DOCKER_SHA256
      Value: '"6e7d8e24ee46b13d7547d751696d01607d19c8224c1b2c867acc8c779e77734b"'
    - Key: DIND_COMMIT
      Value: '"3b5fac462d21ca164b3778647420016315289034"'
    - Key: DOCKER_COMPOSE_VERSION
      Value: '"1.24.0"'
    - Key: GITVERSION_VERSION
      Value: '"4.0.0"'
    - Key: DEBIAN_FRONTEND
      Value: '"noninteractive"'
    - Key: SRC_DIR
      Value: '"/usr/src"'
    Name: env
  - CmdLine:
    - 'set -ex     && echo ''Acquire::CompressionTypes::Order:: "gz";'' > /etc/apt/apt.conf.d/99use-gzip-compression     &&
      apt-get update     && apt install -y apt-transport-https gnupg ca-certificates     &&
      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF     &&
      echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main"
      | tee /etc/apt/sources.list.d/mono-official-stable.list     && apt-get update     &&
      apt-get install software-properties-common -y --no-install-recommends     &&
      apt-add-repository -y ppa:git-core/ppa     && apt-get update     && apt-get
      install git=1:2.* -y --no-install-recommends     && git version     && apt-get
      install -y --no-install-recommends openssh-client     && mkdir ~/.ssh     &&
      touch ~/.ssh/known_hosts     && ssh-keyscan -t rsa,dsa -H github.com >> ~/.ssh/known_hosts     &&
      ssh-keyscan -t rsa,dsa -H bitbucket.org >> ~/.ssh/known_hosts     && chmod 600
      ~/.ssh/known_hosts     && apt-get install -y --no-install-recommends        wget
      python3 python3-dev python3-pip python3-setuptools fakeroot jq        netbase
      dirmngr bzr mercurial procps        tar gzip zip autoconf automake        bzip2
      file g++ gcc imagemagick        libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev        libevent-dev
      libffi-dev libgeoip-dev libglib2.0-dev        libjpeg-dev libkrb5-dev liblzma-dev        libmagickcore-dev
      libmagickwand-dev libmysqlclient-dev        libncurses5-dev libpq-dev libreadline-dev        libsqlite3-dev
      libssl-dev libtool libwebp-dev        libxml2-dev libxslt1-dev libyaml-dev make        patch
      xz-utils zlib1g-dev unzip curl        e2fsprogs iptables xfsprogs        mono-devel
      less groff liberror-perl        asciidoc build-essential bzr cvs cvsps docbook-xml
      docbook-xsl dpkg-dev        libdbd-sqlite3-perl libdbi-perl libdpkg-perl libhttp-date-perl        libio-pty-perl
      libserf-1-1 libsvn-perl libsvn1 libtcl8.6 libtimedate-perl        libxml2-utils
      libyaml-perl python-bzrlib python-configobj        sgml-base sgml-data subversion
      tcl tcl8.6 xml-core xmlto xsltproc        tk gettext gettext-base libapr1 libaprutil1
      xvfb expect parallel        locales rsync     && rm -rf /var/lib/apt/lists/*     &&
      apt-get clean'
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && wget "https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion-bin-net40-v${GITVERSION_VERSION}.zip"
      -O /tmp/GitVersion_${GITVERSION_VERSION}.zip     && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION}     &&
      unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION}     &&
      rm /tmp/GitVersion_${GITVERSION_VERSION}.zip     && echo "mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe
      \$@" >> /usr/local/bin/gitversion     && chmod +x /usr/local/bin/gitversion
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && curl -fSL "https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz"
      -o docker.tgz     && echo "${DOCKER_SHA256} *docker.tgz" | sha256sum -c -     &&
      tar --extract --file docker.tgz --strip-components 1  --directory /usr/local/bin/     &&
      rm docker.tgz     && docker -v     && addgroup dockremap     && useradd -g dockremap
      dockremap     && echo 'dockremap:165536:65536' >> /etc/subuid     && echo 'dockremap:165536:65536'
      >> /etc/subgid     && wget "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind"
      -O /usr/local/bin/dind     && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64
      > /usr/local/bin/docker-compose     && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose     &&
      docker-compose version
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS -o /usr/local/bin/aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/aws-iam-authenticator     &&
      curl -sS -o /usr/local/bin/kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/kubectl     &&
      curl -sS -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest     &&
      chmod +x /usr/local/bin/kubectl /usr/local/bin/aws-iam-authenticator /usr/local/bin/ecs-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && pip3 install --upgrade setuptools wheel     && pip3 install awscli
      boto3
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ssh_config
    - /root/.ssh/config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dockerd-entrypoint.sh
    - /usr/local/bin/
  - Env:
    - Key: NODE_VERSION
      Value: '"10.17.0"'
    - Key: YARN_VERSION
      Value: '"1.19.1"'
    Name: env
  - CmdLine:
    - ARCH= && dpkgArch="$(dpkg --print-architecture)"   && case "${dpkgArch##*-}"
      in     amd64) ARCH='x64';;     ppc64el) ARCH='ppc64le';;     s390x) ARCH='s390x';;     arm64)
      ARCH='arm64';;     armhf) ARCH='armv7l';;     i386) ARCH='x86';;     *) echo
      "unsupported architecture"; exit 1 ;;   esac   && set -ex   && for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     77984A986EBC2AA786BC0F66B01FBB92821C587A     8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600     4ED778F539E3634C779C87C6D7062848A1AB005C     A48C2BEE680E841632CD4E44F07496B3EB3C1762     B9E2F5981AA6E0CD28160D9FF13993A75599653C   ;
      do     gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;   done   && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"   &&
      curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep "
      node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c -   &&
      tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1
      --no-same-owner   && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc
      SHASUMS256.txt   && ln -s /usr/local/bin/node /usr/local/bin/nodejs   && node
      -v
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg
      --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key"
      ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;   done   && curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   &&
      curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   &&
      gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   &&
      mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn
      /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   &&
      rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && yarn -v
    Name: run
    PrependShell: true
  - Env:
    - Key: HUGO_VERSION
      Value: '"0.56.3"'
    Name: env
  - CmdLine:
    - set -ex   && curl -fsSLO --compressed "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz"   &&
      curl -fsSLO --compressed "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_checksums.txt"   &&
      grep " hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz\$" hugo_${HUGO_VERSION}_checksums.txt
      | sha256sum -c -   && tar -xzf hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz
      -C /usr/local/bin/   && rm hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz   &&
      rm hugo_${HUGO_VERSION}_checksums.txt   && hugo version
    Name: run
    PrependShell: true
  - Env:
    - Key: S3DEPLOY_VERSION
      Value: '"2.3.2"'
    Name: env
  - CmdLine:
    - set -ex   && curl -fsSLO --compressed "https://github.com/bep/s3deploy/releases/download/v${S3DEPLOY_VERSION}/s3deploy_${S3DEPLOY_VERSION}_Linux-64bit.tar.gz"   &&
      curl -fsSLO --compressed "https://github.com/bep/s3deploy/releases/download/v${S3DEPLOY_VERSION}/s3deploy_${S3DEPLOY_VERSION}_checksums.txt"   &&
      grep " s3deploy_${S3DEPLOY_VERSION}_Linux-64bit.tar.gz\$" s3deploy_${S3DEPLOY_VERSION}_checksums.txt
      | sha256sum -c -   && tar -xzf s3deploy_${S3DEPLOY_VERSION}_Linux-64bit.tar.gz
      -C /usr/local/bin/   && rm s3deploy_${S3DEPLOY_VERSION}_Linux-64bit.tar.gz   &&
      rm s3deploy_${S3DEPLOY_VERSION}_checksums.txt   && s3deploy -V
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - xvfb-fluxbox-run.sh
    - /usr/local/bin/xvfb-fluxbox-run
  - CmdLine:
    - set -ex     && chmod +x /usr/local/bin/xvfb-fluxbox-run     && apt-get update     &&
      apt-get install -y --no-install-recommends        xvfb fluxbox wmctrl psmisc     &&
      rm -rf /var/lib/apt/lists/*     && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && apt-add-repository "deb http://archive.canonical.com/ubuntu $(lsb_release
      -sc) partner"     && apt-add-repository ppa:malteworld/ppa && apt-get update     &&
      apt-get install -y libgtk-3-0 libglib2.0-0 libdbus-glib-1-2 libdbus-1-3 libasound2     &&
      wget -O ~/FirefoxSetup.tar.bz2 "https://download.mozilla.org/?product=firefox-latest&os=linux64"     &&
      tar xjf ~/FirefoxSetup.tar.bz2 -C /opt/     && ln -s /opt/firefox/firefox /usr/local/bin/firefox     &&
      rm ~/FirefoxSetup.tar.bz2     && firefox --version
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && curl --silent --show-error --location --fail --retry 3 --output
      /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb     &&
      (dpkg -i /tmp/google-chrome-stable_current_amd64.deb || apt-get -fy install)     &&
      rm -rf /tmp/google-chrome-stable_current_amd64.deb     && sed -i 's|HERE/chrome"|HERE/chrome"
      --disable-setuid-sandbox --no-sandbox|g' "/opt/google/chrome/google-chrome"     &&
      google-chrome --version
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
