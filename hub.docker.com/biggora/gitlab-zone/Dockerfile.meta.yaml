MetaArgs: null
Stages:
- BaseName: alpine:3.6
  Commands:
  - Maintainer: Alexey Gordeyev <aleksej@gordejev.lv>
    Name: maintainer
  - Env:
    - Key: NODE_SASS_PLATFORM
      Value: alpine
    Name: env
  - Env:
    - Key: LIBSASS_VERSION
      Value: 3.4.3
    Name: env
  - Env:
    - Key: SASSC_VERSION
      Value: 3.4.3
    Name: env
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 4.8.4
    Name: env
  - Env:
    - Key: YARN_VERSION
      Value: 0.24.4
    Name: env
  - CmdLine:
    - apk update &&     apk upgrade &&     apk add --no-cache bash git wget zip imagemagick
      python
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     &&
      apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         binutils-gold         curl         g++         gcc         gnupg         libgcc         linux-headers         make   &&
      for key in     9554F04D7259F04124DE6B476D5A82AC7E37093B     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     B9AE9905FFD7803F25714661B63B535A4C206CA9     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     56730D5401028683275BD23C23EFEFE93C4CFFFE   ;
      do     gpg --keyserver pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver
      keyserver.pgp.com --recv-keys "$key" ||     gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key" ;   done     && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz"     &&
      curl -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"     &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep
      " node-v$NODE_VERSION.tar.xz\$" SHASUMS256.txt | sha256sum -c -     && tar -xf
      "node-v$NODE_VERSION.tar.xz"     && cd "node-v$NODE_VERSION"     && ./configure     &&
      make -j$(getconf _NPROCESSORS_ONLN)     && make install     && apk del .build-deps     &&
      cd ..     && rm -Rf "node-v$NODE_VERSION"     && rm "node-v$NODE_VERSION.tar.xz"
      SHASUMS256.txt.asc SHASUMS256.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ;
      do     gpg --keyserver pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver
      keyserver.pgp.com --recv-keys "$key" ||     gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key" ;   done   && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz"   &&
      curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc"   &&
      gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   &&
      mkdir -p /opt/yarn   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1   &&
      ln -s /opt/yarn/bin/yarn /bin/yarn   && ln -s /opt/yarn/bin/yarn /bin/yarnpkg   &&
      rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - apk update && apk upgrade &&     apk add --no-cache --virtual .build-deps-sass     build-base     libstdc++     g++     curl
      &&     git clone https://github.com/sass/sassc &&     cd sassc &&     git clone
      https://github.com/sass/libsass &&     SASS_LIBSASS_PATH=/sassc/libsass make
      &&     mv bin/sassc /usr/bin/sass &&     apk del .build-deps-sass
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / && rm -rf /sassc &&     rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - yarn global add node-gyp bower gulp grunt-cli node-sass
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - Name: volume
    Volumes:
    - /usr/src/app
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.6
