MetaArgs: null
Stages:
- BaseName: flywheel/fsl-base:5.0.9-trusty
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Flywheel <support@flywheel.io>"'
    Name: label
  - Env:
    - Key: FSLDIR
      Value: /usr/share/fsl/5.0
    Name: env
  - Env:
    - Key: FSL_DIR
      Value: '"${FSLDIR}"'
    Name: env
  - Env:
    - Key: FSLOUTPUTTYPE
      Value: NIFTI_GZ
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/lib/fsl/5.0:$PATH
    Name: env
  - Env:
    - Key: FSLMULTIFILEQUIT
      Value: "TRUE"
    Name: env
  - Env:
    - Key: POSSUMDIR
      Value: /usr/share/fsl/5.0
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/lib/fsl/5.0:$LD_LIBRARY_PATH
    Name: env
  - Env:
    - Key: FSLTCLSH
      Value: /usr/bin/tclsh
    Name: env
  - Env:
    - Key: FSLWISH
      Value: /usr/bin/wish
    Name: env
  - CmdLine:
    - cd /opt/ &&     wget https://www.humanconnectome.org/storage/app/media/workbench/workbench-linux64-v1.3.2.zip
      -O workbench.zip &&     unzip workbench.zip &&     rm workbench.zip &&     cd
      /
    Name: run
    PrependShell: true
  - Env:
    - Key: CARET7DIR
      Value: /opt/workbench/bin_linux64
    Name: env
  - CmdLine:
    - wget -nv https://github.com/Washington-University/HCPpipelines/archive/v4.0.0.tar.gz
      -O pipelines.tar.gz &&     cd /opt/ &&     tar zxvf /pipelines.tar.gz &&     mv
      /opt/*ipelines* /opt/HCP-Pipelines &&     rm /pipelines.tar.gz &&     cd /
    Name: run
    PrependShell: true
  - Env:
    - Key: FSL_DIR
      Value: '"${FSLDIR}"'
    Name: env
  - Env:
    - Key: HCPPIPEDIR
      Value: /opt/HCP-Pipelines
    Name: env
  - Env:
    - Key: MSMBINDIR
      Value: ${HCPPIPEDIR}/MSMBinaries
    Name: env
  - Env:
    - Key: MSMCONFIGDIR
      Value: ${HCPPIPEDIR}/MSMConfig
    Name: env
  - Env:
    - Key: MSMBin
      Value: ${HCPPIPEDIR}/MSMBinaries
    Name: env
  - Env:
    - Key: HCPPIPEDIR_Templates
      Value: ${HCPPIPEDIR}/global/templates
    Name: env
  - Env:
    - Key: HCPPIPEDIR_Bin
      Value: ${HCPPIPEDIR}/global/binaries
    Name: env
  - Env:
    - Key: HCPPIPEDIR_Config
      Value: ${HCPPIPEDIR}/global/config
    Name: env
  - Env:
    - Key: HCPPIPEDIR_PreFS
      Value: ${HCPPIPEDIR}/PreFreeSurfer/scripts
    Name: env
  - Env:
    - Key: HCPPIPEDIR_FS
      Value: ${HCPPIPEDIR}/FreeSurfer/scripts
    Name: env
  - Env:
    - Key: HCPPIPEDIR_PostFS
      Value: ${HCPPIPEDIR}/PostFreeSurfer/scripts
    Name: env
  - Env:
    - Key: HCPPIPEDIR_fMRISurf
      Value: ${HCPPIPEDIR}/fMRISurface/scripts
    Name: env
  - Env:
    - Key: HCPPIPEDIR_fMRIVol
      Value: ${HCPPIPEDIR}/fMRIVolume/scripts
    Name: env
  - Env:
    - Key: HCPPIPEDIR_tfMRI
      Value: ${HCPPIPEDIR}/tfMRI/scripts
    Name: env
  - Env:
    - Key: HCPPIPEDIR_dMRI
      Value: ${HCPPIPEDIR}/DiffusionPreprocessing/scripts
    Name: env
  - Env:
    - Key: HCPPIPEDIR_dMRITract
      Value: ${HCPPIPEDIR}/DiffusionTractography/scripts
    Name: env
  - Env:
    - Key: HCPPIPEDIR_Global
      Value: ${HCPPIPEDIR}/global/scripts
    Name: env
  - Env:
    - Key: HCPPIPEDIR_tfMRIAnalysis
      Value: ${HCPPIPEDIR}/TaskfMRIAnalysis/scripts
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: C
    Name: env
  - CmdLine:
    - unset POSIXLY_CORRECT
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update     && apt-get install -y wget &&     wget -nv -O- ftp://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/5.3.0-HCP/freesurfer-Linux-centos4_x86_64-stable-pub-v5.3.0-HCP.tar.gz
      | tar zxv -C /opt     --exclude='freesurfer/trctrain'     --exclude='freesurfer/subjects/fsaverage_sym'     --exclude='freesurfer/subjects/fsaverage3'     --exclude='freesurfer/subjects/fsaverage4'     --exclude='freesurfer/subjects/fsaverage5'     --exclude='freesurfer/subjects/fsaverage6'     --exclude='freesurfer/subjects/cvs_avg35'     --exclude='freesurfer/subjects/cvs_avg35_inMNI152'     --exclude='freesurfer/subjects/bert'     --exclude='freesurfer/subjects/V1_average'     --exclude='freesurfer/average/mult-comp-cor'     --exclude='freesurfer/lib/cuda'     --exclude='freesurfer/lib/qt'
      &&     apt-get install -y tcsh bc tar libgomp1 perl-modules curl
    Name: run
    PrependShell: true
  - Env:
    - Key: OS
      Value: Linux
    Name: env
  - Env:
    - Key: FS_OVERRIDE
      Value: "0"
    Name: env
  - Env:
    - Key: FIX_VERTEX_AREA
      Value: ""
    Name: env
  - Env:
    - Key: SUBJECTS_DIR
      Value: /opt/freesurfer/subjects
    Name: env
  - Env:
    - Key: FSF_OUTPUT_FORMAT
      Value: nii.gz
    Name: env
  - Env:
    - Key: MNI_DIR
      Value: /opt/freesurfer/mni
    Name: env
  - Env:
    - Key: LOCAL_DIR
      Value: /opt/freesurfer/local
    Name: env
  - Env:
    - Key: FREESURFER_HOME
      Value: /opt/freesurfer
    Name: env
  - Env:
    - Key: FSFAST_HOME
      Value: /opt/freesurfer/fsfast
    Name: env
  - Env:
    - Key: MINC_BIN_DIR
      Value: /opt/freesurfer/mni/bin
    Name: env
  - Env:
    - Key: MINC_LIB_DIR
      Value: /opt/freesurfer/mni/lib
    Name: env
  - Env:
    - Key: MNI_DATAPATH
      Value: /opt/freesurfer/mni/data
    Name: env
  - Env:
    - Key: FMRI_ANALYSIS_DIR
      Value: /opt/freesurfer/fsfast
    Name: env
  - Env:
    - Key: PERL5LIB
      Value: /opt/freesurfer/mni/lib/perl5/5.8.5
    Name: env
  - Env:
    - Key: MNI_PERL5LIB
      Value: /opt/freesurfer/mni/lib/perl5/5.8.5
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/freesurfer/bin:/opt/freesurfer/fsfast/bin:/opt/freesurfer/tktools:/opt/freesurfer/mni/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get -y update     && apt-get install -y --no-install-recommends     python-dev     python-numpy     python-scipy     python-nibabel
      &&     wget -nv https://github.com/Washington-University/gradunwarp/archive/v1.0.3.tar.gz
      -O gradunwarp.tar.gz &&     cd /opt/ &&     tar zxvf /gradunwarp.tar.gz &&     mv
      /opt/gradunwarp-* /opt/gradunwarp &&     cd /opt/gradunwarp/ &&     python setup.py
      install &&     rm /gradunwarp.tar.gz &&     cd /
    Name: run
    PrependShell: true
  - Env:
    - Key: MSMBINDIR
      Value: ${HCPPIPEDIR}/MSMBinaries
    Name: env
  - CmdLine:
    - mkdir -p ${MSMBINDIR} &&     wget -nv https://github.com/ecr05/MSM_HOCR/releases/download/1.0/msm_ubuntu14.04
      -O ${MSMBINDIR}/msm &&     chmod +x ${MSMBINDIR}/msm
    Name: run
    PrependShell: true
  - Env:
    - Key: FLYWHEEL
      Value: /flywheel/v0
    Name: env
  - Name: workdir
    Path: ${FLYWHEEL}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - ${FLYWHEEL}/requirements.txt
  - CmdLine:
    - apt-get install -y --no-install-recommends     gawk     python3-pip     zip     unzip     gzip
      &&     pip3 install --upgrade pip &&     apt-get remove -y python3-urllib3 &&     pip3.4
      install -r requirements.txt &&     rm -rf /root/.cache/pip &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run.py
    - ${FLYWHEEL}/run.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - utils
    - ${FLYWHEEL}/utils
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - manifest.json
    - ${FLYWHEEL}/manifest.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts
    - /tmp/scripts
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scenes
    - /tmp/scenes
  - CmdLine:
    - python -c 'import os, json; f = open("/tmp/gear_environ.json", "w"); json.dump(dict(os.environ),
      f)'
    Name: run
    PrependShell: true
  - CmdLine:
    - /flywheel/v0/run.py
    Name: entrypoint
    PrependShell: false
  From:
    Image: flywheel/fsl-base:5.0.9-trusty
  Name: ""
  Platform: ""
  SourceCode: FROM flywheel/fsl-base:5.0.9-trusty
