MetaArgs: null
Stages:
- BaseName: ubuntu:trusty-20170817
  Commands:
  - Maintainer: Flywheel <support@flywheel.io>
    Name: maintainer
  - CmdLine:
    - apt-get update     && apt-get install -y     lsb-core     bsdtar     zip     unzip     gzip     curl     jq     python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update     && apt-get install -y wget &&     wget -nv -O- ftp://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/5.3.0-HCP/freesurfer-Linux-centos4_x86_64-stable-pub-v5.3.0-HCP.tar.gz
      | tar zxv -C /opt     --exclude='freesurfer/trctrain'     --exclude='freesurfer/subjects/fsaverage_sym'     --exclude='freesurfer/subjects/fsaverage3'     --exclude='freesurfer/subjects/fsaverage4'     --exclude='freesurfer/subjects/fsaverage5'     --exclude='freesurfer/subjects/fsaverage6'     --exclude='freesurfer/subjects/cvs_avg35'     --exclude='freesurfer/subjects/cvs_avg35_inMNI152'     --exclude='freesurfer/subjects/bert'     --exclude='freesurfer/subjects/V1_average'     --exclude='freesurfer/average/mult-comp-cor'     --exclude='freesurfer/lib/cuda'     --exclude='freesurfer/lib/qt'
      &&     apt-get install -y tcsh bc tar libgomp1 perl-modules curl  &&     rm
      -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: OS
      Value: Linux
    Name: env
  - Env:
    - Key: FS_OVERRIDE
      Value: "0"
    Name: env
  - Env:
    - Key: FIX_VERTEX_AREA
      Value: ""
    Name: env
  - Env:
    - Key: SUBJECTS_DIR
      Value: /opt/freesurfer/subjects
    Name: env
  - Env:
    - Key: FSF_OUTPUT_FORMAT
      Value: nii.gz
    Name: env
  - Env:
    - Key: MNI_DIR
      Value: /opt/freesurfer/mni
    Name: env
  - Env:
    - Key: LOCAL_DIR
      Value: /opt/freesurfer/local
    Name: env
  - Env:
    - Key: FREESURFER_HOME
      Value: /opt/freesurfer
    Name: env
  - Env:
    - Key: FSFAST_HOME
      Value: /opt/freesurfer/fsfast
    Name: env
  - Env:
    - Key: MINC_BIN_DIR
      Value: /opt/freesurfer/mni/bin
    Name: env
  - Env:
    - Key: MINC_LIB_DIR
      Value: /opt/freesurfer/mni/lib
    Name: env
  - Env:
    - Key: MNI_DATAPATH
      Value: /opt/freesurfer/mni/data
    Name: env
  - Env:
    - Key: FMRI_ANALYSIS_DIR
      Value: /opt/freesurfer/fsfast
    Name: env
  - Env:
    - Key: PERL5LIB
      Value: /opt/freesurfer/mni/lib/perl5/5.8.5
    Name: env
  - Env:
    - Key: MNI_PERL5LIB
      Value: /opt/freesurfer/mni/lib/perl5/5.8.5
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/freesurfer/bin:/opt/freesurfer/fsfast/bin:/opt/freesurfer/tktools:/opt/freesurfer/mni/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - neurodebian_pgpkey.txt
    - /tmp/
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends curl &&     curl
      -sSL http://neuro.debian.net/lists/trusty.us-ca.full >> /etc/apt/sources.list.d/neurodebian.sources.list
      &&     apt-key add /tmp/neurodebian_pgpkey.txt &&     apt-get update &&     apt-get
      install -y fsl-core &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: FSLDIR
      Value: /usr/share/fsl/5.0
    Name: env
  - Env:
    - Key: FSL_DIR
      Value: '"${FSLDIR}"'
    Name: env
  - Env:
    - Key: FSLOUTPUTTYPE
      Value: NIFTI_GZ
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/lib/fsl/5.0:$PATH
    Name: env
  - Env:
    - Key: FSLMULTIFILEQUIT
      Value: "TRUE"
    Name: env
  - Env:
    - Key: POSSUMDIR
      Value: /usr/share/fsl/5.0
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/lib/fsl/5.0:$LD_LIBRARY_PATH
    Name: env
  - Env:
    - Key: FSLTCLSH
      Value: /usr/bin/tclsh
    Name: env
  - Env:
    - Key: FSLWISH
      Value: /usr/bin/wish
    Name: env
  - Env:
    - Key: FSLOUTPUTTYPE
      Value: NIFTI_GZ
    Name: env
  - CmdLine:
    - apt-get -y update &&     apt-get install -y wget &&     wget -nv https://fsl.fmrib.ox.ac.uk/fsldownloads/patches/eddy-patch-fsl-5.0.11/centos6/eddy_openmp
      -O eddy_openmp &&     chmod +x eddy_openmp &&     mv eddy_openmp ${FSLDIR}/bin/
      &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get -y install connectome-workbench=1.2.3-1~nd14.04+1
    Name: run
    PrependShell: true
  - Env:
    - Key: CARET7DIR
      Value: /usr/bin
    Name: env
  - CmdLine:
    - apt-get -y update     && apt-get install -y --no-install-recommends python-dev
      &&     apt-get install -y --no-install-recommends python-numpy &&     apt-get
      install -y --no-install-recommends python-scipy &&     apt-get install -y --no-install-recommends
      python-nibabel &&     wget -nv https://github.com/Washington-University/gradunwarp/archive/bab8930e37f1b8ad3a7e274b07c5b3f0f096be85.tar.gz
      -O gradunwarp.tar.gz &&     cd /opt/ &&     tar zxvf /gradunwarp.tar.gz &&     mv
      /opt/gradunwarp-* /opt/gradunwarp &&     cd /opt/gradunwarp/ &&     python setup.py
      install &&     rm /gradunwarp.tar.gz &&     cd / &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update     && apt-get install -y --no-install-recommends python-numpy
      &&     wget -nv https://github.com/Washington-University/Pipelines/archive/90b0766636ba83f06c9198206cc7fa90117b0b11.tar.gz
      -O pipelines.tar.gz &&     cd /opt/ &&     tar zxvf /pipelines.tar.gz &&     mv
      /opt/*ipelines* /opt/HCP-Pipelines &&     rm /pipelines.tar.gz &&     cd / &&     rm
      -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: HCPPIPEDIR
      Value: /opt/HCP-Pipelines
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pipeline_patch/
    - ${HCPPIPEDIR}/
  - Env:
    - Key: FLYWHEEL
      Value: /flywheel/v0
    Name: env
  - Name: workdir
    Path: ${FLYWHEEL}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run
    - ${FLYWHEEL}/run
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - manifest.json
    - ${FLYWHEEL}/manifest.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/*.sh
    - scripts/*.bat
    - ${FLYWHEEL}/scripts/
  - CmdLine:
    - env -u HOSTNAME -u PWD |   awk -F = '{ print "export " $1 "=\"" $2 "\"" }' >
      ${FLYWHEEL}/docker-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /flywheel/v0/run
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:trusty-20170817
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty-20170817
