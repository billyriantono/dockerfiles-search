MetaArgs: null
Stages:
- BaseName: ubuntu:trusty-20170817
  Commands:
  - Maintainer: Flywheel <support@flywheel.io>
    Name: maintainer
  - CmdLine:
    - apt-get update     && apt-get install -y     lsb-core     bsdtar     zip     unzip     gzip     curl     jq     python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9 &&     echo
      "deb http://cran.rstudio.com/bin/linux/ubuntu trusty/" >> /etc/apt/sources.list.d/cran-rstudio.list
      &&     apt-get update &&     apt-get install -y --no-install-recommends r-base-core=3.3.1-*
      r-base-dev=3.3.1-* &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "r <- getOption('repos'); r['CRAN'] <- 'http://cran.us.r-project.org';
      options(repos = r);" > ~/.Rprofile
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e 'install.packages("kernlab", dependencies=TRUE)'
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e 'install.packages("ROCR", dependencies=TRUE)'
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e 'install.packages("class", dependencies=TRUE)'
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e 'install.packages("party", dependencies=TRUE)'
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e 'install.packages("e1071", dependencies=TRUE)'
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e 'install.packages("randomForest", dependencies=TRUE)'
    Name: run
    PrependShell: true
  - CmdLine:
    - Rscript -e 'install.packages("https://cran.r-project.org/src/contrib/Archive/party/party_1.0-25.tar.gz",
      repos=NULL, type="source")'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update &&     apt-get install -y wget &&     wget -nv http://www.fmrib.ox.ac.uk/~steve/ftp/fix1.066.tar.gz
      -O /fix.tar.gz &&     mkdir -p /tmp/fix &&     cd /tmp/fix &&     tar zxvf /fix.tar.gz
      --exclude="compiled/"  --exclude="MCRInstaller.zip" &&     mv /tmp/fix/fix*
      /opt/fix &&     rm /fix.tar.gz &&     cd / &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: FSL_FIXDIR
      Value: /opt/fix
    Name: env
  - CmdLine:
    - apt-get -qq update && apt-get -qq install -y     unzip     xorg     wget     curl
      &&     mkdir /mcr-install &&     mkdir /opt/mcr &&     cd /mcr-install &&     wget
      -nv http://www.mathworks.com/supportfiles/downloads/R2015a/deployment_files/R2015a/installers/glnxa64/MCR_R2015a_glnxa64_installer.zip
      &&     cd /mcr-install &&     unzip -q MCR_R2015a_glnxa64_installer.zip &&     ./install
      -destinationFolder /opt/mcr -agreeToLicense yes -mode silent &&     cd / &&     rm
      -rf mcr-install
    Name: run
    PrependShell: true
  - Env:
    - Key: XAPPLRESDIR
      Value: /opt/mcr/v85/X11/app-defaults
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - neurodebian_pgpkey.txt
    - /tmp/
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends curl &&     curl
      -sSL http://neuro.debian.net/lists/trusty.us-ca.full >> /etc/apt/sources.list.d/neurodebian.sources.list
      &&     apt-key add /tmp/neurodebian_pgpkey.txt &&     apt-get update &&     apt-get
      install -y fsl-core &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: FSLDIR
      Value: /usr/share/fsl/5.0
    Name: env
  - Env:
    - Key: FSL_DIR
      Value: '"${FSLDIR}"'
    Name: env
  - Env:
    - Key: FSLOUTPUTTYPE
      Value: NIFTI_GZ
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/lib/fsl/5.0:$PATH
    Name: env
  - Env:
    - Key: FSLMULTIFILEQUIT
      Value: "TRUE"
    Name: env
  - Env:
    - Key: POSSUMDIR
      Value: /usr/share/fsl/5.0
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/lib/fsl/5.0:$LD_LIBRARY_PATH
    Name: env
  - Env:
    - Key: FSLTCLSH
      Value: /usr/bin/tclsh
    Name: env
  - Env:
    - Key: FSLWISH
      Value: /usr/bin/wish
    Name: env
  - Env:
    - Key: FSLOUTPUTTYPE
      Value: NIFTI_GZ
    Name: env
  - CmdLine:
    - apt-get update && apt-get -y install connectome-workbench=1.2.3-1~nd14.04+1
    Name: run
    PrependShell: true
  - Env:
    - Key: CARET7DIR
      Value: /usr/bin
    Name: env
  - CmdLine:
    - apt-get -y update &&     apt-get install -y wget &&     apt-get install -y --no-install-recommends
      python-numpy &&     wget -nv https://github.com/Washington-University/Pipelines/archive/90b0766636ba83f06c9198206cc7fa90117b0b11.tar.gz
      -O pipelines.tar.gz &&     cd /opt/ &&     tar zxvf /pipelines.tar.gz &&     mv
      /opt/*ipelines* /opt/HCP-Pipelines &&     rm /pipelines.tar.gz &&     cd / &&     rm
      -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: HCPPIPEDIR
      Value: /opt/HCP-Pipelines
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pipeline_patch/
    - ${HCPPIPEDIR}/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - fix_patch/
    - ${FSL_FIXDIR}/
  - Env:
    - Key: FLYWHEEL
      Value: /flywheel/v0
    Name: env
  - Name: workdir
    Path: ${FLYWHEEL}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run
    - ${FLYWHEEL}/run
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - manifest.json
    - ${FLYWHEEL}/manifest.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/*.sh
    - scripts/*.bat
    - ${FLYWHEEL}/scripts/
  - CmdLine:
    - env -u HOSTNAME -u PWD |   awk -F = '{ print "export " $1 "=\"" $2 "\"" }' >
      ${FLYWHEEL}/docker-env.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /flywheel/v0/run
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:trusty-20170817
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty-20170817
