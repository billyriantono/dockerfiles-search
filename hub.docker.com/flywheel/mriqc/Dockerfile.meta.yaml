MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - CmdLine:
    - groupadd -r mysql && useradd -r -g mysql mysql
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true \t&& apt-get purge -y --auto-remove ca-certificates wget"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y perl --no-install-recommends && rm -rf
      /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libaio1 pwgen && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: MYSQL_MAJOR
      Value: "5.5"
    Name: env
  - Env:
    - Key: MYSQL_VERSION
      Value: 5.5.58
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y ca-certificates wget --no-install-recommends
      && rm -rf /var/lib/apt/lists/* \t&& wget \"https://cdn.mysql.com/Downloads/MySQL-$MYSQL_MAJOR/mysql-$MYSQL_VERSION-linux-glibc2.12-x86_64.tar.gz\"
      -O mysql.tar.gz \t&& wget \"https://cdn.mysql.com/Downloads/MySQL-$MYSQL_MAJOR/mysql-$MYSQL_VERSION-linux-glibc2.12-x86_64.tar.gz.asc\"
      -O mysql.tar.gz.asc \t&& apt-get purge -y --auto-remove ca-certificates wget
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5 \t&& gpg --batch --verify
      mysql.tar.gz.asc mysql.tar.gz \t&& rm -r \"$GNUPGHOME\" mysql.tar.gz.asc \t&&
      mkdir /usr/local/mysql \t&& tar -xzf mysql.tar.gz -C /usr/local/mysql --strip-components=1
      \t&& rm mysql.tar.gz \t&& rm -rf /usr/local/mysql/mysql-test /usr/local/mysql/sql-bench
      \t&& rm -rf /usr/local/mysql/bin/*-debug /usr/local/mysql/bin/*_embedded \t&&
      find /usr/local/mysql -type f -name \"*.a\" -delete \t&& apt-get update && apt-get
      install -y binutils && rm -rf /var/lib/apt/lists/* \t&& { find /usr/local/mysql
      -type f -executable -exec strip --strip-all '{}' + || true; } \t&& apt-get purge
      -y --auto-remove binutils"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/mysql/bin:/usr/local/mysql/scripts
    Name: env
  - CmdLine:
    - "mkdir -p /etc/mysql/conf.d \t&& { \t\techo '[mysqld]'; \t\techo 'skip-host-cache';
      \t\techo 'skip-name-resolve'; \t\techo 'datadir = /var/lib/mysql'; \t\techo
      '!includedir /etc/mysql/conf.d/'; \t\techo 'server-id = 1'; \t\techo 'log-bin
      = mysql-bin'; \t\techo 'relay-log = relay-bin'; \t\techo 'relay-log-index =
      relay-bin-index'; \t\techo 'binlog-ignore-db = mysql'; \t\techo 'binlog-ignore-db
      = information_schema'; \t\techo 'character-set-server = utf8'; \t\techo 'max_connections
      = 1500'; \t} > /etc/mysql/my.cnf"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /var/lib/mysql /var/run/mysqld \t&& chown -R mysql:mysql /var/lib/mysql
      /var/run/mysqld \t&& chmod 777 /var/run/mysqld"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/mysql
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod 777 /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - 'ln -s /usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat'
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "3306"
  - CmdLine:
    - mysqld
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
