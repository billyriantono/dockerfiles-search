{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "mhart/alpine-node:10",
      "SourceCode": "FROM mhart/alpine-node:10",
      "Platform": "",
      "From": {
        "Image": "mhart/alpine-node:10"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo \"**** install Python ****\" \u0026\u0026     apk add --no-cache python3 \u0026\u0026     if [ ! -e /usr/bin/python ]; then ln -sf python3 /usr/bin/python ; fi \u0026\u0026         echo \"**** install pip ****\" \u0026\u0026     python3 -m ensurepip \u0026\u0026     rm -r /usr/lib/python*/ensurepip \u0026\u0026     pip3 install --no-cache --upgrade pip setuptools wheel \u0026\u0026     if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk -v --update add \t\tgit         groff         openssh-client         less         mailcap         tar         gzip         ca-certificates         sudo         bash         curl         \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install urllib3==1.21.1 \u0026\u0026     pip install --upgrade awscli \u0026\u0026     pip install --upgrade awsebcli \u0026\u0026     rm /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \u0026\u0026     ALPINE_GLIBC_PACKAGE_VERSION=\"2.29-r0\" \u0026\u0026     ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     apk add --no-cache --virtual=.build-dependencies wget ca-certificates \u0026\u0026     echo         \"-----BEGIN PUBLIC KEY-----        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m        y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu        tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp        m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY        KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc        Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m        1QIDAQAB        -----END PUBLIC KEY-----\" | sed 's/   */\\n/g' \u003e \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026     wget         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026     apk add --no-cache         \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026         rm \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026     /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \u0026\u0026     echo \"export LANG=$LANG\" \u003e /etc/profile.d/locale.sh \u0026\u0026         apk del glibc-i18n \u0026\u0026         rm \"/root/.wget-hsts\" \u0026\u0026     apk del .build-dependencies \u0026\u0026     rm         \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/bin\\/ash/bin\\/bash/\" /etc/passwd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PUID",
              "Value": "3434"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGID",
              "Value": "3434"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CIRCLECI_USER",
              "Value": "circleci"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup -g ${PGID} ${CIRCLECI_USER} \u0026\u0026     adduser -u ${PUID} -S -D ${CIRCLECI_USER} -G  ${CIRCLECI_USER} -h /home/${CIRCLECI_USER} \u0026\u0026     echo \"${CIRCLECI_USER} ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${CIRCLECI_USER}"
        },
        {
          "Name": "workdir",
          "Path": "/home/${CIRCLECI_USER}"
        },
        {
          "CmdLine": [
            "touch .bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BASH_ENV",
              "Value": "/home/${CIRCLECI_USER}/.bashrc"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}