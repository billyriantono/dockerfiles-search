{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"joelnbarnham@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.10.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual build-deps \t\tbuild-base \t\tgit \t\tgnupg \t\twget \t\u0026\u0026 \tapk add --no-cache \t\topenssl-dev \t\tpcre-dev \t\tpython \t\tzlib-dev \t\u0026\u0026 \tapk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/ \t\ttini \t\u0026\u0026 \twget -O - http://nginx.org/keys/mdounin.key | gpg --import \u0026\u0026 \twget -O /tmp/nginx-${NGINX_VERSION}.tar.gz http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \u0026\u0026 \twget -O /tmp/nginx-${NGINX_VERSION}.tar.gz.asc http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz.asc \u0026\u0026 \tgpg --verify /tmp/nginx-${NGINX_VERSION}.tar.gz.asc \u0026\u0026 \tcd /tmp \u0026\u0026 \tgit clone https://github.com/atomx/nginx-http-auth-digest.git \u0026\u0026 \ttar zxvf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026 \tcd nginx-${NGINX_VERSION} \u0026\u0026 \t./configure \t\t--with-http_ssl_module \t\t--with-http_gzip_static_module \t\t--prefix=/etc/nginx \t\t--http-log-path=/var/log/nginx/access.log \t\t--error-log-path=/var/log/nginx/error.log \t\t--sbin-path=/usr/local/sbin/nginx \t\t--add-module=../nginx-http-auth-digest \t\u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \tcp /tmp/nginx-http-auth-digest/htdigest.py /usr/local/bin/ \u0026\u0026 \tapk del build-deps \u0026\u0026 \trm -rf /tmp/* \u0026\u0026 \t:"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/httpd/conf/ \u0026\u0026 \tcp -r /etc/nginx/html/ /etc/nginx/private/ \u0026\u0026 \t:"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/conf/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "passwd.digest",
            "/opt/httpd/conf/"
          ]
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}