MetaArgs: null
Stages:
- BaseName: circleci/openjdk:8u232-jdk
  Commands:
  - Env:
    - Key: SCALA_VERSION
      Value: 2.13.1
    Name: env
  - Env:
    - Key: SBT_VERSION
      Value: 1.3.6
    Name: env
  - Env:
    - Key: KUBECTL_VERSION
      Value: v1.16.1
    Name: env
  - Env:
    - Key: SONAR_SCANNER_VERSION
      Value: 3.3.0.1492
    Name: env
  - Env:
    - Key: SONAR_SCANNER_PACKAGE
      Value: sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
    Name: env
  - Name: user
    User: root
  - Name: shell
    Shell:
    - /bin/bash
    - -eo
    - pipefail
    - -x
    - -c
  - CmdLine:
    - touch /usr/lib/jvm/java-8-openjdk-amd64/release &&   curl -fsL https://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz
      | tar xfz - -C /opt/ &&   ln -s /opt/scala-* /opt/scala &&   /opt/scala/bin/scala
      -version
    Name: run
    PrependShell: true
  - CmdLine:
    - export TEMP="$(mktemp -d)" &&     cd "${TEMP}" &&     echo "class Question {
      def answer = 42 }" > Question.scala &&     sbt -Dsbt.version=$SBT_VERSION "set
      scalaVersion := \"${SCALA_VERSION}\"" compile &&     rm -r "${TEMP}"
    Name: run
    PrependShell: true
  - CmdLine:
    - sbt --version
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://s3.amazonaws.com/aws-cli/awscli-bundle.zip -o awscli-bundle.zip
      &&   unzip awscli-bundle.zip &&   ./awscli-bundle/install -i /usr/local/aws
      -b /usr/local/bin/aws &&   rm awscli-bundle.zip &&   rm -Rf awscli-bundle &&   /usr/local/bin/aws
      --version
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
      &&   mv kubectl /usr/local/bin/kubectl &&   chmod +x /usr/local/bin/kubectl
      &&   kubectl version --client
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LO https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/$SONAR_SCANNER_PACKAGE
      &&   unzip ${SONAR_SCANNER_PACKAGE} -d /opt/ &&   ln -s /opt/sonar-scanner-*
      /opt/sonar-scanner &&   rm ${SONAR_SCANNER_PACKAGE}
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/opt/scala/bin:/opt/sonar-scanner/bin:$PATH"'
    Name: env
  - Name: user
    User: circleci
  - Name: workdir
    Path: /home/circleci
  - CmdLine:
    - echo -e "Tag for this image:\n8u232-${SCALA_VERSION}-sbt-${SBT_VERSION}"
    Name: run
    PrependShell: true
  From:
    Image: circleci/openjdk:8u232-jdk
  Name: ""
  Platform: ""
  SourceCode: FROM circleci/openjdk:8u232-jdk
