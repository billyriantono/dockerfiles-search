{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm",
      "SourceCode": "FROM php:7.2-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y vim git-core libsqlite3-dev libpq-dev libmcrypt-dev libpng-dev libjpeg-dev libz-dev libmemcached-dev libphp-predis \u0026\u0026 rm -rf /var/lib/apt/lists/*         \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr         \u0026\u0026 docker-php-ext-install gd mysqli zip mbstring pdo pdo_mysql pdo_sqlite pdo_pgsql json opcache \t\u0026\u0026 pecl install memcached redis \t\u0026\u0026 docker-php-ext-enable memcached redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=256'; \t\techo 'opcache.interned_strings_buffer=64'; \t\techo 'opcache.max_accelerated_files=32530'; \t\techo 'opcache.revalidate_freq=60'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1';         echo 'opcache.enable=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "RESTY_VERSION",
          "Name": "arg",
          "Value": "\"1.13.6.1\""
        },
        {
          "Key": "RESTY_LUAROCKS_VERSION",
          "Name": "arg",
          "Value": "\"2.4.3\""
        },
        {
          "Key": "RESTY_OPENSSL_VERSION",
          "Name": "arg",
          "Value": "\"1.0.2k\""
        },
        {
          "Key": "RESTY_PCRE_VERSION",
          "Name": "arg",
          "Value": "\"8.41\""
        },
        {
          "Key": "RESTY_J",
          "Name": "arg",
          "Value": "\"1\""
        },
        {
          "Key": "RESTY_CONFIG_OPTIONS",
          "Name": "arg",
          "Value": "\"    --with-file-aio     --with-http_addition_module     --with-http_auth_request_module     --with-http_dav_module     --with-http_flv_module     --with-http_geoip_module=dynamic     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_image_filter_module=dynamic     --with-http_mp4_module     --with-http_random_index_module     --with-http_realip_module     --with-http_secure_link_module     --with-http_slice_module     --with-http_ssl_module     --with-http_stub_status_module     --with-http_sub_module     --with-http_v2_module     --with-http_xslt_module=dynamic     --with-ipv6     --with-mail     --with-mail_ssl_module     --with-md5-asm     --with-pcre-jit     --with-sha1-asm     --with-stream     --with-stream_ssl_module     --with-threads     \""
        },
        {
          "Key": "RESTY_CONFIG_OPTIONS_MORE",
          "Name": "arg",
          "Value": "\"\""
        },
        {
          "Key": "_RESTY_CONFIG_DEPS",
          "Name": "arg",
          "Value": "\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\""
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends         build-essential         ca-certificates         curl         gettext-base         libgd-dev         libgeoip-dev         libncurses5-dev         libperl-dev         libreadline-dev         libxslt1-dev         make         perl         unzip         zlib1g-dev     \u0026\u0026 cd /tmp     \u0026\u0026 curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz     \u0026\u0026 tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz     \u0026\u0026 curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz     \u0026\u0026 tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz     \u0026\u0026 curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz     \u0026\u0026 tar xzf openresty-${RESTY_VERSION}.tar.gz     \u0026\u0026 cd /tmp/openresty-${RESTY_VERSION}     \u0026\u0026 ./configure -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE}     \u0026\u0026 make -j${RESTY_J}     \u0026\u0026 make -j${RESTY_J} install     \u0026\u0026 cd /tmp     \u0026\u0026 rm -rf         openssl-${RESTY_OPENSSL_VERSION}         openssl-${RESTY_OPENSSL_VERSION}.tar.gz         openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION}         pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION}     \u0026\u0026 curl -fSL https://github.com/luarocks/luarocks/archive/${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz     \u0026\u0026 tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz     \u0026\u0026 cd luarocks-${RESTY_LUAROCKS_VERSION}     \u0026\u0026 ./configure         --prefix=/usr/local/openresty/luajit         --with-lua=/usr/local/openresty/luajit         --lua-suffix=jit-2.1.0-beta3         --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1     \u0026\u0026 make build     \u0026\u0026 make install     \u0026\u0026 cd /tmp     \u0026\u0026 rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz     \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get autoremove -y     \u0026\u0026 ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log     \u0026\u0026 ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/openresty/luajit/bin/:/usr/local/openresty/nginx/sbin/:/usr/local/openresty/bin/"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/usr/local/openresty/nginx/conf/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.laravel.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 cd /usr/local/etc \t\u0026\u0026 {       sed -i 's!pm.max_children = 5!pm.max_children = 100!g' php-fpm.d/www.conf;       sed -i 's!pm.max_spare_servers = 3!pm.max_spare_servers = 12!g' php-fpm.d/www.conf;       sed -i 's!pm.start_servers = 2!pm.start_servers = 10!g' php-fpm.d/www.conf;     }     \u0026\u0026 {         echo '[www]'; \t\techo 'slowlog = /var/log/king.log.slow'; \t\techo \"request_slowlog_timeout = 1\"; \t} | tee php-fpm.d/slowlog.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /var/log/king.log.slow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 777 /var/log/king.log.slow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y\u0026\u0026apt-get upgrade -y\u0026\u0026apt-get install -y supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./conf.d/service.ini",
            "/etc/supervisor/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-start",
            "/usr/bin"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /usr/bin/docker-start"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /root/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/log/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./bitsee-laravel/",
            "/root/src"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "echo \"Asia/Shanghai\" \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}