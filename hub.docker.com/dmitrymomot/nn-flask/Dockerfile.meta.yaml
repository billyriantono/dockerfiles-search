MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Dmitry Momot <mail@dmomot.com>
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y python-mpltoolkits.basemap
    Name: run
    PrependShell: true
  - CmdLine:
    - NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5
      &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key
      adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub
      &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n
      +5 > cudasign.pub &&     echo "$NVIDIA_GPGKEY_SUM  cudasign.pub" | sha256sum
      -c --strict - && rm cudasign.pub &&     echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64
      /" > /etc/apt/sources.list.d/cuda.list
    Name: run
    PrependShell: true
  - Env:
    - Key: CUDA_VERSION
      Value: 8.0.61
    Name: env
  - Labels:
    - Key: com.nvidia.cuda.version
      Value: '"${CUDA_VERSION}"'
    Name: label
  - Env:
    - Key: NVIDIA_CUDA_VERSION
      Value: $CUDA_VERSION
    Name: env
  - Env:
    - Key: CUDA_PKG_VERSION
      Value: 8-0=$CUDA_VERSION-1
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         cuda-nvrtc-$CUDA_PKG_VERSION         cuda-nvgraph-$CUDA_PKG_VERSION         cuda-cusolver-$CUDA_PKG_VERSION         cuda-cublas-8-0=8.0.61.2-1         cuda-cufft-$CUDA_PKG_VERSION         cuda-curand-$CUDA_PKG_VERSION         cuda-cusparse-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-cudart-$CUDA_PKG_VERSION
      &&     ln -s cuda-8.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "/usr/local/cuda/lib64" >> /etc/ld.so.conf.d/cuda.conf &&     ldconfig
    Name: run
    PrependShell: true
  - Labels:
    - Key: com.nvidia.volumes.needed
      Value: '"nvidia_driver"'
    Name: label
  - CmdLine:
    - echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf &&     echo "/usr/local/nvidia/lib64"
      >> /etc/ld.so.conf.d/nvidia.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/nvidia/lib:/usr/local/nvidia/lib64
    Name: env
  - Env:
    - Key: NVIDIA_VISIBLE_DEVICES
      Value: all
    Name: env
  - Env:
    - Key: NVIDIA_DRIVER_CAPABILITIES
      Value: compute,utility
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         cuda-core-$CUDA_PKG_VERSION         cuda-misc-headers-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-nvrtc-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-nvgraph-dev-$CUDA_PKG_VERSION         cuda-cusolver-dev-$CUDA_PKG_VERSION         cuda-cublas-dev-8-0=8.0.61.2-1         cuda-cufft-dev-$CUDA_PKG_VERSION         cuda-curand-dev-$CUDA_PKG_VERSION         cuda-cusparse-dev-$CUDA_PKG_VERSION         cuda-npp-dev-$CUDA_PKG_VERSION         cuda-cudart-dev-$CUDA_PKG_VERSION         cuda-driver-dev-$CUDA_PKG_VERSION
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LIBRARY_PATH
      Value: /usr/local/cuda/lib64/stubs:${LIBRARY_PATH}
    Name: env
  - Env:
    - Key: DNPY_NO_DEPRECATED_API
      Value: NPY_1_7_API_VERSION
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y     python-numpy     python-scipy     python-dev     python-nose     python-mysqldb     g++     libopenblas-dev     git     curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm
      get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install Theano
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common &&     add-apt-repository -y ppa:george-edison55/cmake-3.x
      &&     apt-get update &&     apt-get install -y cmake git
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install cython
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/Theano/libgpuarray.git &&     cd libgpuarray &&
      mkdir Build && cd Build &&     cmake .. -DCMAKE_BUILD_TYPE=Release &&     make
      && make install &&     cd .. && python setup.py build &&     python setup.py
      install
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"$LD_LIBRARY_PATH:/usr/local/lib"'
    Name: env
  - CmdLine:
    - pip install pycuda pydot-ng     git+https://github.com/lebedov/scikit-cuda.git#egg=scikit-cuda
    Name: run
    PrependShell: true
  - CmdLine:
    - pip --no-cache-dir install --upgrade ipython &&     pip --no-cache-dir install         Cython         ipykernel         path.py         Pillow         pygments         six         sphinx         wheel         zmq         &&     python
      -m ipykernel.kernelspec
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libopencv-dev python-opencv &&     echo
      'ln /dev/null /dev/raw1394' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libhdf5-dev libhdf5-serial-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install keras h5py
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade nltk
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install uwsgi
    Name: run
    PrependShell: true
  - Env:
    - Key: NGINX_VERSION
      Value: 1.9.11-1~jessie
    Name: env
  - CmdLine:
    - apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62     &&
      echo "deb http://nginx.org/packages/mainline/debian/ jessie nginx" >> /etc/apt/sources.list     &&
      apt-get update     && apt-get install -y ca-certificates nginx=${NGINX_VERSION}
      gettext-base     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - echo "daemon off;" >> /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/nginx/conf.d/default.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/conf.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - uwsgi.ini
    - /etc/uwsgi/
  - CmdLine:
    - apt-get update && apt-get install -y supervisor && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Env:
    - Key: NGINX_MAX_UPLOAD
      Value: "0"
    Name: env
  - CmdLine:
    - /usr/bin/supervisord
    Name: cmd
    PrependShell: false
  - CmdLine:
    - apt-get update && apt-get install -y python-pyaudio && pip install apiai
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install astroid
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Babel
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install blinker
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install colorama
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install flask
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install flask-restful
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pymongo
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install redis
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install mysql-connector-python-rf
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pymysql
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install python-memcached
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install python-telegram-bot
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Flask-Cache
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Flask-Babel
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Flask-Compress
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Flask-Login
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Flask-Mail
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Flask-Principal
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Flask-WTF
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install flask-security flask-sqlalchemy flask-mongoengine
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install vk
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pyowm
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install twilio
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pywhatsapp yowsup2
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install viberbot
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install slackclient
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install healthcheck
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install itsdangerous
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Jinja2
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install logilab-common
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install MarkupSafe
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install nose
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install passlib
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pylint
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pytz
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install requirements
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install six
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install speaklater
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install SQLAlchemy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install Werkzeug
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install wheel
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install WTForms
    Name: run
    PrependShell: true
  - CmdLine:
    - pip uninstall -y pyopenssl
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pyopenssl
    Name: run
    PrependShell: true
  - Env:
    - Key: UWSGI_INI
      Value: /app/uwsgi.ini
    Name: env
  - Env:
    - Key: STATIC_URL
      Value: /static
    Name: env
  - Env:
    - Key: STATIC_PATH
      Value: /app/static
    Name: env
  - Env:
    - Key: STATIC_INDEX
      Value: "0"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./app
    - /app
  - Name: workdir
    Path: /app
  - CmdLine:
    - /usr/bin/supervisord
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
