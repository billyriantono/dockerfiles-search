MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: maintainer
    Name: maintainer
  - Env:
    - Key: TERM
      Value: linux
    Name: env
  - CmdLine:
    - apt remove -y openjdk*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y git wget apt-transport-https ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv                --keyserver hkp://ha.pool.sks-keyservers.net:80                --recv-keys
      58118E89F3A912897C070ADBF76221572C52609D
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" | tee /etc/apt/sources.list.d/docker.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y docker-engine
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_COMPOSE_VERSION
      Value: 1.8.1
    Name: env
  - Env:
    - Key: DOCKER_COMPOSE_DIR
      Value: /opt/docker-compose
    Name: env
  - CmdLine:
    - mkdir -p ${DOCKER_COMPOSE_DIR} &&     wget https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname
      -s)-$(uname -m)          --output-document=${DOCKER_COMPOSE_DIR}/docker-compose
      &&          chmod +x ${DOCKER_COMPOSE_DIR}/docker-compose &&          ln -s
      ${DOCKER_COMPOSE_DIR}/docker-compose /usr/bin/docker-compose
    Name: run
    PrependShell: true
  - Env:
    - Key: JDK_URL
      Value: http://download.oracle.com/otn-pub/java/jdk/8u112-b15/jdk-8u112-linux-x64.tar.gz
    Name: env
  - Env:
    - Key: JDK_TGZ
      Value: jdk-8u112-linux-x64.tar.gz
    Name: env
  - Env:
    - Key: JDK_DIR
      Value: jdk1.8.0_112
    Name: env
  - Env:
    - Key: JDK_PATH
      Value: /opt/jdk
    Name: env
  - CmdLine:
    - 'wget --no-check-certificate --header "Cookie: oraclelicense=accept-securebackup-cookie"     ${JDK_URL}  &&     mkdir
      ${JDK_PATH} &&     tar -zxf ${JDK_TGZ} -C ${JDK_PATH} &&     rm ${JDK_TGZ} &&     update-alternatives
      --install /usr/bin/java  java  ${JDK_PATH}/${JDK_DIR}/bin/java 100 &&     update-alternatives
      --install /usr/bin/javac javac ${JDK_PATH}/${JDK_DIR}/bin/javac 100 &&     update-alternatives
      --install /usr/bin/jar   jar   ${JDK_PATH}/${JDK_DIR}/bin/jar 100 &&     ln
      -s ${JDK_PATH}/${JDK_DIR} ${JDK_PATH}/latest'
    Name: run
    PrependShell: true
  - Env:
    - Key: MVN_VERSION
      Value: 3.3.9
    Name: env
  - Env:
    - Key: MVN_URL
      Value: http://mirrors.sonic.net/apache/maven/maven-3/${MVN_VERSION}/binaries/apache-maven-${MVN_VERSION}-bin.tar.gz
    Name: env
  - Env:
    - Key: MVN_PATH
      Value: /opt/maven
    Name: env
  - Env:
    - Key: MVN_DIR
      Value: apache-maven-${MVN_VERSION}
    Name: env
  - CmdLine:
    - wget ${MVN_URL} &&     mkdir ${MVN_PATH} &&     tar -zxf apache-maven-${MVN_VERSION}-bin.tar.gz
      -C ${MVN_PATH} &&     rm -f apache-maven-${MVN_VERSION}-bin.tar.gz &&     ln
      -s ${MVN_PATH}/${MVN_DIR}/bin/mvn /usr/bin/mvn &&     ln -s ${MVN_PATH}/${MVN_DIR}
      ${MVN_PATH}/latest
    Name: run
    PrependShell: true
  - Env:
    - Key: SWARM_PATH
      Value: /opt/jenkins
    Name: env
  - Env:
    - Key: JENKINS_SWARM_VERSION
      Value: "2.2"
    Name: env
  - Env:
    - Key: JENKINS_SWARM_JAR
      Value: swarm-client-${JENKINS_SWARM_VERSION}-jar-with-dependencies.jar
    Name: env
  - Env:
    - Key: JENKINS_SWARM_URL
      Value: http://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/${JENKINS_SWARM_VERSION}/swarm-client-${JENKINS_SWARM_VERSION}-jar-with-dependencies.jar
    Name: env
  - CmdLine:
    - mkdir -p ${SWARM_PATH} &&     wget --no-check-certificate --output-document=${SWARM_PATH}/${JENKINS_SWARM_JAR}
      ${JENKINS_SWARM_URL}
    Name: run
    PrependShell: true
  - Env:
    - Key: SWARM_CMD_MASTER_HOST
      Value: '"jenkins.master"'
    Name: env
  - Env:
    - Key: SWARM_CMD_MASTER_PORT
      Value: "8080"
    Name: env
  - Env:
    - Key: SWARM_CMD_MASTER_URL
      Value: '"http://${SWARM_CMD_MASTER_HOST}:${SWARM_CMD_MASTER_PORT}"'
    Name: env
  - Env:
    - Key: SWARM_CMD_NAME
      Value: '"maven.swarm.slave"'
    Name: env
  - Env:
    - Key: SWARM_CMD_LABELS
      Value: '"maven"'
    Name: env
  - Env:
    - Key: SWARM_CMD_USERNAME
      Value: '"jenkins_user"'
    Name: env
  - Env:
    - Key: SWARM_CMD_PASSWORD
      Value: '"jenkins_user_password"'
    Name: env
  - CmdLine:
    - /bin/bash
    - -c
    - java -jar ${SWARM_PATH}/${JENKINS_SWARM_JAR} -master ${SWARM_CMD_MASTER_URL}
      -name ${SWARM_CMD_NAME} -labels ${SWARM_CMD_LABELS} -username ${SWARM_CMD_USERNAME}
      -password ${SWARM_CMD_PASSWORD}
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
