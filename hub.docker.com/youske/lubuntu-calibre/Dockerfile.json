{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "youske/ubuntu-stdmachine:base",
      "SourceCode": "FROM youske/ubuntu-stdmachine:base",
      "Platform": "",
      "From": {
        "Image": "youske/ubuntu-stdmachine:base"
      },
      "Commands": [
        {
          "Maintainer": "youske miyakoshi \u003cyouske@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "com.stdmachine.description",
              "Value": "\"lubuntu calibre ebook management image\""
            },
            {
              "Key": "com.stdmachine.role",
              "Value": "\"calibre\""
            },
            {
              "Key": "com.stdmachine.os",
              "Value": "\"ubuntu\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "COMMONPACKAGE",
              "Value": "'bash vim-tiny logrotate supervisor git tig tmux bzip2 curl wget ca-certificates'"
            },
            {
              "Key": "LUBUNTUPACKAGE",
              "Value": "'xorg xterm lxde-core lxappearance lxsession-data lxterminal lxinput lubuntu-icon-theme lubuntu-artwork-16-04 lubuntu-lxpanel-icons lubuntu-artwork xfonts-100dpi xfonts-100dpi-transcoded xfonts-75dpi xfonts-75dpi-transcoded xfonts-base '"
            },
            {
              "Key": "FONTPACKAGE",
              "Value": "'fonts-ipafont-mincho fonts-ipafont-gothic'"
            },
            {
              "Key": "LANGPACKAGE",
              "Value": "'locales language-pack-ja language-pack-ja ibus-mozc'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y -q upgrade \u0026\u0026     DEBIAN_FRONTEND=nointeractive apt-get install -y ${COMMONPACKAGE} ${LUBUNTUPACKAGE} ${FONTPACKAGE} ${LANGPACKAGE} \u0026\u0026     update-locale LANG=${LANGUAGE:-ja_JP.UTF-8}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CALIBRE_USER",
              "Value": "'calibre'"
            },
            {
              "Key": "CALIBRE_PASSWORD",
              "Value": "'calibreadmin'"
            },
            {
              "Key": "CALIBRE_MAXCOVER",
              "Value": "\"300x280\""
            },
            {
              "Key": "CALIBRE_PORT",
              "Value": "8088"
            },
            {
              "Key": "CALIBRE_LIBRARY",
              "Value": "\"/Calibre_Library\""
            },
            {
              "Key": "CALIBRE_URL",
              "Value": "https://raw.githubusercontent.com/kovidgoyal/calibre/master/setup/linux-installer.py"
            },
            {
              "Key": "CALIBRE_PACKAGE",
              "Value": "'imagemagick okular python-pip python-dev build-essential'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=nointeractive apt-get install -y -q ${CALIBRE_PACKAGE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q --no-check-certificate ${CALIBRE_URL} -O- | python -c \"import sys; main=lambda:sys.stderr.write('Download Failed\\n'); exec(sys.stdin.read()); main()\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p \"${CALIBRE_LIBRARY}\" \u0026\u0026 mkdir -p \"${CALIBRE_LIBRARY}/import\" \u0026\u0026     chown -R ${VNC_USER}:${VNC_USER} \"${CALIBRE_LIBRARY}\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "VNC_USER",
              "Value": "\"${VNC_USER:-vnc}\""
            },
            {
              "Key": "VNC_PASSWORD",
              "Value": "\"${VNC_PASSWORD:-vncpass}\""
            },
            {
              "Key": "VNC_PORT",
              "Value": "\"${VNC_PORT:-5901}\""
            },
            {
              "Key": "VNC_DEPTH",
              "Value": "\"${VNC_DEPTH:-24}\""
            },
            {
              "Key": "VNC_DISPLAY",
              "Value": "\"${VNC_DISPLAY:-1}\""
            },
            {
              "Key": "VNC_GEOMETRY",
              "Value": "\"${VNC_GEOMETRY:-1280x800}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VNC_HOME",
              "Value": "\"/home/${VNC_USER}\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "install_vnc",
            "/tmp/install_vnc"
          ]
        },
        {
          "CmdLine": [
            ". /tmp/install_vnc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start.sh",
            "${VNC_HOME}/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x ${VNC_HOME}/start.sh \u0026\u0026 chown -R ${VNC_USER}:${VNC_USER} ${VNC_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "xstartup",
            "${VNC_HOME}/.vnc/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x ${VNC_HOME}/.vnc/xstartup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get autoremove -y python-dev build-essential \u0026\u0026 rm -rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "${CALIBRE_PORT}",
            "${VNC_PORT}"
          ]
        },
        {
          "Name": "workdir",
          "Path": "${VNC_HOME}"
        },
        {
          "CmdLine": [
            "switch",
            "shell=/bin/bash",
            "--",
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "gosu",
            "vnc",
            "vncserver",
            ":${VNC_DISPLAY}",
            "-fg",
            "-geometry",
            "${VNC_GEOMETRY}",
            "-depth",
            "${VNC_DEPTH}"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}