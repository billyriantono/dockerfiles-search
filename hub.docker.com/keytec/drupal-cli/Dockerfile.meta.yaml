MetaArgs: null
Stages:
- BaseName: blinkreaction/drupal-base:jessie
  Commands:
  - Maintainer: Christian Wiedemann <christian.wiedemann@key-tec.de>
    Name: maintainer
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update &&     DEBIAN_FRONTEND=noninteractive
      apt-get -y --force-yes --no-install-recommends install     zip unzip     git     mysql-client     imagemagick     pv     openssh-client     rsync     apt-transport-https     sudo     &&
      DEBIAN_FRONTEND=noninteractive apt-get clean &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -s /bin/bash -g users -G sudo -p docker docker &&     echo 'docker
      ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update &&     DEBIAN_FRONTEND=noninteractive
      apt-get -y --force-yes --no-install-recommends install     php5-common     php5-cli     php-pear     php5-mysql     php5-imagick     php5-mcrypt     php5-curl     php5-gd     php5-sqlite     php5-json     php5-intl     php5-fpm     php5-memcache     php5-xdebug     php5-ssh2     php5-gnupg     &&
      DEBIAN_FRONTEND=noninteractive apt-get clean &&     rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/docroot &&     sed -i '/memory_limit = /c memory_limit = 256M'
      /etc/php5/fpm/php.ini &&     sed -i '/max_execution_time = /c max_execution_time
      = 300' /etc/php5/fpm/php.ini &&     sed -i '/upload_max_filesize = /c upload_max_filesize
      = 500M' /etc/php5/fpm/php.ini &&     sed -i '/post_max_size = /c post_max_size
      = 500M' /etc/php5/fpm/php.ini &&     sed -i '/error_log = /c error_log = \/dev\/stdout'
      /etc/php5/fpm/php.ini &&     sed -i '/;always_populate_raw_post_data/c always_populate_raw_post_data
      = -1' /etc/php5/fpm/php.ini &&     sed -i '/;sendmail_path/c sendmail_path =
      /bin/true' /etc/php5/fpm/php.ini &&     sed -i '/user = /c user = docker' /etc/php5/fpm/pool.d/www.conf
      &&     sed -i '/;catch_workers_output = /c catch_workers_output = yes' /etc/php5/fpm/pool.d/www.conf
      &&     sed -i '/listen = /c listen = 0.0.0.0:9000' /etc/php5/fpm/pool.d/www.conf
      &&     sed -i '/listen.allowed_clients/c ;listen.allowed_clients =' /etc/php5/fpm/pool.d/www.conf
      &&     sed -i '/;clear_env = /c clear_env = no' /etc/php5/fpm/pool.d/www.conf
      &&     sed -i '/;daemonize = /c daemonize = no' /etc/php5/fpm/php-fpm.conf &&     sed
      -i '/error_log = /c error_log = \/dev\/stdout' /etc/php5/fpm/php-fpm.conf &&     sed
      -i '/memory_limit = /c memory_limit = 512M' /etc/php5/cli/php.ini &&     sed
      -i '/max_execution_time = /c max_execution_time = 600' /etc/php5/cli/php.ini
      &&     sed -i '/error_log = php_errors.log/c error_log = \/dev\/stdout' /etc/php5/cli/php.ini
      &&     sed -i '/;sendmail_path/c sendmail_path = /bin/true' /etc/php5/cli/php.ini
      &&     echo 'opcache.memory_consumption=128' >> /etc/php5/mods-available/opcache.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/php5/xdebug.ini
    - /etc/php5/mods-available/xdebug.ini
  - CmdLine:
    - curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add
      - &&     echo 'deb https://deb.nodesource.com/node_4.x jessie main' > /etc/apt/sources.list.d/nodesource.list
      &&     echo 'deb-src https://deb.nodesource.com/node_4.x jessie main' >> /etc/apt/sources.list.d/nodesource.list
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get update &&     DEBIAN_FRONTEND=noninteractive
      apt-get -y --force-yes --no-install-recommends install     ruby-full     rlwrap     build-essential     &&
      DEBIAN_FRONTEND=noninteractive apt-get clean &&    rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - Env:
    - Key: BUNDLE_PATH
      Value: .bundler
    Name: env
  - Env:
    - Key: DRUSH_VERSION
      Value: 8.0.1
    Name: env
  - Env:
    - Key: DRUPAL_CONSOLE_VERSION
      Value: 0.10.1
    Name: env
  - CmdLine:
    - curl -sSL https://getcomposer.org/installer | php &&     mv composer.phar /usr/local/bin/composer
      &&     curl -sSL https://github.com/drush-ops/drush/releases/download/$DRUSH_VERSION/drush.phar
      -o /usr/local/bin/drush &&     chmod +x /usr/local/bin/drush &&     curl -sSL
      https://github.com/hechoendrupal/DrupalConsole/releases/download/$DRUPAL_CONSOLE_VERSION/drupal.phar
      -o /usr/local/bin/drupal &&     chmod +x /usr/local/bin/drupal
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/docker/.composer/vendor/bin:$PATH
    Name: env
  - Name: user
    User: docker
  - Env:
    - Key: NVM_VERSION
      Value: 0.30.1
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 0.12.2
    Name: env
  - Env:
    - Key: NVM_DIR
      Value: /home/docker/.nvm
    Name: env
  - CmdLine:
    - curl -sSL https://raw.githubusercontent.com/creationix/nvm/v${NVM_VERSION}/install.sh
      | bash &&     . $NVM_DIR/nvm.sh &&     nvm install $NODE_VERSION &&     nvm
      alias default $NODE_VERSION &&     npm install -g npm &&     npm install -g
      bower &&     npm install -g grunt-cli &&     npm install -g coffee-script
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /home/docker/drush6 && cd /home/docker/drush6 && composer require drush/drush:6.*
      &&     mkdir /home/docker/drush7 && cd /home/docker/drush7 && composer require
      drush/drush:7.* &&     echo "alias drush6='/home/docker/drush6/vendor/bin/drush'"
      >> /home/docker/.bashrc &&     echo "alias drush7='/home/docker/drush7/vendor/bin/drush'"
      >> /home/docker/.bashrc &&     echo "alias drush8='/usr/local/bin/drush'" >>
      /home/docker/.bashrc &&     drush dl registry_rebuild-7.x-2.2 &&     drush dl
      coder --destination=/home/docker/.drush &&     drush cc drush &&     composer
      global require drupal/coder &&     phpcs --config-set installed_paths /home/docker/.composer/vendor/drupal/coder/coder_sniffer
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/.ssh
    - /home/docker/.ssh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/.drush
    - /home/docker/.drush
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/supervisord.conf
    - /etc/supervisor/conf.d/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - startup.sh
    - /opt/startup.sh
  - CmdLine:
    - sudo chown -R docker:users /home/docker
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  - Name: workdir
    Path: /var/www
  - Env:
    - Key: SSH_KEY_NAME
      Value: id_rsa
    Name: env
  - CmdLine:
    - /opt/startup.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - gosu
    - root
    - supervisord
    Name: cmd
    PrependShell: false
  From:
    Image: blinkreaction/drupal-base:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM blinkreaction/drupal-base:jessie
