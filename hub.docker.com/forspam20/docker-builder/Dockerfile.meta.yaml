MetaArgs: null
Stages:
- BaseName: ubuntu:precise
  Commands:
  - Maintainer: Anton Belov anton4@bk.ru
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - sources.list
    - /etc/apt/sources.list
  - CmdLine:
    - sed -i 's|://.*\..*\.com|://ru.archive.ubuntu.com|' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'force-unsafe-io' | tee /etc/dpkg/dpkg.cfg.d/02apt-speedup
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'DPkg::Post-Invoke {"/bin/rm -f /var/cache/apt/archives/*.deb || true";};'
      | tee /etc/apt/apt.conf.d/no-cache
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'Acquire::http {No-Cache=True;};' | tee /etc/apt/apt.conf.d/no-http-cache
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y
      && apt-get clean && \tapt-get -y install \tzsh php5-mysql php-apc pwgen python-setuptools
      python-software-properties software-properties-common git \tcurl php5-curl php5-gd
      php5-intl php-pear php5-imagick mc mysql-client \tphp5-imap php5-mcrypt php5-memcache
      php5-ming php5-ps php5-pspell php5-cli php5-dev \tphp5-recode php5-sqlite php5-tidy
      php5-xmlrpc php5-xsl php5-xdebug wget inetutils-tools inetutils-ping &&        apt-get
      clean &&         rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/* /download/directory"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y
      && apt-get clean && \tapt-get -y install \tpv tmux openssh-server nano htop
      meld expect remmina ssmtp &&        apt-get clean &&         rm -rf /tmp/* /var/lib/apt/lists/*
      /var/tmp/* /download/directory"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y
      && apt-get clean && \tapt-get -y install \tlxde-core lxterminal tightvncserver
      &&        apt-get clean &&         rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/*
      /download/directory"
    Name: run
    PrependShell: true
  - CmdLine:
    - "add-apt-repository ppa:webupd8team/sublime-text-3 && \tapt-get update -y &&
      DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y && apt-get clean && \tapt-get
      -y install \tsublime-text-installer &&        apt-get clean &&         rm -rf
      /tmp/* /var/lib/apt/lists/* /var/tmp/* /download/directory"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - mkdir -p /root/.ssh
    Name: run
    PrependShell: true
  - Env:
    - Key: LOGIN
      Value: admin
    Name: env
  - Env:
    - Key: PASS
      Value: 123q123q
    Name: env
  - CmdLine:
    - add-apt-repository ppa:chris-lea/node.js
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y
      && apt-get clean && \tapt-get -y install \tnodejs  build-essential &&        apt-get
      clean &&         rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/* /download/directory"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - "wget http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz
      && \ttar xvfz ioncube_loaders_lin_x86-64.tar.gz"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ioncube/ioncube_loader_lin_${PHP_VERSION}.so `php-config --extension-dir`
    Name: run
    PrependShell: true
  - CmdLine:
    - "PHP_VERSION=$(php -r \"echo PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION;\") &&
      \tcp ioncube/ioncube_loader_lin_${PHP_VERSION}.so `php-config --extension-dir`
      && rm -rf ioncube && \techo zend_extension=`php-config --extension-dir`/ioncube_loader_lin_${PHP_VERSION}.so
      >> /etc/php5/php.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer &&     wget -q --no-check-certificate https://raw.github.com/colinmollenhour/modman/master/modman-installer
      &&     bash < modman-installer
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /etc/php5/mods-available/mcrypt.ini /etc/php5/cli/conf.d/20-mcrypt.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/sessions/
    Name: run
    PrependShell: true
  - CmdLine:
    - chown www-data.www-data /tmp/sessions -Rf
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://files.magerun.net/n98-magerun-latest.phar -O n98-magerun.phar
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x n98-magerun.phar
    Name: run
    PrependShell: true
  - CmdLine:
    - cp n98-magerun.phar /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keyscan -t rsa bitbucket.org > ~/.ssh/known_hosts
    Name: run
    PrependShell: true
  - CmdLine:
    - composer config -g github-oauth.github.com 6e18b614391d88b271c1e3f069e55d7fd9bf6e3d
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update  && apt-get install -y --force-yes --no-install-recommends      apt-transport-https       build-essential       curl       ca-certificates       git       lsb-release       python-all       rlwrap  &&
      rm -rf /var/lib/apt/lists/*;
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g pangyp && ln -s $(which pangyp) $(dirname $(which pangyp))/node-gyp
      && npm cache clear && node-gyp configure || echo ""
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_ENV
      Value: production
    Name: env
  - CmdLine:
    - apt-get update -qq && apt-get install -y build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ruby git
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install sass
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /src
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  - CmdLine:
    - git clone https://github.com/c9/core.git c9sdk
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src/c9sdk
  - CmdLine:
    - scripts/install-sdk.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_GB.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen fr_CH.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/share/zoneinfo/Europe/Moscow /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Europe/Moscow" > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/PermitRootLogin without-password/PermitRootLogin yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install pip
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - mkdir /var/log/supervisor
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install supervisor
    Name: run
    PrependShell: true
  - CmdLine:
    - "add-apt-repository ppa:webupd8team/java && \tapt-get update -y && DEBIAN_FRONTEND=noninteractive
      apt-get dist-upgrade -y && apt-get clean && \techo debconf shared/accepted-oracle-license-v1-1
      select true |   \tdebconf-set-selections &&\techo debconf shared/accepted-oracle-license-v1-1
      seen true |   \tdebconf-set-selections &&\tapt-get -y install \toracle-java8-installer
      &&        apt-get clean &&         rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/*
      /download/directory"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y
      && apt-get clean && \tapt-get -y install \tterminator gedit remmina &&        apt-get
      clean &&         rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/* /download/directory"
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:x2go/stable
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y
      && apt-get clean && \tapt-get -y install \tx2goserver x2goserver-xsession  &&
      \       apt-get clean &&         rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/*
      /download/directory"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://dl.google.com/linux/direct/google-talkplugin_current_amd64.deb
    - /src/google-talkplugin_current_amd64.deb
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - /src/google-chrome-stable_current_amd64.deb
  - CmdLine:
    - "mkdir -p /usr/share/icons/hicolor && \tapt-get update && apt-get install -y
      \tfirefox \tca-certificates \tfonts-liberation \twget \txdg-utils \t--no-install-recommends
      \t&& rm -rf /var/lib/apt/lists/* \t&& rm -rf /src/*.deb"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - local.conf
    - /etc/fonts/local.conf
  - CmdLine:
    - "apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y
      && apt-get clean && \tapt-get -y install \tgit-core curl zlib1g-dev build-essential
      libssl-dev libreadline-dev libyaml-dev libsqlite3-dev \tsqlite3 libxml2-dev
      libxslt1-dev libcurl4-openssl-dev python-software-properties \tlibgdbm-dev libncurses5-dev
      automake libtool bison libffi-dev \t&& rm -rf /var/lib/apt/lists/* \t&& rm -rf
      /src/*.deb"
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://get.rvm.io | bash -s stable
    Name: run
    PrependShell: true
  - CmdLine:
    - "/bin/bash -c \"source /usr/local/rvm/scripts/rvm\" && echo \"source /usr/local/rvm/scripts/rvm\"
      >> ~/.bashrc && \t/bin/bash -c \"source /usr/local/rvm/scripts/rvm && rvm install
      2.1.2 && rvm use 2.1.2 --default\""
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash -c "source /usr/local/rvm/scripts/rvm && gem install compass"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config/supervisor/supervisord.conf
    - /etc/supervisord.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - /scripts
    - /scripts
  - Chown: ""
    Name: add
    SourcesAndDest:
    - /config
    - /config
  - CmdLine:
    - chmod 755 /scripts/*.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/start.sh
    - /opt/start.sh
  - CmdLine:
    - chmod 755 /opt/start.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:precise
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:precise
