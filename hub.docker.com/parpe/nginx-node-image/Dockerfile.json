{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "8.9.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add nginx=1.14.0-r0 supervisor curl --repository http://dl-cdn.alpinelinux.org/alpine/edge/main/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "nginx",
            "/etc/nginx"
          ]
        },
        {
          "CmdLine": [
            "addgroup -g 1000 node     \u0026\u0026 adduser -u 1000 -G node -s /bin/sh -D node     \u0026\u0026 apk add --no-cache     libstdc++     \u0026\u0026 apk add --no-cache --virtual .build-deps     binutils-gold     curl     g++     gcc     gnupg     libgcc     linux-headers     make     python     \u0026\u0026 for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     56730D5401028683275BD23C23EFEFE93C4CFFFE     77984A986EBC2AA786BC0F66B01FBB92821C587A     ; do     gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" ||     gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" ||     gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ;     done     \u0026\u0026 curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     \u0026\u0026 curl -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     \u0026\u0026 grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     \u0026\u0026 tar -xf \"node-v$NODE_VERSION.tar.xz\"     \u0026\u0026 cd \"node-v$NODE_VERSION\"     \u0026\u0026 ./configure     \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN)     \u0026\u0026 make install     \u0026\u0026 apk del .build-deps     \u0026\u0026 cd ..     \u0026\u0026 rm -Rf \"node-v$NODE_VERSION\"     \u0026\u0026 rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \u0026\u0026     ALPINE_GLIBC_PACKAGE_VERSION=\"2.27-r0\" \u0026\u0026     ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     apk add --no-cache --virtual=.build-dependencies wget ca-certificates \u0026\u0026     wget     \"https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub\"     -O \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026     wget     \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"     \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"     \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026     apk add --no-cache     \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"     \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"     \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026         rm \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026     /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \u0026\u0026     echo \"export LANG=$LANG\" \u003e /etc/profile.d/locale.sh \u0026\u0026         apk del glibc-i18n \u0026\u0026         rm \"/root/.wget-hsts\" \u0026\u0026     apk del .build-dependencies \u0026\u0026     rm     \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"     \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"     \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        }
      ]
    }
  ]
}