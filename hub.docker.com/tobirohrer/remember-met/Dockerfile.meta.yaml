MetaArgs: null
Stages:
- As: build
  BaseName: golang:latest
  Commands:
  - Key: DOCKER_LS_VERSION
    Name: arg
    Value: v0.3.2
  - Name: workdir
    Path: /go/src/github.com/mayflower/docker-ls
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - Env:
    - Key: GOOS
      Value: linux
    Name: env
  - Env:
    - Key: GOARCH
      Value: amd64
    Name: env
  - CmdLine:
    - set -ex   && LC_ALL=C DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends
      ca-certificates   && curl -o docker-ls.tar.gz -SL https://github.com/mayflower/docker-ls/archive/${DOCKER_LS_VERSION}.tar.gz   &&
      tar -xzf docker-ls.tar.gz --strip 1 -C /go/src/github.com/mayflower/docker-ls   &&
      go build github.com/mayflower/docker-ls/cli/docker-ls   && go build github.com/mayflower/docker-ls/cli/docker-rm
    Name: run
    PrependShell: true
  From:
    Image: golang:latest
  Name: build
  Platform: ""
  SourceCode: FROM golang:latest AS build
- BaseName: alpine:3.8
  Commands:
  - CmdLine:
    - set -ex  && apk add --no-cache ca-certificates bash bash-completion
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bashrc
    - /root/.bashrc
  - Labels:
    - Key: MAINTAINER
      Value: '"code:Mayflower GmbH, Docker=https://github.com/timothyclarke/docker-ls"'
    Name: label
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/mayflower/docker-ls/docker-*
    - /bin/
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
