MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.0-base-ubuntu18.04
  Commands:
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - ". /etc/os-release; \t\tprintf \"deb http://ppa.launchpad.net/jonathonf/vim/ubuntu
      %s main\" \"$UBUNTU_CODENAME\" main | tee /etc/apt/sources.list.d/vim-ppa.list
      && \t\tapt-key  adv --keyserver hkps://keyserver.ubuntu.com --recv-key 4AB0F789CBA31744CC7DA76A8CF63AD3F06FC659
      && \t\tapt-get update && \t\tenv DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade
      --autoremove --purge --no-install-recommends -y \t\t\tbuild-essential \t\t\tbzip2
      \t\t\tca-certificates \t\t\tcurl \t\t\tgit \t\t\tlibcanberra-gtk-module \t\t\tlibgtk2.0-0
      \t\t\tlibx11-6 \t\t\tsudo \t\t\tgraphviz \t\t\tvim-nox"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - CmdLine:
    - "adduser --disabled-password --gecos '' --shell /bin/bash user \t\t&& chown
      -R user:user /app"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "user ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/90-user
    Name: run
    PrependShell: true
  - Name: user
    User: user
  - Env:
    - Key: HOME
      Value: /home/user
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - CmdLine:
    - "curl -so ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      \t\t&& bash ~/miniconda.sh -b -p ~/miniconda \t\t&& rm ~/miniconda.sh"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /home/user/miniconda/bin:$PATH
    Name: env
  - Env:
    - Key: CONDA_AUTO_UPDATE_CONDA
      Value: "false"
    Name: env
  - CmdLine:
    - "/home/user/miniconda/bin/conda update -n base -c defaults conda -y && \t\t/home/user/miniconda/bin/conda
      install conda-build -y \t\t&& /home/user/miniconda/bin/conda create -y --name
      py36 python=3.6.5 \t\t&& /home/user/miniconda/bin/conda clean -ya"
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DEFAULT_ENV
      Value: py36
    Name: env
  - Env:
    - Key: CONDA_PREFIX
      Value: /home/user/miniconda/envs/$CONDA_DEFAULT_ENV
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_PREFIX/bin:$PATH
    Name: env
  - CmdLine:
    - "conda install nodejs tini -y && \t\tconda clean -a -y"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /app/requirements.txt
  - CmdLine:
    - pip install --no-cache-dir -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - "jupyter labextension install @jupyter-widgets/jupyterlab-manager -y --clean
      && \t\tjupyter labextension install @jupyterlab/toc -y --clean && \t\tjupyter
      labextension install jupyter-matplotlib -y --clean && \t\tjlpm cache clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter
    - lab
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:10.0-base-ubuntu18.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.0-base-ubuntu18.04
