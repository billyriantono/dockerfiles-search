{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.7-slim",
      "SourceCode": "FROM python:3.7-slim",
      "Platform": "",
      "From": {
        "Image": "python:3.7-slim"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"James Turk \u003cjames@openstates.org\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PYTHONUNBUFFERED",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONDONTWRITEBYTECODE",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "'utf-8'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "'C.UTF-8'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install -y --no-install-recommends       git       build-essential       curl       unzip       libssl-dev       libffi-dev       freetds-dev       python3-virtualenv       libxml2-dev       libxslt-dev       libyaml-dev       poppler-utils       libpq-dev       libgdal-dev       libgeos-dev       libmariadb-dev       mdbtools \u0026\u0026       rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            ".",
            "/opt/openstates/openstates"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt/openstates/openstates/"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "./openstates"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 pip install poetry     \u0026\u0026 poetry install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "poetry",
            "run",
            "pupa",
            "update"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}