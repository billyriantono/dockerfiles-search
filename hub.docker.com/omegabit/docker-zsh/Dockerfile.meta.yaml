MetaArgs: null
Stages:
- BaseName: ubuntu:wily
  Commands:
  - Maintainer: Holger Piontek <hp9390@gmail.com>
    Name: maintainer
  - Env:
    - Key: GOPATH
      Value: /usr/share/go/
    Name: env
  - Env:
    - Key: SHELL
      Value: zsh
    Name: env
  - Env:
    - Key: BROWSER
      Value: lynx
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - dpkg-reconfigure --frontend noninteractive tzdata
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - aliases.zsh
    - /root/.zsh/aliases.zsh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - configs.zsh
    - /root/.zsh/configs.zsh
  - CmdLine:
    - chmod u+s /usr/bin/whoami
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update --fix-missing -y && apt-get update && apt-get -y upgrade       &&
      apt-get install -y language-pack-en                 && locale-gen en_US.UTF-8                       &&
      dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ":let g:session_autosave = 'no'" > /root/.vimrc
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - -c
    - apt-get install -y aria2 apt-utils
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - apt-get install -y zsh vim-nox curl git git-flow build-essential software-properties-common
      wget curl git man unzip nano tmux colord zsh emacs gnupg2 rake exuberant-ctags
      httpie ruby php5
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - apt-get install -y pass p7zip-full sshfs supervisor monit htop lynx-cur golang-go
      inetutils-ping encfs
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - apt-get install -y tor proxychains ncdu tor ding trans-de-en dict dict-de-en
      dictd stardict stardict-plugin qstardict
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - apt-get install -y goldendict dictd dict-freedict-eng-deu dict-freedict-deu-eng
      dict-de-en
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - apt-get install -y dict-freedict-deu-eng dict-freedict-deu-fra dict-freedict-eng-fra
      dict-freedict-deu-ita dict-freedict-eng-rus dict-freedict-eng-rus dict-freedict-eng-deu
    Name: run
    PrependShell: false
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://raw.githubusercontent.com/haad/proxychains/master/src/proxychains.conf
    - /etc/proxychains.conf
  - CmdLine:
    - /bin/bash
    - -c
    - add-apt-repository -y ppa:ubuntu-desktop/ubuntu-make
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - apt-get update
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - apt-get install -y ubuntu-make w3m procmail ssmtp mutt irssi weechat weechat-curses
      weechat-plugins weechat-scripts weechat-doc
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - curl -LsS http://symfony.com/installer -o /usr/local/bin/symfony
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - composer global require 'laravel/installer=~1.1'
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - chmod a+x /usr/local/bin/symfony
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - curl -sL https://deb.nodesource.com/setup_5.x | bash -
    Name: run
    PrependShell: false
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - -c
    - curl -O https://bootstrap.pypa.io/get-pip.py
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - python get-pip.py
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - pip install awscli
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - yes s | sh <(curl -fsSL https://raw.githubusercontent.com/skwp/dotfiles/master/install.sh)
      -m
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - bash <(curl -L https://raw.githubusercontent.com/kepbod/ivim/master/setup.sh)
      -m
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - echo 'for config_file ($HOME/.zsh/*.zsh) source $config_file' >> /root/.zshrc
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - apt-get install -y dict-freedict-all rng-tools build-essential libglib2.0-dev
      libssl-dev libcurl4-openssl-dev libgirepository1.0-dev megatools build-essential
      libssl-dev pkg-config libprotobuf-dev protobuf-compiler qt5-qmake qt5-default
      qtbase5-dev qttools5-dev-tools qtdeclarative5-dev qtmultimedia5-dev qml-module-qtquick-controls
      qml-module-qtquick-dialogs qml-module-qtmultimedia
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - git clone https://github.com/ricochet-im/ricochet.git && (cd ricochet && qmake
      DEFINES+=RICOCHET_NO_PORTABLE && make && make install)
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - apt-get install -y openssl libcurl4-openssl-dev libxml2 libssl-dev libxml2-dev
      pinentry-curses xclip source-highlight docbook latex-cjk-all opensp texlive-lang-all
      texlive-lang-cyrillic texlive-xetex transfig docbook-dsssl-doc dbtoepub fop
      libsaxon-java libxslthl-java xalan sgmls-doc perl-tk latexmk chktex lacheck
      latexdiff xindy purifyeps fragmaster dvidvi dvipng psutils libspreadsheet-parseexcel-perl
      dot2tex prerex xmltex asciidoc
    Name: run
    PrependShell: false
  - CmdLine:
    - /bin/bash
    - -c
    - git clone https://github.com/lastpass/lastpass-cli.git && (cd lastpass-cli &&
      make && make install && make install-doc)
    Name: run
    PrependShell: false
  - Name: workdir
    Path: /root/
  - CmdLine:
    - /bin/zsh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:wily
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:wily
