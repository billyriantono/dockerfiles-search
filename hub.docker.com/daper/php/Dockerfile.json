{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.5-fpm-alpine",
      "SourceCode": "FROM php:5.5-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:5.5-fpm-alpine"
      },
      "Commands": [
        {
          "Maintainer": "\"daper \u003cdavid@daper.email\u003e\"",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "printf \"\\n%s\\n%s\" \"@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\" \"@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories     \u0026\u0026 apk --update upgrade     \u0026\u0026 apk add autoconf automake make gcc g++ libtool pkgconfig libmcrypt-dev re2c libressl@edge libressl-dev@edge git zlib-dev xdg-utils libpng-dev freetype-dev libjpeg-turbo-dev openssh-client libxslt-dev ca-certificates gmp-dev     \u0026\u0026 update-ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1) gd curl mcrypt mysqli pdo_mysql bcmath zip xml xmlreader xmlwriter simplexml soap json iconv fileinfo dom xsl pcntl pdo sockets gmp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add rabbitmq-c@testing rabbitmq-c-dev@testing     \u0026\u0026 pecl install amqp     \u0026\u0026 docker-php-ext-enable amqp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install raphf-1.1.2     \u0026\u0026 docker-php-ext-enable raphf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add cyrus-sasl-dev libmemcached-dev     \u0026\u0026 git clone \"https://github.com/php-memcached-dev/php-memcached.git\"     \u0026\u0026 cd php-memcached     \u0026\u0026 phpize     \u0026\u0026 ./configure --disable-memcached-sasl     \u0026\u0026 make     \u0026\u0026 make install     \u0026\u0026 docker-php-ext-enable memcached"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mongodb     \u0026\u0026 docker-php-ext-enable mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install apcu-4.0.11     \u0026\u0026 docker-php-ext-enable apcu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug     \u0026\u0026 docker-php-ext-enable xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add libssh2-dev@edge     \u0026\u0026 pecl install ssh2     \u0026\u0026 docker-php-ext-enable ssh2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install redis-2.2.8     \u0026\u0026 docker-php-ext-enable redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS \"https://getcomposer.org/installer\" | php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/conf.d/custom.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "fpm.conf",
            "/usr/local/etc/php-fpm.d/zzz-fpm.conf"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "rm -rf /var/cache/apk \u0026\u0026 mkdir -p /var/cache/apk"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}