{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "cuihairu/centos:7-gcc",
      "SourceCode": "FROM cuihairu/centos:7-gcc",
      "Platform": "",
      "From": {
        "Image": "cuihairu/centos:7-gcc"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "author",
              "Value": "\"cuihairu \u003cchuihairu@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum install -y          deltarpm         tk-devel         uuid-devel         wget         openssl-devel         ncurses-devel         sqlite-devel         zlib-devel         zlib-static         zlib         readline-devel         xz-devel         gdbm-devel         bzip2-devel         libffi-devel         libssl-devel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GPG_KEY",
              "Value": "0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHON_VERSION",
              "Value": "3.7.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex         \u0026\u0026 wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"     \u0026\u0026 wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\"     \u0026\u0026 gpg --batch --verify python.tar.xz.asc python.tar.xz     \u0026\u0026 { command -v gpgconf \u003e /dev/null \u0026\u0026 gpgconf --kill all || :; }     \u0026\u0026 rm -rf \"$GNUPGHOME\" python.tar.xz.asc     \u0026\u0026 mkdir -p /usr/src/python     \u0026\u0026 tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz     \u0026\u0026 rm python.tar.xz         \u0026\u0026 cd /usr/src/python     \u0026\u0026 ./configure         --enable-loadable-sqlite-extensions         --enable-shared         --with-system-expat         --with-system-ffi         --without-ensurepip         --enable-optimizations     \u0026\u0026 make -j `cat /proc/cpuinfo |grep \"processor\"|wc -l`     \u0026\u0026 make install     \u0026\u0026 echo \"/usr/local/lib/\" \u003e\u003e/etc/ld.so.conf     \u0026\u0026 ldconfig         \u0026\u0026 find /usr/local -depth         \\(             \\( -type d -a \\( -name test -o -name tests \\) \\)             -o             \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\)         \\) -exec rm -rf '{}' +     \u0026\u0026 rm -rf /usr/src/python         \u0026\u0026 python3 --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/bin     \u0026\u0026 ln -s idle3 idle     \u0026\u0026 ln -s pydoc3 pydoc     \u0026\u0026 ln -s python3 python     \u0026\u0026 ln -s python3-config python-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "18.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex;         wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py';         python get-pip.py         --disable-pip-version-check         --no-cache-dir         \"pip==$PYTHON_PIP_VERSION\"     ;     pip --version;         find /usr/local -depth         \\(             \\( -type d -a \\( -name test -o -name tests \\) \\)             -o             \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\)         \\) -exec rm -rf '{}' +;     rm -f get-pip.py     \u0026\u0026 mkdir ~/.pip/     \u0026\u0026 touch ~/.pip/pip.conf     \u0026\u0026 echo \"[global]\" \u003e\u003e ~/.pip/pip.conf     \u0026\u0026 echo \"timeout = 6000\" \u003e\u003e ~/.pip/pip.conf     \u0026\u0026 echo \"index-url = http://mirrors.aliyun.com/pypi/simple/\" \u003e\u003e ~/.pip/pip.conf     \u0026\u0026 echo \"[install]\" \u003e\u003e ~/.pip/pip.conf     \u0026\u0026 echo \"use-mirrors = true\" \u003e\u003e ~/.pip/pip.conf     \u0026\u0026 echo \"mirrors = http://mirrors.aliyun.com/pypi/simple/\" \u003e\u003e ~/.pip/pip.conf     \u0026\u0026 echo \"trusted-host = mirrors.aliyun.com\" \u003e\u003e ~/.pip/pip.conf     \u0026\u0026 yum clean all     \u0026\u0026 rm -rf /var/cache/yum/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}