MetaArgs: null
Stages:
- BaseName: microsoft/aspnetcore-build
  Commands:
  - Env:
    - Key: SONAR_SCANNER_VERSION
      Value: 3.1.0.1141
    - Key: SONAR_SCANNER_MSBUILD_VERSION
      Value: 4.1.0.1148
    - Key: SONAR_SCANNER_MSBUILD_PATH
      Value: /opt/sonar-scanner-msbuild
    - Key: DOTNET_BUILD_DIR
      Value: /build_dir
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tbzip2 \t\tunzip
      \t\txz-utils \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname
      \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} > /usr/local/bin/docker-java-home
      \t&& chmod +x /usr/local/bin/docker-java-home"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -svT "/usr/lib/jvm/java-8-openjdk-$(dpkg --print-architecture)" /docker-java-home
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /docker-java-home/jre
    Name: env
  - Env:
    - Key: JAVA_VERSION
      Value: 8u162
    Name: env
  - Env:
    - Key: JAVA_DEBIAN_VERSION
      Value: 8u162-b12-1~deb9u1
    Name: env
  - Env:
    - Key: CA_CERTIFICATES_JAVA_VERSION
      Value: 20170531+nmu1
    Name: env
  - CmdLine:
    - "set -ex; \t\tif [ ! -d /usr/share/man/man1 ]; then \t\tmkdir -p /usr/share/man/man1;
      \tfi; \t\tapt-get update; \tapt-get install -y \t\topenjdk-8-jre-headless=\"$JAVA_DEBIAN_VERSION\"
      \t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \t; \trm -rf /var/lib/apt/lists/*;
      \t\t[ \"$(readlink -f \"$JAVA_HOME\")\" = \"$(docker-java-home)\" ]; \t\tupdate-alternatives
      --get-selections | awk -v home=\"$(readlink -f \"$JAVA_HOME\")\" 'index($3,
      home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\"
      }'; \tupdate-alternatives --query java | grep -q 'Status: manual'"
    Name: run
    PrependShell: true
  - CmdLine:
    - /var/lib/dpkg/info/ca-certificates-java.postinst configure
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/$SONAR_SCANNER_MSBUILD_VERSION/sonar-scanner-msbuild-$SONAR_SCANNER_MSBUILD_VERSION-netcoreapp2.0.zip
      -O /opt/sonar-scanner-msbuild.zip   && mkdir -p $SONAR_SCANNER_MSBUILD_PATH   &&
      mkdir -p $DOTNET_BUILD_DIR   && unzip /opt/sonar-scanner-msbuild.zip -d $SONAR_SCANNER_MSBUILD_PATH   &&
      rm /opt/sonar-scanner-msbuild.zip   && chmod -R 775 $SONAR_SCANNER_MSBUILD_PATH   &&
      chmod -R 775 $DOTNET_BUILD_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -O /bin/jq     &&
      chmod +x /bin/jq
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$SONAR_SCANNER_MSBUILD_PATH:$SONAR_SCANNER_MSBUILD_PATH/sonar-scanner-$SONAR_SCANNER_VERSION/bin:${PATH}"'
    Name: env
  - Name: workdir
    Path: $DOTNET_BUILD_DIR
  From:
    Image: microsoft/aspnetcore-build
  Name: ""
  Platform: ""
  SourceCode: FROM microsoft/aspnetcore-build
