MetaArgs: null
Stages:
- BaseName: mhart/alpine-node:8.11.2
  Commands:
  - CmdLine:
    - 'mkdir -p /usr/local/etc   && {     echo ''install: --no-document'';     echo
      ''update: --no-document'';   } >> /usr/local/etc/gemrc'
    Name: run
    PrependShell: true
  - Env:
    - Key: RUBY_MAJOR
      Value: "2.5"
    Name: env
  - Env:
    - Key: RUBY_VERSION
      Value: 2.5.1
    Name: env
  - Env:
    - Key: RUBY_DOWNLOAD_SHA512
      Value: 67badcd96fd3808cafd6bc86c970cd83aee7e5ec682f34e7353663d96211a6af314a4c818e537ec8ca51fbc0737aac4e28e0ebacf1a4d1e13db558b623a0f6b1
    Name: env
  - Env:
    - Key: RUBYGEMS_VERSION
      Value: 2.7.4
    Name: env
  - CmdLine:
    - set -ex   && apk add --no-cache --virtual .ruby-builddeps     autoconf     bison     bzip2     bzip2-dev     ca-certificates     coreutils     curl     gcc     gdbm-dev     glib-dev     libc-dev     libffi-dev     libxml2-dev     libxslt-dev     linux-headers     make     ncurses-dev     libressl-dev     procps     readline-dev     ruby     yaml-dev     zlib-dev   &&
      curl -fSL -o ruby.tar.gz "http://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz"   &&
      echo "$RUBY_DOWNLOAD_SHA512 *ruby.tar.gz" | sha512sum -c -   && mkdir -p /usr/src   &&
      tar -xzf ruby.tar.gz -C /usr/src   && mv "/usr/src/ruby-$RUBY_VERSION" /usr/src/ruby   &&
      rm ruby.tar.gz   && cd /usr/src/ruby   && { echo '#define ENABLE_PATH_CHECK
      0'; echo; cat file.c; } > file.c.new && mv file.c.new file.c   && autoconf   &&
      ac_cv_func_isnan=yes ac_cv_func_isinf=yes     ./configure --disable-install-doc   &&
      make -j"$(getconf _NPROCESSORS_ONLN)"   && make install   && runDeps="$(     scanelf
      --needed --nobanner --recursive /usr/local       | awk '{ gsub(/,/, "\nso:",
      $2); print "so:" $2 }'       | sort -u       | xargs -r apk info --installed       |
      sort -u   )"   && apk add --virtual .ruby-rundeps $runDeps     bzip2     ca-certificates     curl     libffi-dev     libressl-dev     yaml-dev     procps     zlib-dev   &&
      apk del .ruby-builddeps   && gem update --system $RUBYGEMS_VERSION   && rm -r
      /usr/src/ruby
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - '{     echo ''#!/bin/sh'';     echo ''set -e'';     echo;     echo ''dirname
      "$(dirname "$(readlink -f "$(which javac || which java)")")"'';   } > /usr/local/bin/docker-java-home   &&
      chmod +x /usr/local/bin/docker-java-home'
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk/jre
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin
    Name: env
  - CmdLine:
    - set -x   && apk add --no-cache openjdk8-jre   && [ "$JAVA_HOME" = "$(docker-java-home)"
      ]
    Name: run
    PrependShell: true
  - Env:
    - Key: PACKAGES
      Value: '"  dumb-init   bash   ca-certificates   python2   py-setuptools   build-base
        "'
    Name: env
  - CmdLine:
    - echo   && apk add --no-cache $PACKAGES  && if [[ ! -e /usr/bin/python ]];        then
      ln -sf /usr/bin/python2.7 /usr/bin/python; fi   && if [[ ! -e /usr/bin/python-config
      ]]; then ln -sf /usr/bin/python2.7-config /usr/bin/python-config; fi   && if
      [[ ! -e /usr/bin/easy_install ]];  then ln -sf /usr/bin/easy_install-2.7 /usr/bin/easy_install;
      fi   && easy_install pip   && pip install --upgrade pip   && if [[ ! -e /usr/bin/pip
      ]]; then ln -sf /usr/bin/pip2.7 /usr/bin/pip; fi   && echo
    Name: run
    PrependShell: true
  From:
    Image: mhart/alpine-node:8.11.2
  Name: ""
  Platform: ""
  SourceCode: FROM mhart/alpine-node:8.11.2
