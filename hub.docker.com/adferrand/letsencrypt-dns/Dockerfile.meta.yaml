MetaArgs: null
Stages:
- BaseName: python:alpine3.8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Adrien Ferrand <ferrand.ad@gmail.com>"'
    Name: label
  - Env:
    - Key: PATH
      Value: /scripts:$PATH
    Name: env
  - Env:
    - Key: LEXICON_VERSION
      Value: 3.0.8
    Name: env
  - Env:
    - Key: CERTBOT_VERSION
      Value: 0.30.0
    Name: env
  - Env:
    - Key: LETSENCRYPT_STAGING
      Value: "false"
    Name: env
  - Env:
    - Key: LETSENCRYPT_USER_MAIL
      Value: noreply@example.com
    Name: env
  - Env:
    - Key: LETSENCRYPT_ACME_V1
      Value: "false"
    Name: env
  - Env:
    - Key: LEXICON_OPTIONS
      Value: '""'
    Name: env
  - Env:
    - Key: LEXICON_PROVIDER
      Value: cloudflare
    Name: env
  - Env:
    - Key: LEXICON_PROVIDER_OPTIONS
      Value: '""'
    Name: env
  - Env:
    - Key: PFX_EXPORT
      Value: "false"
    Name: env
  - Env:
    - Key: PFX_EXPORT_PASSPHRASE
      Value: '""'
    Name: env
  - Env:
    - Key: CERTS_DIRS_MODE
      Value: "0750"
    Name: env
  - Env:
    - Key: CERTS_FILES_MODE
      Value: "0640"
    Name: env
  - Env:
    - Key: CERTS_USER_OWNER
      Value: root
    Name: env
  - Env:
    - Key: CERTS_GROUP_OWNER
      Value: root
    Name: env
  - CmdLine:
    - apk --no-cache --update add rsyslog git libffi libxml2 libxslt libstdc++ openssl
      docker ethtool  && apk --no-cache --update --virtual build-dependencies add
      libffi-dev libxml2-dev libxslt-dev openssl-dev build-base linux-headers  &&
      pip install "certbot==$CERTBOT_VERSION"  && pip install "dns-lexicon==$LEXICON_VERSION"  &&
      pip install "dns-lexicon[namecheap]==$LEXICON_VERSION"  && pip install "dns-lexicon[route53]==$LEXICON_VERSION"  &&
      pip install "dns-lexicon[softlayer]==$LEXICON_VERSION"  && pip install "dns-lexicon[subreg]==$LEXICON_VERSION"  &&
      pip install "dns-lexicon[transip]==$LEXICON_VERSION"  && pip install circus  &&
      mkdir -p /var/lib/letsencrypt/hooks  && mkdir -p /etc/circus.d  && apk del build-dependencies
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/run.sh
    - /scripts/run.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/watch-domains.sh
    - /scripts/watch-domains.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/autorestart-containers.sh
    - /scripts/autorestart-containers.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/autocmd-containers.sh
    - /scripts/autocmd-containers.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/crontab
    - /etc/crontab
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/circus.ini
    - /etc/circus.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/letsencrypt-dns.ini
    - /etc/circus.d/letsencrypt-dns.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/authenticator.sh
    - /var/lib/letsencrypt/hooks/authenticator.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/cleanup.sh
    - /var/lib/letsencrypt/hooks/cleanup.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/deploy-hook.sh
    - /scripts/deploy-hook.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - files/renew.sh
    - /scripts/renew.sh
  - CmdLine:
    - chmod +x /scripts/*
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /etc/letsencrypt
  - CmdLine:
    - /scripts/run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: python:alpine3.8
  Name: ""
  Platform: ""
  SourceCode: FROM python:alpine3.8
