MetaArgs: null
Stages:
- BaseName: gitlab/gitlab-ce:10.1.1-ce.0
  Commands:
  - Env:
    - Key: GITLAB_VERSION
      Value: v10.1.1
    Name: env
  - Env:
    - Key: GITLAB_ZH_VERSION
      Value: ${GITLAB_VERSION}-zh
    Name: env
  - CmdLine:
    - set -xe     && export DEBIAN_FRONTEND=noninteractive     && apt-get update     &&
      apt-get install -yqq locales tzdata     && locale-gen en_US.UTF-8     && rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US:en
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: TZ
      Value: Asia/Shanghai
    Name: env
  - Env:
    - Key: GITLAB_DIR
      Value: /opt/gitlab/embedded/service/gitlab-rails
    Name: env
  - Env:
    - Key: GITLAB_ZH_GIT
      Value: https://gitlab.com/xhang/gitlab.git
    Name: env
  - CmdLine:
    - 'set -xe     && echo " # Preparing ..."     && export DEBIAN_FRONTEND=noninteractive     &&
      export SSL_CERT_DIR=/etc/ssl/certs/     && export GIT_SSL_CAPATH=/etc/ssl/certs/     &&
      curl -sL https://deb.nodesource.com/setup_6.x | bash -     && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg
      | apt-key add -     && echo "deb https://dl.yarnpkg.com/debian/ stable main"
      | tee /etc/apt/sources.list.d/yarn.list     && apt-get update     && export
      buildDeps=''lsb-release patch nodejs python build-essential yarn cmake''     &&
      apt-get install -yqq $buildDeps     && echo " # Generating translation patch
      ..."     && cd /tmp     && git clone ${GITLAB_ZH_GIT} gitlab     && cd gitlab     &&
      export IGNORE_DIRS='':!spec :!features :!.gitignore :!locale :!app/assets/javascripts/locale''     &&
      git diff ${GITLAB_VERSION}..${GITLAB_ZH_VERSION} -- .  ${IGNORE_DIRS} > ../zh_CN.diff     &&
      echo " # Patching ..."     && patch -d ${GITLAB_DIR} -p1 < ../zh_CN.diff     &&
      echo " # Copy locale files ..."     && cp -R locale ${GITLAB_DIR}/     && echo
      " # Regenerating the assets"     && cd ${GITLAB_DIR}     && cp config/gitlab.yml.example
      config/gitlab.yml     && cp config/database.yml.postgresql config/database.yml     &&
      cp config/secrets.yml.example config/secrets.yml     && export NODE_ENV=production     &&
      export RAILS_ENV=production     && export SETUP_DB=false     && export USE_DB=false     &&
      export SKIP_STORAGE_VALIDATION=true     && export WEBPACK_REPORT=true     &&
      export NO_COMPRESSION=true     && export NO_PRIVILEGE_DROP=true     && bundle
      exec rake gettext:pack     && bundle exec rake gettext:po_to_json     && yarn
      install --production --pure-lockfile     && bundle exec rake gitlab:assets:compile     &&
      echo " # Cleaning ..."     && yarn cache clean     && rm -rf log         tmp         config/gitlab.yml         config/database.yml         config/secrets.yml         .secret         .gitlab_shell_secret         .gitlab_workhorse_secret         node_modules     &&
      apt-get purge -y --auto-remove         -o APT::AutoRemove::RecommendsImportant=false         -o
      APT::AutoRemove::SuggestsImportant=false         $buildDeps     && find /usr/lib/
      -name __pycache__ | xargs rm -rf     && rm -rf /tmp/gitlab /tmp/*.diff /root/.cache
      /var/lib/apt/lists/*'
    Name: run
    PrependShell: true
  From:
    Image: gitlab/gitlab-ce:10.1.1-ce.0
  Name: ""
  Platform: ""
  SourceCode: FROM gitlab/gitlab-ce:10.1.1-ce.0
