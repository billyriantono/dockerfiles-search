MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: mantainer
      Value: '"Read the Docs <support@readthedocs.com>"'
    Name: label
  - Labels:
    - Key: version
      Value: '"5.0.0"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: APPDIR
      Value: /app
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: PYTHON_VERSION_27
      Value: 2.7.16
    Name: env
  - Env:
    - Key: PYTHON_VERSION_35
      Value: 3.5.7
    Name: env
  - Env:
    - Key: PYTHON_VERSION_36
      Value: 3.6.8
    Name: env
  - Env:
    - Key: PYTHON_VERSION_37
      Value: 3.7.3
    Name: env
  - Env:
    - Key: PYTHON_VERSION_38
      Value: 3.8.0
    Name: env
  - Env:
    - Key: PYPY_VERSION_35
      Value: pypy3.5-7.0.0
    Name: env
  - Env:
    - Key: CONDA_VERSION
      Value: 4.7.12.1
    Name: env
  - Labels:
    - Key: python.version_27
      Value: $PYTHON_VERSION_27
    Name: label
  - Labels:
    - Key: python.version_35
      Value: $PYTHON_VERSION_35
    Name: label
  - Labels:
    - Key: python.version_36
      Value: $PYTHON_VERSION_36
    Name: label
  - Labels:
    - Key: python.version_37
      Value: $PYTHON_VERSION_37
    Name: label
  - Labels:
    - Key: python.version_38
      Value: $PYTHON_VERSION_38
    Name: label
  - Labels:
    - Key: pypy.version_35
      Value: $PYPY_VERSION_35
    Name: label
  - Labels:
    - Key: conda.version
      Value: $CONDA_VERSION
    Name: label
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install       software-properties-common       vim
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install       build-essential       bzr       curl       doxygen       g++       git-core       graphviz-dev       libbz2-dev       libcairo2-dev       libenchant1c2a       libevent-dev       libffi-dev       libfreetype6       libfreetype6-dev       libgraphviz-dev       libjpeg8-dev       libjpeg-dev       liblcms2-dev       libmysqlclient-dev       libpq-dev       libreadline-dev       libsqlite3-dev       libtiff5-dev       libwebp-dev       libxml2-dev       libxslt1-dev       libxslt-dev       mercurial       pandoc       pkg-config       postgresql-client       subversion       zlib1g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y       liblzma-dev       libncurses5-dev       libncursesw5-dev       libssl-dev       llvm       make       python-openssl       tk-dev       wget       xz-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install       texlive-fonts-extra
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install       texlive-latex-extra-doc       texlive-pictures-doc       texlive-publishers-doc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install       texlive-lang-english       texlive-lang-japanese
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install       texlive-full
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install       fonts-symbola       lmodern       latex-cjk-chinese-arphic-bkai00mp       latex-cjk-chinese-arphic-gbsn00lp       latex-cjk-chinese-arphic-gkai00mp       texlive-fonts-recommended       xindy
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install       imagemagick       librsvg2-bin       plantuml       swig
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install       python-pip  && pip install -U       auxlib       virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install       nodejs       npm  && npm install --global       jsdoc       typedoc
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd --gid 205 docs
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m --uid 1005 --gid 205 docs
    Name: run
    PrependShell: true
  - Name: user
    User: docs
  - Name: workdir
    Path: /home/docs
  - CmdLine:
    - curl -O https://repo.continuum.io/miniconda/Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - bash Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh -b -p /home/docs/.conda/
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/home/docs/.conda/bin
    Name: env
  - CmdLine:
    - rm -f Miniconda2-${CONDA_VERSION}-Linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/pyenv/pyenv/archive/master.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip master.zip &&     rm -f master.zip &&     mv pyenv-master ~docs/.pyenv
    Name: run
    PrependShell: true
  - Env:
    - Key: PYENV_ROOT
      Value: /home/docs/.pyenv
    Name: env
  - Env:
    - Key: PATH
      Value: /home/docs/.pyenv/shims:$PATH:/home/docs/.pyenv/bin
    Name: env
  - CmdLine:
    - pyenv install $PYTHON_VERSION_27 &&     pyenv install $PYTHON_VERSION_38 &&     pyenv
      install $PYTHON_VERSION_37 &&     pyenv install $PYTHON_VERSION_35 &&     pyenv
      install $PYTHON_VERSION_36 &&     pyenv install $PYPY_VERSION_35 &&     pyenv
      global         $PYTHON_VERSION_27         $PYTHON_VERSION_38         $PYTHON_VERSION_37         $PYTHON_VERSION_36         $PYTHON_VERSION_35         $PYPY_VERSION_35
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - pyenv local $PYTHON_VERSION_27 &&     pyenv exec pip install --no-cache-dir
      -U pip &&     pyenv exec pip install --no-cache-dir -U setuptools &&     pyenv
      exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy &&     pyenv
      exec pip install --no-cache-dir pandas matplotlib virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv local $PYTHON_VERSION_38 &&     pyenv exec pip install --no-cache-dir
      -U pip &&     pyenv exec pip install --no-cache-dir -U setuptools &&     pyenv
      exec pip install --no-cache-dir --only-binary numpy numpy &&     pyenv exec
      pip install --no-cache-dir pandas matplotlib virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv local $PYTHON_VERSION_37 &&     pyenv exec pip install --no-cache-dir
      -U pip &&     pyenv exec pip install --no-cache-dir -U setuptools &&     pyenv
      exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy &&     pyenv
      exec pip install --no-cache-dir pandas matplotlib virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv local $PYTHON_VERSION_36 &&     pyenv exec pip install --no-cache-dir
      -U pip &&     pyenv exec pip install --no-cache-dir -U setuptools &&     pyenv
      exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy &&     pyenv
      exec pip install --no-cache-dir pandas matplotlib virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv local $PYTHON_VERSION_35 &&     pyenv exec pip install --no-cache-dir
      -U pip &&     pyenv exec pip install --no-cache-dir -U setuptools &&     pyenv
      exec pip install --no-cache-dir --only-binary numpy,scipy numpy scipy &&     pyenv
      exec pip install --no-cache-dir pandas matplotlib virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - pyenv local $PYPY_VERSION_35 &&     pyenv exec python -m ensurepip &&     pyenv
      exec pip3 install --no-cache-dir -U pip &&     pyenv exec pip install --no-cache-dir
      -U setuptools &&     pyenv exec pip install --no-cache-dir virtualenv
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
