{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "Maintainer": "chriamue@gmail.com",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y build-essential git cmake \tqt5-default qttools5-dev qttools5-dev-tools libboost-system-dev libboost-filesystem-dev \tlibboost-python-dev libpython-dev libpython3-dev python-numpy \tlibopencv-dev libpoco-dev libpocomysql* libpocosqlite* libpoconet* libpocoxml* \tlibmysqlclient-dev libsqlite3-dev openssl libssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 git clone https://github.com/opencv/opencv     \t\u0026\u0026 cd /tmp/opencv \u0026\u0026 git checkout 3.4 \u0026\u0026 mkdir -p build \u0026\u0026 cd build \t\u0026\u0026 cmake -DCMAKE_BUILD_TYPE=RELEASE -DWITH_FFMPEG=OFF -DWITH_IPP=OFF .. \t\u0026\u0026 make -j3 \u0026\u0026 make install \u0026\u0026 ldconfig \u0026\u0026 rm -rf /tmp/opencv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 git clone https://github.com/davisking/dlib.git \t\u0026\u0026 cd /tmp/dlib \u0026\u0026 mkdir -p build \u0026\u0026 cd build \u0026\u0026 cmake -DCMAKE_BUILD_TYPE=Release .. \t\u0026\u0026 make -j3 \u0026\u0026 make install \u0026\u0026 ldconfig \u0026\u0026 rm -rf /tmp/dlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 git clone  https://github.com/pocoproject/poco \u0026\u0026 cd poco \u0026\u0026 git checkout poco-1.8.0 \t\u0026\u0026 sed -i 's#mysqlclient_r#mysqlclient mysqlclient_r#g' cmake/FindMySQL.cmake \t\u0026\u0026 cd /tmp/poco \u0026\u0026 mkdir -p build \u0026\u0026 cd build \u0026\u0026 cmake -DCMAKE_BUILD_TYPE=Release .. \t\u0026\u0026 make -j3 \u0026\u0026 make install \u0026\u0026 ldconfig \u0026\u0026 rm -rf /tmp/poco"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd / \u0026\u0026 git clone https://github.com/annotatorproject/annotatorlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /annotatorlib \u0026\u0026 mkdir build \u0026\u0026 cd build     \u0026\u0026 cmake -DCMAKE_BUILD_TYPE=Release .. \t\u0026\u0026 make -j3 \u0026\u0026 make install \u0026\u0026 ldconfig \t\u0026\u0026 ln -s /usr/local/lib/pyannotatorlib.so /usr/lib/python2.7/pyannotatorlib.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /annotatorlib/source/imagesets \u0026\u0026 git clone https://github.com/annotatorproject/annotatorimageset_flickr     \u0026\u0026 cd ../../build \u0026\u0026 cmake .. \u0026\u0026 make -j3 \u0026\u0026 make install \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}