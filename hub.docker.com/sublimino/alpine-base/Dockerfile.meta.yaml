MetaArgs: null
Stages:
- BaseName: alpine:3.6
  Commands:
  - Name: workdir
    Path: /code
  - CmdLine:
    - "apk add --no-cache \tbtrfs-progs \tcurl \te2fsprogs \te2fsprogs-extra \tiptables
      \txfsprogs \txz"
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_BUCKET
      Value: get.docker.com
    Name: env
  - Env:
    - Key: DOCKER_VERSION
      Value: 1.11.1
    Name: env
  - Env:
    - Key: DOCKER_SHA256
      Value: 893e3c6e89c0cd2c5f1e51ea41bc2dd97f5e791fcfa3cee28445df277836339d
    Name: env
  - CmdLine:
    - "set -x \t&& curl -fSL \"https://${DOCKER_BUCKET}/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz\"
      -o docker.tgz \t&& echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \t&&
      tar -xzvf docker.tgz \t&& mv docker/* /usr/local/bin/ \t&& rmdir docker \t&&
      rm docker.tgz \t&& docker -v   && echo \"docker daemon -D -s overlay\" >> $HOME/.bash_history"
    Name: run
    PrependShell: true
  - Env:
    - Key: ALPINE_DIG_URL
      Value: https://github.com/sequenceiq/docker-alpine-dig/releases/download/v9.10.2/dig.tgz
    Name: env
  - Env:
    - Key: APK_PACKAGES
      Value: ack     atop     awstats     bash     bash-completion     bc     build-base     coreutils     curl     docker     docker-bash-completion     findutils     git     git-bash-completion     gnupg     go     grep     jq     less     lsof     man     mtr     nginx     ngrep     nmap     nmap-scripts     nodejs     nodejs-npm     ntop     openssh     py2-pip     python2-dev     python3     python3-dev     smokeping     strace     sudo     supervisor     shadow     sysstat     tar     tcpdump     the_silver_searcher     tree     vim     wget     xmlstarlet
    Name: env
  - CmdLine:
    - sed 's#alpine/v[0-9\.]*/main$#alpine/edge/testing#' /etc/apk/repositories |
      grep testing >> /etc/apk/repositories     && apk --update-cache --arch=x86_64
      add ${APK_PACKAGES}     && pip install s3cmd     && curl -L ${ALPINE_DIG_URL}
      | tar -xzv -C /usr/local/bin/     && curl -L http://www.ivarch.com/programs/sources/pv-1.6.0.tar.gz
      | tar -xvz -C /tmp/     && cd /tmp/pv-1* && ./configure && make install     &&
      sed 's#/bin/ash$#/bin/bash#' -i /etc/passwd     && rm -rf /tmp/pv /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - 'TF_RELEASES=$(curl https://releases.hashicorp.com/index.json);     TF_VERSION=$(echo
      "${TF_RELEASES}" | jq ''.terraform.versions[].version''       | grep -v ''-''
      | sort -V | tail -n1);     echo "Terraform version: ${TF_VERSION}";     echo
      "${TF_RELEASES}"       | jq -r ".terraform.versions[${TF_VERSION}].builds |
      .[].url | match(\".*linux_amd64.*\").string"       | xargs wget       && unzip
      terraform*.zip       && mv terraform /usr/local/bin/ &&       unset TF_RELEASES
      TF_VERSION'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "cache-min 9999999" >> ~/.npmrc     && npm config set cache-min 31540000     &&
      npm i sublimino/rollcage
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /root     && touch /root/.bashrc     && wget --continue https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-186.0.0-linux-x86_64.tar.gz     &&
      tar xzvf google-cloud-sdk-*.tar.gz     && google-cloud-sdk/install.sh       --usage-reporting
      false       --command-completion true       --path-update true       --rc-path
      /root/.bashrc       --additional-components         beta         kubectl         docker-credential-gcr       --quiet
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/root/google-cloud-sdk/bin:${PATH}"'
    Name: env
  - CmdLine:
    - apk --no-cache add ca-certificates     && wget -q -O /etc/apk/keys/sgerrand.rsa.pub
      https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub     &&
      wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.25-r0/glibc-2.25-r0.apk     &&
      apk add glibc-2.25-r0.apk
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /code/
    Name: env
  - Env:
    - Key: PATH
      Value: '"${PATH}:/code/bin"'
    Name: env
  - CmdLine:
    - go get -v -u github.com/golang/dep/cmd/dep
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sfL https://raw.githubusercontent.com/apex/up/master/install.sh | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://github.com/gohugoio/hugo/releases/download/v0.30.2/hugo_0.30.2_Linux-64bit.tar.gz
      -LO   && tar xzvf hugo*.tar.gz   && mv hugo /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.6
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.6
