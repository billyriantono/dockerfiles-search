{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "cmpe679/cmpe679:hw1-4",
      "SourceCode": "FROM cmpe679/cmpe679:hw1-4",
      "Platform": "",
      "From": {
        "Image": "cmpe679/cmpe679:hw1-4"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Syed Ahmed \u003csyed.ahmed.emails@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends         cmake         libgflags-dev         libgtest-dev         libiomp-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libopenmpi-dev         libsnappy-dev         openmpi-bin         openmpi-doc         libgoogle-glog-dev         libprotobuf-dev         protobuf-compiler \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --no-cache-dir --upgrade pip setuptools wheel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install         hypothesis         flask         pydot         python-nvd3         pyyaml         requests         scikit-image         protobuf \u0026\u0026         rm -rf /root/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/workspace/caffe2"
        },
        {
          "CmdLine": [
            "git clone --branch master --recursive https://github.com/caffe2/caffe2.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd caffe2 \u0026\u0026 mkdir build \u0026\u0026 cd build     \u0026\u0026 cmake ..     -DUSE_CUDA=OFF     -DUSE_NNPACK=OFF     -DUSE_ROCKSDB=OFF     -DPYTHON_EXECUTABLE=$(which python3)     -DPYTHON_INCLUDE_DIR=$(python3 -c 'from distutils import sysconfig; print(sysconfig.get_python_inc())')     \u0026\u0026 make -j\"$(nproc)\" install     \u0026\u0026 ldconfig     \u0026\u0026 make clean     \u0026\u0026 cd ..     \u0026\u0026 rm -rf build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/usr/local"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends         libatlas-base-dev         libboost-all-dev         libhdf5-serial-dev \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/workspace/opencv"
        },
        {
          "CmdLine": [
            "git clone https://github.com/opencv/opencv \u0026\u0026     cd opencv \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake .. \u0026\u0026     make \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CAFFE_ROOT",
              "Value": "/workspace/caffe"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$CAFFE_ROOT"
        },
        {
          "CmdLine": [
            "git clone -b 1.0 --depth 1 https://github.com/BVLC/caffe.git . \u0026\u0026     pip3 install --upgrade pip \u0026\u0026     cd python \u0026\u0026 for req in $(cat requirements.txt) pydot; do pip3 install $req; done \u0026\u0026 cd .. \u0026\u0026     mkdir build \u0026\u0026 cd build \u0026\u0026     cmake         -DCPU_ONLY=1         -Dpython_version=3 .. \u0026\u0026     make -j\"$(nproc)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYCAFFE_ROOT",
              "Value": "$CAFFE_ROOT/python"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "$PYCAFFE_ROOT:$PYTHONPATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"$CAFFE_ROOT/build/lib\" \u003e\u003e /etc/ld.so.conf.d/caffe.conf \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install python-dateutil --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install tensorflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install http://download.pytorch.org/whl/cpu/torch-0.3.0.post4-cp35-cp35m-linux_x86_64.whl         torchvision"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/workspace"
        }
      ]
    }
  ]
}