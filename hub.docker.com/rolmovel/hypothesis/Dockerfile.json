{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "gliderlabs/alpine:3.5",
      "SourceCode": "FROM gliderlabs/alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "gliderlabs/alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "Hypothes.is Project and contributors",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk-install     ca-certificates     collectd     collectd-nginx     libffi     libpq     nginx     python     py-pip     nodejs     git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "addgroup -S hypothesis \u0026\u0026 adduser -S -G hypothesis -h /var/lib/hypothesis hypothesis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/lib/hypothesis"
        },
        {
          "CmdLine": [
            "chown -R hypothesis:hypothesis /var/log/nginx /var/lib/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "./"
          ]
        },
        {
          "CmdLine": [
            "apk-install --virtual build-deps     build-base     libffi-dev     postgresql-dev     python-dev   \u0026\u0026 pip install --no-cache-dir -U pip supervisor   \u0026\u0026 pip install --no-cache-dir -r requirements.txt   \u0026\u0026 apk del build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/collectd.conf",
            "/etc/collectd/collectd.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir /etc/collectd/collectd.conf.d  \u0026\u0026 chown hypothesis:hypothesis /etc/collectd/collectd.conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "[ -d .git ] \u0026\u0026 chown -R hypothesis:hypothesis .git || :"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install --production   \u0026\u0026 NODE_ENV=production node_modules/.bin/gulp build   \u0026\u0026 npm cache clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/var/lib/hypothesis/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "utf_8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/var/lib/hypothesis:$PYTHONPATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "hypothesis"
        },
        {
          "CmdLine": [
            "init-env",
            "supervisord",
            "-c",
            "conf/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}