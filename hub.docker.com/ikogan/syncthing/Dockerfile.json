{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "golang:1.9",
      "SourceCode": "FROM golang:1.9",
      "Platform": "",
      "From": {
        "Image": "golang:1.9"
      },
      "Commands": [
        {
          "Maintainer": "Ilya Kogan \u003cikogan@mythicnet.org\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.9"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y git curl jq xmlstarlet wget ca-certificates \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/build.sh",
            "/build.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /build.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker/start.sh",
            "/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "SYNCTHING_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "SYNCTHING_INOTIFY_VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "SYNCTHING_VERSION",
              "Value": "${SYNCTHING_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SYNCTHING_INOTIFY_VERSION",
              "Value": "${SYNCTHING_INOTIFY_VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/build.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/syncthing"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "21027/udp",
            "22000",
            "22067",
            "22070",
            "8384",
            "8443"
          ]
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}