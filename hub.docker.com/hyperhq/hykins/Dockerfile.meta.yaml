MetaArgs: null
Stages:
- BaseName: jenkins/jenkins:2.138.3
  Commands:
  - Maintainer: Jimmy Xu <jimmy@hyper.sh>
    Name: maintainer
  - Name: user
    User: root
  - CmdLine:
    - wget https://hyper-install.s3.amazonaws.com/hyper-linux-x86_64.tar.gz -O /tmp/hyper-linux-x86_64.tar.gz   &&
      cd /usr/local/bin/ && tar -xzvf /tmp/hyper-linux-x86_64.tar.gz && chmod +x /usr/local/bin/hyper   &&
      mkdir ${JENKINS_HOME}/bin; cp /usr/local/bin/hyper ${JENKINS_HOME}/bin/hyper   &&
      rm -rf /tmp/hyper-linux-x86_64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s ${JENKINS_HOME}/.hyper /.hyper && ln -s ${JENKINS_HOME}/.hyper /root/.hyper
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/install-plugins.sh  hyper-commons:0.1.5 hyper-slaves:0.1.11
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/install-plugins.sh  cloudbees-folder timestamper workflow-aggregator
      subversion ldap                     antisamy-markup-formatter ws-cleanup github-organization-folder
      ssh-slaves email-ext                    build-timeout ant pipeline-stage-view
      matrix-auth mailer                     credentials-binding gradle git pam-auth
    Name: run
    PrependShell: true
  - Env:
    - Key: JENKINS_HOME
      Value: /var/jenkins_home
    Name: env
  - Env:
    - Key: JENKINS_VERSION
      Value: 2.138.3
    Name: env
  - Name: workdir
    Path: $JENKINS_HOME
  - Name: volume
    Volumes:
    - $JENKINS_HOME
  - CmdLine:
    - /sbin/tini
    - --
    - /usr/local/bin/jenkins.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "50000"
  - Env:
    - Key: PRODUCTION
      Value: ${PRODUCTION:-false}
    Name: env
  - Env:
    - Key: ADMIN_USERNAME
      Value: ${ADMIN_USERNAME:-admin}
    Name: env
  - Env:
    - Key: ADMIN_PASSWORD
      Value: ${ADMIN_PASSWORD:-nimda}
    Name: env
  - CmdLine:
    - mkdir -p /var/lib/jenkins/init.groovy.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - groovy/disableSetupWizard/basic-security.groovy
    - /var/lib/jenkins/init.groovy.d/basic-security.groovy
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - groovy/initJenkinsURL/setup-jenkins-script.groovy
    - /var/lib/jenkins/init.groovy.d/setup-jenkins-script.groovy
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - groovy/disableStrictVerification/set-strict-verification.groovy
    - /var/lib/jenkins/init.groovy.d/set-strict-verification.groovy
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - groovy/CSRFProtection/enabling-csrf-protection.groovy
    - /var/lib/jenkins/init.groovy.d/enabling-csrf-protection.groovy
  - CmdLine:
    - echo $JENKINS_VERSION > /var/lib/jenkins/jenkins.install.UpgradeWizard.state
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - script/jenkins.sh
    - /usr/local/bin/jenkins.sh
  - Env:
    - Key: ACCESS_KEY
      Value: ${ACCESS_KEY:-}
    Name: env
  - Env:
    - Key: SECRET_KEY
      Value: ${SECRET_KEY:-}
    Name: env
  - Env:
    - Key: DOCKER_HUB_USERNAME
      Value: ${DOCKER_HUB_USERNAME:-}
    Name: env
  - Env:
    - Key: DOCKER_HUB_PASSWORD
      Value: ${DOCKER_HUB_PASSWORD:-}
    Name: env
  - Env:
    - Key: DOCKER_HUB_EMAIL
      Value: ${DOCKER_HUB_EMAIL:-}
    Name: env
  - Env:
    - Key: JENKINS_URL
      Value: ${JENKINS_URL:-}
    Name: env
  - CmdLine:
    - /usr/local/bin/install-plugins.sh ghprb
    Name: run
    PrependShell: true
  From:
    Image: jenkins/jenkins:2.138.3
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins/jenkins:2.138.3
