{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.4-fpm",
      "SourceCode": "FROM php:7.4-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.4-fpm"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MYSQL_SERVER_VERSION",
              "Value": "mysql-5.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/home/composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_PROCESS_TIMEOUT",
              "Value": "600"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "INSTALL_PROFILER",
          "Name": "arg",
          "Value": "true"
        },
        {
          "Key": "CLEAN_BINARIES",
          "Name": "arg",
          "Value": "true"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y wget gnupg iputils-ping iproute2 curl     \u0026\u0026 echo deb http://httpredir.debian.org/debian stable main contrib \u003e\u003e/etc/apt/sources.list     \u0026\u0026 echo deb http://security.debian.org/ stable/updates main contrib \u003e\u003e/etc/apt/sources.list     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y gnupg     \u0026\u0026 apt-get upgrade -y    \u0026\u0026 curl -sL https://d2buw04m05mirl.cloudfront.net/setup_11.x | sed \"s/deb.nodesource.com/d2buw04m05mirl.cloudfront.net/\" | sed \"s/\\(deb\\(-src\\)\\? http\\)s/\\1/\" | bash -     \u0026\u0026 apt-get install -y         debian-archive-keyring         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         zlib1g-dev         libzip-dev libbz2-dev         libgeoip-dev         expect-dev         libgmp-dev         libmagickwand-dev libmagickcore-dev imagemagick         libsodium-dev         python         locales         nodejs         git zip unzip         redis-server redis-tools         procps nano mc    \u0026\u0026 apt-key adv --keyserver keys.gnupg.net --recv-keys 8C718D3B5072E1F5     \u0026\u0026 curl -fsSL https://unikrn-tools.s3-accelerate.amazonaws.com/docker/mysql-apt-config_0.8.3-1_all.deb -o /tmp/mysql.deb         \u0026\u0026 dpkg -i /tmp/mysql.deb         \u0026\u0026 rm /tmp/mysql.deb        \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y mysql-community-server     \u0026\u0026 ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h     \u0026\u0026 mkdir -p /tmp/oniguruma         \u0026\u0026 TMP_ORIG_PATH=$(pwd)         \u0026\u0026 cd /tmp/oniguruma         \u0026\u0026 curl -Ls https://unikrn-tools.s3-accelerate.amazonaws.com/docker/onig-6.9.4.tar.gz | tar xzC /tmp/oniguruma --strip-components=1         \u0026\u0026 ./configure --prefix=/usr/local         \u0026\u0026 make -j $(nproc)         \u0026\u0026 make install         \u0026\u0026 cd \"$TMP_ORIG_PATH\"     \u0026\u0026 docker-php-ext-install -j$(nproc) iconv     \u0026\u0026 docker-php-ext-configure gd --with-freetype --with-jpeg     \u0026\u0026 docker-php-ext-install -j$(nproc) gd pdo pdo_mysql mysqli bcmath mbstring bz2 zip gmp soap intl sodium sysvmsg sysvsem sysvshm ffi posix opcache shmop     \u0026\u0026 apt-get upgrade -y    \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 curl -sS https://unikrn-tools.s3-accelerate.amazonaws.com/docker/geo.tgz | tar -xz -C /     \u0026\u0026 EXPECTED_SIGNATURE=$(wget -q -O - https://composer.github.io/installer.sig) \u0026\u0026     curl -s -f -L -o /tmp/composer-setup.php https://getcomposer.org/installer \u0026\u0026     ACTUAL_SIGNATURE=$(php -r \"echo hash_file('SHA384', '/tmp/composer-setup.php');\") \u0026\u0026     if [ \"$EXPECTED_SIGNATURE\" != \"$ACTUAL_SIGNATURE\" ]; then         \u003e\u00262 echo 'ERROR: Invalid installer signature' \u0026\u0026         rm /tmp/composer-setup.php \u0026\u0026         exit 1;     fi \u0026\u0026     php /tmp/composer-setup.php --no-ansi --install-dir=/usr/bin --filename=composer \u0026\u0026     rm -rf /tmp/* /var/tmp/* \u0026\u0026     composer --ansi --version --no-interaction \u0026\u0026     composer global require hirak/prestissimo     \u0026\u0026 pecl install uuid \u0026\u0026 docker-php-ext-enable uuid     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 pecl install redis \u0026\u0026 docker-php-ext-enable redis     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 pecl install apcu apcu_bc-beta \u0026\u0026 docker-php-ext-enable apcu  \u0026\u0026 docker-php-ext-enable apc     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 mv /usr/local/etc/php/conf.d/docker-php-ext-apc.ini /usr/local/etc/php/conf.d/zz-docker-php-ext-apc.ini     \u0026\u0026 pecl install xdebug-beta \u0026\u0026 docker-php-ext-enable xdebug     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 rm -rf /usr/share/GeoIP \u0026\u0026 ln -s /var/lib/geoip-database-contrib /usr/share/GeoIP     \u0026\u0026 update-alternatives --install /usr/share/GeoIP/GeoIPCity.dat GeoIPCity.dat /usr/share/GeoIP/GeoLiteCity.dat 50     \u0026\u0026 pecl install geoip-beta \u0026\u0026 docker-php-ext-enable geoip     \u0026\u0026 echo \"\u003c?php var_dump(geoip_record_by_name('141.30.225.1')); \" | php  | grep Dresden -cq || (echo \"Geo not working\" \u0026\u0026 exit 1)     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 pecl install imagick \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     \u0026\u0026 if [ \"${INSTALL_PROFILER}\" = \"true\" ]; then         TMP_ORIG_PATH=$(pwd) \u0026\u0026         mkdir -p /tmp/phpspy \u0026\u0026         cd /tmp/phpspy \u0026\u0026         git clone https://github.com/adsr/phpspy.git . \u0026\u0026         make \u0026\u0026         cp ./phpspy /usr/bin/ \u0026\u0026         chmod +x /usr/bin/phpspy \u0026\u0026         cd \"$TMP_ORIG_PATH\" \u0026\u0026         rm -rf /tmp/*;     fi     \u0026\u0026 apt-get remove \"*-dev*\" binutils cpp libbinutils x11-common  binutils-common cpp-8 libcairo-gobject2 libcairo-script-interpreter2 libcc1-0 libcroco3 -y --purge     \u0026\u0026 if [ \"${INSTALL_PROFILER}\" = \"true\" ]; then         TMP_ORIG_PATH=$(pwd) \u0026\u0026         cd /usr/bin/ \u0026\u0026 rm mysql_embedded myisam* mysqlslap mysqladmin mysqlpump \u0026\u0026         rm /usr/sbin/mysqld-debug \u0026\u0026         cd \"$TMP_ORIG_PATH\" \u0026\u0026         echo \"binaries cleaned\";     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "*.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "npm install pm2 -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".npmrc",
            "/root"
          ]
        },
        {
          "CmdLine": [
            "echo \"de_DE.UTF-8 UTF-8\\nde_DE ISO-8859-1\\nde_DE@euro ISO-8859-15\\nen_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen \u0026\u0026 /usr/sbin/update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/redis"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6379",
            "9000"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "zzz-unikrn-fpm.conf",
            "/usr/local/etc/php-fpm.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "unikrn-php.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "unikrn-xdebug.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "mysql-tmpfs.cnf",
            "/etc/mysql/mysql.conf.d/zzz-mysql-tmpfs.cnf"
          ]
        },
        {
          "CmdLine": [
            "chmod go-w /etc/mysql/mysql.conf.d/zzz-mysql-tmpfs.cnf \u0026\u0026 chown mysql /etc/mysql/mysql.conf.d/zzz-mysql-tmpfs.cnf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tests.php",
            "/"
          ]
        },
        {
          "CmdLine": [
            "php -d apc.enable_cli=1 /tests.php || exit 1"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}