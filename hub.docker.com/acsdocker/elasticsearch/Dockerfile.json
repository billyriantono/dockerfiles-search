{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "anapsix/alpine-java",
      "SourceCode": "FROM anapsix/alpine-java",
      "Platform": "",
      "From": {
        "Image": "anapsix/alpine-java"
      },
      "Commands": [
        {
          "Maintainer": "Alvaro del Castillo \u003cacs@bitergia.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "ELASTIC_DOWNLOAD_URL",
              "Value": "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_TMPDIR",
              "Value": "tmp"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026  apk add ca-certificates wget curl \u0026\u0026 update-ca-certificates \u0026\u0026 update-ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/es \u0026\u0026  cd /tmp/es \u0026\u0026  wget ${ELASTIC_DOWNLOAD_URL} \u0026\u0026  tar xvzf elasticsearch-*.tar.gz \u0026\u0026  rm -f elasticsearch-*.tar.gz \u0026\u0026  mv /tmp/es/elasticsearch-* /elasticsearch \u0026\u0026  rm -rf /tmp/es"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "elasticsearch.yml",
            "/elasticsearch/config/"
          ]
        },
        {
          "CmdLine": [
            "/elasticsearch/bin/elasticsearch-plugin install -b com.floragunn:search-guard-6:6.3.1-22.3 \u0026\u0026     cd /elasticsearch/plugins/search-guard-6/tools/ \u0026\u0026     rm install_demo_configuration.sh \u0026\u0026     wget https://raw.githubusercontent.com/floragunncom/search-guard/master/tools/install_demo_configuration.sh \u0026\u0026     chmod 755 install_demo_configuration.sh \u0026\u0026     sed -i 's/\\-\\-quiet/\\-q/' /elasticsearch/plugins/search-guard-6/tools/install_demo_configuration.sh \u0026\u0026     ./install_demo_configuration.sh -y \u0026\u0026     echo \"searchguard.enterprise_modules_enabled: false\" \u003e\u003e     /elasticsearch/config/elasticsearch.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "sg_roles_mapping.yml",
            "/usr/share/elasticsearch/plugins/search-guard-6/sgconfig/sg_roles_mapping.yml"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "adduser -D -u 1000 esuser"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R esuser /elasticsearch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "esuser"
        },
        {
          "Env": [
            {
              "Key": "ES_JAVA_OPTS",
              "Value": "\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/elasticsearch/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9200"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "elasticsearch"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}