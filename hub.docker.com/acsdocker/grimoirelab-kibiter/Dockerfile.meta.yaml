MetaArgs: null
Stages:
- BaseName: debian:stable
  Commands:
  - Maintainer: David Pose <dpose@bitergia.com>, Alvaro del Castillo <acs@bitergia.com>,
      David Moreno <dmoreno@bitergia.com>
    Name: maintainer
  - Env:
    - Key: KIBANA_BRANCH
      Value: integration-6.3.1-crossminer
    Name: env
  - Env:
    - Key: KIBANA_REPO
      Value: https://github.com/acs/grimoirelab-kibiter.git
    Name: env
  - CmdLine:
    - groupadd --system kibana &&     useradd --system --create-home --gid kibana
      kibana
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apt-get update &&     apt-get install -y --no-install-recommends             apt-transport-https
      ca-certificates dirmngr gnupg             curl             wget             git             python             unzip
      zip             make             g++             ruby-dev rpm rubygems             libffi-dev             &&     curl
      -o /tmp/nvm-install.sh -sSL https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh
      &&     chmod +x /tmp/nvm-install.sh &&     bash -c /tmp/nvm-install.sh &&     .
      /root/.bashrc &&     gem install ffi &&     gem install fpm -v 1.5.0 &&     gem
      install pleaserun -v 0.0.24 &&     curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg
      | apt-key add - &&     echo "deb https://nightly.yarnpkg.com/debian/ nightly
      main" | tee /etc/apt/sources.list.d/yarn.list &&     apt-get update && apt-get
      -y --no-install-recommends install yarn &&     git clone --depth 1 --branch
      ${KIBANA_BRANCH} ${KIBANA_REPO} kibiter &&     cd kibiter &&     nvm install
      "$( cat .node-version )" &&     yarn kbn bootstrap &&     node scripts/build
      --oss --skip-os-packages --release &&     tar xfz target/kibana-*-linux-x86_64.tar.gz
      --directory /opt &&     mv /opt/kibana-*-linux-x86_64* /opt/kibana &&     chown
      -R kibana:kibana /opt/kibana  &&     cd /opt/kibana/plugins &&     git clone
      https://github.com/dlumbrer/kbn_dotplot.git -b 6-dev &&     cd kbn_dotplot &&     npm
      install  &&     cd .. &&     cd /opt/kibana/plugins &&     git clone https://github.com/dlumbrer/kbn_polar.git
      -b 6-dev &&     cd kbn_polar &&     npm install  &&     cd .. &&     cd /opt/kibana/plugins
      &&     git clone https://github.com/dlumbrer/kbn_radar.git -b 6-dev &&     cd
      kbn_radar &&     npm install  &&     cd .. &&     git clone https://github.com/dlumbrer/kbn_network.git
      network_vis -b 6-dev &&     cd network_vis &&     npm install  &&     cd /root
      &&     cd /opt/kibana/plugins &&     wget https://github.com/acs/search-guard-kibana-plugin/releases/download/6.3.1-CROSSMINER/searchguard-biter-6.3.1-14-beta-1-crossminer.zip
      &&     unzip searchguard-biter-6.3.1-14-beta-1-crossminer.zip &&     cd .. &&     echo
      ''elasticsearch.ssl.verificationMode: none'' >> /opt/kibana/config/kibana.yml
      &&     echo ''searchguard.basicauth.enabled: true'' >> /opt/kibana/config/kibana.yml
      &&     echo ''#searchguard.basicauth.login.contact_email:'' >> /opt/kibana/config/kibana.yml
      &&     rm -rf /kibiter &&     apt-get purge -y g++ git make python zip wget
      &&     apt-get autoremove --purge -y &&     apt-get clean &&     find /var/lib/apt/lists
      -type f -delete &&     rm -rf /root/.npm /root/.node-gyp /root/.nvm /tmp/* /var/tmp/*
      /usr/local/share/.cache &&     bash -c ''find /usr/share/locale -maxdepth 1
      -mindepth 1 -type d | grep -v -e "en_US" | xargs rm -rfv'' &&     bash -c ''localedef
      --list-archive | grep -v -e "en_US" | xargs localedef --delete-from-archive''
      &&     rm -rf /usr/share/doc/*'
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
    Name: run
    PrependShell: true
  - CmdLine:
    - "arch=\"$(dpkg --print-architecture)\" \t&& set -x \t&& curl -o /usr/local/bin/gosu
      -sSL \"https://github.com/tianon/gosu/releases/download/1.3/gosu-$arch\" \t&&
      curl -o /usr/local/bin/gosu.asc -sSL \"https://github.com/tianon/gosu/releases/download/1.3/gosu-$arch.asc\"
      \t&& gpg --verify /usr/local/bin/gosu.asc \t&& rm /usr/local/bin/gosu.asc \t&&
      chmod +x /usr/local/bin/gosu"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/kibana/bin:$PATH
    Name: env
  - CmdLine:
    - rm -rf /opt/kibana/optimize/*
    Name: run
    PrependShell: true
  - CmdLine:
    - ./opt/kibana/bin/kibana | sleep 200 > /tmp/run_kibana_log.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-entrypoint.sh
    - /
  - Name: expose
    Ports:
    - "5601"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - kibana
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stable
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stable
