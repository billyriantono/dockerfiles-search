{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:8",
      "SourceCode": "FROM debian:8",
      "Platform": "",
      "From": {
        "Image": "debian:8"
      },
      "Commands": [
        {
          "Maintainer": "Alvaro del Castillo \u003cacs@bitergia.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEPLOY_USER",
              "Value": "bitergia"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEPLOY_USER_DIR",
              "Value": "/home/${DEPLOY_USER}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCRIPTS_DIR",
              "Value": "${DEPLOY_USER_DIR}/scripts"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd bitergia --create-home --shell /bin/bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ${DEPLOY_USER_DIR}/scripts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install --no-install-recommends         bash locales         git git-core         tree ccze         psmisc         python python3 pep8         python3-requests python3-dateutil python3-bs4         python3-pip python3-dev python3-redis python3-sqlalchemy         python3-flask         gcc make libmysqlclient-dev mariadb-client         unzip curl wget sudo vim ssh         \u0026\u0026     apt-get clean \u0026\u0026     find /var/lib/apt/lists -type f -delete"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install mysqlclient"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install rq \u0026\u0026 pip3 install rq-dashboard==0.3.4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install --upgrade requests"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"${DEPLOY_USER}    ALL=NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g\" /etc/locale.gen \u0026\u0026     locale-gen \"en_US.UTF-8\" \u0026\u0026 update-locale \u0026\u0026     echo \"export LANG='en_US.utf8'\" \u003e\u003e ${DEPLOY_USER_DIR}/.bashrc \u0026\u0026     echo \"alias rqworker-arthur='rqworker -u http://redis --worker-ttl 864000'\" \u003e\u003e ${DEPLOY_USER_DIR}/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${DEPLOY_USER}"
        },
        {
          "Name": "workdir",
          "Path": "${DEPLOY_USER_DIR}"
        },
        {
          "CmdLine": [
            "git clone https://github.com/MetricsGrimoire/sortinghat.git \u0026\u0026     cd sortinghat \u0026\u0026 sudo python3 setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/grimoirelab/GrimoireELK"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/grimoirelab/perceval.git \u0026\u0026     cd perceval \u0026\u0026 sudo python3 setup.py install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "init-gelk",
            "${DEPLOY_USER_DIR}/"
          ]
        },
        {
          "CmdLine": [
            "${DEPLOY_USER_DIR}/init-gelk"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}