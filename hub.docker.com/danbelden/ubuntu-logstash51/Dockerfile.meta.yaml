MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: Dan Belden <me@danbelden.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - Env:
    - Key: LOGSTASH_PATH
      Value: /usr/share/logstash/bin
    Name: env
  - Env:
    - Key: LOGSTASH_HOME
      Value: /usr/share/logstash
    Name: env
  - Env:
    - Key: PATH
      Value: $LOGSTASH_PATH:$PATH
    Name: env
  - Env:
    - Key: LOGSTASH_VERSION
      Value: 5.1.2
    Name: env
  - Env:
    - Key: LOGSTASH_TARBALL
      Value: '"https://artifacts.elastic.co/downloads/logstash/logstash-5.1.2.tar.gz"'
    Name: env
  - Env:
    - Key: LOGSTASH_TARBALL_ASC
      Value: '"https://artifacts.elastic.co/downloads/logstash/logstash-5.1.2.tar.gz.asc"'
    Name: env
  - Env:
    - Key: LOGSTASH_TARBALL_SHA1
      Value: '"dead2e06f74ab09f012ac34dfb18aafeaa7b08f0"'
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openjdk-8-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y openjdk-8-jre
    Name: run
    PrependShell: true
  - CmdLine:
    - java -version
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - set -x
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends ca-certificates wget
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc"
    Name: run
    PrependShell: true
  - CmdLine:
    - export GNUPGHOME="$(mktemp -d)"
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -r /usr/local/bin/gosu.asc
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - CmdLine:
    - gosu nobody true
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex;
    Name: run
    PrependShell: true
  - CmdLine:
    - 'if [ -z "$LOGSTASH_TARBALL_SHA1" ] && [ -z "$LOGSTASH_TARBALL_ASC" ]; then
      echo >&2 ''error: have neither a SHA1 _or_ a signature file -- cannot verify
      download!''; exit 1; fi;'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - wget -O logstash.tar.gz "$LOGSTASH_TARBALL";
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "$LOGSTASH_TARBALL_SHA1" ]; then echo "$LOGSTASH_TARBALL_SHA1 *logstash.tar.gz"
      | sha1sum -c -; fi;
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "$LOGSTASH_TARBALL_ASC" ]; then     wget -O logstash.tar.gz.asc "$LOGSTASH_TARBALL_ASC";     export
      GNUPGHOME="$(mktemp -d)";     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys
      "$GPG_KEY";     gpg --batch --verify logstash.tar.gz.asc logstash.tar.gz;     rm
      -r "$GNUPGHOME" logstash.tar.gz.asc; fi;
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $LOGSTASH_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xf logstash.tar.gz --strip-components=1 -C "$LOGSTASH_HOME";
    Name: run
    PrependShell: true
  - CmdLine:
    - rm logstash.tar.gz;
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -g 1000 logstash
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd logstash -u 1000 -g 1000
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex;
    Name: run
    PrependShell: true
  - Env:
    - Key: LS_SETTINGS_DIR
      Value: '"$LOGSTASH_HOME/config"'
    Name: env
  - CmdLine:
    - if [ -f "$LS_SETTINGS_DIR/logstash.yml" ]; then sed -ri 's!^path\.config:!#&!g'
      "$LS_SETTINGS_DIR/logstash.yml"; fi;
    Name: run
    PrependShell: true
  - CmdLine:
    - 'if [ -f "$LS_SETTINGS_DIR/logstash.yml" ]; then sed -ri ''/http.host:/c\http.host:
      0.0.0.0'' "$LS_SETTINGS_DIR/logstash.yml"; fi;'
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ -f "$LS_SETTINGS_DIR/log4j2.properties" ]; then     cp "$LS_SETTINGS_DIR/log4j2.properties"
      "$LS_SETTINGS_DIR/log4j2.properties.dist";     truncate --size=0 "$LS_SETTINGS_DIR/log4j2.properties";
      fi
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/share/logstash/logs
    Name: run
    PrependShell: true
  - CmdLine:
    - for userDir in "$LOGSTASH_HOME/config" "$LOGSTASH_HOME/data"; do     if [ -d
      "$userDir" ]; then         chown -R logstash:logstash "$userDir";     fi; done;
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R logstash:logstash /usr/share/logstash/logs
    Name: run
    PrependShell: true
  - CmdLine:
    - logstash --version
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get purge -y --auto-remove wget
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9600"
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - -e
    - ""
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
