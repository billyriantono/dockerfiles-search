MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: Dan Belden <me@danbelden.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - Env:
    - Key: RABBITMQ_VERSION
      Value: 3.6.14
    Name: env
  - Env:
    - Key: RABBITMQ_DEBIAN_VERSION
      Value: 3.6.14-1
    Name: env
  - Env:
    - Key: RABBITMQ_LOGS
      Value: '-'
    - Key: RABBITMQ_SASL_LOGS
      Value: '-'
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends ca-certificates wget
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc"
    Name: run
    PrependShell: true
  - CmdLine:
    - export GNUPGHOME="$(mktemp -d)"
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - CmdLine:
    - gosu nobody true
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get purge -y --auto-remove ca-certificates wget
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends erlang-asn1 erlang-base-hipe erlang-crypto
      erlang-eldap erlang-inets erlang-mnesia erlang-nox erlang-os-mon erlang-public-key
      erlang-ssl erlang-xmerl
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -ex; \tkey='0A9AF2115F4687BD29803A206B73A36E6026DFCA'; \texport GNUPGHOME=\"$(mktemp
      -d)\"; \tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tgpg
      --export \"$key\" > /etc/apt/trusted.gpg.d/rabbitmq.gpg; \trm -r \"$GNUPGHOME\";
      \tapt-key list"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'deb http://www.rabbitmq.com/debian testing main' > /etc/apt/sources.list.d/rabbitmq.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends rabbitmq-server=$RABBITMQ_DEBIAN_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/lib/rabbitmq/bin:$PATH
    Name: env
  - Env:
    - Key: HOME
      Value: /var/lib/rabbitmq
    Name: env
  - CmdLine:
    - mkdir -p /var/lib/rabbitmq /etc/rabbitmq
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '[ { rabbit, [ { loopback_users, [ ] } ] } ].' > /etc/rabbitmq/rabbitmq.config
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /etc/rabbitmq
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 777 /var/lib/rabbitmq /etc/rabbitmq
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/rabbitmq
  - CmdLine:
    - ln -sf /var/lib/rabbitmq/.erlang.cookie /root/
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/lib/rabbitmq/lib/rabbitmq_server-$RABBITMQ_VERSION/plugins /plugins
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "15671"
    - "15672"
    - "25672"
    - "4369"
    - "5671"
    - "5672"
  - CmdLine:
    - rabbitmq-plugins enable --offline rabbitmq_management
    Name: run
    PrependShell: true
  - CmdLine:
    - rabbitmq-server
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
