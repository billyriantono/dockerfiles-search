MetaArgs: null
Stages:
- BaseName: ubuntu:trusty
  Commands:
  - Maintainer: Dan Belden <me@danbelden.com>
    Name: maintainer
  - Env:
    - Key: PHPIZE_DEPS
      Value: autoconf file g++ gcc libc-dev make pkg-config re2c
    Name: env
  - Env:
    - Key: PHP_INI_DIR
      Value: /usr/local/etc/php
    Name: env
  - Env:
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector-strong -fpic -fpie -O2"'
    Name: env
  - Env:
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    Name: env
  - Env:
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: GPG_KEYS
      Value: 1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: 7.0.15
    Name: env
  - Env:
    - Key: PHP_URL
      Value: '"https://secure.php.net/get/php-7.0.15.tar.xz/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_ASC_URL
      Value: '"https://secure.php.net/get/php-7.0.15.tar.xz.asc/from/this/mirror"'
    Name: env
  - Env:
    - Key: PHP_SHA256
      Value: '"300364d57fc4a6176ff7d52d390ee870ab6e30df121026649f8e7e0b9657fe93"'
    Name: env
  - Env:
    - Key: PHP_MD5
      Value: '"dca23412f3e3b3987e582091b751925d"'
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get install -y $PHPIZE_DEPS ca-certificates curl libedit2 libsqlite3-0
      libxml2 xz-utils\t--no-install-recommends"
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $PHP_INI_DIR/conf.d
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe;
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update;
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends wget
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*;
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src
  - CmdLine:
    - pwd
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O php.tar.xz "$PHP_URL";
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ -n "$PHP_SHA256" ]; then echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c
      -; fi;
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ -n "$PHP_MD5" ]; then echo "$PHP_MD5 *php.tar.xz" | md5sum -c -; fi;
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ -n "$PHP_ASC_URL" ]; then     wget -O php.tar.xz.asc "$PHP_ASC_URL";     export
      GNUPGHOME="$(mktemp -d)";     for key in $GPG_KEYS; do         gpg --keyserver
      ha.pool.sks-keyservers.net --recv-keys "$key";     done;     gpg --batch --verify
      php.tar.xz.asc php.tar.xz;     rm -r "$GNUPGHOME"; fi;
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get purge -y --auto-remove wget
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-source
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/docker-php-source
    Name: run
    PrependShell: true
  - CmdLine:
    - set -xe
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev
      libxml2-dev --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - export CFLAGS="$PHP_CFLAGS"
    Name: run
    PrependShell: true
  - CmdLine:
    - export CPPFLAGS="$PHP_CPPFLAGS"
    Name: run
    PrependShell: true
  - CmdLine:
    - export LDFLAGS="$PHP_LDFLAGS"
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -l /usr/src
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-source extract
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/php
  - CmdLine:
    - "./configure\t    --with-config-file-path=\"$PHP_INI_DIR\"     --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"
      \    --disable-cgi     --enable-ftp     --enable-mbstring     --enable-mysqlnd
      \    --with-curl     --with-libedit     --with-openssl     --with-zlib     $PHP_EXTRA_CONFIGURE_ARGS"
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j "$(nproc)"
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - CmdLine:
    - '{ find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all
      ''{}'' + || true; }'
    Name: run
    PrependShell: true
  - CmdLine:
    - make clean
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-source delete
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.ini
    - /usr/local/etc/php
  - CmdLine:
    - apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-configure
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/docker-php-ext-configure
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-enable
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/docker-php-ext-enable
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-ext-install
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/docker-php-ext-install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-php-entrypoint
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/docker-php-entrypoint
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - php
    - -a
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:trusty
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:trusty
