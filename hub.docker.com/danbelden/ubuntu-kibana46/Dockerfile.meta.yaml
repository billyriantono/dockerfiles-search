MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: Dan Belden <me@danbelden.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: KIBANA_MAJOR
      Value: "4.6"
    Name: env
  - Env:
    - Key: KIBANA_VERSION
      Value: 4.6.4
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends ca-certificates wget
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - set -x
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc"
    Name: run
    PrependShell: true
  - CmdLine:
    - export GNUPGHOME="$(mktemp -d)"
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -r /usr/local/bin/gosu.asc
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - CmdLine:
    - gosu nobody true
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.9.0
    Name: env
  - CmdLine:
    - set -x
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini.asc"
    Name: run
    PrependShell: true
  - CmdLine:
    - export GNUPGHOME="$(mktemp -d)"
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -r /usr/local/bin/tini.asc
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - tini -h
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex;
    Name: run
    PrependShell: true
  - CmdLine:
    - export GNUPGHOME="$(mktemp -d)";
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "46095ACC8548582C1A2699A9D27D666CD88E42B4";
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --export "46095ACC8548582C1A2699A9D27D666CD88E42B4" > /etc/apt/trusted.gpg.d/elastic.gpg;
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key list
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.elastic.co/kibana/${KIBANA_MAJOR}/debian stable main"
      > /etc/apt/sources.list.d/kibana.list
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends kibana=$KIBANA_VERSION
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R kibana:kibana /opt/kibana
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri "s!^(\#\s*)?(elasticsearch\.url:).*!\2 'http://elasticsearch:9200'!"
      /opt/kibana/config/kibana.yml
    Name: run
    PrependShell: true
  - CmdLine:
    - grep -q 'elasticsearch:9200' /opt/kibana/config/kibana.yml
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /opt/kibana/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get purge -y --auto-remove ca-certificates wget
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /
  - CmdLine:
    - chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5601"
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - kibana
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
