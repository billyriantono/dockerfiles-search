{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "fedora:28",
      "SourceCode": "FROM fedora:28",
      "Platform": "",
      "From": {
        "Image": "fedora:28"
      },
      "Commands": [
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "rm *"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "v2.11.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KUBECTL_VERSION",
              "Value": "v1.10.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "18.05.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOBIN",
              "Value": "/usr/local/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/opt/go"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "dnf --refresh --assumeyes install bats file findutils git golang gpg hostname iputils jq make nmap-ncat procps psmisc sysstat telnet which bind-utils tcpdump"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get github.com/crosbymichael/slex"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pyyaml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://download.docker.com/linux/static/edge/x86_64/docker-$DOCKER_VERSION-ce.tgz \u0026\u0026       tar xfvz docker-$DOCKER_VERSION-ce.tgz \u0026\u0026 mv docker/docker /usr/local/bin \u0026\u0026       rm -r docker-$DOCKER_VERSION-ce.tgz docker \u0026\u0026     curl -LO https://storage.googleapis.com/kubernetes-helm/helm-$HELM_VERSION-linux-amd64.tar.gz \u0026\u0026       tar xfvz helm-$HELM_VERSION-linux-amd64.tar.gz \u0026\u0026 mv linux-amd64/helm /usr/local/bin \u0026\u0026       rm -r helm-$HELM_VERSION-linux-amd64.tar.gz linux-amd64 \u0026\u0026     curl -LO https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl \u0026\u0026       chmod +x kubectl \u0026\u0026 mv kubectl /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tools/*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "echo \"export ETCDCTL_API=3\" \u003e\u003e .bash_profile \u0026\u0026     echo \"alias etcd-health='etcdctl endpoint health'\" \u003e\u003e .bash_profile \u0026\u0026     echo \"alias etcd-status='etcdctl endpoint status -w table'\" \u003e\u003e .bash_profile \u0026\u0026     echo \"export ETCDCTL_CACERT=/media/root/etc/ssl/etcd/etcd-client-ca.crt\" \u003e\u003e .bash_profile \u0026\u0026     echo \"export ETCDCTL_CERT=/media/root/etc/ssl/etcd/etcd-client.crt\" \u003e\u003e .bash_profile \u0026\u0026     echo \"export ETCDCTL_KEY=/media/root/etc/ssl/etcd/etcd-client.key\" \u003e\u003e .bash_profile \u0026\u0026     echo \"export SSH_AUTH_SOCK=~/.ssh.agent.sock\" \u003e\u003e .bash_profile \u0026\u0026     echo \"configure\" \u003e\u003e .bash_profile"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}