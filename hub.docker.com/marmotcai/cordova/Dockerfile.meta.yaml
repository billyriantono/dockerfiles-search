MetaArgs: null
Stages:
- As: nodejs
  BaseName: marmotcai/android-sdk
  Commands:
  - Env:
    - Key: NODEJS_VERSION
      Value: 8.15.0
    - Key: PATH
      Value: $PATH:/opt/node/bin
    Name: env
  - Name: workdir
    Path: '"/opt/node"'
  - CmdLine:
    - apt-get update && apt-get install -y curl git ca-certificates --no-install-recommends
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/* && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-linux-x64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvf node-v${NODEJS_VERSION}-linux-x64.tar.gz --strip-components=1
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f node-v${NODEJS_VERSION}-linux-x64.tar.gz
    Name: run
    PrependShell: true
  From:
    Image: marmotcai/android-sdk
  Name: nodejs
  Platform: ""
  SourceCode: FROM marmotcai/android-sdk AS nodejs
- As: cordova
  BaseName: nodejs
  Commands:
  - Env:
    - Key: WORK_DIR
      Value: /opt
    Name: env
  - Name: workdir
    Path: $WORK_DIR
  - CmdLine:
    - npm i -g --unsafe-perm cordova
    Name: run
    PrependShell: true
  - Key: APPNAME
    Name: arg
    Value: '"exsample"'
  - Env:
    - Key: COMNAME
      Value: com.atoml
    Name: env
  - Env:
    - Key: PACKAGENAME
      Value: $COMNAME.$APPNAME
    Name: env
  - CmdLine:
    - "echo y | cordova create $APPNAME $PACKAGENAME $APPNAME && \tcd $APPNAME &&
      cordova platform add android --save && \tcordova build android --release &&
      \tcordova requirements android"
    Name: run
    PrependShell: true
  - Env:
    - Key: WORK_DIR
      Value: /opt
    Name: env
  - CmdLine:
    - rm -rf $APPNAME
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: nodejs
  Name: cordova
  Platform: ""
  SourceCode: FROM nodejs AS cordova
