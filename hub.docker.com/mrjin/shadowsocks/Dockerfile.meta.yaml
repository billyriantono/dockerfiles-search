MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: mrjin<me@jinfeijie.cn>
    Name: maintainer
  - Name: workdir
    Path: /
  - Env:
    - Key: MIRRORS
      Value: mirrors.ustc.edu.cn
    Name: env
  - Env:
    - Key: SS_VER
      Value: 2.5.6
    Name: env
  - Env:
    - Key: SS_URL
      Value: https://github.com/shadowsocks/shadowsocks-libev/archive/v$SS_VER.tar.gz
    Name: env
  - Env:
    - Key: SERVER_ADDR
      Value: 0.0.0.0
    Name: env
  - Env:
    - Key: SERVER_PORT
      Value: "8888"
    Name: env
  - Env:
    - Key: PASSWORD
      Value: jin123
    Name: env
  - Env:
    - Key: METHOD
      Value: aes-256-cfb
    Name: env
  - Env:
    - Key: TIMEOUT
      Value: "300"
    Name: env
  - Env:
    - Key: DNS_ADDR
      Value: 8.8.8.8
    Name: env
  - Env:
    - Key: DNS_ADDR_2
      Value: 8.8.4.4
    Name: env
  - Env:
    - Key: TUN_PORT
      Value: "443"
    Name: env
  - Env:
    - Key: TUN_CRYPT
      Value: aes-128
    Name: env
  - Env:
    - Key: TUN_MODE
      Value: fast
    Name: env
  - Env:
    - Key: TUN_MTU
      Value: "1350"
    Name: env
  - Env:
    - Key: TUN_DATASHARD
      Value: "10"
    Name: env
  - Env:
    - Key: TUN_PS
      Value: "3"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/*
    - /usr/bin/
  - CmdLine:
    - set -ex &&     sed -i "s/dl-cdn.alpinelinux.org/$MIRRORS/g" /etc/apk/repositories
      &&     apk add --no-cache --virtual .build-deps                                 asciidoc                                 autoconf                                 build-base                                 curl                                 libtool                                 linux-headers                                 openssl-dev                                 pcre-dev                                 tar                                 xmlto
      &&     cd /tmp &&     curl -sSL $SS_URL | tar xz --strip 1 &&     ./configure
      --prefix=/usr --disable-documentation &&     make install &&     cd .. &&     runDeps="$(         scanelf
      --needed --nobanner /usr/bin/ss-*             | awk '{ gsub(/,/, "\nso:", $2);
      print "so:" $2 }'             | xargs -r apk info --installed             |
      sort -u     )" &&     apk add --no-cache --virtual .run-deps $runDeps &&     mv
      /usr/bin/ss-server /usr/bin/ssserver &&     apk del .build-deps &&     rm -rf
      /tmp/*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - $TUN_PORT/udp
  - CmdLine:
    - /usr/bin/start
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
