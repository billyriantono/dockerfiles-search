MetaArgs: null
Stages:
- BaseName: php:7.4-apache
  Commands:
  - CmdLine:
    - apt-get update   && apt-get install -y apt-utils locales   && rm -rf /var/lib/apt/lists/*   &&
      echo "ja_JP.UTF-8 UTF-8" > /etc/locale.gen   && locale-gen ja_JP.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: ja_JP.UTF-8
    Name: env
  - Env:
    - Key: TZ
      Value: '"Asia/Tokyo"'
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: DOCUMENT_ROOT
      Value: /var/www/web/html
    Name: env
  - Env:
    - Key: MEMCACHED_HOST
      Value: memcached_srv
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .bashrc
    - /root/
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y wget gnupg gnupg2
      gnupg1   && wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O -
      | apt-key add -   && sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/
      stretch-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'   && apt-get update   &&
      apt-get install --no-install-recommends -y postgresql-client-12
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y   git curl unzip
      vim wget sudo libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libmcrypt-dev
      libzip-dev   libxml2-dev libpq-dev libpq5 mariadb-client ssl-cert libicu-dev
      libmemcached-dev libgmp3-dev libonig-dev  && docker-php-ext-configure   gd --with-freetype
      --with-jpeg   && docker-php-ext-install -j$(nproc)   mbstring zip gd xml pdo
      pdo_pgsql pdo_mysql soap intl opcache pgsql mysqli gmp  && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl channel-update pecl.php.net   && pecl install memcached   && docker-php-ext-enable
      memcached
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - php.ini
    - /usr/local/etc/php/
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends   tk-dev   uuid-dev   dirmngr   libffi-dev   libssl-dev   libncurses5-dev   libsqlite3-dev   libreadline-dev   libtk8.6   libgdm-dev   libdb4o-cil-dev   libpcap-dev   &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: E3FF2839C048B25C084DEBE9B26995E310250568
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.8.0
    Name: env
  - CmdLine:
    - set -ex     && wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"   &&
      wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"   &&
      export GNUPGHOME="$(mktemp -d)"   && gpg --batch --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$GPG_KEY"   && gpg --batch --verify python.tar.xz.asc python.tar.xz   &&
      { command -v gpgconf > /dev/null && gpgconf --kill all || :; }   && rm -rf "$GNUPGHOME"
      python.tar.xz.asc   && mkdir -p /usr/src/python   && tar -xJC /usr/src/python
      --strip-components=1 -f python.tar.xz   && rm python.tar.xz     && cd /usr/src/python   &&
      gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"   && ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-optimizations   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip   &&
      make -j "$(nproc)"   && make install   && ldconfig     && find /usr/local -depth   \(   \(
      -type d -a \( -name test -o -name tests -o -name idle_test \) \)   -o   \( -type
      f -a \( -name '*.pyc' -o -name '*.pyo' \) \)   \) -exec rm -rf '{}' +   && rm
      -rf /usr/src/python     && python3 --version
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/bin   && ln -s idle3 idle   && ln -s pydoc3 pydoc   && ln -s python3
      python   && ln -s python3-config python-config
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 19.3.1
    Name: env
  - CmdLine:
    - set -ex;     wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py';     python
      get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"   ;   pip
      --version;     find /usr/local -depth   \(   \( -type d -a \( -name test -o
      -name tests \) \)   -o   \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \)
      \)   \) -exec rm -rf '{}' +;   rm -f get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install boto3
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/adminer   && cd /var/www/adminer   && wget https://www.adminer.org/static/download/4.7.5/adminer-4.7.5.php   &&
      wget https://raw.githubusercontent.com/vrana/adminer/master/designs/nicu/adminer.css   &&
      mv adminer-4.7.5.php index.php
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/www/memcached   && cd /var/www/memcached   && wget https://raw.githubusercontent.com/DBezemer/memcachephp/master/memcache.php   &&
      mv ./memcache.php ./index.php
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - virtual.conf
    - /etc/apache2/sites-available/
  - CmdLine:
    - mkdir -p /var/log/httpd/php7.localdomain   && mkdir -p /var/www/web   && ln
      -s /dev/stdout /var/log/httpd/php7.localdomain/access_log   && ln -s /dev/stderr
      /var/log/httpd/php7.localdomain/error_log   && a2enmod rewrite   && a2dissite
      000-default   && service apache2 restart
    Name: run
    PrependShell: true
  - CmdLine:
    - 'chown -R www-data: /var/www'
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php --   --filename=composer   --install-dir=/usr/local/bin
    Name: run
    PrependShell: true
  - Name: user
    User: www-data
  - CmdLine:
    - composer global require --optimize-autoloader   "hirak/prestissimo"
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require --optimize-autoloader   "laravel/installer"
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: workdir
    Path: /var/www/web
  - Name: volume
    Volumes:
    - /var/www/web
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - endpoint_script.sh
    - /tmp
  - Chown: root:root
    From: ""
    Name: copy
    SourcesAndDest:
    - generate_certs.sh
    - /tmp
  - CmdLine:
    - chmod +x /tmp/endpoint_script.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /tmp/generate_certs.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /tmp/endpoint_script.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - apache2-foreground
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.4-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.4-apache
