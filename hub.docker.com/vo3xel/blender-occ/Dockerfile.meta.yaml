MetaArgs: null
Stages:
- BaseName: debian:10.0
  Commands:
  - Env:
    - Key: LANG
      Value: C.UTF-8
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get update --fix-missing &&     apt-get install -y wget bzip2 ca-certificates
      curl git &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&    wget
      --quiet https://repo.anaconda.com/miniconda/Miniconda2-4.7.10-Linux-x86_64.sh
      -O ~/miniconda.sh &&     /bin/bash ~/miniconda.sh -b -p /opt/conda &&     rm
      ~/miniconda.sh &&     /opt/conda/bin/conda clean -tipsy &&     ln -s /opt/conda/etc/profile.d/conda.sh
      /etc/profile.d/conda.sh &&     echo ". /opt/conda/etc/profile.d/conda.sh" >>
      ~/.bashrc &&     echo "conda activate base" >> ~/.bashrc
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.16.1
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
    - /usr/bin/tini
  - CmdLine:
    - chmod +x /usr/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - "conda install python=3.6 &&    conda config --add channels conda-forge &&\tconda
      config --add channels dlr-sc &&\tconda config --add channels pythonocc &&\tconda
      config --add channels oce &&\tconda config --add channels tpaviot &&\tconda
      config --add channels anaconda &&\tconda config --add channels 3dhubs &&\tconda
      config --add channels cadquery &&\tconda info pythonocc-core==0.18 &&\tconda
      list &&\tconda update --all &&\tconda install pythonocc-core==0.17.3"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cat /etc/apt/sources.list &&\tsed -i '/deb http:\\/\\/deb.debian.org\\/debian
      buster main/ a\t\tdeb-src http:\\/\\/deb.debian.org\\/debian buster main' /etc/apt/sources.list
      &&\tsed -i '/deb http:\\/\\/security.debian.org\\/debian-security buster\\/updates
      main/ a\t\tdeb-src http:\\/\\/security.debian.org\\/debian-security buster\\/updates
      main' /etc/apt/sources.list &&\tsed -i '/deb http:\\/\\/deb.debian.org\\/debian
      buster-updates main buster\\/updates main/ a\t\tdeb-src http:\\/\\/deb.debian.org\\/debian
      buster-updates main' /etc/apt/sources.list &&\techo sed-ed-result: &&\tcat /etc/apt/sources.list
      &&\tapt-get update -y && apt-get upgrade -y &&    apt-get install cmake -y &&
      \   apt-get install libboost1.67-dev -y &&    apt-get install libopencolorio-dev
      -y &&    apt-get install libopenimageio-dev -y &&    apt-get install llvm -y
      &&    apt-get install subversion build-essential gettext \t\tlibxi-dev libsndfile1-dev
      \t\tlibpng-dev libjpeg-dev libfftw3-dev \t\tlibopenexr-dev libopenjp2-7-dev
      \t\tlibopenal-dev libalut-dev libvorbis-dev \t\tlibglu1-mesa-dev libsdl1.2-dev
      libfreetype6-dev \t\tlibtiff-dev libavdevice-dev \t\tlibavformat-dev libavutil-dev
      libavcodec-dev libjack-dev \t\tlibswscale-dev libx264-dev libmp3lame-dev python3-dev
      \t\tlibspnav-dev libtheora-dev libjack-dev libglew1.6-dev -y &&\tapt install
      git &&\tapt-get build-dep blender -y"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /blend &&\tcd blend && git clone http://git.blender.org/blender.git &&\tapt-get
      install sudo -y &&\tcd blender &&\tgit branch -a &&\tgit checkout blender2.7
      &&\tgit submodule update --init --recursive &&\tgit submodule foreach git checkout
      master &&\tgit submodule foreach git pull --rebase origin master &&\tmake update
      &&\tapt-get update -y && apt-get install git build-essential -y &&\t./build_files/build_environment/install_deps.sh
      &&\tcd /blend &&\t\tmkdir cmake-make &&\t\tcd cmake-make &&\t\tcmake ../blender
      \t\t\t-DPYTHON_LIBRARY=/opt/conda/lib/python3.6 \t\t\t-DPYTHON_INCLUDE_DIR=/opt/conda/include/python3.6m
      \t\t\t-WITH_PYTHON_INSTALL=OFF \t\t\t-WITH_PLAYER=OFF \t\t\t-WITH_PYTHON_MODULE=ON
      \t\t\t-DWITH_MEM_JEMALLOC=OFF \t\t\t-DWITH_CODEC_SNDFILE=ON \t\t\t-DPYTHON_VERSION=3.6
      \t\t\t-DWITH_OPENCOLORIO=ON \t\t\t-DOPENCOLORIO_ROOT_DIR=/opt/lib/ocio \t\t\t-DWITH_OPENIMAGEIO=ON
      \t\t\t-DOPENIMAGEIO_ROOT_DIR=/opt/lib/oiio \t\t\t-DWITH_CYCLES_OSL=ON \t\t\t-DWITH_LLVM=ON
      \t\t\t-DLLVM_VERSION=6.0 \t\t\t-DOSL_ROOT_DIR=/opt/lib/osl \t\t\t-DWITH_OPENSUBDIV=ON
      \t\t\t-DOPENSUBDIV_ROOT_DIR=/opt/lib/osd \t\t\t-DWITH_OPENVDB=ON \t\t\t-DWITH_OPENVDB_BLOSC=ON
      \t\t\t-DWITH_ALEMBIC=ON \t\t\t-DALEMBIC_ROOT_DIR=/opt/lib/alembic \t\t\t-DWITH_CODEC_FFMPEG=OFF
      \t\t\t-DFFMPEG_LIBRARIES='avformat;avcodec;avutil;avdevice;swscale;swresample;lzma;rt;theora;theoradec;theoraenc;vorbis;vorbisenc;vorbisfile;ogg;x264;openjp2'
      &&\t\tcat CMakeCache.txt &&\t\tsed -i 's/WITH_PYTHON_MODULE:BOOL=OFF/WITH_PYTHON_MODULE:BOOL=ON/'
      CMakeCache.txt &&\t\tsed -i 's/WITH_PYTHON_INSTALL:BOOL=ON/WITH_PYTHON_INSTALL:BOOL=OFF/'
      CMakeCache.txt &&\t\tsed -i 's/WITH_PYTHON_INSTALL_NUMPY:BOOL=ON/WITH_PYTHON_INSTALL_NUMPY:BOOL=OFF/'
      CMakeCache.txt &&\t\tsed -i 's/WITH_PYTHON_INSTALL_REQUESTS:BOOL=ON/WITH_PYTHON_INSTALL_REQUESTS:BOOL=OFF/'
      CMakeCache.txt &&\t\tcat CMakeCache.txt &&\t\tmake install"
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHONPATH
      Value: '"${PYTHONPATH}:/blend/cmake-make/bin"'
    Name: env
  - CmdLine:
    - "pip install Flask &&\tpip install Flask-RESTful &&\tpip install pyopenssl &&\tpip
      install flask-cors &&\tpip install pillow &&\tpip install sphinx &&\tpip install
      sphinxcontrib-httpdomain"
    Name: run
    PrependShell: true
  From:
    Image: debian:10.0
  Name: ""
  Platform: ""
  SourceCode: FROM debian:10.0
