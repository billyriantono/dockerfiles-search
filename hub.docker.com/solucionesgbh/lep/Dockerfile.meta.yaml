MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Angel Adames <a.adames@gbh.com.do>"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: PHP_VERSION
      Value: "7.3"
    Name: env
  - CmdLine:
    - apt update; apt upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y   software-properties-common   ca-certificates   curl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository ppa:nginx/stable -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-add-repository ppa:ondrej/php -y
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &&   echo
      "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install --fix-missing -y   apt-utils   bash-completion   build-essential   cifs-utils   curl   git   libmcrypt4   libpcre3-dev   libpng-dev   mcrypt   nginx   nodejs   software-properties-common   supervisor   vim   yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "LC_ALL=en_US.UTF-8" >> /etc/default/locale
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/UTC /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install   --allow-downgrades   --allow-remove-essential   --allow-change-held-packages
      -y   php-pear   php-xdebug   php${PHP_VERSION}-bcmath   php${PHP_VERSION}-cli   php${PHP_VERSION}-curl   php${PHP_VERSION}-dev   php${PHP_VERSION}-gd   php${PHP_VERSION}-imap   php${PHP_VERSION}-intl   php${PHP_VERSION}-ldap   php${PHP_VERSION}-mbstring   php${PHP_VERSION}-memcached   php${PHP_VERSION}-mysql   php${PHP_VERSION}-pgsql   php${PHP_VERSION}-readline   php${PHP_VERSION}-soap   php${PHP_VERSION}-sqlite3   php${PHP_VERSION}-xml   php${PHP_VERSION}-zip   php${PHP_VERSION}-fpm
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --set php /usr/bin/php${PHP_VERSION} &&   update-alternatives
      --set php-config /usr/bin/php-config${PHP_VERSION} &&   update-alternatives
      --set phpize /usr/bin/phpize${PHP_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php &&   mv composer.phar /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/error_reporting = .*/error_reporting = E_ALL/" /etc/php/${PHP_VERSION}/cli/php.ini
      &&   sed -i "s/;date.timezone.*/date.timezone = UTC/" /etc/php/${PHP_VERSION}/cli/php.ini
      &&   sed -i "s/display_errors = .*/display_errors = On/" /etc/php/${PHP_VERSION}/cli/php.ini
      &&   sed -i "s/memory_limit = .*/memory_limit = 512M/" /etc/php/${PHP_VERSION}/cli/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/error_reporting = .*/error_reporting = E_ALL/" /etc/php/${PHP_VERSION}/fpm/php.ini
      &&   sed -i "s/display_errors = .*/display_errors = On/" /etc/php/${PHP_VERSION}/fpm/php.ini
      &&   sed -i "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/" /etc/php/${PHP_VERSION}/fpm/php.ini
      &&   sed -i "s/memory_limit = .*/memory_limit = 512M/" /etc/php/${PHP_VERSION}/fpm/php.ini
      &&   sed -i "s/upload_max_filesize = .*/upload_max_filesize = 100M/" /etc/php/${PHP_VERSION}/fpm/php.ini
      &&   sed -i "s/post_max_size = .*/post_max_size = 100M/" /etc/php/${PHP_VERSION}/fpm/php.ini
      &&   sed -i "s/;date.timezone.*/date.timezone = UTC/" /etc/php/${PHP_VERSION}/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/nginx/sites-enabled/default &&   rm /etc/nginx/sites-available/default
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "[openssl]\n" | tee -a /etc/php/${PHP_VERSION}/fpm/php.ini &&   printf
      "openssl.cainfo = /etc/ssl/certs/ca-certificates.crt\n" | tee -a /etc/php/${PHP_VERSION}/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - printf "[curl]\n" | tee -a /etc/php/${PHP_VERSION}/fpm/php.ini &&   printf "curl.cainfo
      = /etc/ssl/certs/ca-certificates.crt\n" | tee -a /etc/php/${PHP_VERSION}/fpm/php.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/default
    - /etc/nginx/sites-available
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord
    - /etc/supervisor/conf.d
  - CmdLine:
    - ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default
    Name: run
    PrependShell: true
  - CmdLine:
    - apt autoremove -y; apt clean -y
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/run.sh
    - /run.sh
  - CmdLine:
    - chmod 755 /run.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /run/php
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
