MetaArgs:
- DefaultValue: ""
  Key: DOCKER_PREFIX
  ProvidedValue: null
  Value: ""
Stages:
- BaseName: ${DOCKER_PREFIX}ubuntu:latest
  Commands:
  - Key: TRUST_CERT
    Name: arg
    Value: ""
  - CmdLine:
    - if [ ! -z "$TRUST_CERT" ]; then         echo "$TRUST_CERT" > /usr/local/share/ca-certificates/build-trust.crt
      ;         update-ca-certificates ;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /etc/apt/sources.list | grep -v '^#' | sed /^$/d | sort | uniq > sources.tmp.1
      &&     cat /etc/apt/sources.list | sed s/deb\ /deb-src\ /g | grep -v '^#' |
      sed /^$/d | sort | uniq > sources.tmp.2 &&     cat sources.tmp.1 sources.tmp.2
      > /etc/apt/sources.list &&     rm -f sources.tmp.1 sources.tmp.2
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get build-dep -y squid
      &&     DEBIAN_FRONTEND=noninteractive apt-get install -y wget tar xz-utils libssl-dev
    Name: run
    PrependShell: true
  - Key: SQUID_VERSION
    Name: arg
    Value: "4.8"
  - CmdLine:
    - mkdir /src     && cd /src     && wget http://www.squid-cache.org/Versions/v4/squid-$SQUID_VERSION.tar.xz     &&
      mkdir squid     && tar -C squid --strip-components=1 -xvf squid-$SQUID_VERSION.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /src/squid &&     ./configure         --prefix=/usr         --datadir=/usr/share/squid4
      \t\t--sysconfdir=/etc/squid4 \t\t--localstatedir=/var \t\t--mandir=/usr/share/man
      \t\t--enable-inline \t\t--enable-async-io=8 \t\t--enable-storeio=\"ufs,aufs,diskd,rock\"
      \t\t--enable-removal-policies=\"lru,heap\" \t\t--enable-delay-pools \t\t--enable-cache-digests
      \t\t--enable-underscores \t\t--enable-icap-client \t\t--enable-follow-x-forwarded-for
      \t\t--enable-auth-basic=\"DB,fake,getpwnam,LDAP,NCSA,NIS,PAM,POP3,RADIUS,SASL,SMB\"
      \t\t--enable-auth-digest=\"file,LDAP\" \t\t--enable-auth-negotiate=\"kerberos,wrapper\"
      \t\t--enable-auth-ntlm=\"fake\" \t\t--enable-external-acl-helpers=\"file_userip,kerberos_ldap_group,LDAP_group,session,SQL_session,unix_group,wbinfo_group\"
      \t\t--enable-url-rewrite-helpers=\"fake\" \t\t--enable-eui \t\t--enable-esi
      \t\t--enable-icmp \t\t--enable-zph-qos \t\t--with-openssl \t\t--enable-ssl \t\t--enable-ssl-crtd
      \t\t--disable-translation \t\t--with-swapdir=/var/spool/squid4 \t\t--with-logdir=/var/log/squid4
      \t\t--with-pidfile=/var/run/squid4.pid \t\t--with-filedescriptors=65536 \t\t--with-large-files
      \t\t--with-default-user=proxy         \t--disable-arch-native"
    Name: run
    PrependShell: true
  - Key: CONCURRENCY
    Name: arg
    Value: "1"
  - CmdLine:
    - cd /src/squid &&     make -j$CONCURRENCY &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O /usr/local/bin/p2     https://github.com/wrouesnel/p2cli/releases/download/r1/p2
      &&     chmod +x /usr/local/bin/p2
    Name: run
    PrependShell: true
  - Key: PROXYCHAINS_COMMITTISH
    Name: arg
    Value: 7a233fb1f05bcbf3d7f5c91658932261de1e13cb
  - CmdLine:
    - apt-get install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/rofl0r/proxychains-ng.git /src/proxychains-ng &&     cd
      /src/proxychains-ng &&     git checkout $PROXYCHAINS_COMMITTISH &&     ./configure
      --prefix=/usr --sysconfdir=/etc &&     make -j$CONCURRENCY && make install
    Name: run
    PrependShell: true
  - Key: URL_DOH
    Name: arg
    Value: https://github.com/wrouesnel/dns-over-https-proxy/releases/download/v0.0.2/dns-over-https-proxy_v0.0.2_linux-amd64.tar.gz
  - CmdLine:
    - wget -O /tmp/doh.tgz     $URL_DOH &&     tar -xvvf /tmp/doh.tgz --strip-components=1
      -C /usr/local/bin/ &&     chmod +x /usr/local/bin/dns-over-https-proxy
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - squid.conf.p2
    - /squid.conf.p2
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - squid.bsh
    - /squid.bsh
  - Env:
    - Key: HTTP_PORT
      Value: "3128"
    - Key: ICP_PORT
      Value: ""
    - Key: HTCP_PORT
      Value: ""
    - Key: MITM_PROXY
      Value: ""
    - Key: MITM_CERT
      Value: ""
    - Key: MITM_KEY
      Value: ""
    - Key: VISIBLE_HOSTNAME
      Value: docker-squid4
    - Key: MAX_CACHE_SIZE
      Value: "100"
    - Key: MAX_OBJECT_SIZE
      Value: '"4 MB"'
    - Key: MEM_CACHE_SIZE
      Value: '"256 MB"'
    - Key: DNS_OVER_HTTPS_LISTEN_ADDR
      Value: '"127.0.0.153:53"'
    - Key: DNS_OVER_HTTPS_SERVER
      Value: '"https://dns.google.com/resolve"'
    - Key: DNS_OVER_HTTPS_NO_FALLTHROUGH
      Value: '""'
    - Key: DNS_OVER_HTTPS_FALLTHROUGH_STATUSES
      Value: NXDOMAIN
    - Key: DNS_OVER_HTTPS_PREFIX_SERVER
      Value: ""
    - Key: DNS_OVER_HTTPS_SUFFIX_SERVER
      Value: ""
    Name: env
  - Name: expose
    Ports:
    - "3128"
  - CmdLine:
    - /squid.bsh
    Name: entrypoint
    PrependShell: false
  From:
    Image: ${DOCKER_PREFIX}ubuntu:latest
  Name: ""
  Platform: ""
  SourceCode: FROM ${DOCKER_PREFIX}ubuntu:latest
