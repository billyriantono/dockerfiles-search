MetaArgs: null
Stages:
- BaseName: ubuntu:18.10
  Commands:
  - Maintainer: Dylan <bbcheng@ikuai8.com>
    Name: maintainer
  - Env:
    - Key: OS_LOCALE
      Value: '"en_US.UTF-8"'
    Name: env
  - CmdLine:
    - "DEBIAN_FRONTEND=noninteractive \tapt-get update \t&& apt-get install -y locales
      tzdata \t&& locale-gen ${OS_LOCALE} \t&& ln -fs /usr/share/zoneinfo/Asia/Shanghai
      /etc/localtime \t&& dpkg-reconfigure -f noninteractive tzdata"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: ${OS_LOCALE}
    - Key: LC_ALL
      Value: ${OS_LOCALE}
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: php_conf
      Value: /etc/php/7.3/fpm/php.ini
    Name: env
  - Env:
    - Key: fpm_conf
      Value: /etc/php/7.3/fpm/pool.d/www.conf
    Name: env
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.8.6
    Name: env
  - CmdLine:
    - "DEBIAN_FRONTEND=noninteractive \tbuildDeps='software-properties-common' \t&&
      apt-get install --no-install-recommends --no-install-suggests -y $buildDeps
      \t&& add-apt-repository -y ppa:ondrej/php \t&& add-apt-repository -y ppa:nginx/stable
      \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests
      -q -y \t\tgcc make autoconf libc-dev pkg-config libmcrypt-dev php-pear \t\tcron
      \t\tiputils-ping \t\tnet-tools \t\tcurl \t\twget \t\tvim \t\tzip \t\tunzip \t\tpython-pip
      \t\tpython-setuptools \t\tnginx \t\tphp7.3-bcmath \t\tphp7.3-bz2 \t\tphp7.3-fpm
      \t\tphp7.3-cli \t\tphp7.3-dev \t\tphp7.3-common \t\tphp7.3-json \t\tphp7.3-opcache
      \t\tphp7.3-readline \t\tphp7.3-mbstring \t\tphp7.3-curl \t\tphp7.3-memcached
      \t\tphp7.3-imagick \t\tphp7.3-mysql \t\tphp7.3-zip \t\tphp7.3-pgsql \t\tphp7.3-intl
      \t\tphp7.3-xml \t\tphp7.3-redis \t\tphp7.3-gd \t\tphp-mongodb \t&& mkdir -p
      /run/php \t&& pip install wheel \t&& pip install supervisor supervisor-stdout
      \t&& echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d \t&& sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\"
      ${php_conf} \t&& sed -i -e \"s/memory_limit\\s*=\\s*.*/memory_limit = 256M/g\"
      ${php_conf} \t&& sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize
      = 100M/g\" ${php_conf} \t&& sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size
      = 100M/g\" ${php_conf} \t&& sed -i -e \"s/variables_order = \\\"GPCS\\\"/variables_order
      = \\\"EGPCS\\\"/g\" ${php_conf} \t&& sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize
      = no/g\" /etc/php/7.3/fpm/php-fpm.conf \t&& sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output
      = yes/g\" ${fpm_conf} \t&& sed -i -e \"s/pm.max_children = 5/pm.max_children
      = 4/g\" ${fpm_conf} \t&& sed -i -e \"s/pm.start_servers = 2/pm.start_servers
      = 3/g\" ${fpm_conf} \t&& sed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers
      = 2/g\" ${fpm_conf} \t&& sed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers
      = 4/g\" ${fpm_conf} \t&& sed -i -e \"s/pm.max_requests = 500/pm.max_requests
      = 200/g\" ${fpm_conf} \t&& sed -i -e \"s/^;clear_env = no$/clear_env = no/\"
      ${fpm_conf}"
    Name: run
    PrependShell: true
  - CmdLine:
    - "yes '' | pecl install -f mcrypt-1.0.2 \t&& echo \"extension=mcrypt.so\" > /etc/php/7.3/cli/conf.d/mcrypt.ini
      \t&& echo \"extension=mcrypt.so\" > /etc/php/7.3/fpm/conf.d/mcrypt.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get purge -y --auto-remove $buildDeps \t&& apt-get autoremove -y \t&& apt-get
      clean \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -o /tmp/composer-setup.php https://getcomposer.org/installer \t&& curl
      -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \t&& php
      -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig')))
      { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1);
      }\" \t&& php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin
      --filename=composer --version=${COMPOSER_VERSION} \t&& rm -rf /tmp/composer-setup.php"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./conf/upstream.conf
    - /etc/nginx/upstream.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./conf/supervisord.conf
    - /etc/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - html
    - /usr/share/nginx/html
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./start.sh
    - /start.sh
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.10
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.10
