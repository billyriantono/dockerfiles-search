{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Key": "PYTHON_VERSION",
          "Name": "arg",
          "Value": "3.6"
        },
        {
          "Key": "OPENCV_VERSION",
          "Name": "arg",
          "Value": "4.2.0"
        },
        {
          "CmdLine": [
            "apt-get -y update -qq --fix-missing \u0026\u0026     apt-get -y install --no-install-recommends         python${PYTHON_VERSION}         python${PYTHON_VERSION}-dev         $( [ ${PYTHON_VERSION%%.*} -ge 3 ] \u0026\u0026 echo \"python${PYTHON_VERSION%%.*}-distutils\" )         wget         unzip         cmake         libtbb2         gfortran         apt-utils         pkg-config         checkinstall         qt5-default         build-essential         libatlas-base-dev         libgtk2.0-dev         libavcodec57         libavcodec-dev         libavformat57         libavformat-dev         libavutil-dev         libswscale4         libswscale-dev         libjpeg8-dev         libpng-dev         libtiff5-dev         libdc1394-22         libdc1394-22-dev         libxine2-dev         libv4l-dev         libgstreamer1.0         libgstreamer1.0-dev         libgstreamer-plugins-base1.0-0         libgstreamer-plugins-base1.0-dev         libglew-dev         libpostproc-dev         libeigen3-dev         libtbb-dev         zlib1g-dev         libsm6         libxext6         libxrender1     \u0026\u0026     sysctl -w net.ipv4.ip_forward=1 \u0026\u0026     wget https://bootstrap.pypa.io/get-pip.py --progress=bar:force:noscroll --no-check-certificate \u0026\u0026     python${PYTHON_VERSION} get-pip.py \u0026\u0026     rm get-pip.py \u0026\u0026     pip${PYTHON_VERSION} install numpy \u0026\u0026     wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip -O opencv.zip --progress=bar:force:noscroll --no-check-certificate \u0026\u0026     unzip -q opencv.zip \u0026\u0026     mv /opencv-${OPENCV_VERSION} /opencv \u0026\u0026     rm opencv.zip \u0026\u0026     wget https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip -O opencv_contrib.zip --progress=bar:force:noscroll --no-check-certificate \u0026\u0026     unzip -q opencv_contrib.zip \u0026\u0026     mv /opencv_contrib-${OPENCV_VERSION} /opencv_contrib \u0026\u0026     rm opencv_contrib.zip \u0026\u0026     mkdir /opencv/build \u0026\u0026     cd /opencv/build \u0026\u0026     cmake       -D CMAKE_BUILD_TYPE=RELEASE       -D BUILD_PYTHON_SUPPORT=ON       -D BUILD_DOCS=ON       -D BUILD_PERF_TESTS=OFF       -D BUILD_TESTS=OFF       -D CMAKE_INSTALL_PREFIX=/usr/local       -D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib/modules       -D BUILD_opencv_python3=$( [ ${PYTHON_VERSION%%.*} -ge 3 ] \u0026\u0026 echo \"ON\" || echo \"OFF\" )       -D BUILD_opencv_python2=$( [ ${PYTHON_VERSION%%.*} -lt 3 ] \u0026\u0026 echo \"ON\" || echo \"OFF\" )       -D PYTHON${PYTHON_VERSION%%.*}_EXECUTABLE=$(which python${PYTHON_VERSION})       -D PYTHON_DEFAULT_EXECUTABLE=$(which python${PYTHON_VERSION})       -D BUILD_EXAMPLES=OFF       -D WITH_IPP=OFF       -D WITH_FFMPEG=ON       -D WITH_GSTREAMER=ON       -D WITH_V4L=ON       -D WITH_LIBV4L=ON       -D WITH_TBB=ON       -D WITH_QT=ON       -D WITH_OPENGL=ON       -D ENABLE_PRECOMPILED_HEADERS=OFF       ..     \u0026\u0026     cd /opencv/build \u0026\u0026     make -j$(nproc) \u0026\u0026     make install \u0026\u0026     ldconfig \u0026\u0026     apt-get -y remove         unzip         cmake         gfortran         apt-utils         pkg-config         checkinstall         build-essential         libatlas-base-dev         libgtk2.0-dev         libavcodec-dev         libavformat-dev         libavutil-dev         libswscale-dev         libjpeg8-dev         libpng12-dev         libtiff5-dev         libdc1394-22-dev         libxine2-dev         libv4l-dev         libgstreamer1.0-dev         libgstreamer-plugins-base1.0-dev         libglew-dev         libpostproc-dev         libeigen3-dev         libtbb-dev         zlib1g-dev     \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /opencv /opencv_contrib /var/lib/apt/lists/* \u0026\u0026     update-alternatives --install /usr/bin/python${PYTHON_VERSION%%.*} python${PYTHON_VERSION%%.*} /usr/bin/python${PYTHON_VERSION} 1 \u0026\u0026     update-alternatives --install /usr/bin/python python /usr/bin/python${PYTHON_VERSION} 1 \u0026\u0026     python --version \u0026\u0026     python -c \"import cv2 ; print(cv2.__version__)\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}