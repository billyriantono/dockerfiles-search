MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Key: PYTHON_VERSION
    Name: arg
    Value: "3.6"
  - Key: OPENCV_VERSION
    Name: arg
    Value: 4.2.0
  - CmdLine:
    - apt-get -y update -qq --fix-missing &&     apt-get -y install --no-install-recommends         python${PYTHON_VERSION}         python${PYTHON_VERSION}-dev         $(
      [ ${PYTHON_VERSION%%.*} -ge 3 ] && echo "python${PYTHON_VERSION%%.*}-distutils"
      )         wget         unzip         cmake         libtbb2         gfortran         apt-utils         pkg-config         checkinstall         qt5-default         build-essential         libatlas-base-dev         libgtk2.0-dev         libavcodec57         libavcodec-dev         libavformat57         libavformat-dev         libavutil-dev         libswscale4         libswscale-dev         libjpeg8-dev         libpng-dev         libtiff5-dev         libdc1394-22         libdc1394-22-dev         libxine2-dev         libv4l-dev         libgstreamer1.0         libgstreamer1.0-dev         libgstreamer-plugins-base1.0-0         libgstreamer-plugins-base1.0-dev         libglew-dev         libpostproc-dev         libeigen3-dev         libtbb-dev         zlib1g-dev         libsm6         libxext6         libxrender1     &&     sysctl
      -w net.ipv4.ip_forward=1 &&     wget https://bootstrap.pypa.io/get-pip.py --progress=bar:force:noscroll
      --no-check-certificate &&     python${PYTHON_VERSION} get-pip.py &&     rm get-pip.py
      &&     pip${PYTHON_VERSION} install numpy &&     wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip
      -O opencv.zip --progress=bar:force:noscroll --no-check-certificate &&     unzip
      -q opencv.zip &&     mv /opencv-${OPENCV_VERSION} /opencv &&     rm opencv.zip
      &&     wget https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip
      -O opencv_contrib.zip --progress=bar:force:noscroll --no-check-certificate &&     unzip
      -q opencv_contrib.zip &&     mv /opencv_contrib-${OPENCV_VERSION} /opencv_contrib
      &&     rm opencv_contrib.zip &&     mkdir /opencv/build &&     cd /opencv/build
      &&     cmake       -D CMAKE_BUILD_TYPE=RELEASE       -D BUILD_PYTHON_SUPPORT=ON       -D
      BUILD_DOCS=ON       -D BUILD_PERF_TESTS=OFF       -D BUILD_TESTS=OFF       -D
      CMAKE_INSTALL_PREFIX=/usr/local       -D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib/modules       -D
      BUILD_opencv_python3=$( [ ${PYTHON_VERSION%%.*} -ge 3 ] && echo "ON" || echo
      "OFF" )       -D BUILD_opencv_python2=$( [ ${PYTHON_VERSION%%.*} -lt 3 ] &&
      echo "ON" || echo "OFF" )       -D PYTHON${PYTHON_VERSION%%.*}_EXECUTABLE=$(which
      python${PYTHON_VERSION})       -D PYTHON_DEFAULT_EXECUTABLE=$(which python${PYTHON_VERSION})       -D
      BUILD_EXAMPLES=OFF       -D WITH_IPP=OFF       -D WITH_FFMPEG=ON       -D WITH_GSTREAMER=ON       -D
      WITH_V4L=ON       -D WITH_LIBV4L=ON       -D WITH_TBB=ON       -D WITH_QT=ON       -D
      WITH_OPENGL=ON       -D ENABLE_PRECOMPILED_HEADERS=OFF       ..     &&     cd
      /opencv/build &&     make -j$(nproc) &&     make install &&     ldconfig &&     apt-get
      -y remove         unzip         cmake         gfortran         apt-utils         pkg-config         checkinstall         build-essential         libatlas-base-dev         libgtk2.0-dev         libavcodec-dev         libavformat-dev         libavutil-dev         libswscale-dev         libjpeg8-dev         libpng12-dev         libtiff5-dev         libdc1394-22-dev         libxine2-dev         libv4l-dev         libgstreamer1.0-dev         libgstreamer-plugins-base1.0-dev         libglew-dev         libpostproc-dev         libeigen3-dev         libtbb-dev         zlib1g-dev     &&     apt-get
      autoremove -y &&     apt-get clean &&     rm -rf /opencv /opencv_contrib /var/lib/apt/lists/*
      &&     update-alternatives --install /usr/bin/python${PYTHON_VERSION%%.*} python${PYTHON_VERSION%%.*}
      /usr/bin/python${PYTHON_VERSION} 1 &&     update-alternatives --install /usr/bin/python
      python /usr/bin/python${PYTHON_VERSION} 1 &&     python --version &&     python
      -c "import cv2 ; print(cv2.__version__)"
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
