{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "mhbuild",
      "BaseName": "golang:1.13.3",
      "SourceCode": "FROM golang:1.13.3 as mhbuild",
      "Platform": "",
      "As": "mhbuild",
      "From": {
        "Image": "golang:1.13.3"
      },
      "Commands": [
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Key": "APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE",
          "Name": "arg",
          "Value": "1"
        },
        {
          "CmdLine": [
            "set -xe; echo '#!/bin/sh\\nexit 101' \u003e /usr/sbin/policy-rc.d \u0026\u0026 chmod +x /usr/sbin/policy-rc.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe; \tapt-get update \u003e/dev/null; \tapt-get -y --no-install-recommends install \u003e/dev/null         apt-transport-https         gnupg         locales         wget         apt-utils         sudo         ;     apt-get clean;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe; \tgroupadd docker -g 1000; \tuseradd -m -s /bin/bash -u 1000 -g 1000 -G sudo -p docker docker; echo 'docker ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe; \tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.utf8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe; \tapt-get update \u003e/dev/null; \tapt-get -y --no-install-recommends install \u003e/dev/null \t\tgit \t\tghostscript \t\tnano \t\tpv \t\trsync \t\tsupervisor \t\tunzip \t\tzip \t\tcron \t;\tapt-get clean; rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.10"
            },
            {
              "Key": "GOMPLATE_VERSION",
              "Value": "2.4.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe; \tcurl -fsSL \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$(dpkg --print-architecture)\" -o /usr/local/bin/gosu; \tchown root:\"$(id -gn docker)\" /usr/local/bin/gosu; \tchmod +sx /usr/local/bin/gosu; \tcurl -fsSL https://github.com/hairyhenderson/gomplate/releases/download/v${GOMPLATE_VERSION}/gomplate_linux-amd64-slim -o /usr/local/bin/gomplate; \tchmod +x /usr/local/bin/gomplate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/startup.sh",
            "/opt/startup.sh"
          ]
        },
        {
          "Chown": "docker:docker",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/.ssh",
            "/home/docker/.ssh"
          ]
        },
        {
          "Env": [
            {
              "Key": "SSH_AUTH_SOCK",
              "Value": "/.ssh-agent/proxy-socket"
            },
            {
              "Key": "TERM",
              "Value": "xterm"
            },
            {
              "Key": "PROJECT_ROOT",
              "Value": "/var/www"
            },
            {
              "Key": "HOST_UID",
              "Value": "1000"
            },
            {
              "Key": "HOST_GID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/var/www/andock"
          ]
        },
        {
          "CmdLine": [
            "chmod -R 777 /var/www/andock"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/andock.sh",
            "/usr/local/bin/andock"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/andock"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/andock/bin"
        },
        {
          "Name": "user",
          "User": "docker"
        },
        {
          "CmdLine": [
            "./andock.sh _install-andock build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "rm -R /var/www/andock"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/startup.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}