{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.0.9-fpm",
      "SourceCode": "FROM php:7.0.9-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.0.9-fpm"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "lyberteam-message.sh",
            "/var/www/lyberteam/lyberteam-message.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /var/www/lyberteam/lyberteam-message.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/var/www/lyberteam/lyberteam-message.sh \u0026\u0026 rm -f /var/www/lyberteam/lyberteam-message.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Maintainer": "Lyberteam \u003clyberteamltd@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Vendor",
              "Value": "\"Lyberteam\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"PHP-FPM v7.0.9-fpm\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "Version",
              "Value": "\"v7.0.9\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         libicu-dev         libpq-dev         libbz2-dev         php-pear         mc         vim         wget         cron         libevent-dev         librabbitmq-dev         libxml2         libxslt-dev     \u0026\u0026 docker-php-ext-install xsl     \u0026\u0026 docker-php-ext-install iconv     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 docker-php-ext-install bz2     \u0026\u0026 docker-php-ext-install mbstring     \u0026\u0026 docker-php-ext-install intl     \u0026\u0026 docker-php-ext-install pgsql pdo pdo_pgsql     \u0026\u0026 docker-php-ext-install pdo_mysql     \u0026\u0026 docker-php-ext-install bcmath     \u0026\u0026 docker-php-ext-install opcache     \u0026\u0026 docker-php-ext-enable opcache     \u0026\u0026 apt-get install -y -q --no-install-recommends        ssmtp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libmcrypt-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install mcrypt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y         libfreetype6-dev         libjpeg62-turbo-dev         libpng12-dev     \u0026\u0026 docker-php-ext-configure gd           --enable-gd-native-ttf           --with-freetype-dir=/usr/include/freetype2           --with-png-dir=/usr/include           --with-jpeg-dir=/usr/include     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 docker-php-ext-enable gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y        libmagickwand-dev     \u0026\u0026 pecl install imagick     \u0026\u0026 docker-php-ext-enable imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL 'https://xdebug.org/files/xdebug-2.5.3.tgz' -o xdebug.tar.gz     \u0026\u0026 mkdir -p xdebug     \u0026\u0026 tar -xf xdebug.tar.gz -C xdebug --strip-components=1     \u0026\u0026 rm xdebug.tar.gz     \u0026\u0026 (         cd xdebug         \u0026\u0026 phpize         \u0026\u0026 ./configure --enable-xdebug         \u0026\u0026 make -j$(nproc)         \u0026\u0026 make install     )     \u0026\u0026 rm -r xdebug     \u0026\u0026 docker-php-ext-enable xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "xdebug.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "echo \"Set default timezone - Europe/Kiev\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Europe/Kiev\" \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Install composer globally\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -c 'rm -f /usr/local/etc/php-fpm.d/www.conf.default'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "symfony.pool.conf",
            "/usr/local/etc/php-fpm.d/"
          ]
        },
        {
          "CmdLine": [
            "rm -f /usr/local/etc/php-fpm.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/var/www/lyberteam"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}