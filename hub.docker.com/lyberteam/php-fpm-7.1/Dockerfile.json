{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "lyberteam-message.sh",
            "/var/www/lyberteam/lyberteam-message.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /var/www/lyberteam/lyberteam-message.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/var/www/lyberteam/lyberteam-message.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Maintainer": "Lyberteam \u003clyberteamltd@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Vendor",
              "Value": "\"Lyberteam\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"This is a new php-fpm image(version for now 7.1)\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "Version",
              "Value": "\"1.4.9\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "LYBERTEAM_TIME_ZONE",
              "Value": "Europe/Kiev"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LYBERTEAM_VOLUME",
              "Value": "/var/www/lyberteam"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HEALTHCHECK_INTERVAL_DURATION",
              "Value": "40s"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HEALTHCHECK_TIMEOUT_DURATION",
              "Value": "40s"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HEALTHCHECK_RETRIES",
              "Value": "5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LYBERTEAM_STOPSIGNAL",
              "Value": "SIGINT"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         libmcrypt-dev         libicu-dev         libpq-dev         libbz2-dev         php-pear         git         unzip         mc         vim         wget         libevent-dev         librabbitmq-dev     \u0026\u0026 docker-php-ext-install iconv     \u0026\u0026 docker-php-ext-install mcrypt     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 docker-php-ext-install bz2     \u0026\u0026 docker-php-ext-install mbstring     \u0026\u0026 docker-php-ext-install intl     \u0026\u0026 docker-php-ext-install pgsql pdo pdo_pgsql     \u0026\u0026 docker-php-ext-install pdo_mysql     \u0026\u0026 docker-php-ext-install bcmath     \u0026\u0026 docker-php-ext-install opcache     \u0026\u0026 docker-php-ext-enable opcache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y         libfreetype6-dev         libjpeg62-turbo-dev         libpng12-dev      \u0026\u0026 docker-php-ext-configure gd           --enable-gd-native-ttf           --with-freetype-dir=/usr/include/freetype2           --with-png-dir=/usr/include           --with-jpeg-dir=/usr/include     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 docker-php-ext-enable gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Install xdebug by pecl\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | pecl install xdebug-2.5.0     \u0026\u0026 docker-php-ext-enable xdebug     \u0026\u0026 echo \"xdebug.remote_enable=on\\n\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_autostart=on\\n\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_handler=dbgp\\n\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_port=9001\\n\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_connect_back=1\\n\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Set LYBERTEAM_TIME_ZONE, by default - Europe/Kiev\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo $LYBERTEAM_TIME_ZONE \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Install composer globally\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"\\n\" | pecl install apcu-beta \u0026\u0026 echo extension=apcu.so \u003e /usr/local/etc/php/conf.d/10-apcu.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"\\n\" | pecl install apcu_bc-beta \u0026\u0026 echo extension=apc.so \u003e /usr/local/etc/php/conf.d/apc.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"\\n\" | pecl install channel://pecl.php.net/amqp-1.7.0alpha2 \u0026\u0026 echo extension=amqp.so \u003e /usr/local/etc/php/conf.d/amqp.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install channel://pecl.php.net/ev-1.0.0RC3 \u0026\u0026 echo extension=ev.so \u003e /usr/local/etc/php/conf.d/ev.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/access.log \u0026\u0026 ln -sf /dev/stderr /var/log/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash -c 'rm -f /usr/local/etc/php-fpm.d/www.conf.default'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "symfony.pool.conf",
            "/usr/local/etc/php-fpm.d/"
          ]
        },
        {
          "CmdLine": [
            "rm -f /usr/local/etc/php-fpm.d/www.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "$LYBERTEAM_VOLUME"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "test-check.sh",
            "/usr/local/bin/test-check.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/test-check.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Health": {
            "Test": [
              "CMD-SHELL",
              "/usr/local/bin/test-check.sh"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "Name": "stopsignal",
          "Signal": "$LYBERTEAM_STOPSIGNAL"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}