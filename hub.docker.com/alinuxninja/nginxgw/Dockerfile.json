{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        },
        {
          "Env": [
            {
              "Key": "NGINX_VER",
              "Value": "1.12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PACKAGES_BUILD",
              "Value": "\"\tca-certificates \tgit-core \tbuild-essential \tzlib1g-dev \tlibpcre3 \tlibpcre3-dev \tunzip \twget \tlibssl-dev \tautomake \tautoconf \tlibtool \tlibgeoip-dev \tlibxml2-dev \tlibcurl4-openssl-dev \tlibyajl-dev \tliblmdb-dev\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PACKAGES_REQUIRED",
              "Value": "\"        libssl1.0.0         libcurl3         libgeoip1         libyajl2         liblmdb0 \tpkg-config         libxml2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_CONFIG",
              "Value": "\"\t--prefix=/usr \t--conf-path=/etc/nginx/nginx.conf \t--http-log-path=/var/log/nginx/access.log \t--error-log-path=/var/log/nginx/error.log \t--lock-path=/var/lock/nginx.lock \t--pid-path=/run/nginx.pid \t--modules-path=/usr/lib/nginx/modules \t--http-client-body-temp-path=/var/lib/nginx/body \t--http-fastcgi-temp-path=/var/lib/nginx/fastcgi \t--http-proxy-temp-path=/var/lib/nginx/proxy \t--http-scgi-temp-path=/var/lib/nginx/scgi \t--http-uwsgi-temp-path=/var/lib/nginx/uwsgi \t--with-pcre-jit \t--with-http_ssl_module \t--with-http_stub_status_module \t--with-http_auth_request_module \t--with-http_v2_module \t--with-http_dav_module \t--with-http_slice_module \t--with-threads \t--with-http_gzip_static_module \t--without-http_split_clients_module \t--without-http_userid_module \t--add-module=modules/ngx_testcookie \t--add-module=modules/ngx_pagespeed \t--add-module=modules/ngx_modsecurity \t--user=www-data \t--group=www-data\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /docker/build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/docker/build"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install --no-install-recommends         $PACKAGES_BUILD \t$PACKAGES_REQUIRED \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 echo \"$!/bin/bash\" \u003e /docker/env \u0026\u0026 git clone https://github.com/SpiderLabs/ModSecurity \u0026\u0026 cd ModSecurity \u0026\u0026 git checkout v3/master \u0026\u0026 git submodule init \u0026\u0026 git submodule update \u0026\u0026 ./build.sh \u0026\u0026 ./configure --prefix=/usr \u0026\u0026 make -j$(nproc) \u0026\u0026 make install \u0026\u0026 cd /docker/build \u0026\u0026 wget http://nginx.org/download/nginx-$(wget -q -O -  http://nginx.org/download/ | sed -n 's/.*href=\"nginx-\\([^\"]*\\)\\.tar\\.gz.*/\\1/p' | sort -V | grep -i ${NGINX_VER}. | tail -n1).tar.gz \u0026\u0026 tar xf nginx-*.tar.gz \u0026\u0026 rm nginx-*.tar.gz \u0026\u0026 mv nginx-* nginx \u0026\u0026 mkdir -p /docker/build/nginx/modules \u0026\u0026 cd /docker/build/nginx/modules \u0026\u0026 git clone https://github.com/kyprizel/testcookie-nginx-module.git ngx_testcookie \u0026\u0026 git clone https://github.com/pagespeed/ngx_pagespeed.git \u0026\u0026 cd /docker/build/nginx/modules/ngx_pagespeed \u0026\u0026 echo \"export PAGESPEED_VER=$(git tag -l --sort=-version:refname 'v*' | head -n1 | cut -c 2- )\" \u003e\u003e /docker/env \u0026\u0026 source /docker/env \u0026\u0026 git checkout v${PAGESPEED_VER} \u0026\u0026 source /docker/env \u0026\u0026 wget $(scripts/format_binary_url.sh PSOL_BINARY_URL) \u0026\u0026 source /docker/env \u0026\u0026 tar -zxvf $(echo ${PAGESPEED_VER} | awk -f '-' '{print $1}')*.tar.gz \u0026\u0026 cd /docker/build/nginx/modules \u0026\u0026 git clone https://github.com/SpiderLabs/ModSecurity-nginx.git ngx_modsecurity \u0026\u0026 cd /docker/build/nginx \u0026\u0026 ./configure $NGINX_CONFIG \u0026\u0026 make -j$(nproc) \u0026\u0026 make install \u0026\u0026 mkdir -p /var/lib/nginx/body \u0026\u0026 chown -R www-data:www-data /var/lib/nginx \u0026\u0026 rm -r /docker/build \u0026\u0026 apt-get -y purge $PACKAGES_BUILD \u0026\u0026 apt-get clean autoclean \u0026\u0026 apt-get autoremove -y \u0026\u0026 rm -rf /var/lib/{apt,dpkg,cache,log}/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/srv"
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}