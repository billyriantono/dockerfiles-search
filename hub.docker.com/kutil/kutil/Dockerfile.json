{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "certbot/certbot",
      "SourceCode": "FROM certbot/certbot",
      "Platform": "",
      "From": {
        "Image": "certbot/certbot"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "Kazuhito Yamazawa \u003cyamazawa@supersoftware.co.jp\u003e"
            }
          ],
          "Name": "label"
        },
        {
          "Key": "KUBECTL_VERSION",
          "Name": "arg",
          "Value": "\"v1.9.6\""
        },
        {
          "Key": "RKE_VERSION",
          "Name": "arg",
          "Value": "\"v0.1.5\""
        },
        {
          "Key": "STERN_VERSION",
          "Name": "arg",
          "Value": "\"1.6.0\""
        },
        {
          "Key": "FAAS_CLI_VERSION",
          "Name": "arg",
          "Value": "\"0.6.4\""
        },
        {
          "Key": "KS_VERSION",
          "Name": "arg",
          "Value": "\"v0.9.2\""
        },
        {
          "Key": "KOMPOSE_VERSION",
          "Name": "arg",
          "Value": "\"v1.11.0\""
        },
        {
          "Key": "ISTIO_VERSION",
          "Name": "arg",
          "Value": "\"0.7.1\""
        },
        {
          "Key": "YAML2JSON_VERSION",
          "Name": "arg",
          "Value": "\"v1.0\""
        },
        {
          "Env": [
            {
              "Key": "KUBECONFIG",
              "Value": "/work/kube_config_cluster.yml"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add ca-certificates git openssh curl jq bash-completion ruby ruby-rake ruby-io-console ruby-bundler docker make bash \u0026\u0026     mkdir /lib64 \u0026\u0026 ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2 \u0026\u0026     echo \"source /etc/profile.d/bash_completion.sh\" \u003e\u003e ~/.bashrc \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl \u0026\u0026     chmod +x ./kubectl \u0026\u0026     mv ./kubectl /usr/local/bin/kubectl \u0026\u0026     echo \"source \u003c(kubectl completion bash)\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://github.com/rancher/rke/releases/download/$RKE_VERSION/rke_linux-amd64 \u0026\u0026     chmod +x ./rke_linux-amd64 \u0026\u0026     mv ./rke_linux-amd64 /usr/local/bin/rke"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://github.com/wercker/stern/releases/download/$STERN_VERSION/stern_linux_amd64 \u0026\u0026     chmod +x ./stern_linux_amd64 \u0026\u0026     mv ./stern_linux_amd64 /usr/local/bin/stern \u0026\u0026     echo \"source \u003c(stern --completion=bash)\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://github.com/openfaas/faas-cli/releases/download/$FAAS_CLI_VERSION/faas-cli \u0026\u0026     chmod +x ./faas-cli \u0026\u0026     mv ./faas-cli /usr/local/bin/faas-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://github.com/ksonnet/ksonnet/releases/download/$KS_VERSION/ks-linux-amd64 \u0026\u0026     chmod +x ./ks-linux-amd64 \u0026\u0026     mv ./ks-linux-amd64 /usr/local/bin/ks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://github.com/kubernetes/kompose/releases/download/$KOMPOSE_VERSION/kompose-linux-amd64 \u0026\u0026     chmod +x ./kompose-linux-amd64 \u0026\u0026     mv ./kompose-linux-amd64 /usr/local/bin/kompose \u0026\u0026     echo \"source \u003c(kompose completion bash)\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO curl -L https://github.com/istio/istio/releases/download/$ISTIO_VERSION/istio-$ISTIO_VERSION-linux.tar.gz | tar xz \u0026\u0026     chmod +x ./istio-$ISTIO_VERSION/bin/istioctl \u0026\u0026     mv ./istio-$ISTIO_VERSION/bin/istioctl /usr/local/bin/istioctl \u0026\u0026     echo \"source \u003c(istioctl completion)\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -LO https://github.com/kyamazawa/yaml2json/releases/download/$YAML2JSON_VERSION/yaml2json_linux-amd64 \u0026\u0026     chmod +x ./yaml2json_linux-amd64 \u0026\u0026     mv ./yaml2json_linux-amd64 /usr/local/bin/yaml2json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/work"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/work"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts",
            "/work/scripts"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}