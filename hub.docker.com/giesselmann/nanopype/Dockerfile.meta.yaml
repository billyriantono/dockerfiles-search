MetaArgs: null
Stages:
- As: build_stage
  BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Pay Giesselmann <giesselmann@molgen.mpg.de>
    Name: maintainer
  - CmdLine:
    - apt-get --yes update && apt-get install -y --no-install-recommends wget     git
      gcc g++ ninja-build ca-certificates     binutils autoconf make cmake zlib1g-dev
      bzip2 libbz2-dev     liblzma-dev libncurses5-dev libcunit1-dev     python python3.5
      python3.5-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - update-ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/python3.5 /usr/bin/python3
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /src
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  - CmdLine:
    - wget https://bootstrap.pypa.io/get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /app
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app/
  - CmdLine:
    - pip3 install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - snakemake --snakefile rules/install.smk --config build_generator=Ninja --directory
      / all
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: build_stage
  Platform: ""
  SourceCode: FROM ubuntu:16.04 as build_stage
- BaseName: ubuntu:16.04
  Commands:
  - CmdLine:
    - apt-get --yes update && apt-get install -y --no-install-recommends wget git
      gcc g++     zlib1g-dev bzip2 libbz2-dev     liblzma-dev libncurses5-dev libcunit1     ca-certificates     python
      python3.5 python3.5-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - update-ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/python3.5 /usr/bin/python3
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /src
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /src
  - CmdLine:
    - wget https://bootstrap.pypa.io/get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - python3 get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /bin
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /lib
    Name: run
    PrependShell: true
  - Chown: ""
    From: build_stage
    Name: copy
    SourcesAndDest:
    - /bin/*
    - /bin/
  - Chown: ""
    From: build_stage
    Name: copy
    SourcesAndDest:
    - /lib/*
    - /lib/
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app/
  - CmdLine:
    - pip3 install -r requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://mirror.oxfordnanoportal.com/software/analysis/ont-guppy-cpu_3.1.5_linux64.tar.gz
      &&         tar --skip-old-files -xzf ont-guppy-cpu_3.1.5_linux64.tar.gz -C /usr/
      --strip 1 &&         rm ont-guppy-cpu_3.1.5_linux64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - snakemake --snakefile rules/install.smk --directory / deepbinner
    Name: run
    PrependShell: true
  - CmdLine:
    - snakemake --snakefile rules/install.smk --directory / pychopper
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install . --upgrade --install-option="--tools=/bin"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data/raw
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data/import
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /data/processing
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /data/processing
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
