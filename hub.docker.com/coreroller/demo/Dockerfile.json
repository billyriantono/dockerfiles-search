{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "golang:alpine",
      "SourceCode": "FROM golang:alpine as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "golang:alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "GIT_REMOTE_URL",
          "Name": "arg",
          "Value": "https://github.com/coreroller/coreroller"
        },
        {
          "Key": "GIT_BRANCH",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Name": "workdir",
          "Path": "/build"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk --no-cache add git curl     ca-certificates postgresql postgresql-contrib tzdata     \u0026\u0026 mkdir -p /build /coreroller/static     \u0026\u0026 git clone --branch v0.4.4 https://github.com/constabulary/gb /go/src/github.com/constabulary/gb     \u0026\u0026 go get github.com/constabulary/gb/...     \u0026\u0026 git clone --single-branch --branch ${GIT_BRANCH} ${GIT_REMOTE_URL}     \u0026\u0026 cd coreroller/backend     \u0026\u0026 /go/bin/gb build     \u0026\u0026 cp /build/coreroller/backend/bin/rollerd /coreroller"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "assets",
      "BaseName": "node:9-alpine",
      "SourceCode": "FROM node:9-alpine as assets",
      "Platform": "",
      "As": "assets",
      "From": {
        "Image": "node:9-alpine"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/build"
        },
        {
          "Key": "GIT_REMOTE_URL",
          "Name": "arg",
          "Value": "https://github.com/coreroller/coreroller"
        },
        {
          "Key": "GIT_BRANCH",
          "Name": "arg",
          "Value": "master"
        },
        {
          "CmdLine": [
            "apk --no-cache add git     \u0026\u0026 git clone --single-branch --branch ${GIT_BRANCH} ${GIT_REMOTE_URL}     \u0026\u0026 cd /build/coreroller/frontend     \u0026\u0026 npm install     \u0026\u0026 npm run build"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PGDATA",
              "Value": "/coreroller/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add ca-certificates tzdata curl     postgresql postgresql-contrib     \u0026\u0026 mkdir -p /coreroller/static /run/postgresql     \u0026\u0026 chown -R postgres:postgres /run/postgresql     \u0026\u0026 curl -o /usr/local/bin/gosu -sSL \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64\"     \u0026\u0026 chmod +x /usr/local/bin/gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/build/coreroller/backend/bin/rollerd",
            "/coreroller/"
          ]
        },
        {
          "Chown": "",
          "From": "assets",
          "Name": "copy",
          "SourcesAndDest": [
            "/build/coreroller/frontend/built/",
            "/coreroller/static/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}