{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:9.0-cudnn7-devel",
      "SourceCode": "FROM nvidia/cuda:9.0-cudnn7-devel",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:9.0-cudnn7-devel"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -yq dist-upgrade  \u0026\u0026 apt-get install -yq --no-install-recommends     wget     curl     bzip2     ca-certificates     sudo     locales     fonts-liberation     python3     python3-pip     git  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install openjdk-8-jdk -y \u0026\u0026     echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list \u0026\u0026     curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add - \u0026\u0026     apt-get update \u0026\u0026 apt-get install bazel -y \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026     locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -yq --no-install-recommends     build-essential     emacs     inkscape     jed     libsm6     libxext-dev     libxrender1     lmodern     netcat     pandoc     python-dev     unzip     vim     \u0026\u0026 apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            },
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "NB_USER",
              "Value": "jovyan"
            },
            {
              "Key": "NB_UID",
              "Value": "1000"
            },
            {
              "Key": "NB_GID",
              "Value": "100"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "fix-permissions",
            "/usr/local/bin/fix-permissions"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/fix-permissions"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \u0026\u0026     mkdir -p $CONDA_DIR \u0026\u0026     chown $NB_USER:$NB_GID $CONDA_DIR \u0026\u0026     chmod g+w /etc/passwd /etc/group \u0026\u0026     echo \"$NB_USER ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026     fix-permissions $HOME \u0026\u0026     fix-permissions $CONDA_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "CmdLine": [
            "sudo cat /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /home/$NB_USER/work \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "MINICONDA_VERSION",
              "Value": "4.3.30"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \u0026\u0026     echo \"0b80a152332a4ce5250f3c09589c7a81 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - \u0026\u0026     /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR \u0026\u0026     rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \u0026\u0026     $CONDA_DIR/bin/conda config --system --prepend channels conda-forge \u0026\u0026     $CONDA_DIR/bin/conda config --system --set auto_update_conda false \u0026\u0026     $CONDA_DIR/bin/conda config --system --set show_channel_urls true \u0026\u0026     $CONDA_DIR/bin/conda update --all --quiet --yes \u0026\u0026     conda clean -tipsy \u0026\u0026     rm -rf /home/$NB_USER/.cache/yarn \u0026\u0026     fix-permissions $CONDA_DIR \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes     -c aaronzs     'notebook=5.4.*'     'jupyterhub=0.8.*'     'jupyterlab=0.31.*'     'tornado=4.*'     \u0026\u0026 conda clean -tipsy \u0026\u0026     jupyter labextension install @jupyterlab/hub-extension@^0.8.0 \u0026\u0026     npm cache clean \u0026\u0026     rm -rf $CONDA_DIR/share/jupyter/lab/staging \u0026\u0026     fix-permissions $CONDA_DIR \u0026\u0026     fix-permissions /home/$NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --quiet --yes     -c aaronzs     'nomkl'     'ipywidgets'     'pandas'     'numexpr'     'matplotlib'     'scipy'     'seaborn'     'scikit-learn'     'scikit-image'     'sympy'     'cython'     'patsy'     'statsmodels'     'cloudpickle'     'dill'     'numba'     'bokeh'     'sqlalchemy'     'hdf5'     'h5py'     'vincent'     'beautifulsoup4'     'protobuf'     'xlrd'      'keras' \u0026\u0026     conda remove --quiet --yes --force qt pyqt \u0026\u0026     conda clean -tipsy \u0026\u0026     jupyter nbextension enable --py widgetsnbextension --sys-prefix \u0026\u0026     jupyter labextension install @jupyter-widgets/jupyterlab-manager@^0.33.1 \u0026\u0026     jupyter labextension install jupyterlab_bokeh@^0.4.0 \u0026\u0026     npm cache clean \u0026\u0026     rm -rf $CONDA_DIR/share/jupyter/lab/staging \u0026\u0026     rm -rf /home/$NB_USER/.cache/yarn \u0026\u0026     rm -rf /home/$NB_USER/.node-gyp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m pip install jupyter_contrib_nbextensions"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m pip install git+https://github.com/data-8/nbgitpuller \tplotly"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter labextension install @jupyterlab/hub-extension \u0026\u0026     jupyter labextension install @jupyter-widgets/jupyterlab-manager"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter lab build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda create --quiet --yes -n ipykernel_py2 python=2 ipykernel \u0026\u0026     python -m ipykernel install --user"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda config --add channels conda-forge \u0026\u0026     conda create --quiet --yes -n java_env scijava-jupyter-kernel"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"source activate java_env\" \u0026\u0026     bash -c \"source activate ipykernel_py2\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m pip install numpy==1.14"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter kernelspec list"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}