MetaArgs: null
Stages:
- BaseName: docker:18.09.1-dind
  Commands:
  - CmdLine:
    - apk update && apk add bash htop vim iftop iotop iperf net-tools iputils postgresql-client
      git tmux ansible openssh-keygen openssh tzdata py-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - ansible-galaxy install savagegus.ansible-consul
    Name: run
    PrependShell: true
  - Env:
    - Key: GLIBC_VERSION
      Value: 2.26-r0
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - set -ex &&         apk add --no-cache ca-certificates curl libstdc++ &&         curl
      -o /etc/apk/keys/sgerrand.rsa.pub -sSL https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
      &&     for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION};
      do curl -sSL https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/${pkg}.apk
      -o /tmp/${pkg}.apk; done &&     apk add /tmp/*.apk &&         ( /usr/glibc-compat/bin/localedef
      --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true ) &&     echo "export
      LANG=C.UTF-8" > /etc/profile.d/locale.sh &&     /usr/glibc-compat/sbin/ldconfig
      /lib /usr/glibc-compat/lib &&                 curl -sSL -O https://github.com/yudai/gotty/releases/download/v1.0.1/gotty_linux_amd64.tar.gz
      &&     tar xvf /gotty_linux_amd64.tar.gz &&     rm -f /gotty_linux_amd64.tar.gz
      &&             apk add --no-cache jq python &&         apk del glibc-bin glibc-i18n
      &&     rm -rf /tmp/* /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo $'[defaults] \n    host_key_checking = False' > /root/.ansible.cfg
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - chmod +x /usr/local/bin/entrypoint.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/local/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: workdir
    Path: /ansible
  - CmdLine: []
    Name: cmd
    PrependShell: false
  From:
    Image: docker:18.09.1-dind
  Name: ""
  Platform: ""
  SourceCode: FROM docker:18.09.1-dind
