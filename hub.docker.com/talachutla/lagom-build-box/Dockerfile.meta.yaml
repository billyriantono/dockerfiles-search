MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: MAINTAINER
      Value: Santosh Kumar Talachutla <santosh@prodifyllp.com> <http://go2santosh.com/)
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-oracle
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: SCALA_VERSION
      Value: 2.12.8
    Name: env
  - Env:
    - Key: SBT_VERSION
      Value: 1.2.8
    Name: env
  - Env:
    - Key: REDIS_VERSION
      Value: 5.0.4
    Name: env
  - CmdLine:
    - apt-get update &&   apt-get install -my wget gnupg2 &&   apt-get install -y
      --no-install-recommends locales &&   locale-gen en_US.UTF-8 &&   apt-get dist-upgrade
      -y &&   apt-get --allow-releaseinfo-change update &&   apt-get --purge remove
      openjdk* &&   apt install -y openjdk-8-jdk &&   apt-get clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y -q --no-install-recommends         apt-utils         apt-transport-https         build-essential         ca-certificates         curl         git         libssl-dev         python         rsync         software-properties-common         devscripts         autoconf         ssl-cert         systemd     &&
      apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - node -v
    Name: run
    PrependShell: true
  - CmdLine:
    - npm -v
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg |  apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      bionic stable"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-cache policy docker-ce
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y docker-ce
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i nexe -g
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y -qq     ca-certificates     clang++-3.9     libgc-dev     libunwind8-dev     libre2-dev     libcurl4-openssl-dev     jq
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - https://downloads.lightbend.com/rp/keys/bintray-debian |     apt-key
      add - &&     echo "deb https://dl.bintray.com/lightbend/deb $(lsb_release -cs)
      main" |     tee /etc/apt/sources.list.d/lightbend.list &&     apt-get install
      apt-transport-https -y &&     apt-get update &&     apt-get install reactive-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsL https://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz
      | tar xfz - -C /root/ &&   echo >> /root/.bashrc &&   echo "export JAVA_HOME=/"
      >> /root/.bashrc &&   echo "export PATH=~/scala-$SCALA_VERSION/bin:$PATH" >>
      /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
      &&   dpkg -i sbt-$SBT_VERSION.deb &&   rm sbt-$SBT_VERSION.deb &&   apt-get
      update &&   apt-get install sbt &&   sbt sbtVersion &&   mkdir project &&   echo
      "scalaVersion := \"${SCALA_VERSION}\"" > build.sbt &&   echo "sbt.version=${SBT_VERSION}"
      > project/build.properties &&   echo "case object Temp" > Temp.scala &&   sbt
      compile &&   rm -r project && rm build.sbt && rm Temp.scala && rm -r target
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /root
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
