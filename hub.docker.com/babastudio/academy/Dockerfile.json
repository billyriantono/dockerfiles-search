{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "ext-mongodb",
      "BaseName": "php:7.3.2-fpm-stretch",
      "SourceCode": "FROM php:7.3.2-fpm-stretch AS ext-mongodb",
      "Platform": "",
      "As": "ext-mongodb",
      "From": {
        "Image": "php:7.3.2-fpm-stretch"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "EXT_MONGODB_VERSION",
              "Value": "1.5.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "docker-php-source extract     \u0026\u0026 apt-get update \u0026\u0026 apt-get install git -y     \u0026\u0026 git clone --branch $EXT_MONGODB_VERSION --depth 1 https://github.com/mongodb/mongo-php-driver.git /usr/src/php/ext/mongodb     \u0026\u0026 cd /usr/src/php/ext/mongodb \u0026\u0026 git submodule update --init     \u0026\u0026 docker-php-ext-install mongodb"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "php:7.3.2-fpm-stretch",
      "SourceCode": "FROM php:7.3.2-fpm-stretch",
      "Platform": "",
      "From": {
        "Image": "php:7.3.2-fpm-stretch"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "ext-mongodb",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/etc/php/conf.d/docker-php-ext-mongodb.ini",
            "/usr/local/etc/php/conf.d/docker-php-ext-mongodb.ini"
          ]
        },
        {
          "Chown": "",
          "From": "ext-mongodb",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/lib/php/extensions/no-debug-non-zts-20180731/mongodb.so",
            "/usr/local/lib/php/extensions/no-debug-non-zts-20180731/mongodb.so"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "composer.lock",
            "composer.json",
            "/var/www/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package*.json",
            "/var/www/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     build-essential     libpng-dev     libjpeg62-turbo-dev     libfreetype6-dev     locales     zip     jpegoptim optipng pngquant gifsicle     vim     unzip     git     curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libpq-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install pdo pdo_pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_12.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs     npm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "groupadd -g 1000 www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -u 1000 -ms /bin/bash -g www www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/var/www"
          ]
        },
        {
          "Chown": "www:www",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/var/www"
          ]
        },
        {
          "Name": "user",
          "User": "www"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}