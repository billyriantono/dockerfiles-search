MetaArgs:
- DefaultValue: "4.1"
  Key: FFMPEG_VERSION
  ProvidedValue: null
  Value: "4.1"
Stages:
- As: build-ffmpeg
  BaseName: alpine:latest
  Commands:
  - Key: FFMPEG_VERSION
    Name: arg
    Value: null
  - Key: PREFIX
    Name: arg
    Value: /usr/local
  - CmdLine:
    - apk add --update   build-base   freetype-dev   gcc   lame-dev   libogg-dev   libass   libass-dev   libvpx-dev   libvorbis-dev   libwebp-dev   libtheora-dev   nasm   opus-dev   pkgconf   pkgconfig   rtmpdump-dev   wget   x264-dev   x265-dev   yasm-dev   openssl   openssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update fdk-aac-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ &&   wget http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz
      &&   tar zxf ffmpeg-${FFMPEG_VERSION}.tar.gz && rm ffmpeg-${FFMPEG_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp/ffmpeg-${FFMPEG_VERSION} &&   ./configure   --prefix=${PREFIX}   --enable-version3   --enable-gpl   --enable-nonfree   --enable-small   --enable-libmp3lame   --enable-libx264   --enable-libx265   --enable-libvpx   --enable-libtheora   --enable-libvorbis   --enable-libopus   --enable-libfdk-aac   --enable-libass   --enable-libwebp   --enable-librtmp   --enable-postproc   --enable-avresample   --enable-libfreetype   --enable-openssl   --disable-debug
      &&   make && make install && make distclean
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/cache/* /tmp/*
    Name: run
    PrependShell: true
  From:
    Image: alpine:latest
  Name: build-ffmpeg
  Platform: ""
  SourceCode: FROM alpine:latest as build-ffmpeg
- BaseName: lsiobase/alpine:3.8
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: build_version
      Value: '"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}"'
    Name: label
  - Labels:
    - Key: maintainer
      Value: '"sparklyballs"'
    Name: label
  - Labels:
    - Key: MAINTAINER
      Value: Alfred Gutierrez <alf.g.jr@gmail.com>
    Name: label
  - CmdLine:
    - apk add --update   ca-certificates   openssl   pcre   lame   libogg   libass   libvpx   libvorbis   libwebp   libtheora   opus   rtmpdump   x264-dev   x265-dev
    Name: run
    PrependShell: true
  - Chown: ""
    From: build-ffmpeg
    Name: copy
    SourcesAndDest:
    - /usr/local
    - /usr/local
  - Chown: ""
    From: build-ffmpeg
    Name: copy
    SourcesAndDest:
    - /usr/lib/libfdk-aac.so.2
    - /usr/lib/libfdk-aac.so.2
  - Key: NZBGET_BRANCH
    Name: arg
    Value: '"stable-download"'
  - CmdLine:
    - "echo \"**** install packages ****\" &&  apk add --no-cache \tcurl \tp7zip \tpython2
      \tunrar \twget &&  echo \"**** install nzbget ****\" &&  mkdir -p \t/app/nzbget
      &&  curl -o  /tmp/json -L \thttp://nzbget.net/info/nzbget-version-linux.json
      &&  NZBGET_VERSION=$(grep \"${NZBGET_BRANCH}\" /tmp/json  | cut -d '\"' -f 4)
      &&  curl -o  /tmp/nzbget.run -L \t\"${NZBGET_VERSION}\" &&  sh /tmp/nzbget.run
      --destdir /app/nzbget &&  echo \"**** configure nzbget ****\" &&  cp /app/nzbget/nzbget.conf
      /defaults/nzbget.conf &&  sed -i \t-e \"s#\\(MainDir=\\).*#\\1/downloads#g\"
      \t-e \"s#\\(ScriptDir=\\).*#\\1$\\{MainDir\\}/scripts#g\" \t-e \"s#\\(WebDir=\\).*#\\1$\\{AppDir\\}/webui#g\"
      \t-e \"s#\\(ConfigTemplate=\\).*#\\1$\\{AppDir\\}/webui/nzbget.conf.template#g\"
      \ /defaults/nzbget.conf &&  echo \"**** cleanup ****\" &&  rm -rf \t/tmp/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root/
    - /
  - Name: volume
    Volumes:
    - /config
    - /downloads
  - Name: expose
    Ports:
    - "6789"
  From:
    Image: lsiobase/alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM lsiobase/alpine:3.8
