{
  "MetaArgs": [
    {
      "Key": "PHP_VERSION",
      "DefaultValue": "7.4",
      "ProvidedValue": null,
      "Value": "7.4"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:${PHP_VERSION}-fpm",
      "SourceCode": "FROM php:${PHP_VERSION}-fpm",
      "Platform": "",
      "From": {
        "Image": "php:${PHP_VERSION}-fpm"
      },
      "Commands": [
        {
          "Key": "PSR_VERSION",
          "Name": "arg",
          "Value": "0.7.0"
        },
        {
          "Key": "PHALCON_VERSION",
          "Name": "arg",
          "Value": "4.0.0"
        },
        {
          "Key": "PHALCON_EXT_PATH",
          "Name": "arg",
          "Value": "php7/64bits"
        },
        {
          "CmdLine": [
            "set -xe \u0026\u0026         curl -LO https://github.com/jbboehr/php-psr/archive/v${PSR_VERSION}.tar.gz \u0026\u0026         tar xzf ${PWD}/v${PSR_VERSION}.tar.gz \u0026\u0026         curl -LO https://github.com/phalcon/cphalcon/archive/v${PHALCON_VERSION}.tar.gz \u0026\u0026         tar xzf ${PWD}/v${PHALCON_VERSION}.tar.gz \u0026\u0026         docker-php-ext-install -j $(getconf _NPROCESSORS_ONLN)             ${PWD}/php-psr-${PSR_VERSION}             ${PWD}/cphalcon-${PHALCON_VERSION}/build/${PHALCON_EXT_PATH}         \u0026\u0026         rm -r             ${PWD}/v${PSR_VERSION}.tar.gz             ${PWD}/php-psr-${PSR_VERSION}             ${PWD}/v${PHALCON_VERSION}.tar.gz             ${PWD}/cphalcon-${PHALCON_VERSION}         \u0026\u0026         php -m"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y         libfreetype6-dev         libjpeg62-turbo-dev         libpng-dev         zlib1g-dev         libpq-dev         libxslt-dev         libicu-dev         libgeoip-dev         wget         vim         git         locales         zip         unzip         gzip         libzip-dev         libwebp-dev         libxpm-dev         libssh-dev         librabbitmq-dev         --no-install-recommends \u0026\u0026 rm -r /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/rstgroup/php-signal-handler.git /usr/src/php/ext/signal_handler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install redis-4.3.0 xdebug amqp     \u0026\u0026 docker-php-ext-enable redis xdebug amqp     \u0026\u0026 docker-php-ext-configure gd --enable-gd --with-freetype --with-jpeg --with-webp --with-xpm     \u0026\u0026 docker-php-ext-install -j$(nproc)         bcmath         gd         iconv         intl         json         mysqli         pdo_pgsql         pgsql         sockets         pcntl         soap         xsl         zip         signal_handler     \u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false wget     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 apt-get clean -y     \u0026\u0026 rm -rf /tmp/* /var/tmp/* ~/.pearrc     ;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \t\u0026\u0026 php composer-setup.php --install-dir=/usr/local/bin --filename=composer \t\u0026\u0026 php -r \"unlink('composer-setup.php');\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-php-xdebug",
            "docker-php-entrypoint",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf.d",
            "/usr/local/etc/php/conf.d"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-php-xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-php-entrypoint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/var/www/phalcon"
        },
        {
          "Name": "expose",
          "Ports": [
            "9001"
          ]
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}