MetaArgs: null
Stages:
- BaseName: baster20/php-fpm-7.4-final
  Commands:
  - Maintainer: '"cytopia" <cytopia@everythingcli.org>'
    Name: maintainer
  - Labels:
    - Key: name
      Value: '"cytopia''s PHP-FPM 7.4 Image"'
    - Key: image
      Value: '"baster20/php-fpm-work"'
    - Key: tag
      Value: '"7.4-work"'
    - Key: vendor
      Value: '"devilbox"'
    - Key: license
      Value: '"MIT"'
    Name: label
  - Env:
    - Key: BASH_PROFILE
      Value: '".bashrc"'
    Name: env
  - CmdLine:
    - "set -x \t&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \t&& DEBIAN_FRONTEND=noninteractive
      apt-get install -qq -y --no-install-recommends --no-install-suggests apt-utils
      \t&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends
      --no-install-suggests \t\tcurl \t\tdirmngr \t\tgnupg \t&& echo \"deb http://ftp.debian.org/debian
      stretch-backports main\" > /etc/apt/sources.list.d/backports.list \t&& curl
      -sS \"https://packages.blackfire.io/gpg.key\" 2>/dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1
      apt-key add - \t&& echo \"deb http://packages.blackfire.io/debian any main\"
      > /etc/apt/sources.list.d/blackfire.list \t&& APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1
      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv A1715D88E1DF1F24
      \t&& echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu artful main\" >
      /etc/apt/sources.list.d/git.list \t&& APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1
      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
      \t&& echo \"deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main\"
      > /etc/apt/sources.list.d/mongo.list \t&& curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc
      2>/dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \t&& echo
      \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main\" > /etc/apt/sources.list.d/pgsql.list
      \t&& curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg 2>/dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1
      apt-key add - \t&& echo \"deb http://dl.yarnpkg.com/debian/ stable main\" >
      /etc/apt/sources.list.d/yarn.list \t&& DEBIAN_FRONTEND=noninteractive apt-get
      update -qq \t&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends
      --no-install-suggests \t\tack-grep \t\taspell \t\tautoconf \t\tautomake \t\tbash-completion
      \t\tbinutils \t\tblackfire-agent \t\tbuild-essential \t\tbzip2 \t\tcoreutils
      \t\tdnsutils \t\tdos2unix \t\tfile \t\tgawk \t\tgcc \t\tgit \t\tgit-flow \t\tgit-svn
      \t\tgraphviz \t\thostname \t\thtop \t\timagemagick \t\tiputils-ping \t\tjq \t\tless
      \t\tlibc-dev \t\tlibffi-dev \t\tlibssl-dev \t\tlibyaml-dev \t\tmake \t\tmongodb-org-shell
      \t\tmongodb-org-tools \t\tmoreutils \t\tmysql-client \t\tnano \t\tnet-tools
      \t\tnetcat \t\topenssh-client \t\tpatch \t\tpatchelf \t\tpostgresql-client \t\tredis-tools
      \t\trsync \t\trubygems \t\truby-dev \t\tshellcheck \t\tsilversearcher-ag \t\tsubversion
      \t\tsudo \t\ttig \t\ttree \t\tunzip \t\tvim \t\tw3m \t\twget \t\twhois \t\txz-utils
      \t\tyarn \t\tzip \t\tzsh \t&& DEBIAN_FRONTEND=noninteractive apt-get purge -qq
      -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \t&&
      rm -rf /var/lib/apt/lists/* \t\t&& (find /usr/local/bin -type f -print0 | xargs
      -n1 -0 strip --strip-all -p 2>/dev/null || true) \t&& (find /usr/local/lib -type
      f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \t&& (find
      /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null
      || true)"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer \t&& DEBIAN_FRONTEND=noninteractive apt-get update -qq &&
      DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends
      --no-install-suggests   libpython-dev && DEBIAN_FRONTEND=noninteractive apt-get
      purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false &&
      rm -rf /var/lib/apt/lists/* && curl -sS https://bootstrap.pypa.io/get-pip.py
      | python  \t&& git clone https://github.com/creationix/nvm /opt/nvm && cd /opt/nvm
      && git checkout \"$(git describe --abbrev=0 --tags --match \"v[0-9]*\" $(git
      rev-list --tags --max-count=1))\" && {   echo 'export NVM_DIR=\"/opt/nvm\"';
      \  echo '[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads
      nvm';   echo '[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"
      \ # This loads nvm bash_completion'; } >> /home/devilbox/.bashrc && chown -R
      devilbox:devilbox /opt/nvm  \t&& su  -c '. /opt/nvm/nvm.sh; nvm install node'
      devilbox && su  -c '. /opt/nvm/nvm.sh; nvm install --lts' devilbox && su  -c
      '. /opt/nvm/nvm.sh; nvm use node' devilbox  \t&& COMPOSER_HOME=\"/usr/local/src/composer\"
      composer global require asgardcms/asgardcms-installer && ln -s /usr/local/src/composer/vendor/asgardcms/asgardcms-installer/asgardcms
      /usr/local/bin/asgardcms  \t&& git clone https://github.com/cytopia/awesome-ci.git
      /usr/local/src/awesome-ci && cd /usr/local/src/awesome-ci && git checkout $(git
      describe --abbrev=0 --tags) && ./configure --prefix=/usr/local && make install
      && cd / && rm -rf /usr/local/src/awesome-ci  \t&& COMPOSER_HOME=\"/usr/local/src/composer\"
      composer global require codeception/codeception && ln -s /usr/local/src/composer/vendor/codeception/codeception/codecept
      /usr/local/bin/codecept  \t&& curl -sS https://deployer.org/deployer.phar -L
      -o /usr/local/bin/dep \t&& chmod +x /usr/local/bin/dep \t&& git clone https://github.com/drush-ops/drush.git
      /usr/local/src/drush7 && cd /usr/local/src/drush7 && git checkout 7.4.0  \t&&
      chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush7 && su - ${MY_USER} -c
      'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush7 && composer install --no-interaction
      --no-progress --no-dev' && ln -s /usr/local/src/drush7/drush /usr/local/bin/drush7
      && rm -rf /usr/local/src/drush7/.git && rm -rf /usr/local/src/drush7/docs &&
      rm -rf /usr/local/src/drush7/examples && rm -rf /usr/local/src/drush7/misc  \t&&
      git clone https://github.com/drush-ops/drush.git /usr/local/src/drush8 && cd
      /usr/local/src/drush8 && git checkout $( git for-each-ref --format='%(*creatordate:raw)%(creatordate:raw)
      %(refname)' refs/tags | sort -n | grep -E 'tags/8[.0-9]+$' | tail -1 | sed 's|.*/||g'
      )  \t&& chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush8 && su - ${MY_USER}
      -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush8 && composer install
      --no-interaction --no-progress --no-dev' && ln -s /usr/local/src/drush8/drush
      /usr/local/bin/drush8 && rm -rf /usr/local/src/drush8/.git && rm -rf /usr/local/src/drush8/docs
      && rm -rf /usr/local/src/drush8/examples && rm -rf /usr/local/src/drush8/misc
      \ \t&& git clone https://github.com/drush-ops/drush.git /usr/local/src/drush9
      && cd /usr/local/src/drush9 && git checkout $( git for-each-ref --format='%(*creatordate:raw)%(creatordate:raw)
      %(refname)' refs/tags | sort -n | grep -E 'tags/9[.0-9]+$' | tail -1 | sed 's|.*/||g'
      )  \t&& chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush9 && su - ${MY_USER}
      -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush9 && php -d memory_limit=-1
      `which composer` install --no-interaction --no-progress' && ln -s /usr/local/src/drush9/drush
      /usr/local/bin/drush9 && rm -rf /usr/local/src/drush9/.git && rm -rf /usr/local/src/drush9/docs
      && rm -rf /usr/local/src/drush9/examples && rm -rf /usr/local/src/drush9/misc
      \ \t&& curl https://drupalconsole.com/installer -L -o /usr/local/bin/drupal
      \t&& chmod +x /usr/local/bin/drupal \t&& git clone git://github.com/petervanderdoes/gitflow.git
      /tmp/gitflow && cd /tmp/gitflow && make install && cd / && rm -rf /tmp/gitflow
      \ \t&& git clone https://github.com/laravel/installer /usr/local/src/laravel-installer
      && cd /usr/local/src/laravel-installer && git checkout $(git describe --abbrev=0
      --tags)  \t&& chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/laravel-installer
      && su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/laravel-installer
      && composer install --no-interaction --no-progress --no-dev' && ln -s /usr/local/src/laravel-installer/laravel
      /usr/local/bin/laravel && rm -rf /usr/local/src/laravel-installer/laravel/.git
      \ \t&& curl https://raw.githubusercontent.com/cytopia/linkcheck/master/linkcheck
      > /usr/local/bin/linkcheck && chmod +x /usr/local/bin/linkcheck  \t&& git clone
      https://github.com/Linuxbrew/brew.git /usr/local/src/linuxbrew && chown -R ${MY_USER}:${MY_GROUP}
      /usr/local/src/linuxbrew && v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p     'echo
      \"PATH=/usr/local/src/linuxbrew/bin:/usr/local/src/linuxbrew/sbin:/usr/bin:/usr/sbin:/bin:/sbin\"
      >> /home/devilbox/${v}' && v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p     'echo
      \"export MANPATH=/usr/local/src/linuxbrew/share/man:${MANPATH}\"   >> /home/devilbox/${v}'
      && v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p     'echo \"export INFOPATH=/usr/local/src/linuxbrew/share/man:${INFOPATH}\"
      >> /home/devilbox/${v}' && su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew
      config'  \t&& COMPOSER_HOME=\"/usr/local/src/composer\" composer global require
      laravel/lumen-installer && ln -s /usr/local/src/composer/vendor/laravel/lumen-installer/lumen
      /usr/local/bin/lumen  \t&& wget https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64
      && chmod +x mhsendmail_linux_amd64 && mv mhsendmail_linux_amd64 /usr/local/bin/mhsendmail
      \ \t&& git clone https://github.com/cytopia/mysqldump-secure.git /usr/local/src/mysqldump-secure
      && cd /usr/local/src/mysqldump-secure && git checkout $(git describe --abbrev=0
      --tags) && cp /usr/local/src/mysqldump-secure/bin/mysqldump-secure /usr/local/bin
      && cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.conf /etc && cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.cnf
      /etc && touch /var/log/mysqldump-secure.log && chown ${MY_USER}:${MY_GROUP}
      /etc/mysqldump-secure.* && chown ${MY_USER}:${MY_GROUP} /var/log/mysqldump-secure.log
      && chmod 0400 /etc/mysqldump-secure.conf && chmod 0400 /etc/mysqldump-secure.cnf
      && chmod 0644 /var/log/mysqldump-secure.log && sed -i'' 's/^COMPRESS_ARG=.*/COMPRESS_ARG=\"-9
      -c\"/g' /etc/mysqldump-secure.conf && sed -i'' 's/^DUMP_DIR=.*/DUMP_DIR=\"\\/shared\\/backups\\/mysql\"/g'
      /etc/mysqldump-secure.conf && sed -i'' 's/^DUMP_DIR_CHMOD=.*/DUMP_DIR_CHMOD=\"0755\"/g'
      /etc/mysqldump-secure.conf && sed -i'' 's/^DUMP_FILE_CHMOD=.*/DUMP_FILE_CHMOD=\"0644\"/g'
      /etc/mysqldump-secure.conf && sed -i'' 's/^LOG_CHMOD=.*/LOG_CHMOD=\"0644\"/g'
      /etc/mysqldump-secure.conf && sed -i'' 's/^NAGIOS_LOG=.*/NAGIOS_LOG=0/g' /etc/mysqldump-secure.conf
      && cd / && rm -rf /usr/local/src/mysqldump-secure  \t&& curl -sS -L https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
      > /usr/local/bin/phpcs 2>/dev/null && chmod +x /usr/local/bin/phpcs  \t&& curl
      -sS -L https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar > /usr/local/bin/phpcbf
      2>/dev/null && chmod +x /usr/local/bin/phpcbf  \t&& curl -qL https://phar.phpunit.de/phpunit-7.phar
      > /usr/local/bin/phpunit 2>/dev/null && chmod +x /usr/local/bin/phpunit  \t&&
      COMPOSER_HOME=\"/usr/local/src/composer\" composer global require \"photoncms/installer\"
      && ln -s /usr/local/src/composer/vendor/photoncms/installer/photon /usr/local/bin/photon
      \ \t&& curl https://symfony.com/installer -L -o /usr/local/bin/symfony \t&&
      chmod +x /usr/local/bin/symfony \t&& VERSION=\"$( curl -sSL https://github.com/wkhtmltopdf/wkhtmltopdf/releases
      | grep -Eo '/wkhtmltopdf/.+stretch_amd64\\.deb' | head -1 )\" \t&& DEBIAN_FRONTEND=noninteractive
      apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get install -qq -y
      --no-install-recommends --no-install-suggests   libfontenc1 libxfont1 xfonts-75dpi
      xfonts-base xfonts-encodings xfonts-utils && curl -sS -L -o /tmp/wkhtmltopdf.deb
      \ https://github.com/${VERSION} && dpkg -i /tmp/wkhtmltopdf.deb && rm -f /tmp/wkhtmltopdf.deb
      \ \t&& DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o
      APT::AutoRemove::RecommendsImportant=false apt-utils && rm -rf /var/lib/apt/lists/*
      \ \t&& curl https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
      -L -o /usr/local/bin/wp \t&& chmod +x /usr/local/bin/wp \t&& rm -rf /home/${MY_USER}/.*json
      && rm -rf /home/${MY_USER}/.cache && rm -rf /home/${MY_USER}/.composer && rm
      -rf /home/${MY_USER}/.config && rm -rf /home/${MY_USER}/.drush && rm -rf /home/${MY_USER}/.subversion
      && rm -rf /home/${MY_USER}/.v8* && rm -rf /root/.*json && rm -rf /root/.cache
      && rm -rf /root/.composer && rm -rf /root/.config && rm -rf /root/.drush &&
      rm -rf /root/.subversion && rm -rf /root/.v8* && rm -rf /tmp/* && (rm -rf /tmp/.*
      || true)  \t\t&& (rm -rf /root/.gem || true ) \t&& (rm -rf /root/.cache || true)
      \t&& (rm -rf /root/.composer || true) \t&& (rm -rf /root/.config || true) \t&&
      (rm -rf /root/.npm || true) \t\t&& (rm -rf /home/devilbox/.cache || true) \t&&
      (rm -rf /home/devilbox/.composer || true) \t&& (rm -rf /home/devilbox/.config
      || true) \t&& (rm -rf /home/devilbox/.npm || true) \t\t&& (rm -rf /usr/local/src/composer/cache/*
      || true) \t&& rm -rf /tmp/* \t&& (rm -rf /tmp/.* || true)"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& su -c '. /opt/nvm/nvm.sh; npm install -g @angular/cli' devilbox
      \t&& su -c '. /opt/nvm/nvm.sh; npm install -g eslint' devilbox \t&& su -c '.
      /opt/nvm/nvm.sh; npm install -g grunt' devilbox \t&& su -c '. /opt/nvm/nvm.sh;
      npm install -g grunt-cli' devilbox \t&& su -c '. /opt/nvm/nvm.sh; npm install
      -g gulp' devilbox \t&& su -c '. /opt/nvm/nvm.sh; npm install -g jsonlint' devilbox
      \t&& su -c '. /opt/nvm/nvm.sh; npm install -g pm2' devilbox \t&& su -c '. /opt/nvm/nvm.sh;
      npm install -g mdlint' devilbox \t&& su -c '. /opt/nvm/nvm.sh; npm install -g
      @vue/cli' devilbox \t&& su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli-service-global'
      devilbox \t&& su -c '. /opt/nvm/nvm.sh; npm install -g webpack' devilbox \t&&
      su -c '. /opt/nvm/nvm.sh; npm install -g webpack-cli' devilbox \t\t&& ln -sf
      $(dirname $(su -c '. /opt/nvm/nvm.sh; nvm which current' devilbox))/* /usr/local/bin/
      \t\t&& su -c '. /opt/nvm/nvm.sh; npm cache clear --force' devilbox \t&& su -c
      '. /opt/nvm/nvm.sh; nvm cache clear --force' devilbox \t&& rm -rf /home/devilbox/.npm
      \t&& rm -rf /home/devilbox/.config \t&& rm -rf /tmp/* \t&& (rm -rf /tmp/.* ||
      true) \t\t&& (find /opt/nvm -type f -print0 | xargs -n1 -0 strip --strip-all
      -p 2>/dev/null || true)"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& pip install --no-cache-dir --force-reinstall ansible \t&& pip install
      --no-cache-dir --force-reinstall yamllint \t\t&& rm -rf /root/.cache/pip \t&&
      rm -rf /tmp/* \t&& (rm -rf /tmp/.* || true) \t\t&& (find /usr/local/bin -type
      f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \t&& (find
      /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null
      || true) \t&& (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all
      -p 2>/dev/null || true)"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& gem install mixlib-config -v 2.2.4 \t&& gem install rb-inotify
      -v 0.9.10 \t&& gem install mdl \t&& gem install scss_lint -v 0.57.1 \t&& gem
      install sass \t\t&& rm -rf /root/.gem \t&& rm -rf /tmp/* \t&& (rm -rf /tmp/.*
      || true) \t\t&& (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all
      -p 2>/dev/null || true) \t&& (find /usr/local/lib -type f -print0 | xargs -n1
      -0 strip --strip-all -p 2>/dev/null || true) \t&& (find /usr/local/sbin -type
      f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)"
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo \"PATH=\\${PATH}:/usr/local/bin:/usr/local/sbin:\\${HOME}/.yarn/bin\";
      \t\techo \"export PATH\"; \t\techo \". /etc/bash-devilbox\"; \t\techo \"if [
      -d /etc/bashrc-devilbox.d/ ]; then\"; \t\techo \"    for f in /etc/bashrc-devilbox.d/*.sh
      ; do\"; \t\techo \"        if [ -r \\\"\\${f}\\\" ]; then\"; \t\techo \"            .
      \\\"\\${f}\\\"\"; \t\techo \"        fi\"; \t\techo \"    done\"; \t\techo \"
      \   unset f\"; \t\techo \"fi\"; \t} | tee -a /home/${MY_USER}/${BASH_PROFILE}
      /root/${BASH_PROFILE} \t&& chown ${MY_USER}:${MY_GROUP} /home/${MY_USER}/${BASH_PROFILE}"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& echo \"date.timezone=UTC\" > /usr/local/etc/php/php.ini \t&& php
      -v | grep -oE 'PHP\\s[.0-9]+' | grep -oE '[.0-9]+' | grep '^7.4' \t&& /usr/local/sbin/php-fpm
      --test \t\t&& PHP_ERROR=\"$( php -v 2>&1 1>/dev/null )\" \t&& if [ -n \"${PHP_ERROR}\"
      ]; then echo \"${PHP_ERROR}\"; false; fi \t&& PHP_ERROR=\"$( php -i 2>&1 1>/dev/null
      )\" \t&& if [ -n \"${PHP_ERROR}\" ]; then echo \"${PHP_ERROR}\"; false; fi \t\t&&
      PHP_FPM_ERROR=\"$( php-fpm -v 2>&1 1>/dev/null )\" \t&& if [ -n \"${PHP_FPM_ERROR}\"
      ]; then echo \"${PHP_FPM_ERROR}\"; false; fi \t&& PHP_FPM_ERROR=\"$( php-fpm
      -i 2>&1 1>/dev/null )\" \t&& if [ -n \"${PHP_FPM_ERROR}\" ]; then echo \"${PHP_FPM_ERROR}\";
      false; fi \t&& rm -f /usr/local/etc/php/php.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& composer --version 2>/dev/null | grep -E 'version\\s*[.0-9]+' \t&&
      su  -c '. /opt/nvm/nvm.sh; nvm --version' devilbox | grep -E '^[.0-9]+' \t&&
      asgardcms --version 2>/dev/null | grep -Ei 'AsgardCMS\\sInstaller\\s[.0-9]+'
      \t&& mdl --version | grep -E '[.0-9]+' && scss-lint --version | grep -E '[.0-9]+'
      && eslint -v | grep -E '[.0-9]+' && jsonlint --version | grep -E '[.0-9]+' &&
      mdlint --version | grep -E '[.0-9]+' && gulp --version | grep -E '[.0-9]+'  \t&&
      codecept --version 2>/dev/null | grep -E '^Codeception(\\sversion)?\\s[.0-9]+$'
      \t&& dep --version 2>/dev/null | grep -Ei 'deployer\\s*(version\\s*)?[.0-9]+'
      \t&& drush7 --version | grep -E '7[.0-9]+\\s*$' \t&& drush8 --version | grep
      -E '8[.0-9]+\\s*$' \t&& drush9 --version | grep -E '9[.0-9]+\\s*$' \t&& drupal
      --version | grep -E 'Drupal Console Launcher\\s*[.0-9]' \t&& git-flow version
      | grep -E '[.0-9]+' \t&& laravel --version | grep -E '(Installer|version)\\s*[.0-9]+'
      \t&& linkcheck --version | grep -E '^linkcheck\\sv[.0-9]+' \t&& su - ${MY_USER}
      -c '/usr/local/src/linuxbrew/bin/brew --version' | grep -E 'Homebrew\\s*[.0-9]+'
      \t&& lumen --version 2>/dev/null | grep -E '^Lumen Installer\\s[.0-9]+$' \t&&
      mysqldump-secure --version | grep -E 'Version:\\s*[.0-9]+' \t&& phpcs --version
      | grep -E 'version [.0-9]+' \t&& phpcbf --version | grep -E 'version [.0-9]+'
      \t&& phpunit --version | grep -iE '^PHPUnit\\s[.0-9]+' \t&& photon --version
      | grep -E 'Installer [.0-9]+' \t&& symfony --version | grep -E 'version\\s*[.0-9]+'
      \t&& wkhtmltopdf --version | grep -E \"^wkhtmltopdf [.0-9]+\\s+\\(.+patched.+\\)\"
      \t&& wp --allow-root --version | grep -E '[.0-9]+'  \t&& ansible --version |
      grep -E '^ansible [.0-9]+$' \t&& yamllint --version 2>&1 | grep -E '[.0-9]+'
      \ \t&& ng  version 2>&1 | grep -iE 'Angular CLI:\\s*[.0-9]+' \t&& eslint -v
      | grep -E '[.0-9]+' \t&& grunt --version | grep -E '[.0-9]+' \t&& gulp --version
      | grep -E '[.0-9]+' \t&& jsonlint --version | grep -E '[.0-9]+' \t&& pm2 --no-daemon
      --version | grep -E '[.0-9]+' \t&& mdlint --version | grep -E '[.0-9]+' \t&&
      vue --version | grep -E '[.0-9]+' \t&& webpack --version | grep -E '[.0-9]+'
      \ \t&& mdl --version | grep -E '[.0-9]+' \t&& sass --version | grep -E '[.0-9]+'
      \ \t&& rm -rf /home/devilbox/.config/ \t&& rm -rf /root/.ansible \t&& rm -rf
      /root/.console \t&& rm -rf /root/.composer \t&& rm -rf /root/.drush \t&& rm
      -rf /root/.pm2 \t&& rm -rf /tmp/* \t&& (rm -rf /tmp/.* || true)"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./data/php-ini.d/php-7.4.ini
    - /usr/local/etc/php/conf.d/xxx-devilbox-default-php.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./data/php-fpm.conf/php-fpm-7.4.conf
    - /usr/local/etc/php-fpm.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./data/docker-entrypoint.sh
    - /docker-entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./data/docker-entrypoint.d/*.sh
    - /docker-entrypoint.d/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./data/bash-devilbox
    - /etc/bash-devilbox
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./data/sudo-devilbox
    - /etc/sudoers.d/devilbox
  - Name: volume
    Volumes:
    - /shared/backups
  - Name: volume
    Volumes:
    - /var/log/php
  - Name: volume
    Volumes:
    - /var/mail
  - Name: expose
    Ports:
    - "9000"
  - Name: workdir
    Path: /shared/httpd
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: baster20/php-fpm-7.4-final
  Name: ""
  Platform: ""
  SourceCode: FROM baster20/php-fpm-7.4-final
