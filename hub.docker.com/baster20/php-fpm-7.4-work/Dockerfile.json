{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "baster20/php-fpm-7.4-final",
      "SourceCode": "FROM baster20/php-fpm-7.4-final",
      "Platform": "",
      "From": {
        "Image": "baster20/php-fpm-7.4-final"
      },
      "Commands": [
        {
          "Maintainer": "\"cytopia\" \u003ccytopia@everythingcli.org\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "name",
              "Value": "\"cytopia's PHP-FPM 7.4 Image\""
            },
            {
              "Key": "image",
              "Value": "\"baster20/php-fpm-work\""
            },
            {
              "Key": "tag",
              "Value": "\"7.4-work\""
            },
            {
              "Key": "vendor",
              "Value": "\"devilbox\""
            },
            {
              "Key": "license",
              "Value": "\"MIT\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "BASH_PROFILE",
              "Value": "\".bashrc\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get update -qq \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests apt-utils \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \t\tcurl \t\tdirmngr \t\tgnupg \t\u0026\u0026 echo \"deb http://ftp.debian.org/debian stretch-backports main\" \u003e /etc/apt/sources.list.d/backports.list \t\u0026\u0026 curl -sS \"https://packages.blackfire.io/gpg.key\" 2\u003e/dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \t\u0026\u0026 echo \"deb http://packages.blackfire.io/debian any main\" \u003e /etc/apt/sources.list.d/blackfire.list \t\u0026\u0026 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv A1715D88E1DF1F24 \t\u0026\u0026 echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu artful main\" \u003e /etc/apt/sources.list.d/git.list \t\u0026\u0026 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 \t\u0026\u0026 echo \"deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main\" \u003e /etc/apt/sources.list.d/mongo.list \t\u0026\u0026 curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc 2\u003e/dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \t\u0026\u0026 echo \"deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main\" \u003e /etc/apt/sources.list.d/pgsql.list \t\u0026\u0026 curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg 2\u003e/dev/null | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \t\u0026\u0026 echo \"deb http://dl.yarnpkg.com/debian/ stable main\" \u003e /etc/apt/sources.list.d/yarn.list \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get update -qq \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \t\tack-grep \t\taspell \t\tautoconf \t\tautomake \t\tbash-completion \t\tbinutils \t\tblackfire-agent \t\tbuild-essential \t\tbzip2 \t\tcoreutils \t\tdnsutils \t\tdos2unix \t\tfile \t\tgawk \t\tgcc \t\tgit \t\tgit-flow \t\tgit-svn \t\tgraphviz \t\thostname \t\thtop \t\timagemagick \t\tiputils-ping \t\tjq \t\tless \t\tlibc-dev \t\tlibffi-dev \t\tlibssl-dev \t\tlibyaml-dev \t\tmake \t\tmongodb-org-shell \t\tmongodb-org-tools \t\tmoreutils \t\tmysql-client \t\tnano \t\tnet-tools \t\tnetcat \t\topenssh-client \t\tpatch \t\tpatchelf \t\tpostgresql-client \t\tredis-tools \t\trsync \t\trubygems \t\truby-dev \t\tshellcheck \t\tsilversearcher-ag \t\tsubversion \t\tsudo \t\ttig \t\ttree \t\tunzip \t\tvim \t\tw3m \t\twget \t\twhois \t\txz-utils \t\tyarn \t\tzip \t\tzsh \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\t\u0026\u0026 (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2\u003e/dev/null || true) \t\u0026\u0026 (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2\u003e/dev/null || true) \t\u0026\u0026 (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2\u003e/dev/null || true)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get update -qq \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests   libpython-dev \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 curl -sS https://bootstrap.pypa.io/get-pip.py | python  \t\u0026\u0026 git clone https://github.com/creationix/nvm /opt/nvm \u0026\u0026 cd /opt/nvm \u0026\u0026 git checkout \"$(git describe --abbrev=0 --tags --match \"v[0-9]*\" $(git rev-list --tags --max-count=1))\" \u0026\u0026 {   echo 'export NVM_DIR=\"/opt/nvm\"';   echo '[ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm';   echo '[ -s \"$NVM_DIR/bash_completion\" ] \u0026\u0026 \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion'; } \u003e\u003e /home/devilbox/.bashrc \u0026\u0026 chown -R devilbox:devilbox /opt/nvm  \t\u0026\u0026 su  -c '. /opt/nvm/nvm.sh; nvm install node' devilbox \u0026\u0026 su  -c '. /opt/nvm/nvm.sh; nvm install --lts' devilbox \u0026\u0026 su  -c '. /opt/nvm/nvm.sh; nvm use node' devilbox  \t\u0026\u0026 COMPOSER_HOME=\"/usr/local/src/composer\" composer global require asgardcms/asgardcms-installer \u0026\u0026 ln -s /usr/local/src/composer/vendor/asgardcms/asgardcms-installer/asgardcms /usr/local/bin/asgardcms  \t\u0026\u0026 git clone https://github.com/cytopia/awesome-ci.git /usr/local/src/awesome-ci \u0026\u0026 cd /usr/local/src/awesome-ci \u0026\u0026 git checkout $(git describe --abbrev=0 --tags) \u0026\u0026 ./configure --prefix=/usr/local \u0026\u0026 make install \u0026\u0026 cd / \u0026\u0026 rm -rf /usr/local/src/awesome-ci  \t\u0026\u0026 COMPOSER_HOME=\"/usr/local/src/composer\" composer global require codeception/codeception \u0026\u0026 ln -s /usr/local/src/composer/vendor/codeception/codeception/codecept /usr/local/bin/codecept  \t\u0026\u0026 curl -sS https://deployer.org/deployer.phar -L -o /usr/local/bin/dep \t\u0026\u0026 chmod +x /usr/local/bin/dep \t\u0026\u0026 git clone https://github.com/drush-ops/drush.git /usr/local/src/drush7 \u0026\u0026 cd /usr/local/src/drush7 \u0026\u0026 git checkout 7.4.0  \t\u0026\u0026 chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush7 \u0026\u0026 su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush7 \u0026\u0026 composer install --no-interaction --no-progress --no-dev' \u0026\u0026 ln -s /usr/local/src/drush7/drush /usr/local/bin/drush7 \u0026\u0026 rm -rf /usr/local/src/drush7/.git \u0026\u0026 rm -rf /usr/local/src/drush7/docs \u0026\u0026 rm -rf /usr/local/src/drush7/examples \u0026\u0026 rm -rf /usr/local/src/drush7/misc  \t\u0026\u0026 git clone https://github.com/drush-ops/drush.git /usr/local/src/drush8 \u0026\u0026 cd /usr/local/src/drush8 \u0026\u0026 git checkout $( git for-each-ref --format='%(*creatordate:raw)%(creatordate:raw) %(refname)' refs/tags | sort -n | grep -E 'tags/8[.0-9]+$' | tail -1 | sed 's|.*/||g' )  \t\u0026\u0026 chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush8 \u0026\u0026 su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush8 \u0026\u0026 composer install --no-interaction --no-progress --no-dev' \u0026\u0026 ln -s /usr/local/src/drush8/drush /usr/local/bin/drush8 \u0026\u0026 rm -rf /usr/local/src/drush8/.git \u0026\u0026 rm -rf /usr/local/src/drush8/docs \u0026\u0026 rm -rf /usr/local/src/drush8/examples \u0026\u0026 rm -rf /usr/local/src/drush8/misc  \t\u0026\u0026 git clone https://github.com/drush-ops/drush.git /usr/local/src/drush9 \u0026\u0026 cd /usr/local/src/drush9 \u0026\u0026 git checkout $( git for-each-ref --format='%(*creatordate:raw)%(creatordate:raw) %(refname)' refs/tags | sort -n | grep -E 'tags/9[.0-9]+$' | tail -1 | sed 's|.*/||g' )  \t\u0026\u0026 chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/drush9 \u0026\u0026 su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/drush9 \u0026\u0026 php -d memory_limit=-1 `which composer` install --no-interaction --no-progress' \u0026\u0026 ln -s /usr/local/src/drush9/drush /usr/local/bin/drush9 \u0026\u0026 rm -rf /usr/local/src/drush9/.git \u0026\u0026 rm -rf /usr/local/src/drush9/docs \u0026\u0026 rm -rf /usr/local/src/drush9/examples \u0026\u0026 rm -rf /usr/local/src/drush9/misc  \t\u0026\u0026 curl https://drupalconsole.com/installer -L -o /usr/local/bin/drupal \t\u0026\u0026 chmod +x /usr/local/bin/drupal \t\u0026\u0026 git clone git://github.com/petervanderdoes/gitflow.git /tmp/gitflow \u0026\u0026 cd /tmp/gitflow \u0026\u0026 make install \u0026\u0026 cd / \u0026\u0026 rm -rf /tmp/gitflow  \t\u0026\u0026 git clone https://github.com/laravel/installer /usr/local/src/laravel-installer \u0026\u0026 cd /usr/local/src/laravel-installer \u0026\u0026 git checkout $(git describe --abbrev=0 --tags)  \t\u0026\u0026 chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/laravel-installer \u0026\u0026 su - ${MY_USER} -c 'PATH=/usr/local/bin:$PATH; cd /usr/local/src/laravel-installer \u0026\u0026 composer install --no-interaction --no-progress --no-dev' \u0026\u0026 ln -s /usr/local/src/laravel-installer/laravel /usr/local/bin/laravel \u0026\u0026 rm -rf /usr/local/src/laravel-installer/laravel/.git  \t\u0026\u0026 curl https://raw.githubusercontent.com/cytopia/linkcheck/master/linkcheck \u003e /usr/local/bin/linkcheck \u0026\u0026 chmod +x /usr/local/bin/linkcheck  \t\u0026\u0026 git clone https://github.com/Linuxbrew/brew.git /usr/local/src/linuxbrew \u0026\u0026 chown -R ${MY_USER}:${MY_GROUP} /usr/local/src/linuxbrew \u0026\u0026 v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p     'echo \"PATH=/usr/local/src/linuxbrew/bin:/usr/local/src/linuxbrew/sbin:/usr/bin:/usr/sbin:/bin:/sbin\" \u003e\u003e /home/devilbox/${v}' \u0026\u0026 v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p     'echo \"export MANPATH=/usr/local/src/linuxbrew/share/man:${MANPATH}\"   \u003e\u003e /home/devilbox/${v}' \u0026\u0026 v=\"${BASH_PROFILE}\" su ${MY_USER} -c -p     'echo \"export INFOPATH=/usr/local/src/linuxbrew/share/man:${INFOPATH}\" \u003e\u003e /home/devilbox/${v}' \u0026\u0026 su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew config'  \t\u0026\u0026 COMPOSER_HOME=\"/usr/local/src/composer\" composer global require laravel/lumen-installer \u0026\u0026 ln -s /usr/local/src/composer/vendor/laravel/lumen-installer/lumen /usr/local/bin/lumen  \t\u0026\u0026 wget https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64 \u0026\u0026 chmod +x mhsendmail_linux_amd64 \u0026\u0026 mv mhsendmail_linux_amd64 /usr/local/bin/mhsendmail  \t\u0026\u0026 git clone https://github.com/cytopia/mysqldump-secure.git /usr/local/src/mysqldump-secure \u0026\u0026 cd /usr/local/src/mysqldump-secure \u0026\u0026 git checkout $(git describe --abbrev=0 --tags) \u0026\u0026 cp /usr/local/src/mysqldump-secure/bin/mysqldump-secure /usr/local/bin \u0026\u0026 cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.conf /etc \u0026\u0026 cp /usr/local/src/mysqldump-secure/etc/mysqldump-secure.cnf /etc \u0026\u0026 touch /var/log/mysqldump-secure.log \u0026\u0026 chown ${MY_USER}:${MY_GROUP} /etc/mysqldump-secure.* \u0026\u0026 chown ${MY_USER}:${MY_GROUP} /var/log/mysqldump-secure.log \u0026\u0026 chmod 0400 /etc/mysqldump-secure.conf \u0026\u0026 chmod 0400 /etc/mysqldump-secure.cnf \u0026\u0026 chmod 0644 /var/log/mysqldump-secure.log \u0026\u0026 sed -i'' 's/^COMPRESS_ARG=.*/COMPRESS_ARG=\"-9 -c\"/g' /etc/mysqldump-secure.conf \u0026\u0026 sed -i'' 's/^DUMP_DIR=.*/DUMP_DIR=\"\\/shared\\/backups\\/mysql\"/g' /etc/mysqldump-secure.conf \u0026\u0026 sed -i'' 's/^DUMP_DIR_CHMOD=.*/DUMP_DIR_CHMOD=\"0755\"/g' /etc/mysqldump-secure.conf \u0026\u0026 sed -i'' 's/^DUMP_FILE_CHMOD=.*/DUMP_FILE_CHMOD=\"0644\"/g' /etc/mysqldump-secure.conf \u0026\u0026 sed -i'' 's/^LOG_CHMOD=.*/LOG_CHMOD=\"0644\"/g' /etc/mysqldump-secure.conf \u0026\u0026 sed -i'' 's/^NAGIOS_LOG=.*/NAGIOS_LOG=0/g' /etc/mysqldump-secure.conf \u0026\u0026 cd / \u0026\u0026 rm -rf /usr/local/src/mysqldump-secure  \t\u0026\u0026 curl -sS -L https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar \u003e /usr/local/bin/phpcs 2\u003e/dev/null \u0026\u0026 chmod +x /usr/local/bin/phpcs  \t\u0026\u0026 curl -sS -L https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar \u003e /usr/local/bin/phpcbf 2\u003e/dev/null \u0026\u0026 chmod +x /usr/local/bin/phpcbf  \t\u0026\u0026 curl -qL https://phar.phpunit.de/phpunit-7.phar \u003e /usr/local/bin/phpunit 2\u003e/dev/null \u0026\u0026 chmod +x /usr/local/bin/phpunit  \t\u0026\u0026 COMPOSER_HOME=\"/usr/local/src/composer\" composer global require \"photoncms/installer\" \u0026\u0026 ln -s /usr/local/src/composer/vendor/photoncms/installer/photon /usr/local/bin/photon  \t\u0026\u0026 curl https://symfony.com/installer -L -o /usr/local/bin/symfony \t\u0026\u0026 chmod +x /usr/local/bin/symfony \t\u0026\u0026 VERSION=\"$( curl -sSL https://github.com/wkhtmltopdf/wkhtmltopdf/releases | grep -Eo '/wkhtmltopdf/.+stretch_amd64\\.deb' | head -1 )\" \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get update -qq \u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests   libfontenc1 libxfont1 xfonts-75dpi xfonts-base xfonts-encodings xfonts-utils \u0026\u0026 curl -sS -L -o /tmp/wkhtmltopdf.deb  https://github.com/${VERSION} \u0026\u0026 dpkg -i /tmp/wkhtmltopdf.deb \u0026\u0026 rm -f /tmp/wkhtmltopdf.deb  \t\u0026\u0026 DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \u0026\u0026 rm -rf /var/lib/apt/lists/*  \t\u0026\u0026 curl https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -L -o /usr/local/bin/wp \t\u0026\u0026 chmod +x /usr/local/bin/wp \t\u0026\u0026 rm -rf /home/${MY_USER}/.*json \u0026\u0026 rm -rf /home/${MY_USER}/.cache \u0026\u0026 rm -rf /home/${MY_USER}/.composer \u0026\u0026 rm -rf /home/${MY_USER}/.config \u0026\u0026 rm -rf /home/${MY_USER}/.drush \u0026\u0026 rm -rf /home/${MY_USER}/.subversion \u0026\u0026 rm -rf /home/${MY_USER}/.v8* \u0026\u0026 rm -rf /root/.*json \u0026\u0026 rm -rf /root/.cache \u0026\u0026 rm -rf /root/.composer \u0026\u0026 rm -rf /root/.config \u0026\u0026 rm -rf /root/.drush \u0026\u0026 rm -rf /root/.subversion \u0026\u0026 rm -rf /root/.v8* \u0026\u0026 rm -rf /tmp/* \u0026\u0026 (rm -rf /tmp/.* || true)  \t\t\u0026\u0026 (rm -rf /root/.gem || true ) \t\u0026\u0026 (rm -rf /root/.cache || true) \t\u0026\u0026 (rm -rf /root/.composer || true) \t\u0026\u0026 (rm -rf /root/.config || true) \t\u0026\u0026 (rm -rf /root/.npm || true) \t\t\u0026\u0026 (rm -rf /home/devilbox/.cache || true) \t\u0026\u0026 (rm -rf /home/devilbox/.composer || true) \t\u0026\u0026 (rm -rf /home/devilbox/.config || true) \t\u0026\u0026 (rm -rf /home/devilbox/.npm || true) \t\t\u0026\u0026 (rm -rf /usr/local/src/composer/cache/* || true) \t\u0026\u0026 rm -rf /tmp/* \t\u0026\u0026 (rm -rf /tmp/.* || true)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm install -g @angular/cli' devilbox \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm install -g eslint' devilbox \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm install -g grunt' devilbox \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm install -g grunt-cli' devilbox \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm install -g gulp' devilbox \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm install -g jsonlint' devilbox \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm install -g pm2' devilbox \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm install -g mdlint' devilbox \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli' devilbox \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm install -g @vue/cli-service-global' devilbox \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm install -g webpack' devilbox \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm install -g webpack-cli' devilbox \t\t\u0026\u0026 ln -sf $(dirname $(su -c '. /opt/nvm/nvm.sh; nvm which current' devilbox))/* /usr/local/bin/ \t\t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; npm cache clear --force' devilbox \t\u0026\u0026 su -c '. /opt/nvm/nvm.sh; nvm cache clear --force' devilbox \t\u0026\u0026 rm -rf /home/devilbox/.npm \t\u0026\u0026 rm -rf /home/devilbox/.config \t\u0026\u0026 rm -rf /tmp/* \t\u0026\u0026 (rm -rf /tmp/.* || true) \t\t\u0026\u0026 (find /opt/nvm -type f -print0 | xargs -n1 -0 strip --strip-all -p 2\u003e/dev/null || true)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 pip install --no-cache-dir --force-reinstall ansible \t\u0026\u0026 pip install --no-cache-dir --force-reinstall yamllint \t\t\u0026\u0026 rm -rf /root/.cache/pip \t\u0026\u0026 rm -rf /tmp/* \t\u0026\u0026 (rm -rf /tmp/.* || true) \t\t\u0026\u0026 (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2\u003e/dev/null || true) \t\u0026\u0026 (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2\u003e/dev/null || true) \t\u0026\u0026 (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2\u003e/dev/null || true)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 gem install mixlib-config -v 2.2.4 \t\u0026\u0026 gem install rb-inotify -v 0.9.10 \t\u0026\u0026 gem install mdl \t\u0026\u0026 gem install scss_lint -v 0.57.1 \t\u0026\u0026 gem install sass \t\t\u0026\u0026 rm -rf /root/.gem \t\u0026\u0026 rm -rf /tmp/* \t\u0026\u0026 (rm -rf /tmp/.* || true) \t\t\u0026\u0026 (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2\u003e/dev/null || true) \t\u0026\u0026 (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2\u003e/dev/null || true) \t\u0026\u0026 (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2\u003e/dev/null || true)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo \"PATH=\\${PATH}:/usr/local/bin:/usr/local/sbin:\\${HOME}/.yarn/bin\"; \t\techo \"export PATH\"; \t\techo \". /etc/bash-devilbox\"; \t\techo \"if [ -d /etc/bashrc-devilbox.d/ ]; then\"; \t\techo \"    for f in /etc/bashrc-devilbox.d/*.sh ; do\"; \t\techo \"        if [ -r \\\"\\${f}\\\" ]; then\"; \t\techo \"            . \\\"\\${f}\\\"\"; \t\techo \"        fi\"; \t\techo \"    done\"; \t\techo \"    unset f\"; \t\techo \"fi\"; \t} | tee -a /home/${MY_USER}/${BASH_PROFILE} /root/${BASH_PROFILE} \t\u0026\u0026 chown ${MY_USER}:${MY_GROUP} /home/${MY_USER}/${BASH_PROFILE}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 echo \"date.timezone=UTC\" \u003e /usr/local/etc/php/php.ini \t\u0026\u0026 php -v | grep -oE 'PHP\\s[.0-9]+' | grep -oE '[.0-9]+' | grep '^7.4' \t\u0026\u0026 /usr/local/sbin/php-fpm --test \t\t\u0026\u0026 PHP_ERROR=\"$( php -v 2\u003e\u00261 1\u003e/dev/null )\" \t\u0026\u0026 if [ -n \"${PHP_ERROR}\" ]; then echo \"${PHP_ERROR}\"; false; fi \t\u0026\u0026 PHP_ERROR=\"$( php -i 2\u003e\u00261 1\u003e/dev/null )\" \t\u0026\u0026 if [ -n \"${PHP_ERROR}\" ]; then echo \"${PHP_ERROR}\"; false; fi \t\t\u0026\u0026 PHP_FPM_ERROR=\"$( php-fpm -v 2\u003e\u00261 1\u003e/dev/null )\" \t\u0026\u0026 if [ -n \"${PHP_FPM_ERROR}\" ]; then echo \"${PHP_FPM_ERROR}\"; false; fi \t\u0026\u0026 PHP_FPM_ERROR=\"$( php-fpm -i 2\u003e\u00261 1\u003e/dev/null )\" \t\u0026\u0026 if [ -n \"${PHP_FPM_ERROR}\" ]; then echo \"${PHP_FPM_ERROR}\"; false; fi \t\u0026\u0026 rm -f /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 composer --version 2\u003e/dev/null | grep -E 'version\\s*[.0-9]+' \t\u0026\u0026 su  -c '. /opt/nvm/nvm.sh; nvm --version' devilbox | grep -E '^[.0-9]+' \t\u0026\u0026 asgardcms --version 2\u003e/dev/null | grep -Ei 'AsgardCMS\\sInstaller\\s[.0-9]+' \t\u0026\u0026 mdl --version | grep -E '[.0-9]+' \u0026\u0026 scss-lint --version | grep -E '[.0-9]+' \u0026\u0026 eslint -v | grep -E '[.0-9]+' \u0026\u0026 jsonlint --version | grep -E '[.0-9]+' \u0026\u0026 mdlint --version | grep -E '[.0-9]+' \u0026\u0026 gulp --version | grep -E '[.0-9]+'  \t\u0026\u0026 codecept --version 2\u003e/dev/null | grep -E '^Codeception(\\sversion)?\\s[.0-9]+$' \t\u0026\u0026 dep --version 2\u003e/dev/null | grep -Ei 'deployer\\s*(version\\s*)?[.0-9]+' \t\u0026\u0026 drush7 --version | grep -E '7[.0-9]+\\s*$' \t\u0026\u0026 drush8 --version | grep -E '8[.0-9]+\\s*$' \t\u0026\u0026 drush9 --version | grep -E '9[.0-9]+\\s*$' \t\u0026\u0026 drupal --version | grep -E 'Drupal Console Launcher\\s*[.0-9]' \t\u0026\u0026 git-flow version | grep -E '[.0-9]+' \t\u0026\u0026 laravel --version | grep -E '(Installer|version)\\s*[.0-9]+' \t\u0026\u0026 linkcheck --version | grep -E '^linkcheck\\sv[.0-9]+' \t\u0026\u0026 su - ${MY_USER} -c '/usr/local/src/linuxbrew/bin/brew --version' | grep -E 'Homebrew\\s*[.0-9]+' \t\u0026\u0026 lumen --version 2\u003e/dev/null | grep -E '^Lumen Installer\\s[.0-9]+$' \t\u0026\u0026 mysqldump-secure --version | grep -E 'Version:\\s*[.0-9]+' \t\u0026\u0026 phpcs --version | grep -E 'version [.0-9]+' \t\u0026\u0026 phpcbf --version | grep -E 'version [.0-9]+' \t\u0026\u0026 phpunit --version | grep -iE '^PHPUnit\\s[.0-9]+' \t\u0026\u0026 photon --version | grep -E 'Installer [.0-9]+' \t\u0026\u0026 symfony --version | grep -E 'version\\s*[.0-9]+' \t\u0026\u0026 wkhtmltopdf --version | grep -E \"^wkhtmltopdf [.0-9]+\\s+\\(.+patched.+\\)\" \t\u0026\u0026 wp --allow-root --version | grep -E '[.0-9]+'  \t\u0026\u0026 ansible --version | grep -E '^ansible [.0-9]+$' \t\u0026\u0026 yamllint --version 2\u003e\u00261 | grep -E '[.0-9]+'  \t\u0026\u0026 ng  version 2\u003e\u00261 | grep -iE 'Angular CLI:\\s*[.0-9]+' \t\u0026\u0026 eslint -v | grep -E '[.0-9]+' \t\u0026\u0026 grunt --version | grep -E '[.0-9]+' \t\u0026\u0026 gulp --version | grep -E '[.0-9]+' \t\u0026\u0026 jsonlint --version | grep -E '[.0-9]+' \t\u0026\u0026 pm2 --no-daemon --version | grep -E '[.0-9]+' \t\u0026\u0026 mdlint --version | grep -E '[.0-9]+' \t\u0026\u0026 vue --version | grep -E '[.0-9]+' \t\u0026\u0026 webpack --version | grep -E '[.0-9]+'  \t\u0026\u0026 mdl --version | grep -E '[.0-9]+' \t\u0026\u0026 sass --version | grep -E '[.0-9]+'  \t\u0026\u0026 rm -rf /home/devilbox/.config/ \t\u0026\u0026 rm -rf /root/.ansible \t\u0026\u0026 rm -rf /root/.console \t\u0026\u0026 rm -rf /root/.composer \t\u0026\u0026 rm -rf /root/.drush \t\u0026\u0026 rm -rf /root/.pm2 \t\u0026\u0026 rm -rf /tmp/* \t\u0026\u0026 (rm -rf /tmp/.* || true)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./data/php-ini.d/php-7.4.ini",
            "/usr/local/etc/php/conf.d/xxx-devilbox-default-php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./data/php-fpm.conf/php-fpm-7.4.conf",
            "/usr/local/etc/php-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./data/docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./data/docker-entrypoint.d/*.sh",
            "/docker-entrypoint.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./data/bash-devilbox",
            "/etc/bash-devilbox"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./data/sudo-devilbox",
            "/etc/sudoers.d/devilbox"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/shared/backups"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/php"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/mail"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/shared/httpd"
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}