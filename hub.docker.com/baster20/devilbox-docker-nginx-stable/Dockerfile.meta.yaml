MetaArgs: null
Stages:
- BaseName: nginx:stable
  Commands:
  - Maintainer: '"cytopia" <cytopia@everythingcli.org>'
    Name: maintainer
  - Key: VHOST_GEN_GIT_REF
    Name: arg
    Value: "0.7"
  - Key: CERT_GEN_GIT_REF
    Name: arg
    Value: "0.2"
  - Env:
    - Key: BUILD_DEPS
      Value: "git \tmake \twget"
    Name: env
  - Env:
    - Key: RUN_DEPS
      Value: "ca-certificates \tpython-yaml \tsupervisor"
    Name: env
  - Env:
    - Key: MY_USER
      Value: nginx
    Name: env
  - Env:
    - Key: MY_GROUP
      Value: nginx
    Name: env
  - Env:
    - Key: HTTPD_START
      Value: '"/usr/sbin/nginx"'
    Name: env
  - Env:
    - Key: HTTPD_RELOAD
      Value: '"nginx -s stop"'
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests
      -y \t\t${BUILD_DEPS} \t\t${RUN_DEPS} \t\t&& git clone https://github.com/devilbox/vhost-gen
      \t&& cd vhost-gen \t&& git checkout \"${VHOST_GEN_GIT_REF}\" \t&& make install
      \t&& cd .. \t&& rm -rf vhost*gen* \t\t&& wget --no-check-certificate -O /usr/bin/ca-gen
      https://raw.githubusercontent.com/devilbox/cert-gen/${CERT_GEN_GIT_REF}/bin/ca-gen
      \t&& wget --no-check-certificate -O /usr/bin/cert-gen https://raw.githubusercontent.com/devilbox/cert-gen/${CERT_GEN_GIT_REF}/bin/cert-gen
      \t&& chmod +x /usr/bin/ca-gen \t&& chmod +x /usr/bin/cert-gen \t\t&& wget --no-check-certificate
      -O /usr/bin/watcherd https://raw.githubusercontent.com/devilbox/watcherd/master/watcherd
      \t&& chmod +x /usr/bin/watcherd \t\t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      $fetchDeps \t\t${BUILD_DEPS} \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& sed -i'' 's|^\\s*include.*conf\\.d/.*|    include /etc/httpd-custom.d/*.conf;\\n
      \   include /etc/httpd/conf.d/*.conf;\\n    include /etc/httpd/vhost.d/*.conf;\\n|g'
      /etc/nginx/nginx.conf \t&& echo \"daemon off;\" >> /etc/nginx/nginx.conf"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& mkdir -p /etc/httpd-custom.d \t&& mkdir -p /etc/httpd/conf.d \t&&
      mkdir -p /etc/httpd/vhost.d \t&& mkdir -p /var/www/default/htdocs \t&& mkdir
      -p /shared/httpd \t&& chmod 0775 /shared/httpd \t&& chown ${MY_USER}:${MY_GROUP}
      /shared/httpd"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./data/vhost-gen/main.yml
    - /etc/vhost-gen/main.yml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./data/vhost-gen/mass.yml
    - /etc/vhost-gen/mass.yml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./data/create-vhost.sh
    - /usr/local/bin/create-vhost.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./data/docker-entrypoint.d
    - /docker-entrypoint.d
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./data/docker-entrypoint.sh
    - /docker-entrypoint.sh
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  - Name: volume
    Volumes:
    - /shared/httpd
  - Name: volume
    Volumes:
    - /ca
  - Name: stopsignal
    Signal: SIGTERM
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: nginx:stable
  Name: ""
  Platform: ""
  SourceCode: FROM nginx:stable
