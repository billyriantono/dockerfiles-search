{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "release-1.15.11"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENLDAP_ROOT_PASSWORD",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LDAP_HOST",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENLDAP_ROOT_CN",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENLDAP_ORG",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PACKAGES_LIST",
              "Value": "\"ca-certificates libpcre3-dev zlib1g-dev ldap-utils libldap2-dev libssl-dev gettext-base\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUILD_PACKAGES_LIST",
              "Value": "\"git gcc make wget\""
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Ravindra Bhadti\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections \u0026\u0026     echo 'deb http://ftp.debian.org/debian/ stretch-backports main' \u003e /etc/apt/sources.list.d/backports.list \u0026\u0026     apt-get update \u0026\u0026     apt-get install -t stretch-backports -y ${PACKAGES_LIST} ${BUILD_PACKAGES_LIST} \u0026\u0026     mkdir /var/log/nginx \u0026\u0026     mkdir -p /var/cache/nginx \u0026\u0026    mkdir /etc/nginx \u0026\u0026     cd /root \u0026\u0026     git clone https://github.com/kvspb/nginx-auth-ldap.git \u0026\u0026     git clone https://github.com/nginx/nginx.git \u0026\u0026     cd /root/nginx \u0026\u0026     git checkout tags/${NGINX_VERSION} \u0026\u0026     ./auto/configure         --add-module=/root/nginx-auth-ldap         --with-http_ssl_module         --with-debug         --conf-path=/etc/nginx/nginx.conf         --sbin-path=/usr/sbin/nginx         --pid-path=/var/cache/nginx/nginx.pid         --error-log-path=/var/log/nginx/error.log         --http-log-path=/var/log/nginx/access.log         --with-stream         --with-stream_ssl_module         --with-debug         --with-file-aio         --with-threads         --with-http_gunzip_module         --with-http_gzip_static_module         --with-http_v2_module         --with-http_auth_request_module         --with-http_sub_module \u0026\u0026     make install \u0026\u0026     cd .. \u0026\u0026     rm -rf nginx-auth-ldap \u0026\u0026     rm -rf nginx \u0026\u0026     wget -O /tmp/dockerize.tar.gz https://github.com/jwilder/dockerize/releases/download/v0.2.0/dockerize-linux-amd64-v0.2.0.tar.gz \u0026\u0026     tar -C /usr/local/bin -xzvf /tmp/dockerize.tar.gz \u0026\u0026     rm -rf /tmp/dockerize.tar.gz \u0026\u0026     rm -rf nginx-auth-ldap/ nginx/ \u0026\u0026     apt-get -y purge binutils openssh-* ${BUILD_PACKAGES_LIST} \u0026\u0026     apt-get -y remove libbsd0 \u0026\u0026     apt -y autoremove \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026     ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -u 1001 nginx \u0026\u0026 \tchown -R 1001 /var/cache/nginx \u0026\u0026     chown -R 1001 /etc/nginx \u0026\u0026 \tchmod -R g+w /var/cache/nginx \u0026\u0026     chmod 755 /usr/sbin/nginx \u0026\u0026 \tsed -i -e '/user/!b' -e '/nginx/!b' -e '/nginx/d' /etc/nginx/nginx.conf \u0026\u0026     sed -i -e '/listen/!b' -e '/80;/!b' -e 's/80;/8080;/' /etc/nginx/nginx.conf \u0026\u0026 \tsed -i \"s!/var/run/nginx.pid!/var/cache/nginx/nginx.pid!g\" /etc/nginx/nginx.conf \u0026\u0026     sed -i \"/^http {/a \\    proxy_temp_path /var/cache/nginx/proxy_temp;\\n    client_body_temp_path /var/cache/nginx/client_temp;\\n    fastcgi_temp_path /var/cache/nginx/fastcgi_temp;\\n    uwsgi_temp_path /var/cache/nginx/uwsgi_temp;\\n    scgi_temp_path /var/cache/nginx/scgi_temp;\\n\" /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "stopsignal",
          "Signal": "SIGTERM"
        },
        {
          "Name": "user",
          "User": "1001"
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "CmdLine": [
            "/usr/sbin/nginx"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-c",
            "/etc/nginx/nginx.conf",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}