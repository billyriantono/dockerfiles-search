MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: Johannes Wettinger, http://github.com/jojow
    Name: maintainer
  - Env:
    - Key: WINERY_BRANCH
      Value: master
    Name: env
  - Env:
    - Key: WINERY_REV
      Value: HEAD
    Name: env
  - Env:
    - Key: MAVEN_VERSION
      Value: 3.2.5
    Name: env
  - Env:
    - Key: MAVEN_URL
      Value: http://artfiles.org/apache.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz
    Name: env
  - Env:
    - Key: TOMCAT_VERSION
      Value: 7.0.59
    Name: env
  - Env:
    - Key: TOMCAT_URL
      Value: http://archive.apache.org/dist/tomcat/tomcat-7/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz
    Name: env
  - Env:
    - Key: CATALINA_HOME
      Value: /opt/tomcat
    Name: env
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - Name: workdir
    Path: ${HOME}
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:/opt/apache-maven-${MAVEN_VERSION}/bin/:${CATALINA_HOME}/bin
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y software-properties-common && add-apt-repository
      ppa:chris-lea/node.js
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y nodejs git curl wget unzip openjdk-7-jdk
      build-essential && apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - wget ${MAVEN_URL} &&         tar -zxf apache-maven-${MAVEN_VERSION}-bin.tar.gz
      &&         cp -R apache-maven-${MAVEN_VERSION} /opt
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g bower
    Name: run
    PrependShell: true
  - CmdLine:
    - wget ${TOMCAT_URL} -O /tmp/catalina.tar.gz &&         tar -zxf /tmp/catalina.tar.gz
      -C /opt &&         ln -s /opt/apache-tomcat-${TOMCAT_VERSION} ${CATALINA_HOME}
      &&         rm /tmp/catalina.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf ${CATALINA_HOME}/webapps/examples && rm -rf ${CATALINA_HOME}/webapps/docs
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /dev/random && ln -s /dev/urandom /dev/random
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - git clone --recursive git://git.eclipse.org/gitroot/winery/org.eclipse.winery.git
      -b ${WINERY_BRANCH}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/org.eclipse.winery
  - CmdLine:
    - git checkout ${WINERY_REV} && git reset --hard
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/org.eclipse.winery/org.eclipse.winery.model.csar.toscametafile
  - CmdLine:
    - mvn install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/org.eclipse.winery/org.eclipse.winery.model.selfservice
  - CmdLine:
    - mvn install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/org.eclipse.winery/org.eclipse.winery.model.tosca
  - CmdLine:
    - mvn install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/org.eclipse.winery
  - CmdLine:
    - mvn clean package
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /opt/org.eclipse.winery/org.eclipse.winery.repository/target/winery.war ${CATALINA_HOME}/webapps/
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /opt/org.eclipse.winery/org.eclipse.winery.topologymodeler/target/winery-topologymodeler.war
      ${CATALINA_HOME}/webapps/
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /opt/tomcat/bin/catalina.sh
    - run
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
