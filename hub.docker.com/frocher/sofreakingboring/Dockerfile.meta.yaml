MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: INITRD
      Value: "No"
    Name: env
  - CmdLine:
    - "set -ex; \tapt-get update; \tapt-get install -y     git-core     curl     zlib1g-dev
      \    build-essential     libssl-dev     libreadline-dev     libyaml-dev     libsqlite3-dev
      \    sqlite3     libxml2-dev     libxslt1-dev     libcurl4-openssl-dev     python-software-properties
      \    libffi-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/sstephenson/rbenv.git /usr/local/rbenv
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '# rbenv setup' > /etc/profile.d/rbenv.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export RBENV_ROOT=/usr/local/rbenv' >> /etc/profile.d/rbenv.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="$RBENV_ROOT/bin:$PATH"' >> /etc/profile.d/rbenv.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'eval "$(rbenv init -)"' >> /etc/profile.d/rbenv.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /etc/profile.d/rbenv.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/local/rbenv/plugins
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/sstephenson/ruby-build.git /usr/local/rbenv/plugins/ruby-build
    Name: run
    PrependShell: true
  - Env:
    - Key: RBENV_ROOT
      Value: /usr/local/rbenv
    Name: env
  - Env:
    - Key: PATH
      Value: $RBENV_ROOT/bin:$RBENV_ROOT/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    Name: env
  - CmdLine:
    - rbenv install -v 2.4.1
    Name: run
    PrependShell: true
  - CmdLine:
    - rbenv global 2.4.1
    Name: run
    PrependShell: true
  - CmdLine:
    - ruby -v
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "gem: --no-document" > ~/.gemrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     56730D5401028683275BD23C23EFEFE93C4CFFFE     77984A986EBC2AA786BC0F66B01FBB92821C587A   ;
      do     gpg --keyserver pgp.mit.edu --recv-keys "$key" ||     gpg --keyserver
      keyserver.pgp.com --recv-keys "$key" ||     gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys "$key" ;   done
    Name: run
    PrependShell: true
  - Env:
    - Key: NPM_CONFIG_LOGLEVEL
      Value: info
    Name: env
  - Env:
    - Key: NODE_VERSION
      Value: 8.9.0
    Name: env
  - CmdLine:
    - buildDeps='xz-utils curl ca-certificates'     && set -x     && apt-get update
      && apt-get install -y $buildDeps --no-install-recommends     && rm -rf /var/lib/apt/lists/*     &&
      curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz"     &&
      curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"     &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep
      " node-v$NODE_VERSION-linux-x64.tar.xz\$" SHASUMS256.txt | sha256sum -c -     &&
      tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz" -C /usr/local --strip-components=1     &&
      rm "node-v$NODE_VERSION-linux-x64.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt     &&
      apt-get purge -y --auto-remove $buildDeps
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get upgrade -y && apt-get install -y     ca-certificates     tzdata     libsqlite3-dev     libmysqlclient-dev     mysql-client     libfontconfig1     libfontconfig1-dev     libicu-dev     libfreetype6     libfreetype6-dev     libssl-dev     libxft-dev     libpng-dev     libjpeg-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y file imagemagick
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libxml2-dev libxslt1-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: APP_HOME
      Value: /myapp
    Name: env
  - CmdLine:
    - mkdir $APP_HOME
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $APP_HOME
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile
    - Gemfile
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile.lock
    - Gemfile.lock
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install foreman
    Name: run
    PrependShell: true
  - CmdLine:
    - bundle install --without test
    Name: run
    PrependShell: true
  - CmdLine:
    - rbenv rehash
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $APP_HOME
  - CmdLine:
    - apt-get install -y cron
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /var/log/cron.log
    Name: run
    PrependShell: true
  - CmdLine:
    - whenever -w
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - foreman
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
