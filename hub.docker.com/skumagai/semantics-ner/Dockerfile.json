{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "greyltc/archlinux",
      "SourceCode": "FROM greyltc/archlinux",
      "Platform": "",
      "From": {
        "Image": "greyltc/archlinux"
      },
      "Commands": [
        {
          "CmdLine": [
            "useradd -ms /bin/sh nc_semantics \u0026\u0026     pacman -Suyy --noconfirm --noprogressbar \u0026\u0026     pacman -S --noconfirm --noprogressbar --needed python uwsgi-plugin-python git binutils         make yajl gcc fakeroot expac sudo automake pkg-config         python-pip cython \u0026\u0026     sed -i s/lecture=once/lecture=never/ /etc/sudoers \u0026\u0026     echo \"ALL            ALL = (ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026     cd /home/nc_semantics \u0026\u0026     su nc_semantics -c \"git clone https://aur.archlinux.org/cower.git\" \u0026\u0026     su nc_semantics -c \"gpg --recv-keys --keyserver hkp://pgp.mit.edu 1EB2638FF56C0C53\" \u0026\u0026     cd cower \u0026\u0026     su nc_semantics -c \"makepkg --noconfirm\" \u0026\u0026     pacman -U --noconfirm --noprogressbar --needed cower*.pkg.tar.xz \u0026\u0026     cd .. \u0026\u0026     su nc_semantics -c \"git clone https://aur.archlinux.org/pacaur.git\" \u0026\u0026     cd pacaur \u0026\u0026     su nc_semantics -c \"makepkg --noconfirm\" \u0026\u0026     pacman -U --noconfirm --noprogressbar --needed pacaur*.pkg.tar.xz \u0026\u0026     cd .. \u0026\u0026     rm -rf cower pacaur \u0026\u0026     su nc_semantics -c \"pacaur -S --noedit --noconfirm --needed --noprogressbar frog\" \u0026\u0026     pip install --no-cache-dir python-frog flask \u0026\u0026     pacman -Rsc --noconfirm git binutils make yajl gcc fakeroot expac sudo automake pkg-config         python-pip cython pacaur \u0026\u0026     yes | pacman -Scc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/etc/uwsgi"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ner.py",
            "ner.ini",
            "/etc/uwsgi/"
          ]
        },
        {
          "CmdLine": [
            "uwsgi",
            "--ini",
            "/etc/uwsgi/ner.ini"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}