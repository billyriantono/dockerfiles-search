{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm",
      "SourceCode": "FROM php:7.2-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/v0.18.0/tini",
            "/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPIZE_DEPS",
              "Value": "autoconf              build-essential       file                  g++                   gcc                   libbz2-dev            libc-client-dev       libc-dev              libcurl4-gnutls-dev   libedit-dev           libfreetype6-dev      libgmp-dev            libicu-dev            libjpeg62-turbo-dev   libkrb5-dev           libmcrypt-dev         libpng-dev            libpq-dev             libsqlite3-dev        libssh2-1-dev         libxml2-dev           libxslt1-dev          make                  pkg-config            re2c"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/man/man7/ \u0026\u0026 touch /usr/share/man/man7/ABORT.7.gz.dpkg-tmp \u0026\u0026     mkdir -p /usr/share/man/man1/ \u0026\u0026 touch /usr/share/man/man1/psql.1.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -q -y --no-install-recommends   wget                  gnupg                 apt-transport-https \u0026\u0026 echo \"deb https://deb.nodesource.com/node_8.x stretch main\" \u003e /etc/apt/sources.list.d/node.list       \u0026\u0026 wget --quiet -O - https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -                \u0026\u0026 echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' \u003e /etc/apt/sources.list.d/newrelic.list  \u0026\u0026 wget -O- https://download.newrelic.com/548C16BF.gpg | apt-key add - \u0026\u0026  apt-get -qy update \u0026\u0026 apt-get install -q -y --no-install-recommends $PHPIZE_DEPS     apt-utils               ca-certificates         curl                    debconf                 debconf-utils           git                     git-core                graphviz                libedit2                libpq5                  libsqlite3-0            jq                      mc                      netcat                  nginx                   nginx-extras            nodejs                  patch                   postgresql-client       psmisc                  python-dev              python-setuptools       python-pip              redis-tools             rsync                   sudo                    supervisor              unzip                   vim                     zip                     openssh-server          newrelic-php5           dnsutils                certbot               \u0026\u0026 test -d /var/run/sshd || mkdir /var/run/sshd             \u0026\u0026 usermod --home /data www-data                            \u0026\u0026 usermod -s /bin/bash www-data                            \u0026\u0026 echo \"www-data:bigsecretpass\" | chpasswd                 \u0026\u0026 useradd -m -s /bin/bash -d /data jenkins                 \u0026\u0026 echo \"jenkins:bigsecretpass\" | chpasswd                  \u0026\u0026 usermod -a -G www-data jenkins                           \u0026\u0026 echo 'jenkins ALL=(ALL) NOPASSWD:ALL' \u003e\u003e /etc/sudoers    \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/   \u0026\u0026 docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql   \u0026\u0026 docker-php-ext-install -j$(nproc)         bcmath              bz2                 gd                  gmp                 iconv               intl                mbstring            mysqli              opcache             pdo                 pdo_mysql           pdo_pgsql           pgsql               readline            soap                sockets             xmlrpc              xsl                 zip           \u0026\u0026 pecl install -o -f redis   \u0026\u0026 rm -rf /tmp/pear   \u0026\u0026 echo \"extension=redis.so\" \u003e $PHP_INI_DIR/conf.d/docker-php-ext-redis.ini   \u0026\u0026 pip install pyaml j2cli jinja2-cli   \u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer   \u0026\u0026 curl -L https://npmjs.org/install.sh | sudo sh   \u0026\u0026 apt-get -qy autoremove   \u0026\u0026 apt-get -qy purge $PHPIZE_DEPS   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/robots.txt",
            "/etc/nginx/robots.txt"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/conf.d/",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/vhost_templates/",
            "/etc/nginx/vhost_templates/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/maintenance.conf",
            "/etc/nginx/maintenance.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/maintenance.html",
            "/maintenance/index.html"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/fastcgi_params",
            "/etc/nginx/fastcgi_params"
          ]
        },
        {
          "CmdLine": [
            "rm -f /usr/local/etc/php-fpm.d/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php/php-fpm.conf",
            "/usr/local/etc/php-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php/php.ini.j2",
            "/usr/local/etc/php/php.ini.j2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php/pool.d/*.conf.j2",
            "/usr/local/etc/php-fpm.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php/ext/opcache.ini",
            "/tmp/opcache.ini"
          ]
        },
        {
          "CmdLine": [
            "cat /tmp/opcache.ini \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "Key": "GITHUB_TOKEN",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "install -d -o www-data -g www-data -m 0755 /data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /data/data/DE/logs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /versions"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/spryker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/config_local.php.j2",
            "/etc/spryker/config_local.php.j2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/config_local_XX.php.j2",
            "/etc/spryker/config_local_XX.php.j2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/config_local_nonsplit.php.j2",
            "/etc/spryker/config_local_nonsplit.php.j2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/config_local_XX_nonsplit.php.j2",
            "/etc/spryker/config_local_XX_nonsplit.php.j2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/stores.php",
            "/etc/spryker/stores.php"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/StockConfig.php.j2",
            "/etc/spryker/StockConfig.php.j2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/frontend-build-config.json.j2",
            "/etc/spryker/frontend-build-config.json.j2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/install_spryker.yml.j2",
            "/etc/spryker/install_spryker.yml.j2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/restore_spryker_state.yml.j2",
            "/etc/spryker/restore_spryker_state.yml.j2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/setup_suite.sh",
            "/setup_suite.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/setup_vhosts.sh",
            "/usr/local/bin/setup_vhosts.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/vars.j2",
            "/etc/spryker/vars.j2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/setup_output.j2",
            "/etc/spryker/setup_output.j2"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "spryker/ssh_config",
            "/etc/ssh/ssh_config"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /setup_suite.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/spryker/www-data/.ssh  \u0026\u0026 mkdir -p /etc/spryker/jenkins/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins/id_rsa.pub",
            "/etc/spryker/www-data/.ssh/authorized_keys"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins/id_rsa.pub",
            "/etc/spryker/jenkins/.ssh/authorized_keys"
          ]
        },
        {
          "CmdLine": [
            "sed -i '/^#AuthorizedKeysFile/aAuthorizedKeysFile      .ssh/authorized_keys /etc/spryker/%u/.ssh/authorized_keys\\nPort 222 ' /etc/ssh/sshd_config   \u0026\u0026 chmod 600 /etc/spryker/www-data/.ssh/authorized_keys  \u0026\u0026 chmod 600 /etc/spryker/jenkins/.ssh/authorized_keys  \u0026\u0026 chown www-data:www-data /etc/spryker/www-data/.ssh/authorized_keys  \u0026\u0026 chown jenkins:jenkins /etc/spryker/jenkins/.ssh/authorized_keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "application/app_files/MailDependencyProvider.php",
            "/etc/spryker/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "application/app_files/Mailer.patch",
            "/etc/spryker/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "application/app_files/localMailer.patch",
            "/etc/spryker/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "application/app_files/jenkins-job.default.xml.twig",
            "/etc/spryker/"
          ]
        },
        {
          "CmdLine": [
            "/tini",
            "--",
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "222",
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf",
            "--nodaemon"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}