MetaArgs: null
Stages:
- BaseName: google/golang:1.4
  Commands:
  - Maintainer: Xu Wang <xuwang@gmail.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - echo 'deb http://http.debian.net/debian wheezy-backports main' >> /etc/apt/sources.list     &&
      apt-get update     && apt-get install --force-yes -y apt-utils ruby-full build-essential
      rubygems openssh-client     && apt-get install --force-yes -y -t wheezy-backports
      linux-image-amd64 nodejs libpng-dev     && update-alternatives --install /usr/bin/node
      nodejs /usr/bin/nodejs 100     && curl -sSL https://get.docker.com/ | sh     &&
      curl -L https://www.npmjs.org/install.sh | sh     && gem install compass rdoc
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g angular     && npm install -g grunt-cli     && npm install -g
      bower
    Name: run
    PrependShell: true
  - Env:
    - Key: APPDIR
      Value: /gopath/src/github.com/fleet-ui
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - angular
    - $APPDIR/angular
  - Name: workdir
    Path: $APPDIR/angular
  - CmdLine:
    - npm install
    Name: run
    PrependShell: true
  - CmdLine:
    - bower install --allow-root
    Name: run
    PrependShell: true
  - CmdLine:
    - grunt build --force
    Name: run
    PrependShell: true
  - CmdLine:
    - mv dist ../public/
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $APPDIR
  - Name: workdir
    Path: $APPDIR
  - CmdLine:
    - go get && go install
    Name: run
    PrependShell: true
  - CmdLine:
    - cp $GOPATH/bin/fleet-ui $APPDIR/fleet-ui
    Name: run
    PrependShell: true
  - Env:
    - Key: FLEET_VERSION
      Value: 0.10.2
    Name: env
  - CmdLine:
    - curl -s -L https://github.com/coreos/fleet/releases/download/v${FLEET_VERSION}/fleet-v${FLEET_VERSION}-linux-amd64.tar.gz   |
      tar xz fleet-v${FLEET_VERSION}-linux-amd64/fleetctl -O > /usr/local/bin/fleetctl  &&
      chmod +x /usr/local/bin/fleetctl
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - CmdLine:
    - ./run.sh
    Name: cmd
    PrependShell: true
  From:
    Image: google/golang:1.4
  Name: ""
  Platform: ""
  SourceCode: FROM google/golang:1.4
