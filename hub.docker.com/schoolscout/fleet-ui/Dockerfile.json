{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "google/golang:1.4",
      "SourceCode": "FROM google/golang:1.4",
      "Platform": "",
      "From": {
        "Image": "google/golang:1.4"
      },
      "Commands": [
        {
          "Maintainer": "Xu Wang \u003cxuwang@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'deb http://http.debian.net/debian wheezy-backports main' \u003e\u003e /etc/apt/sources.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install --force-yes -y apt-utils ruby-full build-essential rubygems openssh-client     \u0026\u0026 apt-get install --force-yes -y -t wheezy-backports linux-image-amd64 nodejs libpng-dev     \u0026\u0026 update-alternatives --install /usr/bin/node nodejs /usr/bin/nodejs 100     \u0026\u0026 curl -sSL https://get.docker.com/ | sh     \u0026\u0026 curl -L https://www.npmjs.org/install.sh | sh     \u0026\u0026 gem install compass rdoc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g angular     \u0026\u0026 npm install -g grunt-cli     \u0026\u0026 npm install -g bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APPDIR",
              "Value": "/gopath/src/github.com/fleet-ui"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "angular",
            "$APPDIR/angular"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$APPDIR/angular"
        },
        {
          "CmdLine": [
            "npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bower install --allow-root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "grunt build --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv dist ../public/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "$APPDIR"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$APPDIR"
        },
        {
          "CmdLine": [
            "go get \u0026\u0026 go install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp $GOPATH/bin/fleet-ui $APPDIR/fleet-ui"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "FLEET_VERSION",
              "Value": "0.10.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -s -L https://github.com/coreos/fleet/releases/download/v${FLEET_VERSION}/fleet-v${FLEET_VERSION}-linux-amd64.tar.gz   | tar xz fleet-v${FLEET_VERSION}-linux-amd64/fleetctl -O \u003e /usr/local/bin/fleetctl  \u0026\u0026 chmod +x /usr/local/bin/fleetctl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "CmdLine": [
            "./run.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}