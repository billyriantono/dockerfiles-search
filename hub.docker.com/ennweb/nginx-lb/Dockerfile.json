{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04.3",
      "SourceCode": "FROM ubuntu:14.04.3",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04.3"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y wget gcc make patch libpcre3-dev libssl-dev zlib1g-dev libgeoip-dev apache2-utils \u0026\u0026   wget https://github.com/kelseyhightower/confd/releases/download/v0.10.0/confd-0.10.0-linux-amd64 -O /usr/bin/confd \u0026\u0026   chmod +x /usr/bin/confd \u0026\u0026   wget http://nginx.org/download/nginx-1.9.5.tar.gz \u0026\u0026   tar -xzf nginx-1.9.5.tar.gz \u0026\u0026   cd nginx-1.9.5 \u0026\u0026   wget https://github.com/yaoweibin/nginx_upstream_check_module/archive/master.tar.gz -O patch.tgz \u0026\u0026   tar -xzf patch.tgz \u0026\u0026   patch -p0 \u003c nginx_upstream_check_module-master/check_1.9.2+.patch \u0026\u0026   ./configure     --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2'     --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro'     --add-module=nginx_upstream_check_module-master     --prefix=/usr/share/nginx     --sbin-path=/usr/sbin/nginx     --conf-path=/etc/nginx/nginx.conf     --http-log-path=/var/log/nginx/access.log     --error-log-path=/var/log/nginx/error.log     --lock-path=/var/run/nginx.lock     --pid-path=/run/nginx.pid     --http-client-body-temp-path=/var/lib/nginx/body     --http-proxy-temp-path=/var/lib/nginx/proxy     --with-pcre-jit     --with-ipv6     --with-http_ssl_module     --with-http_stub_status_module     --with-http_realip_module     --with-http_addition_module     --with-http_geoip_module     --with-http_gzip_static_module     --with-http_sub_module     --with-mail     --with-mail_ssl_module     --with-http_v2_module     --with-file-aio     --with-http_auth_request_module     --with-stream     --with-stream_ssl_module     --without-http_scgi_module     --without-http_uwsgi_module     --without-http_fastcgi_module \u0026\u0026   make \u0026\u0026 make install \u0026\u0026 cd / \u0026\u0026 rm -rf /nginx* \u0026\u0026   apt-get remove -y wget gcc make patch libpcre3-dev libssl-dev zlib1g-dev libpcrecpp0 libssl-doc \u0026\u0026   apt-get autoremove -y \u0026\u0026 apt-get clean \u0026\u0026 apt-get autoclean \u0026\u0026   rm -rf /var/lib/apt/lists/* \u0026\u0026   ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026   ln -sf /dev/stderr /var/log/nginx/error.log \u0026\u0026   rm -rf /etc/nginx/nginx.conf \u0026\u0026   mkdir -p /var/lib/nginx \u0026\u0026   mkdir -p /etc/nginx/conf.d \u0026\u0026   mkdir -p /etc/nginx/keys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "confd",
            "/etc/confd"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx-lb",
            "/usr/bin/nginx-lb"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx-lb"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}