{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "million12/nginx:latest",
      "SourceCode": "FROM million12/nginx:latest",
      "Platform": "",
      "From": {
        "Image": "million12/nginx:latest"
      },
      "Commands": [
        {
          "Maintainer": "Marcin Ryzycki \u003cmarcin@m12.io\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            },
            {
              "Key": "NODE_VERSION",
              "Value": "6.3.0"
            },
            {
              "Key": "STATUS_PAGE_ALLOWED_IP",
              "Value": "127.0.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files/config/install*",
            "/config/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files/etc/yum.repos.d/*",
            "/etc/yum.repos.d/"
          ]
        },
        {
          "CmdLine": [
            "yum update -y \u0026\u0026   `# Install some basic web-related tools...`   yum install -y wget patch tar bzip2 unzip openssh-clients MariaDB-client \u0026\u0026   `# Install PHP 7.0 from Remi YUM repository...`   rpm -Uvh http://rpms.remirepo.net/enterprise/remi-release-7.rpm \u0026\u0026   yum install -y     php70-php     php70-php-bcmath     php70-php-cli     php70-php-common     php70-php-devel     php70-php-fpm     php70-php-gd     php70-php-gmp     php70-php-intl     php70-php-json     php70-php-mbstring     php70-php-mcrypt     php70-php-mysqlnd     php70-php-opcache     php70-php-pdo     php70-php-pear     php70-php-process     php70-php-pspell     php70-php-soap     php70-php-xml     `# Also install the following PECL packages:`     php70-php-pecl-imagick     php70-php-pecl-mysql     php70-php-pecl-uploadprogress     php70-php-pecl-uuid     php70-php-pecl-zip     `# Temporary workaround: one dependant package fails to install when building image (and the yum error is: Error unpacking rpm package httpd-2.4.6-40.el7.centos.x86_64)...`     || true \u0026\u0026   `# Set PATH so it includes newest PHP and its aliases...`   ln -sfF /opt/remi/php70/enable /etc/profile.d/php70-paths.sh \u0026\u0026   `# The above will set PATH when container starts... but not when php is used on container build time.`   `# Therefore create symlinks in /usr/local/bin for all PHP tools...`   ln -sfF /opt/remi/php70/root/usr/bin/{pear,pecl,phar,php,php-cgi,php-config,phpize} /usr/local/bin/. \u0026\u0026   php --version \u0026\u0026   `# Move PHP config files from /etc/opt/remi/php70/* to /etc/* `   mv -f /etc/opt/remi/php70/php.ini /etc/php.ini \u0026\u0026 ln -s /etc/php.ini /etc/opt/remi/php70/php.ini \u0026\u0026   rm -rf /etc/php.d \u0026\u0026 mv /etc/opt/remi/php70/php.d /etc/. \u0026\u0026 ln -s /etc/php.d /etc/opt/remi/php70/php.d \u0026\u0026   echo 'PHP 7 installed.' \u0026\u0026   `# Install libs required to build some gem/npm packages (e.g. PhantomJS requires zlib-devel, libpng-devel)`   yum install -y ImageMagick GraphicsMagick gcc gcc-c++ libffi-devel libpng-devel zlib-devel \u0026\u0026   `# Install common tools needed/useful during Web App development`   `# Install Ruby 2`   yum install -y ruby ruby-devel \u0026\u0026   echo 'gem: --no-document' \u003e /etc/gemrc \u0026\u0026   gem update --system \u0026\u0026   gem install bundler \u0026\u0026   `# Install/compile other software (Git, NodeJS)`   source /config/install.sh \u0026\u0026   `# Install nvm and NodeJS/npm`   export PROFILE=/etc/profile.d/nvm.sh \u0026\u0026 touch $PROFILE \u0026\u0026   curl -sSL https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash \u0026\u0026   source $NVM_DIR/nvm.sh \u0026\u0026   nvm install $NODE_VERSION \u0026\u0026   nvm alias default $NODE_VERSION \u0026\u0026   nvm use default \u0026\u0026   `# Install common npm packages: grunt, gulp, bower, browser-sync`   npm install -g gulp grunt-cli bower browser-sync \u0026\u0026   `# Disable SSH strict host key checking: needed to access git via SSH in non-interactive mode`   echo -e \"StrictHostKeyChecking no\" \u003e\u003e /etc/ssh/ssh_config \u0026\u0026   `# Install Memcached, Redis PECL extensions from the source. Versions available in yum repo have dependency on igbinary which causes PHP seg faults in some PHP apps (e.g. Flow/Neos)...`   `# Install PHP Memcached ext from the source...`   yum install -y libmemcached-devel \u0026\u0026   git clone https://github.com/php-memcached-dev/php-memcached.git \u0026\u0026 cd php-memcached \u0026\u0026 git checkout php7 \u0026\u0026   phpize \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026   echo \"extension=memcached.so\" \u003e /etc/php.d/50-memcached.ini \u0026\u0026   `# Install PHP Redis ext from the source...`   git clone https://github.com/phpredis/phpredis.git \u0026\u0026 cd phpredis \u0026\u0026 git checkout php7 \u0026\u0026   phpize \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \u0026\u0026   echo \"extension=redis.so\" \u003e /etc/php.d/50-redis.ini \u0026\u0026   curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026   chown www /usr/local/bin/composer \u0026\u0026 composer --version \u0026\u0026   `# Clean YUM caches to minimise Docker image size... #`   yum clean all \u0026\u0026 rm -rf /tmp/yum*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules"
            },
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}