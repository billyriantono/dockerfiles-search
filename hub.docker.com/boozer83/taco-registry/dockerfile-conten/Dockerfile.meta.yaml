MetaArgs: null
Stages:
- BaseName: java:openjdk-8-jdk
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update      && apt-get install -y apt-transport-https  software-properties-common     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/*
      \t&& localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: SBT_MAJOR
      Value: "0.13"
    Name: env
  - Env:
    - Key: SBT_VERSION
      Value: 0.13.8
    Name: env
  - CmdLine:
    - echo "deb https://dl.bintray.com/sbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list      &&
      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 642AC823      &&
      apt-get update      && apt-get -y install sbt=$SBT_VERSION     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: NPM_DISTRO
      Value: jessie
    Name: env
  - Env:
    - Key: NPM_VERSION
      Value: node_5.x
    Name: env
  - CmdLine:
    - add-apt-repository -y -r ppa:chris-lea/node.js      && rm -f /etc/apt/sources.list.d/chris-lea-node_js-*.list     &&
      curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -     &&
      echo "deb https://deb.nodesource.com/$NPM_VERSION $NPM_DISTRO main" > /etc/apt/sources.list.d/nodesource.list     &&
      echo "deb-src https://deb.nodesource.com/$NPM_VERSION $NPM_DISTRO  main" >>
      /etc/apt/sources.list.d/nodesource.list     && apt-get update     && apt-get
      install -y nodejs     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g webpack mocha node-gyp
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | apt-key add -
    Name: run
    PrependShell: true
  - Env:
    - Key: ELASTICSEARCH_MAJOR
      Value: "2.3"
    Name: env
  - Env:
    - Key: ELASTICSEARCH_VERSION
      Value: 2.3.0
    Name: env
  - Env:
    - Key: ELASTICSEARCH_REPO_BASE
      Value: http://packages.elasticsearch.org/elasticsearch/2.x/debian
    Name: env
  - CmdLine:
    - "echo \"deb $ELASTICSEARCH_REPO_BASE stable main\" > /etc/apt/sources.list.d/elasticsearch.list
      \ \t&& apt-get update \t&& apt-get install -y --no-install-recommends elasticsearch=$ELASTICSEARCH_VERSION
      \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/share/elasticsearch/bin:$PATH
    Name: env
  - CmdLine:
    - "for path in \t\t/usr/share/elasticsearch/data \t\t/usr/share/elasticsearch/logs
      \t\t/usr/share/elasticsearch/config \t\t/usr/share/elasticsearch/config/scripts
      \t; do \t\tmkdir -p \"$path\"; \t\tchown -R elasticsearch:elasticsearch \"$path\";
      \tdone"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - elastic-config
    - /usr/share/elasticsearch/config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - elastic-start-service.sh
    - /root/elastic-start-service.sh
  - Name: expose
    Ports:
    - "9200"
    - "9300"
  - Env:
    - Key: PG_MAJOR
      Value: "9.4"
    Name: env
  - CmdLine:
    - groupadd -r postgres --gid=999 && useradd -r -g postgres --uid=999 postgres
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8     &&
      echo 'deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main' $PG_MAJOR
      > /etc/apt/sources.list.d/pgdg.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install -y postgresql-common \t&& sed -ri 's/#(create_main_cluster)
      .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \t&& apt-get install
      -y \t\tpostgresql-$PG_MAJOR \t\tpostgresql-contrib-$PG_MAJOR \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/
      \t&& ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \t&&
      sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/postgresql     && chown -R postgres /var/run/postgresql
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/lib/postgresql/$PG_MAJOR/bin:$PATH
    Name: env
  - Env:
    - Key: PGDATA
      Value: /var/lib/postgresql/data
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pgsql-start-service.sh
    - /root/pgsql-start-service.sh
  - Name: expose
    Ports:
    - "5432"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - build.sbt
    - hello.scala
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - project
    - /project
  - CmdLine:
    - sbt compile     && rm -rf build.sbt hello.scala project
    Name: run
    PrependShell: true
  From:
    Image: java:openjdk-8-jdk
  Name: ""
  Platform: ""
  SourceCode: FROM java:openjdk-8-jdk
