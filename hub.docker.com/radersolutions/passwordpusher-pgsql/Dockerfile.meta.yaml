MetaArgs: null
Stages:
- BaseName: docker.io/ubuntu:18.04
  Commands:
  - Env:
    - Key: APP_ROOT
      Value: /opt/PasswordPusher
    Name: env
  - Env:
    - Key: PATH
      Value: ${APP_ROOT}:${PATH}
    - Key: HOME
      Value: ${APP_ROOT}
    Name: env
  - Env:
    - Key: DATABASE_URL
      Value: postgresql://passwordpusher_user:passwordpusher_passwd@postgres:5432/passwordpusher_db
    Name: env
  - CmdLine:
    - ln -fs /usr/share/zoneinfo/US/Central > /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq &&     apt-get install -y --assume-yes build-essential libpq-dev
      git curl ruby2.5 ruby2.5-dev tzdata sqlite3 ruby-sqlite3 libsqlite3-dev zlib1g-dev
      &&     cd /opt &&     git clone https://github.com/pglombardo/PasswordPusher.git
      &&     touch ${APP_ROOT}/log/production.log &&     cd ${APP_ROOT} &&     gem
      install bundler &&     gem install thor &&     chown -R 1001:root ${APP_ROOT}
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "5000"
  - Name: user
    User: "1001"
  - Name: workdir
    Path: ${APP_ROOT}
  - CmdLine:
    - bundle install --without development private test --deployment &&     bundle
      exec rake assets:precompile &&     RAILS_ENV=production
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - chmod -R u+x ${APP_ROOT} &&     chgrp -R 0 ${APP_ROOT} &&     chmod -R g=u ${APP_ROOT}
      /etc/passwd
    Name: run
    PrependShell: true
  - Name: user
    User: "1001"
  - Name: workdir
    Path: ${APP_ROOT}
  - CmdLine:
    - containerization/passwordpusher-postgres/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: docker.io/ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM docker.io/ubuntu:18.04
