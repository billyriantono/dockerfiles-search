MetaArgs: null
Stages:
- BaseName: buildpack-deps:jessie-curl
  Commands:
  - Env:
    - Key: FAILBACK_OVERRIDE
      Value: "0"
    Name: env
  - Env:
    - Key: oauth2Project
      Value: /bitly/oauth2_proxy
    Name: env
  - Env:
    - Key: FAILBACK_OAUTH2_PROXY_BRANCH
      Value: v2.2
    Name: env
  - Env:
    - Key: FAILBACK_OAUTH2_PROXY_VERSION
      Value: 2.2.0
    Name: env
  - Env:
    - Key: FAILBACK_GOLANG_VERSION
      Value: 1.8.1
    Name: env
  - Env:
    - Key: PATH
      Value: /opt/oauth2-proxy/bin:$PATH
    Name: env
  - CmdLine:
    - newArchive=`wget https://github.com$oauth2Project/releases/ -q -O - | grep -m
      1 "linux-amd64" | grep . -m $(( 1 - $FAILBACK_OVERRIDE )) | awk '{ print $2
      }' | cut -d\" -f 2` &&     if test "${newArchive#*"release"}" != "$newArchive"
      ; then export ARCHIVE=$newArchive ; echo "ARCHIVE set to most-current oauth2_proxy
      release" ; else export ARCHIVE=$oauth2Project/releases/download/$FAILBACK_OAUTH2_PROXY_BRANCH/oauth2_proxy-$FAILBACK_OAUTH2_PROXY_VERSION.linux-amd64.go$FAILBACK_GOLANG_VERSION.tar.gz
      ; echo "ARCHIVE variable hardcoded because dynamic method failed or was overridden"
      ; fi &&     tarPath=https://github.com$ARCHIVE &&     echo "Downloading $tarPath"
      ; mkdir -p /opt/oauth2-proxy/bin && mkdir /opt/oauth2-proxy/etc &&     curl
      -L -k --silent       $tarPath  |       tar xz --strip-components 1 -C /opt/oauth2-proxy/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - oauth2_proxy -config=/opt/oauth2-proxy/etc/config -proxy-prefix "/rader_oauth2"
    Name: cmd
    PrependShell: true
  From:
    Image: buildpack-deps:jessie-curl
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:jessie-curl
