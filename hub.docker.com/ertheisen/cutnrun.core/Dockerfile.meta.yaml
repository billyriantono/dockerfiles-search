MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - CmdLine:
    - "useradd docker \t&& mkdir /home/docker \t&& chown docker:docker /home/docker
      \t&& addgroup docker staff"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update \t&& apt-get install -y gnupg2 software-properties-common     &&
      apt-key adv --keyserver keyserver.ubuntu.com         --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
      \    && add-apt-repository         'deb https://cloud.r-project.org/bin/linux/ubuntu
      bionic-cran35/'     && apt-get update     && apt-get install -y --no-install-recommends
      \t\tgit         ed \t\tless \t\tlocales \t\tvim-tiny \t\twget \t\tca-certificates
      \t\tapt-transport-https \t\tgsfonts         libssl-dev         libcurl4-openssl-dev
      \        libxml2-dev         libudunits2-dev         libnetcdf-dev         python3-pip
      \        python3-setuptools         python3-dev \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \t&& locale-gen en_US.utf8 \t&&
      /usr/sbin/update-locale LANG=en_US.UTF-8"
    Name: run
    PrependShell: true
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: R_BASE_VERSION
      Value: 3.5.1-1bionic
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "echo \"r-base Geographic area: select 12\" | debconf-set-selections     &&
      apt-get update \t&& apt-get install -y --no-install-recommends \t\tlittler        r-cran-littler
      \t\tr-base=${R_BASE_VERSION}* \t\tr-base-dev=${R_BASE_VERSION}* \t\tr-recommended=${R_BASE_VERSION}*
      \        && echo 'options(repos = c(CRAN = \"https://cloud.r-project.org/\"),
      download.file.method = \"libcurl\")' >> /etc/R/Rprofile.site         && echo
      'source(\"/etc/R/Rprofile.site\")' >> /etc/littler.r \t&& ln -s /usr/share/doc/littler/examples/install.r
      /usr/local/bin/install.r \t&& ln -s /usr/share/doc/littler/examples/install2.r
      /usr/local/bin/install2.r \t&& ln -s /usr/share/doc/littler/examples/installGithub.r
      /usr/local/bin/installGithub.r \t&& ln -s /usr/share/doc/littler/examples/testInstalled.r
      /usr/local/bin/testInstalled.r \t&& install.r docopt \t&& rm -rf /tmp/downloaded_packages/
      /tmp/*.rds \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /build
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bioconductor_core.R
    - /build/bioconductor_core.R
  - CmdLine:
    - Rscript bioconductor_core.R
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements_core.txt
    - /build/requirements_core.txt
  - CmdLine:
    - pip3 install wheel     && pip3 install -r requirements_core.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - iRkernel.R
    - /build/iRkernel.R
  - CmdLine:
    - Rscript iRkernel.R
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \tcurl \tunzip \tperl \topenjdk-8-jre-headless"
    Name: run
    PrependShell: true
  - Env:
    - Key: DEST_DIR
      Value: /opt/
    Name: env
  - Env:
    - Key: FASTQC_URL
      Value: http://www.bioinformatics.babraham.ac.uk/projects/fastqc/
    Name: env
  - Env:
    - Key: FASTQC_VERSION
      Value: 0.11.4
    Name: env
  - Env:
    - Key: FASTQC_RELEASE
      Value: fastqc_v${FASTQC_VERSION}.zip
    Name: env
  - CmdLine:
    - mkdir -p $DEST_DIR
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - curl -SLO ${FASTQC_URL}/${FASTQC_RELEASE} && unzip ${FASTQC_RELEASE} -d ${DEST_DIR}
      && rm ${FASTQC_RELEASE}
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x ${DEST_DIR}/FastQC/fastqc
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${DEST_DIR}/FastQC:$PATH
    Name: env
  - Env:
    - Key: SAMTOOLS_URL
      Value: https://github.com/samtools/samtools/releases/download/1.9/
    Name: env
  - Env:
    - Key: SAMTOOLS_VERSION
      Value: "1.9"
    Name: env
  - Env:
    - Key: SAMTOOLS_RELEASE
      Value: samtools-${SAMTOOLS_VERSION}.tar.bz2
    Name: env
  - CmdLine:
    - mkdir -p ${DEST_DIR}/samtools-${SAMTOOLS_VERSION}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - curl -SLO ${SAMTOOLS_URL}/${SAMTOOLS_RELEASE} && tar xjvf samtools-${SAMTOOLS_VERSION}.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd samtools-${SAMTOOLS_VERSION}   \t&& ./configure --prefix=${DEST_DIR}/samtools-${SAMTOOLS_VERSION}
      \t&& make install"
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x ${DEST_DIR}/samtools-${SAMTOOLS_VERSION}/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${DEST_DIR}/samtools-${SAMTOOLS_VERSION}/bin:$PATH
    Name: env
  - CmdLine:
    - pip3 install cutadapt
    Name: run
    PrependShell: true
  - Env:
    - Key: TRIMGALORE_URL
      Value: https://github.com/FelixKrueger/TrimGalore/archive/
    Name: env
  - Env:
    - Key: TRIMGALORE_VERSION
      Value: 0.4.5
    Name: env
  - Env:
    - Key: TRIMGALORE_RELEASE
      Value: trim_galore-${TRIMGALORE_VERSION}.tar.gz
    Name: env
  - CmdLine:
    - mkdir -p ${DEST_DIR}/trim_galore-${TRIMGALORE_VERSION}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - "curl -fsSL https://github.com/FelixKrueger/TrimGalore/archive/0.4.5.tar.gz
      -o ${TRIMGALORE_RELEASE} \t&& tar xvzf ${TRIMGALORE_RELEASE} \t&& mv TrimGalore-${TRIMGALORE_VERSION}/trim_galore
      ${DEST_DIR}/trim_galore-${TRIMGALORE_VERSION}"
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x ${DEST_DIR}/trim_galore-${TRIMGALORE_VERSION}
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${DEST_DIR}/trim_galore-${TRIMGALORE_VERSION}:$PATH
    Name: env
  - CmdLine:
    - ls -la /opt/*/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get install -y --no-install-recommends         python-minimal         python-pip         python-setuptools         python-dev     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install wheel
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install macs2
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - Env:
    - Key: BOWTIE2_URL
      Value: https://sourceforge.net/projects/bowtie-bio/files/bowtie2
    Name: env
  - Env:
    - Key: BOWTIE2_VERSION
      Value: 2.3.4.3
    Name: env
  - Env:
    - Key: BOWTIE2_RELEASE
      Value: bowtie2-${BOWTIE2_VERSION}.tar.gz
    Name: env
  - CmdLine:
    - "wget ${BOWTIE2_URL}/${BOWTIE2_VERSION}/bowtie2-${BOWTIE2_VERSION}-linux-x86_64.zip/download
      \t&& unzip download     && rm download \t&& mv bowtie2-${BOWTIE2_VERSION}-linux-x86_64
      ${DEST_DIR}/bowtie2-${BOWTIE2_VERSION}"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${DEST_DIR}/bowtie2-${BOWTIE2_VERSION}:$PATH
    Name: env
  - CmdLine:
    - apt-get update     && apt-get install -y openssh-server openssh-client rsync
      grsync
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${DEST_DIR}/UCSC-utils
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${DEST_DIR}/UCSC-utils
  - CmdLine:
    - rsync -aP rsync://hgdownload.soe.ucsc.edu/genome/admin/exe/linux.x86_64/ ./
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${DEST_DIR}/UCSC-utils:$PATH
    Name: env
  - Env:
    - Key: PATH
      Value: ${DEST_DIR}/UCSC-utils/blat:$PATH
    Name: env
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - pip install pysam==0.11.2.2
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install cython
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install edd
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install py2bit
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pyBigWig
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install deeptools
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /appscripts
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "/^assistive_technologies=/s/^/#/" /etc/java-8-openjdk/accessibility.properties
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip install matplotlib \t&& pip install scipy \t&& pip install pybedtools \t&&
      pip install pysam \t&& pip install pandas"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install python-tk -y
    Name: run
    PrependShell: true
  - Env:
    - Key: STAR_URL
      Value: https://github.com/alexdobin/STAR/archive/
    Name: env
  - Env:
    - Key: STAR_VERSION
      Value: 2.6.1d
    Name: env
  - Env:
    - Key: STAR_RELEASE
      Value: ${STAR_VERSION}.tar.gz
    Name: env
  - CmdLine:
    - mkdir -p ${DEST_DIR}/STAR-${STAR_VERSION}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - curl -SLO ${STAR_URL}/${STAR_RELEASE} && tar -xzf ${STAR_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - mv STAR-${STAR_VERSION}/ ${DEST_DIR}
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x ${DEST_DIR}/STAR-${STAR_VERSION}/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${DEST_DIR}/STAR-${STAR_VERSION}/bin/Linux_x86_64_static:$PATH
    Name: env
  - CmdLine:
    - apt-get install bedtools
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
