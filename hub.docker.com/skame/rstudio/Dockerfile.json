{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "rocker/tidyverse:latest",
      "SourceCode": "FROM rocker/tidyverse:latest",
      "Platform": "",
      "From": {
        "Image": "rocker/tidyverse:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"KAMEI Satoshi \u003cskame@nttv6.jp\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/* \u0026\u0026 apt-get update \u0026\u0026 \tDEBIAN_FRONTEND=noninteractive \u0026\u0026 export DEBIAN_FRONTEND \u0026\u0026         apt-get install -y --no-install-recommends software-properties-common supervisor wget openssh-server sudo         git-core fonts-vlgothic nkf jq \trsync gawk netcat curl libglu1-mesa-dev libx11-dev libv8-dev xorg \tlibpam-ldapd tcsh libnss-ldapd \u0026\u0026         apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026         echo session required                        pam_mkhomedir.so umask=0022 skel=/etc/skel \u003e\u003e /etc/pam.d/common-session \u0026\u0026         echo session required                        pam_mkhomedir.so umask=0022 skel=/etc/skel \u003e\u003e /etc/pam.d/common-session-noninteractive \u0026\u0026 \tsed -ir 's/# ja_JP.UTF-8 UTF-8/ja_JP.UTF-8 UTF-8/' /etc/locale.gen \u0026\u0026 locale-gen \u0026\u0026 update-locale LANG=ja_JP.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends \tlibudunits2-dev libgdal-dev \u0026\u0026         apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends libbz2-dev libpcre3-dev openjdk-8-jdk liblzma-dev \u0026\u0026 R CMD javareconf \u0026\u0026         apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "installGithub.r tidyverse/tidyverse"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install2.r --error ggvis googleVis htmlwidgets lubridate mailR pipeR readxl rlist tidyr RCurl gridExtra DT xts forecast     caret base64enc dlm KFAS lda Matrix ca cluster fpc elastic readr foreach bit64 Rcpp doParallel rio e1071 jsonlite     pbapply ROCR randomForest nloptr digest xtable reshape2 knitrBootstrap magrittr knitr plyr     d3heatmap networkD3 ggmap sitools visNetwork rkafka gsheet RJSONIO GGally outliers leaflet formattable fasttime TSclust listless     rgeolocate ggfortify"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "installGithub.r Rdatatable/data.table jimhester/knitrBootstrap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "installGithub.r rstudio/rmarkdown yihui/formatR ramnathv/rCharts ramnathv/htmlwidgets bokeh/rbokeh yihui/knitr smartinsightsfromdata/rpivotTable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "installGithub.r ropensci/plotly"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "installGithub.r briatte/ggnet \u0026\u0026     install2.r --error network sna"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "installGithub.r rstudio/flexdashboard timelyportfolio/d3treeR ricardo-bion/ggradar \u0026\u0026     install2.r --error fmsb treemap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends libpq-dev \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026     install2.r --error RPostgreSQL RMySQL RMariaDB dbplyr \u0026\u0026     installGithub.r rstats-db/DBI hadley/dtplyr prestodb/RPresto@7515927f989ecea"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install2.r pingr triebeard AsioHeaders \u0026\u0026 \tinstallGithub.r hrbrmstr/cymruservices hrbrmstr/iptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends libjq-dev \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026     install2.r jqr"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends rrdtool librrd-dev \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026     installGithub.r pldimitrov/Rrd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "installGithub.r ropensci/nodbi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "installGithub.r r-dbi/odbc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl 'https://drive.google.com/uc?export=download\u0026id=0B4y35FiV1wh7cENtOXlicTFaRUE' -Lo mecab-0.996.tar.gz \u0026\u0026     curl 'https://drive.google.com/uc?export=download\u0026id=0B4y35FiV1wh7MWVlSDBCSXZMTXM' -Lo mecab-ipadic-2.7.0-20070801.tar.gz \u0026\u0026     tar -xzf mecab-0.996.tar.gz \u0026\u0026 tar -xzf mecab-ipadic-2.7.0-20070801.tar.gz \u0026\u0026     (cd mecab-0.996 || exit; ./configure --with-charset=\"utf8\"; make all; make install); ldconfig; (cd mecab-ipadic-2.7.0-20070801; ./configure --with-charset=\"utf-8\"; make; make install) \u0026\u0026     rm -rf mecab-0.996.tar.gz* \u0026\u0026 rm -rf mecab-ipadic-2.7.0-20070801*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install2.r --repos http://rmecab.jp/R --error RMeCab"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O http://rmecab.jp/R/src/contrib/RMeCab_1.00.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R CMD INSTALL RMeCab_1.00.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install2.r wordcloud"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install2.r RSelenium"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends tk \u0026\u0026     apt-get clean \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "install2.r --error irtoys"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/nslcd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nslcd.conf-template",
            "/etc/nslcd.conf-template"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nslcd-run.sh",
            "/etc/rc.nslcd-run.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rserver.conf",
            "/etc/rstudio/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "Rprofile.site",
            "/etc/R/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "CmdLine": [
            "curl -Ls https://github.com/gliderlabs/sigil/releases |   grep -E -o '/gliderlabs/sigil/.*sigil_[0-9\\.]+_Linux_x86_64.tgz' | head -1 |   (curl -Lo sigil.tgz http://github.com/\"$(cat)\")   \u0026\u0026 tar xzf sigil.tgz -C /bin   \u0026\u0026 rm sigil.tgz \u0026\u0026 sigil -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisor/conf.d/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}