{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:1.12-dind",
      "SourceCode": "FROM docker:1.12-dind",
      "Platform": "",
      "From": {
        "Image": "docker:1.12-dind"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk --update add curl git jq rsync openssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \u0026\u0026     ALPINE_GLIBC_PACKAGE_VERSION=\"2.23-r3\" \u0026\u0026     ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026     apk add --no-cache --virtual=.build-dependencies wget ca-certificates \u0026\u0026     wget         \"https://raw.githubusercontent.com/andyshinn/alpine-pkg-glibc/master/sgerrand.rsa.pub\"         -O \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026     wget         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026     apk add --no-cache         \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026         rm \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026     /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 C.UTF-8 || true \u0026\u0026     echo \"export LANG=C.UTF-8\" \u003e /etc/profile.d/locale.sh \u0026\u0026         apk del glibc-i18n \u0026\u0026         rm \"/root/.wget-hsts\" \u0026\u0026     apk del .build-dependencies \u0026\u0026     rm         \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"         \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "curl -Ls https://github.com/progrium/entrykit/releases/ |   egrep -o '/progrium/.*entrykit_[0-9\\.]+_Linux_x86_64.tgz' | head -1 |   (curl -Lo entrykit.tgz http://github.com/`cat`)   \u0026\u0026 tar xzf entrykit.tgz -C /bin   \u0026\u0026 rm entrykit.tgz   \u0026\u0026 chmod +x /bin/entrykit   \u0026\u0026 entrykit --symlink \u0026\u0026 entrykit -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Ls https://github.com/gliderlabs/sigil/releases |   egrep -o '/gliderlabs/sigil/.*sigil_[0-9\\.]+_Linux_x86_64.tgz' | head -1 |   (curl -Lo sigil.tgz http://github.com/`cat`)   \u0026\u0026 tar xzf sigil.tgz -C /bin   \u0026\u0026 rm sigil.tgz \u0026\u0026 sigil -v"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s -L https://github.com/docker/compose/releases/latest |     egrep -o '/docker/compose/releases/download/[0-9.]*/docker-compose-Linux-x86_64' |     (curl -Lo /usr/local/bin/docker-compose http://github.com/`cat`) \u0026\u0026     chmod +x /usr/local/bin/docker-compose \u0026\u0026     /usr/local/bin/docker-compose --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dockerd-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}