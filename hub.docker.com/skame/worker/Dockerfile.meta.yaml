MetaArgs: null
Stages:
- BaseName: phusion/baseimage:0.11
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"KAMEI Satoshi / <skame@nttv6.jp>"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt update && apt upgrade -y -o Dpkg::Options::="--force-confold"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt install -y --no-install-recommends software-properties-common sudo \tgit-core
      nkf \tcurl wget         build-essential"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends language-pack-ja && export LANG=ja_JP.UTF-8
      && update-locale LANG=ja_JP.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends libpam-ldapd tcsh libnss-ldapd &&         echo
      session required                        pam_mkhomedir.so umask=0022 skel=/etc/skel
      >> /etc/pam.d/common-session &&         echo session required                        pam_mkhomedir.so
      umask=0022 skel=/etc/skel >> /etc/pam.d/common-session-noninteractive
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /etc/nslcd.conf && sed -i 's/compat/compat ldap/' /etc/nsswitch.conf && mkdir
      /etc/service/nslcd
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nslcd-run
    - /etc/service/nslcd/run
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nslcd.conf-template
    - /etc/nslcd.conf-template
  - CmdLine:
    - rm -f /etc/service/sshd/down && /etc/my_init.d/00_regen_ssh_host_keys.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/^session\s+required\s+pam_loginuid.so$/session optional pam_loginuid.so/'
      /etc/pam.d/sshd &&     mkdir -p /var/run/sshd && chmod 0755 /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "UsePAM yes" >> /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && apt-key
      fingerprint 0EBFCD88 &&     add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu     $(lsb_release
      -cs)     edge" && apt update && apt install -y --no-install-recommends docker-ce
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s -L https://github.com/docker/compose/releases/latest |     grep -E -o
      '/docker/compose/releases/download/[0-9.]*/docker-compose-Linux-x86_64' | head
      -1 |     (curl -Lo /usr/local/bin/docker-compose http://github.com/"$(cat)")
      &&     chmod +x /usr/local/bin/docker-compose &&     /usr/local/bin/docker-compose
      --version
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends openjdk-8-jdk python3-dev python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -U pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install -U setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install awscli pyasn
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends zsh tmux w3m owncloud-client-cmd rsync
      man telnet redis-tools dnsutils jq bc ash lv unzip mosh netcat
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends inetutils-ping inetutils-traceroute iproute2
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:kelleyk/emacs && apt update && apt install -y --no-install-recommends
      emacs26
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends mysql-client postgresql-client
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends ldap-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt install -y --no-install-recommends weechat
    Name: run
    PrependShell: true
  - CmdLine:
    - apt clean && rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /opt/beeline \t&& curl -SL https://archive.apache.org/dist/hadoop/core/hadoop-3.2.0/hadoop-3.2.0.tar.gz
      \t| tar -xzC /opt/beeline \t&& curl -SL https://archive.apache.org/dist/hive/hive-3.1.1/apache-hive-3.1.1-bin.tar.gz
      \t| tar -xzC /opt/beeline"
    Name: run
    PrependShell: true
  - Env:
    - Key: HADOOP_HOME
      Value: /opt/beeline/hadoop-3.2.0
    Name: env
  - Env:
    - Key: HIVE_HOME
      Value: /opt/beeline/apache-hive-3.1.1-bin
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$HIVE_HOME/bin
    Name: env
  - CmdLine:
    - curl -s -L https://prestosql.io/docs/current/installation/cli.html |     grep
      -E -o 'https://repo1.maven.org/maven2/io/prestosql/presto-cli/[0-9.]+/presto-cli-[0-9.]+-executable.jar'
      |     (curl -Lo /usr/local/bin/presto "$(cat)") &&     chmod +x /usr/local/bin/presto
      &&     /usr/local/bin/presto --version
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Ls https://github.com/progrium/entrykit/releases/ |   grep -E -o '/progrium/.*entrykit_[0-9\.]+_Linux_x86_64.tgz'
      | head -1 |   (curl -Lo entrykit.tgz http://github.com/"$(cat)")   && tar xzf
      entrykit.tgz -C /bin   && rm entrykit.tgz   && chmod +x /bin/entrykit   && entrykit
      --symlink && entrykit -v
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Ls https://github.com/gliderlabs/sigil/releases |   grep -E -o '/gliderlabs/sigil/.*sigil_[0-9\.]+_Linux_x86_64.tgz'
      | head -1 |   (curl -Lo sigil.tgz http://github.com/"$(cat)")   && tar xzf sigil.tgz
      -C /bin   && rm sigil.tgz && sigil -v
    Name: run
    PrependShell: true
  - CmdLine:
    - "add-apt-repository ppa:longsleep/golang-backports && \tapt-get update && apt-get
      install -y --no-install-recommends golang-go && \tapt-get clean && rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get |
      bash
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s -L https://storage.googleapis.com/kubernetes-release/release/stable.txt
      |     (curl -Lo /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/"$(cat)"/bin/linux/amd64/kubectl)
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lo /usr/local/bin/skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases/latest
      |\tgrep browser_download | grep linux | cut -d '\"' -f 4 | xargs curl -O -L
      && \tmv kustomize_*_linux_amd64 /usr/local/bin/kustomize"
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod a+x /usr/local/bin/kubectl /usr/local/bin/skaffold /usr/local/bin/kustomize
    Name: run
    PrependShell: true
  - CmdLine:
    - ls /etc/apt/sources.list.d
    Name: run
    PrependShell: true
  - CmdLine:
    - export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb http://packages.cloud.google.com/apt
      $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key
      add - &&     apt-get update -y && apt-get install google-cloud-sdk -y --no-install-recommends
      &&     apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://github.com/vmware-tanzu/velero/releases | grep linux-amd64 |
      head -1 |     cut -d '"' -f 2 | (curl -Ls "https://github.com/$(cat)") |     tar
      xvfzO - --wildcards '*/velero' > /usr/local/bin/velero && chmod a+x /usr/local/bin/velero
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /etc/my_init.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - adduser.sh
    - /etc/my_init.d/adduser.sh
  - CmdLine:
    - chmod +x /etc/my_init.d/adduser.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "22"
  From:
    Image: phusion/baseimage:0.11
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:0.11
