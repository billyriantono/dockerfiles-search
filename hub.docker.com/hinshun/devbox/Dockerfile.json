{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ruby:2.2.3",
      "SourceCode": "FROM ruby:2.2.3",
      "Platform": "",
      "From": {
        "Image": "ruby:2.2.3"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 DEBIAN_FRONTEND=noninteractive     apt-get install -y --no-install-recommends     apt-transport-https     locales     ssh     zsh     vim     git     tmux     less     silversearcher-ag     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/zsh /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /usr/share/zoneinfo/Canada/Eastern /etc/localtime     \u0026\u0026 echo \"en_US.UTF-8 UTF-8\" \u003e /etc/locale.gen     \u0026\u0026 /usr/sbin/locale-gen     \u0026\u0026 /usr/sbin/update-locale LANG=en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "1.8.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_COMPOSE_VERSION",
              "Value": "1.4.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fLo /usr/local/bin/docker     https://get.docker.com/builds/Linux/x86_64/docker-$DOCKER_VERSION     \u0026\u0026 chmod +x /usr/local/bin/docker     \u0026\u0026 curl -fLo /usr/local/bin/docker-compose     https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-`uname -s`-`uname -m`     \u0026\u0026 chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NVM_VERSION",
              "Value": "0.27.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "4.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_PATH",
              "Value": "$NVM_DIR/v$NODE_VERSION/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$NVM_DIR/v$NODE_VERSION/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl https://raw.githubusercontent.com/creationix/nvm/v$NVM_VERSION/install.sh | bash     \u0026\u0026 source $NVM_DIR/nvm.sh     \u0026\u0026 nvm install v$NODE_VERSION     \u0026\u0026 nvm use v$NODE_VERSION     \u0026\u0026 nvm alias default v$NODE_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source $NVM_DIR/nvm.sh     \u0026\u0026 npm install -g     jshint"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install   tmuxinator"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GO_VERSION",
              "Value": "1.5.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fL https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz     | tar -C /usr/local -xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "prezto",
            "$HOME/.zprezto"
          ]
        },
        {
          "CmdLine": [
            "chsh -s /bin/zsh   \u0026\u0026 for rc in $HOME/.zprezto/runcoms/z* ; do   ln -s \"${rc}\" \"$HOME/.$(basename $rc)\" ; done   \u0026\u0026 exec zsh \u0026\u0026 setopt EXTENDED_GLOB"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fLo $HOME/.zprezto/modules/completion/external/src/_tmuxinator   https://raw.githubusercontent.com/tmuxinator/tmuxinator/master/completion/tmuxinator.zsh   \u0026\u0026 curl -fLo $HOME/.zprezto/modules/completion/external/src/_docker   https://raw.githubusercontent.com/docker/docker/master/contrib/completion/zsh/_docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "dotfiles",
            "$HOME/.dotfiles"
          ]
        },
        {
          "CmdLine": [
            "for rc in $HOME/.dotfiles/* ; do   ln -s \"${rc}\" \"$HOME/.$(basename $rc)\" ; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fLo ~/.vim/autoload/plug.vim --create-dirs     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim     \u0026\u0026 mkdir -p ~/.vim/plugged     \u0026\u0026 vim +PlugInstall +qall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "zsh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}