MetaArgs: null
Stages:
- BaseName: selenium/standalone-chrome:3.141.59-antimony
  Commands:
  - Key: JENKINS_HOME
    Name: arg
    Value: ${JENKINS_HOME:-/home/jenkins}
  - Key: UID
    Name: arg
    Value: "2000"
  - Key: GID
    Name: arg
    Value: "2000"
  - Maintainer: Alban Andrieu "https://github.com/AlbanAndrieu"
    Name: maintainer
  - Labels:
    - Key: vendor
      Value: '"NABLA"'
    - Key: version
      Value: '"1.1"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Image used by Nabla products to build Java/Javascript and CPP this
        image is running on Ubuntu 16.04."'
    Name: label
  - Env:
    - Key: JENKINS_HOME
      Value: ${JENKINS_HOME}
    Name: env
  - Env:
    - Key: TERM
      Value: '"xterm-256color"'
    Name: env
  - Name: user
    User: "0"
  - CmdLine:
    - 'printf "\033[1;32mFROM UID:GID: ${UID}:${GID}- JENKINS_HOME: ${JENKINS_HOME}
      \033[0m\n"'
    Name: run
    PrependShell: true
  - Env:
    - Key: BUILD_PACKAGES
      Value: '"python-dev"'
    Name: env
  - CmdLine:
    - apt-get clean && apt-get -y update && apt-get install -y     -o APT::Install-Recommend=false
      -o APT::Install-Suggests=false     $BUILD_PACKAGES git bzip2 zip unzip python-yaml
      python-jinja2 python-pip openssh-server rsyslog && pip install ansible==2.6.3     &&
      apt-get install -y ocl-icd-libopencl1 ocl-icd-opencl-dev clinfo numactl libnuma1
      pciutils     xz-utils ksh wget tzdata sudo curl lsof sshpass     scons     python3
      python3-pip python3-dev python3-apt     openjdk-8-jdk maven gcc g++ make     net-tools
      iputils-ping x11-apps     && pip install zabbix-api
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash - ;    apt-get update &&
      apt-get install -y nodejs ;    npm install -g bower@1.8.4 grunt@1.0.3 grunt-cli@1.3.1
      nsp@3.2.1 webdriver-manager@12.1.0
    Name: run
    PrependShell: true
  - CmdLine:
    - 'groupadd -g ${GID} docker &&     adduser --quiet --uid ${UID} --gid ${GID}
      --home ${JENKINS_HOME} jenkins &&     echo ''ALL ALL = (ALL) NOPASSWD: ALL''
      >> /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "jenkins:jenkins1234" | chpasswd
    Name: run
    PrependShell: true
  - Env:
    - Key: TZ
      Value: '"UTC"'
    Name: env
  - CmdLine:
    - echo "${TZ}" > /etc/timezone   && dpkg-reconfigure --frontend noninteractive
      tzdata
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '*.yml'
    - playbooks
    - hosts
    - roles
    - $JENKINS_HOME/
  - CmdLine:
    - chown -R jenkins:$(id -gn jenkins) $JENKINS_HOME $JENKINS_HOME/.*
    Name: run
    PrependShell: true
  - CmdLine:
    - ansible-galaxy install -r $JENKINS_HOME/requirements.yml -p $JENKINS_HOME/roles/
      --ignore-errors  && ansible-playbook $JENKINS_HOME/jenkins-slave-docker.yml
      -i $JENKINS_HOME/hosts -c local  -e "workspace=/tmp"  -e "jenkins_jdk8_enable=true"
      -e "jdk_home=/usr/lib/jvm/java-8-oracle/"  -e "jenkins_id=${UID}" -e "docker_gid=${GID}"  -e
      "nis_enabled=false" -e "automount_enabled=false" -e "dns_enabled=false"  --skip-tags
      restart  -vvvv
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R jenkins:$(id -gn jenkins) $JENKINS_HOME
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's|session    required     pam_loginuid.so|session    optional     pam_loginuid.so|g'
      /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*
      /var/tmp/* && ifconfig | awk ''/inet addr/{print substr($2,6)}'' ## Display
      IP address (optional)'
    Name: run
    PrependShell: true
  - Name: user
    User: jenkins
  - Env:
    - Key: HOME
      Value: ${JENKINS_HOME}
    Name: env
  - CmdLine:
    - chmod -R 777 ${HOME} && mkdir ${HOME}/workspace && mkdir ${HOME}/.config &&
      mkdir ${HOME}/.local
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: selenium/standalone-chrome:3.141.59-antimony
  Name: ""
  Platform: ""
  SourceCode: FROM selenium/standalone-chrome:3.141.59-antimony
