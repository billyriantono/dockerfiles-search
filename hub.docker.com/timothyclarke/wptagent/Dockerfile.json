{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y     wget     curl     python     python-pip     xvfb     imagemagick     python-dev     zlib1g-dev     libjpeg-dev     psmisc     dbus-x11     sudo     kmod     ffmpeg     net-tools     tcpdump     traceroute     bind9utils     software-properties-common     python-software-properties"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_7.x | bash - \u0026\u0026   wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \u0026\u0026   wget -qO- https://deb.opera.com/archive.key | apt-key add - \u0026\u0026   echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository -y ppa:ubuntu-mozilla-daily/ppa \u0026\u0026   add-apt-repository -y 'deb https://deb.opera.com/opera-stable/ stable non-free' \u0026\u0026   add-apt-repository -y 'deb https://deb.opera.com/opera-beta/ stable non-free' \u0026\u0026   add-apt-repository -y 'deb https://deb.opera.com/opera-developer/ stable non-free'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -yq     google-chrome-stable     google-chrome-beta     google-chrome-unstable     firefox     firefox-trunk     opera-stable     opera-beta     opera-developer     nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g lighthouse"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install     dnspython     monotonic     pillow     psutil     requests     ujson     tornado     xvfbwrapper     marionette_driver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "wptagent.py",
            "/wptagent/wptagent.py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "internal",
            "/wptagent/internal"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ws4py",
            "/wptagent/ws4py"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/linux-headless/entrypoint.sh",
            "/wptagent/entrypoint.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/wptagent"
        },
        {
          "CmdLine": [
            "/bin/bash",
            "/wptagent/entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}