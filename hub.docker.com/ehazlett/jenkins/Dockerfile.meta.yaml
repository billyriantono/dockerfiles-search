MetaArgs: null
Stages:
- BaseName: debian:sid
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Key: DOCKER_ARCH
    Name: arg
    Value: x86_64
  - Key: DOCKER_VERSION
    Name: arg
    Value: 18.05.0-ce
  - Key: ARCH
    Name: arg
    Value: amd64
  - CmdLine:
    - apt-get update && apt-get install -y     wget     curl     openjdk-8-jre-headless     git-core     unzip     apache2-utils     mercurial     subversion     jq     build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add
      -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://pkg.jenkins-ci.org/debian binary/" > /etc/apt/sources.list.d/jenkins.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y jenkins &&     mkdir -p /var/lib/jenkins/plugins
    Name: run
    PrependShell: true
  - CmdLine:
    - (cd /var/lib/jenkins/plugins &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/cobertura.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/greenballs.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/instant-messaging.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/ircbot.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/postbuild-task.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/credentials.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/ssh-credentials.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/ssh-agent.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/git-client.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/git.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/github.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/github-api.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/scm-api.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/swarm.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/envinject.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/parameterized-trigger.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/token-macro.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/ghprb.hpi
      &&     wget --no-check-certificate http://updates.jenkins-ci.org/latest/build-name-setter.hpi)
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - config.xml
    - /var/lib/jenkins/config.xml
  - Env:
    - Key: JENKINS_HOME
      Value: /var/lib/jenkins
    Name: env
  - CmdLine:
    - wget http://s3.amazonaws.com/ec2-downloads/ec2-api-tools.zip -O /tmp/ec2tools.zip
      &&     mkdir /usr/local/aws && unzip -d /usr/local/aws /tmp/ec2tools.zip &&
      rm /tmp/ec2tools.zip &&     mv /usr/local/aws/ec2-api-tools-* /usr/local/aws/ec2
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/aws/ec2/bin
    Name: env
  - Env:
    - Key: EC2_HOME
      Value: /usr/local/aws/ec2
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-7-openjdk-amd64/jre
    Name: env
  - CmdLine:
    - wget https://storage.googleapis.com/golang/go1.10.1.linux-${ARCH}.tar.gz -O
      /tmp/go.tar.gz &&     tar -C /usr/local -xvf /tmp/go.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/usr/local/go/bin
    Name: env
  - CmdLine:
    - go get -u golang.org/x/lint/golint
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget --no-check-certificate https://download.docker.com/linux/static/edge/${DOCKER_ARCH}/docker-$DOCKER_VERSION.tgz
      -O /tmp/docker.tgz && \ttar zxf /tmp/docker.tgz --strip-components=1 -C /usr/local/bin
      && chmod +x /usr/local/bin/docker"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "8081"
  - Name: volume
    Volumes:
    - /var/lib/jenkins
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - slave.sh
    - /usr/local/bin/slave
  - CmdLine:
    - java
    - -jar
    - /usr/share/jenkins/jenkins.war
    Name: cmd
    PrependShell: false
  From:
    Image: debian:sid
  Name: ""
  Platform: ""
  SourceCode: FROM debian:sid
