MetaArgs: null
Stages:
- As: glibc-base
  BaseName: debian:stable-slim
  Commands:
  - Key: GLIBC_VERSION
    Name: arg
    Value: "2.28"
  - Key: GLIBC_PREFIX
    Name: arg
    Value: /usr/glibc
  - Env:
    - Key: GLIBC_INSTALL_PATH
      Value: /root/glibc
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y   curl build-essential gawk bison python3
      texinfo gettext   && rm -rf /var/cache/apt /var/lib/apt   &&   cd /root &&   curl
      -SL http://ftp.gnu.org/gnu/glibc/glibc-${GLIBC_VERSION}.tar.gz | tar xzf -   &&   mkdir
      -p /root/build && cd /root/build &&   ../glibc-${GLIBC_VERSION}/configure     --prefix=${GLIBC_PREFIX}     --libdir="${GLIBC_PREFIX}/lib"     --libexecdir="${GLIBC_PREFIX}/lib"     --enable-multi-arch     --enable-stack-protector=strong   &&   make
      -j`nproc` && make DESTDIR=${GLIBC_INSTALL_PATH} install &&   cd /root && rm
      -rf build glibc-${GLIBC_VERSION} &&   cd ${GLIBC_INSTALL_PATH}${GLIBC_PREFIX}
      &&   ( strip bin/* sbin/* lib/* || true )
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"/usr/local/lib\" > ${GLIBC_INSTALL_PATH}${GLIBC_PREFIX}/etc/ld.so.conf
      &&   echo \"${GLIBC_PREFIX}/lib\" >> ${GLIBC_INSTALL_PATH}${GLIBC_PREFIX}/etc/ld.so.conf
      &&   echo \"/usr/lib\" >> ${GLIBC_INSTALL_PATH}${GLIBC_PREFIX}/etc/ld.so.conf
      &&   echo \"/lib\" >> ${GLIBC_INSTALL_PATH}${GLIBC_PREFIX}/etc/ld.so.conf &&
      \    cd ${GLIBC_INSTALL_PATH}${GLIBC_PREFIX} &&   rm -rf etc/rpc var include
      share bin/* sbin/[^l]*  \tlib/*.o lib/*.a lib/audit lib/gconv lib/getconf"
    Name: run
    PrependShell: true
  From:
    Image: debian:stable-slim
  Name: glibc-base
  Platform: ""
  SourceCode: FROM debian:stable-slim as glibc-base
- As: alpine-glibx
  BaseName: alpine:3.8
  Commands:
  - Key: GLIBC_PREFIX
    Name: arg
    Value: /usr/glibc
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Chown: ""
    From: glibc-base
    Name: copy
    SourcesAndDest:
    - /root/glibc/
    - /
  - CmdLine:
    - ln -s ${GLIBC_PREFIX}/lib/ld-linux-*.so.* /lib &&   ln -s ${GLIBC_PREFIX}/etc/ld.so.cache
      /etc &&   if [ `uname -m` = "x86_64" ]; then ln -s /lib /lib64; fi &&   ${GLIBC_PREFIX}/sbin/ldconfig
    Name: run
    PrependShell: true
  From:
    Image: alpine:3.8
  Name: alpine-glibx
  Platform: ""
  SourceCode: FROM alpine:3.8 as alpine-glibx
