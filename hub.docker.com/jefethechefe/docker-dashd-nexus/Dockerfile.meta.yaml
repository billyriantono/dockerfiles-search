MetaArgs: null
Stages:
- As: berkeleydb
  BaseName: alpine
  Commands:
  - CmdLine:
    - apk --no-cache add autoconf
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add automake
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add build-base
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add libressl
    Name: run
    PrependShell: true
  - Env:
    - Key: BERKELEYDB_VERSION
      Value: db-4.8.30.NC
    Name: env
  - Env:
    - Key: BERKELEYDB_PREFIX
      Value: /opt/${BERKELEYDB_VERSION}
    Name: env
  - CmdLine:
    - wget https://download.oracle.com/berkeley-db/${BERKELEYDB_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xzf *.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - sed s/__atomic_compare_exchange/__atomic_compare_exchange_db/g -i ${BERKELEYDB_VERSION}/dbinc/atomic.h
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${BERKELEYDB_PREFIX}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /${BERKELEYDB_VERSION}/build_unix
  - CmdLine:
    - ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${BERKELEYDB_PREFIX}
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j4
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf ${BERKELEYDB_PREFIX}/docs
    Name: run
    PrependShell: true
  From:
    Image: alpine
  Name: berkeleydb
  Platform: ""
  SourceCode: FROM alpine as berkeleydb
- As: chiabls
  BaseName: alpine
  Commands:
  - CmdLine:
    - apk --no-cache add autoconf
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add automake
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add build-base
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add libressl
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add git
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add python3-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: CHIA_BLS_PREFIX
      Value: /opt/chiabls
    Name: env
  - CmdLine:
    - set -x   && git clone https://github.com/codablock/bls-signatures.git bls-signatures   &&
      cd bls-signatures   && git fetch origin   && git checkout dash   && git submodule
      update --init --recursive   && mkdir build   && cd build   && cmake -DCMAKE_INSTALL_PREFIX:PATH=${CHIA_BLS_PREFIX}     -DCMAKE_PREFIX_PATH=${CHIA_BLS_PREFIX}     -DSTLIB=ON
      -DSHLIB=OFF -DSTBIN=ON     -DCMAKE_BUILD_TYPE=DEBUG     -DDEBUG=ON     -DOPSYS=LINUX
      -DCMAKE_SYSTEM_NAME=Linux -DWSIZE=64     -DCMAKE_C_FLAGS_DEBUG="-g -O1"     ..   &&
      cmake --build . --target install --config Release -- -j6
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -la ${CHIA_BLS_PREFIX}
    Name: run
    PrependShell: true
  From:
    Image: alpine
  Name: chiabls
  Platform: ""
  SourceCode: FROM alpine as chiabls
- As: dash
  BaseName: alpine
  Commands:
  - Chown: ""
    From: berkeleydb
    Name: copy
    SourcesAndDest:
    - /opt
    - /opt
  - Chown: ""
    From: chiabls
    Name: copy
    SourcesAndDest:
    - /opt
    - /opt
  - CmdLine:
    - apk --no-cache add autoconf
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add automake
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add boost-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add build-base
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add chrpath
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add file
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add gnupg
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add libevent-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add libressl
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add libressl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add libsodium-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add libtool
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add linux-headers
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add protobuf-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add zeromq-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add gmp gmp-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: DASH_VERSION
      Value: 0.13.0.0-rc5
    Name: env
  - Env:
    - Key: DASH_PREFIX
      Value: /opt/dash-${DASH_VERSION}
    Name: env
  - Env:
    - Key: DASH_SHASUM
      Value: '"2c2bd4b91ce68a9752e6d7e8fdf37662a0767a8837d81f9f47dcf14604cf38b6  v${DASH_VERSION}.tar.gz"'
    Name: env
  - CmdLine:
    - wget https://github.com/dashpay/dash/archive/v${DASH_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "${DASH_SHASUM}" | sha256sum -c
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xzf *.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -la
    Name: run
    PrependShell: true
  - CmdLine:
    - ls -la /opt/chiabls/lib/.*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /dash-${DASH_VERSION}
  - CmdLine:
    - sed -i '/AC_PREREQ/a\AR_FLAGS=cr' src/univalue/configure.ac
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '/AX_PROG_CC_FOR_BUILD/a\AR_FLAGS=cr' src/secp256k1/configure.ac
    Name: run
    PrependShell: true
  - CmdLine:
    - 'sed -i s:sys/fcntl.h:fcntl.h: src/compat.h'
    Name: run
    PrependShell: true
  - CmdLine:
    - ./autogen.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure CFLAGS="-g -O1"   LDFLAGS="-L/opt/db-4.8.30.NC/lib/ -L/opt/chiabls/lib/"   CPPFLAGS="-I/opt/db-4.8.30.NC/include/
      -I/opt/chiabls/include/ -I/opt/chiabls/include/relic/"   CXXFLAGS="-g -O2 -Wall
      -Wextra -Wformat -Wvla -Wformat-security -Wno-unused-parameter"   --prefix=${DASH_PREFIX}   --mandir=/usr/share/man   --disable-tests   --disable-bench   --disable-ccache   --with-gui=no   --with-utils   --with-libs   --with-daemon
    Name: run
    PrependShell: true
  - CmdLine:
    - make
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - CmdLine:
    - strip ${DASH_PREFIX}/bin/dash-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - strip ${DASH_PREFIX}/bin/dash-tx
    Name: run
    PrependShell: true
  - CmdLine:
    - strip ${DASH_PREFIX}/bin/dashd
    Name: run
    PrependShell: true
  - CmdLine:
    - strip ${DASH_PREFIX}/lib/libdashconsensus.a
    Name: run
    PrependShell: true
  - CmdLine:
    - strip ${DASH_PREFIX}/lib/libdashconsensus.so.0.0.0
    Name: run
    PrependShell: true
  From:
    Image: alpine
  Name: dash
  Platform: ""
  SourceCode: FROM alpine as dash
- BaseName: alpine
  Commands:
  - Labels:
    - Key: maintainer.0
      Value: '"Jeff Hodges (@jhodges10)"'
    - Key: maintainer.1
      Value: '"Samuel Prado (@skateonrails)"'
    Name: label
  - CmdLine:
    - adduser -S dash
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add   boost   boost-program_options   curl   libevent   libressl   libzmq   su-exec
    Name: run
    PrependShell: true
  - Env:
    - Key: DASH_DATA
      Value: /home/dash/.dashcore
    Name: env
  - Env:
    - Key: DASH_VERSION
      Value: 0.13.0.0-rc5
    Name: env
  - Env:
    - Key: DASH_PREFIX
      Value: /opt/dash-${DASH_VERSION}
    Name: env
  - Env:
    - Key: PATH
      Value: ${DASH_PREFIX}/bin:$PATH
    Name: env
  - Chown: ""
    From: dash
    Name: copy
    SourcesAndDest:
    - /opt
    - /opt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - Name: volume
    Volumes:
    - /home/dash/.dashcore
  - Name: expose
    Ports:
    - "18332"
    - "19998"
    - "19999"
    - "9998"
    - "9999"
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - dashd
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
