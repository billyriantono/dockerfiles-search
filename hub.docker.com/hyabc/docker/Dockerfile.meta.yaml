MetaArgs: null
Stages:
- BaseName: fedora:25
  Commands:
  - Maintainer: '"Jos√© Carlos Nieto" <xiam@getlantern.org>'
    Name: maintainer
  - Env:
    - Key: GO_VERSION
      Value: go1.4.2
    Name: env
  - Env:
    - Key: GOROOT_BOOTSTRAP
      Value: /go1.4
    Name: env
  - Env:
    - Key: GOROOT
      Value: /go
    Name: env
  - Env:
    - Key: GOPATH
      Value: /
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GOROOT/bin
    Name: env
  - Env:
    - Key: WORKDIR
      Value: /lantern
    Name: env
  - Env:
    - Key: GO_PACKAGE_URL
      Value: https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz
    Name: env
  - CmdLine:
    - yum -y update && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y git tar gzip curl hostname pcre-devel mercurial && yum clean
      all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y gcc gcc-c++ libgcc.i686 gcc-c++.i686 pkgconfig && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - (curl -sSL $GO_PACKAGE_URL | tar -xvz -C /tmp) &&   mv /tmp/go $GOROOT_BOOTSTRAP
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $GOROOT &&   git clone https://go.googlesource.com/go $GOROOT &&   cd
      $GOROOT &&   git checkout -b go1.4 origin/release-branch.go1.4
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GOROOT/src && CGO_ENABLED=1 ./all.bash
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y glibc-devel glibc-static && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y glibc-devel.i686 glib2-static.i686 glibc-2.20-8.fc21.i686 libgcc.i686
      && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y mingw32-gcc.x86_64 && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GOROOT/src && CGO_ENABLED=1 GOOS=linux GOARCH=amd64 ./make.bash --no-clean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GOROOT/src && CGO_ENABLED=1 GOOS=linux GOARCH=386 ./make.bash --no-clean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GOROOT/src && CXX_FOR_TARGET=i686-w64-mingw32-g++ CC_FOR_TARGET=i686-w64-mingw32-gcc
      CGO_ENABLED=1 GOOS=windows GOARCH=386 ./make.bash --no-clean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GOROOT/src && GOARCH=386 ./make.bash --no-clean
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y gtk3-devel libappindicator-gtk3 libappindicator-gtk3-devel &&
      yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y pango.i686 pango-devel.i686 gtk3-devel.i686 gdk-pixbuf2-devel.i686
      cairo-gobject-devel.i686 atk-devel.i686 libappindicator-gtk3-devel.i686 libdbusmenu-devel.i686
      dbus-devel.i686 pkgconfig.i686 && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y ruby ruby-devel make && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install fpm
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y osslsigncode mingw32-nsis && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - yum install -y nodejs npm && yum clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g gulp
    Name: run
    PrependShell: true
  - Env:
    - Key: SECRETS
      Value: /secrets
    Name: env
  - CmdLine:
    - mkdir -p $WORKDIR
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $SECRETS
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $WORKDIR
  - Name: workdir
    Path: $WORKDIR
  From:
    Image: fedora:25
  Name: ""
  Platform: ""
  SourceCode: FROM fedora:25
