{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.5-apache",
      "SourceCode": "FROM php:5.5-apache",
      "Platform": "",
      "From": {
        "Image": "php:5.5-apache"
      },
      "Commands": [
        {
          "Maintainer": "Rafael CorrÃªa Gomes \u003crafaelcg_stz@hotmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_PORT",
              "Value": "9000"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "requirements=\"libpng12-dev libmcrypt-dev libmcrypt4 libcurl3-dev libfreetype6 libjpeg62-turbo libpng12-dev libfreetype6-dev libjpeg62-turbo-dev\"     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $requirements \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 docker-php-ext-install pdo     \u0026\u0026 docker-php-ext-install pdo_mysql     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 docker-php-ext-install mcrypt     \u0026\u0026 docker-php-ext-install mbstring     \u0026\u0026 requirementsToRemove=\"libpng12-dev libmcrypt-dev libcurl3-dev libpng12-dev libfreetype6-dev libjpeg62-turbo-dev\"     \u0026\u0026 apt-get purge --auto-remove -y $requirementsToRemove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "a2enmod rewrite"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e 's/\\/var\\/www\\/html/\\/var\\/www\\/htdocs/' /etc/apache2/apache2.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y  apt-utils php5-gd php5-mysql mysql-client-5.5 libxml2-dev git wget zip vim     openssh-server openssh-client"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install soap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install gcc make autoconf libc-dev pkg-config -y \t\u0026\u0026 apt-get install php-pear -y \t\u0026\u0026 pecl install oauth-1.2.3 \t\u0026\u0026 echo \"extension=oauth.so\" \u003e /usr/local/etc/php/conf.d/docker-php-ext-oauth.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir ~/.dev-alias     \u0026\u0026 wget https://github.com/rafaelstz/dev-alias/archive/master.zip -P ~/.dev-alias     \u0026\u0026 unzip -qo ~/.dev-alias/master.zip -d ~/.dev-alias     \u0026\u0026 mv ~/.dev-alias/dev-alias-master/* ~/.dev-alias     \u0026\u0026 rm -rf ~/.dev-alias/dev-alias-master     \u0026\u0026 rm ~/.dev-alias/master.zip     \u0026\u0026 echo \"source ~/.dev-alias/alias.sh\" \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/run/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'root:root' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NOTVISIBLE",
              "Value": "\"in users profile\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"export VISIBLE=now\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./xdebug/xdebug-2.2.3.tgz",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "yes | pecl install xdebug \u0026\u0026 \techo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" \u003e /usr/local/etc/php/conf.d/xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/etc/init.d/apache2 restart"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/php.ini",
            "/usr/local/etc/php/php.ini"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf/custom-xdebug.ini",
            "/usr/local/etc/php/conf.d/custom-xdebug.ini"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./magento",
            "/var/www/html"
          ]
        },
        {
          "CmdLine": [
            "apache2-foreground",
            "-DFOREGROUND"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}