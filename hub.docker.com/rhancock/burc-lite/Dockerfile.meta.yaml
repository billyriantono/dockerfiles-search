MetaArgs: null
Stages:
- BaseName: ubuntu:xenial
  Commands:
  - Maintainer: <rhancock@gmail.com>
    Name: maintainer
  - CmdLine:
    - echo "deb http://us.archive.ubuntu.com/ubuntu/ xenial universe" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get upgrade -y
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y nano curl ed file tcsh git wget emacs
      \tbuild-essential pigz unzip pkg-config s3cmd s3fs \tbzip2 unzip libxml2-dev
      libxslt-dev bc libssl-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y parallel imagemagick graphviz xvfb python2.7
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /bind/lib/cuda && \tmkdir /bind/data && mkdir /bind/data_in && mkdir
      /bind/data_out && \tmkdir /bind/freesurfer && mkdir /bind/resources && \tmkdir
      /bind/scratch && mkdir /bind/work && \tmkdir /bind/archive && mkdir /bind/scripts
      && \tmkdir -p /bind/bin/matlab && mkdir /bind/matlablicense && \tmkdir -p /bind/lib/mpich2
      && mkdir -p /bind/lib/openmpi && \tmkdir -p /bind/lib/storage && mkdir -p /bind/lib/fabric"
    Name: run
    PrependShell: true
  - Env:
    - Key: DOWNLOADS
      Value: /tmp/downloads
    Name: env
  - CmdLine:
    - mkdir $DOWNLOADS
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/local/share/matlab
    Name: run
    PrependShell: true
  - Env:
    - Key: MFILES
      Value: '"/usr/local/share/matlab"'
    Name: env
  - Name: workdir
    Path: $DOWNLOADS
  - CmdLine:
    - apt remove cmake && apt purge --auto-remove cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -L -O https://cmake.org/files/v3.11/cmake-3.11.4-Linux-x86_64.sh && \tmkdir
      /opt/cmake && \tsh cmake-3.11.4-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
      && \tln -s /opt/cmake/bin/cmake /usr/local/bin/cmake"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $DOWNLOADS
  - CmdLine:
    - "git clone https://github.com/rordenlab/dcm2niix.git &&     \tcd dcm2niix &&
      mkdir build && cd build &&         cmake -DBATCH_VERSION=ON -DUSE_OPENJPEG=ON
      .. &&         make && make install"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $DOWNLOADS
  - CmdLine:
    - "apt-get update && apt-get install -y gsl-bin netpbm r-base-core libnlopt-dev
      libjpeg62 xvfb libglu1-mesa-dev libglw1-mesa libxm4 libnlopt0 && \tcurl -O https://afni.nimh.nih.gov/pub/dist/bin/linux_ubuntu_16_64/@update.afni.binaries
      && \ttcsh @update.afni.binaries -package linux_ubuntu_16_64  \t-do_extras -bindir
      /usr/local/afni"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/afni:${PATH}
    Name: env
  - Name: workdir
    Path: $DOWNLOADS
  - CmdLine:
    - "curl -O https://repo.continuum.io/archive/Anaconda2-5.0.1-Linux-x86_64.sh &&
      \tbash Anaconda2-5.0.1-Linux-x86_64.sh -b -p /usr/local/anaconda2"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/usr/local/anaconda2/bin:${PATH}"'
    Name: env
  - CmdLine:
    - conda install --channel conda-forge -y nibabel nipype pydicom
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install git+https://github.com/moloney/dcmstack.git
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install https://github.com/nipy/heudiconv/archive/master.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install https://github.com/cbedetti/Dcm2Bids/archive/master.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/jmtyszka/bidskit.git && mv bidskit /usr/local/
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${PATH}":/usr/local/bidskit'
    Name: env
  - Name: shell
    Shell:
    - /bin/bash
    - -c
  - CmdLine:
    - apt-get update && apt-get install -y default-jre
    Name: run
    PrependShell: true
  - Env:
    - Key: MATLAB_JAVA
      Value: /usr/lib/jvm/default-java/jre/
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/default-java/jre/
    Name: env
  - Name: workdir
    Path: $DOWNLOADS
  - CmdLine:
    - "curl -O http://ric.uthscsa.edu/mango/downloads/mango_unix.zip && \tunzip mango_unix.zip
      && \tmv Mango /usr/local"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${PATH}:/usr/local/Mango
    Name: env
  - CmdLine:
    - apt-get clean -y && apt-get autoclean -y && apt-get autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf $DOWNLOADS
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /bind/scripts:$PATH
    Name: env
  - Env:
    - Key: TMPDIR
      Value: /tmp
    Name: env
  - Env:
    - Key: JOBLIB_TEMP_FOLDER
      Value: $TMPDIR
    Name: env
  - CmdLine:
    - /usr/bin/env
    - /singularity
    Name: entrypoint
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entry_init.sh
    - /singularity
  - CmdLine:
    - chmod 755 /singularity
    Name: run
    PrependShell: true
  - CmdLine:
    - "/usr/bin/env |sed  '/^HOME/d' | sed '/^HOSTNAME/d' | sed  '/^USER/d' | sed
      '/^PWD/d' > /environment && \tchmod 755 /environment"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Welcome to the BURC!\nDocumentation is available at \n*http://birc-int.psy.uconn.edu/wiki/Containers\n*https://github.com/bircibrain/containers"
      > /etc/motd
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /etc/csh.cshrc | sed -e 's/prompt.*=.*/prompt = "[%n@%m(burc-lite):%c]%#
      "/' > /tmp/tmp.cshrc && mv /tmp/tmp.cshrc /etc/csh.cshrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /etc/bash.bashrc | sed -e "s/PS1=.*/PS1='\${debian_chroot:+(\$debian_chroot)}\\\u@\\\h(burc-lite):\\\w\\\\$
      '/" > /tmp/tmp.bashrc && mv /tmp/tmp.bashrc /etc/bash.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --create-home -s /bin/bash birc
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install -y pyqt=4
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:xenial
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:xenial
