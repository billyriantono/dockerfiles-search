{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "Name": "expose",
          "Ports": [
            "22",
            "3000",
            "4403",
            "5000",
            "8000",
            "8080",
            "9000",
            "9876"
          ]
        },
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.3.9"
            },
            {
              "Key": "JAVA_VERSION",
              "Value": "8u45"
            },
            {
              "Key": "JAVA_VERSION_PREFIX",
              "Value": "1.8.0_112"
            },
            {
              "Key": "TOMCAT_HOME",
              "Value": "/home/user/tomcat8"
            },
            {
              "Key": "NODE_VERSION",
              "Value": "0.12.9"
            },
            {
              "Key": "NODE_PATH",
              "Value": "/usr/local/lib/node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install sudo openssh-server procps wget unzip mc curl subversion software-properties-common python-software-properties \u0026\u0026     mkdir /var/run/sshd \u0026\u0026     sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \u0026\u0026     echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers \u0026\u0026     useradd -u 1000 -G users,sudo -d /home/user --shell /bin/bash -m user \u0026\u0026     echo \"secret\\nsecret\" | passwd user \u0026\u0026     add-apt-repository ppa:git-core/ppa \u0026\u0026     apt-get update \u0026\u0026     sudo apt-get install git -y \u0026\u0026     apt-get clean \u0026\u0026     apt-get -y autoremove \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "user"
        },
        {
          "Labels": [
            {
              "Key": "che:server:8080:ref",
              "Value": "tomcat8"
            },
            {
              "Key": "che:server:8080:protocol",
              "Value": "http"
            },
            {
              "Key": "che:server:8000:ref",
              "Value": "tomcat8-debug"
            },
            {
              "Key": "che:server:8000:protocol",
              "Value": "http"
            },
            {
              "Key": "che:server:9876:ref",
              "Value": "codeserver"
            },
            {
              "Key": "che:server:9876:protocol",
              "Value": "http"
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/opt/jdk$JAVA_VERSION_PREFIX"
            },
            {
              "Key": "M2_HOME",
              "Value": "/home/user/apache-maven-$MAVEN_VERSION"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$JAVA_HOME/bin:$M2_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /home/user/cbuild /home/user/tomcat8 /home/user/apache-maven-$MAVEN_VERSION \u0026\u0026   wget   --no-cookies   --no-check-certificate   --header \"Cookie: oraclelicense=accept-securebackup-cookie\"   -qO-   \"http://download.oracle.com/otn-pub/java/jdk/$JAVA_VERSION-b14/jdk-$JAVA_VERSION-linux-x64.tar.gz\" | sudo tar -zx -C /opt/ \u0026\u0026   wget -qO- \"http://apache.ip-connect.vn.ua/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\" | tar -zx --strip-components=1 -C /home/user/apache-maven-$MAVEN_VERSION/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -qO- \"http://archive.apache.org/dist/tomcat/tomcat-8/v8.0.24/bin/apache-tomcat-8.0.24.tar.gz\" | tar -zx --strip-components=1 -C /home/user/tomcat8 \u0026\u0026     rm -rf /home/user/tomcat8/webapps/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo apt-get update \u0026\u0026     sudo apt-get -y install build-essential libssl-dev libkrb5-dev gcc make ruby-full rubygems \u0026\u0026     sudo gem install sass compass \u0026\u0026     sudo apt-get clean \u0026\u0026     sudo apt-get -y autoremove \u0026\u0026     sudo apt-get -y clean \u0026\u0026     sudo rm -rf /var/lib/apt/lists/* \u0026\u0026     set -ex     \u0026\u0026 for key in       9554F04D7259F04124DE6B476D5A82AC7E37093B       94AE36675C464D64BAFA68DD7434390BDBE9B9C5       0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93       FD3A5288F042B6850C66B31F09FE44734EB7990E       71DCFD284A79C3B38668286BC97EC7A07EDE3FC1       DD8F2338BAE7501E3DD5AC78C273792F7D83545D     ; do       gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";     done \u0026\u0026     cd /home/user \u0026\u0026 curl --insecure -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz\"     \u0026\u0026 curl --insecure -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     \u0026\u0026 gpg --verify SHASUMS256.txt.asc     \u0026\u0026 grep \"node-v$NODE_VERSION-linux-x64.tar.gz\\$\" SHASUMS256.txt.asc | sha256sum -c -     \u0026\u0026 sudo tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C /usr/local --strip-components=1     \u0026\u0026 sudo rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo npm install -g npm@latest"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo npm install -g angular-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export JAVA_HOME=/opt/jdk$JAVA_VERSION_PREFIX\\nexport M2_HOME=/home/user/apache-maven-$MAVEN_VERSION\\nexport TOMCAT_HOME=/home/user/tomcat8\\nexport PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH\" \u003e\u003e /home/user/.bashrc \u0026\u0026     sudo locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_GB.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/projects"
        },
        {
          "CmdLine": [
            "sudo /usr/sbin/sshd -D \u0026\u0026     tail -f /dev/null"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}