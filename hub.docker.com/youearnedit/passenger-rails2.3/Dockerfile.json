{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "youearnedit/base:latest",
      "SourceCode": "FROM youearnedit/base:latest",
      "Platform": "",
      "From": {
        "Image": "youearnedit/base:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "APP_HOME",
              "Value": "/usr/src/app/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "RUBY_VERSION",
              "Value": "2.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BUNDLER_VERSION",
              "Value": "1.15"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPM_CONFIG_LOGLEVEL",
              "Value": "info"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "8.x"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NPM_VERSION",
              "Value": "4.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YARN_VERSION",
              "Value": "0.24.6"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "mkdir -p ${APP_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown docker:docker ${APP_HOME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${APP_HOME}"
        },
        {
          "CmdLine": [
            "apt-add-repository -y ppa:brightbox/ruby-ng  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y       ruby${RUBY_VERSION}       ruby${RUBY_VERSION}-dev       tzdata  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install -i /var/lib/gems/${RUBY_VERSION}.0 bundler -v ${BUNDLER_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BUNDLE_APP_CONFIG",
              "Value": "/home/docker/.bundle"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "docker"
        },
        {
          "CmdLine": [
            "echo \"gem: --no-document\" \u003e\u003e /home/docker/.gemrc  \u0026\u0026 mkdir -p /home/docker/.gem/ruby/${RUBY_VERSION}.0/build_info              /home/docker/.gem/ruby/${RUBY_VERSION}.0/cache              /home/docker/.gem/ruby/${RUBY_VERSION}.0/doc              /home/docker/.gem/ruby/${RUBY_VERSION}.0/extensions              /home/docker/.gem/ruby/${RUBY_VERSION}.0/gems              /home/docker/.gem/ruby/${RUBY_VERSION}.0/specifications"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GEM_HOME",
              "Value": "/home/docker/.gem/ruby/${RUBY_MAJOR}.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${GEM_HOME}/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_${NODE_VERSION} | bash - \u0026\u0026 apt-get install -y nodejs  \u0026\u0026 npm install -g npm@\"${NPM_VERSION}\"  \u0026\u0026 npm cache clear"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -  \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y yarn=${YARN_VERSION}\\*  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7  \u0026\u0026 echo \"deb https://oss-binaries.phusionpassenger.com/apt/passenger xenial main\" \u003e /etc/apt/sources.list.d/passenger.list  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends nginx-extras passenger  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"docker ALL=(ALL) NOPASSWD: SETENV: /usr/sbin/nginx\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "docker"
        },
        {
          "CmdLine": [
            "passenger-config build-native-support"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src/nginx/conf.d              /usr/src/nginx/location.d              /usr/src/nginx/main.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf.erb",
            "/usr/src/nginx/nginx.conf.erb"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "main.d/*",
            "/usr/src/nginx/main.d/"
          ]
        },
        {
          "CmdLine": [
            "chown docker:docker -R /usr/src/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/nginx/access.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/src/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/usr/src/entrypoint.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "user",
          "User": "docker"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        }
      ]
    }
  ]
}