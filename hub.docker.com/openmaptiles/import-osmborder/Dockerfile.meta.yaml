MetaArgs:
- DefaultValue: latest
  Key: BASE_TAG
  ProvidedValue: null
  Value: latest
Stages:
- BaseName: openmaptiles/openmaptiles-tools:${BASE_TAG}
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"YuriAstrakhan@gmail.com"'
    Name: label
  - Key: RELEASE_VERSION
    Name: arg
    Value: '"v3.0.0-beta"'
  - Key: FALLBACK_DUMP_VERSION
    Name: arg
    Value: '"v3.0.0-beta"'
  - Env:
    - Key: PGFUTTER_VERSION
      Value: '"v1.2"'
    - Key: RELEASES_PREFIX
      Value: '"https://github.com/openmaptiles/openmaptiles-tools/releases/download/"'
    - Key: OSM_BORDERS_FILE
      Value: '"osmborder_lines.csv.gz"'
    - Key: WGET
      Value: '"wget --quiet --progress=bar:force:noscroll --show-progress"'
    - Key: IMPORT_DIR
      Value: /import
    Name: env
  - CmdLine:
    - $WGET -O /usr/local/bin/pgfutter          "https://github.com/lukasmartinelli/pgfutter/releases/download/${PGFUTTER_VERSION}/pgfutter_linux_amd64"  &&
      chmod +x /usr/local/bin/pgfutter  && mkdir -p "${IMPORT_DIR}"  && cd "${IMPORT_DIR}"  &&
      if $WGET -O "${OSM_BORDERS_FILE}" "${RELEASES_PREFIX}/${RELEASE_VERSION}/${OSM_BORDERS_FILE}";
      then         echo "Used borders file from ${RELEASE_VERSION} release";     elif
      $WGET -O "${OSM_BORDERS_FILE}" "${RELEASES_PREFIX}/${FALLBACK_DUMP_VERSION}/${OSM_BORDERS_FILE}";
      then         echo "Release ${RELEASE_VERSION} not found, used file from the
      fallback ${FALLBACK_DUMP_VERSION} release";     fi  && gzip -d "${OSM_BORDERS_FILE}"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /usr/src/app/
  - CmdLine:
    - ./import_osmborder_lines.sh
    Name: cmd
    PrependShell: false
  From:
    Image: openmaptiles/openmaptiles-tools:${BASE_TAG}
  Name: ""
  Platform: ""
  SourceCode: FROM openmaptiles/openmaptiles-tools:${BASE_TAG}
