MetaArgs: null
Stages:
- As: build
  BaseName: golang:1.10-alpine3.8
  Commands:
  - Env:
    - Key: APP_ROOT
      Value: /go/src/github.com/Growth-Hack-Studio/ascii-club-free-api-server
    Name: env
  - Name: workdir
    Path: $APP_ROOT
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - $APP_ROOT
  - CmdLine:
    - apk update &&     apk add --no-cache git &&     go get -u github.com/golang/dep/...
      &&     rm -rf /var/cache/apk/* &&     dep ensure &&     go build -o ${APP_ROOT}/api
      .
    Name: run
    PrependShell: true
  From:
    Image: golang:1.10-alpine3.8
  Name: build
  Platform: ""
  SourceCode: FROM golang:1.10-alpine3.8 as build
- BaseName: openjdk:8-jdk-alpine3.8
  Commands:
  - Env:
    - Key: DIGDAG_VERSION
      Value: 0.9.31
    Name: env
  - CmdLine:
    - apk add --no-cache curl &&     curl -o /usr/bin/digdag --create-dirs -L "https://dl.digdag.io/digdag-$DIGDAG_VERSION"
      &&     chmod +x /usr/bin/digdag &&     apk del curl &&     adduser -h /var/lib/digdag
      -g 'digdag user' -s /sbin/nologin -D digdag &&     mkdir -p /var/lib/digdag/logs/tasks
      /var/lib/digdag/logs/server &&     chown -R digdag.digdag /var/lib/digdag &&         apk
      --no-cache update &&     apk --no-cache add python py-pip py-setuptools ca-certificates
      curl groff less &&     apk --no-cache add bash jq &&     apk --no-cache add
      openrc &&     pip --no-cache-dir install awscli &&     pip install awscli &&     rm
      -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/Growth-Hack-Studio/ascii-club-free-api-server/api
    - /usr/local/bin/api
  - CmdLine:
    - /usr/local/bin/api
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8-jdk-alpine3.8
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-alpine3.8
