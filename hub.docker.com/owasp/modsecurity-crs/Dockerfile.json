{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "owasp/modsecurity:v2-ubuntu-apache",
      "SourceCode": "FROM owasp/modsecurity:v2-ubuntu-apache",
      "Platform": "",
      "From": {
        "Image": "owasp/modsecurity:v2-ubuntu-apache"
      },
      "Commands": [
        {
          "Maintainer": "Chaim Sanders chaim.sanders@gmail.com",
          "Name": "maintainer"
        },
        {
          "Key": "COMMIT",
          "Name": "arg",
          "Value": "v3.1/dev"
        },
        {
          "Key": "REPO",
          "Name": "arg",
          "Value": "SpiderLabs/owasp-modsecurity-crs"
        },
        {
          "Env": [
            {
              "Key": "PARANOIA",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y install python git ca-certificates iproute2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026   git clone https://github.com/${REPO}.git owasp-modsecurity-crs-3.1 \u0026\u0026   cd owasp-modsecurity-crs-3.1 \u0026\u0026   git checkout -qf ${COMMIT}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026   cp -R /opt/owasp-modsecurity-crs-3.1/ /etc/apache2/modsecurity.d/owasp-crs/ \u0026\u0026   mv /etc/apache2/modsecurity.d/owasp-crs/crs-setup.conf.example /etc/apache2/modsecurity.d/owasp-crs/crs-setup.conf \u0026\u0026   cd /etc/apache2/modsecurity.d \u0026\u0026   printf \"include modsecurity.d/owasp-crs/crs-setup.conf\\ninclude modsecurity.d/owasp-crs/rules/*.conf\" \u003e include.conf \u0026\u0026   sed -i -e 's/SecRuleEngine DetectionOnly/SecRuleEngine On/g' /etc/apache2/modsecurity.d/modsecurity.conf \u0026\u0026   a2enmod proxy proxy_http"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "proxy.conf",
            "/etc/apache2/modsecurity.d/proxy.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "apachectl",
            "-D",
            "FOREGROUND"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}