MetaArgs: null
Stages:
- BaseName: tomcat:8.5
  Commands:
  - Maintainer: sopra-steria
    Name: maintainer
  - CmdLine:
    - export DEBIAN_FRONTEND=noninteractive
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - dpkg-divert --local --rename --add /sbin/initctl
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - 71-apt-cacher-ng
    - /etc/apt/apt.conf.d/71-apt-cacher-ng
  - CmdLine:
    - apt-get -y update
    Name: run
    PrependShell: true
  - Env:
    - Key: GS_VERSION
      Value: 2.9.1
    Name: env
  - Env:
    - Key: GEOSERVER_DATA_DIR
      Value: /opt/geoserver/data_dir
    Name: env
  - CmdLine:
    - mkdir -p $GEOSERVER_DATA_DIR
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_VERSION
      Value: ""
    Name: env
  - Env:
    - Key: JAVA_DEBIAN_VERSION
      Value: ""
    Name: env
  - CmdLine:
    - ln -s /usr/lib/jvm/java-8-openjdk-amd64 /usr/lib/jvm/default-java
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/default-java
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - resources
    - /tmp/resources
  - Name: workdir
    Path: /tmp
  - Key: JAI_IMAGEIO
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ "$JAI_IMAGEIO" = true ]; then     wget http://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-amd64.tar.gz
      &&     wget http://download.java.net/media/jai-imageio/builds/release/1.1/jai_imageio-1_1-lib-linux-amd64.tar.gz
      &&     gunzip -c jai-1_1_3-lib-linux-amd64.tar.gz | tar xf - &&     gunzip -c
      jai_imageio-1_1-lib-linux-amd64.tar.gz | tar xf - &&     mv /tmp/jai-1_1_3/lib/*.jar
      $JAVA_HOME/jre/lib/ext/ &&     mv /tmp/jai-1_1_3/lib/*.so $JAVA_HOME/jre/lib/amd64/
      &&     mv /tmp/jai_imageio-1_1/lib/*.jar $JAVA_HOME/jre/lib/ext/ &&     mv /tmp/jai_imageio-1_1/lib/*.so
      $JAVA_HOME/jre/lib/amd64/ &&     rm /tmp/jai-1_1_3-lib-linux-amd64.tar.gz &&     rm
      -r /tmp/jai-1_1_3 &&     rm /tmp/jai_imageio-1_1-lib-linux-amd64.tar.gz &&     rm
      -r /tmp/jai_imageio-1_1;     fi
    Name: run
    PrependShell: true
  - Key: GDAL_NATIVE
    Name: arg
    Value: "false"
  - Env:
    - Key: GDAL_SKIP
      Value: '"ECW JP2ECW"'
    Name: env
  - Env:
    - Key: GDAL_DATA
      Value: $CATALINA_HOME/gdal-data
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: $JAVA_HOME/jre/lib/amd64/gdal
    Name: env
  - CmdLine:
    - if [ "$GDAL_NATIVE" = true ]; then     wget http://demo.geo-solutions.it/share/github/imageio-ext/releases/1.1.X/1.1.12/native/gdal/gdal-data.zip
      &&     wget http://demo.geo-solutions.it/share/github/imageio-ext/releases/1.1.X/1.1.12/native/gdal/linux/gdal192-Ubuntu12-gcc4.6.3-x86_64.tar.gz
      &&     unzip gdal-data.zip -d $CATALINA_HOME &&     mkdir $JAVA_HOME/jre/lib/amd64/gdal
      &&     tar -xvf gdal192-Ubuntu12-gcc4.6.3-x86_64.tar.gz -C $LD_LIBRARY_PATH;     fi
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $CATALINA_HOME
  - CmdLine:
    - if [ ! -f /tmp/resources/geoserver.zip ]; then     wget -c http://downloads.sourceforge.net/project/geoserver/GeoServer/${GS_VERSION}/geoserver-${GS_VERSION}-war.zip       -O
      /tmp/resources/geoserver.zip;     fi;     unzip /tmp/resources/geoserver.zip
      -d /tmp/geoserver     && unzip /tmp/geoserver/geoserver.war -d $CATALINA_HOME/webapps/geoserver     &&
      rm -rf $CATALINA_HOME/webapps/geoserver/data     && rm -rf /tmp/geoserver
    Name: run
    PrependShell: true
  - CmdLine:
    - if ls /tmp/resources/plugins/*.zip > /dev/null 2>&1; then       for p in /tmp/resources/plugins/*.zip;
      do         unzip $p -d /tmp/gs_plugin         && mv /tmp/gs_plugin/*.jar $CATALINA_HOME/webapps/geoserver/WEB-INF/lib/         &&
      rm -rf /tmp/gs_plugin;       done;     fi;
    Name: run
    PrependShell: true
  - CmdLine:
    - if ls /tmp/resources/overlays/* > /dev/null 2>&1; then       cp -rf /tmp/resources/overlays/*
      /;     fi;
    Name: run
    PrependShell: true
  - Key: DISABLE_GWC
    Name: arg
    Value: "false"
  - CmdLine:
    - if [ "$DISABLE_GWC" = true ]; then       rm $CATALINA_HOME/webapps/geoserver/WEB-INF/lib/*gwc*;     fi;
    Name: run
    PrependShell: true
  - Key: TOMCAT_EXTRAS
    Name: arg
    Value: "true"
  - CmdLine:
    - if [ "$TOMCAT_EXTRAS" = false ]; then     rm -rf $CATALINA_HOME/webapps/ROOT
      &&     rm -rf $CATALINA_HOME/webapps/docs &&     rm -rf $CATALINA_HOME/webapps/examples
      &&     rm -rf $CATALINA_HOME/webapps/host-manager &&     rm -rf $CATALINA_HOME/webapps/manager;   fi;
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/resources
    Name: run
    PrependShell: true
  - CmdLine:
    - rm $CATALINA_HOME/conf/context.xml
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /etc/geoserver/context.xml $CATALINA_HOME/conf/context.xml
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /resources/web.xml
    - $CATALINA_HOME/webapps/geoserver/WEB-INF
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /data_dir
    - $GEOSERVER_DATA_DIR
  - Name: expose
    Ports:
    - "8080"
  From:
    Image: tomcat:8.5
  Name: ""
  Platform: ""
  SourceCode: FROM tomcat:8.5
