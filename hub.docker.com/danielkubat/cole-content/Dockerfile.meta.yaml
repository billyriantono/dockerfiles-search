MetaArgs: null
Stages:
- BaseName: danielfct/register-go
  Commands: null
  From:
    Image: danielfct/register-go
  Name: ""
  Platform: ""
  SourceCode: FROM danielfct/register-go
- BaseName: rabbitmq:alpine
  Commands:
  - Env:
    - Key: GLIBC_REPO
      Value: https://github.com/sgerrand/alpine-pkg-glibc
    - Key: GLIBC_VERSION
      Value: 2.27-r0
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - 'set -ex &&     apk -U upgrade &&     apk add libstdc++ curl ca-certificates
      bash &&     for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION} glibc-i18n-${GLIBC_VERSION};
      do curl -sSL ${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/${pkg}.apk -o
      /tmp/${pkg}.apk; done &&     apk add --allow-untrusted /tmp/*.apk &&     rm
      -v /tmp/*.apk &&     ( /usr/glibc-compat/bin/localedef --force --inputfile POSIX
      --charmap UTF-8 C.UTF-8 || true ) &&     echo "export LANG=C.UTF-8" > /etc/profile.d/locale.sh
      &&     /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib &&     apk
      del curl glibc-i18n &&     rm -rf /tmp/* /var/cache/apk/* &&     echo ''hosts:
      files mdns4_minimal [NOTFOUND=return] dns mdns4'' >> /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /register
    - ./register
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./docker-init.sh
    - ./docker-init.sh
  - CmdLine:
    - chmod
    - +x
    - docker-init.sh
    Name: run
    PrependShell: false
  - CmdLine:
    - ./docker-init.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - 127.0.0.1:8761
    - "5672"
    - "5672"
    - 127.0.0.1
    Name: cmd
    PrependShell: false
  From:
    Image: rabbitmq:alpine
  Name: ""
  Platform: ""
  SourceCode: FROM rabbitmq:alpine
