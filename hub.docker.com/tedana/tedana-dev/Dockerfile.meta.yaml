MetaArgs: null
Stages:
- BaseName: continuumio/miniconda3
  Commands:
  - Env:
    - Key: LANG
      Value: '"en_US.UTF-8"'
    - Key: LC_ALL
      Value: '"en_US.UTF-8"'
    - Key: ND_ENTRYPOINT
      Value: '"/neurodocker/startup.sh"'
    Name: env
  - CmdLine:
    - export ND_ENTRYPOINT="/neurodocker/startup.sh"     && apt-get update -qq     &&
      apt-get install -y -q --no-install-recommends            apt-utils            bzip2            ca-certificates            curl            locales            unzip            curl            git            wget            gzip            bzip2            sed            make     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/*     && sed -i -e 's/# en_US.UTF-8
      UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen     && dpkg-reconfigure --frontend=noninteractive
      locales     && update-locale LANG="en_US.UTF-8"     && chmod 777 /opt && chmod
      a+s /opt     && mkdir -p /neurodocker     && if [ ! -f "$ND_ENTRYPOINT" ]; then          echo
      '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"     &&   echo 'set -e' >> "$ND_ENTRYPOINT"     &&   echo
      'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"     &&   echo 'if [ -n
      "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";     fi     &&
      chmod -R 777 /neurodocker && chmod a+s /neurodocker
    Name: run
    PrependShell: true
  - CmdLine:
    - /neurodocker/startup.sh
    Name: entrypoint
    PrependShell: false
  - Env:
    - Key: LANG
      Value: '"C.UTF-8"'
    - Key: LC_ALL
      Value: '"C.UTF-8"'
    Name: env
  - CmdLine:
    - git clone https://github.com/me-ica/tedana.git /tedana
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./requirements.txt
    - /tedana/requirements.txt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./dev_requirements.txt
    - /tedana/dev_requirements.txt
  - CmdLine:
    - bash -c "conda create -yq --name tedana_py36 python=3.6 pip     && source activate
      tedana_py36     && pip install -r /tedana/dev_requirements.txt     && pip install
      ipython     && rm -rf ~/.cache/pip/*     && conda clean --all"
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/conda/envs/tedana_py36/bin/ipython profile create     && sed -i 's/#c.InteractiveShellApp.extensions
      = \[\]/                  c.InteractiveShellApp.extensions = \['\''autoreload'\''\]/g'                /root/.ipython/profile_default/ipython_config.py
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tedana/dev_tools
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./dev_tools
    - /tedana/dev_tools
  - CmdLine:
    - sed -i '$isource activate tedana_py36' $ND_ENTRYPOINT
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i '$isource /tedana/dev_tools/run_tests.sh' $ND_ENTRYPOINT
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tedana
  From:
    Image: continuumio/miniconda3
  Name: ""
  Platform: ""
  SourceCode: FROM continuumio/miniconda3
