MetaArgs: null
Stages:
- BaseName: node:9-alpine
  Commands:
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Labels:
    - Key: MAINTAINER
      Value: mingalevme@gmail.com
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: org.label-schema.name
      Value: '"Google Puppeteer (screenshot) as a Dockerized HTTP-service"'
    - Key: org.label-schema.version
      Value: '"1.0.0"'
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/mingalevme/screenshoter"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.docker.cmd
      Value: '"docker run -d --restart always -p 8080:8080 --name screenshoter mingalevme/screenshoter"'
    Name: label
  - CmdLine:
    - echo @edge http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories
      &&     echo @edge http://nl.alpinelinux.org/alpine/edge/main >> /etc/apk/repositories
      &&     apk update && apk upgrade &&     apk add --no-cache         build-base         chromium@edge         nss@edge
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add vips-dev fftw-dev --update-cache --repository https://dl-3.alpinelinux.org/alpine/edge/testing/
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /app
  - CmdLine:
    - mkdir -p /var/cache/screenshoter
    Name: run
    PrependShell: true
  - Env:
    - Key: PUPPETEER_SKIP_CHROMIUM_DOWNLOAD
      Value: "true"
    Name: env
  - CmdLine:
    - addgroup -S pptruser && adduser -S -g pptruser pptruser     && mkdir -p /home/pptruser/Downloads     &&
      chown -R pptruser:pptruser /home/pptruser     && chown -R pptruser:pptruser
      /app     && chown -R pptruser:pptruser /var/cache/screenshoter
    Name: run
    PrependShell: true
  - Name: user
    User: pptruser
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package*.json
    - ./
  - Env:
    - Key: PUPPETEER_SKIP_CHROMIUM_DOWNLOAD
      Value: "true"
    Name: env
  - CmdLine:
    - npm install node-gyp && npm install --only=production
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - node
    - app.js
    - --chromium-executable-path
    - /usr/bin/chromium-browser
    Name: cmd
    PrependShell: false
  From:
    Image: node:9-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:9-alpine
