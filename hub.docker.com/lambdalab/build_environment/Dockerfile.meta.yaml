MetaArgs: null
Stages:
- BaseName: lambdalab/base
  Commands:
  - Maintainer: lambdalab
    Name: maintainer
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:git-core/ppa && add-apt-repository -y ppa:gophers/archive
      && add-apt-repository -y ppa:ondrej/php
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install -U pip setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python-dev libxml2-dev libxslt-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y ruby
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zip
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://nodejs.org/dist/v6.11.3/node-v6.11.3-linux-x64.tar.xz --no-verbose
      && tar -xf node-v6.11.3-linux-x64.tar.xz -C /opt && rm node-v6.11.3-linux-x64.tar.xz
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/opt/node-v6.11.3-linux-x64/bin:/usr/lib/go-1.8/bin
    Name: env
  - CmdLine:
    - apt-get install -y libprotobuf-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y protobuf-compiler
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y golang-1.8
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libevent-dev automake libtool flex bison pkg-config g++ libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install git -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y php7.1 php7.1-xml php7.1-mbstring
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libcups2-dev libasound2-dev libfreetype6-dev libxtst-dev
      libxrender-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential texinfo libtool bc
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://cmake.org/files/v3.8/cmake-3.8.1.tar.gz && tar -xf cmake-3.8.1.tar.gz
      && cd cmake-3.8.1 && ./bootstrap && make && make install && rm -rf cmake-3.8.1*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libiomp-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "%sudo ALL=(ALL) NOPASSWD: /usr/bin/apt-get" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - Env:
    - Key: ANDROID_HOME
      Value: /android-sdk-linux
    Name: env
  - CmdLine:
    - apt-get install -y lib32stdc++6 lib32z1
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y doxygen ascii
    Name: run
    PrependShell: true
  - Env:
    - Key: GOROOT
      Value: /usr/lib/go-1.8
    Name: env
  - CmdLine:
    - echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8"
      | tee /etc/apt/sources.list.d/bazel.list
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://bazel.build/bazel-release.pub.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y bazel
    Name: run
    PrependShell: true
  From:
    Image: lambdalab/base
  Name: ""
  Platform: ""
  SourceCode: FROM lambdalab/base
