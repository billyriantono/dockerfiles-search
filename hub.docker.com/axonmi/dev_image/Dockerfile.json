{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:17.04",
      "SourceCode": "FROM ubuntu:17.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:17.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get -y upgrade     \u0026\u0026 apt-get install -y          apt-utils software-properties-common          python-software-properties          build-essential          git curl htop man unzip vim wget          emacs          python python3.6 python3.6-dev python3-pip virtualenvwrapper          golang-1.8-go          libpng-dev pkg-config     \u0026\u0026 pip3 install flake8 flake8-mypy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "libpng12.deb",
            "/tmp/libpng12.deb"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "llvm.list",
            "/etc/apt/sources.list.d/llvm.list"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "llvm.pub.gpg",
            "/root/llvm.pub.gpg"
          ]
        },
        {
          "CmdLine": [
            "apt-add-repository ppa:webupd8team/java -y   \u0026\u0026 apt-get update   \u0026\u0026 echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections   \u0026\u0026 apt-get install -y oracle-java8-installer   \u0026\u0026 dpkg -i /tmp/libpng12.deb   \u0026\u0026 rm /tmp/libpng12.deb   \u0026\u0026 curl -LO \"https://github.com/bazelbuild/bazel/releases/download/0.7.0/bazel_0.7.0-linux-x86_64.deb\"   \u0026\u0026 dpkg -i bazel_*.deb   \u0026\u0026 rm -f bazel_*.deb   \u0026\u0026 apt-key add /root/llvm.pub.gpg   \u0026\u0026 rm -f /root/llvm.pub.gpg   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y bazel clang-5.0 clang-format-5.0 llvm-5.0 lldb-5.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CLOUDSDK_CORE_DISABLE_PROMPTS",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "apt-get update -y     \u0026\u0026 apt-get install -y jq     \u0026\u0026 curl https://sdk.cloud.google.com | bash \u0026\u0026 mv google-cloud-sdk /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gcloud components install kubectl     \u0026\u0026 gcloud components install docker-credential-gcr     \u0026\u0026 docker-credential-gcr configure-docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y docker.io     \u0026\u0026 update-rc.d docker enable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "arc_install_path",
          "Name": "arg",
          "Value": "/opt/phabricator"
        },
        {
          "Name": "workdir",
          "Path": "${arc_install_path}"
        },
        {
          "CmdLine": [
            "apt-get install -y php php-curl     \u0026\u0026 git clone https://github.com/phacility/libphutil.git     \u0026\u0026 git clone https://github.com/phacility/arcanist.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/phabricator/arcanist/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bazelrc",
            "/etc/bazel.bazelrc"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/opt"
        },
        {
          "CmdLine": [
            "wget https://nodejs.org/dist/v6.10.3/node-v6.10.3-linux-x64.tar.xz     \u0026\u0026 tar xf node-v6.10.3-linux-x64.tar.xz     \u0026\u0026 rm node-v6.10.3-linux-x64.tar.xz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/node-v6.10.3-linux-x64/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "npm install -g tslint@5.2.0 typescript@2.3.2 yarn@0.23.4 webpack@2.4.1 jshint@2.9.4 jest@20.0.3"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CC",
              "Value": "/usr/bin/clang"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CXX",
              "Value": "/usr/bin/clang++"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CPLUS_INCLUDE_PATH",
              "Value": "/usr/lib/llvm-5.0/lib/clang/5.0.1/include"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/clang clang /usr/bin/clang-5.0 100     \u0026\u0026 update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-5.0 100     \u0026\u0026 update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-5.0 100"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://www.imagemagick.org/download/ImageMagick.tar.gz     \u0026\u0026 tar -xvf ImageMagick.tar.gz     \u0026\u0026 cd ImageMagick-7.*     \u0026\u0026 ./configure     \u0026\u0026 make -j4     \u0026\u0026 make install     \u0026\u0026 ldconfig /usr/local/lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/axon"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/lib/go-1.8/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/axon"
        },
        {
          "CmdLine": [
            "mkdir src bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://storage.googleapis.com/axon-artifacts/gazelle-snapshot-20171130",
            "/axon/bin/gazelle"
          ]
        },
        {
          "CmdLine": [
            "apt-get install -y golang-glide     \u0026\u0026 go get -u github.com/golang/lint/golint     \u0026\u0026 go get -u golang.org/x/tools/cmd/goimports     \u0026\u0026 mkdir -p /axon/src/github.com/axonmi/axon     \u0026\u0026 chmod +rx /axon/bin/gazelle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/axon/src/github.com/axonmi/axon"
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}