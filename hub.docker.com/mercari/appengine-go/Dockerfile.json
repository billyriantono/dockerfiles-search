{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Mercari, Inc\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            },
            {
              "Key": "PATH",
              "Value": "/go/bin:/usr/local/go/bin:/usr/lib/google-cloud-sdk/bin:/usr/lib/google-cloud-sdk/platform/google_appengine:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "APT_MIRROR",
          "Name": "arg",
          "Value": "httpredir.debian.org"
        },
        {
          "Key": "GOLANG_VERSION",
          "Name": "arg",
          "Value": "1.9.2"
        },
        {
          "Key": "GOLANG_DOWNLOAD_SHA256",
          "Name": "arg",
          "Value": "de874549d9a8d8d8062be05808509c09a88a248e77ec14eb77453530829ac02b"
        },
        {
          "CmdLine": [
            "sed -ri \"s/(deb|httpredir).debian.org/${APT_MIRROR}/g\" /etc/apt/sources.list \u0026\u0026 \tset -eux \u0026\u0026 \tapt-get update \u0026\u0026 \tapt-get install -yqq --no-install-suggests --no-install-recommends \t\tcurl \t\tgcc \t\tgit \t\tlibc6-dev \t\tmake \t\topenjdk-7-jdk \t\topenssh-client \t\tpython-dev \t\tpython-pip \t\tunzip \u0026\u0026 \trm -rf /var/lib/apt/lists/* \u0026\u0026 \t\tpip install -U crcmod \u0026\u0026 \trm -rf $HOME/.cache/pip \u0026\u0026 \t\tcurl https://sdk.cloud.google.com | bash -s -- --disable-prompts --install-dir=/usr/lib \u0026\u0026 \tgcloud config set core/disable_usage_reporting true \u0026\u0026 \tgcloud config set component_manager/disable_update_check true \u0026\u0026 \tgcloud config set metrics/environment github_docker_image \u0026\u0026 \t\tgcloud components install \t\tapp-engine-go \t\tbeta \t\tcloud-datastore-emulator \t\temulator-reverse-proxy \t\tpubsub-emulator \u0026\u0026 \t\tchmod +x \t\t/usr/lib/google-cloud-sdk/platform/google_appengine/goapp \t\t/usr/lib/google-cloud-sdk/platform/google_appengine/godoc \t\t/usr/lib/google-cloud-sdk/platform/google_appengine/gofmt \t\t/usr/lib/google-cloud-sdk/platform/google_appengine/appcfg.py \t\t/usr/lib/google-cloud-sdk/platform/google_appengine/backends_conversion.py \t\t/usr/lib/google-cloud-sdk/platform/google_appengine/bulkload_client.py \t\t/usr/lib/google-cloud-sdk/platform/google_appengine/bulkloader.py \t\t/usr/lib/google-cloud-sdk/platform/google_appengine/download_appstats.py \t\t/usr/lib/google-cloud-sdk/platform/google_appengine/endpointscfg.py \u0026\u0026 \t\tsed -i \"s|goroots.GOROOTS\\['go1'\\])|goroots.GOROOTS\\['go1.9'\\])|g\" $(which goapp) \u0026\u0026 \t\tcurl -o go.tgz -sSL \"https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz\" \u0026\u0026 \techo \"${GOLANG_DOWNLOAD_SHA256} *go.tgz\" | sha256sum -c - \u0026\u0026 \ttar -C /usr/local -xzf go.tgz \u0026\u0026 \trm go.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/.config"
          ]
        }
      ]
    }
  ]
}