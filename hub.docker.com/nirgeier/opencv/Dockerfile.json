{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "0"
        },
        {
          "Name": "expose",
          "Ports": [
            "5901"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6080"
          ]
        },
        {
          "CmdLine": [
            "sed -i 's#http://archive.ubuntu.com/#http://il.archive.ubuntu.com/#' /etc/apt/sources.list;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's#http://security.ubuntu.com/#http://il.archive.ubuntu.com/#' /etc/apt/sources.list;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Jerusalem"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt autoremove -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y xfce4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y --no-install-recommends xfce4-goodies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y novnc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y websockify"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y python-numpy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y tightvncserver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y net-tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y terminator"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y cmake"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y gfortran"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libatlas-base-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libavcodec-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libavformat-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libgtk-3-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libjpeg-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libpng-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libpq-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libswscale-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libtbb-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libtbb2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libtiff-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libv4l-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libx264-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y libxvidcore-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y net-tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y pkg-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y synaptic"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y terminator"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y tightvncserver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y unzip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y xfonts-base"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y yasm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y vlc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y vim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y python3.7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y python3.7-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y python-pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "CmdLine": [
            "echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" \u003e /etc/apt/sources.list.d/google-chrome.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://dl.google.com/linux/linux_signing_key.pub"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key add linux_signing_key.pub"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y google-chrome-stable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install numpy virtualenv virtualenvwrapper   \u0026\u0026 rm -rf ~/get-pip.py ~/.cache/pip   \u0026\u0026 dpkg-reconfigure dash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt autoremove -y   \u0026\u0026 apt update   \u0026\u0026 apt upgrade -y   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt install -y curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo sed -i 's/geteuid/getppid/' /usr/bin/vlc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir $HOME/.vnc/   \u0026\u0026 echo \"1\" | vncpasswd -f \u003e $HOME/.vnc/passwd   \u0026\u0026 touch $HOME/.Xauthority   \u0026\u0026 chmod 600 $HOME/.vnc/passwd $HOME/.Xauthority   \u0026\u0026 echo \"#!/bin/bash\" \u003e $HOME/.vnc/xstartup   \u0026\u0026 echo \"xrdb $HOME/.Xresources\" \u003e\u003e $HOME/.vnc/xstartup   \u0026\u0026 echo \"autocutsel -fork\" \u003e\u003e $HOME/.vnc/xstartup   \u0026\u0026 echo \"startxfce4 \u0026\" \u003e\u003e $HOME/.vnc/xstartup   \u0026\u0026 chmod +x $HOME/.vnc/xstartup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $HOME/novnc/utils/websockify   \u0026\u0026 wget -qO- https://github.com/novnc/noVNC/archive/v1.0.0.tar.gz | tar xz --strip 1 -C $HOME/novnc   \u0026\u0026 wget -qO- https://github.com/novnc/websockify/archive/v0.6.1.tar.gz | tar xz --strip 1 -C $HOME/novnc/utils/websockify   \u0026\u0026 chmod +x -v $HOME/novnc/utils/*.sh   \u0026\u0026 ln -s $HOME/novnc/vnc_lite.html $HOME/novnc/index.html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"#!/bin/bash\" \u003e\u003e ~/.firstRun   \u0026\u0026 echo \"if [ -z \\$VNC_FIRST_RUN ] ;\" \u003e\u003e ~/.firstRun   \u0026\u0026 echo \"  then \" \u003e\u003e ~/.firstRun   \u0026\u0026 echo \"    export USER=root\" \u003e\u003e ~/.firstRun   \u0026\u0026 echo \"    export VNC_FIRST_RUN=1 \" \u003e\u003e ~/.firstRun   \u0026\u0026 echo \"    vncserver -geometry 1900x1080 -depth 24 \u0026  \" \u003e\u003e ~/.firstRun   \u0026\u0026 echo \"    $HOME/novnc/utils/launch.sh --vnc localhost:5901 \u0026 \" \u003e\u003e ~/.firstRun   \u0026\u0026 echo \"    vlc --no-qt-privacy-ask --reset-config \u0026 \" \u003e\u003e ~/.firstRun   \u0026\u0026 echo \"fi\" \u003e\u003e ~/.firstRun   \u0026\u0026 echo \"source ~/.firstRun\" \u003e\u003e ~/.bashrc   \u0026\u0026 echo \"sed -i 's/#vout=/vout=xcb_x11/' ~/.config/vlc/vlcrc \" \u003e\u003e ~/.bashrc   \u0026\u0026 chmod +x ~/.firstRun"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root/Desktop"
        },
        {
          "CmdLine": [
            "curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor \u003e microsoft.gpg   \u0026\u0026 install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/   \u0026\u0026 sh -c 'echo \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\" \u003e /etc/apt/sources.list.d/vscode.list'   \u0026\u0026 apt install -y apt-transport-https   \u0026\u0026 apt update   \u0026\u0026 apt install -y code   \u0026\u0026 rm microsoft.gpg   \u0026\u0026 mkdir ~/lib   \u0026\u0026 cp /usr/lib/x86_64-linux-gnu/libxcb.so.1 ~/lib   \u0026\u0026 sed -i 's/BIG-REQUESTS/_IG-REQUESTS/' ~/lib/libxcb.so.1   \u0026\u0026 export LD_LIBRARY_PATH=$HOME/lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ~/Desktop   \u0026\u0026 echo \"#!/usr/bin/env xdg-open\" \u003e\u003e ~/Desktop/chrome.desktop   \u0026\u0026 echo \"[Desktop Entry]\" \u003e\u003e ~/Desktop/chrome.desktop   \u0026\u0026 echo \"Version=1.0\" \u003e\u003e ~/Desktop/chrome.desktop   \u0026\u0026 echo \"Type=Application\" \u003e\u003e ~/Desktop/chrome.desktop   \u0026\u0026 echo \"Terminal=false\" \u003e\u003e ~/Desktop/chrome.desktop   \u0026\u0026 echo \"Exec=/usr/bin/google-chrome --no-sandbox\" \u003e\u003e ~/Desktop/chrome.desktop   \u0026\u0026 echo \"Name=Chrome\" \u003e\u003e ~/Desktop/chrome.desktop   \u0026\u0026 echo \"Comment=Chrome\" \u003e\u003e ~/Desktop/chrome.desktop   \u0026\u0026 echo \"Icon=/usr/share/icons/hicolor/48x48/apps/google-chrome.png\" \u003e\u003e ~/Desktop/chrome.desktop   \u0026\u0026 chmod +x ~/Desktop/chrome.desktop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ~/Desktop   \u0026\u0026 echo \"#!/usr/bin/env xdg-open\" \u003e\u003e ~/Desktop/vlc.desktop   \u0026\u0026 echo \"[Desktop Entry]\" \u003e\u003e ~/Desktop/vlc.desktop   \u0026\u0026 echo \"Version=1.0\" \u003e\u003e ~/Desktop/vlc.desktop   \u0026\u0026 echo \"Type=Application\" \u003e\u003e ~/Desktop/vlc.desktop   \u0026\u0026 echo \"Terminal=false\" \u003e\u003e ~/Desktop/vlc.desktop   \u0026\u0026 echo \"Exec=/usr/bin/vlc --no-qt-privacy-ask\" \u003e\u003e ~/Desktop/vlc.desktop   \u0026\u0026 echo \"Name=vlc\" \u003e\u003e ~/Desktop/vlc.desktop   \u0026\u0026 echo \"Comment=VLC\" \u003e\u003e ~/Desktop/vlc.desktop   \u0026\u0026 echo \"Icon=/usr/share/icons/hicolor/48x48/apps/vlc.png\" \u003e\u003e ~/Desktop/vlc.desktop   \u0026\u0026 chmod +x ~/Desktop/vlc.desktop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ~/Desktop   mkdir -p ~/Desktop/Projects/.vscode   \u0026\u0026 echo \"#!/usr/bin/env xdg-open\" \u003e\u003e ~/Desktop/VSCode.desktop   \u0026\u0026 echo \"[Desktop Entry]\" \u003e\u003e ~/Desktop/VSCode.desktop   \u0026\u0026 echo \"Version=1.0\" \u003e\u003e ~/Desktop/VSCode.desktop   \u0026\u0026 echo \"Type=Application\" \u003e\u003e ~/Desktop/VSCode.desktop   \u0026\u0026 echo \"Terminal=false\" \u003e\u003e ~/Desktop/VSCode.desktop   \u0026\u0026 echo \"Exec=env LD_LIBRARY_PATH=$HOME/lib /usr/bin/code --user-data-dir ./Projects/.vscode\" \u003e\u003e ~/Desktop/VSCode.desktop   \u0026\u0026 echo \"Name=VSCode\" \u003e\u003e ~/Desktop/VSCode.desktop   \u0026\u0026 echo \"Comment=VSCode\" \u003e\u003e ~/Desktop/VSCode.desktop   \u0026\u0026 echo \"Icon=/usr/share/pixmaps/com.visualstudio.code.png\" \u003e\u003e ~/Desktop/VSCode.desktop   \u0026\u0026 chmod +x ~/Desktop/VSCode.desktop"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O people-counting-opencv.zip http://t.dripemail2.com/c/eyJhY2NvdW50X2lkIjoiNDc2ODQyOSIsImRlbGl2ZXJ5X2lkIjoiNjg2MzY0MDM0OSIsInVybCI6Imh0dHA6Ly9weWltZy5jby96c2Y4Yj9fX3M9b2RmenRkdWttcWd1cHF6enFjdGIifQ   \u0026\u0026 unzip people-counting-opencv.zip -d ~/Desktop/Projects"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "shell",
          "Shell": [
            "/bin/bash",
            "-c"
          ]
        }
      ]
    }
  ]
}