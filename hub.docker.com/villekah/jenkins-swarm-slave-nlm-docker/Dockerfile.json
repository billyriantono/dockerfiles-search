{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:8",
      "SourceCode": "FROM java:8",
      "Platform": "",
      "From": {
        "Image": "java:8"
      },
      "Commands": [
        {
          "Maintainer": "Petri Sirkkala \u003csirpete@iki.fi\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBCONF_NONINTERACTIVE_SEEN",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get -y install     apt-transport-https     build-essential     git     locales     lsb-release     maven     rsync     software-properties-common     sudo     graphviz     jq     python-pip \u0026\u0026   update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository     \"deb [arch=amd64] https://download.docker.com/linux/debian     $(lsb_release -cs)     stable\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y docker-ce"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-Linux-x86_64 -o /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install awscli --upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest \u0026\u0026   chmod +x /usr/local/bin/ecs-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SWARM_VERSION",
              "Value": "3.14"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/jenkins-slave"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -c \"Jenkins Slave user\" -d $HOME -m jenkins-slave \u0026\u0026   usermod -a -G sudo,docker jenkins-slave \u0026\u0026   echo \"jenkins-slave ALL=(ALL) NOPASSWD:ALL\" \u003e/etc/sudoers.d/jenkins-slave \u0026\u0026   curl --create-dirs -sSLo /usr/share/jenkins/swarm-client-$JENKINS_SWARM_VERSION.jar     https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/$JENKINS_SWARM_VERSION/swarm-client-$JENKINS_SWARM_VERSION.jar \u0026\u0026   chmod 755 /usr/share/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"LANG=en_US.UTF-8\" \u003e /etc/default/locale \u0026\u0026   echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026   locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_OPTS",
              "Value": "-Duser.country=US -Duser.language=en"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -sf /usr/share/zoneinfo/Europe/Helsinki /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Helsinki"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins-slave.sh",
            "/usr/local/bin/jenkins-slave.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 777 /usr/local/bin/jenkins-slave.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/jenkins-slave"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/jenkins-slave"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "/usr/local/bin/jenkins-slave.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}