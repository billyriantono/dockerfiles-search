{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "saboyutaka \"saboyutaka\u003cyutaka.paradigm.shift@gmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026 apt-get -y install     sudo     openssh-server     git     curl     rake     ruby2.0 ruby2.0-dev     bison     libcurl4-openssl-dev     libhiredis-dev     libmarkdown2-dev     libcap-dev     libcgroup-dev     make     libpcre3 libpcre3-dev     libmysqlclient-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/src/ \u0026\u0026 git clone -b v2.1.2 https://github.com/matsumotory/ngx_mruby.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NGINX_CONFIG_OPT_ENV",
              "Value": "--with-http_stub_status_module       --with-http_ssl_module --prefix=/usr/local/nginx       --with-http_realip_module       --with-http_addition_module       --with-http_sub_module       --with-http_gunzip_module       --with-http_gzip_static_module       --with-http_random_index_module       --with-http_secure_link_module"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /usr/local/src/ngx_mruby \u0026\u0026 sh build.sh \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "Expression": "ADD docker/hook /usr/local/nginx/hook",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD docker/conf /usr/local/nginx/conf",
          "Name": "onbuild"
        },
        {
          "Expression": "ADD docker/conf/nginx.conf /usr/local/nginx/conf/nginx.conf",
          "Name": "onbuild"
        },
        {
          "CmdLine": [
            "/usr/local/nginx/sbin/nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}