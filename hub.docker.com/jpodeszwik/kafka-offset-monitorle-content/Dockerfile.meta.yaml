MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: RUBY_VERSION
      Value: '"2.6.4"'
    - Key: PYTHON_VERSION
      Value: '"3.7.4"'
    - Key: PHP_VERSION
      Value: 7.3.9
    - Key: JAVA_VERSION
      Value: "11"
    - Key: NODE_VERSION
      Value: '"10.16.3"'
    - Key: NODE_8_VERSION
      Value: '"8.16.0"'
    - Key: GOLANG_VERSION
      Value: '"1.13"'
    - Key: GOLANG_12_VERSION
      Value: '"1.12.9"'
    - Key: DOTNET_SDK_VERSION
      Value: '"2.2.402"'
    - Key: DOCKER_VERSION
      Value: '"18.09.6"'
    - Key: DOCKER_COMPOSE_VERSION
      Value: '"1.24.0"'
    Name: env
  - Key: CHINA_REGION
    Name: arg
    Value: null
  - Env:
    - Key: DOCKER_BUCKET
      Value: '"download.docker.com"'
    - Key: DOCKER_CHANNEL
      Value: '"stable"'
    - Key: DOCKER_SHA256
      Value: '"1f3f6774117765279fce64ee7f76abbb5f260264548cf80631d68fb2d795bb09"'
    - Key: DIND_COMMIT
      Value: '"3b5fac462d21ca164b3778647420016315289034"'
    - Key: GITVERSION_VERSION
      Value: '"4.0.0"'
    - Key: DEBIAN_FRONTEND
      Value: '"noninteractive"'
    - Key: SRC_DIR
      Value: '"/usr/src"'
    Name: env
  - CmdLine:
    - 'set -ex     && echo ''Acquire::CompressionTypes::Order:: "gz";'' > /etc/apt/apt.conf.d/99use-gzip-compression     &&
      apt-get update     && apt install -y apt-transport-https gnupg ca-certificates     &&
      apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF     &&
      echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main"
      | tee /etc/apt/sources.list.d/mono-official-stable.list     && apt-get update     &&
      apt-get install software-properties-common -y --no-install-recommends     &&
      apt-add-repository -y ppa:git-core/ppa     && apt-get update     && apt-get
      install git=1:2.* -y --no-install-recommends     && git version     && apt-get
      install -y --no-install-recommends openssh-client     && mkdir ~/.ssh     &&
      touch ~/.ssh/known_hosts     && ssh-keyscan -t rsa,dsa -H github.com >> ~/.ssh/known_hosts     &&
      ssh-keyscan -t rsa,dsa -H bitbucket.org >> ~/.ssh/known_hosts     && chmod 600
      ~/.ssh/known_hosts     && apt-get install -y --no-install-recommends        wget
      python3 python3-dev python3-pip python3-setuptools fakeroot jq        netbase
      dirmngr bzr mercurial procps        tar gzip zip autoconf automake        bzip2
      file g++ gcc imagemagick        libbz2-dev libc6-dev libcurl4-openssl-dev libdb-dev        libevent-dev
      libffi-dev libgeoip-dev libglib2.0-dev        libjpeg-dev libkrb5-dev liblzma-dev        libmagickcore-dev
      libmagickwand-dev libmysqlclient-dev        libncurses5-dev libpq-dev libreadline-dev        libsqlite3-dev
      libssl-dev libtool libwebp-dev        libxml2-dev libxslt1-dev libyaml-dev make        patch
      xz-utils zlib1g-dev unzip curl        e2fsprogs iptables xfsprogs        mono-devel
      less groff liberror-perl        asciidoc build-essential bzr cvs cvsps docbook-xml
      docbook-xsl dpkg-dev        libdbd-sqlite3-perl libdbi-perl libdpkg-perl libhttp-date-perl        libio-pty-perl
      libserf-1-1 libsvn-perl libsvn1 libtcl8.6 libtimedate-perl        libxml2-utils
      libyaml-perl python-bzrlib python-configobj        sgml-base sgml-data subversion
      tcl tcl8.6 xml-core xmlto xsltproc        tk gettext gettext-base libapr1 libaprutil1
      xvfb expect parallel        locales rsync     && rm -rf /var/lib/apt/lists/*     &&
      apt-get clean'
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && wget "https://github.com/GitTools/GitVersion/releases/download/v${GITVERSION_VERSION}/GitVersion-bin-net40-v${GITVERSION_VERSION}.zip"
      -O /tmp/GitVersion_${GITVERSION_VERSION}.zip     && mkdir -p /usr/local/GitVersion_${GITVERSION_VERSION}     &&
      unzip /tmp/GitVersion_${GITVERSION_VERSION}.zip -d /usr/local/GitVersion_${GITVERSION_VERSION}     &&
      rm /tmp/GitVersion_${GITVERSION_VERSION}.zip     && echo "mono /usr/local/GitVersion_${GITVERSION_VERSION}/GitVersion.exe
      \$@" >> /usr/local/bin/gitversion     && chmod +x /usr/local/bin/gitversion
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && curl -fSL "https://${DOCKER_BUCKET}/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz"
      -o docker.tgz     && echo "${DOCKER_SHA256} *docker.tgz" | sha256sum -c -     &&
      tar --extract --file docker.tgz --strip-components 1  --directory /usr/local/bin/     &&
      rm docker.tgz     && docker -v     && addgroup dockremap     && useradd -g dockremap
      dockremap     && echo 'dockremap:165536:65536' >> /etc/subuid     && echo 'dockremap:165536:65536'
      >> /etc/subgid     && wget "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind"
      -O /usr/local/bin/dind     && curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64
      > /usr/local/bin/docker-compose     && chmod +x /usr/local/bin/dind /usr/local/bin/docker-compose     &&
      docker-compose version
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS -o /usr/local/bin/aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/aws-iam-authenticator     &&
      curl -sS -o /usr/local/bin/kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/kubectl     &&
      curl -sS -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest     &&
      chmod +x /usr/local/bin/kubectl /usr/local/bin/aws-iam-authenticator /usr/local/bin/ecs-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && pip3 install awscli boto3
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ssh_config
    - /root/.ssh/config
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - runtimes.yml
    - /codebuild/image/config/runtimes.yml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - dockerd-entrypoint.sh
    - /usr/local/bin/
  - Env:
    - Key: RBENV_SRC_DIR
      Value: '"/usr/local/rbenv"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"/root/.rbenv/shims:$RBENV_SRC_DIR/bin:$RBENV_SRC_DIR/shims:$PATH"'
    - Key: RUBY_BUILD_SRC_DIR
      Value: '"$RBENV_SRC_DIR/plugins/ruby-build"'
    Name: env
  - CmdLine:
    - set -ex     && git clone https://github.com/rbenv/rbenv.git $RBENV_SRC_DIR     &&
      mkdir -p $RBENV_SRC_DIR/plugins     && git clone https://github.com/rbenv/ruby-build.git
      $RUBY_BUILD_SRC_DIR     && sh $RUBY_BUILD_SRC_DIR/install.sh     && rbenv install
      $RUBY_VERSION && rbenv global $RUBY_VERSION
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/usr/local/bin:$PATH"'
    - Key: GPG_KEY
      Value: '"0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D"'
    - Key: PYTHON_PIP_VERSION
      Value: '"19.1.1"'
    - Key: LC_ALL
      Value: C.UTF-8
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - 'apt-get update && apt-get install -y --no-install-recommends         tcl-dev
      tk-dev     && rm -rf /var/lib/apt/lists/*     && wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"
      &&     wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"     &&
      export GNUPGHOME="$(mktemp -d)"     && (gpg --keyserver hkp://p80.pool.sks-keyservers.net:80
      --recv-keys "$GPG_KEY"         || gpg --keyserver hkp://keyserver.ubuntu.com:80
      --recv-keys "$GPG_KEY"         || gpg --keyserver pgp.mit.edu --recv-keys "$GPG_KEY")     &&
      gpg --batch --verify python.tar.xz.asc python.tar.xz     && rm -rf "$GNUPGHOME"
      python.tar.xz.asc     && mkdir -p /usr/src/python     && tar -xJC /usr/src/python
      --strip-components=1 -f python.tar.xz     && rm python.tar.xz         && cd
      /usr/src/python     && ./configure         --enable-loadable-sqlite-extensions         --enable-shared     &&
      make -j$(nproc)     && make install     && ldconfig     && if [ ! -e /usr/local/bin/pip3
      ]; then :         && wget -O /tmp/get-pip.py ''https://bootstrap.pypa.io/get-pip.py''         &&
      python3 /tmp/get-pip.py "pip==$PYTHON_PIP_VERSION"         && rm /tmp/get-pip.py     ;
      fi     && pip3 install --no-cache-dir --upgrade --force-reinstall "pip==$PYTHON_PIP_VERSION"         &&
      pip install pipenv virtualenv --no-cache-dir         && pip3 install --no-cache-dir
      --upgrade setuptools wheel     && [ "$(pip list |tac|tac| awk -F ''[ ()]+''
      ''$1 == "pip" { print $2; exit }'')" = "$PYTHON_PIP_VERSION" ]         && find
      /usr/local -depth         \(             \( -type d -a -name test -o -name tests
      \)             -o             \( -type f -a -name ''*.pyc'' -o -name ''*.pyo''
      \)         \) -exec rm -rf ''{}'' +     && apt-get purge -y --auto-remove tcl-dev
      tk-dev     && rm -rf /usr/src/python ~/.cache     && cd /usr/local/bin     &&
      { [ -e easy_install ] || ln -s easy_install-* easy_install; }     && ln -s idle3
      idle     && ln -s pydoc3 pydoc     && ln -s python3 python     && ln -s python3-config
      python-config         && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*'
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEYS
      Value: CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D
    Name: env
  - Env:
    - Key: PHP_DOWNLOAD_SHA
      Value: '"4007f24a39822bef2805b75c625551d30be9eeed329d52eb0838fa5c1b91c1fd"'
    - Key: PHPPATH
      Value: '"/php"'
    - Key: PHP_INI_DIR
      Value: '"/usr/local/etc/php"'
    - Key: PHP_CFLAGS
      Value: '"-fstack-protector -fpic -fpie -O2"'
    - Key: PHP_LDFLAGS
      Value: '"-Wl,-O1 -Wl,--hash-style=both -pie"'
    Name: env
  - Env:
    - Key: PHP_SRC_DIR
      Value: '"$SRC_DIR/php"'
    - Key: PHP_CPPFLAGS
      Value: '"$PHP_CFLAGS"'
    - Key: PHP_URL
      Value: '"https://secure.php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror"'
    - Key: PHP_ASC_URL
      Value: '"https://secure.php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror"'
    Name: env
  - CmdLine:
    - 'set -xe;      mkdir -p $SRC_DIR;      cd $SRC_DIR;      wget -O php.tar.xz
      "$PHP_URL";      echo "$PHP_DOWNLOAD_SHA *php.tar.xz" | sha256sum -c -;      wget
      -O php.tar.xz.asc "$PHP_ASC_URL";      export GNUPGHOME="$(mktemp -d)";      for
      key in $GPG_KEYS; do          ( gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80
      --recv-keys "$key"            || gpg --keyserver hkp://keyserver.ubuntu.com:80
      --recv-keys "$key"            || gpg --keyserver pgp.mit.edu --recv-keys "$key"
      );      done;      gpg --batch --verify php.tar.xz.asc php.tar.xz;      rm -rf
      "$GNUPGHOME";      set -eux;      savedAptMark="$(apt-mark showmanual)";      apt-get
      update;      apt-get install -y --no-install-recommends libedit-dev dpkg-dev
      libargon2-0-dev;      rm -rf /var/lib/apt/lists/*;      apt-get clean;      export          CFLAGS="$PHP_CFLAGS"          CPPFLAGS="$PHP_CPPFLAGS"          LDFLAGS="$PHP_LDFLAGS"      ;      mkdir
      -p $PHP_SRC_DIR;      tar -Jxf $SRC_DIR/php.tar.xz -C $PHP_SRC_DIR --strip-components=1;      cd
      $PHP_SRC_DIR;      gnuArch="$(dpkg-architecture -qDEB_BUILD_GNU_TYPE)";      debMultiarch="$(dpkg-architecture
      -qDEB_BUILD_MULTIARCH)";      if [ ! -d /usr/include/curl ]; then          ln
      -sT "/usr/include/$debMultiarch/curl" /usr/local/include/curl;      fi;      ./configure          --build="$gnuArch"          --with-config-file-path="$PHP_INI_DIR"          --with-config-file-scan-dir="$PHP_INI_DIR/conf.d"          --disable-cgi          --enable-ftp          --enable-mbstring          --enable-mysqlnd          --enable-sockets          --enable-pcntl          --with-password-argon2          --with-curl          --with-pdo-pgsql          --with-pdo-mysql          --with-libedit          --with-openssl          --with-zlib      $(test
      "$gnuArch" = ''s390x-linux-gnu'' && echo ''--without-pcre-jit'')          --with-libdir="lib/$debMultiarch"      ${PHP_EXTRA_CONFIGURE_ARGS:-}      ;      make
      -j "$(nproc)";      make install;      find /usr/local/bin /usr/local/sbin -type
      f -executable -exec strip --strip-all ''{}'' + || true;      make clean;      cd
      /;      rm -rf $PHP_SRC_DIR;      rm $SRC_DIR/php.tar.xz;      apt-mark auto
      ''.*'' > /dev/null;      [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;      find
      /usr/local -type f -executable -exec ldd ''{}'' '';''          | awk ''/=>/
      { print $(NF-1) }''          | sort -u          | xargs -r dpkg-query --search          |
      cut -d: -f1          | sort -u          | xargs -r apt-mark manual      ;      apt-get
      purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;      php
      --version;      pecl update-channels;      rm -rf /tmp/pear ~/.pearrc;      mkdir
      "$PHP_INI_DIR";      mkdir "$PHP_INI_DIR/conf.d";      touch "$PHP_INI_DIR/conf.d/memory.ini"      &&
      echo "memory_limit = 1G;" >> "$PHP_INI_DIR/conf.d/memory.ini";'
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$PHPPATH/bin:/usr/local/php/bin:$PATH"'
    Name: env
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
    Name: run
    PrependShell: true
  - Env:
    - Key: N_SRC_DIR
      Value: '"$SRC_DIR/n"'
    Name: env
  - CmdLine:
    - git clone https://github.com/tj/n $N_SRC_DIR      && cd $N_SRC_DIR && make install      &&
      n $NODE_8_VERSION && npm install --save-dev -g grunt && npm install --save-dev
      -g grunt-cli && npm install --save-dev -g webpack      && n $NODE_VERSION &&
      npm install --save-dev -g grunt && npm install --save-dev -g grunt-cli && npm
      install --save-dev -g webpack      && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg
      | apt-key add -      && echo "deb https://dl.yarnpkg.com/debian/ stable main"
      | tee /etc/apt/sources.list.d/yarn.list      && apt-get update && apt-get install
      -y --no-install-recommends yarn      && cd / && rm -rf $N_SRC_DIR;
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tools
    - /opt/tools
  - Env:
    - Key: JAVA_11_HOME
      Value: '"/opt/jvm/openjdk-11"'
    - Key: JDK_11_HOME
      Value: '"/opt/jvm/openjdk-11"'
    - Key: JRE_11_HOME
      Value: '"/opt/jvm/openjdk-11"'
    - Key: JAVA_8_HOME
      Value: '"/usr/lib/jvm/java-8-openjdk-amd64"'
    - Key: JDK_8_HOME
      Value: '"/usr/lib/jvm/java-8-openjdk-amd64"'
    - Key: JRE_8_HOME
      Value: '"/usr/lib/jvm/java-8-openjdk-amd64/jre"'
    - Key: ANT_VERSION
      Value: 1.10.6
    - Key: MAVEN_HOME
      Value: '"/opt/maven"'
    - Key: MAVEN_VERSION
      Value: 3.6.1
    - Key: MAVEN_CONFIG
      Value: '"/root/.m2"'
    - Key: INSTALLED_GRADLE_VERSIONS
      Value: '"4.10.3 5.4.1"'
    - Key: GRADLE_VERSION
      Value: 5.4.1
    - Key: SBT_VERSION
      Value: 1.2.8
    - Key: JDK_VERSION
      Value: 11.0.2
    - Key: JDK_VERSION_TAG
      Value: "9"
    - Key: ANDROID_HOME
      Value: '"/usr/local/android-sdk-linux"'
    - Key: GRADLE_PATH
      Value: '"$SRC_DIR/gradle"'
    - Key: ANDROID_SDK_MANAGER_VER
      Value: '"4333796"'
    - Key: ANDROID_SDK_BUILD_TOOLS
      Value: '"build-tools;29.0.2"'
    - Key: ANDROID_SDK_PLATFORM_TOOLS
      Value: '"platforms;android-29"'
    - Key: ANDROID_SDK_BUILD_TOOLS_28
      Value: '"build-tools;28.0.3"'
    - Key: ANDROID_SDK_PLATFORM_TOOLS_28
      Value: '"platforms;android-28"'
    - Key: ANDROID_SDK_EXTRAS
      Value: '"extras;android;m2repository extras;google;m2repository extras;google;google_play_services"'
    - Key: JDK_DOWNLOAD_SHA256
      Value: '"99be79935354f5c0df1ad293620ea36d13f48ec3ea870c838f20c504c9668b57"'
    - Key: ANT_DOWNLOAD_SHA512
      Value: '"c1a9694c3018e248000ff6f46d48af85f537ef3935e0d5256543c58a240084c0aff5289fd9e94cbc40d5442f3cc43592398047f2548fded40d9882be2b40750d"'
    - Key: MAVEN_DOWNLOAD_SHA512
      Value: '"b4880fb7a3d81edd190a029440cdf17f308621af68475a4fe976296e71ff4a4b546dd6d8a58aaafba334d309cc11e638c52808a4b0e818fc0fd544226d952544"'
    - Key: GRADLE_DOWNLOADS_SHA256
      Value: '"14cd15fc8cc8705bd69dcfa3c8fefb27eb7027f5de4b47a8b279218f76895a91 5.4.1\n336b6898b491f6334502d8074a6b8c2d73ed83b92123106bd4bf837f04111043
        4.10.3"'
    - Key: ANDROID_SDK_MANAGER_SHA256
      Value: '"92ffee5a1d98d856634e8b71132e8a95d96c83a63fde1099be3d86df3106def9"'
    Name: env
  - Env:
    - Key: JDK_DOWNLOAD_TAR
      Value: '"openjdk-${JDK_VERSION}_linux-x64_bin.tar.gz"'
    - Key: JAVA_HOME
      Value: '"$JAVA_11_HOME"'
    - Key: JDK_HOME
      Value: '"$JDK_11_HOME"'
    - Key: JRE_HOME
      Value: '"$JRE_11_HOME"'
    Name: env
  - Env:
    - Key: PATH
      Value: '"${PATH}:/opt/tools:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools"'
    Name: env
  - CmdLine:
    - set -ex     && apt-get update     && apt-get install -y software-properties-common     &&
      add-apt-repository -y ppa:openjdk-r/ppa     && apt-get update     && apt-get
      install -y openjdk-8-jdk     && apt-get install -y --no-install-recommends ca-certificates-java     &&
      update-ca-certificates -f     && dpkg --add-architecture i386     && apt-get
      update     && apt-get install -y --force-yes libc6-i386        lib32stdc++6
      lib32gcc1 lib32ncurses5        lib32z1 libqt5widgets5     && wget "https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_MANAGER_VER}.zip"
      -O /tmp/android-sdkmanager.zip     && echo "${ANDROID_SDK_MANAGER_SHA256} /tmp/android-sdkmanager.zip"
      | sha256sum -c -     && mkdir -p ${ANDROID_HOME}     && unzip /tmp/android-sdkmanager.zip
      -d ${ANDROID_HOME}     && chown -R root.root ${ANDROID_HOME}     && ln -s ${ANDROID_HOME}/tools/android
      /usr/bin/android     && android-accept-licenses.sh "env JAVA_HOME=$JAVA_8_HOME
      JRE_HOME=$JRE_8_HOME JDK_HOME=$JDK_8_HOME sdkmanager --verbose platform-tools
      ${ANDROID_SDK_BUILD_TOOLS} ${ANDROID_SDK_PLATFORM_TOOLS} ${ANDROID_SDK_EXTRAS}
      ${ANDROID_SDK_NDK_TOOLS}"     && android-accept-licenses.sh "env JAVA_HOME=$JAVA_8_HOME
      JRE_HOME=$JRE_8_HOME JDK_HOME=$JDK_8_HOME sdkmanager --verbose platform-tools
      ${ANDROID_SDK_BUILD_TOOLS_28} ${ANDROID_SDK_PLATFORM_TOOLS_28}"     && android-accept-licenses.sh
      "env JAVA_HOME=$JAVA_8_HOME JRE_HOME=$JRE_8_HOME JDK_HOME=$JDK_8_HOME sdkmanager
      --licenses"     && apt-get install -y python-setuptools     && mkdir -p $JAVA_HOME     &&
      curl -LSso /var/tmp/$JDK_DOWNLOAD_TAR https://download.java.net/java/GA/jdk$JAVA_VERSION/$JDK_VERSION_TAG/GPL/$JDK_DOWNLOAD_TAR     &&
      echo "$JDK_DOWNLOAD_SHA256 /var/tmp/$JDK_DOWNLOAD_TAR" | sha256sum -c -     &&
      tar xzvf /var/tmp/$JDK_DOWNLOAD_TAR -C $JAVA_HOME --strip-components=1     &&
      for tool_path in $JAVA_HOME/bin/*; do           tool=`basename $tool_path`;           update-alternatives
      --install /usr/bin/$tool $tool $tool_path 10000;           update-alternatives
      --set $tool $tool_path;         done      && rm $JAVA_HOME/lib/security/cacerts
      && ln -s /etc/ssl/certs/java/cacerts $JAVA_HOME/lib/security/cacerts     &&
      curl -LSso /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz https://archive.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz      &&
      echo "$ANT_DOWNLOAD_SHA512 /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz" | sha512sum
      -c -     && tar -xzf /var/tmp/apache-ant-$ANT_VERSION-bin.tar.gz -C /opt     &&
      update-alternatives --install /usr/bin/ant ant /opt/apache-ant-$ANT_VERSION/bin/ant
      10000     && mkdir -p $MAVEN_HOME     && curl -LSso /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz
      https://apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     &&
      echo "$MAVEN_DOWNLOAD_SHA512 /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz"
      | sha512sum -c -     && tar xzvf /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz
      -C $MAVEN_HOME --strip-components=1     && update-alternatives --install /usr/bin/mvn
      mvn /opt/maven/bin/mvn 10000     && mkdir -p $MAVEN_CONFIG     && mkdir -p $GRADLE_PATH     &&
      for version in $INSTALLED_GRADLE_VERSIONS; do {        wget "https://services.gradle.org/distributions/gradle-$version-all.zip"
      -O "$GRADLE_PATH/gradle-$version-all.zip"        && unzip "$GRADLE_PATH/gradle-$version-all.zip"
      -d /usr/local        && echo "$GRADLE_DOWNLOADS_SHA256" | grep "$version" |
      sed "s|$version|$GRADLE_PATH/gradle-$version-all.zip|" | sha256sum -c -        &&
      mkdir "/tmp/gradle-$version"        && "/usr/local/gradle-$version/bin/gradle"
      -p "/tmp/gradle-$version" wrapper        && perl -pi -e "s/gradle-$version-bin.zip/gradle-$version-all.zip/"
      "/tmp/gradle-$version/gradle/wrapper/gradle-wrapper.properties"        && "/tmp/gradle-$version/gradlew"
      -p "/tmp/gradle-$version" init        && rm -rf "/tmp/gradle-$version"        &&
      if [ "$version" != "$GRADLE_VERSION" ]; then rm -rf "/usr/local/gradle-$version";
      fi;      }; done       && ln -s /usr/local/gradle-$GRADLE_VERSION/bin/gradle
      /usr/bin/gradle       && rm -rf $GRADLE_PATH     && echo "deb https://dl.bintray.com/sbt/debian
      /" | tee -a /etc/apt/sources.list.d/sbt.list     && apt-get install -y --no-install-recommends
      apt-transport-https     && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80
      --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823     && apt-get update     &&
      apt-get install -y --no-install-recommends sbt=$SBT_VERSION     && rm -fr /var/lib/apt/lists/*
      /tmp/* /var/tmp/*     && apt-get clean
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_DOWNLOAD_SHA256
      Value: '"68a2297eb099d1a76097905a2ce334e3155004ec08cdea85f24527be3c48e856"'
    - Key: GOPATH
      Value: '"/go"'
    - Key: DEP_VERSION
      Value: '"0.5.1"'
    - Key: DEP_BINARY
      Value: '"dep-linux-amd64"'
    Name: env
  - CmdLine:
    - set -ex     && mkdir -p "$GOPATH/src" "$GOPATH/bin"     && chmod -R 777 "$GOPATH"     &&
      apt-get update && apt-get install -y --no-install-recommends         pkg-config     &&
      apt-get clean     && wget "https://dl.google.com/go/go$GOLANG_VERSION.linux-amd64.tar.gz"
      -O /tmp/golang.tar.gz     && echo "$GOLANG_DOWNLOAD_SHA256 /tmp/golang.tar.gz"
      | sha256sum -c -     && tar -xzf /tmp/golang.tar.gz -C /tmp     && mv /tmp/go
      /usr/local/go13      && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*     &&
      wget "https://github.com/golang/dep/releases/download/v$DEP_VERSION/$DEP_BINARY"
      -O "$GOPATH/bin/dep"     && chmod +x "$GOPATH/bin/dep"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/go13 /usr/local/go
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$GOPATH/bin:/usr/local/go/bin:$PATH"'
    Name: env
  - Env:
    - Key: GOLANG_12_DOWNLOAD_SHA256
      Value: '"ac2a6efcc1f5ec8bdc0db0a988bb1d301d64b6d61b7e8d9e42f662fbb75a2b9b"'
    Name: env
  - CmdLine:
    - set -ex     && wget "https://dl.google.com/go/go$GOLANG_12_VERSION.linux-amd64.tar.gz"
      -O /tmp/golang.tar.gz     && echo "$GOLANG_12_DOWNLOAD_SHA256 /tmp/golang.tar.gz"
      | sha256sum -c -     && tar -xzf /tmp/golang.tar.gz -C /tmp     && mv /tmp/go
      /usr/local/go12      && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex     && apt-get update     && apt-get install -y --no-install-recommends         libc6         libgcc1         libgssapi-krb5-2         liblttng-ust0         libstdc++6         zlib1g         software-properties-common     &&
      add-apt-repository ppa:ubuntu-toolchain-r/test -y     && apt-get update     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: DOTNET_SDK_DOWNLOAD_URL
      Value: https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz
    Name: env
  - Env:
    - Key: DOTNET_SDK_DOWNLOAD_SHA
      Value: 81937de0874ee837e3b42e36d1cf9e04bd9deff6ba60d0162ae7ca9336a78f733e624136d27f559728df3f681a72a669869bf91d02db47c5331398
    Name: env
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
