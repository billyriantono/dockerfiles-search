{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:2.7.8",
      "SourceCode": "FROM python:2.7.8",
      "Platform": "",
      "From": {
        "Image": "python:2.7.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LESSC_VERSION",
              "Value": "1.7.5"
            },
            {
              "Key": "LIBSASS_VERSION",
              "Value": "3.11.2"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x;         apt-get update         \u0026\u0026 apt-get install -y --no-install-recommends             ca-certificates             wget             curl             nodejs             npm             libssl-dev             ruby             locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"America/Sao_Paulo\" \u003e /etc/timezone; dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'pt_BR.UTF-8 UTF-8' \u003e\u003e /etc/locale.gen \u0026\u0026 locale-gen \u0026\u0026 DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PIP_SRC",
              "Value": "/usr/local/src"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "pip install -U pip \u0026\u0026 pip install nose pytest mock gunicorn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/nodejs /usr/bin/node         \u0026\u0026 npm install -g bower         \u0026\u0026 npm install -g grunt-cli         \u0026\u0026 npm install -g phantomjs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g     less@${LESSC_VERSION}     node-sass@${LIBSASS_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/src/app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/src/app"
        }
      ]
    }
  ]
}