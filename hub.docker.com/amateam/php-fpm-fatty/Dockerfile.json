{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "Key": "JPEGOPTIM_VERSION",
          "Name": "arg",
          "Value": "1.4.4"
        },
        {
          "Key": "ZOPFLI_VERSION",
          "Name": "arg",
          "Value": "1.0.1"
        },
        {
          "Key": "DOCKERIZE_VERSION",
          "Name": "arg",
          "Value": "0.3.0"
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026     apt-get install -y         git         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng12-dev         libzip-dev         libbz2-dev         libcurl4-openssl-dev         libxml2-dev         libssl-dev         openssl         libgmp3-dev         libc-client-dev         libkrb5-dev         zlib1g-dev         libicu-dev         libpq-dev         libsqlite3-dev \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-source extract \u0026\u0026     mkdir -p /usr/src/php/ext/spl/modules \u0026\u0026     touch /usr/src/php/ext/spl/modules/spl.fake-module \u0026\u0026     docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-configure imap --with-kerberos --with-imap-ssl \u0026\u0026     docker-php-ext-install -j$(nproc)         bcmath         bz2         curl         dom         exif         fileinfo         ftp         gd          gettext         gmp         hash         iconv         imap         intl         json         mbstring         mcrypt         mysqli         opcache         pcntl         pdo         pdo_mysql         pdo_pgsql         pdo_sqlite         pgsql         phar         session         xml         zip \u0026\u0026     pecl install apcu \u0026\u0026     docker-php-ext-enable apcu \u0026\u0026     pecl install xdebug \u0026\u0026     docker-php-source delete \u0026\u0026     rm -rf /tmp/pear"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Ss -L https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \u0026\u0026     chmod a+x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/google/zopfli.git /tmp/zopfli \u0026\u0026     cd /tmp/zopfli \u0026\u0026     git checkout zopfli-$ZOPFLI_VERSION \u0026\u0026     make libzopfli zopfli libzopflipng zopflipng \u0026\u0026     mv *.so.* /usr/lib/ \u0026\u0026     mv zopfli /usr/local/bin \u0026\u0026     mv zopflipng /usr/local/bin \u0026\u0026     cd / \u0026\u0026 rm -rf /tmp/zopfli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/tjko/jpegoptim.git /tmp/jpegoptim \u0026\u0026     cd /tmp/jpegoptim \u0026\u0026     git checkout -f RELEASE.$JPEGOPTIM_VERSION \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026 make strip \u0026\u0026 make install \u0026\u0026     cd / \u0026\u0026 rm -rf /tmp/jpegoptim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS -L https://github.com/jwilder/dockerize/releases/download/v$DOCKERIZE_VERSION/dockerize-linux-amd64-v$DOCKERIZE_VERSION.tar.gz -o /tmp/dockerize.tar.gz \u0026\u0026     tar -C /usr/local/bin -xzvf /tmp/dockerize.tar.gz \u0026\u0026     rm /tmp/dockerize.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "templates",
            "/usr/local/etc/php/conf.template.d"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/local/bin/entrypoint"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}