MetaArgs: null
Stages:
- As: tsbuild
  BaseName: amd64/node:10.17.0@sha256:93e9a9283f0e2ead937a8f77a2c72b18f80005c10b57b4f1cfd40d2b3aa6595f
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - yarn.lock
    - .
  - CmdLine:
    - yarn install --frozen-lockfile
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lib
    - lib
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tsconfig.json
    - tsconfig.json
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tsconfig.app.json
    - tsconfig.app.json
  - CmdLine:
    - yarn build:docker
    Name: run
    PrependShell: true
  From:
    Image: amd64/node:10.17.0@sha256:93e9a9283f0e2ead937a8f77a2c72b18f80005c10b57b4f1cfd40d2b3aa6595f
  Name: tsbuild
  Platform: ""
  SourceCode: FROM amd64/node:10.17.0@sha256:93e9a9283f0e2ead937a8f77a2c72b18f80005c10b57b4f1cfd40d2b3aa6595f
    AS tsbuild
- BaseName: amd64/ubuntu:18.04@sha256:134c7fe821b9d359490cd009ce7ca322453f4f2d018623f849e580a89a685e5d
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Rhys Arkins <rhys@arkins.net>"'
    Name: label
  - Labels:
    - Key: name
      Value: '"renovate"'
    Name: label
  - Labels:
    - Key: org.opencontainers.image.source
      Value: '"https://github.com/renovatebot/renovate"'
    Name: label
  - Env:
    - Key: APP_ROOT
      Value: /usr/src/app
    Name: env
  - Name: workdir
    Path: ${APP_ROOT}
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y gpg curl wget unzip xz-utils git openssh-client
      bsdtar build-essential &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends openjdk-8-jdk gradle
      &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_VERSION
      Value: 10.16.0
    Name: env
  - CmdLine:
    - ARCH= && dpkgArch="$(dpkg --print-architecture)"   && case "${dpkgArch##*-}"
      in   amd64) ARCH='x64';;   ppc64el) ARCH='ppc64le';;   s390x) ARCH='s390x';;   arm64)
      ARCH='arm64';;   armhf) ARCH='armv7l';;   i386) ARCH='x86';;   *) echo "unsupported
      architecture"; exit 1 ;;   esac   && set -ex   && for key in   94AE36675C464D64BAFA68DD7434390BDBE9B9C5   FD3A5288F042B6850C66B31F09FE44734EB7990E   71DCFD284A79C3B38668286BC97EC7A07EDE3FC1   DD8F2338BAE7501E3DD5AC78C273792F7D83545D   C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8   B9AE9905FFD7803F25714661B63B535A4C206CA9   77984A986EBC2AA786BC0F66B01FBB92821C587A   8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600   4ED778F539E3634C779C87C6D7062848A1AB005C   A48C2BEE680E841632CD4E44F07496B3EB3C1762   B9E2F5981AA6E0CD28160D9FF13993A75599653C   ;
      do   gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys
      "$key" ||   gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys
      "$key" ||   gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key"
      ;   done   && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"   &&
      curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"   &&
      gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep "
      node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c -   &&
      bsdtar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1
      --no-same-owner   && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc
      SHASUMS256.txt   && ln -s /usr/local/bin/node /usr/local/bin/nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /tmp &&     curl https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb
      -o erlang-solutions_1.0_all.deb &&     dpkg -i erlang-solutions_1.0_all.deb
      &&     rm -f erlang-solutions_1.0_all.deb
    Name: run
    PrependShell: true
  - Env:
    - Key: ERLANG_VERSION
      Value: 22.0.2-1
    Name: env
  - CmdLine:
    - apt-get update &&     apt-cache policy esl-erlang &&     apt-get install -y
      esl-erlang=1:$ERLANG_VERSION &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: ELIXIR_VERSION
      Value: 1.8.2
    Name: env
  - CmdLine:
    - curl -L https://github.com/elixir-lang/elixir/releases/download/v${ELIXIR_VERSION}/Precompiled.zip
      -o Precompiled.zip &&     mkdir -p /opt/elixir-${ELIXIR_VERSION}/ &&     unzip
      Precompiled.zip -d /opt/elixir-${ELIXIR_VERSION}/ &&     rm Precompiled.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/opt/elixir-${ELIXIR_VERSION}/bin
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y php-cli php-mbstring &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_VERSION
      Value: 1.8.6
    Name: env
  - CmdLine:
    - php -r "copy('https://github.com/composer/composer/releases/download/$COMPOSER_VERSION/composer.phar',
      '/usr/local/bin/composer');"
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/composer
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y bzr mercurial &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.13.4
    Name: env
  - Env:
    - Key: GOPROXY
      Value: direct
    - Key: GOSUMDB
      Value: "off"
    Name: env
  - CmdLine:
    - wget -q -O go.tgz "https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz"
      &&   tar -C /usr/local -xzf go.tgz &&   rm go.tgz &&   export PATH="/usr/local/go/bin:$PATH"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y python3.8-dev python3-distutils &&     rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -fr /usr/bin/python3 && ln /usr/bin/python3.8 /usr/bin/python3
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /usr/bin/python && ln /usr/bin/python3.8 /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent https://bootstrap.pypa.io/get-pip.py | python
    Name: run
    PrependShell: true
  - Env:
    - Key: HOME
      Value: /home/ubuntu
    Name: env
  - CmdLine:
    - groupadd --gid 1000 ubuntu &&   useradd --uid 1000 --gid ubuntu --groups 0 --shell
      /bin/bash --home-dir ${HOME} --create-home ubuntu
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R a+rw /usr
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -g 999 docker
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -aG docker ubuntu
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_VERSION
      Value: 19.03.1
    Name: env
  - CmdLine:
    - curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz   &&
      tar xzvf docker-${DOCKER_VERSION}.tgz --strip 1   -C /usr/local/bin docker/docker   &&
      rm docker-${DOCKER_VERSION}.tgz
    Name: run
    PrependShell: true
  - Name: user
    User: ubuntu
  - Env:
    - Key: RUST_BACKTRACE
      Value: "1"
    - Key: PATH
      Value: ${HOME}/.cargo/bin:$PATH
    Name: env
  - CmdLine:
    - set -ex ;  curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain none
      -y ;   rustup toolchain install 1.36.0
    Name: run
    PrependShell: true
  - CmdLine:
    - mix local.hex --force
    Name: run
    PrependShell: true
  - CmdLine:
    - mix local.rebar --force
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${HOME}/.local/bin:$PATH"'
    Name: env
  - CmdLine:
    - pip install --user pipenv
    Name: run
    PrependShell: true
  - Env:
    - Key: POETRY_VERSION
      Value: 1.0.0
    Name: env
  - CmdLine:
    - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
      | python - --version ${POETRY_VERSION}
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${HOME}/.poetry/bin:$PATH"'
    Name: env
  - CmdLine:
    - poetry config virtualenvs.in-project false
    Name: run
    PrependShell: true
  - Env:
    - Key: NPM_VERSION
      Value: 6.10.2
    Name: env
  - CmdLine:
    - npm install -g npm@$NPM_VERSION
    Name: run
    PrependShell: true
  - Env:
    - Key: YARN_VERSION
      Value: 1.19.1
    Name: env
  - CmdLine:
    - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${HOME}/.yarn/bin:${HOME}/.config/yarn/global/node_modules/.bin:$PATH"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - .
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - yarn.lock
    - .
  - CmdLine:
    - yarn install --production --frozen-lockfile && yarn cache clean
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f yarn.lock
    Name: run
    PrependShell: true
  - Chown: ""
    From: tsbuild
    Name: copy
    SourcesAndDest:
    - dist
    - dist
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin
    - bin
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - data
    - data
  - Name: user
    User: root
  - CmdLine:
    - chown -R ubuntu:0 ${APP_ROOT} ${HOME} &&   chmod -R g=u ${APP_ROOT} ${HOME}
    Name: run
    PrependShell: true
  - Name: user
    User: "1000"
  - CmdLine:
    - node
    - /usr/src/app/dist/renovate.js
    Name: entrypoint
    PrependShell: false
  - CmdLine: []
    Name: cmd
    PrependShell: false
  From:
    Image: amd64/ubuntu:18.04@sha256:134c7fe821b9d359490cd009ce7ca322453f4f2d018623f849e580a89a685e5d
  Name: ""
  Platform: ""
  SourceCode: FROM amd64/ubuntu:18.04@sha256:134c7fe821b9d359490cd009ce7ca322453f4f2d018623f849e580a89a685e5d
