MetaArgs: null
Stages:
- BaseName: biodckr/biodocker:latest
  Commands:
  - Maintainer: Marco Zocca, zocca.marco gmail
    Name: maintainer
  - Env:
    - Key: PYMOL_VERSION_G
      Value: "1.8"
    Name: env
  - Env:
    - Key: PYMOL_VERSION
      Value: 1.8.2.0
    Name: env
  - Env:
    - Key: PYMOL_SHA
      Value: 6181024fe3f0107f57fcd02914b96747881272ade4fd0f3419784c972debce66
    Name: env
  - Env:
    - Key: TINI_VER
      Value: v0.9.0
    Name: env
  - Env:
    - Key: TINI_SHA
      Value: faafbfb5b079303691a939a747d7f60591f2143164093727e870b289a44d9872
    Name: env
  - Env:
    - Key: MINICONDA_VER_G
      Value: "3"
    Name: env
  - Env:
    - Key: MINICONDA_VER
      Value: 3.19.0
    Name: env
  - Env:
    - Key: MINICONDA_VER_BUMP
      Value: 3.19.1
    Name: env
  - Env:
    - Key: MINICONDA_SHA
      Value: 9ea57c0fdf481acf89d816184f969b04bc44dea27b258c4e86b1e3a25ff26aa0
    Name: env
  - Env:
    - Key: NOTEBOOK_VER
      Value: "4.2"
    Name: env
  - Env:
    - Key: JUPYTERHUB_VER
      Value: "0.5"
    Name: env
  - Env:
    - Key: USER
      Value: biodocker
    Name: env
  - Env:
    - Key: IPYNBS_DIR
      Value: /home/${USER}/notebooks/iPyMol
    Name: env
  - Env:
    - Key: DL_DIR
      Value: /home/${USER}/tmp
    Name: env
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    Name: env
  - Env:
    - Key: PATH
      Value: ${CONDA_DIR}/bin:${PATH}
    Name: env
  - Env:
    - Key: SHELL
      Value: /bin/bash
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_CTYPE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - mkdir -p ${CONDA_DIR}                &&     chown ${USER} ${CONDA_DIR}           &&     mkdir
      -p ${DL_DIR}                   &&     chown ${USER} ${DL_DIR}              &&     mkdir
      -p ${IPYNBS_DIR}               &&     chown ${USER} ${IPYNBS_DIR}          &&     mkdir
      /home/${USER}/work             &&     chown ${USER} /home/${USER}/work     &&     mkdir
      /home/${USER}/.jupyter         &&     chown ${USER} /home/${USER}/.jupyter &&     mkdir
      /home/${USER}/.local           &&     chown ${USER} /home/${USER}/.local   &&     echo
      "cacert=/etc/ssl/certs/ca-certificates.crt" > /home/${USER}/.curlrc &&     chown
      ${USER} /home/${USER}/.curlrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ipymol/
    - ${IPYNBS_DIR}
  - CmdLine:
    - apt-get update &&     apt-get install -y --no-install-recommends     pkg-config     language-pack-en-base     locales
      &&        echo -e "en_US.UTF-8 UTF-8\nLC_ALL=\"en_US.UTF-8\"" > /etc/locale.gen
      &&     locale-gen &&     update-locale &&     dpkg-reconfigure locales &&         apt-get
      install -y --no-install-recommends sudo     build-essential    bzip2     ca-certificates     emacs     git     jed     libsm6     libxrender1     make     pandoc     python-pip     python-dev     python3     python3-dev     python3-setuptools     python3-zmq     python3-pip     texlive-latex-base     texlive-latex-extra     texlive-fonts-extra     texlive-fonts-recommended     texlive-generic-recommended     freeglut3     freeglut3-dev     glew-utils     liblcms2-dev     libfreetype6     libfreetype6-dev     libglew-dev     libjpeg8-dev     libpng3
      libpng12-dev     libpng-dev     libtiff4-dev     libwebp-dev     libxml2-dev     pmw     python-tk     python3-scipy     python3-nose     tcl8.5-dev     tk8.5-dev     zlib1g-dev
      &&         apt-get clean &&     apt-get purge &&         rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${DL_DIR}
  - CmdLine:
    - wget --quiet https://github.com/krallin/tini/releases/download/${TINI_VER}/tini
      &&     echo "${TINI_SHA} *tini" | sha256sum -c - &&     mv tini /usr/local/bin/tini
      &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - Name: user
    User: ${USER}
  - CmdLine:
    - mkdir -p ${CONDA_DIR} &&     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VER}-Linux-x86_64.sh
      &&     echo "${MINICONDA_SHA} *Miniconda${MINICONDA_VER_G}-${MINICONDA_VER}-Linux-x86_64.sh"
      | sha256sum -c - &&     /bin/bash Miniconda${MINICONDA_VER_G}-${MINICONDA_VER}-Linux-x86_64.sh
      -f -b -p ${CONDA_DIR} &&     rm Miniconda3-${MINICONDA_VER}-Linux-x86_64.sh
      &&     ${CONDA_DIR}/bin/conda install --quiet --yes conda==${MINICONDA_VER_BUMP}
      &&     ${CONDA_DIR}/bin/conda config --system --add channels conda-forge &&     conda
      clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     "notebook=${NOTEBOOK_VER}*"     terminado     &&
      conda clean -tipsy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip && pip install "jupyterhub==${JUPYTERHUB_VER}"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --no-verbose https://sourceforge.net/projects/pymol/files/pymol/${PYMOL_VERSION_G}/pymol-v${PYMOL_VERSION}.tar.bz2
      &&     echo "${PYMOL_SHA} pymol-v${PYMOL_VERSION}.tar.bz2" | sha256sum -c -
      &&     tar jxf pymol-v${PYMOL_VERSION}.tar.bz2 &&     rm pymol-v* &&     cd
      pymol &&     python3 setup.py build install
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install git+https://github.com/ocramz/ipymol.git@python3
    Name: run
    PrependShell: true
  - CmdLine:
    - pip list && pip3 list
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter-minimal-notebook/start-notebook.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter-minimal-notebook/start-singleuser.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter-minimal-notebook/jupyter_notebook_config.py
    - /home/${USER}/.jupyter/
  - CmdLine:
    - chown -R ${USER}:users /home/${USER}/.jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf ${DL_DIR}
    Name: run
    PrependShell: true
  - Name: user
    User: ${USER}
  - Name: expose
    Ports:
    - "8888"
  - Name: workdir
    Path: /home/${USER}/data
  - Name: volume
    Volumes:
    - /home/${USER}/data
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - jupyter
    - notebook
    - --no-browser
    Name: cmd
    PrependShell: false
  From:
    Image: biodckr/biodocker:latest
  Name: ""
  Platform: ""
  SourceCode: FROM biodckr/biodocker:latest
