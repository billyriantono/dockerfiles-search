{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt -y install libpcre3 libpcre3-dev build-essential autoconf wget apt-utils     automake libtool libpcap-dev libnet1-dev libyaml-0-2 libyaml-dev liblua5.1-dev     zlib1g zlib1g-dev libmagic-dev libcap-ng-dev libjansson-dev pkg-config     libnetfilter-queue-dev geoip-bin geoip-database geoipupdate apt-transport-https     clang libelf-dev software-properties-common apt-utils llvm-6.0-dev llvm-6.0 git-core"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/lib/llvm-6.0/bin/llc /usr/bin/llc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "libbpf.tgz",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "cd /tmp/ \u0026\u0026 mkdir -p /usr/local/lib64/ \u0026\u0026 mkdir -p /usr/local/include/bpf \u0026\u0026     tar -zxvf libbpf.tgz \u0026\u0026 cp /tmp/libbpf.a /usr/local/lib64/libbpf.a \u0026\u0026 cp /tmp/libbpf.so /usr/local/lib64/libbpf.so     \u0026\u0026 cp /tmp/libbpf.h /usr/local/include/bpf/libbpf.h \u0026\u0026 cp /tmp/bpf.h /usr/local/include/bpf/bpf.h     \u0026\u0026 echo \"/usr/local/lib64/\" \u003e\u003e /etc/ld.so.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ls -lrt /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/ \u0026\u0026 git clone https://github.com/OISF/suricata.git     \u0026\u0026 cd suricata \u0026\u0026 git clone https://github.com/OISF/libhtp.git -b 0.5.x"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/suricata/ \u0026\u0026 ./autogen.sh \u0026\u0026     CC=clang ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --enable-nfqueue --enable-lua     --disable-suricata-update --enable-ebpf --enable-ebpf-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/suricata/     \u0026\u0026 make     \u0026\u0026 make install-full     \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/suricata/libhtp/     \u0026\u0026 make install     \u0026\u0026 ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 755 /var/log/suricata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "/Dockerfile/docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/suricata"
          ]
        },
        {
          "CmdLine": [
            "suricata -V"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "suricata --build-info"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}