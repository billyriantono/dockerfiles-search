{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "batazor/spark:2.0.2-rc1",
      "SourceCode": "FROM batazor/spark:2.0.2-rc1",
      "Platform": "",
      "From": {
        "Image": "batazor/spark:2.0.2-rc1"
      },
      "Commands": [
        {
          "Maintainer": "Victor Login \u003cbatazor111@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ANACONDA_VERSION",
              "Value": "4.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.13.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get install -y curl grep sed dpkg \u0026\u0026   TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:'` \u0026\u0026   curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" \u003e tini.deb \u0026\u0026   dpkg -i tini.deb \u0026\u0026   rm tini.deb \u0026\u0026   apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=/opt/conda/bin:$PATH' \u003e /etc/profile.d/conda.sh \u0026\u0026     wget --quiet https://repo.continuum.io/archive/Anaconda2-$ANACONDA_VERSION-Linux-x86_64.sh -O ~/anaconda.sh \u0026\u0026     /bin/bash ~/anaconda.sh -b -p /opt/conda \u0026\u0026     rm ~/anaconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "$CONDA_DIR/bin/conda install jupyter -y --quiet \u0026\u0026     mkdir /opt/notebooks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PYTHONPATH",
              "Value": "/usr/apache/spark-2.0.2-bin-hadoop2.7/python/lib/py4j-0.10.3-src.zip:/usr/apache/spark-2.0.2-bin-hadoop2.7/python:/usr/apache/spark-2.0.2-bin-hadoop2.7/python/build"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/usr/bin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/opt/notebooks"
          ]
        },
        {
          "CmdLine": [
            "jupyter",
            "notebook",
            "--notebook-dir=/opt/notebooks",
            "--ip='*'",
            "--port=8888",
            "--no-browser"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}