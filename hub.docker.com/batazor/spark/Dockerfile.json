{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8",
      "SourceCode": "FROM openjdk:8",
      "Platform": "",
      "From": {
        "Image": "openjdk:8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SPARK_VERSION",
              "Value": "2.0.2"
            },
            {
              "Key": "SPARK_PACKAGE",
              "Value": "spark-2.0.2-bin-hadoop2.7"
            },
            {
              "Key": "SPARK_HOME",
              "Value": "/usr/apache/spark-2.0.2-bin-hadoop2.7"
            },
            {
              "Key": "SBT_VERSION",
              "Value": "0.13.8"
            },
            {
              "Key": "SCALA_VERSION",
              "Value": "2.11.7"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/usr/apache"
        },
        {
          "CmdLine": [
            "wget http://d3kbcqa49mib13.cloudfront.net/${SPARK_PACKAGE}.tgz \u0026\u0026   tar -xvzf ${SPARK_PACKAGE}.tgz \u0026\u0026   rm ${SPARK_PACKAGE}.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026   curl -o scala-$SCALA_VERSION.tgz http://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz \u0026\u0026   tar -xf scala-$SCALA_VERSION.tgz \u0026\u0026   rm scala-$SCALA_VERSION.tgz \u0026\u0026   echo \u003e\u003e /root/.bashrc \u0026\u0026   echo 'export PATH=~/scala-$SCALA_VERSION/bin:$PATH' \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb \u0026\u0026   dpkg -i sbt-$SBT_VERSION.deb \u0026\u0026   rm sbt-$SBT_VERSION.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install -y build-essential sbt python-dev python-boto libcurl4-nss-dev libsasl2-dev libsasl2-2 libsasl2-modules maven libapr1-dev libsvn-dev zlib1g-dev \u0026\u0026   apt-get clean \u0026\u0026   rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${SPARK_HOME}"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/*",
            "conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6066",
            "7077",
            "8080"
          ]
        },
        {
          "CmdLine": [
            "bin/spark-class",
            "org.apache.spark.deploy.master.Master"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}