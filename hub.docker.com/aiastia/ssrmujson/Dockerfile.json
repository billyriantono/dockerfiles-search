{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "Key": "BRANCH",
          "Name": "arg",
          "Value": "abcd"
        },
        {
          "Key": "WORK",
          "Name": "arg",
          "Value": "tmp"
        },
        {
          "Key": "URL1",
          "Name": "arg",
          "Value": "https://raw.githubusercontent.com/aiastia/mudbjsonss/master/mudb.json"
        },
        {
          "Key": "URL2",
          "Name": "arg",
          "Value": "https://raw.githubusercontent.com/aiastia/mudbjsonss/master/userapiconfig.py"
        },
        {
          "CmdLine": [
            "apk --no-cache add python     libsodium     git     wget \u0026\u0026     cd /tmp/ \u0026\u0026     git clone  -b abcd https://github.com/shadowsocksR-private/shadowsocksR.git \u0026\u0026     cd shadowsocksR \u0026\u0026     chmod +x *.sh \u0026\u0026     chmod +x shadowsocks/*.sh \u0026\u0026     cp mysql.json usermysql.json \u0026\u0026     wget -qO 1.json --no-check-certificate $URL1  \u0026\u0026     cp 1.json mudb.json \u0026\u0026     wget -qO 2.py --no-check-certificate $URL2 \u0026\u0026     cp 2.py userapiconfig.py \u0026\u0026     cd /tmp/ \u0026\u0026     cd shadowsocksR \u0026\u0026     rm -rf 1.json \u0026\u0026     rm -rf 2.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SERVER_ADDR",
              "Value": "0.0.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVER_PORT",
              "Value": "51348"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PASSWORD",
              "Value": "psw"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "METHOD",
              "Value": "aes-128-ctr"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROTOCOL",
              "Value": "auth_aes128_md5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROTOCOLPARAM",
              "Value": "32"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OBFS",
              "Value": "tls1.2_ticket_auth_compatible"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TIMEOUT",
              "Value": "300"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DNS_ADDR",
              "Value": "8.8.8.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DNS_ADDR_2",
              "Value": "8.8.4.4"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/$WORK/shadowsocksR"
        },
        {
          "CmdLine": [
            "python server.py"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}