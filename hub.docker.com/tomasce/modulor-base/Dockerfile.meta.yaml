MetaArgs: null
Stages:
- BaseName: tomasce/ruby:2.6.3
  Commands:
  - Maintainer: Tomas Celizna <tomas.celizna@gmail.com>
    Name: maintainer
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - apt-get -q update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install build-essential cmake git-core libtag1-dev nano cron xvfb
      expect-dev unzip apt-transport-https lsb-release libx11-dev libnss3 libgconf-2-4
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install qt5-default libqt5webkit5-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install ghostscript
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y gobject-introspection libgirepository1.0-dev gtk-doc-tools
      libglib2.0-dev libjpeg62-turbo-dev libpng-dev libwebp-dev libtiff5-dev libexif-dev
      libxml2-dev swig libpango1.0-dev libmatio-dev libopenslide-dev libgif-dev librsvg2-dev
      libfftw3-dev liblcms2-dev libpangoft2-1.0-0 liborc-0.4-dev libcairo2-dev libfontconfig1
      libfontconfig1-dev python-setuptools python-dev
    Name: run
    PrependShell: true
  - Env:
    - Key: poppler_version
      Value: 0.59.0
    Name: env
  - CmdLine:
    - curl -O https://poppler.freedesktop.org/poppler-${poppler_version}.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xf poppler-${poppler_version}.tar.xz && cd poppler-${poppler_version} &&
      ./configure --prefix=/usr --sysconfdir=/etc --disable-static --enable-build-type=release
      --enable-cmyk --enable-xpdf-headers --with-testdatadir=$PWD/testfiles && make
      && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf poppler*
    Name: run
    PrependShell: true
  - Env:
    - Key: libvips_version
      Value: 8.7.2
    Name: env
  - CmdLine:
    - curl -OL https://github.com/libvips/libvips/releases/download/v${libvips_version}/vips-${libvips_version}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvf vips-${libvips_version}.tar.gz && cd vips-${libvips_version} && ./configure
      $1 && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf vips*
    Name: run
    PrependShell: true
  - CmdLine:
    - export GI_TYPELIB_PATH=/usr/local/lib/girepository-1.0/
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install pdftk
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install fontforge python-fontforge
    Name: run
    PrependShell: true
  - Env:
    - Key: harfbuzz_version
      Value: 2.3.0
    Name: env
  - CmdLine:
    - wget --no-check-certificate http://www.freedesktop.org/software/harfbuzz/release/harfbuzz-${harfbuzz_version}.tar.bz2
      && tar -xjf harfbuzz-${harfbuzz_version}.tar.bz2 --no-same-owner
    Name: run
    PrependShell: true
  - CmdLine:
    - cd harfbuzz-${harfbuzz_version} && ./configure && make && make install && rm
      -rf harfbuzz*
    Name: run
    PrependShell: true
  - Env:
    - Key: mupdf_version
      Value: 1.14.0
    Name: env
  - CmdLine:
    - wget --no-check-certificate https://mupdf.com/downloads/archive/mupdf-${mupdf_version}-source.tar.gz
      && tar zvxf mupdf-${mupdf_version}-source.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd mupdf-${mupdf_version}-source && make HAVE_X11=no HAVE_GLUT=no prefix=/usr/local
      install && rm -rf mupdf-*
    Name: run
    PrependShell: true
  - Env:
    - Key: fonttools_version
      Value: 3.34.2
    Name: env
  - CmdLine:
    - curl -OL https://github.com/fonttools/fonttools/releases/download/${fonttools_version}/fonttools-${fonttools_version}.zip
      && unzip fonttools-${fonttools_version}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - easy_install pip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd fonttools-${fonttools_version} && make && make install && rm -rf fonttools*
      && rm -rf fonttools-${fonttools_version}.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: ots_version
      Value: 5.2.0
    Name: env
  - CmdLine:
    - wget --no-check-certificate https://github.com/khaledhosny/ots/releases/download/v${ots_version}/ots-${ots_version}.tar.gz
      && tar -zxf ots-${ots_version}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ots-${ots_version} && ./configure && make && make install && rm -rf ots-*
    Name: run
    PrependShell: true
  - Env:
    - Key: ttf2eot_version
      Value: 0.0.2-2
    Name: env
  - CmdLine:
    - wget --no-check-certificate https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/ttf2eot/ttf2eot-${ttf2eot_version}.tar.gz
      && tar -zxf ttf2eot-${ttf2eot_version}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i.bak "/using std::vector;/ i\#include <cstddef>" /ttf2eot-${ttf2eot_version}/OpenTypeUtilities.h
    Name: run
    PrependShell: true
  - CmdLine:
    - cd ttf2eot-${ttf2eot_version} && make && cp ttf2eot /usr/local/bin/ttf2eot &&
      rm -rf ttf2eot*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install ttfautohint
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --recursive https://github.com/google/woff2.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd woff2 && make clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - mv woff2/woff2_* /usr/local/bin && rm -rf woff2
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_11.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nginx
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "daemon off;" >> /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q update && apt-get install -y yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" && echo "deb https://packages.cloud.google.com/apt
      ${CLOUD_SDK_REPO} main" > /etc/apt/sources.list.d/google-cloud-sdk.list
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install google-cloud-sdk -y
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q autoclean
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -q clean
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  From:
    Image: tomasce/ruby:2.6.3
  Name: ""
  Platform: ""
  SourceCode: FROM tomasce/ruby:2.6.3
