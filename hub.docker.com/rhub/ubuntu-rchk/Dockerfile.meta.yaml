MetaArgs: null
Stages:
- BaseName: rhub/ubuntu
  Commands:
  - Maintainer: '"r-hub admin" admin@r-hub.io'
    Name: maintainer
  - CmdLine:
    - add-apt-repository --remove -s -y multiverse &&     add-apt-repository -s -y
      "deb http://archive.ubuntu.com/ubuntu/ xenial multiverse" &&     add-apt-repository
      -s -y "deb http://archive.ubuntu.com/ubuntu/ xenial universe"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get -y build-dep -y r-base-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install     libcurl4-openssl-dev     clang-4.0     llvm-4.0-dev     clang++-4.0     llvm-4.0     libllvm4.0     libc++-dev     libc++abi-dev     python-pip     git     qpdf     aspell     aspell-en
    Name: run
    PrependShell: true
  - CmdLine:
    - 'if md5sum /usr/include/c++/v1/string | grep -q bc206c6dee334d9d8d1cdcf32df6a92b;   then
      cp -p /usr/include/c++/v1/string /root/string.orig        && cd /usr/include/c++/v1/        &&
      echo $''\n--- orig/string 2017-03-29 03:44:51.270843442 -0400\n+++ hack/string
      2017-03-29 03:45:23.678749561 -0400\n@@ -1936,6 +1936,11 @@\n template <class
      _CharT, class _Traits, class _Allocator>\n inline _LIBCPP_INLINE_VISIBILITY\n
      basic_string<_CharT, _Traits, _Allocator>::basic_string(const allocator_type&
      __a)\n+#if _LIBCPP_STD_VER <= 14\n+    _NOEXCEPT_(is_nothrow_copy_constructible<allocator_type>::value)\n+#else\n+    _NOEXCEPT\n+#endif\n     :
      __r_(__a)\n {\n #if _LIBCPP_DEBUG_LEVEL >= 2'' | patch -p1; fi'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install wllvm
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R docker:docker /opt
    Name: run
    PrependShell: true
  - Name: user
    User: docker
  - CmdLine:
    - curl -L -o /opt/master2.zip https://github.com/kalibera/rchk/archive/master.zip
      &&     unzip /opt/master2.zip -d /opt/ &&     mv /opt/rchk-master/ /opt/rchk/
    Name: run
    PrependShell: true
  - Env:
    - Key: WLLVM
      Value: /usr/local/bin
    Name: env
  - Env:
    - Key: LLVM
      Value: /usr/lib/llvm-4.0
    Name: env
  - Env:
    - Key: RCHK
      Value: /opt/rchk
    Name: env
  - CmdLine:
    - cd /opt/rchk/src &&     echo 'export WLLVM=/usr/local/bin'    > ../scripts/config.inc
      &&     echo 'export LLVM=/usr/lib/llvm-4.0' >> ../scripts/config.inc &&     echo
      'export RCHK=/opt/rchk'         >> ../scripts/config.inc &&     make
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opt/R-svn/ &&     svn checkout https://svn.r-project.org/R/trunk /opt/R-svn
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/R-svn/ &&     /opt/rchk/scripts/build_r.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: CRAN
      Value: http://cran.r-project.org
    Name: env
  - Env:
    - Key: RHUB_PLATFORM
      Value: linux-x86_64-ubuntu-gcc
    Name: env
  - Env:
    - Key: RBINARY
      Value: /opt/R-svn/bin/R
    Name: env
  - Env:
    - Key: PATH
      Value: '"/opt/R-svn/bin:${PATH}"'
    Name: env
  - Env:
    - Key: PYTHONPATH
      Value: '"/home/docker/.local/lib/python2.7/site-packages"'
    Name: env
  - CmdLine:
    - mkdir -p /opt/R-svn/packages/lib &&     ln -s /opt/R-svn/packages/lib /home/docker/R
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bashrc
    - /home/docker/.bashrc
  - Chown: ""
    Name: add
    SourcesAndDest:
    - bashrc
    - /home/docker/.bash_profile
  - Chown: ""
    Name: add
    SourcesAndDest:
    - rchk.sh
    - /usr/local/bin
  - Env:
    - Key: RHUB_CHECK_COMMAND
      Value: rchk.sh
    Name: env
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: rhub/ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM rhub/ubuntu
