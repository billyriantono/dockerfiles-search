{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "janes - https://github.com/hxer",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TIMEZONE",
              "Value": "Europe/Copenhagen"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "512M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_UPLOAD",
              "Value": "50M"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MAX_FILE_UPLOAD",
              "Value": "200"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_MAX_POST",
              "Value": "100M"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"@community http://dl-cdn.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories \u0026\u0026     apk update \u0026\u0026     apk add     mysql mysql-client     apache2     curl wget     tzdata     php5-apache2     php5-cli     php5-phar     php5-imagick     php5-zlib     php5-zip     php5-bz2     php5-ctype     php5-mysqli     php5-mysql     php5-pdo_mysql     php5-opcache     php5-pdo     php5-json     php5-curl     php5-gd     php5-gmp     php5-mcrypt     php5-openssl     php5-dom     php5-xml     php5-iconv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer |     php -- --install-dir=/usr/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"#!/bin/sh\" \u003e /start.sh \u0026\u0026     echo \"httpd\" \u003e\u003e /start.sh \u0026\u0026     echo \"nohup mysqld --skip-grant-tables --bind-address localhost --user mysql \u003e /dev/null 2\u003e\u00261 \u0026\" \u003e\u003e /start.sh \u0026\u0026     echo \"sleep 3 \u0026\u0026 mysql -uroot -e \\\"create database db;\\\"\" \u003e\u003e /start.sh \u0026\u0026     echo \"tail -f /var/log/apache2/access.log\" \u003e\u003e /start.sh \u0026\u0026     chmod u+x /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/www"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3306"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/www",
            "/var/lib/mysql",
            "/etc/mysql/"
          ]
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}