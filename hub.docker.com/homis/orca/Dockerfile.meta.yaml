MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Labels:
    - Key: maintainer
      Value: '''Haruka TSUKAGOSHI <h-tsukagoshi@hl-management.jp>'''
    Name: label
  - Env:
    - Key: ORMASTER_PASSWORD
      Value: ormaster
    - Key: ORCA_DISTRIBUTION
      Value: bionic51
    - Key: POSTGRESQL_VER
      Value: "10"
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update     && apt-get -y install --no-install-recommends sudo wget ca-certificates
      gnupg expect     && apt-get -y dist-upgrade     && wget -q https://ftp.orca.med.or.jp/pub/ubuntu/archive.key
      -O -       | apt-key add -     && wget -q -O /etc/apt/sources.list.d/jma-receipt-$ORCA_DISTRIBUTION.list       https://ftp.orca.med.or.jp/pub/ubuntu/jma-receipt-$ORCA_DISTRIBUTION.list     &&
      apt-get update     && apt-get -y install --no-install-recommends jma-receipt
      jma-receipt-pusher     && apt-get clean     && rm -rf /var/lib/apt/lists/*     &&
      wget http://ftp.orca.med.or.jp/pub/etc/install_modules_for_ftp.tgz -O - | tar
      xvzf - -C /tmp     && sudo -u orca bash -c 'cd /tmp/install_modules_for_ftp;
      ./install_modules.sh'     && rm -rf /tmp/install_modules_for_ftp
    Name: run
    PrependShell: true
  - CmdLine:
    - service postgresql start     && jma-setup     && service jma-receipt start     &&
      service jma-receipt stop     && service jma-receipt start     && expect -c "
      spawn sudo -u orca /usr/lib/jma-receipt/bin/passwd_store.sh; expect \":\"; send
      \"${ORMASTER_PASSWORD}\n\"; expect \":\"; send \"${ORMASTER_PASSWORD}\n\"; expect
      eof;"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "listen_addresses = '*'" >> /etc/postgresql/$POSTGRESQL_VER/main/postgresql.conf     &&
      sed -i -e 's/127\.0\.0\.1\/32/0.0.0.0\/0/g' /etc/postgresql/$POSTGRESQL_VER/main/pg_hba.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - CmdLine:
    - chmod +x /usr/local/bin/docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /etc/jma-receipt
    - /var/lib/jma-receipt
    - /var/log/jma-receipt
    - /var/lib/postgresql/$POSTGRESQL_VER/main
    - /etc/postgresql/$POSTGRESQL_VER/main
  - Name: expose
    Ports:
    - "5432"
    - "8000"
    - "9400"
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - tail
    - -f
    - /dev/null
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
