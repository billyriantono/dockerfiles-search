{
  "MetaArgs": [
    {
      "Key": "cuda_version",
      "DefaultValue": "9.0",
      "ProvidedValue": null,
      "Value": "9.0"
    },
    {
      "Key": "cudnn_version",
      "DefaultValue": "7",
      "ProvidedValue": null,
      "Value": "7"
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:${cuda_version}-cudnn${cudnn_version}-devel",
      "SourceCode": "FROM nvidia/cuda:${cuda_version}-cudnn${cudnn_version}-devel",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:${cuda_version}-cudnn${cudnn_version}-devel"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends       bzip2       g++       git       graphviz       libgl1-mesa-glx       libhdf5-dev       openmpi-bin       vim       wget \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y locales \u0026\u0026 locale-gen en_US.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONDA_DIR",
              "Value": "/opt/conda"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$CONDA_DIR/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget --quiet --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-x86_64.sh \u0026\u0026     echo \"c59b3dd3cad550ac7596e0d599b91e75d88826db132e4146030ef471bb434e9a *Miniconda3-4.2.12-Linux-x86_64.sh\" | sha256sum -c - \u0026\u0026     /bin/bash /Miniconda3-4.2.12-Linux-x86_64.sh -f -b -p $CONDA_DIR \u0026\u0026     rm Miniconda3-4.2.12-Linux-x86_64.sh \u0026\u0026     echo export PATH=$CONDA_DIR/bin:'$PATH' \u003e /etc/profile.d/conda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "faquser"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NB_UID",
              "Value": "1014"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -m -s /bin/bash -N -u $NB_UID $NB_USER \u0026\u0026     chown $NB_USER $CONDA_DIR -R \u0026\u0026     mkdir -p /src \u0026\u0026     chown $NB_USER /src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "Key": "python_version",
          "Name": "arg",
          "Value": "3.6"
        },
        {
          "CmdLine": [
            "conda install -y python=${python_version} \u0026\u0026     pip install --upgrade pip \u0026\u0026     pip install       sklearn_pandas       tensorflow       progressbar2       gensim       tornado       pysolr       fuzzywuzzy       jieba       web.py==0.40.dev0       keras \u0026\u0026     conda install       bcolz       h5py       matplotlib       mkl       nose       notebook       Pillow       pandas       pydot       pygpu       pyyaml       scikit-learn       six \u0026\u0026     conda clean -yt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "jupyter notebook --port=8888 --ip=0.0.0.0"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}