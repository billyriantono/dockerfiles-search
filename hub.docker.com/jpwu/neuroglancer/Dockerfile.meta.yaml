MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04
  Commands:
  - Maintainer: Ignacio Tartavull
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y -qq --no-install-recommends     apt-utils     curl     git     openssh-client     python-openssl     python     python-pip     python-dev     python-h5py     python-numpy     python-setuptools     libboost-all-dev     libhdf5-dev     liblzma-dev     libgmp-dev     libmpfr-dev     libxml2-dev     screen     software-properties-common     unzip     vim     wget     zlib1g-dev     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install setuptools Cython wheel numpy tensorflow-gpu pandas
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /.ssh
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./
    - /neuroglancer
  - CmdLine:
    - pip install -r /neuroglancer/python/requirements.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /neuroglancer/python && pip install . && python setup.py develop
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository ppa:staticfloat/juliareleases &&         add-apt-repository
      ppa:staticfloat/julia-deps &&         apt-get update &&         apt-get install
      -y julia
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/lib/x86_64-linux-gnu/libhdf5_serial.so /usr/lib/x86_64-linux-gnu/libhdf5.so
    Name: run
    PrependShell: true
  - Env:
    - Key: HDF5_DIR
      Value: /usr/include/hdf5/serial
    Name: env
  - CmdLine:
    - echo "push!(LOAD_PATH, \"/neuroglancer/python/ext/third_party/yacn\")" >> /root/.juliarc.jl
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /neuroglancer/python/ext/third_party/yacn/ &&     julia -e "Pkg.update();
      for f in readlines(open(\"REQUIRE\")); Pkg.add(strip(f)); end"
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /neuroglancer/python/ext/third_party/contact_analysis/ &&   julia -e "Pkg.update();
      for f in readlines(open(\"REQUIRE\")); Pkg.add(strip(f)); end"
    Name: run
    PrependShell: true
  - CmdLine:
    - julia -e "Pkg.clone(\"https://github.com/seung-lab/SimpleTasks.jl.git\"); Pkg.checkout(\"SimpleTasks\",
      \"v0.5\");"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "push!(LOAD_PATH, \"/neuroglancer/python/ext/third_party/contact_analysis/src\")"
      >> /root/.juliarc.jl
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "ENV[\"USER\"] = \"docker\"" >> /root/.juliarc.jl
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "using JSON\nfor (k,v) in JSON.parse(open(\"/secrets/aws-secret.json\"))\n  ENV[k]
      = v\nend" >> /root/.juliarc.jl
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /neuroglancer/python/ && python -m neuroglancer.pipeline.task_execution
    Name: cmd
    PrependShell: true
  From:
    Image: nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04
