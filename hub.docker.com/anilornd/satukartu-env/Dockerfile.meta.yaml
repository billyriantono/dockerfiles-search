MetaArgs: null
Stages:
- BaseName: php:7.2.10-fpm-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Wira Perdana <wira@karyaanilo.com>"'
    Name: label
  - Env:
    - Key: APP_HOME
      Value: /app
    Name: env
  - Env:
    - Key: WWW_ROOT
      Value: ${APP_HOME}/src
    Name: env
  - Env:
    - Key: SE_TMP
      Value: ${WWW_ROOT}/temporary
    Name: env
  - Env:
    - Key: APP_CONF
      Value: ${APP_HOME}/conf
    Name: env
  - Env:
    - Key: APP_DB
      Value: ${APP_CONF}/db
    Name: env
  - Env:
    - Key: APP_INIT
      Value: ${APP_CONF}/init
    Name: env
  - Env:
    - Key: PHP_CONF
      Value: /usr/local/etc/php-fpm.conf
    Name: env
  - Env:
    - Key: FPM_CONF
      Value: /usr/local/etc/php-fpm.d/www.conf
    Name: env
  - Env:
    - Key: PHP_VARS
      Value: /usr/local/etc/php/conf.d/docker-vars.ini
    Name: env
  - Env:
    - Key: NGINX_VERSION
      Value: 1.14.0
    Name: env
  - Env:
    - Key: LUA_MODULE_VERSION
      Value: 0.10.13
    Name: env
  - Env:
    - Key: DEVEL_KIT_MODULE_VERSION
      Value: 0.3.0
    Name: env
  - Env:
    - Key: LUAJIT_LIB
      Value: /usr/lib
    Name: env
  - Env:
    - Key: LUAJIT_INC
      Value: /usr/include/luajit-2.1
    Name: env
  - Env:
    - Key: LD_PRELOAD
      Value: /usr/lib/preloadable_libiconv.so php
    Name: env
  - CmdLine:
    - apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/
      --allow-untrusted gnu-libiconv
    Name: run
    PrependShell: true
  - CmdLine:
    - 'GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8   && CONFIG="    --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --modules-path=/usr/lib/nginx/modules     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp     --user=nginx     --group=nginx     --with-http_ssl_module     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_random_index_module     --with-http_secure_link_module     --with-http_stub_status_module     --with-http_auth_request_module     --with-http_xslt_module=dynamic     --with-http_image_filter_module=dynamic     --with-http_geoip_module=dynamic     --with-threads     --with-stream     --with-stream_ssl_module     --with-stream_ssl_preread_module     --with-stream_realip_module     --with-stream_geoip_module=dynamic     --with-http_slice_module     --with-mail     --with-mail_ssl_module     --with-compat     --with-file-aio     --with-http_v2_module     --add-module=/usr/src/ngx_devel_kit-$DEVEL_KIT_MODULE_VERSION     --add-module=/usr/src/lua-nginx-module-$LUA_MODULE_VERSION   "   &&
      addgroup -S nginx   && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G
      nginx nginx   && apk add --no-cache --virtual .build-deps     autoconf     gcc     libc-dev     make     libressl-dev     pcre-dev     zlib-dev     linux-headers     curl     gnupg     libxslt-dev     gd-dev     geoip-dev     luajit-dev   &&
      curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz   &&
      curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc   &&
      curl -fSL https://github.com/simpl/ngx_devel_kit/archive/v$DEVEL_KIT_MODULE_VERSION.tar.gz
      -o ndk.tar.gz   && curl -fSL https://github.com/openresty/lua-nginx-module/archive/v$LUA_MODULE_VERSION.tar.gz
      -o lua.tar.gz   && export GNUPGHOME="$(mktemp -d)"   && found='''';   for server
      in     ha.pool.sks-keyservers.net     hkp://keyserver.ubuntu.com:80     hkp://p80.pool.sks-keyservers.net:80     pgp.mit.edu   ;
      do     echo "Fetching GPG key $GPG_KEYS from $server";     gpg --keyserver "$server"
      --keyserver-options timeout=10 --recv-keys "$GPG_KEYS" && found=yes && break;   done;   test
      -z "$found" && echo >&2 "error: failed to fetch GPG key $GPG_KEYS" && exit 1;   gpg
      --batch --verify nginx.tar.gz.asc nginx.tar.gz   && mkdir -p /usr/src   && tar
      -zxC /usr/src -f nginx.tar.gz   && tar -zxC /usr/src -f ndk.tar.gz   && tar
      -zxC /usr/src -f lua.tar.gz   && rm nginx.tar.gz ndk.tar.gz lua.tar.gz   &&
      cd /usr/src/nginx-$NGINX_VERSION   && ./configure $CONFIG --with-debug   &&
      make -j$(getconf _NPROCESSORS_ONLN)   && mv objs/nginx objs/nginx-debug   &&
      mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so   &&
      mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so   &&
      mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so   && mv
      objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so   && ./configure
      $CONFIG   && make -j$(getconf _NPROCESSORS_ONLN)   && make install   && rm -rf
      /etc/nginx/html/   && mkdir /etc/nginx/conf.d/   && mkdir -p /usr/share/nginx/html/   &&
      install -m644 html/index.html /usr/share/nginx/html/   && install -m644 html/50x.html
      /usr/share/nginx/html/   && install -m755 objs/nginx-debug /usr/sbin/nginx-debug   &&
      install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so   &&
      install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so   &&
      install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so   &&
      install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so   &&
      ln -s ../../usr/lib/nginx/modules /etc/nginx/modules   && strip /usr/sbin/nginx*   &&
      strip /usr/lib/nginx/modules/*.so   && rm -rf /usr/src/nginx-$NGINX_VERSION     &&
      apk add --no-cache --virtual .gettext gettext   && mv /usr/bin/envsubst /tmp/     &&
      runDeps="$(     scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so
      /tmp/envsubst       | awk ''{ gsub(/,/, "\nso:", $2); print "so:" $2 }''       |
      sort -u       | xargs -r apk info --installed       | sort -u   )"   && apk
      add --no-cache --virtual .nginx-rundeps $runDeps   && apk del .build-deps   &&
      apk del .gettext   && mv /tmp/envsubst /usr/local/bin/     && ln -sf /dev/stdout
      /var/log/nginx/access.log   && ln -sf /dev/stderr /var/log/nginx/error.log &&     echo
      @testing http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
      &&     echo /etc/apk/respositories &&     apk update && apk upgrade &&    apk
      add --no-cache     bash     wget     supervisor     curl     libcurl     git     augeas-dev     libressl-dev     ca-certificates     dialog     autoconf     make     gcc     musl-dev     linux-headers     libmcrypt-dev     libpng-dev     icu-dev     libpq     libxslt-dev     libffi-dev     freetype-dev     mysql-client     libjpeg-turbo-dev
      &&     docker-php-ext-configure gd       --with-gd       --with-freetype-dir=/usr/include/       --with-png-dir=/usr/include/       --with-jpeg-dir=/usr/include/
      &&     docker-php-ext-install iconv pdo_mysql mysqli gd exif intl xsl json soap
      dom zip opcache &&     pecl channel-update pecl.php.net &&     pecl install
      xdebug-2.6.0 &&     pecl install apcu-5.1.14 &&     docker-php-ext-enable apcu
      &&         cd ~ &&     apk add --no-cache --virtual .imagick-build-dependencies
      imagemagick-dev libtool &&     apk add --virtual .imagick-runtime-dependencies
      imagemagick &&     IMAGICK_TAG="3.4.2" &&     git clone -o ${IMAGICK_TAG} --depth
      1 https://github.com/mkoppanen/imagick.git /tmp/imagick &&     cd /tmp/imagick
      &&     phpize &&     ./configure &&     make &&     make install &&     echo
      "extension=imagick.so" > /usr/local/etc/php/conf.d/ext-imagick.ini &&     apk
      del .imagick-build-dependencies &&     rm -rf /tmp/imagick &&         cd ~     docker-php-source
      delete &&     mkdir -p /etc/nginx &&     mkdir -p /var/www/app &&     mkdir
      -p /run/nginx &&     mkdir -p /var/log/supervisor &&     EXPECTED_COMPOSER_SIGNATURE=$(wget
      -q -O - https://composer.github.io/installer.sig) &&     php -r "copy(''https://getcomposer.org/installer'',
      ''composer-setup.php'');" &&     php -r "if (hash_file(''SHA384'', ''composer-setup.php'')
      === ''${EXPECTED_COMPOSER_SIGNATURE}'') { echo ''Composer.phar Installer verified'';
      } else { echo ''Composer.phar Installer corrupt''; unlink(''composer-setup.php'');
      } echo PHP_EOL;" &&     php composer-setup.php --install-dir=/usr/bin --filename=composer
      &&     php -r "unlink(''composer-setup.php'');"  &&     apk del gcc musl-dev
      linux-headers libffi-dev augeas-dev make autoconf libtool &&     rm -rf /var/cache/apk/*
      &&     rm -rf /tmp/*'
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/supervisord.conf
    - /etc/supervisord.conf
  - CmdLine:
    - rm -Rf /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx.conf
    - /etc/nginx/nginx.conf
  - CmdLine:
    - mkdir -p /etc/nginx/sites-available/ &&     mkdir -p /etc/nginx/sites-enabled/
      &&     mkdir -p /etc/nginx/ssl/ &&     rm -rf /var/www/html &&     mkdir -p
      ${WWW_ROOT} &&     ln -s ${WWW_ROOT} /var/www/html
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx-site.conf
    - /etc/nginx/sites-available/default.conf
  - Chown: ""
    Name: add
    SourcesAndDest:
    - conf/nginx-site-ssl.conf
    - /etc/nginx/sites-available/default-ssl.conf
  - CmdLine:
    - ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "cgi.fix_pathinfo=0" > ${PHP_VARS} &&    echo "upload_max_filesize = 100M"  >>
      ${PHP_VARS} &&    echo "post_max_size = 100M"  >> ${PHP_VARS} &&    echo "variables_order
      = \"EGPCS\""  >> ${PHP_VARS} &&     echo "memory_limit = 128M"  >> ${PHP_VARS}
      &&     sed -i         -e "s/;catch_workers_output\s*=\s*yes/catch_workers_output
      = yes/g"         -e "s/pm.max_children = 5/pm.max_children = 4/g"         -e
      "s/pm.start_servers = 2/pm.start_servers = 3/g"         -e "s/pm.min_spare_servers
      = 1/pm.min_spare_servers = 2/g"         -e "s/pm.max_spare_servers = 3/pm.max_spare_servers
      = 4/g"         -e "s/;pm.max_requests = 500/pm.max_requests = 200/g"         -e
      "s/user = www-data/user = nginx/g"         -e "s/group = www-data/group = nginx/g"         -e
      "s/;listen.mode = 0660/listen.mode = 0666/g"         -e "s/;listen.owner = www-data/listen.owner
      = nginx/g"         -e "s/;listen.group = www-data/listen.group = nginx/g"         -e
      "s/listen = 127.0.0.1:9000/listen = \/var\/run\/php-fpm.sock/g"         -e "s/^;clear_env
      = no$/clear_env = no/"         ${FPM_CONF}
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/start
    - /start
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/pull
    - /usr/bin/pull
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/push
    - /usr/bin/push
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/restoredb
    - /usr/bin/restoredb
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/backupdb
    - /usr/bin/backupdb
  - CmdLine:
    - chmod 755 /usr/bin/pull &&   chmod 755 /usr/bin/push &&   chmod 755 /start &&   chmod
      755 /usr/bin/restoredb &&   chmod 755 /usr/bin/backupdb
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - src/
    - ${WWW_ROOT}
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - touch /.firstrun
    Name: run
    PrependShell: true
  - CmdLine:
    - /start
    Name: cmd
    PrependShell: false
  From:
    Image: php:7.2.10-fpm-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.2.10-fpm-alpine
