{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ufoym/deepo:keras-py36-cu100",
      "SourceCode": "FROM ufoym/deepo:keras-py36-cu100",
      "Platform": "",
      "From": {
        "Image": "ufoym/deepo:keras-py36-cu100"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CRAN_URL",
              "Value": "https://cloud.r-project.org/"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://s3.amazonaws.com/rstudio-server/current.ver",
            "/tmp/ver"
          ]
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 ln -sf /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 apt-get -y update       \u0026\u0026 apt-get -y install --no-install-recommends --no-install-suggests         apt-transport-https apt-utils ca-certificates gnupg       \u0026\u0026 echo \"deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/\"         \u003e /etc/apt/sources.list.d/r.list       \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com          --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9       \u0026\u0026 apt-get -y update       \u0026\u0026 apt-get -y dist-upgrade       \u0026\u0026 apt-get -y install --no-install-recommends --no-install-suggests         curl libapparmor1 libclang-dev libedit2 libssl1.0.0 lsb-release         psmisc r-base-core r-recommended r-base sudo       \u0026\u0026 apt-get -y autoremove       \u0026\u0026 apt-get clean       \u0026\u0026 rm -vrf /var/lib/apt/lists/*       \u0026\u0026 apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y gdebi-core     \u0026\u0026 curl -O https://download2.rstudio.org/rstudio-server-1.1.453-amd64.deb     \u0026\u0026 gdebi -n rstudio-server-1.1.453-amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 useradd -m -d /home/rstudio -g rstudio-server rstudio       \u0026\u0026 echo rstudio:rstudio | chpasswd       \u0026\u0026 echo \"r-cran-repos=${CRAN_URL}\" \u003e\u003e /etc/rstudio/rsession.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "PYTHONPATH=$(pip show numpy | grep Location | cut -d' ' -f2)     \u0026\u0026 echo -e \"PYTHONPATH:\\t${PYTHONPATH}\"     \u0026\u0026 chmod 777 -R /home/rstudio/     \u0026\u0026 chmod 777 -R $PYTHONPATH"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages(c('tidyr', 'ggplot2', 'reticulate'));\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('keras')\";"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('pROC')\";"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"library(reticulate); use_python('/usr/local/bin/python')\" \u003e ~/.Rprofile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8787"
          ]
        },
        {
          "CmdLine": [
            "adduser rstudio sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pillow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get -y build-dep libcurl4-gnutls-dev   \u0026\u0026 apt-get -y install libcurl4-gnutls-dev libssl-dev libgit2-dev   \u0026\u0026 R  -e \"install.packages('devtools')\";"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ~/.R/rstudio/keybindings     \u0026\u0026 echo '{\"commentUncomment\" : \"Cmd+/\"}' \u003e ~/.R/rstudio/keybindings/rstudio_bindings.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo -e \"#!/bin/bash\\n echo 'running rstudio server' \u0026\u0026 echo 'go to http://0.0.0.0:8787' \u0026\u0026 echo -e 'login:\\trstudio\\npassword:\\trstudio' \u0026\u0026  /usr/lib/rstudio-server/bin/rserver \\\"\\$@\\\"\" \u003e /startserver.sh \u0026\u0026 chmod +x /startserver.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cat /startserver.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/startserver.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--server-daemonize=0",
            "--server-app-armor-enabled=0"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}