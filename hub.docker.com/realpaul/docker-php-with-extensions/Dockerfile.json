{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.0.25-fpm-alpine3.4",
      "SourceCode": "FROM php:7.0.25-fpm-alpine3.4",
      "Platform": "",
      "From": {
        "Image": "php:7.0.25-fpm-alpine3.4"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache bash build-base wget curl m4 autoconf libtool imagemagick imagemagick-dev zlib zlib-dev libcurl curl-dev libevent libevent-dev libidn libidn-dev   \u0026\u0026 printf \"\\n\" | pecl install raphf propro   \u0026\u0026 docker-php-ext-enable raphf propro   \u0026\u0026 printf \"\\n\" | pecl install pecl_http   \u0026\u0026 echo -e \"extension=raphf.so\\nextension=propro.so\\nextension=http.so\" \u003e /usr/local/etc/php/conf.d/docker-php-ext-http.ini   \u0026\u0026 rm -rf /usr/local/etc/php/conf.d/docker-php-ext-raphf.ini   \u0026\u0026 rm -rf /usr/local/etc/php/conf.d/docker-php-ext-propro.ini   \u0026\u0026 printf \"\\n\" | pecl install redis timezonedb imagick mongodb xdebug   \u0026\u0026 docker-php-ext-enable redis timezonedb imagick mongodb xdebug   \u0026\u0026 docker-php-ext-install bcmath bz2 calendar ctype curl dba dom enchant exif fileinfo filter ftp gd gettext gmp hash iconv imap interbase intl json ldap mbstring mcrypt mysqli oci8 odbc opcache pcntl pdo pdo_dblib pdo_firebird pdo_mysql pdo_oci pdo_odbc pdo_pgsql pdo_sqlite pgsql phar posix pspell readline recode reflection session shmop simplexml snmp soap sockets spl standard sysvmsg sysvsem sysvshm tidy tokenizer wddx xml xmlreader xmlrpc xmlwriter xsl zip   \u0026\u0026 cd /tmp   \u0026\u0026 wget -O /tmp/newrelic.tar.gz http://download.newrelic.com/php_agent/archive/6.4.0.163/newrelic-php5-6.4.0.163-linux.tar.gz   \u0026\u0026 mkdir /opt   \u0026\u0026 tar xfz /tmp/newrelic.tar.gz -C /opt   \u0026\u0026 mv /opt/newrelic-php5-6.4.0.163-linux /opt/newrelic-install   \u0026\u0026 cd /tmp   \u0026\u0026 php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"   \u0026\u0026 php -r \"if (hash_file('SHA384', 'composer-setup.php') === 'e115a8dc7871f15d853148a7fbac7da27d6c0030b848d9b3dc09e2a0388afed865e6a3d6b3c0fad45c48e2b5fc1196ae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); exit(1); } echo PHP_EOL;\"   \u0026\u0026 php composer-setup.php --install-dir=/usr/local/bin --filename=composer   \u0026\u0026 php -r \"unlink('composer-setup.php');\"   \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}