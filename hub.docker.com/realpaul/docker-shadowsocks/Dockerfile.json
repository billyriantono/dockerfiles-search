{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SHADOWSOCKS_VERSION",
              "Value": "3.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SIMPLE_OBFS_VERSION",
              "Value": "0.0.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KCPTUN_VERSION",
              "Value": "20180316"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SHADOWSOCKS_URL",
              "Value": "https://github.com/shadowsocks/shadowsocks-libev/releases/download/v$SHADOWSOCKS_VERSION/shadowsocks-libev-$SHADOWSOCKS_VERSION.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SIMPLE_OBFS_URL",
              "Value": "https://github.com/shadowsocks/simple-obfs.git"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "KCPTUN_URL",
              "Value": "https://github.com/xtaci/kcptun/releases/download/v$KCPTUN_VERSION/kcptun-linux-amd64-$KCPTUN_VERSION.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk upgrade --update   \u0026\u0026 apk add --virtual .build-deps curl git      build-base gcc abuild binutils binutils-doc gcc-doc      pcre-dev mbedtls-dev libsodium-dev c-ares-dev linux-headers libev-dev asciidoc xmlto      autoconf automake libtool   \u0026\u0026 cd /tmp   \u0026\u0026 curl -sSLO \"$SHADOWSOCKS_URL\"   \u0026\u0026 tar xfz shadowsocks-libev-$SHADOWSOCKS_VERSION.tar.gz   \u0026\u0026 cd shadowsocks-libev-$SHADOWSOCKS_VERSION   \u0026\u0026 ./configure --prefix=/usr --disable-documentation   \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd /tmp   \u0026\u0026 git clone $SIMPLE_OBFS_URL   \u0026\u0026 cd simple-obfs   \u0026\u0026 git checkout -b v$SIMPLE_OBFS_VERSION   \u0026\u0026 git submodule update --init --recursive   \u0026\u0026 ./autogen.sh   \u0026\u0026 ./configure   \u0026\u0026 make \u0026\u0026 make install   \u0026\u0026 cd /tmp   \u0026\u0026 curl -sSLO $KCPTUN_URL   \u0026\u0026 tar xfz kcptun-linux-amd64-${KCPTUN_VERSION}.tar.gz   \u0026\u0026 mv server_linux_amd64 /usr/bin/kcptun-server   \u0026\u0026 mv client_linux_amd64 /usr/bin/kcptun-client   \u0026\u0026 runDeps=\"$(       scanelf --needed --nobanner /usr/bin/ss-* /usr/local/bin/obfs-*         | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'         | xargs -r apk info --installed         | sort -u       )\"   \u0026\u0026 apk add --virtual .run-deps $runDeps libsodium   \u0026\u0026 apk add --virtual .sys-deps bash   \u0026\u0026 apk del .build-deps   \u0026\u0026 rm -rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "sysctl.conf",
            "/etc/sysctl.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}