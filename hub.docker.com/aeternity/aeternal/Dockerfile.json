{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "rust:1-slim",
      "SourceCode": "FROM rust:1-slim as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "rust:1-slim"
      },
      "Commands": [
        {
          "CmdLine": [
            "rustup default nightly"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "USER=root cargo new --bin --vcs none aeternal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/aeternal"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install       pkg-config       libssl-dev       libpq-dev       libcurl3-dev       libcurl4-openssl-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./Cargo.lock",
            "./Cargo.lock"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./Cargo.toml",
            "./Cargo.toml"
          ]
        },
        {
          "CmdLine": [
            "touch ./src/lib.rs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cargo build --release"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm src/*.rs \u0026\u0026 rm -rf target/release/deps/aeternal*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./src/",
            "./src/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./migrations/",
            "./migrations/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./swagger/",
            "./swagger/"
          ]
        },
        {
          "CmdLine": [
            "cargo build --release"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "debian:buster-slim",
      "SourceCode": "FROM debian:buster-slim",
      "Platform": "",
      "From": {
        "Image": "debian:buster-slim"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get -y install libpq5 libcurl4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/aeternal/target/release/aeternal",
            "/app/aeternal"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker/Rocket.toml",
            "./Rocket.toml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker/log4rs-minimal.yaml",
            "/logs/log.yaml"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./docker/wait-for-it.sh",
            "/bin/wait-for-it.sh"
          ]
        },
        {
          "CmdLine": [
            "/app/aeternal"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "-p",
            "-s",
            "-w"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "3020",
            "80"
          ]
        }
      ]
    }
  ]
}