{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "zhenkuo/php7-nginx",
      "SourceCode": "FROM zhenkuo/php7-nginx",
      "Platform": "",
      "From": {
        "Image": "zhenkuo/php7-nginx"
      },
      "Commands": [
        {
          "Maintainer": "zhenkuo liu \u003cliu@zhenkuo.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "groupadd -r redis \u0026\u0026 useradd -r -g redis redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         ca-certificates         wget     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"     \u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     \u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu     \u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc     \u0026\u0026 chmod +x /usr/local/bin/gosu     \u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "REDIS_VERSION",
              "Value": "3.2.8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_DOWNLOAD_URL",
              "Value": "http://download.redis.io/releases/redis-3.2.8.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REDIS_DOWNLOAD_SHA1",
              "Value": "6780d1abb66f33a97aad0edbe020403d0a15b67f"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex         \u0026\u0026 buildDeps='         gcc         libc6-dev         make     '     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/*         \u0026\u0026 wget -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\"     \u0026\u0026 echo \"$REDIS_DOWNLOAD_SHA1 *redis.tar.gz\" | sha1sum -c -     \u0026\u0026 mkdir -p /usr/src/redis     \u0026\u0026 tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1     \u0026\u0026 rm redis.tar.gz         \u0026\u0026 grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h     \u0026\u0026 sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h     \u0026\u0026 grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h         \u0026\u0026 make -C /usr/src/redis     \u0026\u0026 make -C /usr/src/redis install         \u0026\u0026 rm -r /usr/src/redis         \u0026\u0026 apt-get purge -y --auto-remove $buildDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /data \u0026\u0026 chown redis:redis /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "6379"
          ]
        },
        {
          "CmdLine": [
            "redis-server"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}