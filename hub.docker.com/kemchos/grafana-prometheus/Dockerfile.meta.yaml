MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Env:
    - Key: GRAFANA_VERSION
      Value: v2.0.2
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GOPATH/bin
    Name: env
  - CmdLine:
    - apk add --update build-base nodejs go git mercurial     && mkdir -p /go/src/github.com/grafana
      && cd /go/src/github.com/grafana     && git clone https://github.com/grafana/grafana.git
      -b ${GRAFANA_VERSION}     && cd grafana     && go run build.go setup     &&
      godep restore     && go build .     && npm install     && npm install -g grunt-cli     &&
      grunt     && npm uninstall -g grunt-cli     && npm cache clear     && mkdir
      -p /usr/share/grafana/bin/     && cp -a /go/src/github.com/grafana/grafana/grafana
      /usr/share/grafana/bin/grafana-server     && cp -ra /go/src/github.com/grafana/grafana/public
      /usr/share/grafana     && cp -ra /go/src/github.com/grafana/grafana/conf /usr/share/grafana     &&
      go clean -i -r     && mkdir -p /tmp/src && cd /tmp/src     && git clone https://github.com/kemchos/grafana-plugins.git     &&
      cd grafana-plugins && git checkout prometheus-nested-variable && cd ..     &&
      cp -ra grafana-plugins/datasources/prometheus /usr/share/grafana/public/app/plugins/datasource/     &&
      apk del --purge build-base nodejs go git mercurial     && rm -rf /go /tmp/*
      /var/cache/apk/* /root/.n*
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "3000"
  - Name: workdir
    Path: /usr/share/grafana/
  - CmdLine:
    - /usr/share/grafana/bin/grafana-server
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
