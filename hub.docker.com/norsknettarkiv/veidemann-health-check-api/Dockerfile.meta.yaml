MetaArgs: null
Stages:
- As: golang
  BaseName: docker.io/golang:latest
  Commands:
  - Name: workdir
    Path: /build
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - mkdir -p /out
    Name: run
    PrependShell: true
  - CmdLine:
    - go build -mod readonly -o /out/veidemann-health-check-api -ldflags "-s -w"
    Name: run
    PrependShell: true
  - Key: VERSION
    Name: arg
    Value: null
  - Env:
    - Key: GO_LDFLAGS
      Value: '"-s -w -X github.com/nlnwa/veidemann-health-check-api/pkg/version.Version=${VERSION}"'
    Name: env
  - CmdLine:
    - go build -mod readonly -o /out/veidemann-health-check-api -ldflags "${GO_LDFLAGS}"
    Name: run
    PrependShell: true
  From:
    Image: docker.io/golang:latest
  Name: golang
  Platform: ""
  SourceCode: FROM docker.io/golang:latest as golang
- BaseName: gcr.io/distroless/base
  Commands:
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - LICENSE
    - /LICENSE
  - Chown: ""
    From: golang
    Name: copy
    SourcesAndDest:
    - /out
    - /out
  - CmdLine:
    - /out/veidemann-health-check-api
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "8080"
  From:
    Image: gcr.io/distroless/base
  Name: ""
  Platform: ""
  SourceCode: FROM gcr.io/distroless/base
