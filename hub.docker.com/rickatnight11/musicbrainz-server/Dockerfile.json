{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:15.10",
      "SourceCode": "FROM ubuntu:15.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:15.10"
      },
      "Commands": [
        {
          "Maintainer": "Rick White",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "sed -i -e \"s/^# deb\\(.*multiverse$\\)/deb\\1/g\" /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://cz.archive.ubuntu.com/ubuntu wily main multiverse\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://apt.postgresql.org/pub/repos/apt/ wily-pgdg main\" \u003e /etc/apt/sources.list.d/pgdg.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://www.postgresql.org/media/keys/ACCC4CF8.asc",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "cat /tmp/ACCC4CF8.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y adduser sudo git unzip unrar curl bash-completion wget vim memcached redis-server build-essential nodejs npm nodejs-legacy libwww-perl libxml2-dev libpq-dev libexpat1-dev libdb-dev libicu-dev liblocal-lib-perl cpanminus libjson-xs-perl postgresql-client-9.5 \u0026\u0026 apt-get clean autoclean \u0026\u0026 apt-get autoremove -y \u0026\u0026 rm -rf /var/lib/{apt,dpkg,cache,log}/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/musicbrainz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/musicbrainz"
        },
        {
          "CmdLine": [
            "git clone --recursive git://github.com/metabrainz/musicbrainz-server.git ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git checkout tags/v-2016-05-23-schema-change-v2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'eval $( perl -Mlocal::lib )' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cpanm --installdeps --notest ."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install npm -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "DBDefs.pm",
            "/opt/musicbrainz/lib/"
          ]
        },
        {
          "CmdLine": [
            "./script/compile_resources.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "loaddb.sh",
            "/opt/musicbrainz/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "start.sh",
            "/opt/musicbrainz/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "updatedb.sh",
            "/opt/musicbrainz/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5000"
          ]
        }
      ]
    }
  ]
}