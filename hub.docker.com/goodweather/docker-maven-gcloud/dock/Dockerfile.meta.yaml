MetaArgs: null
Stages:
- BaseName: ubuntu:14.04
  Commands:
  - Maintainer: PaddlePaddle Authors <paddle-dev@baidu.com>
    Name: maintainer
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - Key: UBUNTU_MIRROR
    Name: arg
    Value: null
  - CmdLine:
    - /bin/bash -c 'if [[ -n ${UBUNTU_MIRROR} ]]; then sed -i 's#http://archive.ubuntu.com#${UBUNTU_MIRROR}#g'
      /etc/apt/sources.list; fi'
    Name: run
    PrependShell: true
  - Key: BUILD_WOBOQ
    Name: arg
    Value: null
  - Key: BUILD_AND_INSTALL
    Name: arg
    Value: null
  - Key: WITH_AVX
    Name: arg
    Value: null
  - Key: WITH_DOC
    Name: arg
    Value: null
  - Key: WITH_STYLE_CHECK
    Name: arg
    Value: null
  - Env:
    - Key: BUILD_WOBOQ
      Value: ${BUILD_WOBOQ:-OFF}
    Name: env
  - Env:
    - Key: BUILD_AND_INSTALL
      Value: ${BUILD_AND_INSTALL:-OFF}
    Name: env
  - Env:
    - Key: WITH_GPU
      Value: "OFF"
    Name: env
  - Env:
    - Key: WITH_AVX
      Value: ${WITH_AVX:-ON}
    Name: env
  - Env:
    - Key: WITH_DOC
      Value: ${WITH_DOC:-OFF}
    Name: env
  - Env:
    - Key: WITH_STYLE_CHECK
      Value: ${WITH_STYLE_CHECK:-OFF}
    Name: env
  - Env:
    - Key: DOCKER_BUILD
      Value: "TRUE"
    Name: env
  - Env:
    - Key: HOME
      Value: /root
    Name: env
  - CmdLine:
    - sed 's@http:\/\/archive.ubuntu.com\/ubuntu\/@mirror:\/\/mirrors.ubuntu.com\/mirrors.txt@'
      -i /etc/apt/sources.list &&     apt-get update &&     apt-get install -y git
      python-pip python-dev openssh-server bison &&     apt-get install -y wget unzip
      tar xz-utils bzip2 gzip coreutils &&     apt-get install -y curl sed grep graphviz
      libjpeg-dev zlib1g-dev &&     apt-get install -y python-numpy python-matplotlib
      gcc g++ gfortran &&     apt-get install -y automake locales clang-format-3.8
      &&     apt-get clean -y
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global credential.helper store
    Name: run
    PrependShell: true
  - CmdLine:
    - "git clone --recursive https://github.com/PaddlePaddle/Paddle.git /paddle &&
      \tcp -r /paddle/paddle/scripts/docker/root/. /root/"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$PATH:/usr/local/go/bin"'
    Name: env
  - CmdLine:
    - curl -sSL https://storage.googleapis.com/golang/go1.8.linux-amd64.tar.gz | tar
      -C /usr/local -xz &&     GOPATH=/tmp/go go get -u github.com/wangkuiyi/ipynb/markdown-to-ipynb
    Name: run
    PrependShell: true
  - CmdLine:
    - localedef -i en_US -f UTF-8 en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip &&     pip install -U 'protobuf==3.1.0' &&     pip
      install -U wheel pillow BeautifulSoup &&     pip install -U docopt PyYAML sphinx
      &&     pip install -U sphinx-rtd-theme==0.1.9 recommonmark &&     pip install
      -U pre-commit 'requests==2.9.2' jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://cmake.org/files/v3.4/cmake-3.4.1.tar.gz | tar -xz &&     cd
      cmake-3.4.1 && ./bootstrap && make -j `nproc` && make install &&     cd .. &&
      rm -rf cmake-3.4.1
    Name: run
    PrependShell: true
  - CmdLine:
    - /paddle/paddle/scripts/docker/build.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - "wget --quiet --no-check-certificate   \t-O /paddle/book/tools/convert-markdown-into-ipynb-and-test.sh
      \thttps://raw.githubusercontent.com/gongweibao/book/modifyconvert/tools/convert-markdown-into-ipynb-and-test.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - /paddle/book/tools/convert-markdown-into-ipynb-and-test.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /usr/share/nginx/html/data
    - /usr/share/nginx/html/paddle
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:root' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/^PermitRootLogin\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - "mkdir -p /opt/bin && \tcp /paddle/paddle/scripts/docker/entrypoint /opt/bin/"
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/bin/entrypoint
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:14.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:14.04
