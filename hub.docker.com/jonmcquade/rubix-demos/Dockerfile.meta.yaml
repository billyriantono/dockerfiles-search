MetaArgs: null
Stages:
- BaseName: jonmcquade/alpine-nginx-nodejs
  Commands:
  - Key: build_type
    Name: arg
    Value: null
  - Key: node_env
    Name: arg
    Value: null
  - Key: build_ver
    Name: arg
    Value: null
  - Key: search_default_value
    Name: arg
    Value: null
  - Key: search_default_type
    Name: arg
    Value: null
  - Key: port
    Name: arg
    Value: null
  - Env:
    - Key: BUILD_TYPE
      Value: $build_type
    Name: env
  - Env:
    - Key: BUILD_VER
      Value: $build_ver
    Name: env
  - Env:
    - Key: NODE_ENV
      Value: $node_env
    Name: env
  - Env:
    - Key: SEARCH_DEFAULT_VALUE
      Value: $search_default_value
    Name: env
  - Env:
    - Key: SEARCH_DEFAULT_TYPE
      Value: $search_default_type
    Name: env
  - Env:
    - Key: CLIENT
      Value: "true"
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./entrypoint
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./dev_server.js
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./package.json
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./package.prod.json
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./webpack.config.js
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./webpack.production.config.js
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./src/
    - /src/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.babelrc
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./.eslintrc
    - /
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./conf/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./ops/env.js
    - ./env.js
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./ops/env.staging.js
    - ./env.staging.js
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./entrypoint
    - /entrypoint
  - CmdLine:
    - apk update &&     apk --no-cache add      bash     openrc     sed     libpng-dev     automake     autoconf     openrc     libtool     gettext-dev     g++     file     nasm     make
      &&     npm install pm2 -g &&     npm install &&     rm -rf ./etc/nginx/sites-available
      &&     mkdir -p /etc/nginx/uwsgi_temp /etc/nginx/fastcgi_temp /etc/nginx/proxy_temp
      /var/cache/ngx_pagespeed_cache /var/log/pagespeed /etc/nginx/client_body_temp
      &&     touch /tmp/nginx.pid &&     chmod -Rf 755 /etc/nginx /tmp/nginx.pid
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "$BUILD_TYPE" = "staging" ]; then         mv ./env.staging.js ./src/modules/InstaProxy/env.js;     elif
      [ "$BUILD_TYPE" = "production" ]; then         mv ./env.js ./src/modules/InstaProxy/env.js;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ "$BUILD_TYPE" = "development" ]; then         echo "Building ./public folder
      for fallback to static files ..." &&         node /node_modules/webpack/bin/webpack.js
      &&         cd /public; ls -l;     else         echo "Building ./build folder
      for serving static files ..." &&         export BUILD_TIME=`date +'%y.%m.%d
      %H:%M:%S'` &&         BUILD_VER=$BUILD_VER BUILD_TIME=$BUILD_TIME node /node_modules/webpack/bin/webpack.js
      -p --config /webpack.production.config.js &&         node /node_modules/react-scripts/scripts/build.js
      &&         rm -rf /node_modules &&         rm -f /build/app.js /dev_server.js
      &&         sed -i.bak s/BUILD_VER/${BUILD_VER}/g package.prod.json &&         mv
      /package.prod.json /package.json &&         cd /build && ls -l;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del   libpng-dev   automake   autoconf   libtool   gettext-dev   g++   file   nasm   make   sed
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - sh $BUILD_VER $BUILD_TYPE $BUILD_TIME ./entrypoint
    Name: cmd
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "3000"
  - Name: expose
    Ports:
    - "3001"
  - Name: expose
    Ports:
    - "3002"
  From:
    Image: jonmcquade/alpine-nginx-nodejs
  Name: ""
  Platform: ""
  SourceCode: FROM jonmcquade/alpine-nginx-nodejs
