MetaArgs:
- DefaultValue: amd64/debian:stretch-slim
  Key: IMAGE
  ProvidedValue: null
  Value: amd64/debian:stretch-slim
Stages:
- As: builder
  BaseName: $IMAGE
  Commands:
  - Maintainer: dispatch <admin@bitwave.tv>
    Name: maintainer
  - Key: NASM_VERSION
    Name: arg
    Value: 2.14.02
  - Key: LAME_VERSION
    Name: arg
    Value: "3.100"
  - Key: X264_VERSION
    Name: arg
    Value: 20190409-2245-stable
  - Key: X265_VERSION
    Name: arg
    Value: "3.0"
  - Key: FFMPEG_VERSION
    Name: arg
    Value: 4.1.3
  - Key: NGINX_VERSION
    Name: arg
    Value: 1.16.1
  - Key: NGINXRTMP_VERSION
    Name: arg
    Value: 1.2.1
  - Key: NODE_VERSION
    Name: arg
    Value: 10.15.3
  - Env:
    - Key: SRC
      Value: '"/usr/local/"'
    - Key: LD_LIBRARY_PATH
      Value: '"/usr/local/lib"'
    - Key: PKG_CONFIG_PATH
      Value: '"/usr/local/lib/pkgconfig"'
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y         pkg-config         curl         libpcre3-dev         libtool         libssl-dev         zlib1g-dev         libasound2-dev         build-essential         cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /dist && cd /dist &&     curl -OL "https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz"
      &&     tar -xvz -f "nginx-${NGINX_VERSION}.tar.gz" &&     curl -OL "https://github.com/arut/nginx-rtmp-module/archive/v${NGINXRTMP_VERSION}.tar.gz"
      &&     tar -xvz -f "v${NGINXRTMP_VERSION}.tar.gz" &&     cd nginx-${NGINX_VERSION}
      &&     ./configure         --prefix=/usr/local/nginx         --with-http_ssl_module         --with-http_v2_module         --add-module=/dist/nginx-rtmp-module-${NGINXRTMP_VERSION}
      &&     make -j$(nproc) &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /dist && cd /dist &&     curl -OL "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz"
      &&     tar -xvJ -f "node-v${NODE_VERSION}-linux-x64.tar.xz" &&     cd node-v${NODE_VERSION}-linux-x64
      &&     cp -R bin /usr/local &&     cp -R lib /usr/local
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /dist && cd /dist &&     curl -OL "https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.xz"
      &&     tar -xvJ -f nasm-${NASM_VERSION}.tar.xz &&     cd nasm-${NASM_VERSION}
      &&     ./configure &&     make -j$(nproc) &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /dist && cd /dist &&     curl -OL "http://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2"
      &&     tar -xvj -f x264-snapshot-${X264_VERSION}.tar.bz2 &&     cd x264-snapshot-${X264_VERSION}
      &&     ./configure         --prefix="${SRC}"         --bindir="${SRC}/bin"         --enable-shared
      &&     make -j$(nproc) &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /dist && cd /dist &&     curl -OL "http://ftp.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz"
      &&     tar -xvz -f x265_${X265_VERSION}.tar.gz &&     cd x265_${X265_VERSION}/build
      &&     cmake ../source &&     make -j$(nproc) &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /dist && cd /dist &&     curl -OL "https://downloads.sourceforge.net/project/lame/lame/${LAME_VERSION}/lame-${LAME_VERSION}.tar.gz"
      &&     tar -xvz -f lame-${LAME_VERSION}.tar.gz &&     cd lame-${LAME_VERSION}
      &&     ./configure         --prefix="${SRC}"         --bindir="${SRC}/bin"         --disable-static         --enable-nasm
      &&     make -j$(nproc) &&     make install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./contrib/ffmpeg
    - /dist/bitwave-media-server/contrib/ffmpeg
  - CmdLine:
    - mkdir -p /dist && cd /dist &&     curl -OL "https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz"
      &&     tar -xvz -f ffmpeg-${FFMPEG_VERSION}.tar.gz &&     cd ffmpeg-${FFMPEG_VERSION}
      &&     patch -p1 < /dist/bitwave-media-server/contrib/ffmpeg/bitrate.patch &&     ./configure         --bindir="${SRC}/bin"         --extra-cflags="-I${SRC}/include"         --extra-ldflags="-L${SRC}/lib"         --prefix="${SRC}"         --enable-nonfree         --enable-gpl         --enable-version3         --enable-libmp3lame         --enable-libx264         --enable-libx265         --enable-openssl         --enable-postproc         --enable-small         --enable-static         --disable-debug         --disable-doc         --disable-shared
      &&     make -j$(nproc) &&     make install
    Name: run
    PrependShell: true
  From:
    Image: $IMAGE
  Name: builder
  Platform: ""
  SourceCode: FROM $IMAGE as builder
- BaseName: $IMAGE
  Commands:
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/bin
    - /usr/local/bin
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/nginx
    - /usr/local/nginx
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /usr/local/lib
    - /usr/local/lib
  - CmdLine:
    - apt-get update &&     apt-get install -y         ca-certificates         git         procps         libpcre3         openssl         libssl1.1         zlib1g         v4l-utils         libv4l-0         alsa-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove -y         git         curl &&         apt autoremove -y
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /tmp/hls &&     mkdir -p /tmp/preview &&     mkdir -p /tmp/transcode
      &&     mkdir -p /archives/rec
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g typescript
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - package-lock.json
    - /bitwave-media-server/
  - CmdLine:
    - cd /bitwave-media-server &&     npm ci &&     npm prune --production &&     npm
      cache verify
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /bitwave-media-server
  - Name: workdir
    Path: /bitwave-media-server
  - CmdLine:
    - cd /bitwave-media-server &&     npm run build
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "8181"
  - Name: volume
    Volumes:
    - /bitwave-media-server/db
  - CmdLine:
    - ./run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: $IMAGE
  Name: ""
  Platform: ""
  SourceCode: FROM $IMAGE
