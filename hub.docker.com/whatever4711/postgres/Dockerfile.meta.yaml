MetaArgs: null
Stages:
- BaseName: alpine:edge
  Commands:
  - Env:
    - Key: ARCH
      Value: amd64
    - Key: GOSU_VERSION
      Value: "1.4"
    - Key: LANG
      Value: en_US.utf8
    - Key: PGDATA
      Value: /var/lib/postgresql/data
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - apk add --update --no-cache     postgresql curl bash tini &&     curl -o /usr/local/bin/gosu
      -sSL "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$ARCH"
      &&     chmod +x /usr/local/bin/gosu &&     apk del curl &&     rm -rf /var/cache/apk/*
      &&     chmod +x /entrypoint.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $PGDATA
  - CmdLine:
    - /sbin/tini
    - --
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "5432"
  - CmdLine:
    - postgres
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - healthcheck.sh
    - /usr/local/bin/
  - Health:
      Interval: 30000000000
      Retries: 3
      Test:
      - CMD
      - healthcheck.sh
      Timeout: 5000000000
    Name: healthcheck
  - Labels:
    - Key: maintainer
      Value: whatever4711@gmail.com
    - Key: version
      Value: 9.5.6
    - Key: os
      Value: '"linux"'
    - Key: arch
      Value: '"${ARCH}"'
    Name: label
  From:
    Image: alpine:edge
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:edge
