{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7-cli",
      "SourceCode": "FROM php:7-cli",
      "Platform": "",
      "From": {
        "Image": "php:7-cli"
      },
      "Commands": [
        {
          "Maintainer": "Christian Daguerre \u003cchristian@daguer.re\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TIMEZONE",
              "Value": "Europe/Paris"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/var/www/angular/node_modules/.bin"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./php.ini",
            "/usr/local/etc/php/conf.d/"
          ]
        },
        {
          "CmdLine": [
            "deps=\"         vim         git         locales     \"     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $deps --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install exif mbstring pdo_mysql opcache pcntl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y zlib1g-dev --no-install-recommends     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libicu-dev --no-install-recommends     \u0026\u0026 docker-php-ext-install intl     \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libxml2-dev --no-install-recommends     \u0026\u0026 docker-php-ext-install soap     \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libmemcached-dev --no-install-recommends     \u0026\u0026 git clone -b php7 --single-branch https://github.com/php-memcached-dev/php-memcached.git /usr/src/php/ext/memcached     \u0026\u0026 (cd /usr/src/php/ext/memcached \u0026\u0026 git reset --hard 6ace07da69a5ebc021e56a9d2f52cdc8897b4f23)     \u0026\u0026 docker-php-ext-install memcached     \u0026\u0026 find /usr/src/php/ext/memcached -type f -not -name '*.so' | xargs rm     \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b php7 --single-branch https://github.com/phpredis/phpredis.git /usr/src/php/ext/redis    \u0026\u0026 (cd /usr/src/php/ext/redis \u0026\u0026 git reset --hard 2887ad1130aba5aee029a64140d111544e62d56d)      \u0026\u0026 docker-php-ext-install redis     \u0026\u0026 find /usr/src/php/ext/redis -type f -not -name '*.so' | xargs rm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libmagickwand-dev --no-install-recommends     \u0026\u0026 pecl install imagick-3.4.0RC6 \u0026\u0026 docker-php-ext-enable imagick     \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y libfreetype6-dev libjpeg62-turbo-dev libpng12-dev --no-install-recommends     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install gd     \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/70     \u0026\u0026 tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp     \u0026\u0026 mv /tmp/blackfire-*.so `php -r \"echo ini_get('extension_dir');\"`/blackfire.so     \u0026\u0026 echo \"extension=blackfire.so\\nblackfire.agent_socket=\\${BLACKFIRE_PORT}\" \u003e $PHP_INI_DIR/conf.d/blackfire.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_5.x | bash -     \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y nodejs --no-install-recommends     \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 composer global require hirak/prestissimo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get update \u0026\u0026 apt-get install -y xfonts-base xfonts-75dpi --no-install-recommends     \u0026\u0026 curl -L -sO http://download.gna.org/wkhtmltopdf/0.12/0.12.2.1/wkhtmltox-0.12.2.1_linux-jessie-amd64.deb     \u0026\u0026 dpkg -i wkhtmltox-0.12.2.1_linux-jessie-amd64.deb     \u0026\u0026 mv /usr/local/bin/wkhtmltopdf /usr/bin/wkhtmltopdf     \u0026\u0026 mv /usr/local/bin/wkhtmltoimage /usr/bin/wkhtmltoimage     \u0026\u0026 rm wkhtmltox-0.12.2.1_linux-jessie-amd64.deb     \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo $TIMEZONE \u003e /etc/timezone \u0026\u0026 dpkg-reconfigure --frontend noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '      de_DE ISO-8859-1\\n      de_DE.UTF-8 UTF-8\\n      de_DE@euro ISO-8859-15\\n      en_GB ISO-8859-1\\n      en_GB.ISO-8859-15 ISO-8859-15\\n      en_US ISO-8859-1\\n      en_US.ISO-8859-15 ISO-8859-15\\n      en_US.UTF-8 UTF-8\\n      fr_FR ISO-8859-1\\n      fr_FR.UTF-8 UTF-8\\n      fr_FR@euro ISO-8859-15\\n      nl_BE ISO-8859-1\\n      nl_BE.UTF-8 UTF-8\\n      nl_BE@euro ISO-8859-15\\n      nl_NL ISO-8859-1\\n      nl_NL.UTF-8 UTF-8\\n      nl_NL@euro ISO-8859-15\\n' \u003e\u003e /etc/locale.gen     \u0026\u0026 /usr/sbin/locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/app/logs /var/app/cache \u0026\u0026 chown -R \"www-data\":\"www-data\" /var/app/cache /var/app/logs \u0026\u0026 chmod -R g+rwx /var/app/logs /var/app/cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        }
      ]
    }
  ]
}