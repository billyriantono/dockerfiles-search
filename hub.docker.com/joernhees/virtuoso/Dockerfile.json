{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian",
      "SourceCode": "FROM debian",
      "Platform": "",
      "From": {
        "Image": "debian"
      },
      "Commands": [
        {
          "Maintainer": "Joern Hees",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "VIRTUOSO_VERSION",
              "Value": "7.2.4.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VIRTUOSO_SOURCE",
              "Value": "https://github.com/openlink/virtuoso-opensource/releases/download/v$VIRTUOSO_VERSION/virtuoso-opensource-$VIRTUOSO_VERSION.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "BUILD_DIR",
          "Name": "arg",
          "Value": "/tmp/build"
        },
        {
          "Key": "VIRTUOSO_DEB_PKG_DIR",
          "Name": "arg",
          "Value": "/virtuoso_deb"
        },
        {
          "Key": "BUILD_ARGS",
          "Name": "arg",
          "Value": "\"\""
        },
        {
          "CmdLine": [
            "dpkg --get-selections \u003e /inst_packages.dpkg \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y \t\tbuild-essential \t\tdevscripts \t\twget \t\u0026\u0026 mkdir -p \"$BUILD_DIR\" \t\u0026\u0026 cd \"$BUILD_DIR\" \t\u0026\u0026 echo -n \"downloading...\" \t\u0026\u0026 wget -nv \"$VIRTUOSO_SOURCE\" \t\u0026\u0026 echo \" done.\" \t\u0026\u0026 echo -n \"extracting...\" \t\u0026\u0026 tar -xaf virtuoso*.tar* \t\u0026\u0026 rm virtuoso*.tar* \t\u0026\u0026 echo \" done.\" \t\u0026\u0026 cd \"$BUILD_DIR\"/virtuoso-opensource*/ \t\u0026\u0026 mk-build-deps -irt'apt-get --no-install-recommends -yV' \t\u0026\u0026 dpkg-checkbuilddeps \t\u0026\u0026 dpkg-buildpackage -us -uc $BUILD_ARGS \t\u0026\u0026 ./configure --with-layout=debian --enable-dbpedia-vad \t\u0026\u0026 cd binsrc \t\u0026\u0026 make $BUILD_ARGS \t\u0026\u0026 cp dbpedia/dbpedia_dav.vad ../../ \t\u0026\u0026 cd \"$BUILD_DIR\" \t\u0026\u0026 rm -r virtuoso-opensource*/ \t\u0026\u0026 (dpkg-scanpackages ./ | gzip \u003e Packages.gz) \t\u0026\u0026 echo \"deb file:$BUILD_DIR ./\" \u003e\u003e /etc/apt/sources.list.d/virtuoso.list \t\u0026\u0026 dpkg --clear-selections \t\u0026\u0026 dpkg --set-selections \u003c /inst_packages.dpkg \t\u0026\u0026 rm /inst_packages.dpkg \t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 apt-get -y dselect-upgrade \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y --force-yes \t\tvirtuoso-server \t\tvirtuoso-vad-bpel \t\tvirtuoso-vad-conductor \t\tvirtuoso-vad-demo \t\tvirtuoso-vad-doc \t\tvirtuoso-vad-isparql \t\tvirtuoso-vad-ods \t\tvirtuoso-vad-rdfmappers \t\tvirtuoso-vad-sparqldemo \t\tvirtuoso-vad-syncml \t\tvirtuoso-vad-tutorial \t\u0026\u0026 mv $BUILD_DIR/dbpedia_dav.vad /usr/share/virtuoso-opensource-7/vad/ \t\u0026\u0026 rm -rf $BUILD_DIR \t\u0026\u0026 rm /etc/apt/sources.list.d/virtuoso.list \t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 sed -i '/^DirsAllowed\\s*=/ s_\\s*$_, /import_' /etc/virtuoso-opensource-7/virtuoso.ini \t\u0026\u0026 /etc/init.d/virtuoso-opensource-7 start \t\u0026\u0026 /etc/init.d/virtuoso-opensource-7 stop \t\u0026\u0026 sleep 30 \t\u0026\u0026 cp -a /var/lib/virtuoso-opensource-7 /var/lib/virtuoso-opensource-7.orig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "\"/var/lib/virtuoso-opensource-7\"",
            "\"/import\""
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "1111",
            "8890"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./README.md",
            "/root/README_VIRTUOSO.md"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./start.sh",
            "./wait_ready",
            "/usr/local/sbin/"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/sbin/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}