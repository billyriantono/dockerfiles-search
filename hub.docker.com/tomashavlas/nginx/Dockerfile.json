{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Name": "expose",
          "Ports": [
            "8080",
            "8443"
          ]
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.12"
            },
            {
              "Key": "NGINX_RELEASE",
              "Value": "1.12.2"
            },
            {
              "Key": "NGINX_CHECKSUM",
              "Value": "305f379da1d5fb5aefa79e45c829852ca6983c7cd2a79328f8e084a324cf0416"
            },
            {
              "Key": "NGINX_SOURCE",
              "Value": "/usr/src/nginx"
            },
            {
              "Key": "NGINX_TARBALL",
              "Value": "/usr/src/nginx-1.12.2.tar.gz"
            },
            {
              "Key": "HOME",
              "Value": "/srv/www"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "name",
              "Value": "\"tomashavlas/nginx\""
            },
            {
              "Key": "version",
              "Value": "\"${NGINX_VERSION}\""
            },
            {
              "Key": "release",
              "Value": "\"${NGINX_RELEASE}\""
            },
            {
              "Key": "maintaner",
              "Value": "\"Tom치코 Havlas \u003ctomas@havlas.me\u003e\""
            },
            {
              "Key": "vendor",
              "Value": "\"Tom치코 Havlas\""
            },
            {
              "Key": "io.openshift.s2i.scripts-url",
              "Value": "image:///usr/lib/s2i"
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "NGINX_CONF_PATH",
              "Value": "/etc/nginx"
            },
            {
              "Key": "NGINX_CONFD_PATH",
              "Value": "/etc/nginx/conf.d"
            },
            {
              "Key": "NGINX_DEFAULTD_PATH",
              "Value": "/etc/nginx/default.d"
            },
            {
              "Key": "NGINX_LIB_PATH",
              "Value": "/var/lib/nginx"
            },
            {
              "Key": "NGINX_LOCK_PATH",
              "Value": "/var/lock/nginx"
            },
            {
              "Key": "NGINX_LOG_PATH",
              "Value": "/var/log/nginx"
            },
            {
              "Key": "NGINX_RUN_PATH",
              "Value": "/run/nginx"
            },
            {
              "Key": "NGINX_SNIPPETD_PATH",
              "Value": "/etc/nginx/snippet.d"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd --home-dir /usr/share/nginx --gid 0 --shell /usr/sbin/nologin --system --uid 48 nginx   \u0026\u0026 apt-get update  \u0026\u0026 BUILD_DEPS=\"         gcc         libpcre++-dev         libssl1.0-dev         make         zlib1g-dev \"  \u0026\u0026 RUNTIME_DEPS=\"         gettext-base         libnss-wrapper         libpcre++0v5         libssl1.0.2         zlib1g \"  \u0026\u0026 apt-get install --yes --no-install-recommends --verbose-versions ${BUILD_DEPS} ${RUNTIME_DEPS}   \u0026\u0026 rm --recursive /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 BUILD_DEPS=\"         ca-certificates         wget \"  \u0026\u0026 apt-get install --yes --no-install-recommends --verbose-versions ${BUILD_DEPS}   \u0026\u0026 wget -O \"${NGINX_TARBALL}\" \"https://nginx.org/download/nginx-1.12.2.tar.gz\"  \u0026\u0026 echo \"${NGINX_CHECKSUM} *${NGINX_TARBALL}\" | sha256sum --check -   \u0026\u0026 apt-get purge --yes --auto-remove ${BUILD_DEPS}  \u0026\u0026 rm --recursive /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./root/usr/bin/docker-nginx-*",
            "/usr/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-nginx-source extract  \u0026\u0026 docker-nginx-install         --with-http_realip_module         --with-http_ssl_module         --with-http_v2_module         --with-ipv6  \u0026\u0026 docker-nginx-source delete"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONTAINER_ENTRYPOINT_PATH",
              "Value": "/usr/share/container-entrypoint"
            },
            {
              "Key": "CONTAINER_PASSWD_PATH",
              "Value": "\"${NGINX_CONF_PATH}/passwd\""
            },
            {
              "Key": "S2I_BIN_PATH",
              "Value": "/usr/lib/s2i"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./s2i/bin",
            "${S2I_BIN_PATH}/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./common/root",
            "./root",
            "./${NGINX_VERSION}/root",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/usr/lib/container-entrypoint/nginx-setup  \u0026\u0026 test \"$( id nginx )\" = \"uid=48(nginx) gid=0(root) groups=0(root)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "${NGINX_LOG_PATH}"
          ]
        },
        {
          "Name": "user",
          "User": "48"
        },
        {
          "Name": "workdir",
          "Path": "\"${HOME}\""
        },
        {
          "CmdLine": [
            "container-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/lib/s2i/usage"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}