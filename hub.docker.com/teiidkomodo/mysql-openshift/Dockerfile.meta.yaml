MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Maintainer: Teiid-Komodo Community <http://teiiddesigner.jboss.org>
    Name: maintainer
  - CmdLine:
    - groupadd -r mysql && useradd -r -g mysql mysql
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/* \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true \t&& apt-get purge -y --auto-remove ca-certificates wget"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y policycoreutils
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /docker-entrypoint-initdb.d
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /userscripts
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y perl pwgen --no-install-recommends && rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5
    Name: run
    PrependShell: true
  - Env:
    - Key: MYSQL_MAJOR
      Value: "5.7"
    Name: env
  - Env:
    - Key: MYSQL_VERSION
      Value: 5.7.18-1debian8
    Name: env
  - CmdLine:
    - echo "deb http://repo.mysql.com/apt/debian/ jessie mysql-${MYSQL_MAJOR}" > /etc/apt/sources.list.d/mysql.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "{ \t\techo mysql-community-server mysql-community-server/data-dir select '';
      \t\techo mysql-community-server mysql-community-server/root-pass password '';
      \t\techo mysql-community-server mysql-community-server/re-root-pass password
      ''; \t\techo mysql-community-server mysql-community-server/remove-test-db select
      false; \t} | debconf-set-selections \t&& apt-get update   && apt-get install
      -y net-tools   && apt-get install -y mysql-server=\"${MYSQL_VERSION}\" && rm
      -rf /var/lib/apt/lists/* \t&& rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql/data
      /var/run/mysqld \t&& chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \t&&
      chmod 777 /var/run/mysqld     && test \"$(id mysql)\" = \"uid=999(mysql) gid=999(mysql)
      groups=999(mysql)\""
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - custom-my.cnf
    - /etc/mysql/my.cnf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - examples/*.sql
    - /docker-entrypoint-initdb.d/
  - CmdLine:
    - "echo 'skip-host-cache\\nskip-name-resolve' | awk '{ print } $1 == \"[mysqld]\"
      && c == 0 { c = 1; system(\"cat\") }' /etc/mysql/my.cnf > /tmp/my.cnf \t&& mv
      /tmp/my.cnf /etc/mysql/my.cnf"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-setup.sh
    - /
  - CmdLine:
    - chmod 0755 /docker-setup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /docker-setup.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/mysql/data
  - Name: expose
    Ports:
    - "3306"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - chmod 0755 /docker-entrypoint.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run.sh
    - /entrypoint.sh
  - CmdLine:
    - chmod 0755 /entrypoint.sh
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - wait-for-it.sh
    - /
  - CmdLine:
    - chmod 0755 /wait-for-it.sh
    Name: run
    PrependShell: true
  - Name: user
    User: "999"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
