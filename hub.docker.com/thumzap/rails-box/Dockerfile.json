{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:trusty",
      "SourceCode": "FROM ubuntu:trusty",
      "Platform": "",
      "From": {
        "Image": "ubuntu:trusty"
      },
      "Commands": [
        {
          "Maintainer": "Barak Peleg \u003cbarak@thumzap.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "INITRD",
              "Value": "No"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get upgrade -y \u0026\u0026     apt-get install -y --no-install-recommends       vim.tiny wget curl sudo net-tools pwgen       git-core logrotate software-properties-common \u0026\u0026     locale-gen en_US en_US.UTF-8 \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y -q --no-install-recommends         postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3 postgresql-server-dev-9.3 \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     sed -i '1s/^/local    all    postgres        md5\\n/' /etc/postgresql/9.3/main/pg_hba.conf \u0026\u0026    echo \"host    all    all    0.0.0.0/0    md5\" \u003e\u003e /etc/postgresql/9.3/main/pg_hba.conf \u0026\u0026     echo \"listen_addresses='*'\" \u003e\u003e /etc/postgresql/9.3/main/postgresql.conf  \u0026\u0026     rm -rf /var/lib/postgresql/9.3/main \u0026\u0026     update-rc.d -f postgresql disable"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /var/run/postgresql/9.3-main.pg_stat_tmp \u0026\u0026     chown postgres.postgres /var/run/postgresql/9.3-main.pg_stat_tmp -R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/postgresql"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5432"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install --no-install-recommends -y redis-server \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     update-rc.d -f redis-server disable \u0026\u0026     sed -i 's/^\\(bind .*\\)$/# \\1/' /etc/redis/redis.conf \u0026\u0026     sed -i 's/^\\(daemonize .*\\)$/# \\1/' /etc/redis/redis.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/redis"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6379"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     gpg --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3 \u0026\u0026     apt-get install -y nodejs \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo 'export rvm_prefix=\"$HOME\"' \u003e /root/.rvmrc \u0026\u0026     echo 'export rvm_path=\"$HOME/.rvm\"' \u003e\u003e /root/.rvmrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "\\curl -ksSL https://get.rvm.io | bash -s stable --ruby"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash -l -c \"gem install bundler --no-ri --no-rdoc\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/rvm/bin:/usr/local/rvm/rubies/default/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/bin/bash -l -c  \"rvm get stable \u0026\u0026     rvm install 2.2.0 --verify-downloads 1 \u0026\u0026     rvm use 2.2.0\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y openssh-server \u0026\u0026     mkdir /var/run/sshd \u0026\u0026     echo 'root:password' | chpasswd \u0026\u0026     sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NOTVISIBLE",
              "Value": "\"in users profile\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"export VISIBLE=now\" \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "22"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "/usr/local/bin/run.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}