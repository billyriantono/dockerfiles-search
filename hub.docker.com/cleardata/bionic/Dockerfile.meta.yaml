MetaArgs: null
Stages:
- As: consul-source
  BaseName: consul:1.4.4
  Commands: null
  From:
    Image: consul:1.4.4
  Name: consul-source
  Platform: ""
  SourceCode: FROM consul:1.4.4 as consul-source
- As: docker-source
  BaseName: docker:18.06.1-ce
  Commands: null
  From:
    Image: docker:18.06.1-ce
  Name: docker-source
  Platform: ""
  SourceCode: FROM docker:18.06.1-ce as docker-source
- As: terraform-0.11
  BaseName: hashicorp/terraform:0.11.14
  Commands: null
  From:
    Image: hashicorp/terraform:0.11.14
  Name: terraform-0.11
  Platform: ""
  SourceCode: FROM hashicorp/terraform:0.11.14 as terraform-0.11
- As: terraform-0.12
  BaseName: hashicorp/terraform:0.12.16
  Commands: null
  From:
    Image: hashicorp/terraform:0.12.16
  Name: terraform-0.12
  Platform: ""
  SourceCode: FROM hashicorp/terraform:0.12.16 as terraform-0.12
- As: packer-source
  BaseName: hashicorp/packer:1.4.4
  Commands: null
  From:
    Image: hashicorp/packer:1.4.4
  Name: packer-source
  Platform: ""
  SourceCode: FROM hashicorp/packer:1.4.4 as packer-source
- As: vault-source
  BaseName: vault:1.2.3
  Commands: null
  From:
    Image: vault:1.2.3
  Name: vault-source
  Platform: ""
  SourceCode: FROM vault:1.2.3 as vault-source
- As: cloudsqlproxy-source
  BaseName: gcr.io/cloudsql-docker/gce-proxy:1.16
  Commands: null
  From:
    Image: gcr.io/cloudsql-docker/gce-proxy:1.16
  Name: cloudsqlproxy-source
  Platform: ""
  SourceCode: FROM gcr.io/cloudsql-docker/gce-proxy:1.16 as cloudsqlproxy-source
- BaseName: ubuntu:18.04
  Commands:
  - CmdLine:
    - apt-get -q update &&     DEBIAN_FRONTEND=noninteractive apt-get -q install -y                                    apt-transport-https                                    bind9-host                                    ca-certificates                                    curl                                    dnsutils                                    gettext-base                                    git                                    iputils-ping                                    jq                                    libssl-dev                                    openssh-client                                    python-paramiko                                    python-pip                                    python-pytest                                   python3-paramiko                                    python3-pip                                    python3-pytest                                    wget                                    zip                                    unzip                                    uuid-runtime
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - apt/*
    - /tmp/apt/
  - CmdLine:
    - for i in /tmp/apt/*.key; do apt-key add $i; done &&     cp /tmp/apt/*.list /etc/apt/sources.list.d
      &&     rm -rf /tmp/apt &&     apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/pip --no-cache-dir install awscli awsrequests testinfra &&     /usr/bin/pip3
      --no-cache-dir install awscli awsrequests testinfra
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOROOT
      Value: /usr/local/go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:$GOROOT/bin:$PATH
    Name: env
  - Env:
    - Key: go_ver
      Value: 1.13.3
    Name: env
  - Env:
    - Key: go_sha256
      Value: 0804bf02020dceaa8a7d7275ee79f7a142f1996bfd0c39216ccb405f93f994c0
    Name: env
  - CmdLine:
    - cd root &&     wget https://dl.google.com/go/go${go_ver}.linux-amd64.tar.gz
      &&     echo "${go_sha256} go${go_ver}.linux-amd64.tar.gz" > sha256sums &&     (sha256sum
      -c sha256sums --strict) &&     tar -C /usr/local -xvf go${go_ver}.linux-amd64.tar.gz
      &&     rm go${go_ver}.linux-amd64.tar.gz &&     go get -u golang.org/x/lint/golint
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - aws-sudo/aws-sudo.sh
    - /usr/local/bin/aws-sudo.sh
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get -q install -y google-cloud-sdk                                                          kubectl
      &&     gcloud config set core/disable_usage_reporting true &&     gcloud config
      set component_manager/disable_update_check true
    Name: run
    PrependShell: true
  - Env:
    - Key: gcr_cred_helper_ver
      Value: 1.4.3
    Name: env
  - Env:
    - Key: gcr_cred_helper_sha256
      Value: 0630f744a5f42bf14e5986c959f32c5770a1f32d50ba055bd98353c7d18292d3
    Name: env
  - CmdLine:
    - curl -L -o /root/gcrhelper.tar.gz https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${gcr_cred_helper_ver}-static/docker-credential-gcr_linux_amd64-${gcr_cred_helper_ver}.tar.gz
      &&     echo "${gcr_cred_helper_sha256} gcrhelper.tar.gz" > /root/sha256sums
      &&     (cd /root; sha256sum -c sha256sums --strict) &&     tar zxvf /root/gcrhelper.tar.gz
      -C /root &&     install /root/docker-credential-gcr /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest
      &&     echo "$(curl -s https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest.md5)
      /usr/local/bin/ecs-cli" | md5sum -c - &&     chmod +x /usr/local/bin/ecs-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir tmp-helm &&     cd tmp-helm &&     curl -o "./helm-v3.0.2-linux-amd64.tar.gz"
      "https://get.helm.sh/helm-v3.0.2-linux-amd64.tar.gz" &&     echo "c6b7aa7e4ffc66e8abb4be328f71d48c643cb8f398d95c74d075cfb348710e1d
      helm-v3.0.2-linux-amd64.tar.gz" > sha256sums &&     sha256sum -c sha256sums
      --strict &&     tar -zxvf helm-v3.0.2-linux-amd64.tar.gz &&     mv linux-amd64/helm  /usr/local/bin/
      &&     rm -rf ../tmp-helm
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "send-metrics = false" > /etc/npmrc &&     DEBIAN_FRONTEND=noninteractive
      apt-get install -y nodejs yarn &&     npm install npm --global
    Name: run
    PrependShell: true
  - Chown: ""
    From: consul-source
    Name: copy
    SourcesAndDest:
    - /bin/consul
    - /usr/local/bin/consul
  - Chown: ""
    From: docker-source
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/docker
    - /usr/local/bin/docker
  - Chown: ""
    From: packer-source
    Name: copy
    SourcesAndDest:
    - /bin/packer
    - /usr/local/bin/packer
  - Chown: ""
    From: vault-source
    Name: copy
    SourcesAndDest:
    - /bin/vault
    - /usr/local/bin/vault
  - Chown: ""
    From: terraform-0.11
    Name: copy
    SourcesAndDest:
    - /bin/terraform
    - /usr/local/bin/terraform
  - CmdLine:
    - ln -s /usr/local/bin/terraform /usr/local/bin/terraform-0.11
    Name: run
    PrependShell: true
  - Chown: ""
    From: terraform-0.12
    Name: copy
    SourcesAndDest:
    - /bin/terraform
    - /usr/local/bin/terraform-0.12
  - Chown: ""
    From: cloudsqlproxy-source
    Name: copy
    SourcesAndDest:
    - /cloud_sql_proxy
    - /usr/local/bin/cloud_sql_proxy
  - Env:
    - Key: CHECKPOINT_DISABLE
      Value: "1"
    Name: env
  - CmdLine:
    - rm -rf /root/* /tmp/* /google-cloud-sdk/.install/.backup
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
