MetaArgs: null
Stages:
- BaseName: buildpack-deps:jessie
  Commands:
  - CmdLine:
    - sed -i 's/archive.ubuntu.com/mirror.aarnet.edu.au\/pub\/ubuntu\/archive/g' /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update && apt-get install -y libmicrohttpd-dev     libjansson-dev     libnice-dev     libssl-dev     libsrtp-dev     libsofia-sip-ua-dev     libglib2.0-dev     libopus-dev     libogg-dev     libini-config-dev     libcollection-dev     libconfig-dev     pkg-config     gengetopt     libtool     automake     build-essential     subversion     git     cmake     unzip     zip     lsof
      wget vim sudo rsync cron mysql-client openssh-server supervisor locate
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir ~/ffmpeg_sources
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get -y install autoconf automake build-essential libass-dev
      libfreetype6-dev     libsdl1.2-dev libtheora-dev libtool libva-dev libvdpau-dev
      libvorbis-dev libxcb1-dev libxcb-shm0-dev     libxcb-xfixes0-dev pkg-config
      texinfo zlib1g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - YASM="1.3.0" && cd ~/ffmpeg_sources &&     wget http://www.tortall.net/projects/yasm/releases/yasm-$YASM.tar.gz
      &&     tar xzvf yasm-$YASM.tar.gz &&     cd yasm-$YASM &&     ./configure --prefix="$HOME/ffmpeg_build"
      --bindir="$HOME/bin"  &&     make &&     make install &&     make distclean
    Name: run
    PrependShell: true
  - CmdLine:
    - VPX="1.5.0" && cd ~/ffmpeg_sources &&     wget http://storage.googleapis.com/downloads.webmproject.org/releases/webm/libvpx-1.5.0.tar.bz2
      &&     tar xjvf libvpx-$VPX.tar.bz2 &&     cd libvpx-$VPX &&     PATH="$HOME/bin:$PATH"
      ./configure --prefix="$HOME/ffmpeg_build" --disable-examples --disable-unit-tests
      &&     PATH="$HOME/bin:$PATH" make &&     make install &&     make clean
    Name: run
    PrependShell: true
  - CmdLine:
    - OPUS="1.3" && cd ~/ffmpeg_sources &&     wget http://downloads.xiph.org/releases/opus/opus-$OPUS.tar.gz
      &&     tar xzvf opus-$OPUS.tar.gz &&     cd opus-$OPUS &&     ./configure --help
      &&     ./configure --prefix="$HOME/ffmpeg_build"  &&     make &&     make install
      &&     make clean
    Name: run
    PrependShell: true
  - CmdLine:
    - LAME="3.100" && apt-get install -y nasm  && cd ~/ffmpeg_sources &&     wget
      http://downloads.sourceforge.net/project/lame/lame/$LAME/lame-$LAME.tar.gz &&     tar
      xzvf lame-$LAME.tar.gz &&     cd lame-$LAME &&     ./configure --prefix="$HOME/ffmpeg_build"
      --enable-nasm --disable-shared &&     make &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - X264="20181001-2245-stable" && cd ~/ffmpeg_sources &&     wget http://download.videolan.org/pub/x264/snapshots/x264-snapshot-$X264.tar.bz2
      &&     tar xjvf x264-snapshot-$X264.tar.bz2 &&     cd x264-snapshot-$X264 &&     PATH="$HOME/bin:$PATH"
      ./configure --prefix="$HOME/ffmpeg_build" --bindir="$HOME/bin" --enable-static
      --disable-opencl --disable-asm &&     PATH="$HOME/bin:$PATH" make &&     make
      install &&     make distclean
    Name: run
    PrependShell: true
  - CmdLine:
    - FDK_AAC="0.1.4" && cd ~/ffmpeg_sources &&     wget -O fdk-aac.tar.gz https://github.com/mstorsjo/fdk-aac/archive/v$FDK_AAC.tar.gz
      &&     tar xzvf fdk-aac.tar.gz &&     cd fdk-aac-$FDK_AAC &&     autoreconf
      -fiv &&     ./configure --prefix="$HOME/ffmpeg_build" --disable-shared &&     make
      &&     make install &&     make distclean
    Name: run
    PrependShell: true
  - CmdLine:
    - FFMPEG_VER="n4.0.2" && cd ~/ffmpeg_sources &&     wget https://github.com/FFmpeg/FFmpeg/archive/$FFMPEG_VER.zip
      &&     unzip $FFMPEG_VER.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - FFMPEG_VER="n4.0.2" && cd ~/ffmpeg_sources &&     cd FFmpeg-$FFMPEG_VER &&     PATH="$HOME/bin:$PATH"
      PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure     --prefix="$HOME/ffmpeg_build"     --pkg-config-flags="--static"     --extra-cflags="-I$HOME/ffmpeg_build/include"     --extra-ldflags="-L$HOME/ffmpeg_build/lib"     --bindir="$HOME/bin"     --enable-gpl     --enable-libass     --enable-libfdk-aac     --enable-libfreetype     --enable-libmp3lame     --enable-libopus     --enable-libtheora     --enable-libvorbis     --enable-libvpx     --enable-libx264     --enable-nonfree     --enable-libxcb     --enable-libpulse     --enable-alsa
      &&     PATH="$HOME/bin:$PATH" make &&     make install &&     make distclean
      &&     hash -r &&     mv ~/bin/ffmpeg /usr/local/bin/
    Name: run
    PrependShell: true
  - CmdLine:
    - ZLIB="zlib-1.2.11" && vNGRTMP="v1.1.11" && PCRE="8.41" && nginx_build=/root/nginx
      && mkdir $nginx_build &&     cd $nginx_build &&     wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-$PCRE.tar.gz
      &&     tar -zxf pcre-$PCRE.tar.gz &&     cd pcre-$PCRE &&     ./configure &&
      make && make install &&     cd $nginx_build &&     wget http://zlib.net/$ZLIB.tar.gz
      &&     tar -zxf $ZLIB.tar.gz &&     cd $ZLIB &&     ./configure && make &&  make
      install &&     cd $nginx_build &&     wget https://github.com/arut/nginx-rtmp-module/archive/$vNGRTMP.tar.gz
      &&     tar zxf $vNGRTMP.tar.gz && mv nginx-rtmp-module-* nginx-rtmp-module
    Name: run
    PrependShell: true
  - CmdLine:
    - OPENRESTY="1.13.6.1" && ZLIB="zlib-1.2.11" && PCRE="pcre-8.41" &&  openresty_build=/root/openresty
      && mkdir $openresty_build &&     wget https://openresty.org/download/openresty-$OPENRESTY.tar.gz
      &&     tar zxf openresty-$OPENRESTY.tar.gz &&     cd openresty-$OPENRESTY &&     nginx_build=/root/nginx
      &&     ./configure --sbin-path=/usr/local/nginx/nginx     --conf-path=/usr/local/nginx/nginx.conf      --pid-path=/usr/local/nginx/nginx.pid     --with-pcre-jit     --with-ipv6     --with-pcre=$nginx_build/$PCRE     --with-zlib=$nginx_build/$ZLIB     --with-http_ssl_module     --with-stream     --with-mail=dynamic     --add-module=$nginx_build/nginx-rtmp-module
      &&     make && make install && mv /usr/local/nginx/nginx /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update && apt-get install -y --no-install-recommends         g++         gcc         libc6-dev         make         pkg-config     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.7.5
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_URL
      Value: https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz
    Name: env
  - Env:
    - Key: GOLANG_DOWNLOAD_SHA256
      Value: 2e4dd6c44f0693bef4e7b46cc701513d74c3cc44f2419bf519d7868b12931ac3
    Name: env
  - CmdLine:
    - curl -fsSL "$GOLANG_DOWNLOAD_URL" -o golang.tar.gz     && echo "$GOLANG_DOWNLOAD_SHA256  golang.tar.gz"
      | sha256sum -c -     && tar -C /usr/local -xzf golang.tar.gz     && rm golang.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://boringssl.googlesource.com/boringssl &&     cd boringssl &&     git
      reset --hard c7db3232c397aa3feb1d474d63a1c4dd674b6349 &&     sed -i s/" -Werror"//g
      CMakeLists.txt &&     mkdir -p build  &&     cd build  &&     cmake -DCMAKE_CXX_FLAGS="-lrt"
      ..  &&     make  &&     cd ..  &&     sudo mkdir -p /opt/boringssl  &&     sudo
      cp -R include /opt/boringssl/  &&     sudo mkdir -p /opt/boringssl/lib  &&     sudo
      cp build/ssl/libssl.a /opt/boringssl/lib/  &&     sudo cp build/crypto/libcrypto.a
      /opt/boringssl/lib/
    Name: run
    PrependShell: true
  - CmdLine:
    - LIBWEBSOCKET="3.1.0" && wget https://github.com/warmcat/libwebsockets/archive/v$LIBWEBSOCKET.tar.gz
      &&     tar xzvf v$LIBWEBSOCKET.tar.gz &&     cd libwebsockets-$LIBWEBSOCKET
      &&     mkdir build &&     cd build &&     cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr
      -DCMAKE_C_FLAGS="-fpic" -DLWS_MAX_SMP=1 -DLWS_IPV6="ON" .. &&     make && make
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - SRTP="2.2.0" && apt-get remove -y libsrtp0-dev && wget https://github.com/cisco/libsrtp/archive/v$SRTP.tar.gz
      &&     tar xfv v$SRTP.tar.gz &&     cd libsrtp-$SRTP &&     ./configure --prefix=/usr
      --enable-openssl &&     make shared_library && sudo make install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove -y libnice-dev libnice10 &&     echo "deb http://ftp.debian.org/debian
      jessie-backports main" >> /etc/apt/sources.list &&     apt-get update &&     apt-get
      install -y gtk-doc-tools libgnutls28-dev -t jessie-backports  &&     apt-get
      install -y libglib2.0-0 -t jessie-backports &&     git clone https://gitlab.freedesktop.org/libnice/libnice.git
      &&     cd libnice &&     git checkout 67807a17ce983a860804d7732aaf7d2fb56150ba
      &&     bash autogen.sh &&     ./configure --prefix=/usr &&     make &&     make
      install
    Name: run
    PrependShell: true
  - CmdLine:
    - COTURN="4.5.0.8" && wget https://github.com/coturn/coturn/archive/$COTURN.tar.gz
      &&     tar xzvf $COTURN.tar.gz &&     cd coturn-$COTURN &&     ./configure &&     make
      && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / && git clone https://github.com/sctplab/usrsctp.git && cd /usrsctp &&     git
      checkout origin/master && git reset --hard 1c9c82fbe3582ed7c474ba4326e5929d12584005
      &&     ./bootstrap &&     ./configure &&     make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cd / && git clone https://github.com/meetecho/janus-gateway.git && cd /janus-gateway
      &&     sh autogen.sh &&      git checkout origin/master && git reset --hard
      ddbf37fef43ade61d73173c7661a2449c13582d4 &&     PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig"
      ./configure     --enable-post-processing     --enable-boringssl     --enable-data-channels     --disable-rabbitmq     --disable-mqtt     --disable-unix-sockets     --enable-dtls-settimeout     --enable-plugin-echotest     --enable-plugin-recordplay     --enable-plugin-sip     --enable-plugin-videocall     --enable-plugin-voicemail     --enable-plugin-textroom     --enable-plugin-audiobridge     --enable-plugin-nosip     --enable-all-handlers
      &&     make && make install && make configs && ldconfig
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /usr/local/nginx/nginx.conf
  - CmdLine:
    - nginx && janus
    Name: cmd
    PrependShell: true
  From:
    Image: buildpack-deps:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM buildpack-deps:jessie
