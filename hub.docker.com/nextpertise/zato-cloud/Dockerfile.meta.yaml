MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Anielkis Herrera <aherrera@zato.io>, Dariusz Suchojad <dsuch@zato.io>"'
    Name: label
  - Labels:
    - Key: Description
      Value: '"Zato''s Docker image for cloud environments"'
    - Key: Version
      Value: '"3.1.0"'
    Name: label
  - Env:
    - Key: ZATO_BIN
      Value: /opt/zato/current/bin/zato
    Name: env
  - Key: zato_py_version
    Name: arg
    Value: null
  - CmdLine:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y     apt-transport-https     curl     git     libcurl4-openssl-dev     software-properties-common     supervisor     tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository universe
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://zato.io/repo/zato-3.1-C9B13DF28CFE287D.pgp.txt | apt-key add
      -
    Name: run
    PrependShell: true
  - Env:
    - Key: ZATO_PY_VERSION
      Value: $zato_py_version
    Name: env
  - CmdLine:
    - add-apt-repository "deb [arch=amd64] https://zato.io/repo/stable/3.1/${ZATO_PY_VERSION:-py3}/ubuntu
      $(lsb_release -cs) main" && apt-get update && apt-get install -y zato
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKERIZE_VERSION
      Value: v0.11.0
    Name: env
  - CmdLine:
    - curl -sfL https://github.com/powerman/dockerize/releases/download/${DOCKERIZE_VERSION}/dockerize-`uname
      -s`-`uname -m` | install /dev/stdin /usr/local/bin/dockerize
    Name: run
    PrependShell: true
  - Env:
    - Key: TINI_VERSION
      Value: v0.18.0
    Name: env
  - CmdLine:
    - curl -sfL https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini
      | install /dev/stdin /tini
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.11"
    Name: env
  - CmdLine:
    - set -x     && apt-get update && apt-get install -y --no-install-recommends ca-certificates
      wget && rm -rf /var/lib/apt/lists/*     && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)"     && chmod +x /usr/local/bin/gosu     && gosu nobody
      true
    Name: run
    PrependShell: true
  - Env:
    - Key: PG_MAJOR
      Value: "10"
    Name: env
  - Env:
    - Key: PGBINPATH
      Value: /usr/lib/postgresql/$PG_MAJOR/bin
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$PGBINPATH
    Name: env
  - Env:
    - Key: PGDATA
      Value: /var/lib/postgresql/data
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y postgresql-client && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/zato/current
  - CmdLine:
    - git checkout -- ./requirements.txt && ./update.sh && mkdir -p /var/log/supervisor
      /var/run/sshd/
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - configset.py
    - /usr/local/bin/configset.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hotdeploy-utility.sh
    - /opt/zato/hotdeploy-utility.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - enmasse-utility.sh
    - /opt/zato/enmasse-utility.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - zato.conf
    - /etc/supervisor/conf.d/zato.conf
  - CmdLine:
    - chmod 755 /usr/local/bin/configset.py /entrypoint.sh /opt/zato/hotdeploy-utility.sh
      /opt/zato/enmasse-utility.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "11223"
    - "17010"
    - "17011"
    - "8183"
  - CmdLine:
    - /tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
