MetaArgs:
- DefaultValue: '"11.35.15"'
  Key: ZULU_VERSION
  ProvidedValue: null
  Value: '"11.35.15"'
- DefaultValue: '"11.0.5"'
  Key: JDK_VERSION
  ProvidedValue: null
  Value: '"11.0.5"'
- DefaultValue: '"cef8591c619a4bec06a94d0f7e21847b04b97468a8385b6683b3c5fa2641ab57"'
  Key: SHA256SUM
  ProvidedValue: null
  Value: '"cef8591c619a4bec06a94d0f7e21847b04b97468a8385b6683b3c5fa2641ab57"'
- DefaultValue: '"zulu${ZULU_VERSION}-ca-jdk${JDK_VERSION}-linux_musl_x64.tar.gz"'
  Key: ZULU_ARCH
  ProvidedValue: null
  Value: '"zulu${ZULU_VERSION}-ca-jdk${JDK_VERSION}-linux_musl_x64.tar.gz"'
- DefaultValue: '"/usr/lib/jvm/zulu-11"'
  Key: JAVA_HOME
  ProvidedValue: null
  Value: '"/usr/lib/jvm/zulu-11"'
- DefaultValue: '"https://cdn.azul.com/zulu/bin/${ZULU_ARCH}"'
  Key: JAVA_URL
  ProvidedValue: null
  Value: '"https://cdn.azul.com/zulu/bin/${ZULU_ARCH}"'
- DefaultValue: '"1.3.6"'
  Key: SBT_VERSION
  ProvidedValue: null
  Value: '"1.3.6"'
- DefaultValue: '"2.13.1"'
  Key: SCALA_VERSION
  ProvidedValue: null
  Value: '"2.13.1"'
- DefaultValue: '"0.9.1"'
  Key: ALMOND_VERSION
  ProvidedValue: null
  Value: '"0.9.1"'
- DefaultValue: '"0.4.0"'
  Key: IERL_VERSION
  ProvidedValue: null
  Value: '"0.4.0"'
- DefaultValue: '"0.4.6"'
  Key: EVCXR_VERSION
  ProvidedValue: null
  Value: '"0.4.6"'
Stages:
- As: downloader
  BaseName: alpine:3
  Commands:
  - Key: SHA256SUM
    Name: arg
    Value: null
  - Key: ZULU_ARCH
    Name: arg
    Value: null
  - Key: JAVA_HOME
    Name: arg
    Value: null
  - Key: JAVA_URL
    Name: arg
    Value: null
  - Key: SBT_VERSION
    Name: arg
    Value: null
  - Key: IERL_VERSION
    Name: arg
    Value: null
  - Key: EVCXR_VERSION
    Name: arg
    Value: null
  - CmdLine:
    - apk --update add --no-cache --virtual .build-deps     curl     gnupg     xz  &&
      rm -rf /var/cache/apk/*  && INSTALL_DIR=$( dirname ${JAVA_HOME} )  && ZULU_DIR=$(
      basename ${ZULU_ARCH} .tar.gz )  && curl -Lso ${ZULU_ARCH} ${JAVA_URL}  && mkdir
      -p ${INSTALL_DIR}  && echo "${SHA256SUM}  ${ZULU_ARCH}" | sha256sum -c -  &&
      tar -xf ./${ZULU_ARCH} -C ${INSTALL_DIR}  && rm -f ${ZULU_ARCH}  && mv ${INSTALL_DIR}/${ZULU_DIR}
      ${JAVA_HOME}  && curl -sL "https://github.com/sbt/sbt/releases/download/v${SBT_VERSION}/sbt-${SBT_VERSION}.tgz"
      | tar -xz -C /usr/local  && cd /tmp  && curl -sL "https://github.com/google/evcxr/archive/v${EVCXR_VERSION}.tar.gz"
      | tar -xz -C /tmp  && mv /tmp/evcxr-${EVCXR_VERSION} /tmp/evcxr  && wget https://github.com/filmor/ierl/releases/download/v${IERL_VERSION}/ierl
    Name: run
    PrependShell: true
  From:
    Image: alpine:3
  Name: downloader
  Platform: ""
  SourceCode: FROM alpine:3 AS downloader
- BaseName: alpine:3
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Kenji Saito<ken-yo@mbr.nifty.com>"'
    Name: label
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Key: ZULU_VERSION
    Name: arg
    Value: null
  - Key: JDK_VERSION
    Name: arg
    Value: null
  - Key: SHA256SUM
    Name: arg
    Value: null
  - Key: ZULU_ARCH
    Name: arg
    Value: null
  - Key: JAVA_HOME
    Name: arg
    Value: null
  - Key: SBT_VERSION
    Name: arg
    Value: null
  - Key: SCALA_VERSION
    Name: arg
    Value: null
  - Key: ALMOND_VERSION
    Name: arg
    Value: null
  - Key: IERL_VERSION
    Name: arg
    Value: null
  - Key: USER_NAME
    Name: arg
    Value: '"jupyter"'
  - Key: USER_HOME
    Name: arg
    Value: /home/${USER_NAME}
  - CmdLine:
    - 'echo "SBT_VERSION: ${SBT_VERSION}"  && echo "SCALA_VERSION: ${SCALA_VERSION}"  &&
      echo "ALMOND_VERSION: ${ALMOND_VERSION}"  && echo "IERL_VERSION: ${IERL_VERSION}"  &&
      echo "ZULU_VERSION: ${ZULU_VERSION}"  && echo "JDK_VERSION: ${JDK_VERSION}"  &&
      echo "ZULU_ARCH: ${ZULU_ARCH}"'
    Name: run
    PrependShell: true
  - Env:
    - Key: SBT_HOME
      Value: /usr/local/sbt
    - Key: LANGUAGE
      Value: en_US:en
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: JAVA_HOME
      Value: ${JAVA_HOME}
    - Key: CC
      Value: /usr/bin/clang
    - Key: CXX
      Value: /usr/bin/clang++
    - Key: PATH
      Value: ${PATH}:${SBT_HOME}/bin:/root/.cargo/bin:/usr/local/bin:${USER_HOME}/.mix/:${USER_HOME}/.ierl:${JAVA_HOME}/bin
    Name: env
  - CmdLine:
    - addgroup -g 1000 -S ${USER_NAME}  && adduser -u 1000 -S  ${USER_NAME} -G ${USER_NAME}
    Name: run
    PrependShell: true
  - Name: user
    User: ${USER_NAME}
  - Env:
    - Key: SBT_HOME
      Value: /usr/local/sbt
    - Key: LANGUAGE
      Value: en_US:en
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/zulu-11
    - Key: CC
      Value: /usr/bin/clang
    - Key: CXX
      Value: /usr/bin/clang++
    - Key: PATH
      Value: ${USER_HOME}/.local/bin:${PATH}:${SBT_HOME}/bin:/${USER_HOME}/.cargo/bin:/usr/local/bin:Â¥${USER_HOME}/.mix/:${USER_HOME}/.ierl:${JAVA_HOME}/bin
    Name: env
  - Name: user
    User: root
  - Name: workdir
    Path: /tmp
  - Key: BIN_DIR
    Name: arg
    Value: /usr/bin
  - Key: MAN_DIR
    Name: arg
    Value: /usr/share/man/man1
  - Chown: ""
    From: downloader
    Name: copy
    SourcesAndDest:
    - ${JAVA_HOME}
    - ${JAVA_HOME}
  - Chown: ""
    From: downloader
    Name: copy
    SourcesAndDest:
    - ${SBT_HOME}
    - ${SBT_HOME}
  - CmdLine:
    - apk --update add --no-cache --virtual .build-deps     binutils-gold     linux-headers     make     clang     clang-libs     clang-static     libstdc++     gnupg     libssl1.1     python3     python3-dev     erlang     elixir     nodejs     yarn     npm     libzmq     czmq-dev     py3-pyzmq     git     rust     rust-analysis     cargo     cargo-bash-completions     libffi-dev     openssl-dev     cmake     build-base     zlib     bash     m4     rsync     freetype-dev     libpng-dev     alpine-sdk     diffutils     libxml2-dev     libxslt-dev     xz  &&
      rm -rf /var/cache/apk/*  && cd ${BIN_DIR}  && find ${JAVA_HOME}/bin -type f
      -perm -a=x -exec ln -s {} . \;  && mkdir -p ${MAN_DIR}  && cd ${MAN_DIR}  &&
      find ${JAVA_HOME}/man/man1 -type f -name "*.1" -exec ln -s {} . \;  && npm install
      -g configurable-http-proxy  && pip3 install -U setuptools  && pip3 install -U
      pip
    Name: run
    PrependShell: true
  - Chown: 1000:1000
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/tmp/requirements.txt
    - /tmp/requirements.txt
  - Chown: 1000:1000
    From: downloader
    Name: copy
    SourcesAndDest:
    - /tmp/evcxr
    - /tmp/evcxr
  - Chown: 1000:1000
    From: downloader
    Name: copy
    SourcesAndDest:
    - /tmp/ierl
    - ${USER_HOME}/ierl
  - Name: user
    User: ${USER_NAME}
  - CmdLine:
    - pip install --user -r /tmp/requirements.txt  && jupyter serverextension enable
      --py jupyterlab  && jupyter nbextension enable --py widgetsnbextension  && jupyter
      notebook --generate-config --allow-root  && rm -f /tmp/requirements.txt  &&
      cd /tmp  && git clone https://github.com/almond-sh/almond.git &&     cd almond/project
      &&     mv build.properties build.properties.bak &&     sed -e "s/1\.3\.2/${SBT_VERSION}/g"
      build.properties.bak > build.properties &&     rm -f build.properties.bak &&     cd
      ../ &&     bash scripts/coursier.sh bootstrap         -r jitpack         -i
      user -I user:sh.almond:scala-kernel-api_${SCALA_VERSION}:${ALMOND_VERSION}         sh.almond:scala-kernel_${SCALA_VERSION}:${ALMOND_VERSION}         -o
      almond &&     ./almond --install  && cd /tmp  && cd evcxr/evcxr_jupyter  &&
      cargo install evcxr_jupyter  && evcxr_jupyter --install   && cd /tmp  && git
      clone https://github.com/ligee/kotlin-jupyter.git  && cd /tmp/kotlin-jupyter  &&
      mv build.gradle build.gradle.bak  && sed -e "s/'1\.2\.21'/'1.3.61'/g" build.gradle.bak
      > build.gradle  && mv gradle/wrapper/gradle-wrapper.properties gradle/wrapper/gradle-wrapper.properties.bak  &&
      sed -e "s/5\.6\.2/6.0.1/g" gradle/wrapper/gradle-wrapper.properties.bak > gradle/wrapper/gradle-wrapper.properties  &&
      ./gradlew install  && cd ${USER_HOME}  && chmod u+x ierl  && ./ierl install
      elixir --user  && ./ierl install lfe --user  && ./ierl install erlang --user  &&
      mkdir -p ${USER_HOME}/.jupyter  && mkdir -p ${USER_HOME}/notebook  && chown
      -R ${USER_NAME}:${USER_NAME} ${USER_HOME}  && rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Chown: 1000:1000
    From: ""
    Name: copy
    SourcesAndDest:
    - assets/root/.jupyter/jupyter_notebook_config.py
    - ${USER_HOME}/.jupyter/jupyter_notebook_config.py
  - Name: workdir
    Path: ${USER_HOME}/notebook
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - jupyter
    - lab
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3
