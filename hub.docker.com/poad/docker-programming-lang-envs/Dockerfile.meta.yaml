MetaArgs:
- DefaultValue: '"3.11.2"'
  Key: PROTOCOL_BUFFERS_VERSION
  ProvidedValue: null
  Value: '"3.11.2"'
Stages:
- As: download
  BaseName: buildpack-deps:stable-curl
  Commands:
  - Key: PROTOCOL_BUFFERS_VERSION
    Name: arg
    Value: null
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - curl -sSLo /tmp/llvm-snapshot.gpg.key https://apt.llvm.org/llvm-snapshot.gpg.key  &&
      curl -sSLo /tmp/protobuf-all-${PROTOCOL_BUFFERS_VERSION}.tar.gz https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOCOL_BUFFERS_VERSION}/protobuf-all-${PROTOCOL_BUFFERS_VERSION}.tar.gz  &&
      tar xf protobuf-all-${PROTOCOL_BUFFERS_VERSION}.tar.gz  && rm -f tar xf protobuf-all-${PROTOCOL_BUFFERS_VERSION}.tar.gz  &&
      mv /tmp/protobuf-${PROTOCOL_BUFFERS_VERSION} /tmp/protobuf
    Name: run
    PrependShell: true
  From:
    Image: buildpack-deps:stable-curl
  Name: download
  Platform: ""
  SourceCode: FROM buildpack-deps:stable-curl AS download
- As: build
  BaseName: rust:slim
  Commands:
  - Key: PROTOCOL_BUFFERS_VERSION
    Name: arg
    Value: null
  - Chown: ""
    From: download
    Name: copy
    SourcesAndDest:
    - /tmp/llvm-snapshot.gpg.key
    - /tmp/llvm-snapshot.gpg.key
  - Chown: ""
    From: download
    Name: copy
    SourcesAndDest:
    - /tmp/protobuf
    - /tmp/protobuf
  - Name: workdir
    Path: /tmp
  - CmdLine:
    - apt-get update -qq  && apt-get install --no-install-recommends -qqy ca-certificates
      gnupg2 binutils apt-utils  && cat /tmp/llvm-snapshot.gpg.key | apt-key add -  &&
      echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main" >> /etc/apt/sources.list.d/llvm-toolchain.list  &&
      apt-get update -qq  && apt-get install -qqy --no-install-recommends         autoconf         automake         libtool         curl         make         clang-9         lld-9         libreadline-dev         libsqlite3-dev         libssl-dev         unzip         zlib1g-dev         pkg-config         g++         gcc         unzip         git         cmake         golang         libpq-dev  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/* /var/log/apt/* /var/log/alternatives.log
      /var/log/dpkg.log /var/log/faillog /var/log/lastlog  && cd /tmp/protobuf  &&
      ./autogen.sh  && ./configure --prefix=/usr  && make  && make check  && make
      install  && ldconfig  && cd /  && rm -rf /tmp/*
    Name: run
    PrependShell: true
  From:
    Image: rust:slim
  Name: build
  Platform: ""
  SourceCode: FROM rust:slim AS build
