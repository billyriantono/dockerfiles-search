{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Maintainer": "Matt Bodenhamer \u003cmbodenhamer@mbodenhamer.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     build-essential     curl     git     libbz2-dev     libncurses5-dev     libncursesw5-dev     libssl-dev     libreadline-dev     libsqlite3-dev     llvm     python-dev     python-pip     wget     zlib1g-dev     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 pip install -U     depman     pip     PyYAML     setuptools     \u0026\u0026 rm -rf .cache/pip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYENVPATH",
              "Value": "$HOME/.pyenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PYENVPATH/shims:$PYENVPATH/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /setup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".bashrc",
            "/root/.bashrc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "Env": [
            {
              "Key": "BE_UID",
              "Value": "1000"
            },
            {
              "Key": "BE_GID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Expression": "ARG reqs=requirements.yml",
          "Name": "onbuild"
        },
        {
          "Expression": "ARG versions=2.7.14,3.6.2",
          "Name": "onbuild"
        },
        {
          "Expression": "ENV PYVERSIONS=$versions",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN pyversions $versions",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY $reqs /setup/requirements.yml",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN depman -f /setup/requirements.yml satisfy all",
          "Name": "onbuild"
        }
      ]
    }
  ]
}