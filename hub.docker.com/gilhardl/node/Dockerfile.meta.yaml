MetaArgs:
- DefaultValue: lts
  Key: NODE_VERSION
  ProvidedValue: null
  Value: lts
Stages:
- BaseName: node:$NODE_VERSION
  Commands:
  - Labels:
    - Key: author
      Value: '"Lucas GILHARD <l.gilhard@gmail.com>"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Docker image for Node.js development"'
    Name: label
  - Name: user
    User: root
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update   && apt-get upgrade -y   && apt-get install -y --no-install-recommends
      apt-utils 2>&1   && apt-get install -y lsb-release   && apt-get install -y bash
      bash-completion   && apt-get install -y curl apt-transport-https wget   && apt-get
      install -y make g++   && sed -i -e "s/bin\/ash/bin\/bash/" /etc/passwd   &&
      echo "PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$
      '" >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --compressed -o- -L https://yarnpkg.com/install.sh | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - npm cache verify   && echo "unsafe-perm = true" >> ~/.npmrc
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get autoremove -y   && apt-get clean -y   && rm -rf /var/lib/apt/lists/*   &&
      rm -rf /tmp/* /var/cache/apt/*   && rm -rf ~/.npm
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: dialog
    Name: env
  - CmdLine:
    - bash
    Name: cmd
    PrependShell: false
  From:
    Image: node:$NODE_VERSION
  Name: ""
  Platform: ""
  SourceCode: FROM node:$NODE_VERSION
