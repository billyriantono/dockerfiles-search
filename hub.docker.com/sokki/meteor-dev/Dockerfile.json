{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Key": "APP_PACKAGES",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "APP_LOCALE",
          "Name": "arg",
          "Value": "en_US"
        },
        {
          "Key": "APP_CHARSET",
          "Name": "arg",
          "Value": "UTF-8"
        },
        {
          "Key": "APP_USER",
          "Name": "arg",
          "Value": "app"
        },
        {
          "Key": "APP_USER_DIR",
          "Name": "arg",
          "Value": "/home/${APP_USER}"
        },
        {
          "Env": [
            {
              "Key": "APP_PORT",
              "Value": "${APP_PORT:-3000}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP_ROOT",
              "Value": "${APP_ROOT:-/app}"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "$APP_PORT"
          ]
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get install -y curl python build-essential locales git ${APP_PACKAGES}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "locale-gen  ${APP_LOCALE}.${APP_CHARSET}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "localedef ${APP_LOCALE}.${APP_CHARSET} -i ${APP_LOCALE} -f ${APP_CHARSET}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd -mUd ${APP_USER_DIR} ${APP_USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -Rh ${APP_USER} /usr/local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $APP_ROOT/.meteor/local \u0026\u0026 chown -Rh ${APP_USER} $APP_ROOT"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "${APP_USER}"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "install.meteor.com.sh",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "/tmp/install.meteor.com.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${APP_ROOT}"
        },
        {
          "Expression": "ARG NPM_TOKEN",
          "Name": "onbuild"
        },
        {
          "Expression": "ENV NODE_ENV=\"development\"",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN if [ -n $NPM_TOKEN ]; then echo \"//registry.npmjs.org/:_authToken=${NPM_TOKEN}\" \u003e\u003e .npmrc; fi",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY package.json package-lock.json $APP_ROOT/",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN meteor npm install",
          "Name": "onbuild"
        },
        {
          "Expression": "RUN rm .npmrc",
          "Name": "onbuild"
        },
        {
          "Expression": "VOLUME [\"${APP_ROOT}\", \"${APP_ROOT}/node_modules/\", \"${APP_ROOT}/.meteor/local/\", \"${APP_ROOT}/.git/\"]",
          "Name": "onbuild"
        },
        {
          "CmdLine": [
            "/usr/local/bin/meteor"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}