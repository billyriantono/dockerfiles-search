{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "arm32v7/debian:buster-slim",
      "SourceCode": "FROM arm32v7/debian:buster-slim AS builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "arm32v7/debian:buster-slim"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "qemu-arm-static",
            "/usr/bin/qemu-arm-static"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends     gcc     g++     make     git     sudo     apt-transport-https     ca-certificates     gnupg2     software-properties-common \u0026\u0026     cd /tmp/ \u0026\u0026     git clone http://github.com/WiringPi/WiringPi.git wiringPi \u0026\u0026     cd wiringPi \u0026\u0026     ./build"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "arm32v7/debian:buster-slim",
      "SourceCode": "FROM arm32v7/debian:buster-slim",
      "Platform": "",
      "From": {
        "Image": "arm32v7/debian:buster-slim"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "qemu-arm-static",
            "/usr/bin/qemu-arm-static"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/lib/libwiringPi*",
            "/usr/lib/"
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/include/wiring*",
            "/usr/include/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y --no-install-recommends     libconfig++-dev     libmysqlcppconn-dev     libi2c-dev     gcc     g++     git     make \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/workdir"
        },
        {
          "CmdLine": [
            "useradd -Ms /bin/bash develop \u0026\u0026 chown develop /workdir"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "develop"
        },
        {
          "CmdLine": [
            "/usr/bin/make"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}