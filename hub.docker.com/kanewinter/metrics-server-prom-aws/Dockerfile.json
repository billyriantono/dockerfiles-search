{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3-slim",
      "SourceCode": "FROM python:3-slim",
      "Platform": "",
      "From": {
        "Image": "python:3-slim"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "prometheus"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GROUP",
              "Value": "prometheus"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APT_BUILD_DEPS",
              "Value": "curl \tg++ \tgcc \tlibnewlib-arm-none-eabi"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APT_RUN_DEPS",
              "Value": "python-pip \tsupervisor"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PIP_RUN_DEPS",
              "Value": "virtualenv \tuwsgi"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install --no-install-recommends --no-install-suggests -y \t\t${APT_BUILD_DEPS} \t\t${APT_RUN_DEPS} \t\u0026\u0026 pip install \t\t${PIP_RUN_DEPS} \t\u0026\u0026 curl -L https://storage.googleapis.com/kubernetes-release/release/$(curl \t\t-s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \t\t-o /usr/bin/kubectl     \u0026\u0026 curl -o /usr/bin/aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/aws-iam-authenticator \t\u0026\u0026 chmod +x /usr/bin/kubectl \t\u0026\u0026 chmod +x /usr/bin/aws-iam-authenticator \t\u0026\u0026 apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \t\t${APT_BUILD_DEPS} \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 groupadd --gid 1000 ${GROUP} \t\u0026\u0026 useradd --gid 1000 --uid 1000 --create-home --shell /bin/bash ${USER}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PIP_RUN_DEPS",
              "Value": "flask \trequests"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "${USER}"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 mkdir /home/${USER}/transform \t\u0026\u0026 cd /home/${USER}/transform \t\u0026\u0026 virtualenv transformenv \t\u0026\u0026 . transformenv/bin/activate \t\u0026\u0026 pip install ${PIP_RUN_DEPS}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "data/src/transform.py",
            "/home/${USER}/transform/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "data/uwsgi/uwsgi.ini",
            "/home/${USER}/transform/"
          ]
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 chown 1000:1000 /home/${USER}/transform/transform.py     \u0026\u0026 chown 1000:1000 /home/${USER}/transform/uwsgi.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "data/supervisord.conf",
            "/etc/supervisor/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "data/docker-entrypoint.sh",
            "/docker-entrypoint.sh"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9100"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}