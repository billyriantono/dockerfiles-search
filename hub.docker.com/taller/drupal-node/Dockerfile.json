{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nginx:latest",
      "SourceCode": "FROM nginx:latest",
      "Platform": "",
      "From": {
        "Image": "nginx:latest"
      },
      "Commands": [
        {
          "Maintainer": "Taller Development Team \u003cdev@taller.net.br\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update -y                   \u0026\u0026 apt-get install -y               bash-completion                     build-essential                     bzip2                               ca-certificates                     curl                                git                                 gzip                                htop                                imagemagick                         libfontconfig1                      libjpeg-dev                         libpng12-dev                        libpq-dev                           locales                             mysql-client                        nano                                netcat                              openconnect                         php-apc                             php5-curl                           php5-fpm                            php5-gd                             php5-geoip                          php5-imagick                        php5-imap                           php5-json                           php5-ldap                           php5-mcrypt                         php5-memcached                      php5-memcache                       php5-mysqlnd                        php5-sqlite                         php5-xdebug                         php5-xmlrpc                         python-software-properties          rsync                               sudo                                ssh                                 tig                                 vim                                 xz-utils                            wget                                --no-install-recommends             \u0026\u0026 apt-get clean                    \u0026\u0026 rm -rf /var/lib/apt/lists/*      \u0026\u0026 rm -rf /tmp/*                    \u0026\u0026 rm -rf /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_DISABLE_XDEBUG_WARN",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php        \u0026\u0026 mv composer.phar /usr/local/bin/composer             \u0026\u0026 composer self-update                                 \u0026\u0026 composer global require \"hirak/prestissimo:^0.3\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/fastcgi.conf",
            "/etc/nginx/fastcgi.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/fpm.conf",
            "/etc/php5/fpm/php-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/www.conf",
            "/etc/php5/fpm/pool.d/www.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/fpm.ini",
            "/etc/php5/fpm/php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/cli.ini",
            "/etc/php5/cli/php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/xdebug.ini",
            "/etc/php5/mods-available/xdebug.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/web",
            "/var/www/drupal"
          ]
        },
        {
          "CmdLine": [
            "echo \"\\n# Start NGINX\\nsudo service nginx start\" \u003e\u003e /etc/bash.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NVM_DIR",
              "Value": "/usr/local/nvm"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "stable"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "${VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash     \u0026\u0026 [ -s \"$NVM_DIR/nvm.sh\" ]                                                             \u0026\u0026 . \"$NVM_DIR/nvm.sh\"                                                                  \u0026\u0026 nvm install ${VERSION}                                                               \u0026\u0026 npm install -g yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"\\n# Source NVM scripts\\nsource $NVM_DIR/nvm.sh\" \u003e\u003e /etc/bash.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sudo chmod a+w -R /usr/local"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}