MetaArgs: null
Stages:
- BaseName: ubuntu:bionic-20191029
  Commands:
  - Maintainer: Ronald Ng "https://github.com/ronalddddd"
    Name: maintainer
  - Key: SSH_PASSWORD
    Name: arg
    Value: null
  - Env:
    - Key: SSH_PASSWORD
      Value: ${SSH_PASSWORD:-happymeal}
    Name: env
  - CmdLine:
    - apt-get update -y && apt-get install -y openssh-server git curl
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "root:$SSH_PASSWORD" | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/\#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      -i /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - echo "export VISIBLE=now" >> /etc/profile
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- https://deb.nodesource.com/setup_10.x | bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install --yes nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g typescript
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g eslint
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /projects
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y vim
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - vimrc
    - /root/.vimrc
  - CmdLine:
    - git clone https://github.com/VundleVim/Vundle.vim.git /root/.vim/bundle/Vundle.vim
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /root/.vim/colors
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/NLKNguyen/papercolor-theme.git /tmp/theme1
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /tmp/theme1/colors/* /root/.vim/colors/.
    Name: run
    PrependShell: true
  - CmdLine:
    - vim +PluginInstall +qall
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential cmake python-dev python3-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - /root/.vim/bundle/YouCompleteMe/install.py --js-completer
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /root/.vim/backup
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y locales
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - update-locale LANG=en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get install -y mosh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y tmux
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - tmux.conf
    - /root/.tmux.conf
  - CmdLine:
    - git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
    Name: run
    PrependShell: true
  - CmdLine:
    - /root/.tmux/plugins/tpm/scripts/install_plugins.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y neofetch
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y zsh fonts-powerline
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    Name: run
    PrependShell: true
  - CmdLine:
    - chsh -s $(which zsh)
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y apt-transport-https
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add
      -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y kubectl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/kubernetes/kompose/releases/download/v1.17.0/kompose-linux-amd64
      -o kompose
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x kompose
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ./kompose /usr/local/bin/kompose
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://github.com/digitalocean/doctl/releases/download/v1.34.0/doctl-1.34.0-linux-amd64.tar.gz
      | tar -xzv
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ./doctl /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://github.com/fluxcd/flux/releases/download/1.16.0/fluxctl_linux_amd64
      > /usr/local/bin/fluxctl
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod u+x /usr/local/bin/fluxctl
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /root/.
  - Name: expose
    Ports:
    - "22"
    - "443"
    - "80"
  - CmdLine:
    - /root/start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic-20191029
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic-20191029
