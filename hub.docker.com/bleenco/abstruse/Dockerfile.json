{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "mhart/alpine-node:10",
      "SourceCode": "FROM mhart/alpine-node:10 as base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "mhart/alpine-node:10"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "18.03.1-ce"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ARCH",
              "Value": "x86_64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --no-cache add openssl     \u0026\u0026 wget https://download.docker.com/linux/static/stable/$ARCH/docker-$DOCKER_VERSION.tgz -O /tmp/docker.tgz     \u0026\u0026 mkdir /tmp/docker \u0026\u0026 tar xzf /tmp/docker.tgz -C /tmp     \u0026\u0026 ln -s /tmp/docker/docker /usr/bin/docker \u0026\u0026 chmod 755 /usr/bin/docker \u0026\u0026 rm -rf /tmp/docker.tgz     \u0026\u0026 apk del openssl"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "build",
      "BaseName": "base",
      "SourceCode": "FROM base as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package.json",
            "package-lock.json",
            "tsconfig.json",
            "webpack.*.js",
            "angular.json",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./src",
            "/app/src"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-dependencies make gcc g++ python curl sqlite git     \u0026\u0026 npm set progress=false \u0026\u0026 npm config set depth 0     \u0026\u0026 npm i --only=production     \u0026\u0026 cp -R node_modules prod_node_modules     \u0026\u0026 npm i \u0026\u0026 npm run build:prod \u0026\u0026 ls -lha /usr/lib/node_modules     \u0026\u0026 apk del .build-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": "n/a"
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "dev"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": "n/a"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Jan Kuri \u003cjan@bleenco.com\u003e\""
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"abstruse\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Continuous integration platform, simple, scalable and fast\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://abstruse.bleenco.io/\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/bleenco/abstruse\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Bleenco\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.version",
              "Value": "$VERSION"
            },
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            }
          ],
          "Name": "label"
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "apk --no-cache add tini sqlite git wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "base",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/node",
            "/usr/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "base",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/lib/libgcc*",
            "/usr/lib/libstdc*",
            "/usr/lib/"
          ]
        },
        {
          "Chown": "",
          "From": "base",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/docker/docker",
            "/usr/bin/docker"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/package.json",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/prod_node_modules",
            "./node_modules"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/dist",
            "./dist"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/src/files",
            "./src/files"
          ]
        },
        {
          "Health": {
            "Interval": 10000000000,
            "StartPeriod": 20000000000,
            "Test": [
              "CMD-SHELL",
              "wget -q -O- http://localhost:6500/status || exit 1"
            ],
            "Timeout": 2000000000
          },
          "Name": "healthcheck"
        },
        {
          "Name": "expose",
          "Ports": [
            "6500"
          ]
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "node",
            "dist/api/index.js"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}