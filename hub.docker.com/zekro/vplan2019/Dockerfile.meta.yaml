MetaArgs: null
Stages:
- BaseName: golang:1.12.6-stretch
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"contact@zekro.de"'
    Name: label
  - Key: ZOLAVERSION
    Name: arg
    Value: '"0.7.0"'
  - CmdLine:
    - apt-get update -y &&    apt-get install -y         git         dos2unix
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"${GOPATH}/bin:${PATH}"'
    Name: env
  - CmdLine:
    - go get -u github.com/golang/dep/cmd/dep
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/getzola/zola/releases/download/v${ZOLAVERSION}/zola-v${ZOLAVERSION}-x86_64-unknown-linux-gnu.tar.gz         -O
      ./zola.tar.gz &&    tar -xzvf zola.tar.gz &&    chmod +x ./zola &&    mv ./zola
      /usr/bin/zola
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${GOPATH}/src/github.com/zekroTJA/vplan2019
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - mkdir -p /etc/vplan/certs &&    mkdir -p /etc/vplan/config
    Name: run
    PrependShell: true
  - CmdLine:
    - dos2unix ./scripts/*.sh &&    chmod +x ./scripts/*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - dep ensure -v
    Name: run
    PrependShell: true
  - Env:
    - Key: LDFLAGS
      Value: '"github.com/zekroTJA/vplan2019/internal/ldflags"'
    Name: env
  - CmdLine:
    - go build -v -o /var/vplan/server         -ldflags "            -X ${LDFLAGS}.AppVersion=$(git
      describe --tags)             -X ${LDFLAGS}.AppCommit=$(git rev-parse HEAD)             -X
      ${LDFLAGS}.GoVersion=$(go version | sed -e 's/ /_/g')             -X ${LDFLAGS}.Release=TRUE"         ./cmd/server
    Name: run
    PrependShell: true
  - CmdLine:
    - cp ./config/frontend.release.toml         ./web/config.toml
    Name: run
    PrependShell: true
  - CmdLine:
    - cd web &&        zola build
    Name: run
    PrependShell: true
  - CmdLine:
    - mv ./web/public /var/vplan/web
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - ./scripts/docker-starter.sh         "/var/vplan/server -c /etc/vplan/config/config.yml
      -web /etc/vplan/web"         /etc/vplan/config/config.yml         ./config/docker.config.yml
    Name: cmd
    PrependShell: true
  From:
    Image: golang:1.12.6-stretch
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.12.6-stretch
