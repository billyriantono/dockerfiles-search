MetaArgs: null
Stages:
- BaseName: node:10-alpine
  Commands:
  - Name: workdir
    Path: /go/src/ollikka.la/docker-go-example/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - npm i
    Name: run
    PrependShell: true
  - CmdLine:
    - npx webpack --mode production --output-path='/srv/www/docker-go-example'
    Name: run
    PrependShell: true
  From:
    Image: node:10-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:10-alpine
- BaseName: golang:1.13.6-alpine
  Commands:
  - Name: workdir
    Path: /go/src/ollikka.la/docker-go-example/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - go build -o ./docker-go-example cmd/docker-go-example/main.go && mkdir /usr/libexec/
      && install docker-go-example /usr/libexec/
    Name: run
    PrependShell: true
  From:
    Image: golang:1.13.6-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.13.6-alpine
- BaseName: bash
  Commands:
  - Chown: ""
    From: "0"
    Name: copy
    SourcesAndDest:
    - /srv/www/docker-go-example
    - /srv/www/docker-go-example
  - Chown: ""
    From: "1"
    Name: copy
    SourcesAndDest:
    - /usr/libexec/docker-go-example
    - /usr/libexec/docker-go-example
  - Name: user
    User: nobody
  - CmdLine:
    - /usr/libexec/docker-go-example --assets /srv/www/docker-go-example/ --port 8080
    Name: entrypoint
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  From:
    Image: bash
  Name: ""
  Platform: ""
  SourceCode: FROM bash
