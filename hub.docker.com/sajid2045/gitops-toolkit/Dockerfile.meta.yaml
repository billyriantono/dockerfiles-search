MetaArgs: null
Stages:
- BaseName: sajid2045/conda-base
  Commands:
  - CmdLine:
    - conda install -y nb_conda_kernels
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create -y -n py27 python=2.7 ipykernel
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create -y -n awscli python=3.6.3 ipykernel
    Name: run
    PrependShell: true
  - CmdLine:
    - conda create -y -n sceptre python=3.6.3 ipykernel
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /bin/sh && ln -s /bin/bash /bin/sh
    Name: run
    PrependShell: true
  - CmdLine:
    - conda init bash
    Name: run
    PrependShell: true
  - CmdLine:
    - source /root/.bashrc && conda activate awscli && conda install -y -c conda-forge
      awscli && conda install -y -c conda-forge/label/gcc7 awscli && conda install
      -y -c conda-forge/label/cf201901 awscli
    Name: run
    PrependShell: true
  - CmdLine:
    - source /root/.bashrc && conda activate awscli && pip install taskcat
    Name: run
    PrependShell: true
  - CmdLine:
    - source /root/.bashrc && conda activate sceptre && pip install sceptre
    Name: run
    PrependShell: true
  - Key: KUBECTL_VERSION
    Name: arg
    Value: '"1.12.7/2019-03-27"'
  - Key: HELM_VERSION
    Name: arg
    Value: '"2.14.0"'
  - Key: HELM_TILLER_VERSION
    Name: arg
    Value: '"0.6.7"'
  - Key: HELM_DIFF_VERSION
    Name: arg
    Value: '"v2.11.0+3"'
  - Key: KUBECTX_VERSION
    Name: arg
    Value: '"0.6.3"'
  - Key: VELERO_VERSION
    Name: arg
    Value: '"0.11.0"'
  - CmdLine:
    - mkdir /downloads
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/downloads"'
  - CmdLine:
    - curl -L https://amazon-eks.s3-us-west-2.amazonaws.com/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
      -o /usr/local/bin/kubectl &&     curl -L https://amazon-eks.s3-us-west-2.amazonaws.com/${KUBECTL_VERSION}/bin/linux/amd64/aws-iam-authenticator
      -o /usr/local/bin/aws-iam-authenticator &&     chmod +x /usr/local/bin/kubectl
      &&     chmod +x /usr/local/bin/aws-iam-authenticator
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz
      -o /tmp/helm.tar.gz &&     tar -xvzf /tmp/helm.tar.gz -C /tmp &&     mv /tmp/linux-amd64/helm
      /usr/local/bin/helm &&     mv /tmp/linux-amd64/tiller /usr/local/bin/tiller
      &&     chmod +x /usr/local/bin/helm &&     chmod +x /usr/local/bin/tiller &&     helm
      init -c &&     helm plugin install https://github.com/rimusz/helm-tiller --version
      ${HELM_TILLER_VERSION}  &&     helm plugin install https://github.com/databus23/helm-diff
      --version ${HELM_DIFF_VERSION} &&     helm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator
      &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - Key: EKSCTL_VERSION
    Name: arg
    Value: latest_release
  - CmdLine:
    - curl --location "https://github.com/weaveworks/eksctl/releases/download/${EKSCTL_VERSION}/eksctl_$(uname
      -s)_amd64.tar.gz" | tar xz -C /tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /tmp/eksctl /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/aws-iam-authenticator
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -v aws-iam-authenticator /usr/local/bin/heptio-authenticator-aws && cp -v
      aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/heptio-authenticator-aws && chmod +x /usr/local/bin/aws-iam-authenticator
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source /etc/bash_completion" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "complete -C '/usr/local/bin/aws_completer' aws" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - eksctl completion bash > /root/.eksctl_completion && echo "source /root/.eksctl_completion"
      >> /root/.bashrc
    Name: run
    PrependShell: true
  - Key: JX_VERSION
    Name: arg
    Value: v2.0.420
  - CmdLine:
    - mkdir -p ~/.jx/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/jenkins-x/jx/releases/download/$JX_VERSION/jx-linux-amd64.tar.gz
      | tar xzv -C ~/.jx/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - export PATH=$PATH:/root/.jx/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH=$PATH:/root/.jx/bin' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source <(kubectl completion bash)" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source <(jx completion bash)" >> /root/.bashrc
    Name: run
    PrependShell: true
  - Key: KUSTOMIZE_VERSION
    Name: arg
    Value: 2.0.3
  - CmdLine:
    - curl -O -L https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64
    Name: run
    PrependShell: true
  - CmdLine:
    - mv kustomize_${KUSTOMIZE_VERSION}_linux_amd64 /usr/local/bin/kustomize && chmod
      +x /usr/local/bin/kustomize
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://raw.githubusercontent.com/johanhaleby/kubetail/master/kubetail
      && chmod +x kubetail && mv kubetail /usr/local/bin
    Name: run
    PrependShell: true
  - Key: KSONNET_VERSION
    Name: arg
    Value: 0.13.1
  - CmdLine:
    - wget https://github.com/ksonnet/ksonnet/releases/download/v${KSONNET_VERSION}/ks_${KSONNET_VERSION}_linux_amd64.tar.gz
      &&     tar -xzf ks_${KSONNET_VERSION}_linux_amd64.tar.gz && chmod +x ks_${KSONNET_VERSION}_linux_amd64/ks
      && cp -v ks_${KSONNET_VERSION}_linux_amd64/ks /usr/local/bin/
    Name: run
    PrependShell: true
  - Key: ARGO_VERSION
    Name: arg
    Value: v1.0.0
  - CmdLine:
    - wget https://github.com/argoproj/argo-cd/releases/download/${ARGO_VERSION}/argocd-linux-amd64
      && chmod +x argocd-linux-amd64 && mv argocd-linux-amd64 /usr/local/bin/argo
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/ahmetb/kubectx/archive/v${KUBECTX_VERSION}.tar.gz
      -o /tmp/kubectx.tar.gz &&     tar -xvzf /tmp/kubectx.tar.gz -C /tmp &&     mv
      /tmp/kubectx-${KUBECTX_VERSION}/kubectx /usr/local/bin/kubectx &&     mv /tmp/kubectx-${KUBECTX_VERSION}/kubens
      /usr/local/bin/kubens &&     chmod +x /usr/local/bin/kubectx &&     chmod +x
      /usr/local/bin/kubens &&     mv /tmp/kubectx-${KUBECTX_VERSION}/completion/kubectx.bash
      /usr/share/bash-completion/completions/kubectx.bash &&     mv /tmp/kubectx-${KUBECTX_VERSION}/completion/kubens.bash
      /usr/share/bash-completion/completions/kubens.bash &&     rm -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/heptio/velero/releases/download/v${VELERO_VERSION}/velero-v${VELERO_VERSION}-linux-amd64.tar.gz
      -o /tmp/velero.tar.gz &&     tar -xvzf /tmp/velero.tar.gz -C /tmp &&     mv
      /tmp/velero /usr/local/bin/velero &&     chmod +x /usr/local/bin/velero &&     rm
      -rf /tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/github/hub/releases/download/v2.12.1/hub-linux-amd64-2.12.1.tgz  -o
      /tmp/hub.tar.gz &&     tar -xvzf /tmp/hub.tar.gz -C /tmp && mv /tmp/hub-linux-*
      /usr/local/hub-linux
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH=$PATH:/usr/local/hub-linux/bin' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install mkdocs
    Name: run
    PrependShell: true
  - CmdLine:
    - conda clean --all --yes
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /downloads/ && rm -rf /tmp/eksctl
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias dep='kubectl get deploy'" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias ing='kubectl get ing'" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias svc='kubectl get svc'" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias pods='kubectl get pods'" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias k=kubectl" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias ap="kubectl get pods --all-namespaces"' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias po='kubectl get pods'" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export LC_ALL=C.UTF-8" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export LANG=C.UTF-8"   >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "export USER=root" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "conda activate awscli" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global alias.co checkout
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global alias.br branch
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global alias.st status
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - dev-cheats
    - /root/dev-cheats
  - CmdLine:
    - echo 'export PATH=$PATH:/root/dev-cheats/' >> /root/.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - json2yaml
    - /usr/local/bin/json2yaml
  - CmdLine:
    - chmod +x /usr/local/bin/json2yaml
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/src"'
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: true
  From:
    Image: sajid2045/conda-base
  Name: ""
  Platform: ""
  SourceCode: FROM sajid2045/conda-base
