{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "google/cloud-sdk:228.0.0-alpine",
      "SourceCode": "FROM google/cloud-sdk:228.0.0-alpine",
      "Platform": "",
      "From": {
        "Image": "google/cloud-sdk:228.0.0-alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "HELM_VERSION",
              "Value": "v2.12.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SOPS_VERSION",
              "Value": "3.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "YQ_BIN_VERSION",
              "Value": "2.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "commands.sh",
            "/data/commands.sh"
          ]
        },
        {
          "CmdLine": [
            "adduser -S gkh gkh \u0026\u0026     apk update \u0026\u0026 apk add ca-certificates gnupg openssl \u0026\u0026     rm -rf /var/cache/apk/* \u0026\u0026     gcloud components install kubectl -q --no-user-output-enabled \u0026\u0026     gcloud -q components install beta \u0026\u0026     curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get \u003e get_helm.sh \u0026\u0026     chmod 700 get_helm.sh \u0026\u0026     ./get_helm.sh --version $HELM_VERSION \u0026\u0026     curl --location --output /usr/local/bin/sops https://github.com/mozilla/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.linux \u0026\u0026     chmod 755 /usr/local/bin/sops \u0026\u0026     curl --location --output /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/${YQ_BIN_VERSION}/yq_linux_amd64 \u0026\u0026     chmod 755 /usr/local/bin/yq \u0026\u0026     mkdir -p /data \u0026\u0026     chown gkh /data \u0026\u0026     chown gkh /entrypoint.sh \u0026\u0026     chmod +x /entrypoint.sh \u0026\u0026     chown gkh /data/commands.sh \u0026\u0026     chmod +x /data/commands.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "gkh"
        },
        {
          "CmdLine": [
            "helm init --client-only \u0026\u0026     helm plugin install https://github.com/futuresimple/helm-secrets.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}