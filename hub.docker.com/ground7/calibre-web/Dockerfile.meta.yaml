MetaArgs: null
Stages:
- BaseName: technosoft2000/alpine-base:3.9-1
  Commands:
  - Maintainer: Technosoft2000 <technosoft2000@gmx.net>
    Name: maintainer
  - Labels:
    - Key: image.version
      Value: '"1.3.3"'
    - Key: image.description
      Value: '"Docker image for Calibre Web, based on docker image of Alpine"'
    - Key: image.date
      Value: '"2019-12-20"'
    - Key: url.docker
      Value: '"https://hub.docker.com/r/technosoft2000/calibre-web"'
    - Key: url.github
      Value: '"https://github.com/Technosoft2000/docker-calibre-web"'
    - Key: url.support
      Value: '"https://cytec.us/forum"'
    Name: label
  - Env:
    - Key: VERSION
      Value: '"1.3.3"'
    - Key: LANG
      Value: '"en_US.UTF-8"'
    - Key: LANGUAGE
      Value: '"en_US.UTF-8"'
    - Key: LC_ALL
      Value: '"en_US.UTF-8"'
    - Key: PUSER
      Value: '"calibre"'
    - Key: PGROUP
      Value: '"calibre"'
    - Key: APP_NAME
      Value: '"Calibre-Web"'
    - Key: APP_HOME
      Value: '"/calibre-web"'
    - Key: APP_REPO
      Value: '"https://github.com/ground7/calibre-web.git"'
    - Key: APP_BRANCH
      Value: '"master"'
    - Key: AMAZON_KG_TAR
      Value: '"kindlegen_linux_2.6_i386_v2_9.tar.gz"'
    - Key: AMAZON_KG_URL
      Value: '"http://kindlegen.s3.amazonaws.com/kindlegen_linux_2.6_i386_v2_9.tar.gz"'
    - Key: CALIBRE_PATH
      Value: '"/books"'
    - Key: PKG_DEV
      Value: '"build-base python-dev openssl-dev libffi-dev libxml2-dev libxslt-dev
        openldap-dev"'
    - Key: PKG_PYTHON
      Value: '"ca-certificates py-pip python py-libxml2 py-libxslt py-lxml libev openldap"'
    - Key: PKG_IMAGES_DEV
      Value: '"curl file fontconfig-dev freetype-dev lcms2-dev     libjpeg-turbo-dev
        libpng-dev libtool libwebp-dev perl-dev tiff-dev xz zlib-dev"'
    - Key: PKG_IMAGES
      Value: '"fontconfig freetype lcms2 libjpeg-turbo libltdl libpng     libwebp
        libxml2 tiff zlib"'
    - Key: PKG_GS_DEV
      Value: '"ghostscript-dev"'
    - Key: PKG_GS
      Value: '"ghostscript"'
    - Key: PKG_MAGICK_DEV
      Value: '"imagemagick6-dev imagemagick6-c++"'
    - Key: PKG_MAGICK
      Value: '"imagemagick6 imagemagick6-libs imagemagick6-doc"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - LOCALE.md
    - /init/
  - CmdLine:
    - ALPINE_GLIBC_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases/download"
      &&     ALPINE_GLIBC_PACKAGE_VERSION="2.30-r0" &&     ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk"
      &&     mkdir -p /tmp &&     mkdir -p /var/cache/apk &&     apk add --no-cache
      --virtual=.build-dependencies wget ca-certificates &&     apk add --no-cache
      parallel &&     wget "https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub"          -O
      "/etc/apk/keys/sgerrand.rsa.pub" &&     wget "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"          "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"          "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&     apk add --no-cache         "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"         "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"         "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
      &&     cat /init/LOCALE.md | parallel "echo generate locale {}; /usr/glibc-compat/bin/localedef
      --force --inputfile {} --charmap UTF-8 {}.UTF-8;" &&     apk del .build-dependencies
      &&     rm "/etc/apk/keys/sgerrand.rsa.pub" &&     rm "/root/.wget-hsts" &&     rm
      "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME"        "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME"        "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "https://www.archlinux.org/packages/core/x86_64/libutil-linux/download/"
      -O /tmp/libutil-linux.tar.xz     && mkdir -p /tmp/libutil-linux     && tar -xf
      /tmp/libutil-linux.tar.xz -C /tmp/libutil-linux     && cp /tmp/libutil-linux/usr/lib/*
      /usr/glibc-compat/lib     && /usr/glibc-compat/sbin/ldconfig     && rm -rf /tmp/libutil-linux
      /tmp/libutil-linux.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "--- Update the package list ------------------------------------------------"
      &&     apk -U upgrade &&     echo "--- Install applications via package manager
      -------------------------------" &&     apk -U add --no-cache $PKG_DEV $PKG_PYTHON
      $PKG_IMAGES_DEV $PKG_IMAGES $PKG_GS_DEV $PKG_GS $PKG_MAGICK_DEV $PKG_MAGICK
      &&     echo "--- Upgrade pip to the latest version --------------------------------------"
      &&     pip install --upgrade pip &&     echo "--- Install python packages via
      pip ----------------------------------------" &&     pip --no-cache-dir install
      --upgrade         setuptools         pyopenssl         'Babel>=1.3'         'Flask-Babel>=0.11.1'         'Flask-Login>=0.3.2'         'Flask-Principal>=0.3.2'         'singledispatch>=3.4.0.0'         'backports_abc>=0.4'         'Flask>=1.0.2'         'iso-639>=0.4.5'         'PyPDF2==1.26.0'         'pytz>=2016.10'         'requests>=2.11.1'         'SQLAlchemy>=1.1.0'         'tornado>=4.1'         'Wand>=0.4.4'         'unidecode>=0.04.19'         'google-api-python-client==1.7.11'         'gevent>=1.2.1'         'greenlet>=0.4.12'         'httplib2>=0.9.2'         'oauth2client>=4.0.0'         'uritemplate>=3.0.0'         'pyasn1-modules>=0.0.8'         'pyasn1>=0.1.9'         'PyDrive>=1.3.1'         'PyYAML>=3.12'         'rsa==3.4.2'         'six==1.10.0'         'goodreads>=0.3.2'         'python-Levenshtein>=0.12.0'         'python_ldap>=3.0.0'         'flask-simpleldap>1.3.0'         'flask-dance>=0.13.0'         'sqlalchemy_utils>=0.33.5'         'lxml>=3.8.0'         'Pillow>=4.0.0'         'rarfile>=2.7'         'natsort>=2.2.0'         'git+https://github.com/OzzieIsaacs/comicapi.git@5346716578b2843f54d522f44d01bc8d25001d24#egg=comicapi'     &&     rm
      -rf /tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: '"/usr/lib:/opt/calibre/lib"'
    - Key: PATH
      Value: '"$PATH:/opt/calibre"'
    - Key: LC_ALL
      Value: '"C"'
    - Key: CALIBRE_INSTALLER_SOURCE_CODE_URL
      Value: '"https://raw.githubusercontent.com/kovidgoyal/calibre/master/setup/linux-installer.py"'
    Name: env
  - CmdLine:
    - apk update &&     apk add --no-cache --upgrade         bash         ca-certificates         gcc         libxcomposite         mesa-gl         python         qt5-qtbase-x11         xdg-utils         xz         wget
      &&     wget -O- ${CALIBRE_INSTALLER_SOURCE_CODE_URL} |       python -c       "import
      sys;        main=lambda:sys.stderr.write('Download failed\n');        exec(sys.stdin.read());        main(install_dir='/opt',
      isolated=True, version='3.48.0')" &&     rm -rf /tmp/calibre-installer-cache
      &&     apk del --purge $PKG_DEV                     $PKG_IMAGES_DEV &&     mkdir
      -p $APP_HOME/app &&     rm -rf /tmp &&     rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $APP_HOME/app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '*.txt'
    - /init/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - '*.sh'
    - /init/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - calibre-init
    - /init/calibre-init
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - imagemagick/policy.xml
    - /etc/ImageMagick-6
  - Name: volume
    Volumes:
    - /books
  - Name: volume
    Volumes:
    - $APP_HOME/app
  - Name: volume
    Volumes:
    - $APP_HOME/config
  - Name: volume
    Volumes:
    - $APP_HOME/kindlegen
  - Name: expose
    Ports:
    - "8083"
  From:
    Image: technosoft2000/alpine-base:3.9-1
  Name: ""
  Platform: ""
  SourceCode: FROM technosoft2000/alpine-base:3.9-1
