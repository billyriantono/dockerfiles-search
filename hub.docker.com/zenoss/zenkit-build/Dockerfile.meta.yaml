MetaArgs: null
Stages:
- BaseName: golang:1.12-alpine
  Commands:
  - Key: GLIBC_VERSION
    Name: arg
    Value: 2.25-r0
  - Key: PROTOC_VERSION
    Name: arg
    Value: 3.5.1
  - CmdLine:
    - apk add py-pip musl libc6-compat linux-headers build-base python-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - python -m pip install grpcio-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del libc6-compat
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache su-exec curl bash git openssh mercurial make ca-certificates
      expect docker
    Name: run
    PrependShell: true
  - CmdLine:
    - "curl -sSL https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub > /etc/apk/keys/sgerrand.rsa.pub
      &&     curl -sSL https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk
      > glibc-${GLIBC_VERSION}.apk && \tapk add --no-cache glibc-${GLIBC_VERSION}.apk
      && \trm -f glibc-${GLIBC_VERSION}.apk"
    Name: run
    PrependShell: true
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - CmdLine:
    - go install -v std
    Name: run
    PrependShell: true
  - CmdLine:
    - "go get github.com/onsi/ginkgo/ginkgo && \tgo get github.com/onsi/gomega"
    Name: run
    PrependShell: true
  - CmdLine:
    - "go get github.com/wadey/gocovmerge && \tgo get github.com/axw/gocov/gocov &&
      \tgo get github.com/AlekSi/gocov-xml"
    Name: run
    PrependShell: true
  - CmdLine:
    - "go get golang.org/x/lint/golint && \tgo get github.com/golang/dep/cmd/dep"
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/jteeuwen/go-bindata/go-bindata
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/tmrts/boilr &&     cd $GOPATH/src/github.com/tmrts/boilr &&     git
      remote add fork https://github.com/smousa/boilr.git &&     git fetch fork format-camel
      &&     git checkout format-camel &&     go install
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/protoc &&     curl -sSL https://github.com/google/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip
      > /tmp/protoc/protoc.zip &&     unzip -qo /tmp/protoc/protoc.zip -d /tmp/protoc
      &&     cp /tmp/protoc/bin/protoc /usr/bin &&     mkdir -p /usr/include &&     cp
      -R /tmp/protoc/include/google /usr/include/. &&     chmod a+x /usr/bin/protoc
      &&     chmod -R 777 /usr/include/google &&     rm -rf /tmp/protoc &&     go
      get -u github.com/golang/protobuf/protoc-gen-go &&     git clone https://github.com/googleapis/googleapis
      &&     go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add grpc-java --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache nodejs nodejs-npm && npm install -g yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/vektra/mockery/.../
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R 777 $GOPATH
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'Host *' >> /etc/ssh/ssh_config
    Name: run
    PrependShell: true
  - CmdLine:
    - echo '    StrictHostKeyChecking no' >> /etc/ssh/ssh_config
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - create-zenkit.sh
    - /usr/local/bin/create-zenkit.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - create-zenkit-local.sh
    - /usr/local/bin/create-zenkit-local.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/docker-entrypoint.sh
  - Expression: ARG GITHUB_USERNAME
    Name: onbuild
  - Expression: ARG GITHUB_PASSWORD
    Name: onbuild
  - Expression: RUN if [ -n "${GITHUB_USERNAME}" ]; then     printf 'https://%s:%s@github.com'
      "${GITHUB_USERNAME}" "${GITHUB_PASSWORD}" > /etc/.git_creds;     git config
      --global credential.helper 'store --file /etc/.git_creds';     git config --global
      url.'https://github.com'.insteadOf 'ssh://git@github.com';     fi
    Name: onbuild
  - Expression: ARG SSH_PRIVATE_KEY
    Name: onbuild
  - Expression: RUN if [ -n "${SSH_PRIVATE_KEY}" ]; then     mkdir /root/.ssh;     echo
      "${SSH_PRIVATE_KEY}" > /root/.ssh/id_rsa;     chmod 600 /root/.ssh/id_rsa;     touch
      /root/.ssh/known_hosts;     ssh-keyscan github.com >> /root/.ssh/known_hosts;     fi
    Name: onbuild
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: golang:1.12-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.12-alpine
