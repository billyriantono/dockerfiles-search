MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Ivan Krizsan, https://github.com/krizsan"'
    Name: label
  - Env:
    - Key: SET_CONTAINER_TIMEZONE
      Value: "False"
    Name: env
  - Env:
    - Key: CONTAINER_TIMEZONE
      Value: Europe/Stockholm
    Name: env
  - Env:
    - Key: ELASTALERT_URL
      Value: https://github.com/Yelp/elastalert/archive/master.zip
    Name: env
  - Env:
    - Key: CONFIG_DIR
      Value: /opt/config
    Name: env
  - Env:
    - Key: RULES_DIRECTORY
      Value: /opt/rules
    Name: env
  - Env:
    - Key: ELASTALERT_CONFIG
      Value: ${CONFIG_DIR}/elastalert_config.yaml
    Name: env
  - Env:
    - Key: LOG_DIR
      Value: /opt/logs
    Name: env
  - Env:
    - Key: ELASTALERT_HOME
      Value: /opt/elastalert
    Name: env
  - Env:
    - Key: ELASTALERT_SUPERVISOR_CONF
      Value: ${CONFIG_DIR}/elastalert_supervisord.conf
    Name: env
  - Env:
    - Key: ELASTICSEARCH_HOST
      Value: elasticsearchhost
    Name: env
  - Env:
    - Key: ELASTICSEARCH_PORT
      Value: "9200"
    Name: env
  - Env:
    - Key: ELASTICSEARCH_TLS
      Value: "False"
    Name: env
  - Env:
    - Key: ELASTICSEARCH_TLS_VERIFY
      Value: "True"
    Name: env
  - Env:
    - Key: ELASTALERT_INDEX
      Value: elastalert_status
    Name: env
  - Name: workdir
    Path: /opt
  - CmdLine:
    - apk update &&     apk upgrade &&     apk add ca-certificates openssl-dev openssl
      libffi-dev python2 python2-dev py2-pip py2-yaml gcc musl-dev tzdata openntpd
      wget &&     wget -O elastalert.zip "${ELASTALERT_URL}" &&     unzip elastalert.zip
      &&     rm elastalert.zip &&     mv e* "${ELASTALERT_HOME}"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"${ELASTALERT_HOME}"'
  - CmdLine:
    - python setup.py install &&     pip install -e . &&     pip uninstall twilio
      --yes &&     pip install twilio==6.0.0 &&     easy_install supervisor &&     mkdir
      -p "${CONFIG_DIR}" &&     mkdir -p "${RULES_DIRECTORY}" &&     mkdir -p "${LOG_DIR}"
      &&     mkdir -p /var/empty &&     apk del python2-dev &&     apk del musl-dev
      &&     apk del gcc &&     apk del openssl-dev &&     apk del libffi-dev &&     rm
      -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./start-elastalert.sh
    - /opt/
  - CmdLine:
    - chmod +x /opt/start-elastalert.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${CONFIG_DIR}
    - ${RULES_DIRECTORY}
    - ${LOG_DIR}
  - CmdLine:
    - /opt/start-elastalert.sh
    Name: cmd
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
