{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "KUBECTL_VERSION",
              "Value": "stable"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/config"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     apk add --no-cache bash bash-completion curl ca-certificates \u0026\u0026     if [ \"${KUBECTL_VERSION}\"=\"stable\" ]; then       curl -L \"https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\" -o /usr/local/bin/kubectl ;    else       curl -LO \"https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl\" -o /usr/local/bin/kubectl ;    fi \u0026\u0026     chmod +x /usr/local/bin/kubectl \u0026\u0026     adduser -D -h /config kubectl \u0026\u0026     kubectl version --client \u0026\u0026     echo 'if [ -f /etc/profile.d/bash_completion.sh ]; then source /etc/profile.d/bash_completion.sh; source \u003c(kubectl completion bash) ; fi' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "kubectl"
        }
      ]
    }
  ]
}