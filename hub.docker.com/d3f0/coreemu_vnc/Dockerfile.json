{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:17.04",
      "SourceCode": "FROM ubuntu:17.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:17.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "SCREEN_WIDTH",
              "Value": "1280"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCREEN_HEIGHT",
              "Value": "800"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SCREEN_DEPTH",
              "Value": "16"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PASSWORD",
              "Value": "coreemu"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cp /etc/apt/sources.list /etc/apt/sources.list.old"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://old-releases.ubuntu.com/ubuntu/ zesty main restricted universe multiverse \\n     deb http://old-releases.ubuntu.com/ubuntu/ zesty-updates main restricted universe multiverse \\n     deb http://old-releases.ubuntu.com/ubuntu/ zesty-security main restricted universe multiverse\" \u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get upgrade  \u0026\u0026     apt-get -f dist-upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026     apt-get -y install iptables \u0026\u0026     apt-get install nano vim netcat --no-install-recommends -y openbox obconf git x11vnc xvfb  wget python unzip         bridge-utils ebtables iproute2 iproute2 iproute libev4 libreadline6         libtk-img tk8.5 dirmngr net-tools tcpdump xterm        feh tint2 python-numpy logrotate ca-certificates \u0026\u0026         rm -rf /var/lib/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://downloads.pf.itd.nrl.navy.mil/ospf-manet/quagga-0.99.21mr2.2/quagga-mr_0.99.21mr2.2_amd64.deb \u0026\u0026     dpkg -i quagga-mr_0.99.21mr2.2_amd64.deb \u0026\u0026     rm quagga-mr_0.99.21mr2.2_amd64.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ~/.vnc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 git clone https://github.com/kanaka/noVNC.git \u0026\u0026     cd noVNC/utils \u0026\u0026 git clone https://github.com/kanaka/websockify websockify"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://eriberto.pro.br/core/ stretch main\\ndeb-src http://eriberto.pro.br/core/ stretch main\" \u003e\u003e /etc/apt/sources.list.d/core.list \u0026\u0026     apt-key adv --keyserver pgp.surfnet.nl --recv-keys 04ebe9ef \u0026\u0026     apt-get -q update \u0026\u0026 apt-get -q -y install --no-install-recommends         core-network core-network-daemon \u0026\u0026 apt-get -q -y install tshark         net-tools rox-filer         nano vim netcat         xorp bird openssh-client openssh-server isc-dhcp-server vsftpd apache2 tcpdump         radvd at ucarp openvpn ipsec-tools racoon traceroute mgen wireshark-gtk         supervisor \u0026\u0026         rm -rf /var/lib/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/wireshark-gtk /usr/bin/wireshark"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/noVNC \u0026\u0026 ln -sf vnc.html index.html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "bg/",
            "/root/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./config/",
            "/root/.config/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "etc/supervisor/conf.d",
            "/etc/supervisor/conf.d"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026 apt-get --no-install-recommends -y install gcc g++ autoconf nano vim netcat automake libtool libxml2-dev libprotobuf-dev python-protobuf libpcap-dev libpcre3-dev uuid-dev debhelper pkg-config build-essential python-setuptools protobuf-compiler git dh-python python-lxml \u0026\u0026 rm -rf /var/lib/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "patches/gccfix.diff",
            "/root/"
          ]
        },
        {
          "CmdLine": [
            "cd /root/ \u0026\u0026 wget https://github.com/adjacentlink/emane/archive/v1.0.1.tar.gz \u0026\u0026 tar -xvf v1.0.1.tar.gz \u0026\u0026 cp gccfix.diff emane-1.0.1 \u0026\u0026 cd emane-1.0.1 \u0026\u0026 patch -p1 \u003cgccfix.diff \u0026\u0026 ./autogen.sh \u0026\u0026 ./configure \u0026\u0026 make deb WITHOUT_PYTHON3=1 \u0026\u0026 cd .debbuild \u0026\u0026 dpkg -i *.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/root/shared"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8080"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "5900"
          ]
        },
        {
          "CmdLine": [
            "\"/entrypoint.sh\""
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}