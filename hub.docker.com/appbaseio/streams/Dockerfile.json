{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Maintainer": "Guilherme Salazar \u003csalazar@appbase.io\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "NGX_PATH",
              "Value": "\"/tmp/ngx\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "STREAMS_PATH",
              "Value": "\"${NGX_PATH}/streams\""
            }
          ],
          "Name": "env"
        },
        {
          "Key": "RESTY_VERSION",
          "Name": "arg",
          "Value": "\"1.11.2.2\""
        },
        {
          "Key": "RESTY_OPENSSL_VERSION",
          "Name": "arg",
          "Value": "\"1.0.2k\""
        },
        {
          "Key": "RESTY_PCRE_VERSION",
          "Name": "arg",
          "Value": "\"8.40\""
        },
        {
          "Key": "NCHAN_VERSION",
          "Name": "arg",
          "Value": "\"1.1.6\""
        },
        {
          "Key": "ROCKS_VERSION",
          "Name": "arg",
          "Value": "\"2.4.2\""
        },
        {
          "Key": "RESTY_J",
          "Name": "arg",
          "Value": "\"8\""
        },
        {
          "Key": "LUA_DEPS",
          "Name": "arg",
          "Value": "\"lua-resty-http\""
        },
        {
          "CmdLine": [
            "mkdir /tmp/resty_build_area \t\u0026\u0026 cd /tmp/resty_build_area     \u0026\u0026 apk add --no-cache --virtual .build-deps \t\tbuild-base \t\tcurl \t\tperl-dev \t\tzlib-dev \t\tlinux-headers \t\u0026\u0026 apk add --no-cache \t\tlibgcc \t\tzlib \t\tsed \t\tapache2-utils \t\u0026\u0026 curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz \t\t-o openresty.tar.gz \t\u0026\u0026 curl -fSL https://github.com/slact/nchan/archive/v${NCHAN_VERSION}.tar.gz \t\t-o nchan.tar.gz \t\u0026\u0026 curl -fSL https://luarocks.org/releases/luarocks-${ROCKS_VERSION}.tar.gz \t\t-o luarocks.tar.gz \t\u0026\u0026 curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz \t\t-o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \t\u0026\u0026 curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz \t\t-o pcre-${RESTY_PCRE_VERSION}.tar.gz \t\u0026\u0026 curl -fSL https://raw.githubusercontent.com/siddharthlatest/mustache.sh/master/lib/mustache.sh \t\t-o /usr/local/lib/mustache.sh \t\u0026\u0026 curl -fSL https://raw.githubusercontent.com/siddharthlatest/mustache.sh/master/bin/mustache.sh \t\t-o /usr/local/bin/mustache.sh \u0026\u0026 chmod +x /usr/local/bin/mustache.sh \t\u0026\u0026 tar -xf openresty.tar.gz \u0026\u0026 tar -xf nchan.tar.gz \u0026\u0026 tar -xf luarocks.tar.gz \t\u0026\u0026 tar -xf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \t\u0026\u0026 tar -xf pcre-${RESTY_PCRE_VERSION}.tar.gz \t\u0026\u0026 cd openresty-${RESTY_VERSION} \t\u0026\u0026 ./configure -j${RESTY_J} --add-module=../nchan-${NCHAN_VERSION} \t\t--with-openssl=/tmp/resty_build_area/openssl-${RESTY_OPENSSL_VERSION} \t\t--with-pcre=/tmp/resty_build_area/pcre-${RESTY_PCRE_VERSION} \t\u0026\u0026 make -j${RESTY_J} \u0026\u0026 make -j${RESTY_J} install \t\u0026\u0026 cd ../ \t\u0026\u0026 cd luarocks-${ROCKS_VERSION} \t\u0026\u0026 ./configure \t\t--prefix=/usr/local/openresty/luajit \t\t--with-lua=/usr/local/openresty/luajit \t\t--lua-suffix=jit-2.1.0-beta2 \t\t--with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \t\u0026\u0026 make build \u0026\u0026 make install \t\u0026\u0026 cd ../ \t\u0026\u0026 for dep in ${LUA_DEPS}; do \t\t\t/usr/local/openresty/luajit/bin/luarocks install $dep; \tdone \t\u0026\u0026 rm -rf /tmp/resty_build_area \t\u0026\u0026 apk del .build-deps \t\u0026\u0026 mkdir -p ${NGX_PATH}/logs \t\u0026\u0026 touch ${NGX_PATH}/logs/{error,acces}.log \t\u0026\u0026 mkdir /ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "lua",
            "\"${STREAMS_PATH}/lua\""
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf",
            "\"${STREAMS_PATH}/conf\""
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "\"${STREAMS_PATH}/\""
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"${STREAMS_PATH}\""
        },
        {
          "CmdLine": [
            "/bin/sh",
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}