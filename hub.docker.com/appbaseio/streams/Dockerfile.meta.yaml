MetaArgs: null
Stages:
- BaseName: alpine:latest
  Commands:
  - Maintainer: Guilherme Salazar <salazar@appbase.io>
    Name: maintainer
  - Env:
    - Key: NGX_PATH
      Value: '"/tmp/ngx"'
    Name: env
  - Env:
    - Key: STREAMS_PATH
      Value: '"${NGX_PATH}/streams"'
    Name: env
  - Key: RESTY_VERSION
    Name: arg
    Value: '"1.11.2.2"'
  - Key: RESTY_OPENSSL_VERSION
    Name: arg
    Value: '"1.0.2k"'
  - Key: RESTY_PCRE_VERSION
    Name: arg
    Value: '"8.40"'
  - Key: NCHAN_VERSION
    Name: arg
    Value: '"1.1.6"'
  - Key: ROCKS_VERSION
    Name: arg
    Value: '"2.4.2"'
  - Key: RESTY_J
    Name: arg
    Value: '"8"'
  - Key: LUA_DEPS
    Name: arg
    Value: '"lua-resty-http"'
  - CmdLine:
    - "mkdir /tmp/resty_build_area \t&& cd /tmp/resty_build_area     && apk add --no-cache
      --virtual .build-deps \t\tbuild-base \t\tcurl \t\tperl-dev \t\tzlib-dev \t\tlinux-headers
      \t&& apk add --no-cache \t\tlibgcc \t\tzlib \t\tsed \t\tapache2-utils \t&& curl
      -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz \t\t-o
      openresty.tar.gz \t&& curl -fSL https://github.com/slact/nchan/archive/v${NCHAN_VERSION}.tar.gz
      \t\t-o nchan.tar.gz \t&& curl -fSL https://luarocks.org/releases/luarocks-${ROCKS_VERSION}.tar.gz
      \t\t-o luarocks.tar.gz \t&& curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz
      \t\t-o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \t&& curl -fSL https://ftp.pcre.org/pub/pcre/pcre-${RESTY_PCRE_VERSION}.tar.gz
      \t\t-o pcre-${RESTY_PCRE_VERSION}.tar.gz \t&& curl -fSL https://raw.githubusercontent.com/siddharthlatest/mustache.sh/master/lib/mustache.sh
      \t\t-o /usr/local/lib/mustache.sh \t&& curl -fSL https://raw.githubusercontent.com/siddharthlatest/mustache.sh/master/bin/mustache.sh
      \t\t-o /usr/local/bin/mustache.sh && chmod +x /usr/local/bin/mustache.sh \t&&
      tar -xf openresty.tar.gz && tar -xf nchan.tar.gz && tar -xf luarocks.tar.gz
      \t&& tar -xf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \t&& tar -xf pcre-${RESTY_PCRE_VERSION}.tar.gz
      \t&& cd openresty-${RESTY_VERSION} \t&& ./configure -j${RESTY_J} --add-module=../nchan-${NCHAN_VERSION}
      \t\t--with-openssl=/tmp/resty_build_area/openssl-${RESTY_OPENSSL_VERSION} \t\t--with-pcre=/tmp/resty_build_area/pcre-${RESTY_PCRE_VERSION}
      \t&& make -j${RESTY_J} && make -j${RESTY_J} install \t&& cd ../ \t&& cd luarocks-${ROCKS_VERSION}
      \t&& ./configure \t\t--prefix=/usr/local/openresty/luajit \t\t--with-lua=/usr/local/openresty/luajit
      \t\t--lua-suffix=jit-2.1.0-beta2 \t\t--with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1
      \t&& make build && make install \t&& cd ../ \t&& for dep in ${LUA_DEPS}; do
      \t\t\t/usr/local/openresty/luajit/bin/luarocks install $dep; \tdone \t&& rm
      -rf /tmp/resty_build_area \t&& apk del .build-deps \t&& mkdir -p ${NGX_PATH}/logs
      \t&& touch ${NGX_PATH}/logs/{error,acces}.log \t&& mkdir /ssl"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - lua
    - '"${STREAMS_PATH}/lua"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf
    - '"${STREAMS_PATH}/conf"'
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - '"${STREAMS_PATH}/"'
  - Name: workdir
    Path: '"${STREAMS_PATH}"'
  - CmdLine:
    - /bin/sh
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:latest
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:latest
