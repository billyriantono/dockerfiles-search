{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1-fpm",
      "SourceCode": "FROM php:7.1-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.1-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y apt-transport-https gnupg2 unixodbc-dev --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://packages.microsoft.com/keys/microsoft.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://packages.microsoft.com/config/debian/9/prod.list \u003e /etc/apt/sources.list.d/mssql-release.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     libfreetype6-dev     libjpeg62-turbo-dev     libmcrypt-dev     libpng-dev     apt-utils     apt-transport-https     --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y     git     openssh-client     vim     supervisor     nginx     unzip     net-tools     iputils-ping     telnet     nodejs     build-essential     yarn     --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc)         iconv         gd         pdo         pdo_mysql         mysqli         mbstring         opcache         zip         bcmath mcrypt         pcntl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ACCEPT_EULA=Y apt-get install -y msodbcsql17"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install sqlsrv-5.3.0     \u0026\u0026 pecl install pdo_sqlsrv-5.3.0     \u0026\u0026 docker-php-ext-enable sqlsrv pdo_sqlsrv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get clean     \u0026\u0026 apt-get autoclean     \u0026\u0026 apt-get autoremove     \u0026\u0026 rm -rf /usr/src/php*     \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH"
            },
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            },
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "php -r \"copy('https://install.phpcomposer.com/installer', 'composer-setup.php');\" \u0026\u0026     php composer-setup.php \u0026\u0026     php -r \"unlink('composer-setup.php');\" \u0026\u0026     mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime   \u0026\u0026 echo 'Asia/Shanghai' \u003e/etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "image-files/",
            "/"
          ]
        },
        {
          "CmdLine": [
            "rm -rf /etc/nginx/sites-enabled/default /etc/nginx/sites-aviable/default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 700     /usr/local/bin/docker-entrypoint.sh     /usr/local/bin/docker-run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app \u0026\u0026 chown root:root /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Env": [
            {
              "Key": "YII_MIGRATION_DO",
              "Value": "0"
            },
            {
              "Key": "VOLUME_PATH",
              "Value": "'/app'"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "docker-run.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}