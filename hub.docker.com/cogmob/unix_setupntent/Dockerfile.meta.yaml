MetaArgs: null
Stages:
- BaseName: php:7.3-fpm-stretch
  Commands:
  - Env:
    - Key: COMPOSER_HOME
      Value: /root/.composer
    Name: env
  - CmdLine:
    - apt-get update -q -y     && apt-get install -q -y --no-install-recommends         ca-certificates         bash         curl         acl         sudo         mysql-client         libxml2         libfreetype6         libjpeg62-turbo         libxpm4         libpng16-16         libicu57         libxslt1.1         libmemcachedutil2         libzip4         imagemagick         zip         unzip         git     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -xe     && buildDeps=\"         $PHP_EXTRA_BUILD_DEPS         libfreetype6-dev
      \        libjpeg62-turbo-dev         libxpm-dev         libpng-dev         libicu-dev
      \        libxslt1-dev         libmemcached-dev         libzip-dev     \" \t&&
      apt-get update -q -y && apt-get install -q -y --no-install-recommends $buildDeps
      && rm -rf /var/lib/apt/lists/*     && docker-php-source extract     && docker-php-ext-configure
      mysqli --with-mysqli=mysqlnd     && docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd
      \    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
      --with-png-dir=/usr/include/ --with-xpm-dir=/usr/include/ --enable-gd-jis-conv
      \    && docker-php-ext-install exif gd bcmath mbstring intl xsl zip mysqli pdo_mysql
      soap xml     && docker-php-ext-enable opcache     && cp /usr/src/php/php.ini-production
      ${PHP_INI_DIR}/php.ini         && for i in $(seq 1 3); do pecl install -o igbinary
      && s=0 && break || s=$? && sleep 1; done; (exit $s)     && docker-php-ext-enable
      igbinary         && for i in $(seq 1 3); do pecl install -o --nobuild redis
      && s=0 && break || s=$? && sleep 1; done; (exit $s)     && cd \"$(pecl config-get
      temp_dir)/redis\"     && phpize     && ./configure --enable-redis-igbinary     &&
      make     && make install     && docker-php-ext-enable redis     && cd -         &&
      for i in $(seq 1 3); do echo no | pecl install -o --nobuild memcached && s=0
      && break || s=$? && sleep 1; done; (exit $s)     && cd \"$(pecl config-get temp_dir)/memcached\"
      \    && phpize     && ./configure --enable-memcached-igbinary     && make     &&
      make install     && docker-php-ext-enable memcached     && cd -         && pecl
      clear-cache     && rm -Rf \"$(pecl config-get temp_dir)/*\"     && docker-php-source
      delete     && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
      $buildDeps"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "UTC" > /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s@^\[global\]@\[global\]\n\npid = /run/php-fpm.pid@" ${PHP_INI_DIR}-fpm.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $COMPOSER_HOME     && curl -sS https://getcomposer.org/installer |
      php -- --install-dir=/usr/local/bin --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSLo phpmd.phar http://static.phpmd.org/php/latest/phpmd.phar     && chmod
      755 phpmd.phar     && mv phpmd.phar /usr/local/bin/     && ln -s /usr/local/bin/phpmd.phar
      /usr/local/bin/phpmd
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSLo phpcpd.phar https://phar.phpunit.de/phpcpd.phar     && chmod 755
      phpcpd.phar     && mv phpcpd.phar /usr/local/bin/     && ln -s /usr/local/bin/phpcpd.phar
      /usr/local/bin/phpcpd
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSLo phpunit.phar https://phar.phpunit.de/phpunit-6.5.9.phar     && chmod
      755 phpunit.phar     && mv phpunit.phar /usr/local/bin/     && ln -s /usr/local/bin/phpunit.phar
      /usr/local/bin/phpunit
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar     && chmod
      755 phpcs.phar     && mv phpcs.phar /usr/local/bin/     && ln -s /usr/local/bin/phpcs.phar
      /usr/local/bin/phpcs     && curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar     &&
      chmod 755 phpcbf.phar     && mv phpcbf.phar /usr/local/bin/     && ln -s /usr/local/bin/phpcbf.phar
      /usr/local/bin/phpcbf
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LO https://deployer.org/deployer.phar     && mv deployer.phar /usr/local/bin/dep     &&
      chmod +x /usr/local/bin/dep
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "readfile('http://get.sensiolabs.org/security-checker.phar');" > /usr/local/bin/security-checker     &&
      chmod +x /usr/local/bin/security-checker
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts
    - /scripts
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf.d/php.ini
    - ${PHP_INI_DIR}/conf.d/php.ini
  - CmdLine:
    - chmod 755 /scripts/*.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod -u 1000 www-data
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www
  - CmdLine:
    - /scripts/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - php-fpm
    Name: cmd
    PrependShell: true
  - Name: expose
    Ports:
    - "9000"
  From:
    Image: php:7.3-fpm-stretch
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.3-fpm-stretch
