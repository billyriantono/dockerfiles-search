MetaArgs:
- DefaultValue: current-alpine
  Key: NODE_IMAGE_TAG
  ProvidedValue: null
  Value: current-alpine
- DefaultValue: mainline-alpine
  Key: NGINX_IMAGE_TAG
  ProvidedValue: null
  Value: mainline-alpine
Stages:
- As: build
  BaseName: node:${NODE_IMAGE_TAG}
  Commands:
  - CmdLine:
    - apk add --no-cache git
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - package-lock.json
    - /build/
  - Name: workdir
    Path: /build
  - CmdLine:
    - npm i
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - angular.json
    - tsconfig.json
    - ./
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - src/
    - ./src/
  - Key: NG_BUILD_CONFIG_NAME
    Name: arg
    Value: production
  - CmdLine:
    - npm run build -- -c ${NG_BUILD_CONFIG_NAME} --output-path dist
    Name: run
    PrependShell: true
  From:
    Image: node:${NODE_IMAGE_TAG}
  Name: build
  Platform: ""
  SourceCode: FROM node:${NODE_IMAGE_TAG} as build
- BaseName: nginx:${NGINX_IMAGE_TAG}
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"pedroetb@gmail.com"'
    Name: label
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx
    - /etc/nginx
  - CmdLine:
    - rm -rf /usr/share/nginx/html/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /build/dist
    - /usr/share/nginx/html
  - Env:
    - Key: API_ORIGIN
      Value: https://hostname/api
    - Key: AUTH_ORIGIN
      Value: https://hostname/auth
    Name: env
  - CmdLine:
    - sh
    - -c
    - '   file=/etc/nginx/conf.d/default.conf ;   vars=''${API_ORIGIN} ${AUTH_ORIGIN}''
      ;   envsubst "$vars" < ${file} > ${file}.tmp &&   mv ${file}.tmp ${file} &&   nginx
      -g ''daemon off;'' '
    Name: cmd
    PrependShell: false
  From:
    Image: nginx:${NGINX_IMAGE_TAG}
  Name: ""
  Platform: ""
  SourceCode: FROM nginx:${NGINX_IMAGE_TAG}
