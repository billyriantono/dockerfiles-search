MetaArgs: null
Stages:
- BaseName: python:2.7-slim
  Commands:
  - CmdLine:
    - useradd --system -m -d /plone -U -u 500 plone  && mkdir -p /data/filestorage
      /data/blobstorage  && chown -R plone:plone /data
    Name: run
    PrependShell: true
  - Env:
    - Key: PLONE_MAJOR
      Value: "5.1"
    Name: env
  - Env:
    - Key: PLONE_VERSION
      Value: 5.1rc2
    Name: env
  - Env:
    - Key: PLONE_MD5
      Value: ad3e2a16701a33856906f03cb8c23b90
    Name: env
  - Labels:
    - Key: plone
      Value: $PLONE_VERSION
    - Key: os
      Value: '"debian"'
    - Key: os.version
      Value: '"8"'
    - Key: name
      Value: '"Plone 5"'
    - Key: description
      Value: '"Plone image, based on Unified Installer"'
    - Key: maintainer
      Value: '"Plone Community"'
    Name: label
  - CmdLine:
    - buildDeps="wget sudo python-setuptools python-dev build-essential libssl-dev
      libxml2-dev libxslt1-dev libbz2-dev libjpeg62-turbo-dev libtiff5-dev libopenjp2-7-dev"  &&
      runDeps="libxml2 libxslt1.1 libjpeg62 rsync lynx wv libtiff5 libopenjp2-7 poppler-utils"  &&
      apt-get update  && apt-get install -y --no-install-recommends $buildDeps  &&
      wget -O Plone.tgz https://launchpad.net/plone/$PLONE_MAJOR/$PLONE_VERSION/+download/Plone-$PLONE_VERSION-UnifiedInstaller.tgz  &&
      echo "$PLONE_MD5 Plone.tgz" | md5sum -c -  && tar -xzf Plone.tgz  && ./Plone-$PLONE_VERSION-UnifiedInstaller/install.sh       --password=admin       --daemon-user=plone       --owner=plone       --group=plone       --target=/plone       --instance=instance       --var=/data       none  &&
      cd /plone/instance  && sed -i 's/parts =/parts =\n    zeoserver/g' buildout.cfg  &&
      echo '\n[zeoserver]\n<= zeoserver_base\nrecipe = plone.recipe.zeoserver' >>
      buildout.cfg  && sudo -u plone bin/buildout  && chown -R plone:plone /plone
      /data  && rm -rf /Plone*  && SUDO_FORCE_REMOVE=yes apt-get remove --purge -y
      $buildDeps && apt-get install -y --no-install-recommends $runDeps  && apt-get
      clean  && rm -rf /var/lib/apt/lists/*  && rm -rf /plone/buildout-cache/downloads/*  &&
      rm -rf /plone/Plone-docs  && find /plone \( -type f -a -name '*.pyc' -o -name
      '*.pyo' \) -exec rm -rf '{}' +
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-initialize.py
    - docker-entrypoint.sh
    - /
  - Name: expose
    Ports:
    - "8080"
  - Name: user
    User: plone
  - Name: workdir
    Path: /plone/instance
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: python:2.7-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:2.7-slim
