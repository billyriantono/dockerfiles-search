MetaArgs: null
Stages:
- BaseName: alpine
  Commands:
  - Env:
    - Key: AKAMAI_CLI_HOME
      Value: /cli
    - Key: GOROOT
      Value: /usr/lib/go
    - Key: GOPATH
      Value: /go
    Name: env
  - CmdLine:
    - mkdir -p /cli/.akamai-cli && mkdir /pipeline
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache git bash python2 python2-dev py2-pip python3 python3-dev
      npm wget jq openssl openssl-dev curl nodejs build-base libffi libffi-dev vim
      nano util-linux go dep tree bind-tools
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q `curl -s https://api.github.com/repos/akamai/cli/releases/latest | jq
      .assets[].browser_download_url | grep linuxamd64 | grep -v sig | sed s/\"//g`
    Name: run
    PrependShell: true
  - CmdLine:
    - mv akamai-*-linuxamd64 /usr/local/bin/akamai && chmod +x /usr/local/bin/akamai
    Name: run
    PrependShell: true
  - CmdLine:
    - go get github.com/akamai/cli && cd $GOPATH/src/github.com/akamai/cli && dep
      ensure && go build -o /usr/local/bin/akamai && chmod +x /usr/local/bin/akamai
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://developer.akamai.com/cli/package-list.json | jq .packages[].name
      | sed s/\"//g | xargs akamai install --force
    Name: run
    PrependShell: true
  - CmdLine:
    - akamai install --force property-manager
    Name: run
    PrependShell: true
  - CmdLine:
    - akamai install cli-api-gateway
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'eval "$(/usr/local/bin/akamai --bash)"' >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "[cli]" > /cli/.akamai-cli/config &&     echo "cache-path            =
      /cli/.akamai-cli/cache" >> /cli/.akamai-cli/config &&     echo "config-version        =
      1" >> /cli/.akamai-cli/config &&     echo "enable-cli-statistics = true" >>
      /cli/.akamai-cli/config &&     echo "last-ping             = 2018-08-08T00:00:12Z"
      >> /cli/.akamai-cli/config &&     echo "client-id             = world-tour"
      >> /cli/.akamai-cli/config &&     echo "install-in-path       =" >> /cli/.akamai-cli/config
      &&     echo "last-upgrade-check    = ignore" >> /cli/.akamai-cli/config
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''         ___    __                         _    '' >  /root/.motd &&     echo
      ''        /   |  / /______ _____ ___  ____ _(_)   '' >> /root/.motd &&     echo
      ''       / /| | / //_/ __ `/ __ `__ \/ __ `/ /    '' >> /root/.motd &&     echo
      ''      / ___ |/ ,< / /_/ / / / / / / /_/ / /     '' >> /root/.motd &&     echo
      ''     /_/  |_/_/|_|\__,_/_/ /_/ /_/\__,_/_/      '' >> /root/.motd &&     echo
      ''================================================'' >> /root/.motd &&     echo
      ''=  Welcome to the Akamai Developer World Tour  ='' >> /root/.motd &&     echo
      ''================================================'' >> /root/.motd &&     echo
      ''=  Warning: This environment is ephemeral,     ='' >> /root/.motd &&     echo
      ''=           and may disappear.                 ='' >> /root/.motd &&     echo
      ''================================================'' >> /root/.motd'
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "cat /root/.motd" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "PS1='Akamai Developer [\w]$ '" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install httpie-edgegrid
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /root/.httpie
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''{'' >> /root/.httpie/config.json &&     echo ''"__meta__": {'' >> /root/.httpie/config.json
      &&     echo ''    "about": "HTTPie configuration file", '' >> /root/.httpie/config.json
      &&     echo ''    "httpie": "1.0.0-dev"'' >> /root/.httpie/config.json &&     echo
      ''}, '' >> /root/.httpie/config.json &&     echo ''"default_options": ["--timeout=300","--style=autumn"],
      '' >> /root/.httpie/config.json &&     echo ''"implicit_content_type": "json"''
      >> /root/.httpie/config.json &&     echo ''}'' >> /root/.httpie/config.json'
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /root
  - Name: volume
    Volumes:
    - /pipeline
  - Name: workdir
    Path: /root
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./examples
    - /root/examples
  - CmdLine:
    - /bin/bash
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine
  Name: ""
  Platform: ""
  SourceCode: FROM alpine
