{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "Ricardo Sierra \u003cricardo@ricardosierra.com.br\u003e",
          "Name": "maintainer"
        },
        {
          "Maintainer": "Daniel Pinto \u003ccayan@programmer.net\u003e",
          "Name": "maintainer"
        },
        {
          "Maintainer": "Claydionei \u003cclaydionei@fidelize.com.br\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "/usr/local/etc/php"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $PHP_INI_DIR/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_EXTRA_BUILD_DEPS",
              "Value": "php5-intl php5-sybase"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_EXTRA_CONFIGURE_ARGS",
              "Value": "--enable-mbstring --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "0B96609E270F565C13292B24C13C70B87267B52D 0BD78B5F97500D450838F95DFE857D9A90D90EC1 F38252826ACD957EF380D39F2F7956BC5DA04B5D"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe \t\u0026\u0026 for key in $GPG_KEYS; do \t\tgpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \tdone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "5.5.38"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://ftp.debian.org/debian/ jessie-updates main contrib non-free\" \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "buildDeps=\"     $PHP_EXTRA_BUILD_DEPS     build-essential     libcurl4-openssl-dev     libreadline6-dev     librecode-dev     libssl-dev     libxml2     libxml2-dev     libpq-dev     libicu-dev     libsasl2-dev     libmcrypt4     libmcrypt-dev     libpng12-dev     libjpeg62-turbo-dev     libfreetype6-dev     libbz2-dev     librecode0     libsqlite3-0     libgearman-dev     libsodium-dev     libc-dev     xz-utils     wget     git     ca-certificates     curl     autoconf     file     g++     gcc     make     pkg-config     re2c     unzip     zip     vim     nano     telnet     netstat-nat     tar \t\" \t\u0026\u0026 set -x \t\u0026\u0026 apt-get update \u0026\u0026 apt-get install -y $buildDeps --no-install-recommends \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 curl -SL --insecure \"http://php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\" -o php.tar.xz \t\u0026\u0026 curl -SL --insecure \"http://php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror\" -o php.tar.xz.asc \t\u0026\u0026 gpg --verify php.tar.xz.asc \t\u0026\u0026 mkdir -p /usr/src/php \t\u0026\u0026 tar -xof php.tar.xz -C /usr/src/php --strip-components=1 \t\u0026\u0026 rm php.tar.xz* \t\u0026\u0026 cd /usr/src/php \t\u0026\u0026 ./configure \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t$PHP_EXTRA_CONFIGURE_ARGS \t\t--disable-cgi \t\t--with-curl \t\t--with-openssl \t\t--with-readline \t\t--with-recode \t\t--with-zlib                 --enable-pcntl                 --with-bz2 \t\u0026\u0026 make -j\"$(nproc)\" \t\u0026\u0026 make install \t\u0026\u0026 { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \t\u0026\u0026 make clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build/docker-php-ext-*",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/docker-php-ext-*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure pgsql -with-pgsql=/usr/include/postgresql/ \u0026\u0026     docker-php-ext-install pgsql pdo_pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install gearman \u0026\u0026     echo \"extension=/usr/local/lib/php/extensions/no-debug-non-zts-20121212/gearman.so\" \u003e /usr/local/etc/php/conf.d/ext-gearman.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install zip \u0026\u0026    docker-php-ext-install zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install ftp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-install gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install intl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install libsodium \u0026\u0026     echo \"extension=/usr/local/lib/php/extensions/no-debug-non-zts-20121212/libsodium.so\" \u003e /usr/local/etc/php/conf.d/ext-sodium.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "yes | pecl install xdebug     \u0026\u0026 echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" \u003e /usr/local/etc/php/conf.d/ext-xdebug.ini    \u0026\u0026 echo \"xdebug.remote_enable=1\" \u003e\u003e /usr/local/etc/php/conf.d/ext-xdebug.ini    \u0026\u0026 echo \"xdebug.remote_connect_back=1\" \u003e\u003e /usr/local/etc/php/conf.d/ext-xdebug.ini    \u0026\u0026 echo \"xdebug.remote_handler=dbgp\" \u003e\u003e /usr/local/etc/php/conf.d/ext-xdebug.ini    \u0026\u0026 echo \"xdebug.remote_port=9001\" \u003e\u003e /usr/local/etc/php/conf.d/ext-xdebug.ini    \u0026\u0026 echo \"xdebug.remote_autostart=1\" \u003e\u003e /usr/local/etc/php/conf.d/ext-xdebug.ini    \u0026\u0026 echo \"xdebug.idekey=docker\" \u003e\u003e /usr/local/etc/php/conf.d/ext-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mongo \u0026\u0026     echo \"extension=/usr/local/lib/php/extensions/no-debug-non-zts-20121212/mongo.so\" \u003e /usr/local/etc/php/conf.d/ext-mongo.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mongodb \u0026\u0026     echo \"extension=/usr/local/lib/php/extensions/no-debug-non-zts-20121212/mongodb.so\" \u003e /usr/local/etc/php/conf.d/ext-mongodb.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHPREDIS_VERSION",
              "Value": "2.2.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -k -L -o /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/$PHPREDIS_VERSION.tar.gz     \u0026\u0026 tar xfz /tmp/redis.tar.gz     \u0026\u0026 rm -r /tmp/redis.tar.gz     \u0026\u0026 mv phpredis-$PHPREDIS_VERSION /usr/src/php/ext/redis     \u0026\u0026 docker-php-ext-install redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --no-check-certificate http://phar.phpunit.de/phpunit.phar \u0026\u0026     mv phpunit.phar /usr/bin/phpunit \u0026\u0026     chmod +x /usr/bin/phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -c http://static.phpmd.org/php/latest/phpmd.phar \u0026\u0026     mv phpmd.phar /usr/bin/phpmd \u0026\u0026     chmod +x /usr/bin/phpmd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS http://getcomposer.org/installer | php \u0026\u0026     mv composer.phar /usr/bin/composer \u0026\u0026     chmod +x /usr/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php-fpm.conf",
            "/usr/local/etc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php.ini",
            "/usr/local/etc/php/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/www.conf",
            "/etc/php5/fpm/pool.d/www.conf"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}