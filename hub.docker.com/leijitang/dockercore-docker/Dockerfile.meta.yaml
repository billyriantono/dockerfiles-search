MetaArgs: null
Stages:
- BaseName: debian:jessie
  Commands:
  - Key: APT_MIRROR
    Name: arg
    Value: deb.debian.org
  - CmdLine:
    - sed -ri "s/(httpredir|deb).debian.org/$APT_MIRROR/g" /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \tapparmor \tapt-utils \taufs-tools \tautomake
      \tbash-completion \tbinutils-mingw-w64 \tbsdmainutils \tbtrfs-tools \tbuild-essential
      \tcmake \tcreaterepo \tcurl \tdpkg-sig \tgcc-mingw-w64 \tgit \tiptables \tjq
      \tless \tlibapparmor-dev \tlibcap-dev \tlibnl-3-dev \tlibprotobuf-c0-dev \tlibprotobuf-dev
      \tlibsystemd-journal-dev \tlibtool \tmercurial \tnet-tools \tpkg-config \tprotobuf-compiler
      \tprotobuf-c-compiler \tpython-dev \tpython-mock \tpython-pip \tpython-websocket
      \ttar \tvim \tvim-common \txfsprogs \tzip \t--no-install-recommends \t&& pip
      install awscli==1.10.15"
    Name: run
    PrependShell: true
  - Env:
    - Key: LVM2_VERSION
      Value: 2.02.103
    Name: env
  - CmdLine:
    - "mkdir -p /usr/local/lvm2 \t&& curl -fsSL \"https://mirrors.kernel.org/sourceware/lvm2/LVM2.${LVM2_VERSION}.tgz\"
      \t\t| tar -xzC /usr/local/lvm2 --strip-components=1"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/lvm2 \t&& ./configure \t\t--build=\"$(gcc -print-multiarch)\"
      \t\t--enable-static_link \t&& make device-mapper \t&& make install_device-mapper"
    Name: run
    PrependShell: true
  - Env:
    - Key: SECCOMP_VERSION
      Value: 2.3.2
    Name: env
  - CmdLine:
    - "set -x \t&& export SECCOMP_PATH=\"$(mktemp -d)\" \t&& curl -fsSL \"https://github.com/seccomp/libseccomp/releases/download/v${SECCOMP_VERSION}/libseccomp-${SECCOMP_VERSION}.tar.gz\"
      \t\t| tar -xzC \"$SECCOMP_PATH\" --strip-components=1 \t&& ( \t\tcd \"$SECCOMP_PATH\"
      \t\t&& ./configure --prefix=/usr/local \t\t&& make \t\t&& make install \t\t&&
      ldconfig \t) \t&& rm -rf \"$SECCOMP_PATH\""
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_VERSION
      Value: 1.8.3
    Name: env
  - CmdLine:
    - "curl -fsSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" \t|
      tar -xzC /usr/local"
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /go/bin:/usr/local/go/bin:$PATH
    Name: env
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: GO_TOOLS_COMMIT
      Value: 823804e1ae08dbb14eb807afc7db9993bc9e3cc3
    Name: env
  - CmdLine:
    - "git clone https://github.com/golang/tools.git /go/src/golang.org/x/tools \t&&
      (cd /go/src/golang.org/x/tools && git checkout -q $GO_TOOLS_COMMIT)"
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_LINT_COMMIT
      Value: 32a87160691b3c96046c0c678fe57c5bef761456
    Name: env
  - CmdLine:
    - "git clone https://github.com/golang/lint.git /go/src/github.com/golang/lint
      \t&& (cd /go/src/github.com/golang/lint && git checkout -q $GO_LINT_COMMIT)
      \t&& go install -v github.com/golang/lint/golint"
    Name: run
    PrependShell: true
  - Env:
    - Key: CRIU_VERSION
      Value: 2.12.1
    Name: env
  - CmdLine:
    - "apt-get install libnet-dev -y && \tmkdir -p /usr/src/criu \t&& curl -sSL https://github.com/xemul/criu/archive/v${CRIU_VERSION}.tar.gz
      | tar -v -C /usr/src/criu/ -xz --strip-components=1 \t&& cd /usr/src/criu \t&&
      make \t&& make install-criu"
    Name: run
    PrependShell: true
  - Env:
    - Key: REGISTRY_COMMIT_SCHEMA1
      Value: ec87e9b6971d831f0eff752ddb54fb64693e51cd
    Name: env
  - Env:
    - Key: REGISTRY_COMMIT
      Value: 47a064d4195a9b56133891bbb13620c3ac83a827
    Name: env
  - CmdLine:
    - "set -x \t&& export GOPATH=\"$(mktemp -d)\" \t&& git clone https://github.com/docker/distribution.git
      \"$GOPATH/src/github.com/docker/distribution\" \t&& (cd \"$GOPATH/src/github.com/docker/distribution\"
      && git checkout -q \"$REGISTRY_COMMIT\") \t&& GOPATH=\"$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH\"
      \t\tgo build -o /usr/local/bin/registry-v2 github.com/docker/distribution/cmd/registry
      \t&& (cd \"$GOPATH/src/github.com/docker/distribution\" && git checkout -q \"$REGISTRY_COMMIT_SCHEMA1\")
      \t&& GOPATH=\"$GOPATH/src/github.com/docker/distribution/Godeps/_workspace:$GOPATH\"
      \t\tgo build -o /usr/local/bin/registry-v2-schema1 github.com/docker/distribution/cmd/registry
      \t&& rm -rf \"$GOPATH\""
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTARY_VERSION
      Value: v0.5.0
    Name: env
  - CmdLine:
    - "set -x \t&& export GOPATH=\"$(mktemp -d)\" \t&& git clone https://github.com/docker/notary.git
      \"$GOPATH/src/github.com/docker/notary\" \t&& (cd \"$GOPATH/src/github.com/docker/notary\"
      && git checkout -q \"$NOTARY_VERSION\") \t&& GOPATH=\"$GOPATH/src/github.com/docker/notary/vendor:$GOPATH\"
      \t\tgo build -o /usr/local/bin/notary-server github.com/docker/notary/cmd/notary-server
      \t&& GOPATH=\"$GOPATH/src/github.com/docker/notary/vendor:$GOPATH\" \t\tgo build
      -o /usr/local/bin/notary github.com/docker/notary/cmd/notary \t&& rm -rf \"$GOPATH\""
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_PY_COMMIT
      Value: a962578e515185cf06506050b2200c0b81aa84ef
    Name: env
  - CmdLine:
    - "git clone https://github.com/docker/docker-py.git /docker-py \t&& cd /docker-py
      \t&& git checkout -q $DOCKER_PY_COMMIT \t&& pip install docker-pycreds==0.2.1
      \t&& pip install -r test-requirements.txt"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install yamllint==1.5.0
    Name: run
    PrependShell: true
  - Env:
    - Key: GO_SWAGGER_COMMIT
      Value: c28258affb0b6251755d92489ef685af8d4ff3eb
    Name: env
  - CmdLine:
    - "git clone https://github.com/go-swagger/go-swagger.git /go/src/github.com/go-swagger/go-swagger
      \t&& (cd /go/src/github.com/go-swagger/go-swagger && git checkout -q $GO_SWAGGER_COMMIT)
      \t&& go install -v github.com/go-swagger/go-swagger/cmd/swagger"
    Name: run
    PrependShell: true
  - CmdLine:
    - git config --global user.email 'docker-dummy@example.com'
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -r docker
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --create-home --gid docker unprivilegeduser
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/docker
  - Name: workdir
    Path: /go/src/github.com/docker/docker
  - Env:
    - Key: DOCKER_BUILDTAGS
      Value: apparmor seccomp selinux
    Name: env
  - CmdLine:
    - ln -sfv $PWD/.bashrc ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "source $PWD/hack/make/.integration-test-helpers" >> /etc/bash.bashrc
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - contrib/download-frozen-image-v2.sh
    - /go/src/github.com/docker/docker/contrib/
  - CmdLine:
    - "./contrib/download-frozen-image-v2.sh /docker-frozen-images \tbuildpack-deps:jessie@sha256:85b379ec16065e4fe4127eb1c5fb1bcc03c559bd36dbb2e22ff496de55925fa6
      \tbusybox:latest@sha256:32f093055929dbc23dec4d03e09dfe971f5973a9ca5cf059cbfb644c206aa83f
      \tdebian:jessie@sha256:72f784399fd2719b4cb4e16ef8e369a39dc67f53d978cd3e2e7bf4e502c7b793
      \thello-world:latest@sha256:c5515758d4c5e1e838e9cd307f6c6a0d620b5e07e6f927b07d05f6d12a1ac8d7"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hack/dockerfile/binaries-commits
    - /tmp/binaries-commits
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - hack/dockerfile/install-binaries.sh
    - /tmp/install-binaries.sh
  - CmdLine:
    - /tmp/install-binaries.sh tomlv vndr runc containerd tini proxy dockercli
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /usr/local/cli:$PATH
    Name: env
  - CmdLine:
    - echo "source /usr/share/bash-completion/bash_completion" >> /etc/bash.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/local/completion/bash/docker /etc/bash_completion.d/docker
    Name: run
    PrependShell: true
  - CmdLine:
    - hack/dind
    Name: entrypoint
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /go/src/github.com/docker/docker
  From:
    Image: debian:jessie
  Name: ""
  Platform: ""
  SourceCode: FROM debian:jessie
