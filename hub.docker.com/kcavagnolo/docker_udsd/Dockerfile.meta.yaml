MetaArgs: null
Stages:
- BaseName: nvidia/cuda:8.0-cudnn5-devel
  Commands:
  - Maintainer: Ken Cavagnolo <ken@kcavagnolo.com>
    Name: maintainer
  - Env:
    - Key: LANG
      Value: C.UTF-8
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /usr/local/cuda/lib64/:$LD_LIBRARY_PATH
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jupyter_notebook_config.py
    - /root/.jupyter/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run.sh
    - /
  - CmdLine:
    - "echo 'DPkg::Post-Invoke {\"/bin/rm -f /var/cache/apt/archives/*.deb || true\";};'
      | tee /etc/apt/apt.conf.d/no-cache &&   apt-get update --fix-missing &&   apt-get
      install -y --no-install-recommends   \t  build-essential libfreetype6-dev libpng12-dev
      libzmq3-dev  \t  pkg-config python python3-dev rsync software-properties-common
      \t  unzip lrzip libgtk2.0-0 tcl-dev tk-dev \t  wget bzip2 ca-certificates   \t
      \ libglib2.0-0 libxext6 libsm6 libxrender1 \t  git mercurial subversion curl
      grep sed dpkg &&   echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh
      &&   wget --quiet https://repo.continuum.io/archive/Anaconda3-4.2.0-Linux-x86_64.sh
      -O ~/anaconda.sh &&   /bin/bash ~/anaconda.sh -b -p /opt/conda &&   rm ~/anaconda.sh
      &&   TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep
      -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:'` &&   curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\"
      > tini.deb &&   dpkg -i tini.deb &&   rm tini.deb &&   apt-get clean &&   apt-get
      autoremove -y &&   rm -rf /var/lib/apt/lists/* &&   export PATH=/opt/conda/bin:$PATH
      &&   conda install pip -y &&   conda install -c menpo opencv3 -y &&   conda
      install -c conda-forge jupyter_contrib_nbextensions -y &&   conda install -c
      conda-forge jupyter_nbextensions_configurator -y &&   jupyter contrib nbextension
      install --system &&   apt-get clean &&   apt-get autoremove -y &&   rm -rf /var/lib/apt/lists/*
      &&   chmod +x /run.sh &&   conda clean -tp -y &&   mkdir -p /usr/src/app"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/app
  - Expression: COPY requirements.txt /usr/src/app/
    Name: onbuild
  - Expression: RUN pip install --no-cache-dir -r requirements.txt
    Name: onbuild
  - Name: expose
    Ports:
    - "6006"
  - Name: expose
    Ports:
    - "8888"
  - Name: expose
    Ports:
    - "4567"
  - Env:
    - Key: PATH
      Value: /opt/conda/bin:$PATH
    Name: env
  - CmdLine:
    - /usr/bin/tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /run.sh
    Name: cmd
    PrependShell: false
  From:
    Image: nvidia/cuda:8.0-cudnn5-devel
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:8.0-cudnn5-devel
