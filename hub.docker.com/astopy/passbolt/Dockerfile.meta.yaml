MetaArgs: null
Stages:
- BaseName: php:7-fpm
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"diego@passbolt.com"'
    Name: label
  - Key: PASSBOLT_VERSION
    Name: arg
    Value: '"2.0.5"'
  - Key: PASSBOLT_URL
    Name: arg
    Value: '"https://github.com/passbolt/passbolt_api/archive/v${PASSBOLT_VERSION}.tar.gz"'
  - Key: PHP_EXTENSIONS
    Name: arg
    Value: '"gd       intl       pdo_mysql       xsl"'
  - Key: PHP_EXTENSIONS
    Name: arg
    Value: '"gd       intl       pdo_mysql       xsl"'
  - Key: PECL_PASSBOLT_EXTENSIONS
    Name: arg
    Value: '"gnupg       redis       mcrypt"'
  - Key: PASSBOLT_DEV_PACKAGES
    Name: arg
    Value: '"libgpgme11-dev       libpng-dev       libjpeg62-turbo-dev       libicu-dev       libxslt1-dev       libmcrypt-dev       unzip       git"'
  - Env:
    - Key: PECL_BASE_URL
      Value: '"https://pecl.php.net/get"'
    Name: env
  - Env:
    - Key: PHP_EXT_DIR
      Value: '"/usr/src/php/ext"'
    Name: env
  - Name: workdir
    Path: /var/www/passbolt
  - CmdLine:
    - 'apt-get update     && apt-get -y install --no-install-recommends $PASSBOLT_DEV_PACKAGES          nginx          gnupg          libgpgme11          libmcrypt4          mysql-client          supervisor          netcat          cron     &&
      mkdir /home/www-data     && chown -R www-data:www-data /home/www-data     &&
      usermod -d /home/www-data www-data     && docker-php-source extract     && for
      i in $PECL_PASSBOLT_EXTENSIONS; do          mkdir $PHP_EXT_DIR/$i;          curl
      -sSL $PECL_BASE_URL/$i | tar zxf - -C $PHP_EXT_DIR/$i --strip-components 1;        done     &&
      docker-php-ext-configure gd --with-jpeg-dir=/usr/include/     && docker-php-ext-install
      -j4 $PHP_EXTENSIONS $PECL_PASSBOLT_EXTENSIONS     && docker-php-ext-enable $PHP_EXTENSIONS
      $PECL_PASSBOLT_EXTENSIONS     && docker-php-source delete     && EXPECTED_SIGNATURE=$(curl
      -s https://composer.github.io/installer.sig)     && curl -o composer-setup.php
      https://getcomposer.org/installer     && ACTUAL_SIGNATURE=$(php -r "echo hash_file(''SHA384'',
      ''composer-setup.php'');")     && if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE"
      ]; then          >&2 echo ''ERROR: Invalid installer signature'';          rm
      composer-setup.php;          exit 1;        fi     && php composer-setup.php     &&
      mv composer.phar /usr/local/bin/composer     && curl -sSL $PASSBOLT_URL | tar
      zxf - -C . --strip-components 1     && composer install -n --no-dev --optimize-autoloader     &&
      chown -R www-data:www-data .     && chmod 775 $(find /var/www/passbolt/tmp -type
      d)     && chmod 664 $(find /var/www/passbolt/tmp -type f)     && chmod 775 $(find
      /var/www/passbolt/webroot/img/public -type d)     && chmod 664 $(find /var/www/passbolt/webroot/img/public
      -type f)     && rm /etc/nginx/sites-enabled/default     && apt-get purge -y
      --auto-remove $PASSBOLT_DEV_PACKAGES     && rm -rf /var/lib/apt/lists/*     &&
      rm /usr/local/bin/composer'
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/passbolt.conf
    - /etc/nginx/conf.d/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/supervisord.conf
    - /etc/supervisor/supervisord.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/docker-entrypoint.sh
    - /docker-entrypoint.sh
  - Name: expose
    Ports:
    - "443"
    - "80"
  - CmdLine:
    - /docker-entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: php:7-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7-fpm
