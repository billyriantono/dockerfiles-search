{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Maksym Pugach \u003cpugach.m@gmail.com\u003e, Daniel Zhou \u003cdanichau93@gmail.com\u003e, Jack \u003cadmin@nightc.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "BITCOIN_ROOT",
              "Value": "/omnicore"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BDB_PREFIX",
              "Value": "\"${BITCOIN_ROOT}/db4\""
            },
            {
              "Key": "BITCOIN_REPO",
              "Value": "\"${BITCOIN_ROOT}/repo\""
            },
            {
              "Key": "PATH",
              "Value": "\"${BITCOIN_ROOT}/bin:$PATH\""
            },
            {
              "Key": "BITCOIN_DATA",
              "Value": "\"${BITCOIN_ROOT}/data\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $BITCOIN_ROOT \u0026\u0026 mkdir -p $BDB_PREFIX"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/omnicore"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk upgrade \u0026\u0026     apk add --no-cache libressl boost libevent libtool libzmq boost-dev libressl-dev libevent-dev zeromq-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache git autoconf automake g++ make file"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b v0.5.0 https://github.com/OmniLayer/omnicore.git $BITCOIN_REPO"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz' \u0026\u0026     echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz' | sha256sum -c"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar -xzf db-4.8.30.NC.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd db-4.8.30.NC/build_unix/ \u0026\u0026     ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX \u0026\u0026     make -j4 \u0026\u0026     make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd $BITCOIN_REPO \u0026\u0026     ./autogen.sh \u0026\u0026     ./configure         LDFLAGS=\"-L${BDB_PREFIX}/lib/\"         CPPFLAGS=\"-I${BDB_PREFIX}/include/\"         --disable-tests         --disable-bench         --disable-ccache         --with-gui=no         --with-utils         --with-libs         --with-daemon         --prefix=$BITCOIN_ROOT \u0026\u0026     make -j4 \u0026\u0026     make install \u0026\u0026     rm -rf $BITCOIN_ROOT/db-4.8.30.NC* \u0026\u0026     rm -rf $BDB_PREFIX/docs \u0026\u0026     rm -rf $BITCOIN_REPO \u0026\u0026     strip $BITCOIN_ROOT/bin/omnicore-cli \u0026\u0026     strip $BITCOIN_ROOT/bin/bitcoin-tx \u0026\u0026     strip $BITCOIN_ROOT/bin/omnicored \u0026\u0026     strip $BITCOIN_ROOT/lib/libbitcoinconsensus.a \u0026\u0026     strip $BITCOIN_ROOT/lib/libbitcoinconsensus.so.0.0.0 \u0026\u0026     apk del git autoconf automake g++ make file"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod u+x /entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "18332",
            "18333",
            "18444",
            "8332",
            "8333"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "omnicored"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}