MetaArgs: null
Stages:
- BaseName: centos:centos7
  Commands:
  - Env:
    - Key: SONAR_VERSION
      Value: 6.7.1
    - Key: SONARQUBE_HOME
      Value: /opt/sonarqube
    - Key: SONARQUBE_JDBC_USERNAME
      Value: sonar
    - Key: SONARQUBE_JDBC_PASSWORD
      Value: sonar
    - Key: SONARQUBE_JDBC_URL
      Value: ""
    - Key: LANG
      Value: en_US.utf8
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/jre
    Name: env
  - Name: expose
    Ports:
    - "9000"
  - Labels:
    - Key: name
      Value: '"sonarqube"'
    - Key: vendor
      Value: '"SonarSource"'
    - Key: version
      Value: '"${SONAR_VERSION}-centos7"'
    - Key: run
      Value: '''docker run -di             --name ${NAME}             -p 9000:9000             $IMAGE'''
    - Key: io.k8s.description
      Value: '"SonarQube"'
    - Key: io.k8s.display-name
      Value: '"SonarQube"'
    - Key: io.openshift.build.commit.author
      Value: '"Red Hat Systems Engineering <refarch-feedback@redhat.com>"'
    - Key: io.openshift.expose-services
      Value: '"9000:9000"'
    - Key: io.openshift.tags
      Value: '"sonarqube,sonar,sonarsource"'
    Name: label
  - CmdLine:
    - yum -y install --setopt=tsflags=nodocs java-1.8.0-openjdk unzip hostname &&     yum
      clean all
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x     gpg --gen-key &&     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys
      F1182E81C792928921DBCAB4CFCA4A29D26468DE &&     cd /opt &&     curl -o sonarqube.zip
      -SL https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-${SONAR_VERSION}.zip                 --retry
      9 --retry-max-time 0 -C - &&     curl -o sonarqube.zip.asc -SL https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-${SONAR_VERSION}.zip.asc                 --retry
      9 --retry-max-time 0 -C - &&     gpg --batch --verify sonarqube.zip.asc sonarqube.zip
      &&     unzip sonarqube.zip &&     mv sonarqube-${SONAR_VERSION} sonarqube &&     rm
      sonarqube.zip* &&     rm -rf ${SONARQUBE_HOME}/bin/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - run.sh
    - ${SONARQUBE_HOME}/bin/
  - Env:
    - Key: PATH
      Value: $PATH:${SONARQUBE_HOME}/bin
    Name: env
  - CmdLine:
    - useradd -l -u 10001 -r -g 0 -m -s /sbin/nologin         -c "sonarqube application
      user" sonarqube &&     chown -R 10001:0 ${SONARQUBE_HOME} &&     chmod -R g=u
      ${SONARQUBE_HOME} &&     chmod ug+x ${SONARQUBE_HOME}/bin/run.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${SONARQUBE_HOME}/data
    - ${SONARQUBE_HOME}/extensions
  - Name: user
    User: "10001"
  - Name: workdir
    Path: ${SONARQUBE_HOME}
  - CmdLine:
    - run.sh
    Name: entrypoint
    PrependShell: true
  From:
    Image: centos:centos7
  Name: ""
  Platform: ""
  SourceCode: FROM centos:centos7
