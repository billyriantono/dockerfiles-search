MetaArgs: null
Stages:
- BaseName: nginx
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Erin Schnabel <schnabel@us.ibm.com> (@ebullientworks)"'
    Name: label
  - Env:
    - Key: ETCD_VERSION
      Value: 2.2.2
    Name: env
  - CmdLine:
    - apt-get update   && apt-get install -y      curl      procps      wget   &&
      rm -rf /var/lib/apt/lists/*     && wget https://github.com/coreos/etcd/releases/download/v${ETCD_VERSION}/etcd-v${ETCD_VERSION}-linux-amd64.tar.gz
      -q   && tar xzf etcd-v${ETCD_VERSION}-linux-amd64.tar.gz etcd-v${ETCD_VERSION}-linux-amd64/etcdctl
      --strip-components=1   && rm etcd-v${ETCD_VERSION}-linux-amd64.tar.gz   && mv
      etcdctl /usr/local/bin/etcdctl
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./nginx-common.conf
    - /etc/nginx/nginx-common.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./nginx-nolog.conf
    - /etc/nginx/nginx-nolog.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./startup.sh
    - /opt/startup.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./forwarder.conf
    - /opt/forwarder.conf
  - Env:
    - Key: VERSION
      Value: 3.1.6
    Name: env
  - CmdLine:
    - mkdir -p /opt/www   && wget https://github.com/swagger-api/swagger-ui/archive/v${VERSION}.tar.gz
      -q   && tar xzvf v${VERSION}.tar.gz --strip-components=2 -C /opt/www swagger-ui-${VERSION}/dist   &&
      rm v${VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./lib/crypto-js/*
    - /opt/www/lib/crypto-js/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./index.html
    - /opt/www/index.html
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./gameontext.json
    - /opt/www/
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./gameontext.yaml
    - /opt/www/
  - Name: expose
    Ports:
    - "8080"
  - CmdLine:
    - /opt/startup.sh
    Name: cmd
    PrependShell: false
  - Health:
      StartPeriod: 40000000000
      Test:
      - CMD-SHELL
      - wget -q -O /dev/null http://localhost:8080/health
      Timeout: 10000000000
    Name: healthcheck
  From:
    Image: nginx
  Name: ""
  Platform: ""
  SourceCode: FROM nginx
