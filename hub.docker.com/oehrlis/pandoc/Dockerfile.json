{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.9.4",
      "SourceCode": "FROM alpine:3.9.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.9.4"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"stefan.oehrli@trivadis.com\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "WORKDIR",
              "Value": "\"/workdir\""
            },
            {
              "Key": "PATH",
              "Value": "/usr/local/texlive/2019/bin/x86_64-linuxmusl:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "texlive.profile",
            "/tmp/texlive.profile"
          ]
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk upgrade \u0026\u0026 apk add --update --no-cache         wget msttcorefonts-installer xz curl ghostscript perl         tar gzip zip unzip fontconfig \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /tmp/texlive \u0026\u0026     curl -Lsf http://www.pirbot.com/mirrors/ctan/systems/texlive/tlnet/install-tl-unx.tar.gz         | tar zxvf - --strip-components 1 -C /tmp/texlive/ \u0026\u0026     /tmp/texlive/install-tl --profile /tmp/texlive.profile \u0026\u0026     tlmgr install         ttfutils fontinst         fvextra footnotebackref times         helvetic symbol zapfding ly1 lm-math         titlesec xetex ec mweights         sourcecodepro titling csquotes          mdframed draftwatermark mdwtools         everypage minitoc breakurl lastpage         datetime fmtcount blindtext fourier textpos         needspace sourcesanspro pagecolor epstopdf         adjustbox collectbox ulem bidi upquote xecjk xurl \u0026\u0026     tlmgr backup --clean --all \u0026\u0026     curl -f http://tug.org/fonts/getnonfreefonts/install-getnonfreefonts         -o /tmp/install-getnonfreefonts \u0026\u0026     texlua /tmp/install-getnonfreefonts \u0026\u0026     getnonfreefonts --sys arial-urw \u0026\u0026     rm -rv /tmp/texlive /tmp/texlive.profile /tmp/install* \u0026\u0026     rm /usr/local/texlive/*/tlpkg/texlive.tlpdb.*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Lsf -o /tmp/nunito.zip https://fonts.google.com/download?family=Nunito \u0026\u0026     curl -Lsf -o /tmp/nunito_sans.zip https://fonts.google.com/download?family=Nunito%20Sans \u0026\u0026     unzip -o -d /usr/share/fonts/custom/ /tmp/nunito.zip \u0026\u0026     unzip -o -d /usr/share/fonts/custom/ /tmp/nunito_sans.zip \u0026\u0026     update-ms-fonts \u0026\u0026     fc-cache -fv \u0026\u0026     rm -rv /tmp/*.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "PANDOC_URL=$(curl -s https://api.github.com/repos/jgm/pandoc/releases/latest         | grep 'browser_download.*pandoc-.*-linux.tar.gz'         | cut -d: -f 2,3 | tr -d '\"' ) \u0026\u0026     curl -Lsf ${PANDOC_URL}         | tar zxvf - --strip-components 2 -C /usr/local/bin \u0026\u0026     rm -rf /usr/local/bin/man /usr/local/bin//pandoc-citeproc \u0026\u0026     mkdir -p ${WORKDIR}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GITHUB_URL",
              "Value": "\"https://github.com/oehrlis/pandoc_template/raw/master/\""
            },
            {
              "Key": "PANDOC_DATA",
              "Value": "\"/root/.pandoc\""
            },
            {
              "Key": "PANDOC_TEMPLATES",
              "Value": "\"/root/.pandoc/templates\""
            },
            {
              "Key": "PANDOC_IMAGES",
              "Value": "\"/root/.pandoc/images\""
            },
            {
              "Key": "TRIVADIS_TEMPLATES",
              "Value": "\"/trivadis/templates\""
            },
            {
              "Key": "TRIVADIS_IMAGES",
              "Value": "\"/trivadis/images\""
            },
            {
              "Key": "TRIVADIS_TEX",
              "Value": "\"trivadis.tex\""
            },
            {
              "Key": "TRIVADIS_DOCX",
              "Value": "\"trivadis.docx\""
            },
            {
              "Key": "TRIVADIS_PPTX",
              "Value": "\"trivadis.pptx\""
            },
            {
              "Key": "TRIVADIS_LATEX",
              "Value": "\"trivadis.latex\""
            },
            {
              "Key": "TRIVADIS_LOGO",
              "Value": "\"TVDLogo2019.eps\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p ${TRIVADIS_TEMPLATES} ${TRIVADIS_IMAGES} ${PANDOC_DATA}         ${PANDOC_TEMPLATES} ${PANDOC_IMAGES} \u0026\u0026     curl -Lsf ${GITHUB_URL}/templates/${TRIVADIS_TEX}  -o ${TRIVADIS_TEMPLATES}/${TRIVADIS_TEX} \u0026\u0026     curl -Lsf ${GITHUB_URL}/templates/${TRIVADIS_DOCX} -o ${TRIVADIS_TEMPLATES}/${TRIVADIS_DOCX} \u0026\u0026     curl -Lsf ${GITHUB_URL}/templates/${TRIVADIS_PPTX} -o ${TRIVADIS_TEMPLATES}/${TRIVADIS_PPTX} \u0026\u0026     curl -Lsf ${GITHUB_URL}/images/${TRIVADIS_LOGO}    -o ${TRIVADIS_IMAGES}/${TRIVADIS_LOGO} \u0026\u0026     curl -Lsf ${GITHUB_URL}/images/TVDLogo2019-eps-converted-to.pdf -o ${TRIVADIS_IMAGES}/TVDLogo2019-eps-converted-to.pdf \u0026\u0026     ln ${TRIVADIS_TEMPLATES}/${TRIVADIS_TEX} ${TRIVADIS_TEMPLATES}/${TRIVADIS_LATEX} \u0026\u0026     ln ${TRIVADIS_TEMPLATES}/${TRIVADIS_TEX} ${PANDOC_TEMPLATES}/default.latex \u0026\u0026     ln ${TRIVADIS_TEMPLATES}/${TRIVADIS_DOCX} ${PANDOC_DATA}/reference.docx \u0026\u0026     ln ${TRIVADIS_TEMPLATES}/${TRIVADIS_PPTX} ${PANDOC_DATA}/reference.pptx \u0026\u0026     ln ${TRIVADIS_IMAGES}/${TRIVADIS_LOGO} /${TRIVADIS_LOGO}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "${WORKDIR}"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"${WORKDIR}\""
        },
        {
          "CmdLine": [
            "/usr/local/bin/pandoc"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "--help"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}