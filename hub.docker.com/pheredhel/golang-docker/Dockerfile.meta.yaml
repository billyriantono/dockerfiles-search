MetaArgs: null
Stages:
- BaseName: golang:1.9.2-alpine
  Commands:
  - Env:
    - Key: DOCKER_HOST
      Value: tcp://docker:2375
    Name: env
  - CmdLine:
    - '[ ! -e /etc/nsswitch.conf ] && echo ''hosts: files dns'' > /etc/nsswitch.conf'
    Name: run
    PrependShell: true
  - Env:
    - Key: DOCKER_CHANNEL
      Value: stable
    Name: env
  - Env:
    - Key: DOCKER_VERSION
      Value: 17.09.0-ce
    Name: env
  - Env:
    - Key: DOCKER_SHA256
      Value: a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647
    Name: env
  - CmdLine:
    - "set -ex; \tapk add --no-cache --virtual .fetch-deps \t\tcurl \t\ttar \t; \t\tapkArch=\"$(apk
      --print-arch)\"; \tcase \"$apkArch\" in \t\tx86_64) dockerArch='x86_64' ;; \t\taarch64)
      dockerArch='aarch64' ;; \t\tppc64le) dockerArch='ppc64le' ;; \t\ts390x) dockerArch='s390x'
      ;; \t\t*) echo >&2 \"error: unsupported architecture ($apkArch)\"; exit 1 ;;\tesac;
      \t\tif ! curl -fL -o docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz\";
      then \t\techo >&2 \"error: failed to download 'docker-${DOCKER_VERSION}' from
      '${DOCKER_CHANNEL}' for '${dockerArch}'\"; \t\texit 1; \tfi; \t\tif ! echo \"$DOCKER_SHA256
      *docker.tgz\"|sha256sum -c -; then \t\techo >&2 \"error: failed to verify hash
      of docker download\" \t\texit 1; \tfi; \t\ttar --extract \t\t--file docker.tgz
      \t\t--strip-components 1 \t\t--directory /usr/local/bin/ \t; \trm docker.tgz;
      \t\tapk del .fetch-deps; \t\tdockerd -v; \tdocker -v"
    Name: run
    PrependShell: true
  From:
    Image: golang:1.9.2-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM golang:1.9.2-alpine
