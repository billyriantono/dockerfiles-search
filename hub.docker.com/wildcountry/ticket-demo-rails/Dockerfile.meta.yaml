MetaArgs: null
Stages:
- BaseName: ruby:2.3.1-alpine
  Commands:
  - Maintainer: Rick Clare <rick@wildcountrytech.co.uk>
    Name: maintainer
  - Labels:
    - Key: Description
      Value: '"Ruby CI"'
    Name: label
  - CmdLine:
    - /bin/ash
    - -c
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - gem update --system
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler foreman
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - Env:
    - Key: PHANTOMJS_VERSION
      Value: 2.1.1
    - Key: PHANTOMJS_ARCH
      Value: linux-x86_64
    Name: env
  - CmdLine:
    - wget -q -O /tmp/phantomjs-dockerized.tar.gz                "https://github.com/dustinblackman/phantomized/releases/download/${PHANTOMJS_VERSION}/dockerized-phantomjs.tar.gz"     &&
      tar -xz -C / -f /tmp/phantomjs-dockerized.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O /tmp/phantomjs-${PHANTOMJS_VERSION}-${PHANTOMJS_ARCH}.tar.bz2                "https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-${PHANTOMJS_VERSION}-${PHANTOMJS_ARCH}.tar.bz2"     &&
      cd /tmp     && tar xjf /tmp/phantomjs-${PHANTOMJS_VERSION}-${PHANTOMJS_ARCH}.tar.bz2     &&
      cp /tmp/phantomjs-${PHANTOMJS_VERSION}-${PHANTOMJS_ARCH}/bin/phantomjs /usr/local/bin/phantomjs     &&
      rm -rf /tmp/phantomjs-*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "@edge http://nl.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk --no-cache add         build-base         git         libxml2-dev         libxslt-dev         "postgresql-dev@edge<9.6"         "nodejs-lts@edge"         readline-dev         ruby-tzinfo
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/share/zoneinfo/Europe/London /etc/localtime     && echo "Europe/London"
      > /etc/timezone
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /myapp
  - CmdLine:
    - bundle config build.nokogiri --use-system-libraries &&     bundle config without
      production:staging:demo &&     bundle config jobs 3
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .overcommit_gems.rb*
    - /myapp/
  - CmdLine:
    - bundle install --gemfile=.overcommit_gems.rb
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile*
    - /myapp/
  - CmdLine:
    - bundle install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - package.json
    - /myapp/
  - CmdLine:
    - npm install --no-progress
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ./bin:./node_modules/.bin:/bundle/bin:$PATH
    - Key: GIT_AUTHOR_NAME
      Value: '"Example name"'
    - Key: GIT_AUTHOR_EMAIL
      Value: '"example@example.com"'
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /myapp
  - CmdLine:
    - rm -rf /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  From:
    Image: ruby:2.3.1-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2.3.1-alpine
