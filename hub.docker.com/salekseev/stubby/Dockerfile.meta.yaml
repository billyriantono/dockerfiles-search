MetaArgs: null
Stages:
- BaseName: alpine:3.8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Stas Alekseev <stas.alekseev@gmail.com>"'
    Name: label
  - Env:
    - Key: GETDNS_VERSION
      Value: 1.4.2
    Name: env
  - CmdLine:
    - "GPG_KEYS=E5F8F8212F77A498     && CONFIG=\"        --prefix=/usr         --sysconfdir=/etc
      \        --localstatedir=/var         --without-libidn         --without-libidn2
      \        --enable-stub-only         --with-stubby     \"     && addgroup -S
      stubby \t&& adduser -D -S -s /sbin/nologin -G stubby stubby     && apk add --no-cache
      \        ca-certificates         tzdata         libbsd         libressl         yaml
      \    && apk add --no-cache --virtual .build-deps         curl \t\tgnupg \t\tgcc
      \t\tlibc-dev         libbsd-dev \t\tmake         libtool         m4         autoconf
      \        file \t\tlibressl-dev \t\tyaml-dev         libcap \t&& curl -fSL https://getdnsapi.net/dist/getdns-$GETDNS_VERSION.tar.gz
      -o getdns.tar.gz     && curl -fSL https://getdnsapi.net/dist/getdns-$GETDNS_VERSION.tar.gz.asc
      \ -o getdns.tar.gz.asc     && export GNUPGHOME=\"$(mktemp -d)\" \t&& found='';
      \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80
      \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching
      GPG key $GPG_KEYS from $server\"; \t\tgpg --keyserver \"$server\" --keyserver-options
      timeout=10 --recv-keys \"$GPG_KEYS\" && found=yes && break; \tdone; \ttest -z
      \"$found\" && echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\" && exit
      1; \tgpg --batch --verify getdns.tar.gz.asc getdns.tar.gz \t&& rm -rf \"$GNUPGHOME\"
      getdns.tar.gz.asc \t&& mkdir -p /usr/src \t&& tar -zxC /usr/src -f getdns.tar.gz
      \t&& rm getdns.tar.gz     && cd /usr/src/getdns-$GETDNS_VERSION     && ./configure
      $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN)     && make install     &&
      strip /usr/bin/getdns* /usr/bin/stubby /usr/lib/libgetdns.so*     && rm -rf
      /usr/src/nginx-$GETDNS_VERSION     && setcap 'cap_net_bind_service=+ep' /usr/bin/stubby
      \    && apk del .build-deps"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - stubby.yml
    - /etc/stubby/stubby.yml
  - Name: expose
    Ports:
    - "53"
  - Name: user
    User: stubby
  - CmdLine:
    - stubby
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
