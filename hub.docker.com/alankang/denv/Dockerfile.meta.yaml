MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Key: DEBIAN_FRONTEND
    Name: arg
    Value: noninteractive
  - CmdLine:
    - apt-get update && apt-get install -y locales && locale-gen en_US.UTF-8
    Name: run
    PrependShell: true
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y       autotools-dev       automake       bison       build-essential       curl       editorconfig       flex       gettext       git        iputils-ping       libbz2-dev       libevent-dev       libffi-dev       liblzma-dev       libncurses5-dev       libncursesw5-dev       libreadline-dev       libssl-dev       libsqlite3-dev       llvm       mosh       net-tools       netcat-openbsd       pkg-config       python-openssl       rsync       ruby       ruby-dev       silversearcher-ag       socat       software-properties-common       tidy       tk-dev       tmux       tmuxinator       tree       vim       wget       xz-utils       yadm       zlib1g-dev       zsh
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/tmux/tmux.git &&       cd tmux &&       sh autogen.sh
      &&       ./configure &&       make &&       make install &&       cp /usr/local/bin/tmux
      /usr/bin/tmux &&       cd .. &&       rm -rf tmux
    Name: run
    PrependShell: true
  - CmdLine:
    - chsh -s $(which zsh) &&       rm ~/.bashrc &&       sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_12.x | bash - &&       apt-get install
      -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://pyenv.run | bash &&       /root/.pyenv/bin/pyenv install 3.7.4
      &&       /root/.pyenv/bin/pyenv install 3.8.0 &&       /root/.pyenv/bin/pyenv
      global 3.7.4
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install       bundler       jekyll
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf &&       ~/.fzf/install
      --all &&       ln -s ~/.fzf/bin/fzf /usr/local/bin/fzf
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g       eslint       stylelint       typescript       @vue/cli
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
      | python &&       rm /root/.profile &&       mkdir -p ~/.oh-my-zsh/plugins/poetry
      &&       ~/.poetry/bin/poetry completions zsh > ~/.oh-my-zsh/plugins/poetry/_poetry
    Name: run
    PrependShell: true
  - CmdLine:
    - /root/.pyenv/shims/pip install --upgrade pip && /root/.pyenv/shims/pip install       autopep8       cookiecutter       flake8       isort       pylint       yapf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /root/.config/entrypoint.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - yadm.git.config
    - /root/.config/yadm.git.config
  - Name: workdir
    Path: /root
  - CmdLine:
    - /root/.config/entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
