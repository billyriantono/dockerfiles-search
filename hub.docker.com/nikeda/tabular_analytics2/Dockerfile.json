{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jupyter/scipy-notebook",
      "SourceCode": "FROM jupyter/scipy-notebook",
      "Platform": "",
      "From": {
        "Image": "jupyter/scipy-notebook"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Naoya Ikeda \u003cn_ikeda@hotmail.com\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "azcopy_linux_amd64_10.2.1/azcopy",
            "/usr/local/bin"
          ]
        },
        {
          "CmdLine": [
            "mkdir /home/jovyan/.R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /root/.R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "Makevars",
            "/home/jovyan/.R"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "Makevars",
            "/root/.R"
          ]
        },
        {
          "Env": [
            {
              "Key": "ACCEPT_EULA",
              "Value": "Y"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TMPDIR",
              "Value": "/tmp"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JULIA_DEPOT_PATH",
              "Value": "/opt/julia"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JULIA_PKGDIR",
              "Value": "/opt/julia"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JULIA_VERSION",
              "Value": "1.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"now building...\" \u0026\u0026     cd /root \u0026\u0026     apt update \u0026\u0026     apt install -y git gnupg curl wget cmake gfortran unzip libsm6 pandoc libjpeg-dev libgsl-dev libunwind-dev libgmp3-dev　libfontconfig1-dev libudunits2-dev libgeos-dev　libmagick++-dev \u0026\u0026     apt install -y lsb-release build-essential libssl-dev libc6-dev libicu-dev apt-file libxrender1 \u0026\u0026     apt install -y texlive-latex-base texlive-latex-extra texlive-fonts-extra texlive-fonts-recommended texlive-generic-recommended \u0026\u0026     apt install -y fonts-ipafont-gothic fonts-ipafont-mincho \u0026\u0026     apt install -y vim default-jdk libv8-3.14-dev libxml2-dev libcurl4-openssl-dev libssl-dev \u0026\u0026     apt install -y xorg libx11-dev libglu1-mesa-dev libfreetype6-dev \u0026\u0026     apt clean \u0026\u0026     curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add - \u0026\u0026     curl https://packages.microsoft.com/config/ubuntu/18.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list \u0026\u0026     apt update \u0026\u0026     apt install -y  unixodbc freetds-bin freetds-common tdsodbc unixodbc-dev mssql-tools \u0026\u0026     apt clean \u0026\u0026     conda update -n base -c defaults conda -y \u0026\u0026     conda install -y python=3.6 rise pyodbc pymssql -y \u0026\u0026     jupyter-nbextension install rise --py --sys-prefix \u0026\u0026     jupyter-nbextension enable rise --py --sys-prefix \u0026\u0026     conda install -y -c anaconda mysql-connector-python psycopg2 bokeh pillow pytz patsy python-dateutil networkx pygraphviz cython sphinx \u0026\u0026     conda install -y -c h2oai h2o \u0026\u0026     conda install -y -c conda-forge xgboost lightgbm fbprophet lime shap plotly tqdm chardet pulp python-igraph \u0026\u0026     wget https://mran.blob.core.windows.net/install/mro/3.5.3/ubuntu/microsoft-r-open-3.5.3.tar.gz \u0026\u0026     tar -xf microsoft-r-open-3.5.3.tar.gz \u0026\u0026     cd microsoft-r-open/ \u0026\u0026     ./install.sh -a -u \u0026\u0026     apt clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026     ln -s /usr/include/locale.h /usr/include/xlocale.h \u0026\u0026     wget https://github.com/unicode-org/icu/archive/release-58-3.tar.gz \u0026\u0026     tar xvzf release-58-3.tar.gz \u0026\u0026     cd icu-release-58-3/icu4c/source \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     ldconfig /etc/ld.so.conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /opt/julia-${JULIA_VERSION} \u0026\u0026     cd /tmp \u0026\u0026     wget -q https://julialang-s3.julialang.org/bin/linux/x64/`echo ${JULIA_VERSION} | cut -d. -f 1,2`/julia-${JULIA_VERSION}-linux-x86_64.tar.gz \u0026\u0026     echo \"926ced5dec5d726ed0d2919e849ff084a320882fb67ab048385849f9483afc47 *julia-${JULIA_VERSION}-linux-x86_64.tar.gz\" | sha256sum -c - \u0026\u0026     tar xzf julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION} --strip-components=1 \u0026\u0026     rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /etc/julia \u0026\u0026     echo \"push!(Libdl.DL_LOAD_PATH, \\\"$CONDA_DIR/lib\\\")\" \u003e\u003e /etc/julia/juliarc.jl \u0026\u0026     mkdir $JULIA_PKGDIR \u0026\u0026     chown $NB_USER $JULIA_PKGDIR \u0026\u0026     fix-permissions $JULIA_PKGDIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('devtools', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('RCurl', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('RODBC', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('caret', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('VGAM', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('mgcv', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('forecast', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('beyesm', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('quantreg', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('brms', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('MCMCpack', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('dlookr', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('MLmetrics', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('glmnet', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('rpart', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('randomForest', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('cluster', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('e1071', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('flexmix', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('mclust', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('fpc', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('mvtnorm', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('MASS', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('kernlab', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('Spectrum', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('xgboost', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('tidyverse', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('tseries', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('tseriesChaos', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('survival', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('fitdistrplus', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('ggplot2', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('ggExtra', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('tidytext', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('GGally', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('BNSL', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('V8', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('huge', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('Matrix', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('lme4', dependencies=TRUE, repos='http://cran.rstudio.com')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('h2o', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('nnet', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('lime', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('RUnit', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('BiocManager', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('reticulate', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('prophet', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('rstanarm', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('shinystan', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"BiocManager::install(c('graph', 'RBGL'))\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('dlm', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('KFAS', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('bsts', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('pcalg', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages('CausalImpact', dependencies=TRUE, repos='http://cran.rstudio.com/')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"devtools::install_github('Laurae2/lgbdl')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"devtools::install_github('rstudio/r2d3')\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "R -e \"install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'uuid', 'digest'), dependencies=TRUE, repos='http://cran.rstudio.com/')\" \u0026\u0026     R -e \"devtools::install_github('IRkernel/IRkernel')\" \u0026\u0026     R -e \"IRkernel::installspec(user = FALSE)\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026     git clone --recursive https://github.com/microsoft/LightGBM \u0026\u0026     cd LightGBM \u0026\u0026     Rscript build_r.R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install optuna \u0026\u0026     pip install rpy2 \u0026\u0026     pip install pyunicorn \u0026\u0026     pip install pyflux"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L  \"https://oscdl.ipa.go.jp/IPAexfont/ipaexg00301.zip\" \u003e font.zip \u0026\u0026     unzip font.zip \u0026\u0026     cp ipaexg00301/ipaexg.ttf /opt/conda/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/ipaexg.ttf \u0026\u0026     echo \"font.family : IPAexGothic\" \u003e\u003e  /opt/conda/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc \u0026\u0026     rm -r ./.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "CmdLine": [
            "julia -e 'import Pkg; Pkg.update()' \u0026\u0026     (test $TEST_ONLY_BUILD || julia -e 'import Pkg; Pkg.add(\"HDF5\")')"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "julia -e \"using Pkg; pkg\\\"add IJulia\\\"; pkg\\\"precompile\\\"\" \u0026\u0026     mv $HOME/.local/share/jupyter/kernels/julia* $CONDA_DIR/share/jupyter/kernels/ \u0026\u0026     chmod -R go+rx $CONDA_DIR/share/jupyter \u0026\u0026     rm -rf $HOME/.local \u0026\u0026     fix-permissions $JULIA_PKGDIR $CONDA_DIR/share/jupyter"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}