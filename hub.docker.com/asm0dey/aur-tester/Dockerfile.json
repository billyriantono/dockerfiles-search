{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "archlinux/base",
      "SourceCode": "FROM archlinux/base",
      "Platform": "",
      "From": {
        "Image": "archlinux/base"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"pavel.finkelshtein@gmail.com\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"aur-tester\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"Image for testing packages, intended to be published in AUR\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/asm0dey/aur-tester\""
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "useradd -m notroot \u0026\u0026     echo '[multilib]' \u003e\u003e /etc/pacman.conf \u0026\u0026     echo 'Include = /etc/pacman.d/mirrorlist' \u003e\u003e /etc/pacman.conf \u0026\u0026     pacman -Sy --noconfirm --needed base-devel git \u0026\u0026     echo \"notroot ALL=(ALL) NOPASSWD: ALL\" \u003e /etc/sudoers.d/notroot \u0026\u0026     sudo -u notroot mkdir /home/notroot/.gnupg \u0026\u0026     sudo -u notroot touch /home/notroot/.gnupg/gpg.conf \u0026\u0026     sudo -u notroot echo \"keyserver-options auto-key-retrieve\" \u003e /home/notroot/.gnupg/gpg.conf \u0026\u0026     cd ~notroot \u0026\u0026     sudo -u notroot git clone https://aur.archlinux.org/yay.git \u0026\u0026     cd yay \u0026\u0026     sudo -u notroot makepkg -si --noconfirm \u0026\u0026     cd .. \u0026\u0026     sudo -u notroot rm -rf yay \u0026\u0026     pacman -S --noconfirm reflector \u0026\u0026     reflector --country Russia --sort rate --save /etc/pacman.d/mirrorlist"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/pkg"
        },
        {
          "CmdLine": [
            "/bin/sh /run.sh"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "/run.sh"
          ]
        }
      ]
    }
  ]
}