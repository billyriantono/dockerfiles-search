{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "OPENCV_VERSION",
              "Value": "3.4.5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -y update \u0026\u0026 \tapt-get -y upgrade \u0026\u0026 \tapt-get remove x264 libx264-dev \u0026\u0026 \tapt-get -y install \t\tpython3         python3-dev         git         wget         unzip         cmake         build-essential         pkg-config         libatlas-base-dev         gfortran         libgtk2.0-dev         libavcodec-dev         libavformat-dev         libswscale-dev         libjpeg-dev         libpng-dev         libtiff-dev         libv4l-dev         octave \toctave-image \toctave-financial \toctave-nan         liboctave-dev     \t\u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/opencv/opencv/archive/$OPENCV_VERSION.zip -O opencv3.zip \u0026\u0026     unzip -q opencv3.zip \u0026\u0026     mv /opencv-$OPENCV_VERSION /opencv \u0026\u0026     rm opencv3.zip \u0026\u0026     wget https://github.com/opencv/opencv_contrib/archive/$OPENCV_VERSION.zip -O opencv_contrib3.zip \u0026\u0026     unzip -q opencv_contrib3.zip \u0026\u0026     mv /opencv_contrib-$OPENCV_VERSION /opencv_contrib \u0026\u0026     rm opencv_contrib3.zip     \u0026\u0026     mkdir /opencv/build \u0026\u0026 cd /opencv/build \u0026\u0026     cmake -D CMAKE_BUILD_TYPE=RELEASE       -D BUILD_PYTHON_SUPPORT=ON       -D CMAKE_INSTALL_PREFIX=/usr/local       -D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib/modules       -D BUILD_EXAMPLES=OFF       -D PYTHON_DEFAULT_EXECUTABLE=/usr/bin/python3       -D BUILD_opencv_python3=ON       -D BUILD_opencv_python2=OFF       -D WITH_IPP=OFF       -D WITH_FFMPEG=ON       -D WITH_V4L=ON ..     \u0026\u0026     cd /opencv/build \u0026\u0026     make -j$(nproc) \u0026\u0026     make install \u0026\u0026     ldconfig     \u0026\u0026     rm -rf /opencv /opencv_contrib /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/votchallenge/trax.git \u0026\u0026     mkdir trax/build \u0026\u0026     cd trax/build \u0026\u0026     cmake .. \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd ../.. \u0026\u0026     rm -rf trax"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 --version"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}