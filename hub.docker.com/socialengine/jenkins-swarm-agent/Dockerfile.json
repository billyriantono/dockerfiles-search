{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jdk-alpine",
      "SourceCode": "FROM openjdk:8-jdk-alpine",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jdk-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Stepan Mazurov \u003csmazurov@socialengine.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GLIBC",
              "Value": "2.23-r3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update --no-cache     curl bash git     py-pip     openssl ca-certificates openssh-client   \u0026\u0026 pip install --upgrade     pip awscli   \u0026\u0026 rm -rf     /tmp/*     /root/.cache     `find / -regex '.*\\.py[co]'`"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub \u0026\u0026     wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC/glibc-$GLIBC.apk \u0026\u0026     apk add --no-cache glibc-$GLIBC.apk \u0026\u0026 rm glibc-$GLIBC.apk \u0026\u0026     ln -s /lib/libz.so.1 /usr/glibc-compat/lib/ \u0026\u0026     ln -s /lib/libc.musl-x86_64.so.1 /usr/glibc-compat/lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DIND_COMMIT",
              "Value": "27afaf3774d7f46028ab72192d4c1b65f8d88b87"
            },
            {
              "Key": "DOCKER_VERSION",
              "Value": "1.12.5"
            },
            {
              "Key": "COMPOSE_VERSION",
              "Value": "1.9.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz",
            "/tmp/docker/docker.tgz"
          ]
        },
        {
          "CmdLine": [
            "tar -xzvf /tmp/docker/docker.tgz -C /tmp \u0026\u0026 mv /tmp/docker/* /usr/bin/  \u0026\u0026 rm -r /tmp/docker*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind",
            "/usr/local/bin/dind"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-linux-x86_64",
            "/usr/local/bin/docker-compose"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/bin/docker* /usr/local/bin/dind /usr/local/bin/docker-compose \u0026\u0026 rm -fr /var/lib/docker/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/docker"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/supervisor"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "*.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "version_list",
            "/etc/docker/"
          ]
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/root"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/jenkins \u0026\u0026 chmod 755 /usr/share/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/2.2/swarm-client-2.2-jar-with-dependencies.jar",
            "/usr/share/jenkins/swarm-client-jar-with-dependencies.jar"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/setup.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}