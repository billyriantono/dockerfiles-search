MetaArgs: null
Stages:
- BaseName: tensorflow/tensorflow
  Commands:
  - Maintainer: Simon Tse Chi Ming <simon.tse.hk@gmail.com>
    Name: maintainer
  - CmdLine:
    - curl -L    "https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-1.3.0.tar.gz"
      |    tar -C "/usr/local" -xz
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig
    Name: run
    PrependShell: true
  - Env:
    - Key: TF_CPP_MIN_LOG_LEVEL
      Value: "2"
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends         git         wget
      \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: 1.9.2
    Name: env
  - CmdLine:
    - "set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\"
      in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='de874549d9a8d8d8062be05808509c09a88a248e77ec14eb77453530829ac02b'
      ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='8a6758c8d390e28ef2bcea511f62dcb43056f38c1addc06a8bc996741987e7bb'
      ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0016ac65ad8340c84f51bc11dbb24ee8265b0a4597dbfdf8d91776fc187456fa'
      ;; \t\ti386) goRelArch='linux-386'; goRelSha256='574b2c4b1a248e58ef7d1f825beda15429610a2316d9cbd3096d8d3fa8c0bc1a'
      ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='adb440b2b6ae9e448c253a20836d8e8aa4236f731d87717d9c7b241998dc7f9d'
      ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a7137b4fbdec126823a12a4b696eeee2f04ec616e9fb8a54654c51d5884c1345'
      ;; \t\t*) goRelArch='src'; goRelSha256='665f184bf8ac89986cfd5a4460736976f60b57df6b320ad71ad4cef53bb143dc';
      \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not
      have a corresponding Go binary release; will be building from source\"; echo
      >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\";
      \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c
      -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src'
      ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO
      install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall
      after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\";
      \tgo version"
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $GOPATH
  - CmdLine:
    - go get github.com/tensorflow/tensorflow/tensorflow/go     github.com/tensorflow/tensorflow/tensorflow/go/op
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /model &&     wget "https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip"
      -O /model/inception.zip &&     unzip /model/inception.zip -d /model &&     chmod
      -R 777 /model
    Name: run
    PrependShell: true
  From:
    Image: tensorflow/tensorflow
  Name: ""
  Platform: ""
  SourceCode: FROM tensorflow/tensorflow
