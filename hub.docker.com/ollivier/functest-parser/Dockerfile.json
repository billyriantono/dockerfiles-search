{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Key": "BRANCH",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Key": "OPENSTACK_TAG",
          "Name": "arg",
          "Value": "stable/pike"
        },
        {
          "Key": "RALLY_TAG",
          "Name": "arg",
          "Value": "stable/0.9"
        },
        {
          "CmdLine": [
            "apk --no-cache add --update         python libffi libssl1.0 libjpeg-turbo py-pip bash         grep sed wget ca-certificates git openssh-client \u0026\u0026     apk --no-cache add --virtual .build-deps --update         python-dev build-base linux-headers libffi-dev         openssl-dev libjpeg-turbo-dev \u0026\u0026     wget -q -O- https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=$OPENSTACK_TAG |         sed /^heat-translator=/d | sed /^tosca-parser=/d |         sed -E s/^tempest==+\\(.*\\)$/-e\\ git+https:\\\\/\\\\/github.com\\\\/openstack\\\\/tempest@\\\\1#egg=tempest/         \u003e upper-constraints.txt \u0026\u0026     pip install --no-cache-dir --src /src -cupper-constraints.txt         -chttps://git.opnfv.org/functest/plain/upper-constraints.txt?h=$BRANCH         -e git+https://github.com/openstack/requirements@$OPENSTACK_TAG#egg=openstack_requirements \u0026\u0026     git clone --depth 1 https://github.com/openstack/rally.git -b $RALLY_TAG /src/rally \u0026\u0026     update-requirements -s --source /src/openstack-requirements /src/rally/ \u0026\u0026     pip install --no-cache-dir --src /src -cupper-constraints.txt         -chttps://git.opnfv.org/functest/plain/upper-constraints.txt?h=$BRANCH /src/rally \u0026\u0026     pip install --no-cache-dir --src /src -cupper-constraints.txt         -chttps://git.opnfv.org/functest/plain/upper-constraints.txt?h=$BRANCH         git+https://gerrit.opnfv.org/gerrit/functest@$BRANCH#egg=functest         git+https://gerrit.opnfv.org/gerrit/parser#egg=nfv-heattranslator\\\u0026subdirectory=tosca2heat/heat-translator         git+https://gerrit.opnfv.org/gerrit/parser#egg=nfv-toscaparser\\\u0026subdirectory=tosca2heat/tosca-parser         -e git+https://gerrit.opnfv.org/gerrit/parser#egg=nfv-parser \u0026\u0026     rm -r upper-constraints.txt /src/rally/.git \u0026\u0026     mkdir -p /etc/rally \u0026\u0026     printf \"[database]\\nconnection = 'sqlite:////var/lib/rally/database/rally.sqlite'\" \u003e /etc/rally/rally.conf \u0026\u0026     mkdir -p /var/lib/rally/database \u0026\u0026 rally-manage db create \u0026\u0026     bash -c \"mkdir -p /home/opnfv/functest{/conf,/data,/images,/results} /home/opnfv/repos/vnfs\" \u0026\u0026     apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "testcases.yaml",
            "/usr/lib/python2.7/site-packages/functest/ci/testcases.yaml"
          ]
        },
        {
          "CmdLine": [
            "bash",
            "-c",
            "prepare_env start \u0026\u0026 run_tests -t all"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}