{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "Maintainer": "Jose Lausuch \u003cjose.lausuch@ericsson.com\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"0.1\""
            },
            {
              "Key": "description",
              "Value": "\"OPNFV Functest Docker container\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "BRANCH",
          "Name": "arg",
          "Value": "stable/euphrates"
        },
        {
          "Key": "RALLY_TAG",
          "Name": "arg",
          "Value": "0.9.1"
        },
        {
          "Key": "ODL_TAG",
          "Name": "arg",
          "Value": "e12ba90cd27577c4c6c70ee54f7d599b5f6777ba"
        },
        {
          "Key": "OPENSTACK_TAG",
          "Name": "arg",
          "Value": "stable/ocata"
        },
        {
          "Key": "VIMS_TAG",
          "Name": "arg",
          "Value": "stable"
        },
        {
          "Key": "REFSTACK_TAG",
          "Name": "arg",
          "Value": "4e187b07672dd1c41cb7c94658f1c91edebf53a2"
        },
        {
          "Key": "REPOS_DIR",
          "Name": "arg",
          "Value": "/home/opnfv/repos"
        },
        {
          "Key": "FUNCTEST_BASE_DIR",
          "Name": "arg",
          "Value": "/home/opnfv/functest"
        },
        {
          "Key": "FUNCTEST_CONF_DIR",
          "Name": "arg",
          "Value": "${FUNCTEST_BASE_DIR}/conf"
        },
        {
          "Key": "FUNCTEST_DATA_DIR",
          "Name": "arg",
          "Value": "${FUNCTEST_BASE_DIR}/data"
        },
        {
          "Key": "FUNCTEST_IMAGES_DIR",
          "Name": "arg",
          "Value": "${FUNCTEST_BASE_DIR}/images"
        },
        {
          "Key": "FUNCTEST_RESULTS_DIR",
          "Name": "arg",
          "Value": "${FUNCTEST_BASE_DIR}/results"
        },
        {
          "Key": "FUNCTEST_DIR",
          "Name": "arg",
          "Value": "/usr/local/lib/python2.7/dist-packages/functest/"
        },
        {
          "Key": "REPOS_VNFS_DIR",
          "Name": "arg",
          "Value": "${REPOS_DIR}/vnfs"
        },
        {
          "Env": [
            {
              "Key": "CONFIG_FUNCTEST_YAML",
              "Value": "${FUNCTEST_DIR}/ci/config_functest.yaml"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "REPOS_DIR",
              "Value": "${REPOS_DIR}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "creds",
              "Value": "${FUNCTEST_CONF_DIR}/openstack.creds"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y build-essential bundler crudini curl dnsmasq gcc git libffi-dev libgmp3-dev libpq-dev libssl-dev libxml2-dev libxslt-dev libzmq3-dev python-dev python-mock python-pip python3 python3-dev python3-pip postgresql ruby ruby-dev ruby-bundler ssh sshpass wget --no-install-recommends"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install --upgrade pip \u0026\u0026 easy_install -U setuptools==30.0.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python3 -m pip install --upgrade pip setuptools==30.0.0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${REPOS_VNFS_DIR}     \u0026\u0026 mkdir -p ${FUNCTEST_BASE_DIR}/results     \u0026\u0026 mkdir -p ${FUNCTEST_CONF_DIR}     \u0026\u0026 mkdir -p ${FUNCTEST_DATA_DIR}     \u0026\u0026 mkdir -p ${FUNCTEST_IMAGES_DIR}     \u0026\u0026 mkdir -p /root/.ssh     \u0026\u0026 chmod 700 /root/.ssh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git config --global http.sslVerify false"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "thirdparty-requirements.txt",
            "thirdparty-requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "wget -q -O- https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=$OPENSTACK_TAG |         sed -E s/^tempest==+\\(.*\\)$/-e\\ git+https:\\\\/\\\\/github.com\\\\/openstack\\\\/tempest@\\\\1#egg=tempest/ |         sed s/^requests===.*$/requests===2.13.0/         \u003e upper-constraints.txt \u0026\u0026     pip install --src /src -cupper-constraints.txt         -chttps://git.opnfv.org/functest/plain/upper-constraints.txt?h=$BRANCH         -e git+https://github.com/openstack/requirements@$OPENSTACK_TAG#egg=openstack_requirements \u0026\u0026     git clone --depth 1 https://github.com/openstack/rally.git -b $RALLY_TAG /src/rally \u0026\u0026     update-requirements -s --source /src/openstack-requirements /src/rally \u0026\u0026     git clone https://github.com/openstack/refstack-client.git /src/refstack-client \u0026\u0026     (cd src/refstack-client \u0026\u0026 git checkout $REFSTACK_TAG) \u0026\u0026     update-requirements -s --source /src/openstack-requirements /src/refstack-client \u0026\u0026     pip install --src /src -cupper-constraints.txt         -chttps://git.opnfv.org/functest/plain/upper-constraints.txt?h=$BRANCH         /src/rally -e/src/refstack-client \u0026\u0026     pip install --src /src -cupper-constraints.txt         -chttps://git.opnfv.org/functest/plain/upper-constraints.txt?h=$BRANCH         git+https://gerrit.opnfv.org/gerrit/functest@$BRANCH#egg=functest         -rthirdparty-requirements.txt \u0026\u0026     python3 -m pip install --src /src         -chttps://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=$OPENSTACK_TAG         -chttps://git.opnfv.org/functest/plain/upper-constraints.txt?h=$BRANCH         doctor-tests \u0026\u0026     mkdir -p /etc/rally \u0026\u0026     printf \"[database]\\nconnection = 'sqlite:////var/lib/rally/database/rally.sqlite'\" \u003e /etc/rally/rally.conf \u0026\u0026     mkdir -p /var/lib/rally/database \u0026\u0026 rally-manage db create \u0026\u0026     rm thirdparty-requirements.txt upper-constraints.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth 1 -b $BRANCH https://gerrit.opnfv.org/gerrit/fds /src/fds"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://git.opendaylight.org/gerrit/p/integration/test.git /src/odl_test \u0026\u0026         (cd src/odl_test \u0026\u0026 git checkout $ODL_TAG)"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --depth 1 -b $VIMS_TAG https://github.com/boucherv-orange/clearwater-live-test /src/vims-test"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /src/tempest /src/refstack-client/.tempest     \u0026\u0026 virtualenv --system-site-packages /src/tempest/.venv --python=python2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /src/vims-test \u0026\u0026 bundle install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh -c 'curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -'     \u0026\u0026 sudo apt-get install -y nodejs     \u0026\u0026 cd /src/promise \u0026\u0026 sudo npm -g install npm@latest     \u0026\u0026 cd /src/promise/source \u0026\u0026 npm install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \". ${FUNCTEST_DIR}/cli/functest-complete.sh\" \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "functest_restapi"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}