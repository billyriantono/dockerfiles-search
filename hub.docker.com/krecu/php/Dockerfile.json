{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-fpm",
      "SourceCode": "FROM php:5.6-fpm",
      "Platform": "",
      "From": {
        "Image": "php:5.6-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Evgen Kretsu \u003ckrecu.me@ya.ru\u003e",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"PHP-fpm with installed extensions\""
            },
            {
              "Key": "Vendor",
              "Value": "\"GosBook Lab\""
            },
            {
              "Key": "Version",
              "Value": "\"1.0\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "PHPREDIS_VERSION",
              "Value": "2.2.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_VERSION",
              "Value": "2.3.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AMQP_VERSION",
              "Value": "0.7.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y         libfreetype6         libjpeg62-turbo         libmcrypt4         libpng12-0         libjpeg-dev         libldap2-dev \t\tlibfreetype6-dev \t\tlibmcrypt-dev \t\tlibpng12-dev \t\tlibpq-dev \t\tzlib1g-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --enable-gd-native-ttf --with-jpeg-dir=/usr/lib/x86_64-linux-gnu --with-png-dir=/usr/lib/x86_64-linux-gnu --with-freetype-dir=/usr/lib/x86_64-linux-gnu \t\u0026\u0026 docker-php-ext-install gd \t\u0026\u0026 docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu \t\u0026\u0026 docker-php-ext-install ldap \t\u0026\u0026 docker-php-ext-install mbstring \t\u0026\u0026 docker-php-ext-install mcrypt \t\u0026\u0026 docker-php-ext-install pdo_pgsql \t\u0026\u0026 docker-php-ext-install pdo_mysql \t\u0026\u0026 docker-php-ext-install zip \t\u0026\u0026 docker-php-ext-install bcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/$PHPREDIS_VERSION.tar.gz     \u0026\u0026 tar xfz /tmp/redis.tar.gz     \u0026\u0026 rm -r /tmp/redis.tar.gz     \u0026\u0026 mv phpredis-$PHPREDIS_VERSION /usr/src/php/ext/redis     \u0026\u0026 docker-php-ext-install redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o /tmp/amqp.tar.gz https://github.com/alanxz/rabbitmq-c/releases/download/v0.7.1/rabbitmq-c-$AMQP_VERSION.tar.gz     \u0026\u0026 tar xfz /tmp/amqp.tar.gz     \u0026\u0026 rm -r /tmp/amqp.tar.gz     \u0026\u0026 mv rabbitmq-c-$AMQP_VERSION /usr/src/php/ext/amqp     \u0026\u0026 cd /usr/src/php/ext/amqp     \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o /tmp/xdebug.tar.gz https://github.com/xdebug/xdebug/archive/$XDEBUG_VERSION.tar.gz     \u0026\u0026 tar xfz /tmp/xdebug.tar.gz     \u0026\u0026 rm -r /tmp/xdebug.tar.gz     \u0026\u0026 mv xdebug-$XDEBUG_VERSION /usr/src/php/ext/xdebug     \u0026\u0026 docker-php-ext-install xdebug"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i '1 a xdebug.remote_autostart = true' $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 sed -i '1 a xdebug.remote_mode = req' $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 sed -i '1 a xdebug.remote_handler = dbgp' $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 sed -i '1 a xdebug.remote_connect_back = 1 ' $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 sed -i '1 a xdebug.remote_port = 9999' $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 sed -i '1 a xdebug.remote_enable = 1' $PHP_INI_DIR/conf.d/docker-php-ext-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php     \u0026\u0026 mv composer.phar /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cat /usr/src/php/php.ini-production | sed 's/^;\\(date.timezone.*\\)/\\1 \\\"Etc\\/UTC\\\"/' \u003e /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/;\\(cgi\\.fix_pathinfo=\\)1/\\10/' /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "9999"
          ]
        }
      ]
    }
  ]
}