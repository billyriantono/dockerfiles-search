{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk --no-cache add   php5   php5-dom   php5-phar   php5-gd   php5-iconv   php5-json   php5-mysql   php5-openssl   php5-xml   php5-zlib   php5-curl   curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /app \u0026\u0026 mkdir /app/pleio \u0026\u0026 curl -sS https://getcomposer.org/installer | php5 -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/bin/php5 /usr/bin/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "composer.json",
            "composer.json",
            "/app/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "mod/pleio/composer.json",
            "/app/pleio/"
          ]
        },
        {
          "Key": "COMPOSER_ALLOW_SUPERUSER",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Key": "COMPOSER_NO_INTERACTION",
          "Name": "arg",
          "Value": "1"
        },
        {
          "CmdLine": [
            "composer install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app/pleio"
        },
        {
          "CmdLine": [
            "composer install"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Luc Belliveau \u003cluc.belliveau@nrc-cnrc.gc.ca\u003e, Ilia Salem\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk --no-cache add     apache2     php5     php5-apache2     php5-ctype     php5-curl     php5-dom     php5-gd     php5-iconv     php5-json     php5-mysql     php5-xml \tphp5-zip \tphp5-openssl     php5-curl     curl     php5-opcache     libmemcached-libs   \u0026\u0026 apk update   \u0026\u0026 apk --no-cache add php5-mysqli   \u0026\u0026 mkdir -p /var/www/html/vendor   \u0026\u0026 mkdir -p /data   \u0026\u0026 mkdir -p /run/apache2   \u0026\u0026 chown apache /data   \u0026\u0026 ln -s /dev/stderr /var/log/apache2/error.log   \u0026\u0026 ln -s /dev/stdout /var/log/apache2/access.log   \u0026\u0026 sed -i '/#LoadModule rewrite_module modules\\/mod_rewrite.so/c\\LoadModule rewrite_module modules\\/mod_rewrite.so' /etc/apache2/httpd.conf   \u0026\u0026 sed -i '/DocumentRoot \"\\/var\\/www\\/localhost\\/htdocs\"/c\\DocumentRoot \"\\/var\\/www\\/html\"' /etc/apache2/httpd.conf   \u0026\u0026 sed -i '/Options Indexes FollowSymLinks/c\\\\' /etc/apache2/httpd.conf   \u0026\u0026 sed -i '/AllowOverride None/c\\\\' /etc/apache2/httpd.conf   \u0026\u0026 sed -i '/Options Indexes FollowSymLinks/c\\\\' /etc/apache2/httpd.conf   \u0026\u0026 sed -i '/\u003cDirectory \"\\/var\\/www\\/localhost\\/htdocs\"\u003e/c\\\u003cDirectory \"\\/var\\/www\\/html\"\u003e\\nDirectoryIndex index.php\\nOptions FollowSymLinks MultiViews\\nAllowOverride All\\nOrder allow,deny\\nallow from all\\n' /etc/apache2/httpd.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=60'; \t\techo 'opcache.fast_shutdown=1'; \t\techo 'opcache.enable_cli=1'; \t\techo 'opcache.enable_file_override=1'; } \u003e /etc/php5/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHPIZE_DEPS",
              "Value": "autoconf file g++ gcc libc-dev make pkgconf re2c php5-dev php5-pear  zlib-dev libmemcached-dev cyrus-sasl-dev libevent-dev openssl-dev"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_PEAR_PHP_BIN",
              "Value": "/usr/bin/php5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apk add --no-cache     --virtual .phpize-deps     $PHPIZE_DEPS     \u0026\u0026 sed -i 's/^exec $PHP -C -n/exec $PHP -C/g' $(which pecl)     \u0026\u0026 pecl install memcache-2.2.7     \u0026\u0026 mv $(INSTALL_ROOT)/usr/lib/php5/modules/memcache.so /usr/lib/php5/modules/memcache.so     \u0026\u0026 echo \"extension=memcache.so\" \u003e /etc/php5/conf.d/memcache.ini     \u0026\u0026 rm -rf /usr/share/php     \u0026\u0026 rm -rf /tmp/*     \u0026\u0026 apk del .phpize-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./install/config/htaccess.dist",
            "/var/www/html/.htaccess"
          ]
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/vendor/",
            "/var/www/html/vendor/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/var/www/html"
          ]
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/pleio/vendor/",
            "/var/www/html/mod/pleio/vendor/"
          ]
        },
        {
          "CmdLine": [
            "chown apache:apache /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        },
        {
          "CmdLine": [
            "chmod +x docker/start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -f /run/apache2/httpd.pid"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/sbin/httpd -D FOREGROUND"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}