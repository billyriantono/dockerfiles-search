{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1.12-fpm-alpine",
      "SourceCode": "FROM php:7.1.12-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.1.12-fpm-alpine"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Ric Harvey \u003cric@ngd.io\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "php_conf",
              "Value": "/usr/local/etc/php-fpm.conf"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "php_vars",
              "Value": "/usr/local/etc/php/conf.d/docker-vars.ini"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.13.7"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_MODULE_VERSION",
              "Value": "0.10.11"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEVEL_KIT_MODULE_VERSION",
              "Value": "0.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_LIB",
              "Value": "/usr/lib"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAJIT_INC",
              "Value": "/usr/include/luajit-2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPREDIS_VERSION",
              "Value": "3.1.6"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LD_PRELOAD",
              "Value": "/usr/lib/preloadable_libiconv.so php"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing gnu-libiconv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8   \u0026\u0026 CONFIG=\"    --prefix=/etc/nginx     --sbin-path=/usr/sbin/nginx     --modules-path=/usr/lib/nginx/modules     --conf-path=/etc/nginx/nginx.conf     --error-log-path=/var/log/nginx/error.log     --http-log-path=/var/log/nginx/access.log     --pid-path=/var/run/nginx.pid     --lock-path=/var/run/nginx.lock     --http-client-body-temp-path=/var/cache/nginx/client_temp     --http-proxy-temp-path=/var/cache/nginx/proxy_temp     --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp     --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp     --http-scgi-temp-path=/var/cache/nginx/scgi_temp     --user=nginx     --group=nginx     --with-http_ssl_module     --with-http_realip_module     --with-http_addition_module     --with-http_sub_module     --with-http_dav_module     --with-http_flv_module     --with-http_mp4_module     --with-http_gunzip_module     --with-http_gzip_static_module     --with-http_random_index_module     --with-http_secure_link_module     --with-http_stub_status_module     --with-http_auth_request_module     --with-http_xslt_module=dynamic     --with-http_image_filter_module=dynamic     --with-http_geoip_module=dynamic     --with-http_perl_module=dynamic     --with-threads     --with-stream     --with-stream_ssl_module     --with-stream_ssl_preread_module     --with-stream_realip_module     --with-stream_geoip_module=dynamic     --with-http_slice_module     --with-mail     --with-mail_ssl_module     --with-compat     --with-file-aio     --with-http_v2_module     --add-module=/usr/src/ngx_devel_kit-$DEVEL_KIT_MODULE_VERSION     --add-module=/usr/src/lua-nginx-module-$LUA_MODULE_VERSION   \"   \u0026\u0026 addgroup -S nginx   \u0026\u0026 adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx   \u0026\u0026 apk add --no-cache --virtual .build-deps     autoconf     gcc     libc-dev     make     openssl-dev     pcre-dev     zlib-dev     linux-headers     curl     gnupg     libxslt-dev     gd-dev     geoip-dev     perl-dev     luajit-dev   \u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz   \u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc   \u0026\u0026 curl -fSL https://github.com/simpl/ngx_devel_kit/archive/v$DEVEL_KIT_MODULE_VERSION.tar.gz -o ndk.tar.gz   \u0026\u0026 curl -fSL https://github.com/openresty/lua-nginx-module/archive/v$LUA_MODULE_VERSION.tar.gz -o lua.tar.gz   \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"   \u0026\u0026 found='';   for server in     ha.pool.sks-keyservers.net     hkp://keyserver.ubuntu.com:80     hkp://p80.pool.sks-keyservers.net:80     pgp.mit.edu   ; do     echo \"Fetching GPG key $GPG_KEYS from $server\";     gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\" \u0026\u0026 found=yes \u0026\u0026 break;   done;   test -z \"$found\" \u0026\u0026 echo \u003e\u00262 \"error: failed to fetch GPG key $GPG_KEYS\" \u0026\u0026 exit 1;   gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz   \u0026\u0026 rm -r \"$GNUPGHOME\" nginx.tar.gz.asc   \u0026\u0026 mkdir -p /usr/src   \u0026\u0026 tar -zxC /usr/src -f nginx.tar.gz   \u0026\u0026 tar -zxC /usr/src -f ndk.tar.gz   \u0026\u0026 tar -zxC /usr/src -f lua.tar.gz   \u0026\u0026 rm nginx.tar.gz ndk.tar.gz lua.tar.gz   \u0026\u0026 cd /usr/src/nginx-$NGINX_VERSION   \u0026\u0026 ./configure $CONFIG --with-debug   \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN)   \u0026\u0026 mv objs/nginx objs/nginx-debug   \u0026\u0026 mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so   \u0026\u0026 mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so   \u0026\u0026 mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so   \u0026\u0026 mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so   \u0026\u0026 mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so   \u0026\u0026 ./configure $CONFIG   \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN)   \u0026\u0026 make install   \u0026\u0026 rm -rf /etc/nginx/html/   \u0026\u0026 mkdir /etc/nginx/conf.d/   \u0026\u0026 mkdir -p /usr/share/nginx/html/   \u0026\u0026 install -m644 html/index.html /usr/share/nginx/html/   \u0026\u0026 install -m644 html/50x.html /usr/share/nginx/html/   \u0026\u0026 install -m755 objs/nginx-debug /usr/sbin/nginx-debug   \u0026\u0026 install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so   \u0026\u0026 install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so   \u0026\u0026 install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so   \u0026\u0026 install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so   \u0026\u0026 install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so   \u0026\u0026 ln -s ../../usr/lib/nginx/modules /etc/nginx/modules   \u0026\u0026 strip /usr/sbin/nginx*   \u0026\u0026 strip /usr/lib/nginx/modules/*.so   \u0026\u0026 rm -rf /usr/src/nginx-$NGINX_VERSION     \u0026\u0026 apk add --no-cache --virtual .gettext gettext   \u0026\u0026 mv /usr/bin/envsubst /tmp/     \u0026\u0026 runDeps=\"$(     scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst       | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'       | sort -u       | xargs -r apk info --installed       | sort -u   )\"   \u0026\u0026 apk add --no-cache --virtual .nginx-rundeps $runDeps   \u0026\u0026 apk del .build-deps   \u0026\u0026 apk del .gettext   \u0026\u0026 mv /tmp/envsubst /usr/local/bin/     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log   \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo @testing http://nl.alpinelinux.org/alpine/edge/testing \u003e\u003e /etc/apk/repositories \u0026\u0026     echo /etc/apk/respositories \u0026\u0026     apk update \u0026\u0026     apk add --no-cache bash     openssh-client     wget     supervisor     curl     libcurl     git     python     python-dev     py-pip     augeas-dev     openssl-dev     ca-certificates     dialog     autoconf     make     gcc     musl-dev     linux-headers     libmcrypt-dev     libpng-dev     icu-dev     libpq     libxslt-dev     libffi-dev     freetype-dev     sqlite-dev     libjpeg-turbo-dev \u0026\u0026     docker-php-ext-configure gd       --with-gd       --with-freetype-dir=/usr/include/       --with-png-dir=/usr/include/       --with-jpeg-dir=/usr/include/ \u0026\u0026     curl -L -o /tmp/redis.tar.gz https://github.com/phpredis/phpredis/archive/$PHPREDIS_VERSION.tar.gz \u0026\u0026     tar xfz /tmp/redis.tar.gz \u0026\u0026     rm -r /tmp/redis.tar.gz \u0026\u0026     mv phpredis-$PHPREDIS_VERSION /usr/src/php/ext/redis \u0026\u0026     docker-php-ext-install redis pdo_mysql pdo_sqlite mysqli mcrypt gd exif intl xsl json soap dom zip opcache \u0026\u0026     docker-php-source delete \u0026\u0026     mkdir -p /etc/nginx/conf.d \u0026\u0026     mkdir -p /var/www/app \u0026\u0026     mkdir -p /run/nginx \u0026\u0026     mkdir -p /var/log/supervisor \u0026\u0026     pip install -U pip \u0026\u0026     pip install -U certbot \u0026\u0026     rm -Rf /etc/nginx/nginx.conf \u0026\u0026     rm -Rf /usr/local/etc/php-fpm.conf \u0026\u0026     mkdir -p /data/share/images/lanniu \u0026\u0026     mkdir -p /data/logs/lanniu \u0026\u0026     mkdir -p /data/share/data \u0026\u0026     chown -R nginx:nginx /data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php.ini",
            "/usr/local/etc/php/php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/php-fpm.conf",
            "/usr/local/etc/php-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "scripts/start.sh",
            "/start.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}