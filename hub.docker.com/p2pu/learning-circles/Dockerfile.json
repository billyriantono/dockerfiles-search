{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:boron-alpine",
      "SourceCode": "FROM node:boron-alpine",
      "Platform": "",
      "From": {
        "Image": "node:boron-alpine"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/opt/app/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "package.json",
            "/opt/app/"
          ]
        },
        {
          "CmdLine": [
            "apk --no-cache add --virtual native-deps   g++ make python \u0026\u0026   npm install --quiet --production \u0026\u0026   apk del native-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/opt/app/"
          ]
        },
        {
          "CmdLine": [
            "npm run build:production"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "ubuntu:14.04",
      "SourceCode": "FROM ubuntu:14.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     libpq-dev     postgresql-client     python     python-dev     python-virtualenv     supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/app/"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/opt/app/"
          ]
        },
        {
          "CmdLine": [
            "virtualenv /opt/django-venv \u0026\u0026 /opt/django-venv/bin/pip install -r /opt/app/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/opt/app/"
          ]
        },
        {
          "Chown": "",
          "From": "0",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/app/assets",
            "assets"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/wait-for-it.sh",
            "/wait-for-it.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/docker-entry.sh",
            "/docker-entry.sh"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /var/lib/celery \u0026\u0026 useradd celery \u0026\u0026 chown celery:celery /var/lib/celery/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DATABASE_URL",
              "Value": "\"sqlite:////var/app/db.sqlite3\""
            },
            {
              "Key": "ADMIN_EMAIL",
              "Value": "\"\""
            },
            {
              "Key": "SECRET_KEY",
              "Value": "\"\""
            },
            {
              "Key": "EMAIL_HOST",
              "Value": "\"\""
            },
            {
              "Key": "EMAIL_HOST_USER",
              "Value": "\"\""
            },
            {
              "Key": "EMAIL_HOST_PASSWORD",
              "Value": "\"\""
            },
            {
              "Key": "DEFAULT_FROM_EMAIL",
              "Value": "\"\""
            },
            {
              "Key": "TWILIO_ACCOUNT_SID",
              "Value": "\"\""
            },
            {
              "Key": "TWILIO_AUTH_TOKEN",
              "Value": "\"\""
            },
            {
              "Key": "TWILIO_NUMBER",
              "Value": "\"\""
            },
            {
              "Key": "BROKER_URL",
              "Value": "\"amqp://guest:guest@rabbitmq//\""
            },
            {
              "Key": "BACKUP_DIR",
              "Value": "\"/tmp\""
            },
            {
              "Key": "BACKUP_AWS_ACCESS_KEY_ID",
              "Value": "\"\""
            },
            {
              "Key": "BACKUP_AWS_SECRET_ACCESS_KEY",
              "Value": "\"\""
            },
            {
              "Key": "BACKUP_AWS_STORAGE_BUCKET_NAME",
              "Value": "\"\""
            },
            {
              "Key": "BACKUP_AWS_KEY_PREFIX",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/app/static_serve"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/app/upload"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/celery/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entry.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "supervisord",
            "-c",
            "/etc/supervisor/conf.d/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}