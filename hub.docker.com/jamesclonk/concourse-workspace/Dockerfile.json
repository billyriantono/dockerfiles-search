{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get -y install build-essential git unzip ruby ruby-dev vim         libxml2-dev libxslt-dev libcurl4-openssl-dev pkg-config libfontconfig1         build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev         libsqlite3-dev cmake libxml2 zlibc zlib1g-dev openssl golang zip         libreadline6 sqlite3 curl wget jq ca-certificates file         iptables dnsutils uuid-runtime  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget 'https://get.docker.com/builds/Linux/x86_64/docker-1.11.0.tgz'  \u0026\u0026 tar -zxf docker-1.11.0.tgz  \u0026\u0026 mv docker/* /usr/local/bin/.  \u0026\u0026 chmod u+x /usr/local/bin/docker*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/local/bin/docker --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget 'https://s3.amazonaws.com/bosh-init-artifacts/bosh-init-0.0.94-linux-amd64'  \u0026\u0026 mv bosh-init-0.0.94-linux-amd64 /usr/local/bin/bosh-init  \u0026\u0026 chmod u+x /usr/local/bin/bosh-init"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget 'https://github.com/cloudfoundry-incubator/spiff/releases/download/v1.0.7/spiff_linux_amd64.zip'  \u0026\u0026 unzip spiff_linux_amd64.zip  \u0026\u0026 mv spiff /usr/local/bin/spiff  \u0026\u0026 chmod u+x /usr/local/bin/spiff  \u0026\u0026 rm -f spiff_linux_amd64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -O cf-cli.tgz 'https://cli.run.pivotal.io/stable?release=linux64-binary\u0026version=6.21.0\u0026source=github-rel'  \u0026\u0026 tar -xzf cf-cli.tgz  \u0026\u0026 mv cf /usr/local/bin/cf  \u0026\u0026 chmod u+x /usr/local/bin/cf  \u0026\u0026 rm -f cf-cli.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget 'https://github.com/geofffranks/spruce/releases/download/v1.7.0/spruce-linux-amd64'   \u0026\u0026 mv spruce-linux-amd64 /usr/local/bin/spruce   \u0026\u0026 chmod u+x /usr/local/bin/spruce"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bosh_cli -v 1.3262.4.0 --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bosh_cli_plugin_micro -v 1.3262.4.0 --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bosh-workspace -v 0.9.13 --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install cf-uaac -v 3.3.0 --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install rake -v 10.5.0 --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install thor -v 0.19.1 --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install etcd -v 0.3.0 --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install mechanize -v 2.7.4 --no-rdoc --no-ri"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/gopath"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/gopath/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "go get golang.org/x/tools/cmd/goimports  \u0026\u0026 go get golang.org/x/tools/cmd/oracle  \u0026\u0026 go get golang.org/x/tools/cmd/gorename  \u0026\u0026 go get github.com/golang/lint/golint  \u0026\u0026 go get github.com/tools/godep  \u0026\u0026 go get github.com/jteeuwen/go-bindata/...  \u0026\u0026 go get github.com/stretchr/testify/assert  \u0026\u0026 go get github.com/onsi/ginkgo/ginkgo  \u0026\u0026 go get github.com/onsi/gomega  \u0026\u0026 go get github.com/mitchellh/gox"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}