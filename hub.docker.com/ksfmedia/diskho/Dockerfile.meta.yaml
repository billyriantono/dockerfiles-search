MetaArgs: null
Stages:
- BaseName: fpco/stack-build:lts-13.19
  Commands:
  - CmdLine:
    - apt-get install -y gettext python3-pip libyaml-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install Jinja2
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install PyYAML
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install jinja2-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - stack build --resolver lts-13.19   safe-exceptions   conduit-extra xml-conduit
      http-conduit   http-client   warp   servant-server servant-client servant-swagger
      servant-swagger-ui   swagger2   lens aeson lens-aeson cassava rio   tasty doctest   haskell-src-exts
      hpack   persistent postgresql-simple persistent-postgresql persistent-template
      postgresql-libpq
    Name: run
    PrependShell: true
  - CmdLine:
    - stack install dhall-1.23.0 dhall-json-1.2.8 dhall-text-1.0.17 --resolver=nightly-2019-05-13
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qqy update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qqy       curl       apt-transport-https       ca-certificates       software-properties-common
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
      xenial stable"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qqy && apt-get install -qqy docker-ce
    Name: run
    PrependShell: true
  - Env:
    - Key: CLOUD_SDK_VERSION
      Value: 244.0.0
    Name: env
  - Env:
    - Key: PATH
      Value: '"$PATH:/opt/google-cloud-sdk/bin/"'
    Name: env
  - CmdLine:
    - apt-get -qqy update && apt-get install -qqy         curl         gcc         python-dev         python-setuptools         apt-transport-https         lsb-release         openssh-client         git         gnupg     &&
      easy_install -U pip &&     pip install -U crcmod   &&     export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release
      -c -s)" &&     echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO
      main" > /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg
      | apt-key add - &&     apt-get update &&     apt-get install -y google-cloud-sdk=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-app-engine-python=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-app-engine-java=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-app-engine-go=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-datalab=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-datastore-emulator=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-pubsub-emulator=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-bigtable-emulator=${CLOUD_SDK_VERSION}-0         google-cloud-sdk-cbt=${CLOUD_SDK_VERSION}-0         kubectl
      &&     gcloud config set core/disable_usage_reporting true &&     gcloud config
      set component_manager/disable_update_check true &&     gcloud config set metrics/environment
      github_docker_image &&     gcloud --version && docker --version && kubectl version
      --client
    Name: run
    PrependShell: true
  - Env:
    - Key: TERRAFORM_VERSION
      Value: 0.11.13
    Name: env
  - Env:
    - Key: TERRAFORM_FILENAME
      Value: terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    Name: env
  - Env:
    - Key: TERRAFORM_URL
      Value: https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/${TERRAFORM_FILENAME}
    Name: env
  - Env:
    - Key: TERRAFORM_SHA256SUM
      Value: 5925cd4d81e7d8f42a0054df2aafd66e2ab7408dbed2bd748f0022cfe592f8d2
    Name: env
  - CmdLine:
    - wget -q ${TERRAFORM_URL}   && echo "${TERRAFORM_SHA256SUM}  ${TERRAFORM_FILENAME}"
      | sha256sum -c
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip ${TERRAFORM_FILENAME} -d /bin
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -f ${TERRAFORM_FILENAME}
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
      &&   chmod +x cloud_sql_proxy &&   mv cloud_sql_proxy /bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -qqy nodejs yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qqy jq postgresql postgresql-contrib
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://sh.rustup.rs > rust-init
    Name: run
    PrependShell: true
  - CmdLine:
    - sh rust-init -y --default-toolchain nightly-2019-02-05
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/root/.cargo/bin:$PATH"'
    Name: env
  - CmdLine:
    - add-apt-repository -y ppa:longsleep/golang-backports
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qqy update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -qqy golang-go
    Name: run
    PrependShell: true
  From:
    Image: fpco/stack-build:lts-13.19
  Name: ""
  Platform: ""
  SourceCode: FROM fpco/stack-build:lts-13.19
