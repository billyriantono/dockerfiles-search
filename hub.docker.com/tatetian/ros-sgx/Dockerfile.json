{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "phusion/baseimage",
      "SourceCode": "FROM phusion/baseimage",
      "Platform": "",
      "From": {
        "Image": "phusion/baseimage"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" \u003e /etc/apt/sources.list.d/ros-latest.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install --no-install-recommends -y     python-rosdep     python-rosinstall     python-vcstools     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rosdep init     \u0026\u0026 rosdep update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ROS_DISTRO",
              "Value": "kinetic"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     ros-kinetic-ros-core=1.3.1-0*     ros-kinetic-ros-base=1.3.1-0*     ros-kinetic-perception=1.3.1-0* \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./patches",
            "/patches"
          ]
        },
        {
          "CmdLine": [
            "apt-get update -q -q \u0026\u0026  apt-get install wget python git patch build-essential ocaml automake autoconf libtool libssl-dev libcurl4-openssl-dev protobuf-compiler protobuf-c-compiler libprotobuf-dev libprotobuf-c0-dev alien uuid-dev libxml2-dev cmake pkg-config --yes --force-yes \u0026\u0026  rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/icls \u0026\u0026  cd /tmp/icls \u0026\u0026  wget http://registrationcenter-download.intel.com/akdlm/irc_nas/11414/iclsClient-1.45.449.12-1.x86_64.rpm \u0026\u0026  alien --scripts iclsClient-1.45.449.12-1.x86_64.rpm \u0026\u0026  dpkg -i iclsclient_1.45.449.12-2_amd64.deb \u0026\u0026  rm -rf /tmp/icls"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026  git clone https://github.com/01org/dynamic-application-loader-host-interface.git \u0026\u0026  cd /tmp/dynamic-application-loader-host-interface \u0026\u0026  cmake . \u0026\u0026  make \u0026\u0026  make install \u0026\u0026  rm -rf /tmp/dynamic-application-loader-host-interface"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026  git clone https://github.com/01org/linux-sgx.git \u0026\u0026  cd / \u0026\u0026  for patch in /patches/*; do patch --prefix=/patches/ -p0 --force \"--input=$patch\" || exit 1; done \u0026\u0026  rm -rf /patches \u0026\u0026  cd /tmp/linux-sgx \u0026\u0026  ./download_prebuilt.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/linux-sgx \u0026\u0026  make \u0026\u0026  make sdk_install_pkg \u0026\u0026  make psw_install_pkg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/intel \u0026\u0026  cd /opt/intel \u0026\u0026  yes yes | /tmp/linux-sgx/linux/installer/bin/sgx_linux_x64_sdk_*.bin \u0026\u0026  /tmp/linux-sgx/linux/installer/bin/sgx_linux_x64_psw_*.bin \u0026\u0026  rm -rf /tmp/linux-sgx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./etc",
            "/etc"
          ]
        }
      ]
    }
  ]
}