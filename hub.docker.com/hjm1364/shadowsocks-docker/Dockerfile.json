{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LIBSODIUM_VER",
              "Value": "stable-2018-10-08"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MBEDTLS_VER",
              "Value": "2.6.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SS_LIBEV_VERSION",
              "Value": "3.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVER_ADDR",
              "Value": "0.0.0.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SERVER_PORT",
              "Value": "8388"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PASSWORD",
              "Value": "12345678"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "METHOD",
              "Value": "aes-256-cfb"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TIMEOUT",
              "Value": "600"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ARGS",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --update --no-cache --virtual .build-deps       autoconf       automake       curl       build-base       c-ares-dev       libev-dev       libtool       linux-headers       pcre-dev     \u0026\u0026 mkdir /tmp/repo     \u0026\u0026 cd /tmp/repo     \u0026\u0026 curl -sSLO https://download.libsodium.org/libsodium/releases/libsodium-$LIBSODIUM_VER.tar.gz     \u0026\u0026 tar xvf libsodium-$LIBSODIUM_VER.tar.gz     \u0026\u0026 cd libsodium-stable     \u0026\u0026 ./configure --prefix=/usr     \u0026\u0026 make     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/repo     \u0026\u0026 curl -sSLO https://tls.mbed.org/download/mbedtls-$MBEDTLS_VER-gpl.tgz     \u0026\u0026 tar xvf mbedtls-$MBEDTLS_VER-gpl.tgz     \u0026\u0026 cd mbedtls-$MBEDTLS_VER     \u0026\u0026 make SHARED=1 CFLAGS=-fPIC     \u0026\u0026 make DESTDIR=/usr install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /tmp/repo     \u0026\u0026 curl -sSLO https://github.com/shadowsocks/shadowsocks-libev/releases/download/v$SS_LIBEV_VERSION/shadowsocks-libev-$SS_LIBEV_VERSION.tar.gz     \u0026\u0026 tar -zxf shadowsocks-libev-$SS_LIBEV_VERSION.tar.gz     \u0026\u0026 cd shadowsocks-libev-$SS_LIBEV_VERSION     \u0026\u0026 ./configure --prefix=/usr --disable-documentation     \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache       rng-tools       $(scanelf --needed --nobanner /usr/bin/ss-*       | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'       | sort -u       | sed '/sodium/d'       | sed '/mbedcrypto/d')"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /tmp/repo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "exec ss-server            -s $SERVER_ADDR            -p $SERVER_PORT            -k ${PASSWORD:-$(hostname)}            -m $METHOD            -t $TIMEOUT            -u            $ARGS"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}