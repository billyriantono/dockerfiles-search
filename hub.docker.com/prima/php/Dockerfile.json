{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2.24-fpm",
      "SourceCode": "FROM php:7.2.24-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.2.24-fpm"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y         locales         unzip         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng-dev         libcurl4-openssl-dev         libc-client2007e-dev         libkrb5-dev         libicu-dev         libxml2-dev         libssh2-1-dev         libgmp-dev         libssl-dev         vim         python         python-pip         dumb-init \u0026\u0026     apt-get autoremove -yf \u0026\u0026     rm -r /var/lib/apt/lists/* \u0026\u0026     echo \"it_IT.UTF-8 UTF-8\" \u003e /etc/locale.gen \u0026\u0026     locale-gen \u0026\u0026     update-locale LANG=it_IT.UTF-8 LANGUAGE=it_IT LC_ALL=it_IT.UTF-8 \u0026\u0026     export LANG=it_IT.UTF-8 LANGUAGE=it_IT LC_ALL=it_IT.UTF-8 \u0026\u0026     docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-configure imap --with-kerberos --with-imap-ssl \u0026\u0026     docker-php-ext-install -j$(nproc)         gd         imap         curl         iconv         bcmath         gmp         ftp         intl         mbstring         pcntl         soap         sockets         opcache         shmop         calendar         pdo_mysql         zip \u0026\u0026     pecl install redis-3.1.6 \u0026\u0026     docker-php-ext-enable redis \u0026\u0026     pecl install ssh2-1.1.2 \u0026\u0026     docker-php-ext-enable ssh2 \u0026\u0026     curl -o newrelic-php.tar.gz https://download.newrelic.com/php_agent/release/newrelic-php5-9.3.0.248-linux.tar.gz \u0026\u0026     tar xzvf newrelic-php.tar.gz \u0026\u0026     mv newrelic-php5-* /opt/newrelic-php \u0026\u0026     rm newrelic-php.tar.gz \u0026\u0026     curl -s -o /usr/bin/composer https://getcomposer.org/download/1.9.0/composer.phar \u0026\u0026     chmod +x /usr/bin/composer \u0026\u0026     mkdir -p /usr/local/etc/fpm.d /var/log/php-fpm \u0026\u0026     chown www-data:www-data /var/log/php-fpm \u0026\u0026     ln -s /usr/local/bin/php /usr/bin \u0026\u0026     curl -s -L -o ./biscuit-linux_amd64.tgz https://github.com/dcoker/biscuit/releases/download/v0.1.3/biscuit-linux_amd64.tgz \u0026\u0026     tar xzvf biscuit-linux_amd64.tgz \u0026\u0026     mv biscuit /usr/bin/biscuit \u0026\u0026     chmod +x /usr/bin/biscuit \u0026\u0026     rm biscuit-linux_amd64.tgz \u0026\u0026     pip install awscli \u0026\u0026     aws configure set s3.signature_version s3v4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/php.ini",
            "/usr/local/etc/php/php.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/php-fpm.conf",
            "/usr/local/etc/php-fpm.conf"
          ]
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "it_IT.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "it_IT"
            },
            {
              "Key": "LC_ALL",
              "Value": "it_IT.UTF-8"
            },
            {
              "Key": "TZ",
              "Value": ":/etc/localtime"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/setup_common.sh",
            "/setup_common.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/decrypt_secrets.sh",
            "/decrypt_secrets.sh"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Env": [
            {
              "Key": "PHP_OPCACHE_VALIDATE_TIMESTAMPS",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/usr/bin/dumb-init",
            "--",
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}