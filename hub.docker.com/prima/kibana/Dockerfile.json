{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker.elastic.co/kibana/kibana:6.5.1",
      "SourceCode": "FROM docker.elastic.co/kibana/kibana:6.5.1",
      "Platform": "",
      "From": {
        "Image": "docker.elastic.co/kibana/kibana:6.5.1"
      },
      "Commands": [
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "yum -y update \u0026\u0026     yum -y install python wget \u0026\u0026     curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \u0026\u0026     python get-pip.py \u0026\u0026     rm get-pip.py \u0026\u0026     pip install awscli --upgrade \u0026\u0026     curl -L -o ./biscuit-linux_amd64.tgz https://github.com/dcoker/biscuit/releases/download/v0.1.3/biscuit-linux_amd64.tgz \u0026\u0026     tar xzvf biscuit-linux_amd64.tgz \u0026\u0026     mv biscuit /usr/bin/biscuit \u0026\u0026     chmod +x /usr/bin/biscuit \u0026\u0026     rm biscuit-linux_amd64.tgz \u0026\u0026     rm -rf /var/cache/yum \u0026\u0026     yum clean all \u0026\u0026     curl -L -o ./search-guard-kibana-plugin.zip https://search.maven.org/remotecontent?filepath=com/floragunn/search-guard-kibana-plugin/6.5.1-16/search-guard-kibana-plugin-6.5.1-16.zip \u0026\u0026     ./bin/kibana-plugin install --no-optimize file://$PWD/search-guard-kibana-plugin.zip \u0026\u0026     rm -f search-guard-kibana-plugin.zip \u0026\u0026     chown kibana:kibana $PWD -R"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "kibana"
        },
        {
          "Env": [
            {
              "Key": "ELASTICSEARCH_REQUESTTIMEOUT",
              "Value": "300000"
            },
            {
              "Key": "TZ",
              "Value": ":/etc/localtime"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./files/entrypoint.sh",
            "/entrypoint.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/kibana.yml",
            "/usr/share/kibana/config/kibana.yml"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/kibana-docker 2\u003e\u00261 | grep -m 1 \"Optimization of .* complete in .* seconds\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}