{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.1.26-apache",
      "SourceCode": "FROM php:7.1.26-apache",
      "Platform": "",
      "From": {
        "Image": "php:7.1.26-apache"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./ssl/server.pem",
            "/etc/ssl/certs/server.pem"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./ssl/server.key",
            "/etc/ssl/private/server.key"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./ssl/server.crt",
            "/usr/local/share/ca-certificates/server.crt"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./ssl/server.crt",
            "/usr/share/ca-certificates/server.crt"
          ]
        },
        {
          "CmdLine": [
            "chmod 0600 /etc/ssl/private/server.key"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         telnet         git         curl         wget         vim         iputils-ping         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libxml2-dev         libpq-dev         libmemcached-dev         zlib1g-dev     \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/* /download/directory     \u0026\u0026 docker-php-ext-install -j$(nproc) mbstring tokenizer mcrypt iconv     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-install exif     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 docker-php-ext-install opcache     \u0026\u0026 docker-php-ext-install pdo     \u0026\u0026 docker-php-ext-install pdo_pgsql     \u0026\u0026 pecl install xdebug     \u0026\u0026 docker-php-ext-enable xdebug     \u0026\u0026 pecl install memcached-3.0.3     \u0026\u0026 docker-php-ext-enable memcached     \u0026\u0026 mkdir /usr/share/man/man1     \u0026\u0026 mkdir /usr/share/man/man7     \u0026\u0026 rm -f /etc/apache2/sites-available/000-default.conf     \u0026\u0026 rm -f /etc/apache2/sites-available/default-ssl.conf     \u0026\u0026 php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"     \u0026\u0026 php composer-setup.php --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 php -r \"unlink('composer-setup.php');\"     \u0026\u0026 usermod -u 1000 www-data     \u0026\u0026 groupmod -g 1000 www-data     \u0026\u0026 a2enmod rewrite     \u0026\u0026 a2enmod ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/000-default.conf",
            "/etc/apache2/sites-available/000-default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/default-ssl.conf",
            "/etc/apache2/sites-available/default-ssl.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./config/php.ini",
            "/usr/local/etc/php/php.ini"
          ]
        },
        {
          "CmdLine": [
            "a2ensite default-ssl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -fs /usr/share/zoneinfo/Europe/Moscow /etc/localtime \u0026\u0026 dpkg-reconfigure -f noninteractive tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}