{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10",
      "SourceCode": "FROM alpine:3.10",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10"
      },
      "Commands": [
        {
          "Key": "BITLBEE_VERSION",
          "Name": "arg",
          "Value": "3.6"
        },
        {
          "CmdLine": [
            "addgroup -g 101 -S bitlbee  \u0026\u0026 adduser -u 101 -D -S -G bitlbee bitlbee  \u0026\u0026 apk add --no-cache --update  \ttzdata \tbash \tglib \tlibssl1.1 \tlibpurple \tlibpurple-xmpp \tlibpurple-oscar \tlibpurple-bonjour  \u0026\u0026 apk add --no-cache --update --virtual .build-dependencies \tbuild-base \tgit \tglib-dev \topenssl-dev \tpython2 \tpidgin-dev  \u0026\u0026 cd /tmp  \u0026\u0026 git clone -n https://github.com/bitlbee/bitlbee.git  \u0026\u0026 cd bitlbee  \u0026\u0026 git checkout ${BITLBEE_VERSION}  \u0026\u0026 ./configure --build=x86_64-alpine-linux-musl --host=x86_64-alpine-linux-musl --purple=1 --ssl=openssl --prefix=/usr --etcdir=/etc/bitlbee  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 make install-dev  \u0026\u0026 make install-etc  \u0026\u0026 strip /usr/sbin/bitlbee  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 apk del .build-dependencies"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "FACEBOOK",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Key": "FACEBOOK_VERSION",
          "Name": "arg",
          "Value": "v1.2.0"
        },
        {
          "CmdLine": [
            "if [ ${FACEBOOK} -eq 1 ]; then cd /tmp  \u0026\u0026 apk add --no-cache --update \tjson-glib  \u0026\u0026 apk add --no-cache --update --virtual .build-dependencies \tbuild-base \tgit \tautoconf \tautomake \tlibtool \tglib-dev \tjson-glib-dev  \u0026\u0026 git clone -n https://github.com/bitlbee/bitlbee-facebook.git  \u0026\u0026 cd bitlbee-facebook  \u0026\u0026 git checkout ${FACEBOOK_VERSION}  \u0026\u0026 ./autogen.sh --build=x86_64-alpine-linux-musl --host=x86_64-alpine-linux-musl  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 strip /usr/lib/bitlbee/facebook.so  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 apk del .build-dependencies; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "STEAM",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Key": "STEAM_VERSION",
          "Name": "arg",
          "Value": "a6444d2"
        },
        {
          "CmdLine": [
            "if [ ${STEAM} -eq 1 ]; then cd /tmp  \u0026\u0026 apk add --no-cache --update \tlibgcrypt  \u0026\u0026 apk add --no-cache --update --virtual .build-dependencies \tbuild-base \tgit \tautoconf \tautomake \tlibtool \tlibgcrypt-dev \tglib-dev  \u0026\u0026 git clone -n https://github.com/bitlbee/bitlbee-steam.git  \u0026\u0026 cd bitlbee-steam  \u0026\u0026 git checkout ${STEAM_VERSION}  \u0026\u0026 ./autogen.sh --build=x86_64-alpine-linux-musl --host=x86_64-alpine-linux-musl  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 strip /usr/lib/bitlbee/steam.so  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 apk del .build-dependencies; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "SKYPEWEB",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Key": "SKYPEWEB_VERSION",
          "Name": "arg",
          "Value": "5d29285"
        },
        {
          "CmdLine": [
            "if [ ${SKYPEWEB} -eq 1 ]; then cd /tmp  \u0026\u0026 apk add --no-cache --update \tjson-glib  \u0026\u0026 apk add --no-cache --update --virtual .build-dependencies \tbuild-base \tgit \tpidgin-dev \tjson-glib-dev  \u0026\u0026 git clone -n https://github.com/EionRobb/skype4pidgin.git  \u0026\u0026 cd skype4pidgin  \u0026\u0026 git checkout ${SKYPEWEB_VERSION}  \u0026\u0026 cd skypeweb  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 strip /usr/lib/purple-2/libskypeweb.so  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 apk del .build-dependencies; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "TELEGRAM",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Key": "TELEGRAM_VERSION",
          "Name": "arg",
          "Value": "b101bbb"
        },
        {
          "CmdLine": [
            "if [ ${TELEGRAM} -eq 1 ]; then cd /tmp  \u0026\u0026 apk add --no-cache --update \tlibgcrypt \tzlib \tlibwebp \tlibpng  \u0026\u0026 apk add --no-cache --update --virtual .build-dependencies \tbuild-base \tgit \tlibgcrypt-dev \tzlib-dev \tpidgin-dev \tlibwebp-dev \tlibpng-dev  \u0026\u0026 git clone -n https://github.com/majn/telegram-purple  \u0026\u0026 cd telegram-purple  \u0026\u0026 git checkout ${TELEGRAM_VERSION}  \u0026\u0026 git submodule update --init --recursive  \u0026\u0026 ./configure --build=x86_64-alpine-linux-musl --host=x86_64-alpine-linux-musl  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 strip /usr/lib/purple-2/telegram-purple.so  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 apk del .build-dependencies; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "HANGOUTS",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Key": "HANGOUTS_VERSION",
          "Name": "arg",
          "Value": "3f7d89b"
        },
        {
          "CmdLine": [
            "if [ ${HANGOUTS} -eq 1 ]; then cd /tmp  \u0026\u0026 apk add --no-cache --update \tprotobuf-c \tjson-glib  \u0026\u0026 apk add --no-cache --update --virtual .build-dependencies \tbuild-base \tmercurial \tpidgin-dev \tprotobuf-c-dev \tjson-glib-dev  \u0026\u0026 hg clone https://bitbucket.org/EionRobb/purple-hangouts -r ${HANGOUTS_VERSION}  \u0026\u0026 cd purple-hangouts  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 strip /usr/lib/purple-2/libhangouts.so  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 apk del .build-dependencies; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "SLACK",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Key": "SLACK_VERSION",
          "Name": "arg",
          "Value": "8acc4eb"
        },
        {
          "CmdLine": [
            "if [ ${SLACK} -eq 1 ]; then cd /tmp  \u0026\u0026 apk add --no-cache --update --virtual .build-dependencies \tbuild-base \tgit \tpidgin-dev \tglib-dev  \u0026\u0026 git clone -n https://github.com/dylex/slack-libpurple.git  \u0026\u0026 cd slack-libpurple  \u0026\u0026 git checkout ${SLACK_VERSION}  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 strip /usr/lib/purple-2/libslack.so  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 apk del .build-dependencies; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "SIPE",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Key": "SIPE_VERSION",
          "Name": "arg",
          "Value": "upstream/1.23.3"
        },
        {
          "CmdLine": [
            "if [ ${SIPE} -eq 1 ]; then cd /tmp  \u0026\u0026 apk add --no-cache --update --virtual .build-dependencies \tbuild-base \tgit \tlibtool \tglib-dev \tintltool \tautomake \tautoconf \topenssl-dev \tlibxml2-dev \tpidgin-dev  \u0026\u0026 git clone -n https://github.com/tieto/sipe.git  \u0026\u0026 cd sipe  \u0026\u0026 git checkout ${SIPE_VERSION}  \u0026\u0026 ./autogen.sh  \u0026\u0026 ./configure --build=x86_64-alpine-linux-musl --host=x86_64-alpine-linux-musl --prefix=/usr  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 strip /usr/lib/purple-2/libsipe.so  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 apk del .build-dependencies; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "DISCORD",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Key": "DISCORD_VERSION",
          "Name": "arg",
          "Value": "aa0bbf2"
        },
        {
          "CmdLine": [
            "if [ ${DISCORD} -eq 1 ]; then cd /tmp  \u0026\u0026 apk add --no-cache --update --virtual .build-dependencies \tbuild-base \tgit \tautoconf \tautomake \tlibtool \tglib-dev  \u0026\u0026 git clone -n https://github.com/sm00th/bitlbee-discord.git  \u0026\u0026 cd bitlbee-discord  \u0026\u0026 git checkout ${DISCORD_VERSION}  \u0026\u0026 ./autogen.sh  \u0026\u0026 ./configure --build=x86_64-alpine-linux-musl --host=x86_64-alpine-linux-musl --prefix=/usr  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 strip /usr/lib/bitlbee/discord.so  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 apk del .build-dependencies; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "ROCKETCHAT",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Key": "ROCKETCHAT_VERSION",
          "Name": "arg",
          "Value": "826990b"
        },
        {
          "CmdLine": [
            "if [ ${ROCKETCHAT} -eq 1 ]; then cd /tmp  \u0026\u0026 apk add --no-cache --update \tdiscount \tjson-glib  \u0026\u0026 apk add --no-cache --update --virtual .build-dependencies \tbuild-base \tmercurial \tpidgin-dev \tjson-glib-dev \tdiscount-dev  \u0026\u0026 hg clone https://bitbucket.org/EionRobb/purple-rocketchat -r ${ROCKETCHAT_VERSION}  \u0026\u0026 cd purple-rocketchat  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 strip /usr/lib/purple-2/librocketchat.so  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 apk del .build-dependencies; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "MASTODON",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Key": "MASTODON_VERSION",
          "Name": "arg",
          "Value": "83dee0b"
        },
        {
          "CmdLine": [
            "if [ ${MASTODON} -eq 1 ]; then cd /tmp  \u0026\u0026 apk add --no-cache --update --virtual .build-dependencies \tbuild-base \tgit \tautoconf \tautomake \tlibtool \tglib-dev  \u0026\u0026 git clone -n https://github.com/kensanata/bitlbee-mastodon  \u0026\u0026 cd bitlbee-mastodon  \u0026\u0026 git checkout ${MASTODON_VERSION}  \u0026\u0026 ./autogen.sh  \u0026\u0026 ./configure --build=x86_64-alpine-linux-musl --host=x86_64-alpine-linux-musl  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 strip /usr/lib/bitlbee/mastodon.so  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 apk del .build-dependencies; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "MATRIX",
          "Name": "arg",
          "Value": "1"
        },
        {
          "Key": "OLM_VERSION",
          "Name": "arg",
          "Value": "3.1.4"
        },
        {
          "Key": "MATRIX_VERSION",
          "Name": "arg",
          "Value": "4494ba2"
        },
        {
          "CmdLine": [
            "if [ ${MATRIX} -eq 1 ]; then cd /tmp  \u0026\u0026 apk add --no-cache --update \tsqlite \thttp-parser \tlibgcrypt \tjson-glib  \u0026\u0026 apk add --no-cache --update --virtual .build-dependencies \tbuild-base \tgit \tlibgcrypt-dev \tpidgin-dev \tjson-glib-dev \tglib-dev \tsqlite-dev \thttp-parser-dev  \u0026\u0026 git clone -n https://gitlab.matrix.org/matrix-org/olm.git  \u0026\u0026 cd olm  \u0026\u0026 git checkout ${OLM_VERSION}  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 strip /usr/local/lib/libolm.so.${OLM_VERSION}  \u0026\u0026 cd /tmp  \u0026\u0026 git clone -n https://github.com/matrix-org/purple-matrix  \u0026\u0026 cd purple-matrix  \u0026\u0026 git checkout ${MATRIX_VERSION}  \u0026\u0026 make  \u0026\u0026 make install  \u0026\u0026 strip /usr/lib/purple-2/libmatrix.so  \u0026\u0026 rm -rf /tmp/*  \u0026\u0026 apk del .build-dependencies; fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6667"
          ]
        },
        {
          "Name": "user",
          "User": "bitlbee"
        },
        {
          "CmdLine": [
            "/usr/sbin/bitlbee",
            "-F",
            "-n"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}