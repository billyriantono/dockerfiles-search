{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.3",
      "SourceCode": "FROM alpine:3.3",
      "Platform": "",
      "From": {
        "Image": "alpine:3.3"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "OPENRESTY_VERSION",
              "Value": "1.9.7.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "OPENRESTY_PREFIX",
              "Value": "/opt/openresty"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_PREFIX",
              "Value": "/opt/openresty/nginx"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VAR_PREFIX",
              "Value": "/var/nginx"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"==\u003e Installing dependencies...\"  \u0026\u0026 apk update  \u0026\u0026 apk add --virtual build-deps     make gcc musl-dev     pcre-dev openssl-dev zlib-dev ncurses-dev readline-dev     curl perl     nfs-utils  \u0026\u0026 mkdir -p /root/ngx_openresty  \u0026\u0026 cd /root/ngx_openresty  \u0026\u0026 echo \"==\u003e Downloading OpenResty...\"  \u0026\u0026 curl -sSL http://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz | tar -xvz  \u0026\u0026 cd openresty-*  \u0026\u0026 echo \"==\u003e Configuring OpenResty...\"  \u0026\u0026 readonly NPROC=$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1)  \u0026\u0026 echo \"using upto $NPROC threads\"  \u0026\u0026 ./configure     --prefix=$OPENRESTY_PREFIX     --http-client-body-temp-path=$VAR_PREFIX/client_body_temp     --http-proxy-temp-path=$VAR_PREFIX/proxy_temp     --http-log-path=$VAR_PREFIX/access.log     --error-log-path=$VAR_PREFIX/error.log     --pid-path=$VAR_PREFIX/nginx.pid     --lock-path=$VAR_PREFIX/nginx.lock     --with-luajit     --with-pcre-jit     --with-ipv6     --with-http_ssl_module     --without-http_ssi_module     --without-http_userid_module     --without-http_uwsgi_module     --without-http_scgi_module     -j${NPROC}  \u0026\u0026 echo \"==\u003e Building OpenResty...\"  \u0026\u0026 make -j${NPROC}  \u0026\u0026 echo \"==\u003e Installing OpenResty...\"  \u0026\u0026 make install  \u0026\u0026 echo \"==\u003e Finishing...\"  \u0026\u0026 ln -sf $NGINX_PREFIX/sbin/nginx /usr/local/bin/nginx  \u0026\u0026 ln -sf $NGINX_PREFIX/sbin/nginx /usr/local/bin/openresty  \u0026\u0026 ln -sf $OPENRESTY_PREFIX/bin/resty /usr/local/bin/resty  \u0026\u0026 ln -sf $OPENRESTY_PREFIX/luajit/bin/luajit-* $OPENRESTY_PREFIX/luajit/bin/lua  \u0026\u0026 ln -sf $OPENRESTY_PREFIX/luajit/bin/luajit-* /usr/local/bin/lua  \u0026\u0026 apk del build-deps  \u0026\u0026 apk add     libpcrecpp libpcre16 libpcre32 openssl libssl1.0 pcre libgcc libstdc++  \u0026\u0026 rm -rf /var/cache/apk/*  \u0026\u0026 rm -rf /root/ngx_openresty"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$NGINX_PREFIX/"
        },
        {
          "Expression": "RUN rm -rf conf/* html/*",
          "Name": "onbuild"
        },
        {
          "Expression": "COPY nginx $NGINX_PREFIX/",
          "Name": "onbuild"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/opt/openresty/nginx/conf/nginx.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir /var/www \u0026\u0026 mkdir /var/www/app \u0026\u0026 mkdir /var/www/app/web"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -D -u 1000 nginx \u0026\u0026 addgroup nginx nginx \u0026\u0026 chmod -R g+w+x /var/www/app \u0026\u0026 chown -R nginx:nginx /var/www/app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "nginx -g 'daemon off;  error_log /dev/stderr info;'"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}