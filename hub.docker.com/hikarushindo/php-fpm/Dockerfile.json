{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "hikarushindo/alpine:3.5",
      "SourceCode": "FROM hikarushindo/alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "hikarushindo/alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "Pascal Nitsche",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "\"528995BFEDFBA7191D46839EF9BA0ADA31CBD89E\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_VERSION",
              "Value": "\"7.1.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_URL",
              "Value": "\"https://secure.php.net/get/php-$PHP_VERSION.tar.xz/from/this/mirror\""
            },
            {
              "Key": "PHP_ASC_URL",
              "Value": "\"https://secure.php.net/get/php-$PHP_VERSION.tar.xz.asc/from/this/mirror\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_SHA256",
              "Value": "\"b3565b0c1441064eba204821608df1ec7367abff881286898d900c2c2a5ffe70\""
            },
            {
              "Key": "PHP_MD5",
              "Value": "\"65eef256f6e7104a05361939f5e23ada\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_INI_DIR",
              "Value": "\"/usr/local/etc/php\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_EXTRA_CONFIGURE_ARGS",
              "Value": "\"--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ADDITIONAL_PACKAGES",
              "Value": "imagemagick"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_PECL_EXTENSIONS",
              "Value": "imagick     apcu"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_ENABLE_EXTENSIONS",
              "Value": "apcu     bz2     gd     gettext     gmp     imagick     ldap     mcrypt     mysqli     pdo_mysql     pdo_pgsql     pgsql     pspell     tidy     xmlrpc     xsl"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_ENABLE_ZEND_EXTENSIONS",
              "Value": "opcache"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPIZE_DEPS",
              "Value": "autoconf     file     g++     gcc     libc-dev     make     pkgconf     re2c     icu-dev     postgresql-dev     bzip2-dev     freetype-dev     libjpeg-turbo-dev     libmcrypt-dev     libpng-dev     gettext-dev     gmp-dev     imagemagick-dev     openldap-dev     aspell-dev     tidyhtml-dev     libxslt-dev"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_CFLAGS",
              "Value": "\"-fstack-protector-strong -fpic -fpie -O2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_CPPFLAGS",
              "Value": "\"$PHP_CFLAGS\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHP_LDFLAGS",
              "Value": "\"-Wl,-O1 -Wl,--hash-style=both -pie\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x   \u0026\u0026 addgroup -g 82 -S www-data   \u0026\u0026 adduser -u 82 -D -S -G www-data www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .persistent-deps     ca-certificates     curl     tar     xz     icu-libs     libltdl     $ADDITIONAL_PACKAGES"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $PHP_INI_DIR/conf.d"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe;     apk add --no-cache --virtual .build-deps     gnupg     wget     libressl     $PHPIZE_DEPS     curl-dev     libedit-dev     libxml2-dev     libressl-dev     sqlite-dev     libtool   ;   ln -s /usr/include/tidybuffio.h /usr/include/buffio.h;     mkdir -p /usr/src;   cd /usr/src;     wget -O php.tar.xz \"$PHP_URL\";     if [ -n \"$PHP_SHA256\" ]; then     echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c -;   fi;   if [ -n \"$PHP_MD5\" ]; then     echo \"$PHP_MD5 *php.tar.xz\" | md5sum -c -;   fi;     if [ -n \"$PHP_ASC_URL\" ]; then     wget -O php.tar.xz.asc \"$PHP_ASC_URL\";     export GNUPGHOME=\"$(mktemp -d)\";     for key in $GPG_KEYS; do       gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\";     done;     gpg --batch --verify php.tar.xz.asc php.tar.xz;     rm -r \"$GNUPGHOME\";   fi;     export CFLAGS=\"$PHP_CFLAGS\"     CPPFLAGS=\"$PHP_CPPFLAGS\"     LDFLAGS=\"$PHP_LDFLAGS\"   \u0026\u0026 mkdir -p /usr/src/php   \u0026\u0026 tar -Jxf /usr/src/php.tar.xz -C /usr/src/php --strip-components=1   \u0026\u0026 cd /usr/src/php   \u0026\u0026 ./configure     --with-config-file-path=\"$PHP_INI_DIR\"     --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\"         --disable-cgi         --enable-ftp     --enable-mbstring     --enable-mysqlnd     --with-bz2=shared     --with-gd=shared     --with-gettext=shared     --with-gmp=shared     --with-ldap=shared     --with-mcrypt=shared     --with-mysqli=shared     --with-opcache=shared     --with-pdo_mysql=shared     --with-pdo_pgsql=shared     --with-pgsql=shared     --with-posix=shared     --with-pspell=shared     --with-soap=shared     --with-sockets=shared     --with-tidy=shared     --with-xmlrpc=shared     --with-xsl=shared         --enable-bcmath     --enable-calendar     --enable-exif     --enable-intl     --enable-shmop     --enable-soap     --enable-sysvmsg     --enable-sysvsem     --enable-sysvshm     --enable-zip         --with-curl     --with-libedit     --with-openssl     --with-zlib         $PHP_EXTRA_CONFIGURE_ARGS   \u0026\u0026 make -j \"$(getconf _NPROCESSORS_ONLN)\"   \u0026\u0026 make install   \u0026\u0026 { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; }   \u0026\u0026 make clean     \u0026\u0026 runDeps=\"$(     scanelf --needed --nobanner --recursive /usr/local       | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'       | sort -u       | xargs -r apk info --installed       | sort -u   )\"   \u0026\u0026 apk add --no-cache --virtual .php-rundeps $runDeps     \u0026\u0026 pear channel-discover pear.twig-project.org   \u0026\u0026 for extension in $PHP_PECL_EXTENSIONS; do     printf \"\\n\" | pecl install $extension;   done     \u0026\u0026 cd /root   \u0026\u0026 rm -rf *.tar.gz* /usr/src /root/.gnupg /usr/include/buffio.h     \u0026\u0026 apk del --purge .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 cd /usr/local/etc   \u0026\u0026 echo \"[PHP]\" \u003e /usr/local/etc/php/php.ini;   for extension in $PHP_ENABLE_EXTENSIONS; do        echo \"extension=$extension.so\" \u003e\u003e /usr/local/etc/php/php.ini;   done;   for extension in $PHP_ENABLE_ZEND_EXTENSIONS; do      echo \"zend_extension=$extension.so\" \u003e\u003e /usr/local/etc/php/php.ini;   done;   if [ -d php-fpm.d ]; then     sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf \u003e /dev/null;     cp php-fpm.d/www.conf.default php-fpm.d/www.conf;   else     mkdir php-fpm.d;     cp php-fpm.conf.default php-fpm.d/www.conf;     {       echo '[global]';       echo 'include=etc/php-fpm.d/*.conf';     } | tee php-fpm.conf;   fi   \u0026\u0026 {     echo '[global]';     echo 'error_log = /proc/self/fd/2';     echo;     echo '[www]';     echo '; if we send this to /proc/self/fd/1, it never appears';     echo 'access.log = /proc/self/fd/2';     echo;     echo 'clear_env = no';     echo;     echo '; Ensure worker stdout and stderr are sent to the main error log.';     echo 'catch_workers_output = yes';   } | tee php-fpm.d/docker.conf   \u0026\u0026 {     echo '[global]';     echo 'daemonize = no';     echo;     echo '[www]';     echo 'listen = [::]:9000';   } | tee php-fpm.d/zz-docker.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "/var/www"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}