{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "hikarushindo/alpine:3.5",
      "SourceCode": "FROM hikarushindo/alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "hikarushindo/alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "Pascal Nitsche",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "ZNC_VERSION",
              "Value": "1.6.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GPG_KEYS",
              "Value": "5AE420CC0209989E"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "adduser -S znc \u0026\u0026 addgroup -S znc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026         apk add --no-cache sudo ca-certificates \u0026\u0026     update-ca-certificates \u0026\u0026         apk add --no-cache --virtual .build-deps curl gnupg tar build-base pkgconf swig icu-dev perl-dev libressl-dev c-ares-dev cyrus-sasl-dev python3-dev tcl-dev \u0026\u0026         mkdir -p /usr/src/znc \u0026\u0026     curl -o znc.tar.gz -L \"http://znc.in/releases/archive/znc-${ZNC_VERSION}.tar.gz\" \u0026\u0026     curl -o znc.tar.gz.sig -L \"http://znc.in/releases/archive/znc-${ZNC_VERSION}.tar.gz.sig\" \u0026\u0026     gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"${GPG_KEYS}\" \u0026\u0026     gpg --batch --verify znc.tar.gz.sig znc.tar.gz \u0026\u0026     tar --strip-components=1 -xzf znc.tar.gz  -C /usr/src/znc \u0026\u0026         cd /usr/src/znc \u0026\u0026     ./configure --enable-cyrus \t              --enable-perl                \t--enable-python \t              --enable-swig \t              --enable-tcl \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd $HOME \u0026\u0026     RUNTIME_PACKAGES=\"$(     scanelf --needed --nobanner /usr/local/bin/znc       | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'       | sort -u       | xargs -r apk info --installed       | sort -u       )\" \u0026\u0026      apk add --no-cache ${RUNTIME_PACKAGES} \u0026\u0026         apk del --purge .build-deps \u0026\u0026     rm -rf *.tar.gz* /usr/src /tmp/* /root/.gnupg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "znc.conf.default",
            "/znc.conf.default"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "volume",
          "Volumes": [
            "/znc-data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6667"
          ]
        },
        {
          "CmdLine": [
            ""
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}