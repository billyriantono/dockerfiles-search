{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "hikarushindo/alpine:3.5",
      "SourceCode": "FROM hikarushindo/alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "hikarushindo/alpine:3.5"
      },
      "Commands": [
        {
          "Maintainer": "Pascal Nitsche",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "MYSQL_MAJOR",
              "Value": "5.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MYSQL_VERSION",
              "Value": "5.5.54"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/mysql/bin:/usr/local/mysql/scripts"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup -S mysql \u0026\u0026 adduser -S -G mysql mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /docker-entrypoint-initdb.d \u0026\u0026         apk add --no-cache bash su-exec \u0026\u0026     apk add --no-cache perl \u0026\u0026     apk add --no-cache libaio pwgen \u0026\u0026     apk add --no-cache libstdc++ \u0026\u0026     apk add --no-cache tzdata"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps cmake build-base wget gnupg tar ca-certificates git binutils debian-archive-keyring ncurses-dev \u0026\u0026     update-ca-certificates \u0026\u0026     wget \"https://cdn.mysql.com/Downloads/MySQL-$MYSQL_MAJOR/mysql-$MYSQL_VERSION.tar.gz\" -O mysql.tar.gz  \u0026\u0026     wget \"https://cdn.mysql.com/Downloads/MySQL-$MYSQL_MAJOR/mysql-$MYSQL_VERSION.tar.gz.asc\" -O mysql.tar.gz.asc \u0026\u0026     export GNUPGHOME=\"$(mktemp -d)\" \u0026\u0026      gpg --keyserver ha.pool.sks-keyservers.net --recv-keys A4A9406876FCBD3C456770C88C718D3B5072E1F5 \u0026\u0026      gpg --batch --verify mysql.tar.gz.asc mysql.tar.gz \u0026\u0026      rm -r \"$GNUPGHOME\" mysql.tar.gz.asc \u0026\u0026     mkdir -p mysqlsrc \u0026\u0026     tar -xzf mysql.tar.gz -C mysqlsrc --strip-components=1 \u0026\u0026     mkdir build \u0026\u0026     cd build \u0026\u0026     cmake ../mysqlsrc \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cd .. \u0026\u0026     rm -rf build mysqlsrc \u0026\u0026     rm mysql.tar.gz \u0026\u0026     mkdir -p /usr/local/mysql \u0026\u0026     rm -rf /usr/local/mysql/mysql-test /usr/local/mysql/sql-bench \u0026\u0026     rm -rf /usr/local/mysql/bin/*-debug /usr/local/mysql/bin/*_embedded \u0026\u0026     chmod +x /usr/local/mysql/bin/* \u0026\u0026     find /usr/local/mysql -type f -name \"*.a\" -delete \u0026\u0026     { find /usr/local/mysql -type f -executable -exec strip --strip-all '{}' + || true; } \u0026\u0026     mkdir -p /etc/mysql/conf.d \u0026\u0026     {       echo '[mysqld]';       echo 'skip-host-cache';       echo 'skip-name-resolve';       echo 'datadir = /var/lib/mysql';       echo '!includedir /etc/mysql/conf.d/';     } \u003e /etc/mysql/my.cnf \u0026\u0026     mkdir -p /var/lib/mysql /var/run/mysqld \u0026\u0026     chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \u0026\u0026     chmod 777 /var/run/mysqld \u0026\u0026     rm -rf *.tar.gz* /usr/src /root/.gnupg \u0026\u0026     apk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/mysql"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "3306"
          ]
        },
        {
          "CmdLine": [
            "mysqld"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}