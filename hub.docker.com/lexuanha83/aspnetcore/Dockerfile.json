{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build-env",
      "BaseName": "microsoft/dotnet:2.1-sdk",
      "SourceCode": "FROM microsoft/dotnet:2.1-sdk AS build-env",
      "Platform": "",
      "As": "build-env",
      "From": {
        "Image": "microsoft/dotnet:2.1-sdk"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODE_VERSION",
              "Value": "8.9.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_DOWNLOAD_SHA",
              "Value": "21fb4690e349f82d708ae766def01d7fec1b085ce1f5ab30d9bda8ee126ca8fc"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -SL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz\" --output nodejs.tar.gz     \u0026\u0026 echo \"$NODE_DOWNLOAD_SHA nodejs.tar.gz\" | sha256sum -c -     \u0026\u0026 tar -xzf \"nodejs.tar.gz\" -C /usr/local --strip-components=1     \u0026\u0026 rm nodejs.tar.gz     \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "./"
          ]
        },
        {
          "CmdLine": [
            "sed -i 's#\u003cPackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"2.1.0\" /\u003e#\u003cPackageReference Include=\"Npgsql.EntityFrameworkCore.PostgreSQL\" Version=\"2.1.0\" /\u003e#' src/SimplCommerce.WebHost/SimplCommerce.WebHost.csproj"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/UseSqlServer/UseNpgsql/' src/SimplCommerce.WebHost/Program.cs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/UseSqlServer/UseNpgsql/' src/SimplCommerce.WebHost/Extensions/ServiceCollectionExtensions.cs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm src/SimplCommerce.WebHost/Migrations/* \u0026\u0026 cp -f src/SimplCommerce.WebHost/appsettings.docker.json src/SimplCommerce.WebHost/appsettings.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dotnet restore \u0026\u0026 dotnet build -c Release"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd src/SimplCommerce.WebHost     \u0026\u0026 sed -i 's/Debug/Release/' gulpfile.js \t\u0026\u0026 npm install \t\u0026\u0026 npm install --global gulp-cli \t\u0026\u0026 gulp copy-modules \t\u0026\u0026 dotnet ef migrations add initialSchema \t\u0026\u0026 dotnet ef migrations script -o dbscript.sql \t\u0026\u0026 dotnet publish -c Release -o out"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e '1s/^\\xEF\\xBB\\xBF//' /app/src/SimplCommerce.WebHost/dbscript.sql \t\u0026\u0026 sed -i -e '1s/^\\xEF\\xBB\\xBF//' /app/src/Database/StaticData_PostgreSQL.sql"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "microsoft/dotnet:2.1-aspnetcore-runtime",
      "SourceCode": "FROM microsoft/dotnet:2.1-aspnetcore-runtime",
      "Platform": "",
      "From": {
        "Image": "microsoft/dotnet:2.1-aspnetcore-runtime"
      },
      "Commands": [
        {
          "CmdLine": [
            "mkdir -p /usr/share/man/man1     \u0026\u0026 mkdir -p /usr/share/man/man7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends postgresql-client \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/src/SimplCommerce.WebHost/out",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/src/SimplCommerce.WebHost/dbscript.sql",
            "./"
          ]
        },
        {
          "Chown": "",
          "From": "build-env",
          "Name": "copy",
          "SourcesAndDest": [
            "/app/docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod 755 /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}