MetaArgs:
- DefaultValue: "3.8"
  Key: ALPINE_VERSION
  ProvidedValue: null
  Value: "3.8"
Stages:
- As: pagespeed
  BaseName: alpine:$ALPINE_VERSION
  Commands:
  - Key: MOD_PAGESPEED_TAG
    Name: arg
    Value: v1.13.35.2
  - CmdLine:
    - apk add --no-cache         apache2-dev         apr-dev         apr-util-dev         build-base         curl         gettext-dev         git         gperf         icu-dev         libjpeg-turbo-dev         libpng-dev         libressl-dev         pcre-dev         py-setuptools         zlib-dev     ;
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src
  - CmdLine:
    - git clone -b ${MOD_PAGESPEED_TAG}               --recurse-submodules               --depth=1               -c
      advice.detachedHead=false               -j`nproc`               https://github.com/apache/incubator-pagespeed-mod.git               modpagespeed     ;
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/modpagespeed
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - patches/modpagespeed/*.patch
    - ./
  - CmdLine:
    - for i in *.patch; do printf "\r\nApplying patch ${i%%.*}\r\n"; patch -p1 < $i
      || exit 1; done
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/modpagespeed/tools/gyp
  - CmdLine:
    - ./setup.py install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/modpagespeed
  - CmdLine:
    - build/gyp_chromium --depth=.                        -D use_system_libs=1     &&     cd
      /usr/src/modpagespeed/pagespeed/automatic &&     make psol BUILDTYPE=Release               CFLAGS+="-I/usr/include/apr-1"               CXXFLAGS+="-I/usr/include/apr-1
      -DUCHAR_TYPE=uint16_t"               -j`nproc`     ;
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/ngxpagespeed/psol/lib/Release/linux/x64 &&     mkdir -p /usr/src/ngxpagespeed/psol/include/out/Release
      &&     cp -R out/Release/obj /usr/src/ngxpagespeed/psol/include/out/Release/
      &&     cp -R pagespeed/automatic/pagespeed_automatic.a /usr/src/ngxpagespeed/psol/lib/Release/linux/x64/
      &&     cp -R net           pagespeed           testing           third_party           url           /usr/src/ngxpagespeed/psol/include/     ;
    Name: run
    PrependShell: true
  From:
    Image: alpine:$ALPINE_VERSION
  Name: pagespeed
  Platform: ""
  SourceCode: FROM alpine:$ALPINE_VERSION as pagespeed
- As: nginx
  BaseName: alpine:$ALPINE_VERSION
  Commands:
  - Key: NGX_PAGESPEED_TAG
    Name: arg
    Value: v1.13.35.2-stable
  - Key: NGINX_VERSION
    Name: arg
    Value: 1.15.8
  - Key: NGINX_PGPKEY
    Name: arg
    Value: 520A9993A1C052F8
  - Key: NGINX_BUILD_CONFIG
    Name: arg
    Value: '"        --prefix=/etc/nginx         --sbin-path=/usr/sbin/nginx         --modules-path=/usr/lib/nginx/modules         --conf-path=/etc/nginx/nginx.conf         --error-log-path=/var/log/nginx/error.log         --http-log-path=/var/log/nginx/access.log         --pid-path=/var/run/nginx.pid         --lock-path=/var/run/nginx.lock         --http-client-body-temp-path=/var/cache/nginx/client_temp         --http-proxy-temp-path=/var/cache/nginx/proxy_temp         --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp         --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp         --http-scgi-temp-path=/var/cache/nginx/scgi_temp         --user=nginx         --group=nginx         --with-http_ssl_module         --with-http_realip_module         --with-http_addition_module         --with-http_sub_module         --with-http_dav_module         --with-http_flv_module         --with-http_mp4_module         --with-http_gunzip_module         --with-http_gzip_static_module         --with-http_random_index_module         --with-http_secure_link_module         --with-http_stub_status_module         --with-http_auth_request_module         --with-http_xslt_module=dynamic         --with-http_image_filter_module=dynamic         --with-http_geoip_module=dynamic         --with-threads         --with-stream         --with-stream_ssl_module         --with-stream_ssl_preread_module         --with-stream_realip_module         --with-stream_geoip_module=dynamic         --with-http_slice_module         --with-mail         --with-mail_ssl_module         --with-compat         --with-file-aio         --with-http_v2_module     "'
  - CmdLine:
    - apk add --no-cache         apr-dev         apr-util-dev         build-base         ca-certificates         gd-dev         geoip-dev         git         gnupg         icu-dev         libjpeg-turbo-dev         libpng-dev         libxslt-dev         linux-headers         libressl-dev         pcre-dev         tar         zlib-dev     ;
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src
  - CmdLine:
    - git clone -b ${NGX_PAGESPEED_TAG}               --recurse-submodules               --shallow-submodules               --depth=1               -c
      advice.detachedHead=false               -j`nproc`               https://github.com/apache/incubator-pagespeed-ngx.git               ngxpagespeed     ;
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz          https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz.asc
      &&     (gpg --keyserver ha.pool.sks-keyservers.net --keyserver-options timeout=10
      --recv-keys ${NGINX_PGPKEY} ||      gpg --keyserver hkp://keyserver.ubuntu.com:80
      --keyserver-options timeout=10 --recv-keys ${NGINX_PGPKEY} ||      gpg --keyserver
      hkp://p80.pool.sks-keyservers.net:80 --keyserver-options timeout=10 --recv-keys
      $NGINX_PGPKEY} ) &&     gpg --trusted-key ${NGINX_PGPKEY} --verify nginx-${NGINX_VERSION}.tar.gz.asc
    Name: run
    PrependShell: true
  - Chown: ""
    From: pagespeed
    Name: copy
    SourcesAndDest:
    - /usr/src/ngxpagespeed
    - /usr/src/ngxpagespeed/
  - Name: workdir
    Path: /usr/src/nginx
  - CmdLine:
    - tar zxf ../nginx-${NGINX_VERSION}.tar.gz --strip-components=1 -C . &&     ./configure         ${NGINX_BUILD_CONFIG}         --add-module=/usr/src/ngxpagespeed         --with-ld-opt="-Wl,-z,relro,--start-group
      -lapr-1 -laprutil-1 -licudata -licuuc -lpng -lturbojpeg -ljpeg"     &&     make
      install -j`nproc`
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /etc/nginx/html/ &&     mkdir /etc/nginx/conf.d/ &&     mkdir -p /usr/share/nginx/html/
      &&     sed -i 's|^</body>|<p><a href="https://www.ngxpagespeed.com/"><img src="pagespeed.png"
      title="Nginx module for rewriting web pages to reduce latency and bandwidth"
      /></a></p>\n</body>|' html/index.html &&     install -m644 html/index.html /usr/share/nginx/html/
      &&     install -m644 html/50x.html /usr/share/nginx/html/ &&     ln -s ../../usr/lib/nginx/modules
      /etc/nginx/modules &&     strip /usr/sbin/nginx*           /usr/lib/nginx/modules/*.so     ;
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx.vh.default.conf
    - /etc/nginx/conf.d/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pagespeed.png
    - /usr/share/nginx/html/
  From:
    Image: alpine:$ALPINE_VERSION
  Name: nginx
  Platform: ""
  SourceCode: FROM alpine:$ALPINE_VERSION AS nginx
- BaseName: alpine:$ALPINE_VERSION
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Nico Berlee <nico.berlee@on2it.net>"'
    - Key: version.mod-pagespeed
      Value: '"1.13.35.2"'
    - Key: version.nginx
      Value: '"1.15.8"'
    - Key: version.ngx-pagespeed
      Value: '"1.13.35.2"'
    Name: label
  - Chown: ""
    From: pagespeed
    Name: copy
    SourcesAndDest:
    - /usr/bin/envsubst
    - /usr/local/bin
  - Chown: ""
    From: nginx
    Name: copy
    SourcesAndDest:
    - /usr/sbin/nginx
    - /usr/sbin/nginx
  - Chown: ""
    From: nginx
    Name: copy
    SourcesAndDest:
    - /usr/lib/nginx/modules/
    - /usr/lib/nginx/modules/
  - Chown: ""
    From: nginx
    Name: copy
    SourcesAndDest:
    - /etc/nginx
    - /etc/nginx
  - Chown: ""
    From: nginx
    Name: copy
    SourcesAndDest:
    - /usr/share/nginx/html/
    - /usr/share/nginx/html/
  - CmdLine:
    - apk --no-cache upgrade &&     scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx
      /usr/lib/nginx/modules/*.so /usr/local/bin/envsubst             | tr ',' '\n'             |
      awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'             |
      xargs apk add --no-cache     &&     apk add --no-cache tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - addgroup -S nginx &&     adduser -D -S -h /var/cache/nginx -s /sbin/nologin
      -G nginx nginx &&     install -g nginx -o nginx -d /var/cache/ngx_pagespeed
      &&     mkdir -p /var/log/nginx &&     ln -sf /dev/stdout /var/log/nginx/access.log
      &&     ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: stopsignal
    Signal: SIGTERM
  - CmdLine:
    - /usr/sbin/nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:$ALPINE_VERSION
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:$ALPINE_VERSION
