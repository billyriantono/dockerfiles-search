{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.7-alpine",
      "SourceCode": "FROM python:3.7-alpine",
      "Platform": "",
      "From": {
        "Image": "python:3.7-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "pip install --upgrade   awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "KUBEADM_SOURCE",
          "Name": "arg",
          "Value": "kubernetes-release/release"
        },
        {
          "Key": "KUBEADM_TRACK",
          "Name": "arg",
          "Value": "stable.txt"
        },
        {
          "Key": "KUBEADM_ARCH",
          "Name": "arg",
          "Value": "linux/amd64"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache --virtual build-dependencies     curl     jq   \u0026\u0026 KUBECTL_VERSION=$(curl -SsL --retry 5 \"https://storage.googleapis.com/${KUBEADM_SOURCE}/${KUBEADM_TRACK}\")   \u0026\u0026 curl -SsL --retry 5 \"https://storage.googleapis.com/${KUBEADM_SOURCE}/${KUBEADM_VERSION}/bin/${KUBEADM_ARCH}/kubeadm\" \u003e /usr/bin/kubeadm   \u0026\u0026 chmod +x /usr/bin/kubeadm   \u0026\u0026 apk del     build-dependencies   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "KUBECTL_SOURCE",
          "Name": "arg",
          "Value": "kubernetes-release/release"
        },
        {
          "Key": "KUBECTL_TRACK",
          "Name": "arg",
          "Value": "stable.txt"
        },
        {
          "Key": "KUBECTL_ARCH",
          "Name": "arg",
          "Value": "linux/amd64"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache --virtual build-dependencies     curl     jq   \u0026\u0026 KUBECTL_VERSION=$(curl -SsL --retry 5 \"https://storage.googleapis.com/${KUBECTL_SOURCE}/${KUBECTL_TRACK}\")   \u0026\u0026 curl -SsL --retry 5 \"https://storage.googleapis.com/${KUBECTL_SOURCE}/${KUBECTL_VERSION}/bin/${KUBECTL_ARCH}/kubectl\" \u003e /usr/bin/kubectl   \u0026\u0026 chmod +x /usr/bin/kubectl   \u0026\u0026 apk del     build-dependencies   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache --virtual build-dependencies     curl     jq   \u0026\u0026 KUSTOMIZE_VERSION=$(curl -SsL --retry 5 \"https://api.github.com/repos/kubernetes-sigs/kustomize/releases/latest\" | jq --raw-output \".assets[] | select(.browser_download_url | contains (\\\"linux_amd64\\\")) | .browser_download_url\")   \u0026\u0026 curl -SsL --retry 5 $KUSTOMIZE_VERSION \u003e /usr/bin/kustomize   \u0026\u0026 chmod +x /usr/bin/kustomize   \u0026\u0026 apk del     build-dependencies   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache --virtual build-dependencies     curl     jq   \u0026\u0026 TERRAFORM_VERSION=$(curl -SsL --retry 5 \"https://checkpoint-api.hashicorp.com/v1/check/terraform\" | jq --raw-output \".current_version\")   \u0026\u0026 curl --output terraform.zip -SsL --retry 5 \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\"   \u0026\u0026 unzip terraform.zip   \u0026\u0026 rm terraform.zip   \u0026\u0026 mv terraform /usr/bin/terraform   \u0026\u0026 chmod +x /usr/bin/terraform   \u0026\u0026 apk del     build-dependencies   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache --virtual build-dependencies     curl     gcc     git     jq     libffi-dev     make     musl-dev     openssl-dev   \u0026\u0026 KUBESPRAY_VERSION=$(curl -SsL --retry 5 \"https://api.github.com/repos/kubernetes-sigs/kubespray/releases/latest\" | jq --raw-output \".tag_name\" | tr -d \"v\")   \u0026\u0026 curl --output kubespray.zip -SsL --retry 5 \"https://github.com/kubernetes-sigs/kubespray/archive/v${KUBESPRAY_VERSION}.zip\"   \u0026\u0026 unzip kubespray.zip   \u0026\u0026 rm kubespray.zip   \u0026\u0026 pip install -r \"kubespray-${KUBESPRAY_VERSION}/requirements.txt\"   \u0026\u0026 mkdir -p /kubespray   \u0026\u0026 mv \"kubespray-${KUBESPRAY_VERSION}/cluster.yml\" /kubespray/   \u0026\u0026 mv \"kubespray-${KUBESPRAY_VERSION}/contrib\" /kubespray/contrib   \u0026\u0026 mv \"kubespray-${KUBESPRAY_VERSION}/inventory/sample\" /kubespray/inventory   \u0026\u0026 mv \"kubespray-${KUBESPRAY_VERSION}/library\" /kubespray/library   \u0026\u0026 mv \"kubespray-${KUBESPRAY_VERSION}/remove-node.yml\" /kubespray/   \u0026\u0026 mv \"kubespray-${KUBESPRAY_VERSION}/reset.yml\" /kubespray/   \u0026\u0026 mv \"kubespray-${KUBESPRAY_VERSION}/roles\" /kubespray/roles   \u0026\u0026 mv \"kubespray-${KUBESPRAY_VERSION}/scale.yml\" /kubespray/   \u0026\u0026 mv \"kubespray-${KUBESPRAY_VERSION}/scripts\" /kubespray/scripts   \u0026\u0026 mv \"kubespray-${KUBESPRAY_VERSION}/upgrade-cluster.yml\" /kubespray/   \u0026\u0026 rm -r \"kubespray-${KUBESPRAY_VERSION}\"   \u0026\u0026 apk del     build-dependencies   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/application"
        },
        {
          "CmdLine": [
            "mkdir /root/.ssh   \u0026\u0026 ln -s \"/run/secrets/ssh_private_key\" \"/root/.ssh/id_rsa\"   \u0026\u0026 ln -s \"/run/secrets/ssh_public_key\" \"/root/.ssh/id_rsa.pub\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}