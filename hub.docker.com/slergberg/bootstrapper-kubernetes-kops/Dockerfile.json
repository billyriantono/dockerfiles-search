{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.7-alpine",
      "SourceCode": "FROM python:3.7-alpine",
      "Platform": "",
      "From": {
        "Image": "python:3.7-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "pip install --upgrade   awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "KUBEADM_SOURCE",
          "Name": "arg",
          "Value": "kubernetes-release/release"
        },
        {
          "Key": "KUBEADM_TRACK",
          "Name": "arg",
          "Value": "stable.txt"
        },
        {
          "Key": "KUBEADM_ARCH",
          "Name": "arg",
          "Value": "linux/amd64"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache     curl     jq   \u0026\u0026 KUBECTL_VERSION=$(curl -SsL --retry 5 \"https://storage.googleapis.com/${KUBEADM_SOURCE}/${KUBEADM_TRACK}\")   \u0026\u0026 curl -SsL --retry 5 \"https://storage.googleapis.com/${KUBEADM_SOURCE}/${KUBEADM_VERSION}/bin/${KUBEADM_ARCH}/kubeadm\" \u003e /usr/bin/kubeadm   \u0026\u0026 chmod +x /usr/bin/kubeadm   \u0026\u0026 apk del     curl     jq   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "KUBECTL_SOURCE",
          "Name": "arg",
          "Value": "kubernetes-release/release"
        },
        {
          "Key": "KUBECTL_TRACK",
          "Name": "arg",
          "Value": "stable.txt"
        },
        {
          "Key": "KUBECTL_ARCH",
          "Name": "arg",
          "Value": "linux/amd64"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache     curl     jq   \u0026\u0026 KUBECTL_VERSION=$(curl -SsL --retry 5 \"https://storage.googleapis.com/${KUBECTL_SOURCE}/${KUBECTL_TRACK}\")   \u0026\u0026 curl -SsL --retry 5 \"https://storage.googleapis.com/${KUBECTL_SOURCE}/${KUBECTL_VERSION}/bin/${KUBECTL_ARCH}/kubectl\" \u003e /usr/bin/kubectl   \u0026\u0026 chmod +x /usr/bin/kubectl   \u0026\u0026 apk del     curl     jq   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache     curl     jq   \u0026\u0026 KUSTOMIZE_VERSION=$(curl -SsL --retry 5 \"https://api.github.com/repos/kubernetes-sigs/kustomize/releases/latest\" | jq --raw-output \".assets[] | select(.browser_download_url | contains (\\\"linux_amd64\\\")) | .browser_download_url\")   \u0026\u0026 curl -SsL --retry 5 $KUSTOMIZE_VERSION \u003e /usr/bin/kustomize   \u0026\u0026 chmod +x /usr/bin/kustomize   \u0026\u0026 apk del     curl     jq   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "GO_VERSION",
          "Name": "arg",
          "Value": "1.8.1"
        },
        {
          "Key": "KOPS_GITISH",
          "Name": "arg",
          "Value": "release"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache --virtual build-dependencies     bash     curl     gcc     git     go     jq     make     musl-dev     openssl   \u0026\u0026 apk add --no-cache     ca-certificates     vim   \u0026\u0026 export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\"   \u0026\u0026 curl -L https://golang.org/dl/go${GO_VERSION}.src.tar.gz | tar zx -C /usr/local   \u0026\u0026 cd /usr/local/go/src   \u0026\u0026 ./make.bash   \u0026\u0026 mkdir -p /go   \u0026\u0026 export GOPATH=/go   \u0026\u0026 go get -d k8s.io/kops   \u0026\u0026 cd ${GOPATH}/src/k8s.io/kops/   \u0026\u0026 git checkout ${KOPS_GITISH}   \u0026\u0026 make SHASUMCMD=0   \u0026\u0026 mv ${GOPATH}/bin/kops /usr/bin/.   \u0026\u0026 rm -rf /go /usr/local/go   \u0026\u0026 apk del     build-dependencies   \u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}