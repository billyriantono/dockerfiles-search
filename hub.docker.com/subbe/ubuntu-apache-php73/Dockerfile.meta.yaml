MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - Key: UID
    Name: arg
    Value: "1000"
  - Key: GID
    Name: arg
    Value: "1000"
  - Env:
    - Key: PHP_XDEBUG_REMOTE_HOST
      Value: '""'
    - Key: PHP_XDEBUG_IDEKEY
      Value: '""'
    - Key: PHP_XDEBUG_REMOTE_ENABLE
      Value: '""'
    - Key: PHP_XDEBUG_REMOTE_AUTOSTART
      Value: '""'
    - Key: PHP_XDEBUG_REMOTE_PORT
      Value: '""'
    - Key: TZ
      Value: '"Indian/Maldives"'
    Name: env
  - CmdLine:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y     build-essential     gperf     software-properties-common     apt-utils     language-pack-en-base
    Name: run
    PrependShell: true
  - CmdLine:
    - LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/$TZ /etc/localtime     && echo $TZ > /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y     vim     curl     zip     unzip     git     sqlite3     imagemagick     mysql-client     apache2     libapache2-mod-php7.3     nano     pkg-config     composer     libmcrypt-dev     php7.3     php7.3-cli     php7.3-gd     php7.3-bcmath     php7.3-imap     php7.3-xml     php7.3-soap     php7.3-curl     php7.3-gd     php7.3-json     php7.3-xml     php7.3-mbstring     php7.3-pdo     php7.3-mysql     php7.3-sqlite3     php7.3-zip     php7.3-xmlrpc     php7.3-tidy     php7.3-dev     php7.3-common     php-imagick     php-memcached     php-redis     php-xdebug     &&
      php -r "readfile('http://getcomposer.org/installer');" | php -- --install-dir=/usr/bin/
      --filename=composer     && apt-get remove -y --purge software-properties-common     &&
      apt-get clean     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod php7.3 rewrite
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "s/short_open_tag = Off/short_open_tag = On/" /etc/php/7.3/apache2/php.ini     &&
      sed -i "s/error_reporting = .*$/error_reporting = E_ERROR | E_WARNING | E_PARSE/"
      /etc/php/7.3/apache2/php.ini     && sed -i "s/;extension=openssl/extension=openssl/"
      /etc/php/7.3/apache2/php.ini     && echo "extension=json" >> /etc/php/7.3/apache2/php.ini     &&
      echo "extension=tokenizer" >> /etc/php/7.3/apache2/php.ini     && echo "extension=pdo"
      >> /etc/php/7.3/apache2/php.ini
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - /images/execute.sh
    - /var/exec/execute.sh
  - Chown: ""
    Name: add
    SourcesAndDest:
    - /images/etc/php/7.3/apache2/php.ini
    - /etc/php/7.3/apache2
  - Chown: ""
    Name: add
    SourcesAndDest:
    - /images/etc/php/7.3/apache2/conf.d/
    - /etc/php/7.3/apache2/conf.d/
  - CmdLine:
    - if grep -q "^appuser" /etc/group; then echo "Group already exists."; else groupadd
      -g $GID appuser; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -r -u $UID -g appuser appuser
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R appuser:appuser /var/www/
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /usr/local/nvm
    Name: run
    PrependShell: true
  - Env:
    - Key: NVM_DIR
      Value: /usr/local/nvm
    Name: env
  - Env:
    - Key: SHIPPABLE_NODE_VERSION
      Value: v8.11.1
    Name: env
  - CmdLine:
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 755 $NVM_DIR/nvm.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - . $NVM_DIR/nvm.sh     && nvm install $SHIPPABLE_NODE_VERSION     && nvm install
      v6.12.3 && nvm install v7.7.3     && nvm alias default $SHIPPABLE_NODE_VERSION     &&
      nvm use default && npm install grunt-cli gulp-cli babel-cli yarn webpack webpack-cli
      -g     && nvm use v6.12.3 && npm install grunt-cli gulp-cli babel-cli yarn webpack
      webpack-cli -g     && nvm use v7.7.3  && npm install grunt-cli gulp-cli babel-cli
      yarn webpack webpack-cli -g     && nvm use default
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "ServerName localhost" >> /etc/apache2/apache2.conf
    Name: run
    PrependShell: true
  - Name: user
    User: appuser
  - Env:
    - Key: METHOD
      Value: script
    Name: env
  - CmdLine:
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - . $NVM_DIR/nvm.sh
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - git config --global url."https://".insteadOf git://
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/local/git-dummy
    Name: run
    PrependShell: true
  - CmdLine:
    - git init /usr/local/git-dummy
    Name: run
    PrependShell: true
  - Env:
    - Key: GIT_DIR
      Value: /usr/local/git-dummy
    Name: env
  - CmdLine:
    - echo 'cd /var/www' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/bash
    - /var/exec/execute.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
