MetaArgs: null
Stages:
- BaseName: ubuntu:bionic
  Commands:
  - CmdLine:
    - export DEBIAN_FRONTEND="noninteractive"     && apt-get update     && apt-get
      install -y --no-install-recommends         apt-transport-https         ca-certificates         cabextract         gosu         gpg-agent         p7zip         pulseaudio-utils         software-properties-common         unzip         wget         winbind         zenity     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Key: WINEBRANCH
    Name: arg
    Value: null
  - Key: WINE_VER
    Name: arg
    Value: null
  - CmdLine:
    - wget https://dl.winehq.org/wine-builds/winehq.key     && apt-key add winehq.key     &&
      apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main"     &&
      dpkg --add-architecture i386     && apt-get update     && apt-get install -y
      --install-recommends winehq-${WINEBRANCH}="${WINE_VER}"     && rm -rf /var/lib/apt/lists/*     &&
      rm winehq.key
    Name: run
    PrependShell: true
  - Key: MONO_VER
    Name: arg
    Value: null
  - Key: GECKO_VER
    Name: arg
    Value: null
  - CmdLine:
    - mkdir -p /usr/share/wine/mono /usr/share/wine/gecko     && wget https://dl.winehq.org/wine/wine-mono/${MONO_VER}/wine-mono-${MONO_VER}.msi         -O
      /usr/share/wine/mono/wine-mono-${MONO_VER}.msi     && wget https://dl.winehq.org/wine/wine-gecko/${GECKO_VER}/wine_gecko-${GECKO_VER}-x86.msi         -O
      /usr/share/wine/gecko/wine_gecko-${GECKO_VER}-x86.msi     && wget https://dl.winehq.org/wine/wine-gecko/${GECKO_VER}/wine_gecko-${GECKO_VER}-x86_64.msi         -O
      /usr/share/wine/gecko/wine_gecko-${GECKO_VER}-x86_64.msi
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks         -O
      /usr/bin/winetricks     && chmod +rx /usr/bin/winetricks
    Name: run
    PrependShell: true
  - CmdLine:
    - groupadd -g 1010 wineuser     && useradd --shell /bin/bash --uid 1010 --gid
      1010 --create-home --home-dir /home/wineuser wineuser     && chown -R wineuser:wineuser
      /home/wineuser
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /home/wineuser
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pulse-client.conf
    - /etc/pulse/client.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /usr/bin/entrypoint
  - Name: workdir
    Path: /home/wineuser
  - Key: IMAGE_VER
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: GIT_REV
    Name: arg
    Value: null
  - Labels:
    - Key: org.opencontainers.image.authors
      Value: '"scottyhardy <scotthardy42@outlook.com>"'
    - Key: org.opencontainers.image.created
      Value: '"${BUILD_DATE}"'
    - Key: org.opencontainers.image.description
      Value: '"Docker image that includes Wine and Winetricks for running Windows
        applications on Linux and macOS"'
    - Key: org.opencontainers.image.documentation
      Value: '"https://github.com/scottyhardy/docker-wine/blob/${IMAGE_VER}/README.md"'
    - Key: org.opencontainers.image.licenses
      Value: '"MIT"'
    - Key: org.opencontainers.image.revision
      Value: '"${GIT_REV}"'
    - Key: org.opencontainers.image.source
      Value: '"https://github.com/scottyhardy/docker-wine.git"'
    - Key: org.opencontainers.image.title
      Value: '"docker-wine"'
    - Key: org.opencontainers.image.url
      Value: '"https://github.com/scottyhardy/docker-wine"'
    - Key: org.opencontainers.image.vendor
      Value: '"scottyhardy"'
    - Key: org.opencontainers.image.version
      Value: '"${IMAGE_VER}"'
    Name: label
  - CmdLine:
    - /usr/bin/entrypoint
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /bin/bash
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:bionic
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:bionic
