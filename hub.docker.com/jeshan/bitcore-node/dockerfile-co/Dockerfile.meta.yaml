MetaArgs: null
Stages:
- BaseName: php:7-alpine
  Commands:
  - CmdLine:
    - docker-php-ext-install opcache
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /opcache  && echo 'opcache.enable=1' >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini  &&
      echo 'opcache.enable_cli=1' >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini  &&
      echo 'opcache.validate_timestamps=0' >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini  &&
      echo 'opcache.file_cache="/opcache"' >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini  &&
      echo 'opcache.file_update_protection=0' >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini  &&
      echo 'opcache.fast_shutdown=1' >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini  &&
      echo 'opcache.log_verbosity_level=0' >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony  && chmod
      a+x /usr/local/bin/symfony
    Name: run
    PrependShell: true
  - Env:
    - Key: SYMFONY_ENV
      Value: prod
    Name: env
  - CmdLine:
    - 'symfony demo /srv  && echo ''doctrine: {dbal: {path: "%kernel.root_dir%/data/blog.sqlite"}}''
      >> /srv/app/config/config_prod.yml  && /srv/app/console cache:warmup  && find
      -L /srv -name ''*.php'' -exec php -l {} \; -exec sh -c ": > {}" \;'
    Name: run
    PrependShell: true
  - CmdLine:
    - php /srv/app/console
    Name: cmd
    PrependShell: true
  From:
    Image: php:7-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM php:7-alpine
