MetaArgs: null
Stages:
- As: static-docker-source
  BaseName: docker:17.12.0-ce
  Commands: null
  From:
    Image: docker:17.12.0-ce
  Name: static-docker-source
  Platform: ""
  SourceCode: FROM docker:17.12.0-ce as static-docker-source
- BaseName: ubuntu:18.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/hrcc"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: C.UTF-8
    Name: env
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Env:
    - Key: npm_config_loglevel
      Value: warn
    Name: env
  - Env:
    - Key: npm_config_unsafe_perm
      Value: "true"
    Name: env
  - Env:
    - Key: CLOUD_SDK_VERSION
      Value: 200.0.0
    Name: env
  - CmdLine:
    - apt-get update     && apt-get install -y apt-utils curl wget unzip git software-properties-common
      lsb-release
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz     &&
      tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz     && rm dockerize-linux-amd64-v0.6.1.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:ondrej/php && apt-get update     && apt-get install
      -y libpq-dev libpng-dev php-pear     php7.3-dev php7.3-fpm php7.3-cli php7.3-gd
      php7.3-bcmath     php7.3-mysql php7.3-sqlite3 php7.3-imap php7.3-mbstring     php7.3-json
      php7.3-curl php7.3-gd php7.3-gmp php7.3-zip php-redis php7.2-xml     php-yaml
      php7.3-xml php-mongodb imagemagick php-imagick php7.3-xdebug     && mkdir /run/php
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "readfile('http://getcomposer.org/installer');" | php -- --install-dir=/usr/bin/
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y mysql-client
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --silent --location https://deb.nodesource.com/setup_12.x | bash -     &&
      apt-get install nodejs -y
    Name: run
    PrependShell: true
  - Env:
    - Key: DBUS_SESSION_BUS_ADDRESS
      Value: /dev/null
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y libgtk2.0-0 libnotify-dev libgconf-2-4     libnss3
      libxss1 libasound2 xvfb
    Name: run
    PrependShell: true
  - CmdLine:
    - export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" &&     echo "deb https://packages.cloud.google.com/apt
      $CLOUD_SDK_REPO main" > /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl
      https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - &&     apt-get
      update &&     apt-get install -y google-cloud-sdk=${CLOUD_SDK_VERSION}-0 &&     gcloud
      config set core/disable_usage_reporting true &&     gcloud config set component_manager/disable_update_check
      true &&     gcloud config set metrics/environment github_docker_image
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64
    - /usr/local/bin/cloud_sql_proxy
  - CmdLine:
    - chmod +x /usr/local/bin/cloud_sql_proxy
    Name: run
    PrependShell: true
  - Chown: ""
    From: static-docker-source
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/docker
    - /usr/local/bin/docker
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://circle-downloads.s3.amazonaws.com/releases/build_agent_wrapper/circleci
    - /usr/local/bin/circleci
  - CmdLine:
    - chmod +x /usr/local/bin/circleci
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://s3-eu-west-1.amazonaws.com/lokalise-assets/cli/lokalise-0.711-linux-amd64.tgz
    - /tmp
  - CmdLine:
    - cd tmp && tar xvfz lokalise*.tgz && mv /tmp/lokalise /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add -
    Name: run
    PrependShell: true
  - CmdLine:
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable
      main" >> /etc/apt/sources.list.d/google.list'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y google-chrome-stable
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -fsSL https://goss.rocks/install | sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove -y --purge apt-utils software-properties-common     && apt-get
      clean     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
