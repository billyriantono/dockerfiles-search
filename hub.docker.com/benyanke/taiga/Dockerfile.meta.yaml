MetaArgs: null
Stages:
- BaseName: python:3.5
  Commands:
  - Maintainer: Ben Yanke <ben@benyanke.com>
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - set -x &&     apt-get update &&     apt-get install -y --no-install-recommends         python3-cairo         locales         gettext         ca-certificates         nginx     &&
      rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8 && dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /usr/src/taiga-back
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - taiga-back/requirements.txt
    - /usr/src/taiga-back/
  - CmdLine:
    - pip install --no-cache-dir -r requirements.txt
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - taiga-back
    - /usr/src/taiga-back
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - taiga-front-dist/
    - /usr/src/taiga-front-dist
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-settings.py
    - /usr/src/taiga-back/settings/docker.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/locale.gen
    - /etc/locale.gen
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx/nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx/taiga.conf
    - /etc/nginx/conf.d/default.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx/ssl.conf
    - /etc/nginx/ssl.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/nginx/taiga-events.conf
    - /etc/nginx/taiga-events.conf
  - CmdLine:
    - mkdir -p /taiga
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/taiga/local.py
    - /taiga/local.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - conf/taiga/conf.json
    - /taiga/conf-orig.json
  - CmdLine:
    - ln -s /taiga/local.py /usr/src/taiga-back/settings/local.py &&     ln -s /taiga/conf.json
      /usr/src/taiga-front-dist/dist/conf.json
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /usr/src/taiga-front-dist/dist/js/ && ln -s /taiga/conf.json /usr/src/taiga-front-dist/dist/js/conf.json
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C
    Name: env
  - CmdLine:
    - 'LC_ALL=C pip install --no-cache-dir taiga-contrib-slack &&     mkdir -p /usr/src/taiga-front-dist/dist/plugins/slack/
      &&     SLACK_VERSION=$(pip show taiga-contrib-slack | awk ''/^Version: /{print
      $2}'') &&     echo "taiga-contrib-slack version: $SLACK_VERSION" &&     curl
      https://raw.githubusercontent.com/taigaio/taiga-contrib-slack/$SLACK_VERSION/front/dist/slack.js
      -o /usr/src/taiga-front-dist/dist/plugins/slack/slack.js &&     curl https://raw.githubusercontent.com/taigaio/taiga-contrib-slack/$SLACK_VERSION/front/dist/slack.json
      -o /usr/src/taiga-front-dist/dist/plugins/slack/slack.json'
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir taiga-contrib-ldap-auth-ext
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "LANG=en_US.UTF-8" >> /etc/default/locale &&     echo "LC_ALL=en_US.UTF-8"
      >> /etc/default/locale &&     echo "LC_TYPE=en_US.UTF-8" >> /etc/default/locale
      &&     echo "LC_MESSAGES=POSIX" >> /etc/default/locale &&     echo "LANGUAGE=en"
      >> /etc/default/locale
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_TYPE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: TAIGA_SSL
      Value: "False"
    Name: env
  - Env:
    - Key: TAIGA_ENABLE_EMAIL
      Value: "False"
    Name: env
  - Env:
    - Key: TAIGA_HOSTNAME
      Value: localhost
    Name: env
  - Env:
    - Key: TAIGA_SECRET_KEY
      Value: '"!!!REPLACE-ME-j1598u1J^U*(y251u98u51u5981urf98u2o5uvoiiuzhlit3)!!!"'
    Name: env
  - CmdLine:
    - locale-gen en_US.UTF-8 && locale -a
    Name: run
    PrependShell: true
  - CmdLine:
    - python manage.py collectstatic --noinput
    Name: run
    PrependShell: true
  - CmdLine:
    - locale -a
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log &&     ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "80"
  - Name: volume
    Volumes:
    - /usr/src/taiga-back/media
  - Health:
      Test:
      - CMD-SHELL
      - curl --fail http://localhost:80/conf.json || exit 1
    Name: healthcheck
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - checkdb.py
    - /checkdb.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /docker-entrypoint.sh
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - gunicorn
    - -w 3
    - -t 60
    - --pythonpath=.
    - -b 127.0.0.1:8000
    - taiga.wsgi
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.5
