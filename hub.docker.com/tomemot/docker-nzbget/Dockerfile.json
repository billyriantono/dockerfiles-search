{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "lsiobase/alpine:3.7",
      "SourceCode": "FROM lsiobase/alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "lsiobase/alpine:3.7"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "build_version",
              "Value": "\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"sparklyballs\""
            }
          ],
          "Name": "label"
        },
        {
          "Key": "NZBGET_BRANCH",
          "Name": "arg",
          "Value": "\"stable-download\""
        },
        {
          "CmdLine": [
            "echo \"**** install packages ****\" \u0026\u0026  apk add --no-cache \tcurl \tp7zip \tpython2 \tunrar \tffmpeg \tgit \twget \u0026\u0026  echo \"**** install nzbget ****\" \u0026\u0026  mkdir -p \t/app/nzbget \u0026\u0026  curl -o  /tmp/json -L \thttp://nzbget.net/info/nzbget-version-linux.json \u0026\u0026  NZBGET_VERSION=$(grep \"${NZBGET_BRANCH}\" /tmp/json  | cut -d '\"' -f 4) \u0026\u0026  curl -o  /tmp/nzbget.run -L \t\"${NZBGET_VERSION}\" \u0026\u0026  sh /tmp/nzbget.run --destdir /app/nzbget \u0026\u0026  echo \"**** configure nzbget ****\" \u0026\u0026  cp /app/nzbget/nzbget.conf /defaults/nzbget.conf \u0026\u0026  sed -i \t-e \"s#\\(MainDir=\\).*#\\1/downloads#g\" \t-e \"s#\\(ScriptDir=\\).*#\\1$\\{MainDir\\}/scripts#g\" \t-e \"s#\\(WebDir=\\).*#\\1$\\{AppDir\\}/webui#g\" \t-e \"s#\\(ConfigTemplate=\\).*#\\1$\\{AppDir\\}/webui/nzbget.conf.template#g\"  /defaults/nzbget.conf \u0026\u0026  echo \"**** cleanup ****\" \u0026\u0026  rm -rf \t/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "root/",
            "/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/downloads"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "6789"
          ]
        }
      ]
    }
  ]
}