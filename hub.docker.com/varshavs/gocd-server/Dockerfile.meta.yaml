MetaArgs: null
Stages:
- BaseName: alpine:3.7
  Commands:
  - Maintainer: GoCD <go-cd-dev@googlegroups.com>
    Name: maintainer
  - Labels:
    - Key: gocd.version
      Value: '"18.1.0"'
    - Key: description
      Value: '"GoCD server based on alpine linux"'
    - Key: maintainer
      Value: '"GoCD <go-cd-dev@googlegroups.com>"'
    - Key: gocd.full.version
      Value: '"18.1.0-5937"'
    - Key: gocd.git.sha
      Value: '"8a847b96ee8d38173f80178ed1285f0e53a970e0"'
    Name: label
  - Name: expose
    Ports:
    - "8153"
    - "8154"
  - Env:
    - Key: LANG
      Value: en_US.utf8
    Name: env
  - Key: UID
    Name: arg
    Value: "1000"
  - Key: GID
    Name: arg
    Value: "1000"
  - CmdLine:
    - addgroup -g ${GID} go &&   adduser -D -u ${UID} -s /bin/bash -G go go &&   apk
      --no-cache upgrade &&   apk add --no-cache openjdk8-jre-base git mercurial subversion
      tini openssh-client bash su-exec curl &&   curl --fail --location --silent --show-error
      "https://download.gocd.org/binaries/18.1.0-5937/generic/go-server-18.1.0-5937.zip"
      > /tmp/go-server.zip &&   unzip /tmp/go-server.zip -d / &&   rm /tmp/go-server.zip
      &&   mv go-server-18.1.0 /go-server &&   mkdir -p /docker-entrypoint.d
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - logback-include.xml
    - /go-server/config/logback-include.xml
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install-gocd-plugins
    - /usr/local/sbin/install-gocd-plugins
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine:3.7
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.7
