{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins/jenkins:2.190.3-alpine",
      "SourceCode": "FROM jenkins/jenkins:2.190.3-alpine",
      "Platform": "",
      "From": {
        "Image": "jenkins/jenkins:2.190.3-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "/usr/local/bin/install-plugins.sh ssh-slaves \u0026\u0026     /usr/local/bin/install-plugins.sh configuration-as-code \u0026\u0026     /usr/local/bin/install-plugins.sh email-ext \u0026\u0026     /usr/local/bin/install-plugins.sh mailer \u0026\u0026     /usr/local/bin/install-plugins.sh slack \u0026\u0026     /usr/local/bin/install-plugins.sh http_request \u0026\u0026     /usr/local/bin/install-plugins.sh htmlpublisher \u0026\u0026     /usr/local/bin/install-plugins.sh git \u0026\u0026     /usr/local/bin/install-plugins.sh cloudbees-folder \u0026\u0026     /usr/local/bin/install-plugins.sh greenballs \u0026\u0026     /usr/local/bin/install-plugins.sh simple-theme-plugin \u0026\u0026     /usr/local/bin/install-plugins.sh ansicolor \u0026\u0026     /usr/local/bin/install-plugins.sh dashboard-view \u0026\u0026     /usr/local/bin/install-plugins.sh view-job-filters \u0026\u0026     /usr/local/bin/install-plugins.sh google-login \u0026\u0026     /usr/local/bin/install-plugins.sh dependency-check-jenkins-plugin \u0026\u0026     /usr/local/bin/install-plugins.sh antisamy-markup-formatter \u0026\u0026     /usr/local/bin/install-plugins.sh matrix-auth \u0026\u0026     /usr/local/bin/install-plugins.sh role-strategy \u0026\u0026     /usr/local/bin/install-plugins.sh basic-branch-build-strategies \u0026\u0026     /usr/local/bin/install-plugins.sh workflow-aggregator \u0026\u0026     /usr/local/bin/install-plugins.sh blueocean \u0026\u0026     /usr/local/bin/install-plugins.sh timestamper \u0026\u0026     /usr/local/bin/install-plugins.sh ws-cleanup \u0026\u0026     /usr/local/bin/install-plugins.sh build-timeout \u0026\u0026     /usr/local/bin/install-plugins.sh credentials-binding \u0026\u0026     /usr/local/bin/install-plugins.sh job-dsl \u0026\u0026     /usr/local/bin/install-plugins.sh global-post-script \u0026\u0026     /usr/local/bin/install-plugins.sh kubernetes-cli \u0026\u0026     /usr/local/bin/install-plugins.sh google-kubernetes-engine \u0026\u0026     /usr/local/bin/install-plugins.sh jacoco \u0026\u0026     /usr/local/bin/install-plugins.sh cobertura \u0026\u0026     /usr/local/bin/install-plugins.sh kubernetes \u0026\u0026     /usr/local/bin/install-plugins.sh ldap \u0026\u0026     /usr/local/bin/install-plugins.sh jira"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Australia/Melbourne"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "apk --no-cache add tzdata curl dpkg openssl \u0026\u0026     dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \u0026\u0026     curl -fsSL \"https://github.com/tianon/gosu/releases/download/1.10/gosu-$dpkgArch\" -o /usr/local/bin/gosu \u0026\u0026     chmod +x /usr/local/bin/gosu \u0026\u0026     gosu nobody true \u0026\u0026     chmod +x /entrypoint.sh \u0026\u0026     apk del curl dpkg \u0026\u0026     rm -rf /apk /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}