{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "alpine",
      "BaseName": "openjdk:8-jdk-alpine",
      "SourceCode": "FROM openjdk:8-jdk-alpine AS alpine",
      "Platform": "",
      "As": "alpine",
      "From": {
        "Image": "openjdk:8-jdk-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo -e '@edgunity http://nl.alpinelinux.org/alpine/edge/community\\n@edge http://nl.alpinelinux.org/alpine/edge/main\\n@testing http://nl.alpinelinux.org/alpine/edge/testing\\n@community http://dl-cdn.alpinelinux.org/alpine/edge/community'  \u003e\u003e /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update --no-cache       build-base       openblas-dev       unzip       wget       cmake       libtbb@testing        libtbb-dev@testing         libjpeg        libjpeg-turbo-dev       libpng-dev       jasper-dev       tiff-dev       libwebp-dev       clang-dev       python       linux-headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CC",
              "Value": "/usr/bin/clang"
            },
            {
              "Key": "CXX",
              "Value": "/usr/bin/clang++"
            },
            {
              "Key": "OPENCV_VERSION",
              "Value": "3.4.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /opt \u0026\u0026     wget http://apache.mirror.serversaustralia.com.au//ant/binaries/apache-ant-1.10.5-bin.tar.gz -O ant.tar.gz \u0026\u0026     tar -xvzf ant.tar.gz \u0026\u0026     mv apache-ant-* ant \u0026\u0026     ln -s /opt/ant/bin/ant /usr/local/bin/ant \u0026\u0026     rm -rf ant.tar.gz \u0026\u0026     cd /opt \u0026\u0026     wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \u0026\u0026     unzip ${OPENCV_VERSION}.zip \u0026\u0026     rm -rf ${OPENCV_VERSION}.zip \u0026\u0026     mv opencv-${OPENCV_VERSION} opencv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/opencv/build \u0026\u0026     cd /opt/opencv/build \u0026\u0026     cmake     -D CMAKE_BUILD_TYPE=Release     -D CMAKE_INSTALL_PREFIX=/usr/local     -D WITH_FFMPEG=OFF     -D WITH_IPP=OFF     -D WITH_OPENEXR=OFF     -D BUILD_EXAMPLES=OFF     -D BUILD_ANDROID_EXAMPLES=OFF     -D INSTALL_PYTHON_EXAMPLES=OFF     -D BUILD_DOCS=OFF     -D BUILD_opencv_python2=OFF     -D BUILD_opencv_python3=OFF     -D BUILD_SHARED_LIBS=OFF     -D BUILD_TESTS=OFF     -D BUILD_PERF_TESTS=OFF     .. \u0026\u0026     make -j8"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "ubuntu",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04 AS ubuntu",
      "Platform": "",
      "As": "ubuntu",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026     apt install -y git unzip ant build-essential                    cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev                    python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev                    python3 python3-dev python3-numpy                    software-properties-common debconf-utils \u0026\u0026     apt install -y openjdk-8-jdk \u0026\u0026     curl -fs http://security.ubuntu.com/ubuntu/pool/main/j/jasper/libjasper1_1.900.1-debian1-2.4ubuntu1.2_amd64.deb -o /tmp/libjasper1.deb \u0026\u0026     curl -fs http://security.ubuntu.com/ubuntu/pool/main/j/jasper/libjasper-dev_1.900.1-debian1-2.4ubuntu1.2_amd64.deb -o /tmp/libjasper-dev.deb \u0026\u0026     apt install /tmp/libjasper1.deb /tmp/libjasper-dev.deb \u0026\u0026     rm -rf /tmp/* \u0026\u0026     curl -fsL https://github.com/opencv/opencv/archive/3.4.2.zip -o /tmp/opencv.zip \u0026\u0026     cd /tmp \u0026\u0026     unzip opencv.zip \u0026\u0026     mv opencv-* opencv \u0026\u0026     cd opencv \u0026\u0026     mkdir build \u0026\u0026     cd /tmp/opencv/build \u0026\u0026     cmake     -D CMAKE_BUILD_TYPE=Release     -D CMAKE_INSTALL_PREFIX=/usr/local     -D WITH_FFMPEG=OFF     -D WITH_IPP=OFF     -D WITH_OPENEXR=OFF     -D BUILD_EXAMPLES=OFF     -D BUILD_ANDROID_EXAMPLES=OFF     -D INSTALL_PYTHON_EXAMPLES=OFF     -D BUILD_DOCS=OFF     -D BUILD_opencv_python2=OFF     -D BUILD_opencv_python3=OFF     -D BUILD_SHARED_LIBS=OFF     -D BUILD_TESTS=OFF     -D BUILD_PERF_TESTS=OFF     .. \u0026\u0026     make -j8"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "CmdLine": [
            "mkdir -p /opt/opencv/ubuntu/java /opt/opencv/alpine/java"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "alpine",
          "Name": "copy",
          "SourcesAndDest": [
            "/opt/opencv/build/bin/*.jar",
            "/opt/opencv/build/lib/libopencv_java*.so",
            "/opt/opencv/alpine/java/"
          ]
        },
        {
          "Chown": "",
          "From": "ubuntu",
          "Name": "copy",
          "SourcesAndDest": [
            "/tmp/opencv/build/bin/*.jar",
            "/tmp/opencv/build/lib/libopencv_java*.so",
            "/opt/opencv/ubuntu/java/"
          ]
        }
      ]
    }
  ]
}