MetaArgs: null
Stages:
- As: alpine
  BaseName: openjdk:8-jdk-alpine
  Commands:
  - CmdLine:
    - echo -e '@edgunity http://nl.alpinelinux.org/alpine/edge/community\n@edge http://nl.alpinelinux.org/alpine/edge/main\n@testing
      http://nl.alpinelinux.org/alpine/edge/testing\n@community http://dl-cdn.alpinelinux.org/alpine/edge/community'  >>
      /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --update --no-cache       build-base       openblas-dev       unzip       wget       cmake       libtbb@testing        libtbb-dev@testing         libjpeg        libjpeg-turbo-dev       libpng-dev       jasper-dev       tiff-dev       libwebp-dev       clang-dev       python       linux-headers
    Name: run
    PrependShell: true
  - Env:
    - Key: CC
      Value: /usr/bin/clang
    - Key: CXX
      Value: /usr/bin/clang++
    - Key: OPENCV_VERSION
      Value: 3.4.6
    Name: env
  - CmdLine:
    - cd /opt &&     wget http://apache.mirror.serversaustralia.com.au//ant/binaries/apache-ant-1.10.5-bin.tar.gz
      -O ant.tar.gz &&     tar -xvzf ant.tar.gz &&     mv apache-ant-* ant &&     ln
      -s /opt/ant/bin/ant /usr/local/bin/ant &&     rm -rf ant.tar.gz &&     cd /opt
      &&     wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip &&     unzip
      ${OPENCV_VERSION}.zip &&     rm -rf ${OPENCV_VERSION}.zip &&     mv opencv-${OPENCV_VERSION}
      opencv
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/opencv/build &&     cd /opt/opencv/build &&     cmake     -D CMAKE_BUILD_TYPE=Release     -D
      CMAKE_INSTALL_PREFIX=/usr/local     -D WITH_FFMPEG=OFF     -D WITH_IPP=OFF     -D
      WITH_OPENEXR=OFF     -D BUILD_EXAMPLES=OFF     -D BUILD_ANDROID_EXAMPLES=OFF     -D
      INSTALL_PYTHON_EXAMPLES=OFF     -D BUILD_DOCS=OFF     -D BUILD_opencv_python2=OFF     -D
      BUILD_opencv_python3=OFF     -D BUILD_SHARED_LIBS=OFF     -D BUILD_TESTS=OFF     -D
      BUILD_PERF_TESTS=OFF     .. &&     make -j8
    Name: run
    PrependShell: true
  From:
    Image: openjdk:8-jdk-alpine
  Name: alpine
  Platform: ""
  SourceCode: FROM openjdk:8-jdk-alpine AS alpine
- As: ubuntu
  BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    Name: env
  - CmdLine:
    - apt update &&     apt install -y git unzip ant build-essential                    cmake
      git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev                    python-dev
      python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev                    python3
      python3-dev python3-numpy                    software-properties-common debconf-utils
      &&     apt install -y openjdk-8-jdk &&     curl -fs http://security.ubuntu.com/ubuntu/pool/main/j/jasper/libjasper1_1.900.1-debian1-2.4ubuntu1.2_amd64.deb
      -o /tmp/libjasper1.deb &&     curl -fs http://security.ubuntu.com/ubuntu/pool/main/j/jasper/libjasper-dev_1.900.1-debian1-2.4ubuntu1.2_amd64.deb
      -o /tmp/libjasper-dev.deb &&     apt install /tmp/libjasper1.deb /tmp/libjasper-dev.deb
      &&     rm -rf /tmp/* &&     curl -fsL https://github.com/opencv/opencv/archive/3.4.2.zip
      -o /tmp/opencv.zip &&     cd /tmp &&     unzip opencv.zip &&     mv opencv-*
      opencv &&     cd opencv &&     mkdir build &&     cd /tmp/opencv/build &&     cmake     -D
      CMAKE_BUILD_TYPE=Release     -D CMAKE_INSTALL_PREFIX=/usr/local     -D WITH_FFMPEG=OFF     -D
      WITH_IPP=OFF     -D WITH_OPENEXR=OFF     -D BUILD_EXAMPLES=OFF     -D BUILD_ANDROID_EXAMPLES=OFF     -D
      INSTALL_PYTHON_EXAMPLES=OFF     -D BUILD_DOCS=OFF     -D BUILD_opencv_python2=OFF     -D
      BUILD_opencv_python3=OFF     -D BUILD_SHARED_LIBS=OFF     -D BUILD_TESTS=OFF     -D
      BUILD_PERF_TESTS=OFF     .. &&     make -j8
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ubuntu
  Platform: ""
  SourceCode: FROM ubuntu:18.04 AS ubuntu
- BaseName: alpine:3.8
  Commands:
  - CmdLine:
    - mkdir -p /opt/opencv/ubuntu/java /opt/opencv/alpine/java
    Name: run
    PrependShell: true
  - Chown: ""
    From: alpine
    Name: copy
    SourcesAndDest:
    - /opt/opencv/build/bin/*.jar
    - /opt/opencv/build/lib/libopencv_java*.so
    - /opt/opencv/alpine/java/
  - Chown: ""
    From: ubuntu
    Name: copy
    SourcesAndDest:
    - /tmp/opencv/build/bin/*.jar
    - /tmp/opencv/build/lib/libopencv_java*.so
    - /opt/opencv/ubuntu/java/
  From:
    Image: alpine:3.8
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.8
