{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "jnlp",
      "BaseName": "jenkins/jnlp-slave:3.35-5",
      "SourceCode": "FROM jenkins/jnlp-slave:3.35-5 AS jnlp",
      "Platform": "",
      "As": "jnlp",
      "From": {
        "Image": "jenkins/jnlp-slave:3.35-5"
      },
      "Commands": null
    },
    {
      "Name": "helm",
      "BaseName": "alpine/helm:2.16.1",
      "SourceCode": "FROM alpine/helm:2.16.1 AS helm",
      "Platform": "",
      "As": "helm",
      "From": {
        "Image": "alpine/helm:2.16.1"
      },
      "Commands": null
    },
    {
      "Name": "",
      "BaseName": "ubuntu:18.04",
      "SourceCode": "FROM ubuntu:18.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/.composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Australia/Melbourne"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            },
            {
              "Key": "PATH",
              "Value": "$COMPOSER_HOME/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "1000:1000",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "rootfs",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "jnlp",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/share/jenkins/agent.jar",
            "/usr/share/jenkins/"
          ]
        },
        {
          "Chown": "",
          "From": "jnlp",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/jenkins-agent",
            "/usr/local/bin/jenkins-agent"
          ]
        },
        {
          "Chown": "",
          "From": "helm",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/helm",
            "/usr/local/bin/helm"
          ]
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": "3.35"
        },
        {
          "Key": "user",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "group",
          "Name": "arg",
          "Value": "jenkins"
        },
        {
          "Key": "uid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "gid",
          "Name": "arg",
          "Value": "1000"
        },
        {
          "Key": "AGENT_WORKDIR",
          "Name": "arg",
          "Value": "/home/${user}/agent"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/${user}"
            },
            {
              "Key": "AGENT_WORKDIR",
              "Value": "${AGENT_WORKDIR}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "groupadd -g ${gid} ${group} \u0026\u0026     useradd -c \"Jenkins user\" -d $HOME -u ${uid} -g ${gid} -m ${user} \u0026\u0026     mkdir /home/${user}/.jenkins \u0026\u0026 mkdir -p ${AGENT_WORKDIR} \u0026\u0026     chown -R ${user}:${group} /home/${user}/ \u0026\u0026     chmod 755 /usr/share/jenkins \u0026\u0026     chmod 644 /usr/share/jenkins/agent.jar \u0026\u0026     ln -sf /usr/share/jenkins/agent.jar /usr/share/jenkins/slave.jar \u0026\u0026     ln -s /usr/local/bin/jenkins-agent /usr/local/bin/jenkins-slave \u0026\u0026     apt-get update \u0026\u0026 apt-get upgrade -y \u0026\u0026 apt-get install -y gnupg \u0026\u0026     apt install -y openjdk-8-jdk \u0026\u0026     DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata maven \u0026\u0026     apt install -y apt-transport-https ca-certificates curl software-properties-common \u0026\u0026     curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \u0026\u0026     apt-key fingerprint 0EBFCD88 \u0026\u0026     add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \u0026\u0026     apt update \u0026\u0026 apt install -y docker-ce=18.03.1~ce~3-0~ubuntu \u0026\u0026     curl -L \"https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \u0026\u0026     chmod +x /usr/local/bin/docker-compose \u0026\u0026     curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \u0026\u0026     echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list \u0026\u0026     apt update \u0026\u0026 apt install -y kubectl \u0026\u0026     echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections \u0026\u0026     echo -e '\\n\\n' | apt install -y libmspack0 libxfont2 xfonts-encodings cabextract xfonts-utils fontconfig msttcorefonts \u0026\u0026     fc-cache -f \u0026\u0026     apt install -y libjpeg8 libtiff-dev libdc1394-22 \u0026\u0026     curl -fs http://security.ubuntu.com/ubuntu/pool/main/j/jasper/libjasper1_1.900.1-debian1-2.4ubuntu1.2_amd64.deb -o /tmp/libjasper1.deb \u0026\u0026     curl -fs http://security.ubuntu.com/ubuntu/pool/main/j/jasper/libjasper-dev_1.900.1-debian1-2.4ubuntu1.2_amd64.deb -o /tmp/libjasper-dev.deb \u0026\u0026     apt install /tmp/libjasper1.deb /tmp/libjasper-dev.deb \u0026\u0026     dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \u0026\u0026     curl -fsLo /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/1.11/gosu-$dpkgArch\" \u0026\u0026     chmod +x /usr/local/bin/gosu \u0026\u0026     gosu nobody true \u0026\u0026     chmod +x /entrypoint.sh \u0026\u0026     sed -i 's/${CLASSWORLDS_LAUNCHER} \"$@\"/${CLASSWORLDS_LAUNCHER} \"$@\" $MAVEN_OPTIONS/g' /usr/share/maven/bin/mvn \u0026\u0026     apt-get install -y tmux screen mc vim links zip php nodejs npm \u0026\u0026     mkdir -p $COMPOSER_HOME/cache \u0026\u0026     chmod 777 $COMPOSER_HOME/cache \u0026\u0026     mkdir -p $COMPOSER_HOME/vendor/bin \u0026\u0026     curl -sSL https://getcomposer.org/installer |     php -- --install-dir=$COMPOSER_HOME/vendor/bin --filename=composer \u0026\u0026     apt-get autoremove -y \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/${user}/.jenkins"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "${AGENT_WORKDIR}"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/${user}"
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}