{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-alpine",
      "SourceCode": "FROM php:7.2-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.2-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Spencer Rinehart \u003canubis@overthemonkey.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/.composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/code/bin:$COMPOSER_HOME/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup alpine \u0026\u0026 adduser -G alpine -s /bin/sh -D alpine \u0026\u0026     apk add --update --virtual mod-deps autoconf alpine-sdk             libmcrypt-dev \u0026\u0026     apk add bash git jq xmlstarlet             zip unzip             apache2-utils             coreutils             libltdl \u0026\u0026     apk add imap-dev krb5-dev openssl-dev \u0026\u0026     apk add freetype-dev             libjpeg-turbo-dev             libpng-dev             gmp-dev \u0026\u0026     docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-configure imap --with-kerberos --with-imap-ssl \u0026\u0026     docker-php-ext-configure gmp \u0026\u0026     docker-php-ext-install -j$(nproc)             mbstring             gd             zip             opcache             imap             pdo_mysql             mysqli             gmp \u0026\u0026     wget https://github.com/runkit7/runkit7/releases/download/2.0.3/runkit7-2.0.3.tgz -O /tmp/runkit.tgz \u0026\u0026     pecl install /tmp/runkit.tgz \u0026\u0026     echo -e 'extension=runkit.so\\nrunkit.internal_override=On' \u003e /usr/local/etc/php/conf.d/docker-php-ext-runkit.ini \u0026\u0026     pecl install uopz \u0026\u0026     docker-php-ext-enable uopz \u0026\u0026     echo uopz.exit=1 \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-uopz.ini \u0026\u0026     pecl install pcov \u0026\u0026     docker-php-ext-enable pcov \u0026\u0026     mv /usr/local/etc/php/conf.d/docker-php-ext-pcov.ini /usr/local/etc/php/conf.d/docker-php-ext-pcov.ini.disabled \u0026\u0026     pecl install xdebug \u0026\u0026     docker-php-ext-enable xdebug \u0026\u0026     mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.disabled \u0026\u0026     chmod +x /entrypoint.sh \u0026\u0026     chown -R alpine:alpine /usr/local/etc/php/conf.d \u0026\u0026     mkdir /code \u0026\u0026     chown alpine:alpine /code \u0026\u0026     mkdir -p $COMPOSER_HOME/cache \u0026\u0026     chmod 777 $COMPOSER_HOME/cache \u0026\u0026     mkdir -p $COMPOSER_HOME/vendor/bin \u0026\u0026     curl -sSL https://getcomposer.org/installer |     php -- --install-dir=$COMPOSER_HOME/vendor/bin --filename=composer \u0026\u0026     apk del mod-deps \u0026\u0026     rm -rf /apk /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "alpine"
        },
        {
          "Name": "workdir",
          "Path": "/code"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/.composer/cache"
          ]
        },
        {
          "CmdLine": [
            "/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "echo",
            "Please specify a command to run, e.g. composer install"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}