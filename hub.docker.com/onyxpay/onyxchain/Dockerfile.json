{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "mkdir -p /opt/OnyxChain \u0026\u0026     mkdir -p /opt/OnyxChain/cert"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/OnyxChain:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/opt/OnyxChain"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add git curl jq npm bash \u0026\u0026     npm install -g wscat"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GO111MODULE",
              "Value": "\"on\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .build-deps gcc musl-dev openssl go \u0026\u0026     wget -O go.tgz https://dl.google.com/go/go1.12.src.tar.gz  \u0026\u0026     tar -C /usr/local -xzf go.tgz \u0026\u0026     cd /usr/local/go/src/ \u0026\u0026     ./make.bash \u0026\u0026     export PATH=\"/usr/local/go/bin:$PATH\" \u0026\u0026     export GOPATH=/opt/go/  \u0026\u0026     export PATH=$PATH:$GOPATH/bin \u0026\u0026     apk del .build-deps \u0026\u0026     go get github.com/OnyxPay/OnyxChain \u0026\u0026     mv /opt/go/bin/OnyxChain /opt/OnyxChain/ \u0026\u0026     rm -rf /opt/go/ \u0026\u0026     rm -rf /usr/local/go/ \u0026\u0026     rm -r /opt/OnyxChain/go.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./checkOnyxChainHealth.sh",
            "/opt/checkOnyxChainHealth.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/checkOnyxChainHealth.sh \u0026\u0026     echo '* * * * * /opt/checkOnyxChainHealth.sh' \u003e\u003e /etc/crontabs/root"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "['crond', '-l 2', '-f']"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "[ -z \"${domain}\" ] \u0026\u0026 /opt/OnyxChain/OnyxChain -w /opt/OnyxChain/wallet.json -a ${address} -p ${password} --networkid ${ntworkid} --gasprice 500 --rest --ws || /opt/OnyxChain/OnyxChain -w /opt/OnyxChain/wallet.json -a ${address} -p ${password} --networkid ${ntworkid} --gasprice 500 --rest --ws --cert-file /etc/letsencrypt/live/${domain}/fullchain.pem --key-file /etc/letsencrypt/live/${domain}/privkey.pem"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}