{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "LC_ALL",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "Env": [
            {
              "Key": "TINI_VERSION",
              "Value": "v0.14.0"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -fy curl sudo unzip wget curl git-core  \u0026\u0026 apt -y autoremove"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "NB_USER",
          "Name": "arg",
          "Value": "\"jovyan\""
        },
        {
          "Key": "NB_UID",
          "Name": "arg",
          "Value": "\"1000\""
        },
        {
          "Key": "NB_GID",
          "Name": "arg",
          "Value": "\"100\""
        },
        {
          "CmdLine": [
            "groupadd wheel -g 11 \u0026\u0026     echo \"auth required pam_wheel.so use_uid\" \u003e\u003e /etc/pam.d/su \u0026\u0026     useradd -m -s /bin/bash -N -u $NB_UID $NB_USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /home/$NB_USER/work \u0026\u0026     mkdir /home/$NB_USER/.torch/ \u0026\u0026     mkdir /opt/conda \u0026\u0026     chown 1000:100 -R /home/$NB_USER \u0026\u0026     chown 1000:100 -R /opt/conda"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/opt/conda/bin:${PATH}"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "CmdLine": [
            "wget https://repo.continuum.io/archive/Anaconda3-2018.12-Linux-x86_64.sh -O /tmp/anaconda.sh \u0026\u0026 bash /tmp/anaconda.sh -b -p /opt/conda -f \u0026\u0026 rm /tmp/anaconda.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install pandas scikit-learn dask numba"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get install -fy qtdeclarative5-dev qml-module-qtquick-controls"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_UID"
        },
        {
          "CmdLine": [
            "conda uninstall --force jpeg libtiff -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -c conda-forge libjpeg-turbo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -c pytorch -c fastai fastai"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python -m spacy download en"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -c conda-forge feather-format"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter notebook --generate-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.NotebookApp.ip = '*'\" \u003e\u003e ~/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"c.NotebookApp.open_browser = False\" \u003e\u003e ~/.jupyter/jupyter_notebook_config.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "jupyter nbextension enable --py widgetsnbextension --sys-prefix"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/$NB_USER/work"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/$NB_USER/work"
        },
        {
          "CmdLine": [
            "/tini",
            "-g",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./start.sh",
            "/tmp/start.sh"
          ]
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "NB_USER",
              "Value": "${NB_USER}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "bash /tmp/start.sh ${NB_USER}"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}