MetaArgs: null
Stages:
- As: build
  BaseName: gcc:7.3.0
  Commands:
  - Env:
    - Key: TARGET_PLATFORM
      Value: riscv64-unknown-elf
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y \tlibgmp-dev \tlibmpfr-dev \tlibmpc-dev
      \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: BINUTILS_VERSION
      Value: 2.29.1
    Name: env
  - Name: workdir
    Path: '"/root"'
  - CmdLine:
    - wget https://ftp.gnu.org/gnu/binutils/binutils-${BINUTILS_VERSION}.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xf binutils-${BINUTILS_VERSION}.tar.xz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/root/binutils-${BINUTILS_VERSION}"'
  - CmdLine:
    - ./configure --target=${TARGET_PLATFORM} --prefix=/usr --with-sysroot=/usr/${TARGET_PLATFORM}
      --with-gnu-as --with-gnu-ld --with-system-zlib --disable-nls --enable-multilib
      --enable-ld=default --enable-gold --enable-plugins --enable-deterministic-archives
    Name: run
    PrependShell: true
  - CmdLine:
    - make
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Env:
    - Key: GCC_VERSION
      Value: 7.3.0
    Name: env
  - Env:
    - Key: ISL_VERSION
      Value: "0.18"
    Name: env
  - Env:
    - Key: NEWLIB_VERSION
      Value: 3.0.0
    Name: env
  - Name: workdir
    Path: '"/root"'
  - CmdLine:
    - wget https://gcc.gnu.org/pub/gcc/releases/gcc-${GCC_VERSION}/gcc-${GCC_VERSION}.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://isl.gforge.inria.fr/isl-${ISL_VERSION}.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://sourceware.org/pub/newlib/newlib-${NEWLIB_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - wget https://aur.archlinux.org/cgit/aur.git/plain/newlib.patch?h=riscv64-unknown-elf-gcc
      -O newlib.patch
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xf gcc-${GCC_VERSION}.tar.xz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xf isl-${ISL_VERSION}.tar.bz2
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xf newlib-${NEWLIB_VERSION}.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/root/newlib-${NEWLIB_VERSION}"'
  - CmdLine:
    - patch -Np1 -i ../newlib.patch
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/root/gcc-${GCC_VERSION}"'
  - CmdLine:
    - ln -s ../isl-${ISL_VERSION} isl
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s ../newlib-${NEWLIB_VERSION}/newlib
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s ../newlib-${NEWLIB_VERSION}/libgloss
    Name: run
    PrependShell: true
  - CmdLine:
    - echo ${GCC_VERSION} > gcc/BASE-VER
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" libiberty/configure gcc/configure
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p "/root/build"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/root/build"'
  - Env:
    - Key: CFLAGS_FOR_TARGET
      Value: '"-g -Os -ffunction-sections -fdata-sections"'
    Name: env
  - Env:
    - Key: CXXFLAGS_FOR_TARGET
      Value: '"-g -Os -ffunction-sections -fdata-sections"'
    Name: env
  - CmdLine:
    - "/root/gcc-${GCC_VERSION}/configure \t--target=${TARGET_PLATFORM} \t--prefix=/usr
      \t--with-sysroot=/usr/${TARGET_PLATFORM} \t--with-native-system-header-lib=/include
      \t--libexecdir=/usr/lib \t--enable-languages=c,c++ \t--enable-plugins \t--disable-decimal-float
      \t--disable-libffi \t--disable-libgomp \t--disable-libmudflap \t--disable-libquadmath
      \t--disable-libssp \t--disable-libstdcxx-pch \t--disable-nls \t--disable-shared
      \t--disable-threads \t--disable-tls \t--with-gnu-as \t--with-gnu-ls \t--with-system-zlib
      \t--with-newlib \t--with-headers=/usr/${TARGET_PLATFORM}/include \t--with-python-dir=share/gcc-${TARGET_PLATFORM}
      \t--with-gmp \t--with-mpfr \t--with-mpc \t--with-isl \t--with-libelf \t--enable-gnu-indirect-function
      \t--with-host-libstdcxx='-static-libgcc -Wl,-Bstatic,-lstdc++,-Bdynamic -lm'
      \t--with-pkgversion='Adept Build Container' \t--with-bugurl='https://github.com/raffitz/adept-compiler'
      \t--disable-newlib-supplied-syscalls \t--enable-newlib-reent-small \t--disable-newlib-fvwrite-in-streamio
      \t--disable-newlib-fseek-optimization \t--disable-newlib-wide-orient \t--enable-newlib-nano-malloc
      \t--disable-newlib-unbuf-stream-opt \t--enable-lite-exit \t--enable-newlib-global-atexit
      \t--enable-newlib-nano-formatted-io"
    Name: run
    PrependShell: true
  - CmdLine:
    - make INHIBIT_LIBC_CFLAGS='-DUSE_TM_CLONE_REGISTRY=0'
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /interim
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j1 DESTDIR="/interim" install
    Name: run
    PrependShell: true
  - CmdLine:
    - find "/interim/usr/lib/gcc/${TARGET_PLATFORM}/${GCC_VERSION}" "/interim/usr/${TARGET_PLATFORM}/lib"
      -type f -and \( -name \*.a -or -name \*.o \) -exec ${TARGET_PLATFORM}-objcopy
      -R .comment -R .note -R .debug_info -R .debug_aranges -R .debug_pubnames -R
      .debug_pubtypes -R .debug_abbrev -R .debug_line -R .debug_str -R .debug_ranges
      -R .debug_loc '{}' \;
    Name: run
    PrependShell: true
  - CmdLine:
    - find "/interim/usr/bin/" "/interim/usr/lib/gcc/${TARGET_PLATFORM}/${GCC_VERSION}"
      -type f -and \( -executable \) -exec strip '{}' \;
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /interim/* /
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /interim
    Name: run
    PrependShell: true
  From:
    Image: gcc:7.3.0
  Name: build
  Platform: ""
  SourceCode: FROM gcc:7.3.0 AS build
- BaseName: debian:stretch-slim
  Commands:
  - Env:
    - Key: RISCV
      Value: /usr
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y \tlibgmp10 \tlibgmpxx4ldbl \tlibmpfr4
      \tlibmpc3 \tmake \t&& rm -rf /var/lib/apt/lists/* \t&& mkdir -p \t/lib/x86_64-linux-gnu
      \t/usr/riscv64-unknown-elf \t/usr/lib/gcc/riscv64-unknown-elf"
    Name: run
    PrependShell: true
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/bin/riscv64-unknown-elf-*
    - /usr/bin/
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/lib/gcc/riscv64-unknown-elf
    - /usr/lib/gcc/riscv64-unknown-elf/
  - Chown: ""
    From: build
    Name: copy
    SourcesAndDest:
    - /usr/riscv64-unknown-elf
    - /usr/riscv64-unknown-elf/
  - CmdLine:
    - "echo \"Symlinking...\" \t&& ln -s /usr/bin/riscv64-unknown-elf-ld /usr/bin/riscv32-unknown-elf-ld
      \t&& ln -s /usr/bin/riscv64-unknown-elf-objdump /usr/bin/riscv32-unknown-elf-objdump
      \t&& ln -s /usr/bin/riscv64-unknown-elf-size /usr/bin/riscv32-unknown-elf-size
      \t&& ln -s /usr/bin/riscv64-unknown-elf-addr2line /usr/bin/riscv32-unknown-elf-addr2line
      \t&& ln -s /usr/bin/riscv64-unknown-elf-nm /usr/bin/riscv32-unknown-elf-nm \t&&
      ln -s /usr/bin/riscv64-unknown-elf-strip /usr/bin/riscv32-unknown-elf-strip
      \t&& ln -s /usr/bin/riscv64-unknown-elf-ld.bfd /usr/bin/riscv32-unknown-elf-ld.bfd
      \t&& ln -s /usr/bin/riscv64-unknown-elf-strings /usr/bin/riscv32-unknown-elf-strings
      \t&& ln -s /usr/bin/riscv64-unknown-elf-ar /usr/bin/riscv32-unknown-elf-ar \t&&
      ln -s /usr/bin/riscv64-unknown-elf-objcopy /usr/bin/riscv32-unknown-elf-objcopy
      \t&& ln -s /usr/bin/riscv64-unknown-elf-c++filt /usr/bin/riscv32-unknown-elf-c++filt
      \t&& ln -s /usr/bin/riscv64-unknown-elf-as /usr/bin/riscv32-unknown-elf-as \t&&
      ln -s /usr/bin/riscv64-unknown-elf-gprof /usr/bin/riscv32-unknown-elf-gprof
      \t&& ln -s /usr/bin/riscv64-unknown-elf-elfedit /usr/bin/riscv32-unknown-elf-elfedit
      \t&& ln -s /usr/bin/riscv64-unknown-elf-readelf /usr/bin/riscv32-unknown-elf-readelf
      \t&& ln -s /usr/bin/riscv64-unknown-elf-ranlib /usr/bin/riscv32-unknown-elf-ranlib
      \t&& ln -s /usr/bin/riscv64-unknown-elf-c++ /usr/bin/riscv32-unknown-elf-c++
      \t&& ln -s /usr/bin/riscv64-unknown-elf-cpp /usr/bin/riscv32-unknown-elf-cpp
      \t&& ln -s /usr/bin/riscv64-unknown-elf-g++ /usr/bin/riscv32-unknown-elf-g++
      \t&& ln -s /usr/bin/riscv64-unknown-elf-gcc /usr/bin/riscv32-unknown-elf-gcc
      \t&& ln -s /usr/bin/riscv64-unknown-elf-gcc-7.3.0 /usr/bin/riscv32-unknown-elf-gcc-7.3.0
      \t&& ln -s /usr/bin/riscv64-unknown-elf-gcc-ar /usr/bin/riscv32-unknown-elf-gcc-ar
      \t&& ln -s /usr/bin/riscv64-unknown-elf-gcc-nm /usr/bin/riscv32-unknown-elf-gcc-nm
      \t&& ln -s /usr/bin/riscv64-unknown-elf-gcc-ranlib /usr/bin/riscv32-unknown-elf-gcc-ranlib
      \t&& ln -s /usr/bin/riscv64-unknown-elf-gcov /usr/bin/riscv32-unknown-elf-gcov
      \t&& ln -s /usr/bin/riscv64-unknown-elf-gcov-dump /usr/bin/riscv32-unknown-elf-gcov-dump
      \t&& ln -s /usr/bin/riscv64-unknown-elf-gcov-tool /usr/bin/riscv32-unknown-elf-gcov-tool"
    Name: run
    PrependShell: true
  From:
    Image: debian:stretch-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch-slim
