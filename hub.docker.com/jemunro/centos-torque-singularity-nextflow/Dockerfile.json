{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "CmdLine": [
            "yum update -y \u0026\u0026     yum install -y --setopt=tsflags=nodocs --setopt=override_install_langs=en_US.utf8     make     openssl-devel     libxml2-devel     libarchive-devel     boost-devel     gcc     gcc-c++     git     libtool     java-1.8.0-openjdk-headless     which     wget \u0026\u0026     yum clean all -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local"
        },
        {
          "CmdLine": [
            "git clone https://github.com/adaptivecomputing/torque.git -b 5.0.0 torque"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/torque"
        },
        {
          "CmdLine": [
            "./autogen.sh \u0026\u0026     ./configure \u0026\u0026     make \u0026\u0026     make install \u0026\u0026     cp contrib/init.d/trqauthd /etc/init.d/ \u0026\u0026     cp contrib/init.d/pbs_mom /etc/init.d/pbs_mom \u0026\u0026     cp contrib/init.d/pbs_server /etc/init.d/pbs_server \u0026\u0026     cp contrib/init.d/pbs_sched /etc/init.d/pbs_sched \u0026\u0026     ldconfig \u0026\u0026     echo \"localhost\" \u003e /var/spool/torque/server_name \u0026\u0026     echo '/usr/local/lib' \u003e /etc/ld.so.conf.d/torque.conf \u0026\u0026     ldconfig"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOSTNAME",
              "Value": "localhost"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cat /etc/hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "torque.setup",
            "/usr/local/torque/torque.setup"
          ]
        },
        {
          "CmdLine": [
            "trqauthd start \u0026\u0026     ./torque.setup root localhost \u0026\u0026     pbs_mom \u0026\u0026 pbs_sched \u0026\u0026     qmgr -c \"create queue debug queue_type=execution\" \u0026\u0026     qmgr -c \"set queue debug enabled=true\" \u0026\u0026     qmgr -c \"set queue debug started=true\" \u0026\u0026     qmgr -c \"set server scheduling=True\" \u0026\u0026     qmgr -c 'set queue batch resources_default.walltime = 48:00:00' \u0026\u0026     qmgr -c 'set queue batch resources_default.nodes = 1' \u0026\u0026     qmgr -c 'set server default_queue = debug' \u0026\u0026     echo \"localhost np=1\" \u003e\u003e /var/spool/torque/server_priv/nodes \u0026\u0026     echo \"docker np=1\" \u003e\u003e /var/spool/torque/server_priv/nodes \u0026\u0026     printf \"\\$pbsserver localhost\" \u003e\u003e /var/spool/torque/mom_priv/config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisord.conf"
          ]
        },
        {
          "CmdLine": [
            "mkdir /var/log/supervisor \u0026\u0026     chmod -R 777 /var/log/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/singularity"
        },
        {
          "CmdLine": [
            "VERSION=2.6.0 \u0026\u0026     wget https://github.com/sylabs/singularity/releases/download/$VERSION/singularity-$VERSION.tar.gz \u0026\u0026     tar xvf singularity-$VERSION.tar.gz \u0026\u0026     cd singularity-$VERSION \u0026\u0026     ./configure --prefix=/usr/local \u0026\u0026     make \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/opt/nextflow"
        },
        {
          "CmdLine": [
            "VERSION=19.04.1 \u0026\u0026     wget https://github.com/nextflow-io/nextflow/releases/download/v19.04.1/nextflow-$VERSION-all \u0026\u0026     chmod +x nextflow-$VERSION-all \u0026\u0026     ln -s /opt/nextflow/nextflow-$VERSION-all /usr/local/bin/nextflow"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker_entrypoint.sh",
            "/docker_entrypoint.sh"
          ]
        },
        {
          "CmdLine": [
            "/docker_entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "10389",
            "22",
            "9618"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}