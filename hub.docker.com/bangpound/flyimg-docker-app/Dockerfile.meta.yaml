MetaArgs: null
Stages:
- BaseName: php:7.1-fpm
  Commands:
  - Maintainer: sadoknet@gmail.com
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - "apt-get -y update &&   \tapt-get -y install --no-install-recommends   \tnginx
      supervisor zip unzip\timagemagick webp libmagickwand-dev libyaml-dev \tpython3
      python3-pip python3-venv libopencv-dev python3-setuptools opencv-data     gcc
      nasm build-essential make wget vim git &&     rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install opcache
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug imagick yaml-2.0.0 &&     echo "zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20160303/xdebug.so"
      > /usr/local/etc/php/conf.d/xdebug.ini &&     echo "extension=imagick.so" >
      /usr/local/etc/php/conf.d/imagick.ini &&     echo "extension=yaml.so" > /usr/local/etc/php/conf.d/yaml.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "https://github.com/mozilla/mozjpeg/releases/download/v3.2/mozjpeg-3.2-release-source.tar.gz"
      &&     tar xvf "mozjpeg-3.2-release-source.tar.gz" &&     rm mozjpeg-3.2-release-source.tar.gz
      &&     cd mozjpeg &&     ./configure &&     make &&     make install
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /var &&     pip3 install wheel &&     pip3 install numpy &&     pip3 install
      opencv-python &&     git clone https://github.com/wavexx/facedetect.git &&     chmod
      +x /var/facedetect/facedetect &&     ln -s /var/facedetect/facedetect /usr/local/bin/facedetect
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e 's#access.log = /proc/self/fd/2#access.log = /proc/self/fd/1#g'  /usr/local/etc/php-fpm.d/docker.conf
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resources/etc/
    - /etc/
  - Name: workdir
    Path: /var/www/html
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - /usr/bin/supervisord
    Name: cmd
    PrependShell: true
  From:
    Image: php:7.1-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.1-fpm
