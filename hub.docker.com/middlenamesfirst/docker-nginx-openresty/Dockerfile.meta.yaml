MetaArgs: null
Stages:
- BaseName: alpine:3.10.2@sha256:72c42ed48c3a2db31b7dafe17d275b634664a708d901ec9fd57b1529280f01fb
  Commands:
  - Env:
    - Key: NGINX_VERSION
      Value: 1.17.5
    Name: env
  - Env:
    - Key: NJS_VERSION
      Value: 0.3.6
    Name: env
  - Env:
    - Key: NGX_DEVEL_KIT_VERSION
      Value: 0.3.1
    Name: env
  - Env:
    - Key: NGX_HTTP_LUA_MODULE_VERSION
      Value: 0.10.15
    Name: env
  - Env:
    - Key: NGX_STREAM_LUA_MODULE_VERSION
      Value: 0.0.7
    Name: env
  - Env:
    - Key: LUA_RESTY_CORE_VERSION
      Value: 0.1.17
    Name: env
  - Env:
    - Key: LUA_RESTY_LRUCACHE_VERSION
      Value: "0.09"
    Name: env
  - Env:
    - Key: LUA_CJSON_VERSION
      Value: 2.1.0.7
    Name: env
  - Env:
    - Key: LUAJIT_VERSION
      Value: 2.1-20190912
    Name: env
  - Env:
    - Key: LUAJIT_LIB
      Value: /usr/lib
    Name: env
  - Env:
    - Key: LUAJIT_INC
      Value: /usr/local/include/luajit-2.1
    Name: env
  - Env:
    - Key: LUA_INCLUDE_DIR
      Value: /usr/local/include/luajit-2.1
    Name: env
  - Env:
    - Key: LUA_NGINX_LIB_DIR
      Value: /etc/nginx/conf.d/lua
    Name: env
  - Env:
    - Key: INCDIR
      Value: -I$LUA_INCLUDE_DIR
    Name: env
  - CmdLine:
    - "GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t&& CONFIG=\"\t\t--prefix=/etc/nginx
      \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf
      \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log
      \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp
      \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp
      \t\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \t\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp
      \t\t--user=nginx \t\t--group=nginx \t\t--with-http_ssl_module \t\t--with-http_realip_module
      \t\t--with-http_addition_module \t\t--with-http_sub_module \t\t--with-http_dav_module
      \t\t--with-http_flv_module \t\t--with-http_mp4_module \t\t--with-http_gunzip_module
      \t\t--with-http_gzip_static_module \t\t--with-http_random_index_module \t\t--with-http_secure_link_module
      \t\t--with-http_stub_status_module \t\t--with-http_auth_request_module \t\t--with-http_xslt_module=dynamic
      \t\t--with-http_image_filter_module=dynamic \t\t--with-http_geoip_module=dynamic
      \t\t--with-threads \t\t--with-stream \t\t--with-stream_ssl_module \t\t--with-stream_ssl_preread_module
      \t\t--with-stream_realip_module \t\t--with-stream_geoip_module=dynamic \t\t--with-http_slice_module
      \t\t--with-mail \t\t--with-mail_ssl_module \t\t--with-compat \t\t--with-file-aio
      \t\t--with-http_v2_module \t\t--with-ld-opt=\"-Wl,-rpath,$LUAJIT_LIB\" \t\t--add-module=/usr/src/ngx_devel_kit-$NGX_DEVEL_KIT_VERSION
      \t\t--add-module=/usr/src/lua-nginx-module-$NGX_HTTP_LUA_MODULE_VERSION \t\t--add-module=/usr/src/stream-lua-nginx-module-$NGX_STREAM_LUA_MODULE_VERSION
      \t\t--add-module=/usr/src/njs-$NJS_VERSION/nginx \t\" \t&& addgroup -S nginx
      \t&& adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \t&&
      apk add --no-cache --virtual .build-deps \t\tgcc \t\tlibc-dev \t\tmake \t\topenssl-dev
      \t\tpcre-dev \t\tlinux-headers \t\tcurl \t\tgnupg1 \t\tlibxslt-dev \t\tgd-dev
      \t\tgeoip-dev \t\tgettext-dev \t&& curl -fSL https://github.com/simplresty/ngx_devel_kit/archive/v$NGX_DEVEL_KIT_VERSION.tar.gz
      -o ngx_devel_kit.tar.gz \t&& curl -fSL https://github.com/openresty/lua-nginx-module/archive/v$NGX_HTTP_LUA_MODULE_VERSION.tar.gz
      -o lua-nginx-module.tar.gz \t&& curl -fSL https://github.com/openresty/stream-lua-nginx-module/archive/v$NGX_STREAM_LUA_MODULE_VERSION.tar.gz
      -o stream-lua-nginx-module.tar.gz \t&& curl -fSL https://github.com/nginx/njs/archive/$NJS_VERSION.tar.gz
      -o njs.tar.gz \t&& curl -fSL https://github.com/openresty/lua-resty-core/archive/v$LUA_RESTY_CORE_VERSION.tar.gz
      -o lua-resty-core.tar.gz \t&& curl -fSL https://github.com/openresty/lua-resty-lrucache/archive/v$LUA_RESTY_LRUCACHE_VERSION.tar.gz
      -o lua-resty-lrucache.tar.gz \t&& curl -fSL https://github.com/openresty/lua-cjson/archive/$LUA_CJSON_VERSION.tar.gz
      -o lua-cjson.tar.gz \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz
      -o nginx.tar.gz \t&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc
      \ -o nginx.tar.gz.asc \t&& curl -fSL https://github.com/openresty/luajit2/archive/v$LUAJIT_VERSION.tar.gz
      -o luajit.tar.gz \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& found=''; \tfor
      server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80 \t\thkp://p80.pool.sks-keyservers.net:80
      \t\tpgp.mit.edu \t; do \t\techo \"Fetching GPG key $GPG_KEYS from $server\";
      \t\tgpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\"
      && found=yes && break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed
      to fetch GPG key $GPG_KEYS\" && exit 1; \tgpg --batch --verify nginx.tar.gz.asc
      nginx.tar.gz \t&& rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc \t&& mkdir -p /usr/src
      \t&& tar -zxC /usr/src -f nginx.tar.gz \t&& rm nginx.tar.gz \t&& tar -zxC /usr/src
      -f luajit.tar.gz \t&& rm luajit.tar.gz \t&& tar -zxC /usr/src -f ngx_devel_kit.tar.gz
      \t&& rm ngx_devel_kit.tar.gz \t&& tar -zxC /usr/src -f lua-nginx-module.tar.gz
      \t&& rm lua-nginx-module.tar.gz \t&& tar -zxC /usr/src -f stream-lua-nginx-module.tar.gz
      \t&& rm stream-lua-nginx-module.tar.gz \t&& tar -zxC /usr/src -f njs.tar.gz
      \t&& rm njs.tar.gz \t&& tar -zxC /usr/src -f lua-resty-core.tar.gz \t&& rm lua-resty-core.tar.gz
      \t&& tar -zxC /usr/src -f lua-resty-lrucache.tar.gz \t&& rm lua-resty-lrucache.tar.gz
      \t&& tar -zxC /usr/src -f lua-cjson.tar.gz \t&& rm lua-cjson.tar.gz \t&& cd
      /usr/src/luajit2-$LUAJIT_VERSION \t&& make -j$(getconf _NPROCESSORS_ONLN) install
      \t&& cd /usr/src/lua-cjson-$LUA_CJSON_VERSION \t&& make -j$(getconf _NPROCESSORS_ONLN)
      install \t&& cd /usr/src/nginx-$NGINX_VERSION \t&& ./configure $CONFIG --with-debug
      \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& mv objs/nginx objs/nginx-debug
      \t&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so
      \t&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so
      \t&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \t&&
      mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \t&&
      ./configure $CONFIG \t&& make -j$(getconf _NPROCESSORS_ONLN) \t&& make install
      \t&& rm -rf /etc/nginx/html/ \t&& mkdir /etc/nginx/conf.d/ \t&& mkdir -p /usr/share/nginx/html/
      \t&& install -m644 html/index.html /usr/share/nginx/html/ \t&& install -m644
      html/50x.html /usr/share/nginx/html/ \t&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug
      \t&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so
      \t&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so
      \t&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so
      \t&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t&& strip /usr/sbin/nginx*
      \t&& strip /usr/lib/nginx/modules/*.so \t&& mkdir $LUA_NGINX_LIB_DIR \t&& cp
      -r /usr/src/lua-resty-core-$LUA_RESTY_CORE_VERSION/lib $LUA_NGINX_LIB_DIR \t&&
      cp -r /usr/src/lua-resty-lrucache-$LUA_RESTY_LRUCACHE_VERSION/lib $LUA_NGINX_LIB_DIR
      \t&& rm -rf /usr/src/* \t\t&& apk add --no-cache --virtual .gettext gettext
      \t&& mv /usr/bin/envsubst /tmp/ \t\t&& runDeps=\"$( \t\tscanelf --needed --nobanner
      --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \t\t\t|
      tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1
      \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\" \t&& apk add --no-cache --virtual
      .nginx-rundeps $runDeps \t&& apk add --no-cache libgcc \t&& apk del .build-deps
      \t&& apk del .gettext \t&& mv /tmp/envsubst /usr/local/bin/ \t\t&& apk add --no-cache
      tzdata \t\t&& ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr
      /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /etc/nginx/nginx.conf
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.vh.default.conf
    - /etc/nginx/conf.d/default.conf
  - Name: expose
    Ports:
    - "80"
  - Name: stopsignal
    Signal: SIGTERM
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.10.2@sha256:72c42ed48c3a2db31b7dafe17d275b634664a708d901ec9fd57b1529280f01fb
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10.2@sha256:72c42ed48c3a2db31b7dafe17d275b634664a708d901ec9fd57b1529280f01fb
