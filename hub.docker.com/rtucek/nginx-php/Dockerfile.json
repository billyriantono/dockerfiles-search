{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "${BUILD_DATE}"
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"nginx-php Dockerfile\""
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "${VCS_REF}"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/rtucek/nginx-php\""
            },
            {
              "Key": "org.label-schema.version",
              "Value": "${VERSION}"
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.13.1"
            },
            {
              "Key": "PHP_VERSION",
              "Value": "7.1.6"
            },
            {
              "Key": "XDEBUG_VERSION",
              "Value": "2.5.4"
            },
            {
              "Key": "VERSION",
              "Value": "${VERSION}"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint",
            "fix-permission",
            "nginx.conf",
            "Procfile",
            "/tmp/build/scripts/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 \tapt-get install -y --no-install-recommends \t\tautoconf \t\tbuild-essential \t\tcurl \t\tlibpcre3-dev \t\tlibssl-dev \t\tbison \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibpng12-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibxml2-dev \t\tlibxslt1-dev \t\tpkg-config \t\tre2c \t\tgit \t\tpython \t\tpython-pip \t\tpython-pkg-resources \t\tcron \u0026\u0026 \tpip install honcho \u0026\u0026 \tmkdir -p /tmp/build \u0026\u0026 \tmkdir -p /tmp/build/nginx/ \u0026\u0026 \tcd /tmp/build/nginx \u0026\u0026 \tcurl -SLO https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \u0026\u0026 \tcd /tmp/build/nginx \u0026\u0026 \tgpg --keyserver sks-keyservers.net --recv-keys \t\t\"6550 6C02 EFC2 50F1 B7A3  D694 ECF0 E90B 2C17 2083\" \t\t\"4C2C 85E7 05DC 7308 3399  0C38 A937 6139 A524 C53E\" \t\t\"B0F4 2533 73F8 F6F5 10D4  2178 520A 9993 A1C0 52F8\" \t\t\"7338 9730 69ED 3F44 3F4D  37DF A64F D5B1 7ADB 39A8\" \t\t\"A09C D539 B8BB 8CBE 96E8  2BDF ABD4 D3B3 F580 6B4D\" \t\t\"573B FD6B 3D8F BC64 1079  A6AB ABF5 BD82 7BD9 BF62\" \u0026\u0026 \tcurl -SLO https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz.asc \u0026\u0026 \tgpg nginx-${NGINX_VERSION}.tar.gz.asc \u0026\u0026 \tcd /tmp/build/nginx \u0026\u0026 \ttar -xvzf nginx-${NGINX_VERSION}.tar.gz \u0026\u0026 \tcd /tmp/build/nginx/nginx-${NGINX_VERSION} \u0026\u0026 \t./configure \t\t--group=www-data \t\t--user=www-data \t\t--with-file-aio \t\t--with-http_gunzip_module \t\t--with-http_gzip_static_module \t\t--with-http_realip_module \t\t--with-http_ssl_module \t\t--with-http_v2_module \t\t--with-pcre \t\t--with-threads \u0026\u0026 \tcd /tmp/build/nginx/nginx-${NGINX_VERSION} \u0026\u0026 \tmake -j$(nproc) build \u0026\u0026 \tmake modules \u0026\u0026 \tmake install \u0026\u0026 \tmv /tmp/build/scripts/nginx.conf /usr/local/nginx/conf/ \u0026\u0026 \tmkdir -p /tmp/build/php/ \u0026\u0026 \tcd /tmp/build/php \u0026\u0026 \tcurl -SLo php-${PHP_VERSION}.tar.gz http://ch1.php.net/get/php-${PHP_VERSION}.tar.gz/from/this/mirror \u0026\u0026 \tcd /tmp/build/php/ \u0026\u0026 \tgpg --keyserver sks-keyservers.net --recv-keys \t\t\"A917 B1EC DA84 AEC2 B568 FED6 F50A BC80 7BD5 DCD0\" \t\t\"5289 95BF EDFB A719 1D46 839E F9BA 0ADA 31CB D89E\" \u0026\u0026 \tcurl -SLo php-${PHP_VERSION}.tar.gz.asc http://ch1.php.net/get/php-${PHP_VERSION}.tar.gz.asc/from/this/mirror \u0026\u0026 \tgpg php-${PHP_VERSION}.tar.gz.asc \u0026\u0026 \tcd /tmp/build/php \u0026\u0026 \ttar -xvzf php-${PHP_VERSION}.tar.gz \u0026\u0026 \tcd /tmp/build/php/php-${PHP_VERSION} \u0026\u0026 \t./configure \t\t--enable-fpm \t\t--enable-mbregex \t\t--enable-mbstring=all \t\t--enable-opcache \t\t--enable-sockets \t\t--enable-zip \t\t--with-bz2 \t\t--with-curl \t\t--with-fpm-group=www-data \t\t--with-fpm-user=www-data \t\t--with-gd \t\t--with-gettext \t\t--with-openssl \t\t--with-pcre-regex \t\t--with-pdo-mysql \t\t--with-pdo-pgsql \t\t--with-readline \t\t--with-xsl \t\t--with-zlib \u0026\u0026 \tcd /tmp/build/php/php-${PHP_VERSION} \u0026\u0026 \tmake -j$(nproc) build \u0026\u0026 \tmake install \u0026\u0026 \tmkdir -p /tmp/build/xdebug \u0026\u0026 \tcd /tmp/build/xdebug \u0026\u0026 \tcurl -SLO \t\t\"https://github.com/xdebug/xdebug/archive/XDEBUG_\"$(echo ${XDEBUG_VERSION} | sed \"s/\\./_/g\")\".tar.gz\" \u0026\u0026 \ttar -xvzf \"XDEBUG_\"$(echo ${XDEBUG_VERSION} | sed \"s/\\./_/g\")\".tar.gz\" \u0026\u0026 \tcd \"xdebug-XDEBUG_\"$(echo ${XDEBUG_VERSION} | sed \"s/\\./_/g\") \u0026\u0026 \tphpize \u0026\u0026 \t./configure \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \tchown -R www-data:www-data /usr/local/nginx/html \u0026\u0026 \tln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/ \u0026\u0026 \tcp /tmp/build/php/php-${PHP_VERSION}/sapi/fpm/php-fpm.conf /usr/local/etc/php-fpm.conf \u0026\u0026 \tcp /tmp/build/php/php-${PHP_VERSION}/sapi/fpm/www.conf /usr/local/etc/www.conf \u0026\u0026 \tcp /tmp/build/php/php-${PHP_VERSION}/php.ini-development /usr/local/php/php.ini \u0026\u0026 \tsed -Ei \t\t-e 's/^;?\\s*daemonize\\s*=\\s*yes/daemonize = no/' \t\t-e 's/^;?\\s*include=NONE\\/etc\\/php-fpm.d\\/\\*.conf/include=\\/usr\\/local\\/etc\\/www.conf/' \t\t/usr/local/etc/php-fpm.conf \u0026\u0026 \tsed -Ei \t\t-e 's/^;?\\s*listen\\s*=.*/listen = \\/var\\/run\\/php-fpm.sock/' \t\t-e 's/^;?\\s*?\\s*listen.owner\\s*=.*/listen.owner = www-data/' \t\t-e 's/^;?\\s*?\\s*listen.group\\s*=.*/listen.group = www-data/' \t\t-e 's/^;?\\s*?\\s*listen.mode\\s*=.*/listen.mode = 0660/' \t\t/usr/local/etc/www.conf \u0026\u0026 \tsed -Ei \t\t-e 's/^;?\\s*expose_php\\s*=.*/expose_php = Off/' \t\t-e 's/^;?\\s*cgi.fix_pathinfo\\s*=.*/cgi.fix_pathinfo=0/' \t\t-e 's/^;?\\s*error_log\\s*=.*/error_log = \\/usr\\/local\\/nginx\\/logs\\/error-php.log/' \t\t-e 's/^;?\\s*date.timezone\\s*=.*/date.timezone = \\\"UTC\\\"/' \t\t-e 's/^;?\\s*opcache.enable\\s*=.*/opcache.enable = 1/' \t\t-e 's/^;?\\s*opcache.enable_cli\\s*=.*/opcache.enable_cli=1/' \t\t-e 's/^;?\\s*opcache.memory_consumption\\s*=.*/opcache.memory_consumption = 256/' \t\t-e 's/^;?\\s*opcache.max_accelerated_files\\s=.*/opcache.max_accelerated_files = 10000/' \t\t/usr/local/php/php.ini \u0026\u0026 \tphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \u0026\u0026 \tphp -r \"if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \u0026\u0026 \tphp composer-setup.php --install-dir=/usr/local/bin --filename=composer \u0026\u0026 \tphp -r \"unlink('composer-setup.php');\" \u0026\u0026 \tmv /tmp/build/scripts/Procfile / \u0026\u0026 \tmv /tmp/build/scripts/docker-entrypoint / \u0026\u0026 \tchmod +x /docker-entrypoint \u0026\u0026 \tmv /tmp/build/scripts/fix-permission / \u0026\u0026 \tchmod +x /fix-permission \u0026\u0026 \tapt-get remove -y \t\tautoconf \t\tbison \t\tbuild-essential \t\tcurl \t\tpkg-config \t\tpython-pip \t\tre2c \u0026\u0026 \tapt-get autoremove -y \u0026\u0026 \trm -rf /var/lib/apt/lists/* \u0026\u0026 \trm -rf /tmp/build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/docker-entrypoint"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "server"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "\"/usr/local/nginx/html\""
        },
        {
          "Name": "expose",
          "Ports": [
            "443/tcp",
            "80/tcp"
          ]
        }
      ]
    }
  ]
}