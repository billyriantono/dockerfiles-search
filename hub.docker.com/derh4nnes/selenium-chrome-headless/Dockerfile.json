{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stable-slim",
      "SourceCode": "FROM debian:stable-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stable-slim"
      },
      "Commands": [
        {
          "Maintainer": "Suriya Soutmun \u003csuriya@odd.works\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "DEBIAN_FRONTEND",
          "Name": "arg",
          "Value": "noninteractive"
        },
        {
          "CmdLine": [
            "apt-get update -qqy   \u0026\u0026 apt-get -qqy install        libgconf2-4 wget curl        ca-certificates apt-transport-https        ttf-wqy-zenhei        fonts-thai-tlwg-ttf        sudo   \u0026\u0026 apt-get -qqy install gnupg --no-install-recommends   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CHROME_VERSION",
          "Name": "arg",
          "Value": "\"google-chrome-stable\""
        },
        {
          "CmdLine": [
            "wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install ${CHROME_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "useradd headless --shell /bin/bash --create-home   \u0026\u0026 usermod -a -G sudo headless   \u0026\u0026 echo 'ALL ALL = (ALL) NOPASSWD: ALL' \u003e\u003e /etc/sudoers   \u0026\u0026 echo 'headless:nopassword' | chpasswd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/share/man/man1   \u0026\u0026 echo \"deb http://http.debian.net/debian jessie-backports main\" \u003e\u003e /etc/apt/sources.list.d/jessie-backports.list   \u0026\u0026 apt-get update -qqy   \u0026\u0026 apt-get -qqy --no-install-recommends install     -t jessie-backports openjdk-8-jre-headless     unzip     wget   \u0026\u0026 rm -rf /var/lib/apt/lists/* /var/cache/apt/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/selenium   \u0026\u0026 wget --no-verbose http://selenium-release.storage.googleapis.com/3.14/selenium-server-standalone-3.14.0.jar     -O /opt/selenium/selenium-server-standalone.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "CHROME_DRIVER_VERSION",
          "Name": "arg",
          "Value": "2.41"
        },
        {
          "CmdLine": [
            "wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip   \u0026\u0026 rm -rf /opt/selenium/chromedriver   \u0026\u0026 unzip /tmp/chromedriver_linux64.zip -d /opt/selenium   \u0026\u0026 rm /tmp/chromedriver_linux64.zip   \u0026\u0026 mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION   \u0026\u0026 chmod 755 /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION   \u0026\u0026 ln -fs /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION /usr/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "NODE_MAX_INSTANCES",
              "Value": "5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_MAX_SESSION",
              "Value": "5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_REGISTER_CYCLE",
              "Value": "5000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_POLLING",
              "Value": "5000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_UNREGISTER_IF_STILL_DOWN_AFTER",
              "Value": "60000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_DOWN_POLLING_LIMIT",
              "Value": "2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_APPLICATION_NAME",
              "Value": "\"drs_robot\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "generate_config",
            "/opt/selenium/generate_config"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /opt/selenium/generate_config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/selenium/generate_config \u003e /opt/selenium/config.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R headless:headless /opt/selenium"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "headless"
        },
        {
          "Env": [
            {
              "Key": "DBUS_SESSION_BUS_ADDRESS",
              "Value": "/dev/null"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "java",
            "-jar",
            "/opt/selenium/selenium-server-standalone.jar"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "4444"
          ]
        }
      ]
    }
  ]
}