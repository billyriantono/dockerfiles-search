{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jenkins:latest",
      "SourceCode": "FROM jenkins:latest",
      "Platform": "",
      "From": {
        "Image": "jenkins:latest"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/*.xml",
            "$JENKINS_HOME/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/executors.groovy",
            "/usr/share/jenkins/ref/init.groovy.d/executors.groovy"
          ]
        },
        {
          "CmdLine": [
            "/usr/local/bin/install-plugins.sh     ant     ansible     gradle     xunit     workflow-aggregator     docker-workflow     build-timeout     credentials-binding     ssh-agent     ssh-slaves     timestamper     ws-cleanup     email-ext     github-organization-folder     purge-job-history     simple-theme-plugin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update -qq \u0026\u0026     DEBIAN_FRONTEND=noninteractive     apt-get install -qqy apt-transport-https ca-certificates \u0026\u0026     apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80         --recv-keys 58118E89F3A912897C070ADBF76221572C52609D \u0026\u0026     echo deb https://apt.dockerproject.org/repo debian-jessie main \u003e /etc/apt/sources.list.d/docker.list \u0026\u0026     apt-get update -qq \u0026\u0026     apt-get install -qqy docker-engine \u0026\u0026     usermod -aG docker jenkins \u0026\u0026     chown -R jenkins:jenkins $JENKINS_HOME/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_HOME",
              "Value": "/opt/ansible"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "DEBIAN_FRONTEND=noninteractive     apt-get install --no-install-recommends -qqy         build-essential         python-pip python-dev python-yaml         libffi-dev libssl-dev         libxml2-dev libxslt1-dev zlib1g-dev \u0026\u0026     pip install --upgrade wheel setuptools \u0026\u0026     pip install --upgrade pyyaml jinja2 pycrypto \u0026\u0026     git clone git://github.com/ansible/ansible.git --recursive \u0026\u0026     cd ansible \u0026\u0026     bash -c 'source ./hacking/env-setup' \u0026\u0026     mkdir -p $ANSIBLE_HOME \u0026\u0026     mv /ansible/bin $ANSIBLE_HOME/bin \u0026\u0026     mv /ansible/lib $ANSIBLE_HOME/lib \u0026\u0026     mv /ansible/docs $ANSIBLE_HOME/docs \u0026\u0026     rm -rf /ansible \u0026\u0026     apt-get install -qqy sshpass openssh-client \u0026\u0026     apt-get remove -y --auto-remove build-essential python-pip python-dev libffi-dev libssl-dev \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     mkdir -p /etc/ansible \u0026\u0026     echo 'localhost' \u003e /etc/ansible/hosts \u0026\u0026     chown -R jenkins:jenkins $ANSIBLE_HOME/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Env": [
            {
              "Key": "ANSIBLE_HOME",
              "Value": "/opt/ansible"
            },
            {
              "Key": "PATH",
              "Value": "$ANSIBLE_HOME/bin:$PATH"
            },
            {
              "Key": "PYTHONPATH",
              "Value": "$ANSIBLE_HOME/lib:$PYTHONPATH"
            },
            {
              "Key": "MANPATH",
              "Value": "$ANSIBLE_HOME/docs/man:$MANPATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/jenkins_home",
            "/var/run/docker.sock",
            "/etc/ansible"
          ]
        }
      ]
    }
  ]
}