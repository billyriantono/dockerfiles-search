MetaArgs: null
Stages:
- BaseName: alpine:3.5
  Commands:
  - CmdLine:
    - apk add --no-cache ca-certificates
    Name: run
    PrependShell: true
  - Env:
    - Key: GOLANG_VERSION
      Value: "1.8"
    Name: env
  - Env:
    - Key: GOLANG_SRC_URL
      Value: https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz
    Name: env
  - Env:
    - Key: GOLANG_SRC_SHA256
      Value: 406865f587b44be7092f206d73fc1de252600b79b3cacc587b74b5ef5c623596
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - no-pic.patch
    - /
  - CmdLine:
    - set -ex     && apk add --no-cache --virtual .build-deps         bash         gcc         musl-dev         openssl         go         git         &&
      export GOROOT_BOOTSTRAP="$(go env GOROOT)"         && wget -q "$GOLANG_SRC_URL"
      -O golang.tar.gz     && echo "$GOLANG_SRC_SHA256  golang.tar.gz" | sha256sum
      -c -     && tar -C /usr/local -xzf golang.tar.gz     && rm golang.tar.gz     &&
      cd /usr/local/go/src     && patch -p2 -i /no-pic.patch     && ./make.bash         &&
      rm -rf /*.patch     && export GOPATH=/go     && export PATH=$GOPATH/bin:/usr/local/go/bin:$PATH     &&
      mkdir -p $GOPATH/src/github.com/yaproxy/ && cd $GOPATH/src/github.com/yaproxy/     &&
      git clone https://github.com/yaproxy/yap.git && cd yap     && export CGO_ENABLED=0
      && go get ./...     && go build -o /usr/local/bin/yap cli/main.go     && cp
      yap.toml /     && cd / && rm -rf /go /usr/local/go     && apk del .build-deps
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "443"
    - "8088"
  - CmdLine:
    - /usr/local/bin/yap
    - /yap.toml
    Name: cmd
    PrependShell: false
  From:
    Image: alpine:3.5
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.5
