MetaArgs: null
Stages:
- BaseName: jenkins/jenkins:lts
  Commands:
  - Labels:
    - Key: MAINTAINER
      Value: '"Stephen Steiner <ssteiner@juniper.net>"'
    Name: label
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: JAVA_OPTS
      Value: '''-Djenkins.install.runSetupWizard=false -Dhudson.model.DirectoryBrowserSupport.CSP=allow-same-origin
        -Djavax.net.ssl.trustStore=$JENKINS_HOME/.keystore/cacerts -Djavax.net.ssl.trustStorePassword=changeit'''
    Name: env
  - Env:
    - Key: JENKINS_USER
      Value: admin
    Name: env
  - Env:
    - Key: JENKINS_PASS
      Value: admin
    Name: env
  - Env:
    - Key: CUSTOM_KEYSTORE
      Value: $JENKINS_HOME/.keystore/
    Name: env
  - Name: user
    User: root
  - Name: workdir
    Path: /var/tmp
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /var/tmp/requirements.txt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - install-plugins.sh
    - /usr/local/bin/install-plugins.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugins.txt
    - /usr/share/jenkins/ref/plugins.txt
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - basic-security.groovy
    - /var/jenkins_home/init.groovy.d/
  - CmdLine:
    - apt-get update -qq &&     apt-get install -yqq apt-utils git-core maven openjdk-8-jdk
      curl libssl-dev build-essential libssl-dev libffi-dev python3-dev         sshpass
      &&     apt-get clean &&     apt-get autoremove -y  &&     rm -rf /var/cache/apt/*
    Name: run
    PrependShell: true
  - CmdLine:
    - ( curl https://bootstrap.pypa.io/get-pip.py | python3 ) &&     ( curl -fsSL
      get.docker.com | bash ) &&     pip3 install -r requirements.txt &&     rm -rf
      /var/tmp/requirements.txt &&     usermod -aG docker jenkins
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/local/bin/install-plugins.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - xargs /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /var/run/docker.sock && chmod 777 /var/run/docker.sock
    Name: run
    PrependShell: true
  - Name: user
    User: jenkins
  - CmdLine:
    - mkdir -p $CUSTOM_KEYSTORE &&     cp $JAVA_HOME/jre/lib/security/cacerts $CUSTOM_KEYSTORE
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $CUSTOM_KEYSTORE/cacerts
  - Name: volume
    Volumes:
    - /usr/share/jenkins/ref/plugins
  - Name: volume
    Volumes:
    - /var/jenkins_home
  - Name: workdir
    Path: $JENKINS_HOME
  - Health:
      Interval: 60000000000
      Test:
      - CMD-SHELL
      - curl -s -w "%{http_code}" http://localhost:8080 -o /dev/null || exit 1
      Timeout: 3000000000
    Name: healthcheck
  From:
    Image: jenkins/jenkins:lts
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins/jenkins:lts
