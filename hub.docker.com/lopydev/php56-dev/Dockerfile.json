{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:5.6-fpm",
      "SourceCode": "FROM php:5.6-fpm",
      "Platform": "",
      "From": {
        "Image": "php:5.6-fpm"
      },
      "Commands": [
        {
          "Maintainer": "zengyu 284141050@qq.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "FPM_HOST",
              "Value": "127.0.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FPM_PORT",
              "Value": "9000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_REMOTE_HOST",
              "Value": "172.17.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_REMOTE_PORT",
              "Value": "19001"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "XDEBUG_IDE_KEY",
              "Value": "PHPSTORM"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data \u0026\u0026  usermod -G staff www-data \u0026\u0026 usermod --shell /bin/bash www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install -j$(nproc) pdo_mysql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         libfreetype6-dev         git         libjpeg62-turbo-dev         libpng-dev         zip         sudo         procps         inetutils-ping     \u0026\u0026 docker-php-ext-install -j$(nproc) iconv     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd     \u0026\u0026 docker-php-ext-install zip     \u0026\u0026 echo \"debian  ALL=(ALL) NOPASSWD:ALL\" \u003e\u003e /etc/sudoers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "extension",
            "/tmp/extension"
          ]
        },
        {
          "CmdLine": [
            "php /tmp/extension/ExtInstaller.php -n xdebug     \u0026\u0026 php /tmp/extension/ExtInstaller.php -n swoole     \u0026\u0026 rm -rf /tmp/extension"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp     \u0026\u0026 curl https://nodejs.org/dist/v10.16.3/node-v10.16.3-linux-x64.tar.xz -o node.tar.xz     \u0026\u0026 xz -d node.tar.xz     \u0026\u0026 tar -xvf node.tar \u0026\u0026 rm -rf node.tar     \u0026\u0026 mv node-v10.16.3-linux-x64/ /usr/local/node     \u0026\u0026 export PATH=\\$PATH:/usr/local/node/bin/     \u0026\u0026 npm -g install bower gulp webpack     \u0026\u0026 npm cache clean -f"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/local/bin     \u0026\u0026 curl -sS https://getcomposer.org/installer | php     \u0026\u0026 echo \"export PATH=\\$PATH:/root/.composer/vendor/bin:/usr/local/node/bin/\" \u003e\u003e /root/.bashrc     \u0026\u0026 echo \"export PATH=\\$PATH:/root/.composer/vendor/bin:/usr/local/node/bin/\" \u003e\u003e /root/.profile     \u0026\u0026 echo \"export PATH=\\$PATH:/root/.composer/vendor/bin:/usr/local/node/bin/\" \u003e\u003e /etc/profile     \u0026\u0026 export PATH=\\$PATH:/root/.composer/vendor/bin:/usr/local/node/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}