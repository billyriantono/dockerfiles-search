{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "centos:7",
      "SourceCode": "FROM centos:7",
      "Platform": "",
      "From": {
        "Image": "centos:7"
      },
      "Commands": [
        {
          "Maintainer": "nginx-php",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "phpV",
              "Value": "php55"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yum install -y wget epel-release \u0026\u0026     wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo \u0026\u0026     wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo \u0026\u0026     rpm -Uvh https://mirrors.tuna.tsinghua.edu.cn/remi/enterprise/remi-release-7.rpm \u0026\u0026     rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm \u0026\u0026     rpm -Uvh https://repo.mysql.com/mysql57-community-release-el7-11.noarch.rpm \u0026\u0026     rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-* \u0026\u0026     yum install -y iproute net-tools inotify-tools which jq rsync \u0026\u0026     yum install -y openssh-clients mysql-community-client ImageMagick zbar \u0026\u0026     yum -y install supervisor \u0026\u0026     echo \"files = /etc/supervisord.conf.d/*.conf /data/conf/supervisord.conf.d/*.conf\" \u003e\u003e /etc/supervisord.conf \u0026\u0026     yum install -y nginx  \u0026\u0026     groupmod --gid 80 --new-name www nginx \u0026\u0026     usermod --uid 80 --home /data/www --gid 80 --login www --shell /sbin/nologin --comment www nginx \u0026\u0026     echo 'nginx installed.' \u0026\u0026 nginx -v \u0026\u0026     yum install -y     ${phpV}-php     ${phpV}-php-bcmath     ${phpV}-php-cli     ${phpV}-php-common     ${phpV}-php-devel     ${phpV}-php-fpm     ${phpV}-php-gd     ${phpV}-php-gmp     ${phpV}-php-intl     ${phpV}-php-json     ${phpV}-php-mbstring     ${phpV}-php-mcrypt     ${phpV}-php-mysqlnd     ${phpV}-php-opcache     ${phpV}-php-pdo     ${phpV}-php-pear     ${phpV}-php-process     ${phpV}-php-pspell     ${phpV}-php-xml     ${phpV}-php-pecl-imagick     ${phpV}-php-pecl-mysql     ${phpV}-php-pecl-uploadprogress     ${phpV}-php-pecl-uuid     ${phpV}-php-pecl-zip     ${phpV}-php-pecl-redis4     ${phpV}-php-pecl-memcache     ${phpV}-php-phalcon3     ${phpV}-php-pecl-swoole2 \u0026\u0026     ln -sfF /opt/remi/${phpV}/enable /etc/profile.d/${phpV}-paths.sh \u0026\u0026     ln -sfF /opt/remi/${phpV}/root/usr/bin/{pear,pecl,phar,php,php-cgi,php-config,phpize} /usr/local/bin/. \u0026\u0026     mv -f /opt/remi/${phpV}/root/etc/php.ini /etc/php.ini \u0026\u0026 ln -s /etc/php.ini /opt/remi/${phpV}/root/etc/php.ini \u0026\u0026     rm -rf /etc/php.d \u0026\u0026 mv /opt/remi/${phpV}/root/etc/php.d /etc/. \u0026\u0026 ln -s /etc/php.d /opt/remi/${phpV}/root/etc/php.d \u0026\u0026     mkdir -p /data/conf \u0026\u0026 touch php.ini \u0026\u0026 ln -s /data/conf/php.ini /etc/php.d/zz.php.ini \u0026\u0026     echo 'PHP installed.' \u0026\u0026 php --version \u0026\u0026     wget https://getcomposer.org/composer.phar -O /usr/local/bin/composer \u0026\u0026     chmod a+x /usr/local/bin/composer \u0026\u0026     echo 'composer installed.' \u0026\u0026 composer --version \u0026\u0026     composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/ \u0026\u0026     yum clean all \u0026\u0026 rm -rf /tmp/yum*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "container-files",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Asia/Shanghai"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \u0026\u0026 echo $TZ \u003e /etc/timezone \u0026\u0026     chmod +x /docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80",
            "9000"
          ]
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord -n -c /etc/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}