{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "andriyg/python2.7:bionic-nonginx",
      "SourceCode": "FROM andriyg/python2.7:bionic-nonginx",
      "Platform": "",
      "From": {
        "Image": "andriyg/python2.7:bionic-nonginx"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "certs/*",
            "/usr/local/share/ca-certificates/"
          ]
        },
        {
          "CmdLine": [
            "update-ca-certificates \u0026\u0026   apt update \u0026\u0026 apt upgrade -y \u0026\u0026 apt install rsync -y \u0026\u0026   rm -rf /var/lib/apt/lists/ \u0026\u0026   groupadd  korg -g 1000 \u0026\u0026 adduser --ingroup korg --uid=1001 korg \u0026\u0026   true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "requirements.txt",
            "requirements2.txt",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "pip install -U -r /tmp/requirements.txt \u0026\u0026   pip install -U -r /tmp/requirements2.txt \u0026\u0026   true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/",
            "/korg/src/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "templates/",
            "/korg/templates/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "media/",
            "/korg/media_orig/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/korg/"
          ]
        },
        {
          "CmdLine": [
            "find /korg/src -type f -name '*.pyc' | xargs rm -vf \u0026\u0026     mkdir -p /korg/static /korg/media \u0026\u0026     chown -Rf root:korg /korg/src/ /korg/templates/ /korg/media_orig/ /korg/docker-entrypoint.sh \u0026\u0026     chown -v korg:korg /korg/static /korg/media \u0026\u0026     true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/korg/static"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/korg/media"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/korg/src/"
        },
        {
          "Name": "user",
          "User": "korg"
        },
        {
          "CmdLine": [
            "/korg/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}