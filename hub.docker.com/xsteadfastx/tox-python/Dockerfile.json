{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "base",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial as base",
      "Platform": "",
      "As": "base",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PY_VERSIONS",
              "Value": "\"3.8-dev 3.7.3 3.6.8 3.5.6 3.4.8 3.3.7 3.2.6 3.1.5 3.0.1 2.7.15 2.6.9 2.5.6 2.4.6 pypy3.6-7.1.1 pypy2.7-7.1.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER_ID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GROUP_ID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/tox"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYENV_ROOT",
              "Value": "$HOME/.pyenv"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex  \u0026\u0026 apt-get update  \u0026\u0026 apt-get upgrade -y  \u0026\u0026 apt-get install -y         sudo  \u0026\u0026 rm -rf /var/lib/apt/lists/*  \u0026\u0026 groupadd --gid \"$GROUP_ID\" tox  \u0026\u0026 useradd --gid \"$GROUP_ID\" --uid \"$USER_ID\" --create-home --home-dir /home/tox tox  \u0026\u0026 echo 'tox ALL=(ALL) NOPASSWD: ALL' \u003e /etc/sudoers.d/tox  \u0026\u0026 chmod 0440 /etc/sudoers.d/tox"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "builder",
      "BaseName": "base",
      "SourceCode": "FROM base as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Name": "user",
          "User": "tox"
        },
        {
          "CmdLine": [
            "set -ex  \u0026\u0026 sudo apt-get update  \u0026\u0026 sudo apt-get install -y         build-essential         ca-certificates         curl         git         libbz2-dev         libncurses5-dev         libreadline-dev         libsqlite3-dev         libssl-dev         llvm         make         tk-dev         wget         xz-utils         zlib1g-dev  \u0026\u0026 git clone https://github.com/yyuu/pyenv.git ~/.pyenv  \u0026\u0026 for i in $PY_VERSIONS; do ~/.pyenv/bin/pyenv install $i; done  \u0026\u0026 ~/.pyenv/bin/pyenv global $PY_VERSIONS  \u0026\u0026 ~/.pyenv/bin/pyenv rehash  \u0026\u0026 ~/.pyenv/shims/python3.7 -m pip install tox  \u0026\u0026 ~/.pyenv/shims/python3.7 -m pip install poetry  \u0026\u0026 ~/.pyenv/bin/pyenv rehash"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "base",
      "SourceCode": "FROM base",
      "Platform": "",
      "From": {
        "Stage": {
          "Named": "base",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Chown": "tox:tox",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/home/tox/.pyenv",
            "/home/tox/.pyenv"
          ]
        },
        {
          "CmdLine": [
            "set -ex  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y         bash         expat         git         bzip2         libffi6         libsqlite3-0         libssl1.0.0  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "tox"
        }
      ]
    }
  ]
}