{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest AS builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "TS3_VERSION",
              "Value": "3.10.2"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/ts3"
        },
        {
          "CmdLine": [
            "wget https://files.teamspeak-services.com/releases/server/${TS3_VERSION}/teamspeak3-server_linux_amd64-${TS3_VERSION}.tar.bz2 -O server.tar.bz2 \u0026\u0026     tar xjf server.tar.bz2 \u0026\u0026     rm server.tar.bz2 \u0026\u0026     mv teamspeak3-server_linux_amd64/* ./ \u0026\u0026     rm -r teamspeak3-server_linux_amd64 \u0026\u0026     rm -f libts3db_mariadb.so \u0026\u0026     rm -rf doc \u0026\u0026     rm -f LICENSE \u0026\u0026     rm -f CHANGELOG \u0026\u0026     rm -rf tsdns \u0026\u0026     rm -f ts3server_startscript.sh \u0026\u0026     rm -rf redist \u0026\u0026     rm -rf serverquerydocs"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "debian:stable-slim",
      "SourceCode": "FROM debian:stable-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stable-slim"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/ts3"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y ca-certificates \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/ts3",
            "/ts3/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ts3server.ini",
            "start.sh",
            "./"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "9987/udp"
          ]
        },
        {
          "Env": [
            {
              "Key": "DATA_VOLUME",
              "Value": "/data"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "addgroup ts3 \u0026\u0026     adduser --disabled-password --ingroup ts3 --home /ts3 --shell /bin/false ts3 \u0026\u0026     chown -R ts3:ts3 ./ \u0026\u0026     ls -la \u0026\u0026     mkdir -p ${DATA_VOLUME} \u0026\u0026     chown ts3:ts3 ${DATA_VOLUME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "ts3"
        },
        {
          "Name": "volume",
          "Volumes": [
            "${DATA_VOLUME}"
          ]
        },
        {
          "CmdLine": [
            "./start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}