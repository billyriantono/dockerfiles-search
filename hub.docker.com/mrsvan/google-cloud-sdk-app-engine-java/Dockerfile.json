{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8-jdk-alpine",
      "SourceCode": "FROM openjdk:8-jdk-alpine",
      "Platform": "",
      "From": {
        "Image": "openjdk:8-jdk-alpine"
      },
      "Commands": [
        {
          "Maintainer": "Stefaan Vanderheyden \u003csvd@nuuvo.mobi\u003e",
          "Name": "maintainer"
        },
        {
          "Key": "CLOUD_SDK_VERSION",
          "Name": "arg",
          "Value": "194.0.0"
        },
        {
          "Key": "SHA256SUM",
          "Name": "arg",
          "Value": "bc8128569b8c1c4f53512f95bce66efedec60ab6f877f39472373b4e610ab09c"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/google-cloud-sdk/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "\"3.5.3\""
            },
            {
              "Key": "M2_HOME",
              "Value": "/root/.m2/"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sed -i 's/http\\:\\/\\/dl-cdn.alpinelinux.org/https\\:\\/\\/alpine.global.ssl.fastly.net/g' /etc/apk/repositories \u0026\u0026 \tapk add --update wget \u0026\u0026     cd /tmp \u0026\u0026     wget \"https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/$MAVEN_VERSION/apache-maven-$MAVEN_VERSION-bin.tar.gz\" \u0026\u0026     tar -zxvf \"apache-maven-$MAVEN_VERSION-bin.tar.gz\" \u0026\u0026     mv \"apache-maven-$MAVEN_VERSION\" \"$M2_HOME\" \u0026\u0026     ln -s \"$M2_HOME/bin/mvn\" /usr/bin/mvn \u0026\u0026     apk del wget \u0026\u0026     apk add git curl tar python bash procps \u0026\u0026     echo \"Add jq for parsing GitLab API responses\" \u0026\u0026     apk add jq  \u0026\u0026     rm /tmp/* /var/cache/apk/* \u0026\u0026     curl -L -o crcmod.tar.gz \"https://downloads.sourceforge.net/project/crcmod/crcmod/crcmod-1.7/crcmod-1.7.tar.gz\" \u0026\u0026     tar -xzf crcmod.tar.gz \u0026\u0026     cd crcmod-1.7/ \u0026\u0026     python setup.py install \u0026\u0026     cd / \u0026\u0026     curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     echo \"${SHA256SUM}  google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz\" \u003e google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz.sha256 \u0026\u0026     sha256sum -c google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz.sha256 \u0026\u0026     tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz \u0026\u0026     rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz.sha256 \u0026\u0026     ln -s /lib /lib64 \u0026\u0026     gcloud config set core/disable_usage_reporting true \u0026\u0026     gcloud config set component_manager/disable_update_check true \u0026\u0026     gcloud config set metrics/environment github_docker_image \u0026\u0026     gcloud components install app-engine-java"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}