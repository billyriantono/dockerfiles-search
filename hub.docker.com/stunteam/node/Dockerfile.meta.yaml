MetaArgs:
- DefaultValue: null
  Key: IMAGE
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: TAG
  ProvidedValue: null
  Value: null
Stages:
- BaseName: ${IMAGE:-stunteam/alpine}:${TAG:-latest}
  Commands:
  - Key: SHELL
    Name: arg
    Value: null
  - Env:
    - Key: SHELL
      Value: ${SHELL:-"/bin/sh"}
    Name: env
  - Key: APP_CONTEXT
    Name: arg
    Value: null
  - Env:
    - Key: APP_CONTEXT
      Value: ${APP_CONTEXT:-.}
    Name: env
  - Key: APP_WORKDIR
    Name: arg
    Value: null
  - Env:
    - Key: APP_WORKDIR
      Value: ${APP_WORKDIR:-/usr/src/app}
    Name: env
  - Key: APP_USER
    Name: arg
    Value: null
  - Env:
    - Key: APP_USER
      Value: ${APP_USER:-node}
    Name: env
  - Key: APP_USER_GROUP
    Name: arg
    Value: null
  - Env:
    - Key: APP_USER_GROUP
      Value: ${APP_USER_GROUP:-$APP_USER}
    Name: env
  - Key: APP_USER_HOME
    Name: arg
    Value: null
  - Env:
    - Key: APP_USER_HOME
      Value: ${APP_USER_HOME:-/home/$APP_USER}
    Name: env
  - Key: APP_MODULES
    Name: arg
    Value: null
  - Env:
    - Key: APP_MODULES
      Value: ${APP_MODULES:-$APP_WORKDIR/node_modules}
    Name: env
  - Key: PKGS
    Name: arg
    Value: null
  - Env:
    - Key: PKGS
      Value: ${PKGS:-}
    Name: env
  - Key: APP_PKGS
    Name: arg
    Value: null
  - Env:
    - Key: APP_PKGS
      Value: ${APP_PKGS:-}
    Name: env
  - Labels:
    - Key: maintainer
      Value: $MAINTAINER
    Name: label
  - Labels:
    - Key: name
      Value: '"stunteam-docker-node"'
    Name: label
  - Labels:
    - Key: version
      Value: '"1.0"'
    Name: label
  - Labels:
    - Key: description
      Value: '"Docker image based on latest Alpine Edge and with latest Node.js and
        Yarn."'
    Name: label
  - CmdLine:
    - $RUN_PRINT "Update the repositories file."   ; apk update
    Name: run
    PrependShell: true
  - CmdLine:
    - $RUN_PRINT "Add non-sudo application user and his group."   ; addgroup -g 1000
      $APP_USER   && adduser -h $APP_USER_HOME -g "Application User" -s $SHELL -G
      $APP_USER_GROUP -D -u 1000 $APP_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - '$RUN_PRINT "Add Node.js and Yarn."   ; apk add --no-cache --progress libuv
      nodejs yarn   && $RUN_PRINT_END "Versions installed: node.js $(node -v), yarn
      v$(yarn -v)."'
    Name: run
    PrependShell: true
  - CmdLine:
    - $RUN_PRINT "Add additional system dependencies if defined."   ; if ! [ -z $PKGS
      ]; then apk add --no-cache --progress $PKGS; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - $RUN_PRINT "Add Node.js global packages if predefined."   ; if ! [ -z $APP_PKGS
      ]; then yarn global add --force --check-files --non-interactive $APP_PKGS; fi
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $APP_WORKDIR
  - CmdLine:
    - $RUN_PRINT "Clean up from unnecessary files"; $RUN_CLEANUP   /usr/lib/node_modules/npm/man   /usr/lib/node_modules/npm/doc   /usr/lib/node_modules/npm/changelog   /usr/lib/node_modules/npm/scripts   /usr/lib/node_modules/npm/html
    Name: run
    PrependShell: true
  - CmdLine:
    - node
    Name: cmd
    PrependShell: false
  - Expression: ENV RUN_PRINT $RUN_PRINT
    Name: onbuild
  - Expression: ENV RUN_PRINT_END $RUN_PRINT_END
    Name: onbuild
  - Expression: ENV RUN_CLEANUP $RUN_CLEANUP
    Name: onbuild
  - Expression: ENV RUN_UPGRADE $RUN_UPGRADE
    Name: onbuild
  - Expression: ENV MAINTAINER $MAINTAINER
    Name: onbuild
  - Expression: ENV APP_CONTEXT $APP_CONTEXT
    Name: onbuild
  - Expression: ENV APP_WORKDIR $APP_WORKDIR
    Name: onbuild
  - Expression: ENV APP_USER $APP_USER
    Name: onbuild
  - Expression: ENV APP_USER_GROUP $APP_USER_GROUP
    Name: onbuild
  - Expression: ENV APP_USER_HOME $APP_USER_HOME
    Name: onbuild
  - Expression: ENV APP_MODULES $APP_MODULES
    Name: onbuild
  - Expression: RUN $RUN_PRINT "Update the Alpine repositories file."; apk update
    Name: onbuild
  From:
    Image: ${IMAGE:-stunteam/alpine}:${TAG:-latest}
  Name: ""
  Platform: ""
  SourceCode: FROM ${IMAGE:-stunteam/alpine}:${TAG:-latest}
