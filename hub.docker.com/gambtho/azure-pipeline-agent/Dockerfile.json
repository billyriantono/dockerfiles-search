{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch-slim",
      "SourceCode": "FROM debian:stretch-slim",
      "Platform": "",
      "From": {
        "Image": "debian:stretch-slim"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"APT::Get::Assume-Yes \\\"true\\\";\" \u003e /etc/apt/apt.conf.d/90assumeyes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install apt-utils -qq"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -qq --no-install-recommends     apt-transport-https     ca-certificates     curl     file     ftp     jq     git     gnupg     iproute2     iputils-ping     locales     lsb-release     netcat     sudo     time     unzip     wget     zip \u0026\u0026 rm -rf /var/lib/apt/lists/* \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor \u003e microsoft.asc.gpg     \u0026\u0026 mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/     \u0026\u0026 wget -q https://packages.microsoft.com/config/debian/9/prod.list     \u0026\u0026 mv prod.list /etc/apt/sources.list.d/microsoft-prod.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get -y install dotnet-sdk-2.1     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 rm -rf /etc/apt/sources.list.d/*     \u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOTNET_RUNNING_IN_CONTAINER",
              "Value": "true"
            },
            {
              "Key": "DOTNET_USE_POLLING_FILE_WATCHER",
              "Value": "true"
            },
            {
              "Key": "NUGET_XMLDOC_MODE",
              "Value": "skip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"/root/.microsoft/Team Foundation/4.0/Configuration/TEE-Mementos\"  \u0026\u0026 cd \"/root/.microsoft/Team Foundation/4.0/Configuration/TEE-Mementos\"  \u0026\u0026 echo '\u003cProductIdData\u003e\u003ceula-14.0 value=\"true\"/\u003e\u003c/ProductIdData\u003e' \u003e \"com.microsoft.tfs.client.productid.xml\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DOCKER_VERSION",
              "Value": "18.06.3-ce"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VERSION.tgz     \u0026\u0026 tar --strip-components=1 -xvzf docker-$DOCKER_VERSION.tgz -C /usr/local/bin \u0026\u0026 rm docker-$DOCKER_VERSION.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "KUBE_VERSION",
              "Value": "1.14.4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSLO https://storage.googleapis.com/kubernetes-release/release/v$KUBE_VERSION/bin/linux/amd64/kubectl     \u0026\u0026 mv kubectl /usr/local/bin \u0026\u0026 chmod 755 /usr/local/bin/kubectl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TERRAFORM_VERSION",
              "Value": "0.12.6"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsSLO https://releases.hashicorp.com/terraform/$TERRAFORM_VERSION/terraform_${TERRAFORM_VERSION}_linux_amd64.zip     \u0026\u0026 unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin     \u0026\u0026 chmod 755 /usr/local/bin/terraform \u0026\u0026 rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/vsts"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./start.sh",
            "."
          ]
        },
        {
          "CmdLine": [
            "chmod +x start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "VSTS_AGENT",
              "Value": "'$(hostname)-agent'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "VSTS_WORK",
              "Value": "'/var/vsts/$VSTS_AGENT'"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "./start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}