{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "Key": "tf_version",
          "Name": "arg",
          "Value": "\"0.11.7\""
        },
        {
          "Key": "go_version",
          "Name": "arg",
          "Value": "\"1.10.3\""
        },
        {
          "Key": "docker_version",
          "Name": "arg",
          "Value": "\"1.21.2\""
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends     apt-transport-https     build-base     gcc     abuild     binutils     binutils-doc     gcc-doc     ca-certificates     curl     dmsetup     git     gzip     jq     make     python-pip     software-properties-common     unzip     wget     zip     xvfb     redis-server     libgtk2.0-0     libnotify-dev     libgconf-2-4     libnss3     libxss1     libasound2     default-jdk     build-essential checkinstall     libssl-dev     \u0026\u0026 rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "( curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - )  \u0026\u0026 apt-key fingerprint 0EBFCD88  \u0026\u0026 add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y docker-ce  \u0026\u0026 curl -L https://github.com/docker/compose/releases/download/1.18.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose  \u0026\u0026 chmod +x /usr/local/bin/docker-compose"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "( echo \"deb https://dl.bintray.com/sbt/debian /\" | tee -a /etc/apt/sources.list.d/sbt.list )  \u0026\u0026 apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends sbt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_9.x | bash -  \u0026\u0026 apt-get install -y nodejs  \u0026\u0026 npm install -g yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U setuptools wheel \u0026\u0026 pip install -U awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest \u0026\u0026 chmod +x /usr/local/bin/ecs-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://releases.hashicorp.com/terraform/${tf_version}/terraform_${tf_version}_linux_amd64.zip -o terraform_${tf_version}_linux_amd64.zip     \u0026\u0026 unzip terraform_${tf_version}_linux_amd64.zip -d /usr/local/bin     \u0026\u0026 rm terraform_${tf_version}_linux_amd64.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://dl.google.com/go/go${go_version}.linux-amd64.tar.gz -o go${go_version}.linux-amd64.tar.gz     \u0026\u0026 tar -C /usr/local -xzf go${go_version}.linux-amd64.tar.gz     \u0026\u0026 rm go${go_version}.linux-amd64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p ${HOME}/go     \u0026\u0026 echo 'export GOPATH=${HOME}/go' \u003e\u003e ${HOME}/.profile     \u0026\u0026 echo 'export GOBIN=${GOPATH}/bin' \u003e\u003e ${HOME}/.profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/go/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}