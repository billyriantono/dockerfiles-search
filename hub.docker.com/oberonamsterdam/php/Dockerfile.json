{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.3-fpm",
      "SourceCode": "FROM php:7.3-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.3-fpm"
      },
      "Commands": [
        {
          "Maintainer": "chin@oberon.nl",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            },
            {
              "Key": "TERM",
              "Value": "xterm"
            },
            {
              "Key": "PHP_MAX_EXECUTION_TIME",
              "Value": "120"
            },
            {
              "Key": "PHP_MEMORY_LIMIT",
              "Value": "256M"
            },
            {
              "Key": "PHP_UPLOAD_LIMIT",
              "Value": "8M"
            },
            {
              "Key": "PHP_OPCACHE_LIMIT",
              "Value": "64M"
            },
            {
              "Key": "PHP_OPCACHE_REVALIDATE",
              "Value": "2"
            },
            {
              "Key": "PHP_SESSION_SAVE_HANDLER",
              "Value": "files"
            },
            {
              "Key": "PHP_SESSION_SAVE_PATH",
              "Value": "\"\""
            },
            {
              "Key": "PHP_SMTP_HOST",
              "Value": "localhost"
            },
            {
              "Key": "PHP_MAX_INPUT_VARS",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "production.ini",
            "/usr/local/etc/php/conf.d/00-production.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-settings.ini",
            "/usr/local/etc/php/conf.d/01-docker-settings.ini"
          ]
        },
        {
          "CmdLine": [
            "echo \"LANG=\\\"en_US.UTF-8\\\"\" \u003e /etc/default/locale \u0026\u0026     echo \"de_DE.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026     echo \"fr_FR.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026     echo \"es_ES.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026     echo \"en_GB.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026     echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026     echo \"nl_NL.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends apt-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y supervisor cron nano \u0026\u0026     apt-get install -y libsqlite3-dev zlib1g-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev libicu-dev libz-dev libmemcached-dev libcurl4-openssl-dev libxslt1-dev libffi-dev libssl-dev libldap2-dev libldap2-dev libmagickwand-dev \u0026\u0026     apt-get install -y git mercurial locales libzip-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /etc/mercurial \u0026\u0026     echo \"[trusted]\" \u003e\u003e /etc/mercurial/hgrc \u0026\u0026     echo \"users = 1000\" \u003e\u003e /etc/mercurial/hgrc \u0026\u0026     echo \"groups = 1000\" \u003e\u003e /etc/mercurial/hgrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \u0026\u0026     docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \u0026\u0026     docker-php-ext-install -j$(nproc) gd exif zip mbstring intl bcmath curl pdo_mysql xsl soap mysqli simplexml sockets xmlrpc opcache ldap \u0026\u0026     pecl install memcached \u0026\u0026 docker-php-ext-enable memcached \u0026\u0026     pecl install redis \u0026\u0026 docker-php-ext-enable redis \u0026\u0026     pecl install imagick \u0026\u0026 docker-php-ext-enable imagick"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y gnupg2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash - \u0026\u0026     apt-get install -y nodejs \u0026\u0026     npm install -g yarn bower gulp pm2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \u0026\u0026     mv composer.phar /usr/local/bin/composer \u0026\u0026     chmod +x /usr/local/bin/composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get purge -y --auto-remove apt-utils libsqlite3-dev libz-dev libcurl4-openssl-dev libssl-dev \u0026\u0026     apt-get -y clean \u0026\u0026     apt-get -y purge \u0026\u0026     rm -rf /var/lib/apt/lists/* /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"Europe/Amsterdam\" \u003e /etc/timezone \u0026\u0026 dpkg-reconfigure --frontend noninteractive tzdata \u0026\u0026     touch /var/log/cron.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/app"
        }
      ]
    }
  ]
}