{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "envygeeks/alpine",
      "SourceCode": "FROM envygeeks/alpine",
      "Platform": "",
      "From": {
        "Image": "envygeeks/alpine"
      },
      "Commands": [
        {
          "Maintainer": "Jekyll Core \u003chello@jekyllrb.com\u003e",
          "Name": "maintainer"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "copy/",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "JEKYLL_IMAGE_TYPE",
              "Value": "latest"
            },
            {
              "Key": "JEKYLL_GIT_URL",
              "Value": "https://github.com/jekyll/jekyll.git"
            },
            {
              "Key": "JEKYLL_VERSION",
              "Value": "jekyll@2.5.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add readline readline-dev libxml2 libxml2-dev libxslt      libxslt-dev python zlib zlib-dev ruby ruby-dev yaml       yaml-dev libffi libffi-dev build-base nodejs ruby-io-console         ruby-irb ruby-json ruby-rake ruby-rdoc git nginx            \u0026\u0026     mv /etc/nginx/conf.d /tmp/nginx.conf.d \u0026\u0026     rm -rf /etc/nginx \u0026\u0026 cd /tmp \u0026\u0026 git clone https://github.com/envygeeks/docker.git \u0026\u0026     cp -R docker/dockerfiles/nginx/copy/etc/startup3.d/nginx /etc/startup3.d \u0026\u0026     cp -R docker/dockerfiles/nginx/copy/etc/nginx /etc \u0026\u0026     mv /tmp/nginx.conf.d /etc/nginx/conf.d \u0026\u0026     rm -rf /tmp/docker \u0026\u0026 cd ~/ \u0026\u0026   mkdir -p /home/jekyll \u0026\u0026   addgroup -Sg 1000 jekyll \u0026\u0026    adduser  -SG jekyll -u 1000 -h /home/jekyll jekyll \u0026\u0026   chown jekyll:jekyll /home/jekyll \u0026\u0026   cd ~ \u0026\u0026   yes | gem update --system --no-document -- --use-system-libraries \u0026\u0026   yes | gem update --no-document -- --use-system-libraries \u0026\u0026   repo=$(docker-helper git_clone_ruby_repo \"jekyll@2.5.3\") \u0026\u0026   if [ ! -z \"$repo\" ];   then     cd $repo \u0026\u0026     rake build \u0026\u0026 gem install pkg/jekyll-*.gem --no-document --       --use-system-libraries \u0026\u0026     rm -rf $repo;   else     yes | docker-helper ruby_install_gem       \"jekyll@2.5.3\" --no-document --         --use-system-libraries;   fi \u0026\u0026   cd ~ \u0026\u0026   docker-helper install_default_gems \u0026\u0026   gem clean \u0026\u0026 gem install bundler --no-document \u0026\u0026   apk del build-base readline-dev libxml2-dev libxslt-dev zlib-dev     ruby-dev yaml-dev libffi-dev \u0026\u0026   mkdir -p /srv/jekyll \u0026\u0026   chown jekyll:jekyll /srv/jekyll \u0026\u0026   echo 'jekyll ALL=NOPASSWD:ALL' \u003e\u003e /etc/sudoers \u0026\u0026   rm -rf /usr/lib/ruby/gems/*/cache/*.gem \u0026\u0026   docker-helper cleanup"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/srv/jekyll"
        },
        {
          "Name": "expose",
          "Ports": [
            "4000",
            "80"
          ]
        }
      ]
    }
  ]
}