{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:wheezy",
      "SourceCode": "FROM debian:wheezy",
      "Platform": "",
      "From": {
        "Image": "debian:wheezy"
      },
      "Commands": [
        {
          "Maintainer": "diep le",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026      apt-get install -y git wget curl \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_5.x | bash - \u0026\u0026     apt-get install -y nodejs nodejs-legacy build-essential \u0026\u0026     ln -s /usr/bin/nodejs /usr/local/bin/node \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/dpkg/info/* \u0026\u0026     rm -rf /var/lib/apt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tools",
            "/opt/tools"
          ]
        },
        {
          "CmdLine": [
            "npm install -g cordova ionic"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g gulp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ionic start ionic-retailstore sidemenu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "35729",
            "8100"
          ]
        },
        {
          "CmdLine": [
            "dpkg-reconfigure debconf -f Noninteractive"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \t\u0026\u0026 apt-get install -y -q python-software-properties software-properties-common \t\u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\" | tee /etc/apt/sources.list.d/webupd8team-java.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026      apt-get install -y oracle-java8-installer \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg --add-architecture i386 \t\u0026\u0026 apt-get update \u0026\u0026 \tapt-get install -y --force-yes expect ant wget libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 qemu-kvm kmod \t\u0026\u0026 apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /opt \t\u0026\u0026 wget --output-document=android-sdk.tgz --quiet http://dl.google.com/android/android-sdk_r24.0.2-linux.tgz \t\u0026\u0026 tar xzf android-sdk.tgz \t\u0026\u0026 rm -f android-sdk.tgz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ANDROID_HOME",
              "Value": "/opt/android-sdk-linux"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/opt/tools"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo ANDROID_HOME=\"${ANDROID_HOME}\" \u003e\u003e /etc/environment"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/opt/tools/android-accept-licenses.sh",
            "android update sdk --all --no-ui --filter platform-tools,tools,build-tools-21.1.2,android-19,addon-google_apis_x86-google-19,extra-android-support,extra-android-m2repository,extra-google-m2repository,sys-img-x86-android-21"
          ],
          "Name": "run",
          "PrependShell": false
        },
        {
          "Name": "workdir",
          "Path": "ionic-retailstore"
        },
        {
          "CmdLine": [
            "ionic",
            "serve",
            "--all",
            "--port",
            "8100",
            "--livereload-port",
            "35729"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}