MetaArgs: null
Stages:
- BaseName: toolshed/requirements
  Commands:
  - Maintainer: Björn A. Grüning, bjoern.gruening@gmail.com
    Name: maintainer
  - Env:
    - Key: GALAXY_CONFIG_DIR
      Value: /etc/galaxy
    Name: env
  - Env:
    - Key: GALAXY_CONFIG_FILE
      Value: $GALAXY_CONFIG_DIR/galaxy.ini
    - Key: GALAXY_CONFIG_JOB_CONFIG_FILE
      Value: $GALAXY_CONFIG_DIR/job_conf.xml
    - Key: GALAXY_CONFIG_JOB_METRICS_CONFIG_FILE
      Value: $GALAXY_CONFIG_DIR/job_metrics_conf.xml
    - Key: GALAXY_VIRTUALENV
      Value: $GALAXY_ROOT/.venv/
    - Key: GALAXY_USER
      Value: galaxy
    - Key: GALAXY_UID
      Value: "1450"
    - Key: GALAXY_GID
      Value: "1450"
    - Key: GALAXY_POSTGRES_UID
      Value: "1550"
    - Key: GALAXY_POSTGRES_GID
      Value: "1550"
    - Key: GALAXY_HOME
      Value: /home/galaxy
    - Key: GALAXY_DEFAULT_ADMIN_USER
      Value: admin@galaxy.org
    - Key: GALAXY_DEFAULT_ADMIN_PASSWORD
      Value: admin
    - Key: GALAXY_DEFAULT_ADMIN_KEY
      Value: admin
    - Key: EXPORT_DIR
      Value: /export
    Name: env
  - CmdLine:
    - groupadd -r postgres -g $GALAXY_POSTGRES_GID &&     adduser --system --quiet
      --home /var/lib/postgresql --no-create-home --shell /bin/bash --gecos "" --uid
      $GALAXY_POSTGRES_UID --gid $GALAXY_POSTGRES_GID postgres
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update && apt-get install --no-install-recommends -y apt-transport-https
      software-properties-common &&     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80
      --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9 &&     sh -c "echo deb
      https://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list"
      &&     apt-add-repository -y ppa:ansible/ansible &&     apt-add-repository -y
      ppa:galaxyproject/nginx &&     apt-get update -qq && apt-get upgrade -y &&     apt-get
      install --no-install-recommends -y mercurial python-psycopg2 postgresql-9.3
      sudo samtools python-virtualenv wget     nginx-extras=1.4.6-1ubuntu3.3ppa1 nginx-common=1.4.6-1ubuntu3.3ppa1
      uwsgi uwsgi-plugin-python supervisor lxc-docker-1.7.1 slurm-llnl slurm-llnl-torque
      libswitch-perl     slurm-drmaa-dev proftpd proftpd-mod-pgsql libyaml-dev nodejs-legacy
      npm aufs-tools ansible     nano nmap lynx vim curl python-pip python-gnuplot
      python-rpy2 &&     apt-get purge -y software-properties-common &&     apt-get
      autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - Env:
    - Key: GALAXY_RELEASE
      Value: dev
    - Key: GALAXY_REPO
      Value: https://github.com/chambm/galaxy
    - Key: GALAXY_ROOT
      Value: /galaxy-central
    Name: env
  - CmdLine:
    - groupadd -r $GALAXY_USER -g $GALAXY_GID &&     useradd -u $GALAXY_UID -r -g
      $GALAXY_USER -d $GALAXY_HOME -c "Galaxy user" $GALAXY_USER &&     mkdir $EXPORT_DIR
      $GALAXY_HOME && chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_HOME $EXPORT_DIR
      &&     gpasswd -a $GALAXY_USER docker
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./bashrc
    - $GALAXY_HOME/.bashrc
  - CmdLine:
    - mkdir $GALAXY_ROOT && wget -q -O - $GALAXY_REPO/archive/$GALAXY_RELEASE.tar.gz
      | tar xzf - --strip-components=1 -C $GALAXY_ROOT && chown -R $GALAXY_USER:$GALAXY_USER
      $GALAXY_ROOT
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $GALAXY_CONFIG_DIR $GALAXY_CONFIG_DIR/web && chown -R $GALAXY_USER:$GALAXY_USER
      $GALAXY_CONFIG_DIR
    Name: run
    PrependShell: true
  - CmdLine:
    - su $GALAXY_USER -c "cp $GALAXY_ROOT/config/galaxy.ini.sample $GALAXY_CONFIG_FILE"
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./reports_wsgi.ini.sample
    - $GALAXY_CONFIG_DIR/reports_wsgi.ini
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./htpasswd
    - /etc/nginx/htpasswd
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./servers.ini
    - $GALAXY_CONFIG_DIR/servers.ini
  - CmdLine:
    - cat $GALAXY_CONFIG_DIR/servers.ini >> $GALAXY_CONFIG_FILE && rm $GALAXY_CONFIG_DIR/servers.ini
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - roles/
    - /tmp/ansible/roles
  - Chown: ""
    Name: add
    SourcesAndDest:
    - provision.yml
    - /tmp/ansible/provision.yml
  - CmdLine:
    - ansible-playbook /tmp/ansible/provision.yml     --extra-vars galaxy_user_name=$GALAXY_USER     --extra-vars
      galaxy_config_file=$GALAXY_CONFIG_FILE     --extra-vars galaxy_config_dir=$GALAXY_CONFIG_DIR     --extra-vars
      galaxy_job_conf_path=$GALAXY_CONFIG_JOB_CONFIG_FILE     --extra-vars galaxy_job_metrics_conf_path=$GALAXY_CONFIG_JOB_METRICS_CONFIG_FILE     --extra-vars
      supervisor_manage_slurm=""     --extra-vars galaxy_venv_dir=$GALAXY_VIRTUALENV     --tags=galaxyextras
      -c local &&     apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*
      /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /shed_tools && chown $GALAXY_USER:$GALAXY_USER /shed_tools
    Name: run
    PrependShell: true
  - Name: user
    User: galaxy
  - Name: workdir
    Path: $GALAXY_ROOT
  - CmdLine:
    - mkdir $GALAXY_ROOT/tool_deps
    Name: run
    PrependShell: true
  - Env:
    - Key: GALAXY_CONFIG_DATABASE_CONNECTION
      Value: postgresql://galaxy:galaxy@localhost:5432/galaxy
    - Key: GALAXY_CONFIG_TOOL_DEPENDENCY_DIR
      Value: ./tool_deps
    - Key: GALAXY_CONFIG_ADMIN_USERS
      Value: admin@galaxy.org
    - Key: GALAXY_CONFIG_MASTER_API_KEY
      Value: HSNiugRFvgT574F43jZ7N9F3
    - Key: GALAXY_CONFIG_BRAND
      Value: '"Galaxy Docker Build"'
    - Key: GALAXY_CONFIG_STATIC_ENABLED
      Value: "False"
    - Key: GALAXY_CONFIG_JOB_WORKING_DIRECTORY
      Value: /export/galaxy-central/database/job_working_directory
    - Key: GALAXY_CONFIG_FILE_PATH
      Value: /export/galaxy-central/database/files
    - Key: GALAXY_CONFIG_NEW_FILE_PATH
      Value: /export/galaxy-central/database/files
    - Key: GALAXY_CONFIG_TEMPLATE_CACHE_PATH
      Value: /export/galaxy-central/database/compiled_templates
    - Key: GALAXY_CONFIG_CITATION_CACHE_DATA_DIR
      Value: /export/galaxy-central/database/citations/data
    - Key: GALAXY_CONFIG_CLUSTER_FILES_DIRECTORY
      Value: /export/galaxy-central/database/pbs
    - Key: GALAXY_CONFIG_FTP_UPLOAD_DIR
      Value: /export/galaxy-central/database/ftp
    - Key: GALAXY_CONFIG_FTP_UPLOAD_SITE
      Value: galaxy.docker.org
    - Key: GALAXY_CONFIG_USE_PBKDF2
      Value: "False"
    - Key: GALAXY_CONFIG_NGINX_X_ACCEL_REDIRECT_BASE
      Value: /_x_accel_redirect
    - Key: GALAXY_CONFIG_NGINX_X_ARCHIVE_FILES_BASE
      Value: /_x_accel_redirect
    - Key: GALAXY_CONFIG_NGINX_UPLOAD_STORE
      Value: /tmp/nginx_upload_store
    - Key: GALAXY_CONFIG_NGINX_UPLOAD_PATH
      Value: /_upload
    - Key: GALAXY_CONFIG_DYNAMIC_PROXY_MANAGE
      Value: "False"
    - Key: GALAXY_CONFIG_VISUALIZATION_PLUGINS_DIRECTORY
      Value: config/plugins/visualizations
    - Key: GALAXY_CONFIG_TRUST_IPYTHON_NOTEBOOK_CONVERSION
      Value: "True"
    - Key: GALAXY_CONFIG_TOOLFORM_UPGRADE
      Value: "True"
    - Key: GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL
      Value: http://$HOST_IP/
    - Key: GALAXY_CONFIG_SANITIZE_ALL_HTML
      Value: "False"
    - Key: GALAXY_CONFIG_TOOLFORM_UPGRADE
      Value: "True"
    - Key: GALAXY_CONFIG_WELCOME_URL
      Value: $GALAXY_CONFIG_DIR/web/welcome.html
    - Key: GALAXY_CONFIG_OVERRIDE_DEBUG
      Value: "False"
    Name: env
  - Env:
    - Key: PG_DATA_DIR_DEFAULT
      Value: /var/lib/postgresql/9.3/main/
    - Key: PG_DATA_DIR_HOST
      Value: /export/postgresql/9.3/main/
    Name: env
  - CmdLine:
    - ./scripts/common_startup.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - cd $GALAXY_ROOT/lib/galaxy/web/proxy/js && npm install
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - GalaxyDocker.png
    - $GALAXY_CONFIG_DIR/web/welcome_image.png
  - Chown: ""
    Name: add
    SourcesAndDest:
    - welcome.html
    - $GALAXY_CONFIG_DIR/web/welcome.html
  - Name: user
    User: root
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - locale-gen en_US.UTF-8 && dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./setup_postgresql.py
    - /usr/local/bin/setup_postgresql.py
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./export_user_files.py
    - /usr/local/bin/export_user_files.py
  - CmdLine:
    - rm $PG_DATA_DIR_DEFAULT -rf && python /usr/local/bin/setup_postgresql.py --dbuser
      galaxy --dbpassword galaxy --db-name galaxy --dbpath $PG_DATA_DIR_DEFAULT
    Name: run
    PrependShell: true
  - CmdLine:
    - service postgresql start &&     sh create_db.sh -c $GALAXY_CONFIG_FILE &&     .
      $GALAXY_ROOT/.venv/bin/activate &&     pip install psutil &&     python /usr/local/bin/create_galaxy_user.py
      --user $GALAXY_DEFAULT_ADMIN_USER --password $GALAXY_DEFAULT_ADMIN_PASSWORD
      -c $GALAXY_CONFIG_FILE --key $GALAXY_DEFAULT_ADMIN_KEY &&     service postgresql
      stop
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - roles/galaxy-tools-playbook
    - $GALAXY_HOME/ansible/galaxy-tools-playbook
  - CmdLine:
    - chown -R $GALAXY_USER:$GALAXY_USER $GALAXY_HOME/ansible
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./tool_sheds_conf.xml
    - $GALAXY_HOME/tool_sheds_conf.xml
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./add_tool_shed.py
    - /usr/bin/add-tool-shed
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install_tools_wrapper.sh
    - /usr/bin/install-tools
  - Chown: ""
    Name: add
    SourcesAndDest:
    - install_biojs_vis.sh
    - /usr/bin/install-biojs
  - CmdLine:
    - chmod +x /usr/bin/install-tools /usr/bin/startup /usr/bin/install-biojs /usr/bin/add-tool-shed
    Name: run
    PrependShell: true
  - Env:
    - Key: GALAXY_CONFIG_INTEGRATED_TOOL_PANEL_CONFIG
      Value: /export/galaxy-central/integrated_tool_panel.xml
    Name: env
  - Name: expose
    Ports:
    - :80
  - Name: expose
    Ports:
    - :21
  - Name: expose
    Ports:
    - :8800
  - Name: expose
    Ports:
    - :9002
  - Env:
    - Key: HOME
      Value: $GALAXY_HOME
    Name: env
  - Name: volume
    Volumes:
    - /export/
    - /data/
    - /var/lib/docker
  - CmdLine:
    - /usr/bin/startup
    Name: cmd
    PrependShell: false
  From:
    Image: toolshed/requirements
  Name: ""
  Platform: ""
  SourceCode: FROM toolshed/requirements
