MetaArgs: null
Stages:
- BaseName: chambm/docker-galaxy-stable
  Commands:
  - Maintainer: Matt Chambers, matt.chambers@vanderbilt.edu
    Name: maintainer
  - CmdLine:
    - codename=$(lsb_release -c -s) &&     echo "deb http://mirrors.nics.utk.edu/cran/bin/linux/ubuntu
      $codename/" | tee -a /etc/apt/sources.list &&     apt-key adv --keyserver keyserver.ubuntu.com
      --recv-keys E084DAB9 &&     echo "deb http://ppa.launchpad.net/marutter/rdev/ubuntu
      $codename main" | tee -a /etc/apt/sources.list.d/marutter-rdev-$codename.list
      &&     apt-get -qq update &&     apt-get install -y --no-install-recommends
      r-base cabextract build-essential curl git m4 ruby texinfo libbz2-dev libcurl4-openssl-dev
      libxml2-dev libexpat-dev libncurses-dev zlib1g-dev libhdf5-dev python-h5py libreadline-dev
      &&     sudo -u galaxy ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/linuxbrew/go/install)"
      &&     echo export PATH=$PATH:/home/galaxy/.linuxbrew/bin >> /home/galaxy/.bashrc
      &&     apt-get purge -y software-properties-common &&     apt-get autoremove
      -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - R --vanilla -e 'source("http://bioconductor.org/biocLite.R"); biocLite(ask=F)'
      &&     R --vanilla -e 'source("http://bioconductor.org/biocLite.R"); biocLite(c("RGalaxy",
      "proBAMr"), ask=F)'
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /etc/ssl /tmp/ssl-copy/ &&     chmod -R 0700 /etc/ssl &&     chown -R
      postgres /tmp/ssl-copy &&     rm -r /etc/ssl &&     mv /tmp/ssl-copy /etc/ssl
    Name: run
    PrependShell: true
  - CmdLine:
    - add-tool-shed --url 'http://testtoolshed.g2.bx.psu.edu/' --name 'Test Tool Shed'
      &&     install-repository "--url http://testtoolshed.g2.bx.psu.edu/ -o galaxyp
      --name myrimatch"                        "--url http://testtoolshed.g2.bx.psu.edu/
      -o galaxyp --name idpqonvert"                        "--url http://testtoolshed.g2.bx.psu.edu/
      -o galaxyp --name idpassemble"                        "--url http://testtoolshed.g2.bx.psu.edu/
      -o galaxyp --name idpquery"                        "--url http://testtoolshed.g2.bx.psu.edu/
      -o galaxyp --name msconvert"                        "--url http://testtoolshed.g2.bx.psu.edu/
      -o galaxyp --name psm_to_sam"                        "--url http://toolshed.g2.bx.psu.edu/
      -o devteam --name sam_to_bam"                        "--url http://toolshed.g2.bx.psu.edu/
      -o devteam --name sam_merge"
    Name: run
    PrependShell: true
  - CmdLine:
    - install-repository "--url http://testtoolshed.g2.bx.psu.edu/ -o galaxyp --name
      msgfplus"
    Name: run
    PrependShell: true
  - Name: user
    User: galaxy
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .bashrc
    - /home/galaxy/.bashrc
  - Env:
    - Key: PATH
      Value: $PATH:/home/galaxy/.linuxbrew/bin
    - Key: BASH_ENV
      Value: /home/galaxy/.bashrc
    Name: env
  - CmdLine:
    - brew tap galaxyproject/tap && brew install planemo --HEAD
    Name: run
    PrependShell: true
  - Env:
    - Key: GALAXY_CONFIG_BRAND
      Value: '"Bingomics"'
    - Key: GALAXY_CONFIG_JOB_WORKING_DIRECTORY
      Value: /export/galaxy-cluster/job_working_directory
    - Key: GALAXY_CONFIG_FILE_PATH
      Value: /export/galaxy-central/database/files
    - Key: GALAXY_CONFIG_NEW_FILE_PATH
      Value: /export/galaxy-central/database/files
    - Key: GALAXY_CONFIG_TEMPLATE_CACHE_PATH
      Value: /galaxy-central/database/compiled_templates
    - Key: GALAXY_CONFIG_CITATION_CACHE_DATA_DIR
      Value: /galaxy-central/database/citations/data
    - Key: GALAXY_CONFIG_CLUSTER_FILES_DIRECTORY
      Value: /export/galaxy-cluster/pbs
    - Key: GALAXY_CONFIG_FTP_UPLOAD_DIR
      Value: /export/galaxy-central/database/ftp
    - Key: GALAXY_CONFIG_FTP_UPLOAD_SITE
      Value: 192.168.33.10
    - Key: ENABLE_TTS_INSTALL
      Value: "True"
    Name: env
  - Name: workdir
    Path: /galaxy-central
  - Env:
    - Key: WINEPREFIX
      Value: $HOME/.wine32
    - Key: WINEARCH
      Value: win32
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - mkdir /export/galaxy-cluster && chown galaxy:galaxy /export/galaxy-cluster
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /export/
    - /data/
    - /var/lib/docker
  - Name: expose
    Ports:
    - :21
    - :80
    - :8800
    - :9009
  - CmdLine:
    - /usr/bin/startup
    Name: cmd
    PrependShell: false
  From:
    Image: chambm/docker-galaxy-stable
  Name: ""
  Platform: ""
  SourceCode: FROM chambm/docker-galaxy-stable
