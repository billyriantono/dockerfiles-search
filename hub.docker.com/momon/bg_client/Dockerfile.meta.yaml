MetaArgs: null
Stages:
- BaseName: erlang:19
  Commands:
  - Env:
    - Key: ELIXIR_VERSION
      Value: '"v1.3.4"'
    - Key: LANG
      Value: C.UTF-8
    - Key: MIX_ENV
      Value: prod
    Name: env
  - Name: workdir
    Path: /app
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /app
  - CmdLine:
    - "set -xe \t&& ELIXIR_DOWNLOAD_URL=\"https://github.com/elixir-lang/elixir/releases/download/${ELIXIR_VERSION}/Precompiled.zip\"
      \t&& ELIXIR_DOWNLOAD_SHA256=\"eac16c41b88e7293a31d6ca95b5d72eaec92349a1f16846344f7b88128587e10\"
      \ && NODEJS_VERSION=6.9.2 \t&& buildDeps=' \t\tunzip     python     python-dev
      \    python-pip     python-virtualenv     curl     ca-certificates     nginx
      \t' \t&& apt-get update \t&& apt-get install -y --no-install-recommends $buildDeps
      \  && curl -fSL -o node.tgz https://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-linux-x64.tar.gz
      \  && tar xf node.tgz -C /usr/local --strip-components=1   && rm -f node.tgz
      /usr/local/*.md /usr/local/LICENSE \t&& curl -fSL -o elixir-precompiled.zip
      $ELIXIR_DOWNLOAD_URL \t&& echo \"$ELIXIR_DOWNLOAD_SHA256 elixir-precompiled.zip\"
      | sha256sum -c - \t&& unzip -qq -d /usr/local elixir-precompiled.zip \t&& rm
      elixir-precompiled.zip   && pip install livestreamer   && npm install request
      \  && mix local.hex --force   && mix local.rebar --force   && mix deps.get   &&
      mix compile \t&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*   && apt-get
      clean"
    Name: run
    PrependShell: true
  - CmdLine:
    - service nginx start && epmd -daemon && elixir --no-halt -S mix
    Name: cmd
    PrependShell: true
  From:
    Image: erlang:19
  Name: ""
  Platform: ""
  SourceCode: FROM erlang:19
