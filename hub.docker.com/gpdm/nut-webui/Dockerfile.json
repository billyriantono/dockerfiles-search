{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "bitnami/minideb",
      "SourceCode": "FROM bitnami/minideb",
      "Platform": "",
      "From": {
        "Image": "bitnami/minideb"
      },
      "Commands": [
        {
          "Maintainer": "Gianpaolo Del Matto \"buildmaint@phunsites.net\"",
          "Name": "maintainer"
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"This is the nut-webui docker image, which implements the web-based UI for Network UPS Tools (NUT)\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "nut-webui"
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "https://github.com/gpdm/nut/tree/master/nut-webui"
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "SSL_PRIVATE_KEY",
              "Value": ""
            },
            {
              "Key": "SSL_CERTIFICATE",
              "Value": ""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y nut-cgi fcgiwrap nginx-light openssl ssl-cert busybox \u0026\u0026     apt-get auto-remove \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/startup.sh",
            "/startup.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/healthcheck.sh",
            "/healthcheck.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/etc/nginx/sites-available/nut-default-tcp80",
            "files/etc/nginx/sites-available/nut-default-tcp443",
            "/etc/nginx/sites-available/"
          ]
        },
        {
          "CmdLine": [
            "[ -d /etc/nut ] \u0026\u0026 find /etc/nut/ -type f -regex '.*\\.conf$' -exec mv {} {}.sample \\; || false"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "[ -f /etc/nginx/sites-enabled/default ] \u0026\u0026 rm /etc/nginx/sites-enabled/default || false"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /etc/nginx/sites-available/nut-default-tcp80 /etc/nginx/sites-enabled/nut-default-tcp80"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod 700 /startup.sh /healthcheck.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/startup.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Health": {
            "Interval": 10000000000,
            "Test": [
              "CMD-SHELL",
              "/healthcheck.sh"
            ],
            "Timeout": 5000000000
          },
          "Name": "healthcheck"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443"
          ]
        }
      ]
    }
  ]
}