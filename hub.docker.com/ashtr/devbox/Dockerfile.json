{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "amazonlinux",
      "SourceCode": "FROM amazonlinux as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "amazonlinux"
      },
      "Commands": [
        {
          "Key": "GIT_USER_NAME",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "GIT_USER_EMAIL",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "HTTP_PROXY",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "GOPATH",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "JAVA_HOME",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "MAVEN_HOME",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "MAVEN_CONFIG",
          "Name": "arg",
          "Value": null
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            },
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            },
            {
              "Key": "COLORTERM",
              "Value": "truecolor"
            },
            {
              "Key": "TERM",
              "Value": "xterm-256color"
            },
            {
              "Key": "PYTHONIOENCODING",
              "Value": "UTF-8"
            },
            {
              "Key": "GIT_USER_NAME",
              "Value": "${GIT_USER_NAME:-\"Ashish Gupta\"}"
            },
            {
              "Key": "GIT_USER_EMAIL",
              "Value": "${GIT_USER_EMAIL:-\"gotoashishgupta@gmail.com\"}"
            },
            {
              "Key": "PATH",
              "Value": "/root/.local/bin:/usr/local/bin:/node_modules/.bin:$PATH"
            },
            {
              "Key": "EDITOR",
              "Value": "nvim"
            },
            {
              "Key": "VISUAL",
              "Value": "nvim"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "AUTHOR",
              "Value": "\"${GIT_USER_NAME} \u003c${GIT_USER_EMAIL}\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "yum update -y;   yum install -y fontconfig mkfontdir;   yum install -y python-pip python3-pip wget git openssl tree zsh nc ca-certificates perl make automake gcc gmp-devel libffi zlib xz tar gnupg;   update-ca-trust force-enable;   amazon-linux-extras install -y docker;   wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.2/dumb-init_1.2.2_amd64;   chmod +x /usr/local/bin/dumb-init;   yum clean all;   rm -rf /var/cache/yum;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux;   yum groupinstall -y \"Development Tools\";   wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm;   yum install -y ./epel-release-latest-7.noarch.rpm neovim jq file;   rm ./epel-release-latest-7.noarch.rpm;   yum clean all;   rm -rf /var/cache/yum;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dumb-init",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "zsh",
            "--"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "set -eux;   ssh-keygen -q -t rsa -b 4096 -C ${GIT_USER_EMAIL} -N '' -f \"${HOME}/.ssh/id_rsa\";   cp \"${HOME}/.ssh/id_rsa.pub\" \"${HOME}/.ssh/authorized_keys\";   for key in /etc/ssh/ssh_host_*key.pub; do   echo \"localhost $(cat ${key})\" \u003e\u003e \"${HOME}/.ssh/known_hosts\";  done;   eval \"$(ssh-agent -s)\";   ssh-add \"${HOME}/.ssh/id_rsa\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux;   pip3 install --upgrade --ignore-installed saws awsebcli awscli boto3 six==1.11.0;   curl https://raw.githubusercontent.com/wallix/awless/master/getawless.sh | bash;   mv awless /usr/local/bin/;   echo 'source \u003c(awless completion zsh)' \u003e\u003e ~/.bash_profile;   curl -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest;   chmod +x /usr/local/bin/ecs-cli;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "${JAVA_HOME:-/usr/lib/jvm/java}"
            },
            {
              "Key": "MAVEN_HOME",
              "Value": "${MAVEN_HOME:-/usr/share/maven}"
            },
            {
              "Key": "MAVEN_CONFIG",
              "Value": "${MAVEN_CONFIG:-/root/.m2}"
            },
            {
              "Key": "APP_TARGET",
              "Value": "${APP_TARGET:-target}"
            },
            {
              "Key": "JAVA_OPTS",
              "Value": "${JAVA_OPTS:-}"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux;   yum install -y maven;   yum clean all;   rm -rf /var/cache/yum;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "${GOPATH:-/root/go}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${GOPATH}/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -eux;   mkdir -p ${GOPATH};   chmod -R 777 ${GOPATH};   yum -y install golang;   yum clean all;   rm -rf /var/cache/yum;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux;   curl --silent --location https://rpm.nodesource.com/setup_10.x | bash -;   yum install -y nodejs;   curl -sL https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo;   yum install -y yarn;   yum clean all;   rm -rf /var/cache/yum;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux;   yarn global add typescript parcel-bundler gulp bower neovim ts-node jest ts-jest tern;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux;   git clone https://github.com/powerline/fonts.git --depth=1 \"${HOME}/fonts\";   ${HOME}/fonts/install.sh;   rm -rf \"${HOME}/fonts\";"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/root/.dotfiles/devbox"
          ]
        },
        {
          "CmdLine": [
            "set -eux;   yum install -y stow;   git clone https://github.com/tarjoilija/zgen.git \"${HOME}/zgen\";   sed -i -e '/shasum -a 256/ s//sha256sum/g' ${HOME}/zgen/zgen.zsh;   mkdir -p \"${HOME}/.dotfiles/zsh-quickstart-kit\";   git clone https://github.com/git-fork/zsh-quickstart-kit.git \"${HOME}/.dotfiles/zsh-quickstart-kit\";   cd \"${HOME}/.dotfiles/zsh-quickstart-kit\";   sed -i -e '/alias grep/d' ./zsh/.zsh_aliases;   stow --target=\"${HOME}\" zsh;   cd ${HOME};   git clone --depth 1 https://github.com/junegunn/fzf.git ${HOME}/.fzf;   ${HOME}/.fzf/install --all;   sed -i -e '1i  if type ssh-agent\u003e /dev/null 2\u003e\u00261; then\\n  eval $(ssh-agent -s);\\n  fi;\\n  [ -f ~/.bash_profile ] \u0026\u0026 source ~/.bash_profile;\\n  [ -f ~/.bash_extras ] \u0026\u0026 source ~/.bash_extras;\\n  DISABLE_UPDATE_PROMPT=true\\n  export fpath=(/usr/local/share/zsh-completions $fpath)\\n  source \"${HOME}/zgen/zgen.zsh\"\\n  '   -e \"\\$a\\export PATH=$PATH:\\$PATH;\\n  unset QUICKSTART_KIT_REFRESH_IN_DAYS;\\n  export HOMEBREW_NO_ANALYTICS=1;\\n  export HOMEBREW_NO_AUTO_UPDATE=1;\" ${HOME}/.dotfiles/zsh-quickstart-kit/zsh/.zshrc;   cd \"${HOME}/.dotfiles/devbox\";   stow --target=\"${HOME}\" dotfiles;   cd \"${HOME}\";   sed -i -E 's/\\/(b?a)?sh/\\/zsh/' /etc/passwd;   /bin/zsh -c \"   source ~/.zshrc;   zgen save;\"   echo 'Zsh installed and configured';   yum erase -y stow;   yum clean all;   rm -rf /var/cache/yum;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux;   yum install -y neovim;   pip install --user neovim pipenv;   pip3 install --user neovim pipenv;   curl -sLf https://spacevim.org/install.sh | bash;   nvim --headless +'call dein#install()' +qall;   sed -i -e 's/\\x27/\"/g;' -e '/statusline_\\(inactive_\\)\\?separator/ s/\"[^\"]\\+\"/\"nil\"/g;' ${HOME}/.SpaceVim.d/init.toml;   yum clean all;   rm -rf /var/cache/yum;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux;   go get gopkg.in/mikefarah/yq.v2;   ln -s ${GOPATH}/bin/yq.v2 ${GOPATH}/bin/yq;   echo \"\";"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -eux;   curl -sSL https://get.haskellstack.org/ | sh -s - -f;   echo \"\";"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}