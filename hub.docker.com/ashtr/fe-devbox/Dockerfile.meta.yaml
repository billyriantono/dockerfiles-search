MetaArgs:
- DefaultValue: null
  Key: GIT_USER_NAME
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: GIT_USER_EMAIL
  ProvidedValue: null
  Value: null
- DefaultValue: null
  Key: HTTP_PROXY
  ProvidedValue: null
  Value: null
Stages:
- BaseName: node:carbon-alpine
  Commands:
  - Env:
    - Key: GIT_USER_NAME
      Value: ${GIT_USER_NAME:-"Ashish Gupta"}
    Name: env
  - Env:
    - Key: GIT_USER_EMAIL
      Value: ${GIT_USER_EMAIL:-"gotoashishgupta@gmail.com"}
    Name: env
  - Env:
    - Key: HTTP_PROXY
      Value: ${HTTP_PROXY}
    Name: env
  - Env:
    - Key: PATH
      Value: /usr/local/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANGUAGE
      Value: en_US:en
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: TERM
      Value: screen-256color
    Name: env
  - Env:
    - Key: PYTHONIOENCODING
      Value: UTF-8
    Name: env
  - Labels:
    - Key: AUTHOR
      Value: '"${GIT_USER_NAME} <${GIT_USER_EMAIL}>"'
    Name: label
  - CmdLine:
    - set -ex   && if [[ ${HTTP_PROXY} ]] && which yarn >/dev/null 2>&1; then   echo
      "Setting Proxy to ${HTTP_PROXY}";   yarn config set proxy ${HTTP_PROXY};   yarn
      config set https-proxy ${HTTP_PROXY};   yarn config set strict-ssl false ;   fi;   if
      which yarn >/dev/null 2>&1; then   yarn config set worspace-experimental true
      ;  fi;
    Name: run
    PrependShell: true
  - Env:
    - Key: PACKAGES
      Value: '"  bash   build-base   cmake   ctags   curl   dumb-init   git   go   linux-headers   musl-dev   neovim   neovim-doc   openssh   python3   python3-dev   tree   zsh   zsh-vcs   "'
    Name: env
  - CmdLine:
    - set -ex   && cp /etc/apk/repositories /etc/apk/repositories.bck   && echo -e
      "http://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories   &&
      echo -e "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories   &&
      echo -e "http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories   &&
      echo -e "http://dl-4.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories   &&
      echo -e "http://dl-4.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories   &&
      echo -e "http://dl-4.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories   &&
      echo
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && apk add --no-cache ${PACKAGES}   && python3 -m ensurepip   && pip3
      install --upgrade pip setuptools   && python3 -m pip install virtualenv   &&
      if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip; fi;   if [[ ! -e /usr/bin/python
      ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi;   python3 -m virtualenv
      -p python3 ~/.config/nvim/env   && source ~/.config/nvim/env/bin/activate   &&
      pip install neovim jedi psutil setproctitle yapf   && deactivate   && rm -rf
      /var/cache/apk/* /tmp/* *.tar.gz ~/.cache /usr/lib/python*/ensurepip   && mv
      /etc/apk/repositories.bck /etc/apk/repositories
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && git config --global user.email ${GIT_USER_EMAIL}   && git config
      --global user.name ${GIT_USER_NAME}
    Name: run
    PrependShell: true
  - Env:
    - Key: GOPATH
      Value: /go
    Name: env
  - Env:
    - Key: PATH
      Value: $GOPATH/bin:/usr/local/go/bin:$PATH
    Name: env
  - CmdLine:
    - mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && git clone https://github.com/powerline/fonts.git --depth=1 "${HOME}/fonts"   &&
      ${HOME}/fonts/install.sh && rm -rf ${HOME}/fonts   && git clone https://github.com/tarjoilija/zgen.git
      "${HOME}/.zgen"   && curl --insecure -fLo ~/.zshrc https://raw.githubusercontent.com/devcontainer/ts-dev/master/configs/_zshrc   &&
      sed -i -E "s/\/(b?a)?sh/\/zsh/" /etc/passwd   && /bin/zsh -c "source ~/.zshrc"   &&
      echo "zsh configured correctly"
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/zsh
    Name: env
  - CmdLine:
    - yarn global add typescript parcel-bundler gulp bower neovim
    Name: run
    PrependShell: true
  - CmdLine:
    - set -ex   && mkdir -p ~/.vim/autoload   && curl --insecure -fLo ~/.vim/autoload/plug.vim
      https://raw.githubusercontent.com/devcontainer/ts-dev/master/configs/_plug.vim   &&
      curl --insecure -fLo ~/.vimrc https://raw.githubusercontent.com/devcontainer/ts-dev/master/configs/_vimrc   &&
      mkdir -p ~/.config/nvim/autoload   && ln -sf ~/.vimrc ~/.config/nvim/init.vim   &&
      ln -sf ~/.vim/autoload/plug.vim ~/.config/nvim/autoload/   && nvim +PlugInstall
      +qall
    Name: run
    PrependShell: true
  - CmdLine:
    - nvim +'silent :GoInstallBinaries' +qall
    Name: run
    PrependShell: true
  - CmdLine:
    - nvim +UpdateRemotePlugins +qall
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/workspace
  - CmdLine:
    - dumb-init
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - nvim
    - .
    Name: cmd
    PrependShell: false
  From:
    Image: node:carbon-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM node:carbon-alpine
