{
  "MetaArgs": [
    {
      "Key": "GIT_USER_NAME",
      "DefaultValue": null,
      "ProvidedValue": null,
      "Value": null
    },
    {
      "Key": "GIT_USER_EMAIL",
      "DefaultValue": null,
      "ProvidedValue": null,
      "Value": null
    },
    {
      "Key": "HTTP_PROXY",
      "DefaultValue": null,
      "ProvidedValue": null,
      "Value": null
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "node:carbon-alpine",
      "SourceCode": "FROM node:carbon-alpine",
      "Platform": "",
      "From": {
        "Image": "node:carbon-alpine"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "GIT_USER_NAME",
              "Value": "${GIT_USER_NAME:-\"Ashish Gupta\"}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GIT_USER_EMAIL",
              "Value": "${GIT_USER_EMAIL:-\"gotoashishgupta@gmail.com\"}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HTTP_PROXY",
              "Value": "${HTTP_PROXY}"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "screen-256color"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PYTHONIOENCODING",
              "Value": "UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Labels": [
            {
              "Key": "AUTHOR",
              "Value": "\"${GIT_USER_NAME} \u003c${GIT_USER_EMAIL}\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 if [[ ${HTTP_PROXY} ]] \u0026\u0026 which yarn \u003e/dev/null 2\u003e\u00261; then   echo \"Setting Proxy to ${HTTP_PROXY}\";   yarn config set proxy ${HTTP_PROXY};   yarn config set https-proxy ${HTTP_PROXY};   yarn config set strict-ssl false ;   fi;   if which yarn \u003e/dev/null 2\u003e\u00261; then   yarn config set worspace-experimental true ;  fi;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PACKAGES",
              "Value": "\"  bash   build-base   cmake   ctags   curl   dumb-init   git   go   linux-headers   musl-dev   neovim   neovim-doc   openssh   python3   python3-dev   tree   zsh   zsh-vcs   \""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 cp /etc/apk/repositories /etc/apk/repositories.bck   \u0026\u0026 echo -e \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories   \u0026\u0026 echo -e \"http://dl-cdn.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories   \u0026\u0026 echo -e \"http://dl-cdn.alpinelinux.org/alpine/edge/main\" \u003e\u003e /etc/apk/repositories   \u0026\u0026 echo -e \"http://dl-4.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories   \u0026\u0026 echo -e \"http://dl-4.alpinelinux.org/alpine/edge/community\" \u003e\u003e /etc/apk/repositories   \u0026\u0026 echo -e \"http://dl-4.alpinelinux.org/alpine/edge/main\" \u003e\u003e /etc/apk/repositories   \u0026\u0026 echo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 apk add --no-cache ${PACKAGES}   \u0026\u0026 python3 -m ensurepip   \u0026\u0026 pip3 install --upgrade pip setuptools   \u0026\u0026 python3 -m pip install virtualenv   \u0026\u0026 if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip; fi;   if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi;   python3 -m virtualenv -p python3 ~/.config/nvim/env   \u0026\u0026 source ~/.config/nvim/env/bin/activate   \u0026\u0026 pip install neovim jedi psutil setproctitle yapf   \u0026\u0026 deactivate   \u0026\u0026 rm -rf /var/cache/apk/* /tmp/* *.tar.gz ~/.cache /usr/lib/python*/ensurepip   \u0026\u0026 mv /etc/apk/repositories.bck /etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 git config --global user.email ${GIT_USER_EMAIL}   \u0026\u0026 git config --global user.name ${GIT_USER_NAME}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \u0026\u0026 chmod -R 777 \"$GOPATH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 git clone https://github.com/powerline/fonts.git --depth=1 \"${HOME}/fonts\"   \u0026\u0026 ${HOME}/fonts/install.sh \u0026\u0026 rm -rf ${HOME}/fonts   \u0026\u0026 git clone https://github.com/tarjoilija/zgen.git \"${HOME}/.zgen\"   \u0026\u0026 curl --insecure -fLo ~/.zshrc https://raw.githubusercontent.com/devcontainer/ts-dev/master/configs/_zshrc   \u0026\u0026 sed -i -E \"s/\\/(b?a)?sh/\\/zsh/\" /etc/passwd   \u0026\u0026 /bin/zsh -c \"source ~/.zshrc\"   \u0026\u0026 echo \"zsh configured correctly\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/zsh"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "yarn global add typescript parcel-bundler gulp bower neovim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex   \u0026\u0026 mkdir -p ~/.vim/autoload   \u0026\u0026 curl --insecure -fLo ~/.vim/autoload/plug.vim https://raw.githubusercontent.com/devcontainer/ts-dev/master/configs/_plug.vim   \u0026\u0026 curl --insecure -fLo ~/.vimrc https://raw.githubusercontent.com/devcontainer/ts-dev/master/configs/_vimrc   \u0026\u0026 mkdir -p ~/.config/nvim/autoload   \u0026\u0026 ln -sf ~/.vimrc ~/.config/nvim/init.vim   \u0026\u0026 ln -sf ~/.vim/autoload/plug.vim ~/.config/nvim/autoload/   \u0026\u0026 nvim +PlugInstall +qall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "nvim +'silent :GoInstallBinaries' +qall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "nvim +UpdateRemotePlugins +qall"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/home/workspace"
        },
        {
          "CmdLine": [
            "dumb-init",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "nvim",
            "."
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}