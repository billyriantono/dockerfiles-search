MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Alvaro Denis <denisacostaq@gmailcom>
    Name: maintainer
  - Key: QT_VERSION
    Name: arg
    Value: 5.13.0
  - Key: NDK_VERSION
    Name: arg
    Value: r18b
  - Key: SDK_PLATFORM
    Name: arg
    Value: android-21
  - Key: SDK_BUILD_TOOLS
    Name: arg
    Value: 21.1.2
  - Key: CMAKE_VERSION
    Name: arg
    Value: 3.14.5
  - Key: SDK_PACKAGES
    Name: arg
    Value: '"tools platform-tools"'
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    - Key: QT_PATH
      Value: /opt/Qt
    Name: env
  - Env:
    - Key: QT_ANDROID
      Value: ${QT_PATH}/${QT_VERSION}/android_armv7
    Name: env
  - Env:
    - Key: ANDROID_HOME
      Value: /opt/android-sdk
    Name: env
  - Env:
    - Key: ANDROID_SDK_ROOT
      Value: ${ANDROID_HOME}
    - Key: ANDROID_NDK_ROOT
      Value: /opt/android-ndk
    - Key: ANDROID_NDK_TOOLCHAIN_PREFIX
      Value: arm-linux-androideabi
    - Key: ANDROID_NDK_TOOLCHAIN_VERSION
      Value: "4.9"
    - Key: ANDROID_NDK_HOST
      Value: linux-x86_64
    - Key: ANDROID_NDK_PLATFORM
      Value: ${SDK_PLATFORM}
    Name: env
  - Env:
    - Key: ANDROID_NDK_TOOLS_PREFIX
      Value: ${ANDROID_NDK_TOOLCHAIN_PREFIX}
    Name: env
  - Env:
    - Key: QMAKESPEC
      Value: android-g++
    Name: env
  - Env:
    - Key: PATH
      Value: ${QT_ANDROID}/bin:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}
    Name: env
  - CmdLine:
    - dpkg --add-architecture i386 && apt update && apt full-upgrade -y && apt install
      -y --no-install-recommends     wget     unzip     git     openssh-client     ca-certificates     locales     sudo     curl     make     openjdk-8-jdk-headless     openjdk-8-jre-headless     ant     libsm6     libice6     libxext6     libxrender1     libfontconfig1     libdbus-1-3     libx11-xcb1     libc6:i386     libncurses5:i386     libstdc++6:i386     libz1:i386     python3     p7zip-full     python3-pip     apt-utils     &&
      pip3 install requests     && apt-get -qq clean     && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${QT_PATH} && cd ${QT_PATH} && wget https://git.kaidan.im/lnj/qli-installer/raw/28d624d43010898320c1d1e40270024966689b14/qli-installer.py      &&
      chmod +x qli-installer.py && ./qli-installer.py 5.13.0 linux android android_armv7
      && rm qli-installer.py      && wget https://raw.githubusercontent.com/denisacostaq/qli-installer/master/qli-installer.py      &&
      chmod +x qli-installer.py && ./qli-installer.py 5.13.0 linux android android_armv7
      qtcharts      && cp -r output/5.13.0 . && rm -rf output qli-installer.py tmp
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lo /tmp/sdk-tools.zip 'https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip'     &&
      mkdir -p /opt/android-sdk && unzip -qq /tmp/sdk-tools.zip -d /opt/android-sdk
      && rm -f /tmp/sdk-tools.zip     && yes | sdkmanager --licenses && sdkmanager
      --update && sdkmanager --verbose "platforms;${SDK_PLATFORM}" "build-tools;${SDK_BUILD_TOOLS}"
      ${SDK_PACKAGES}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/android && cd /tmp/android && curl -Lo ndk.zip "https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux-x86_64.zip"     &&
      unzip -qq ndk.zip && mv android-ndk-* $ANDROID_NDK_ROOT && chmod -R +rX $ANDROID_NDK_ROOT     &&
      rm -rf /tmp/android
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO- https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz
      | sudo tar xzf - -C /opt/
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"/opt/cmake-${CMAKE_VERSION}-Linux-x86_64/bin:$PATH"'
    Name: env
  - CmdLine:
    - bash -cx 'sudo mkdir -p /opt/daqs && sudo chmod -R 777 /opt/daqs && wget -qO-
      https://github.com/protocolbuffers/protobuf/releases/download/v3.6.1/protobuf-cpp-3.6.1.tar.gz
      | tar xzf - -C /tmp/     && mkdir -p /tmp/protobuf-3.6.1/build && pushd /tmp/protobuf-3.6.1/build     &&
      cmake -Dprotobuf_BUILD_SHARED_LIBS=ON -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_BUILD_PROTOC_BINARIES=ON
      -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake
      -DCMAKE_INSTALL_PREFIX=/opt/daqs/protobuf -DANDROID_NDK=${ANDROID_NDK_ROOT}
      -DANDROID_TOOLCHAIN=clang -DANDROID_ABI=armeabi-v7a -DANDROID_NATIVE_API_LEVEL=21
      -DANDROID_STL=c++_shared -DANDROID_LINKER_FLAGS="-landroid -llog" -DANDROID_CPP_FEATURES="rtti
      exceptions" /tmp/protobuf-3.6.1/cmake     && make -C /tmp/protobuf-3.6.1/build
      install && popd && mkdir -p /tmp/protobuf-3.6.1/build     && pushd /tmp/protobuf-3.6.1/build
      && sudo apt-get install -y g++ && cmake -Dprotobuf_BUILD_SHARED_LIBS=OFF -Dprotobuf_BUILD_TESTS=OFF
      -DCMAKE_BUILD_TYPE=Release /tmp/protobuf-3.6.1/cmake     && make -C /tmp/protobuf-3.6.1/build
      && sudo apt-get purge -y g++ && mkdir -p /opt/daqs/protobuf/bin && cp -p /tmp/protobuf-3.6.1/build/protoc
      /opt/daqs/protobuf/bin/     && rm -rf /tmp/protobuf-3.6.1'
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_US.UTF-8 && dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - CmdLine:
    - 'groupadd -r user && useradd --create-home --gid user user && echo ''user ALL=NOPASSWD:
      ALL'' > /etc/sudoers.d/user'
    Name: run
    PrependShell: true
  - Name: user
    User: user
  - Name: workdir
    Path: /home/user
  - Env:
    - Key: HOME
      Value: /home/user
    Name: env
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
