MetaArgs: null
Stages:
- BaseName: openjdk:8-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Devops Nasajon <devops@nasajon.com.br>"'
    Name: label
  - Env:
    - Key: GLIBC_VERSION
      Value: 2.29-r0
    Name: env
  - Env:
    - Key: ANDROID_SDK_VERSION
      Value: "4333796"
    Name: env
  - Env:
    - Key: BUILD_TOOLS
      Value: 29.0.2
    Name: env
  - Env:
    - Key: TARGET_SDK
      Value: "28"
    Name: env
  - Env:
    - Key: GRADLE_VERSION
      Value: 5.6.4
    Name: env
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-1.8-openjdk
    Name: env
  - Env:
    - Key: ANDROID_HOME
      Value: /opt/android-sdk-linux
    Name: env
  - Env:
    - Key: ANDROID_SDK_ROOT
      Value: /opt/android-sdk-linux
    Name: env
  - Env:
    - Key: GRADLE_HOME
      Value: /opt/gradle-${GRADLE_VERSION}
    Name: env
  - Env:
    - Key: CORDOVA_ANDROID_GRADLE_DISTRIBUTION_URL
      Value: file://${GRADLE_HOME}-bin.zip
    Name: env
  - Env:
    - Key: PATH
      Value: ${PATH}:${JAVA_HOME}/bin:${ANDROID_SDK_ROOT}/tools/bin:${ANDROID_SDK_ROOT}/platform-tools:${ANDROID_SDK_ROOT}/emulator:${ANDROID_SDK_ROOT}/build-tools:${GRADLE_HOME}/bin
    Name: env
  - CmdLine:
    - apk add -U --no-cache     build-base     curl     git     npm     openssh     python     cairo-dev     giflib-dev     jpeg-dev     pango-dev  &&
      npm -g config set user $USER  && npm i -g --unsafe-perm ionic cordova native-run
      cordova-set-version  && ionic --no-interactive config set -g daemon.updates
      false  && cordova telemetry off
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Downloading glibc"  && curl -SLo /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub  &&
      curl -SLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk  &&
      curl -SLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk  &&
      apk add --no-cache glibc-${GLIBC_VERSION}.apk glibc-bin-${GLIBC_VERSION}.apk  &&
      rm -f /etc/apk/keys/sgerrand.rsa.pub glibc-${GLIBC_VERSION}.apk glibc-bin-${GLIBC_VERSION}.apk
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Downloading Android Tools"  && curl -SLO https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_VERSION}.zip  &&
      mkdir -p ${ANDROID_SDK_ROOT}  && unzip -d ${ANDROID_SDK_ROOT} sdk-tools-linux-${ANDROID_SDK_VERSION}.zip  &&
      rm -f sdk-tools-linux-${ANDROID_SDK_VERSION}.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Installing Android Tools"  && mkdir -p ~/.android/ && touch ~/.android/repositories.cfg  &&
      yes | ${ANDROID_SDK_ROOT}/tools/bin/sdkmanager "--licenses"  && ${ANDROID_SDK_ROOT}/tools/bin/sdkmanager
      "--update"  && ${ANDROID_SDK_ROOT}/tools/bin/sdkmanager "platform-tools" "build-tools;${BUILD_TOOLS}"
      "platforms;android-${TARGET_SDK}" "extras;android;m2repository" "extras;google;instantapps"
      "extras;google;m2repository"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Downloading Gradle"  && curl -SLO https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip  &&
      mkdir -p ${GRADLE_HOME}  && unzip -d /opt gradle-${GRADLE_VERSION}-bin.zip  &&
      mv gradle-${GRADLE_VERSION}-bin.zip ${GRADLE_HOME}-bin.zip  && gradle -v
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del curl  && mkdir -p $HOME/.android/avd  && mkdir /ionic
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /ionic
  - Name: expose
    Ports:
    - "8100"
  - Name: expose
    Ports:
    - "8200"
  - Name: expose
    Ports:
    - "35729"
  - Name: expose
    Ports:
    - "53703"
  - CmdLine:
    - ionic
    - serve
    - -l
    - --devapp
    - --address
    - 0.0.0.0
    - --lab-host
    - 0.0.0.0
    Name: cmd
    PrependShell: false
  From:
    Image: openjdk:8-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-alpine
