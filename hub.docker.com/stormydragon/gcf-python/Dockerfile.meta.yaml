MetaArgs: null
Stages:
- As: py_build
  BaseName: debian:stretch-slim
  Commands:
  - Env:
    - Key: PATH
      Value: /user_code/python/bin:$PATH
    Name: env
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - "apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates
      \t\tlibexpat1 \t\tlibffi6 \t\tlibgdbm3 \t\tlibreadline7 \t\tlibsqlite3-0 \t\tlibssl1.1
      \t\tnetbase \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GPG_KEY
      Value: 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.7.0
    Name: env
  - CmdLine:
    - "set -ex \t&& buildDeps=\" \t\tdpkg-dev \t\tgcc \t\tlibbz2-dev \t\tlibc6-dev
      \t\tlibexpat1-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tliblzma-dev \t\tlibncursesw5-dev
      \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tmake \t\ttcl-dev \t\ttk-dev
      \t\twget \t\txz-utils \t\tzlib1g-dev \t\t$(command -v gpg > /dev/null || echo
      'gnupg dirmngr') \t\" \t&& apt-get update && apt-get install -y $buildDeps --no-install-recommends
      && rm -rf /var/lib/apt/lists/* \t\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"
      \t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"
      \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net
      --recv-keys \"$GPG_KEY\" \t&& gpg --batch --verify python.tar.xz.asc python.tar.xz
      \t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \t&& mkdir -p /usr/src/python \t&&
      tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz
      \t\t&& cd /usr/src/python \t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"
      \t&& ./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions
      \t\t--enable-shared \t\t--with-system-expat \t\t--with-system-ffi \t\t--without-ensurepip
      \t\t--prefix=\"/user_code/python\" \t\tLDFLAGS=\"-Wl,--rpath=/user_code/python/lib\"
      \t&& make -j \"$(nproc)\" \t&& make install \t&& ldconfig \t\t&& apt-get purge
      -y --auto-remove $buildDeps \t\t&& find /user_code/python -depth \t\t\\( \t\t\t\\(
      -type d -a \\( -name test -o -name tests \\) \\) \t\t\t-o \t\t\t\\( -type f
      -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \t\t\\) -exec rm -rf '{}' + \t&&
      rm -rf /usr/src/python"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /user_code/python/bin \t&& ln -s idle3 idle \t&& ln -s pydoc3 pydoc \t&&
      ln -s python3 python \t&& ln -s python3-config python-config"
    Name: run
    PrependShell: true
  - CmdLine:
    - cp /usr/lib/x86_64-linux-gnu/libssl.so.1.1 /user_code/python/lib  && cp /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1
      /user_code/python/lib  && true
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 10.0.1
    Name: env
  - CmdLine:
    - "set -ex; \t\tapt-get update; \tapt-get install -y --no-install-recommends wget;
      \trm -rf /var/lib/apt/lists/*; \t\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py';
      \t\tapt-get purge -y --auto-remove wget; \t\tpython get-pip.py \t\t--disable-pip-version-check
      \t\t--no-cache-dir \t\t\"pip==$PYTHON_PIP_VERSION\" \t; \tpip --version; \t\tfind
      /user_code/python -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name
      tests \\) \\) \t\t\t-o \t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo'
      \\) \\) \t\t\\) -exec rm -rf '{}' +; \trm -f get-pip.py"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pipenv
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /user_code
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - cloud_func/Pipfile
    - cloud_func/Pipfile.lock
    - ./
  - CmdLine:
    - pipenv install --system --verbose
    Name: run
    PrependShell: true
  From:
    Image: debian:stretch-slim
  Name: py_build
  Platform: ""
  SourceCode: FROM debian:stretch-slim AS py_build
- As: final
  BaseName: gcr.io/google-appengine/nodejs
  Commands:
  - CmdLine:
    - install_node v6.14.0  && apt-get update  && apt-get install -y zip  && export
      CLOUD_SDK_REPO="cloud-sdk-jessie"  && echo "deb http://packages.cloud.google.com/apt
      $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list  &&
      curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -  &&
      apt-get update -y && apt-get install google-cloud-sdk -y
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /user_code
  - Chown: ""
    From: py_build
    Name: copy
    SourcesAndDest:
    - /user_code/python
    - /user_code/python
  - CmdLine:
    - zip -9 -ur package.zip .
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp/cloud_worker
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - google_cloud_worker/yarn.lock
    - google_cloud_worker/package.json
    - ./
  - CmdLine:
    - yarn install
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - google_cloud_worker/worker.js
    - ./
  - Name: workdir
    Path: /user_code
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - cloud_func/package.json
    - cloud_func/yarn.lock
    - ./
  - CmdLine:
    - yarn install
    Name: run
    PrependShell: true
  - CmdLine:
    - zip -9 -ur package.zip .
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - cloud_func
    - ./
  - Env:
    - Key: LC_ALL
      Value: '"C.UTF-8"'
    - Key: LANG
      Value: '"C.UTF-8"'
    Name: env
  - CmdLine:
    - zip -9 -ur package.zip .
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - deployer
    - /deployer
  - Expression: COPY Pipfile Pipfile.lock ./
    Name: onbuild
  - Expression: RUN /user_code/python/bin/python -m pipenv install --system
    Name: onbuild
  - Expression: COPY . ./user_code
    Name: onbuild
  - Expression: RUN zip -9 -ur package.zip .
    Name: onbuild
  - Env:
    - Key: GOOGLE_APPLICATION_CREDENTIALS
      Value: /service-account.json
    Name: env
  - CmdLine:
    - /user_code/python/bin/python
    - /deployer/deploy.py
    - --package=package.zip
    Name: entrypoint
    PrependShell: false
  From:
    Image: gcr.io/google-appengine/nodejs
  Name: final
  Platform: ""
  SourceCode: FROM gcr.io/google-appengine/nodejs as final
