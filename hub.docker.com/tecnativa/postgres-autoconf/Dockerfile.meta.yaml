MetaArgs:
- DefaultValue: null
  Key: BASE_TAG
  ProvidedValue: null
  Value: null
Stages:
- BaseName: docker.io/postgres:${BASE_TAG}
  Commands:
  - CmdLine:
    - /autoconf-entrypoint
    Name: entrypoint
    PrependShell: false
  - Env:
    - Key: CERTS
      Value: '"{}"'
    - Key: CONF_EXTRA
      Value: '""'
    - Key: LAN_AUTH_METHOD
      Value: md5
    - Key: LAN_CONNECTION
      Value: host
    - Key: LAN_DATABASES
      Value: '''["all"]'''
    - Key: LAN_HBA_TPL
      Value: '"{connection} {db} {user} {cidr} {meth}"'
    - Key: LAN_TLS
      Value: "0"
    - Key: LAN_USERS
      Value: '''["all"]'''
    - Key: WAN_AUTH_METHOD
      Value: cert
    - Key: WAN_CONNECTION
      Value: hostssl
    - Key: WAN_DATABASES
      Value: '''["all"]'''
    - Key: WAN_HBA_TPL
      Value: '"{connection} {db} {user} {cidr} {meth}"'
    - Key: WAN_TLS
      Value: "1"
    - Key: WAN_USERS
      Value: '''["all"]'''
    Name: env
  - CmdLine:
    - apk add --no-cache python3     && mkdir -p /etc/postgres     && chmod a=rwx
      /etc/postgres
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache -t .build         build-base         linux-headers         python3-dev     &&
      pip3 install --no-cache-dir         netifaces     && apk del .build
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - autoconf-entrypoint
    - /
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.vendor
      Value: Tecnativa
    - Key: org.label-schema.license
      Value: Apache-2.0
    - Key: org.label-schema.build-date
      Value: '"$BUILD_DATE"'
    - Key: org.label-schema.vcs-ref
      Value: '"$VCS_REF"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/Tecnativa/docker-postgres-autoconf"'
    Name: label
  From:
    Image: docker.io/postgres:${BASE_TAG}
  Name: ""
  Platform: ""
  SourceCode: FROM docker.io/postgres:${BASE_TAG}
