{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "Maintainer": "Ludek Vesely \u003cludek.vesely@email.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "KIBANA_VERSION",
              "Value": "4.0.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ES_VERSION",
              "Value": "1.5.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install software-properties-common -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:webupd8team/java -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install oracle-java8-installer -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-java-alternatives -s java-8-oracle"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install oracle-java8-set-default -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-$ES_VERSION.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "dpkg -i elasticsearch-$ES_VERSION.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-rc.d elasticsearch defaults 95 10"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"cluster.name: nehody\" \u003e /etc/elasticsearch/elasticsearch.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'node.name: \"nehody\"' \u003e\u003e /etc/elasticsearch/elasticsearch.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'index.number_of_shards: 1' \u003e\u003e /etc/elasticsearch/elasticsearch.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'index.number_of_replicas: 0' \u003e\u003e /etc/elasticsearch/elasticsearch.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'node.local: true' \u003e\u003e /etc/elasticsearch/elasticsearch.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'http.cors.enabled: true' \u003e\u003e /etc/elasticsearch/elasticsearch.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm *.deb"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install nodejs npm build-essential curl node -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install elasticdump -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ls -l /usr/local/lib/node_modules/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "nodejs /usr/local/lib/node_modules/elasticdump"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://public.ludekvesely.cz/dopravni-nehody/es-kibana-mapping.json -q; \twget http://public.ludekvesely.cz/dopravni-nehody/es-kibana-data.json -q; \twget http://public.ludekvesely.cz/dopravni-nehody/es-nehody-mapping.json -q; \twget http://public.ludekvesely.cz/dopravni-nehody/es-nehody-data.json -q"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/etc/init.d/elasticsearch start; sleep 8; \tcurl --silent -XPUT 'localhost:9200/.kibana'; \tcurl --silent -XPUT 'localhost:9200/nehody'; \tnodejs /usr/local/lib/node_modules/elasticdump/bin/elasticdump --input es-kibana-mapping.json --output=http://localhost:9200/.kibana --type=mapping; \tnodejs /usr/local/lib/node_modules/elasticdump/bin/elasticdump --input es-kibana-data.json --output=http://localhost:9200/.kibana --type=data; \tnodejs /usr/local/lib/node_modules/elasticdump/bin/elasticdump --input es-nehody-mapping.json --output=http://localhost:9200/nehody --type=mapping; \tnodejs /usr/local/lib/node_modules/elasticdump/bin/elasticdump --input es-nehody-data.json --output=http://localhost:9200/nehody --type=data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm *.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "wget https://download.elastic.co/kibana/kibana/kibana-$KIBANA_VERSION-linux-x64.tar.gz -q"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "tar xzf kibana-$KIBANA_VERSION-linux-x64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm kibana-$KIBANA_VERSION-linux-x64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '/etc/init.d/elasticsearch start; /root/kibana-'$KIBANA_VERSION'-linux-x64/bin/kibana' \u003erun.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -C '/root/run.sh';'bash'"
          ],
          "Name": "cmd",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "5601"
          ]
        }
      ]
    }
  ]
}