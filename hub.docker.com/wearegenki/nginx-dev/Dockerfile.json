{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.10@sha256:e4355b66995c96b4b468159fc5c7e3540fcef961189ca13fee877798649f531a",
      "SourceCode": "FROM alpine:3.10@sha256:e4355b66995c96b4b468159fc5c7e3540fcef961189ca13fee877798649f531a",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10@sha256:e4355b66995c96b4b468159fc5c7e3540fcef961189ca13fee877798649f531a"
      },
      "Commands": [
        {
          "CmdLine": [
            "set -xe \t\u0026\u0026 NGINX_VERSION=1.11.10 \t\u0026\u0026 GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \t\u0026\u0026 CONFIG=\"\t\t--prefix=/etc/nginx \t\t--sbin-path=/usr/sbin/nginx \t\t--modules-path=/usr/lib/nginx/modules \t\t--conf-path=/etc/nginx/nginx.conf \t\t--error-log-path=/var/log/nginx/error.log \t\t--http-log-path=/var/log/nginx/access.log \t\t--pid-path=/var/run/nginx.pid \t\t--lock-path=/var/run/nginx.lock \t\t--http-client-body-temp-path=/var/cache/nginx/client_temp \t\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \t\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \t\t--user=www \t\t--group=www \t\t--with-http_ssl_module \t\t--with-http_realip_module \t\t--with-pcre \t\t--with-pcre-jit \t\t--with-threads \t\t--with-file-aio \t\t--with-http_v2_module \t\t--without-http_uwsgi_module \t\t--without-http_scgi_module \t\t--without-http_memcached_module \t\t--without-http_empty_gif_module \t\t--without-http_upstream_hash_module \t\t--without-http_upstream_ip_hash_module \t\t--without-http_upstream_least_conn_module\t\t\" \t\u0026\u0026 addgroup -g 1333 -S www \t\u0026\u0026 adduser -D -u 1333 -S -h /var/cache/nginx -s /sbin/nologin -G www www \t\u0026\u0026 apk add --no-cache --virtual .build-deps \t\tcurl \t\tgcc \t\tgnupg \t\tlibc-dev \t\tlinux-headers \t\tmake \t\tlibressl-dev \t\tpcre-dev \t\tzlib-dev \t\u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \t\u0026\u0026 curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \t\u0026\u0026 gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \t\u0026\u0026 rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \t\u0026\u0026 mkdir -p /usr/src \t\u0026\u0026 tar -zxC /usr/src -f nginx.tar.gz \t\u0026\u0026 rm nginx.tar.gz \t\u0026\u0026 cd /usr/src/nginx-$NGINX_VERSION \t\u0026\u0026 export CFLAGS=\"-fstack-protector-strong -fpic -fpie -O3 -m64\" \t\t\t\t\t\tLDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\" \t\u0026\u0026 ./configure $CONFIG --with-debug \t\u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) \t\u0026\u0026 mv objs/nginx objs/nginx-debug \t\u0026\u0026 ./configure $CONFIG \t\u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) \t\u0026\u0026 make install \t\u0026\u0026 rm -rf /etc/nginx/html/ \t\u0026\u0026 mkdir /etc/nginx/conf.d/ \t\u0026\u0026 mkdir -p /usr/share/nginx/html/ \t\u0026\u0026 install -m644 html/index.html /usr/share/nginx/html/ \t\u0026\u0026 install -m644 html/50x.html /usr/share/nginx/html/ \t\u0026\u0026 install -m755 objs/nginx-debug /usr/sbin/nginx-debug \t\u0026\u0026 ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \t\u0026\u0026 strip /usr/sbin/nginx* \t\u0026\u0026 rm -rf /usr/src/nginx-$NGINX_VERSION \t\t\u0026\u0026 apk add --no-cache --virtual .gettext gettext \t\u0026\u0026 mv /usr/bin/envsubst /tmp/ \t\t\u0026\u0026 runDeps=\"$( \tscanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \t| sort -u \t| xargs -r apk info --installed \t| sort -u \t)\" \t\u0026\u0026 apk add --no-cache --virtual .nginx-rundeps $runDeps \t\u0026\u0026 apk del .build-deps \t\u0026\u0026 apk del .gettext \t\u0026\u0026 mv /tmp/envsubst /usr/local/bin/ \t\t\u0026\u0026 ln -sf /proc/self/fd/2 /var/log/nginx/access.log \t\u0026\u0026 ln -sf /proc/self/fd/2 /var/log/nginx/error.log \t\t\u0026\u0026 for i in $(find / -perm /6000 -type f); do chmod a-s $i; done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/",
            "/etc/nginx/conf/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf.d/default.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "80"
          ]
        },
        {
          "CmdLine": [
            "nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}