{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "builder",
      "BaseName": "registry.hub.docker.com/library/alpine:latest",
      "SourceCode": "FROM registry.hub.docker.com/library/alpine:latest AS builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "registry.hub.docker.com/library/alpine:latest"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "Maintainer",
              "Value": "\"Olliver Schinagl \u003coliver@schinagl.nl\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk add --no-cache        autoconf        automake        build-base        curl-dev        groff        libtool     \u0026\u0026     rm -rf \"/var/cache/apk/\"*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "\"./curl\"",
            "\"/curl\""
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"/curl\""
        },
        {
          "CmdLine": [
            "autoreconf -vif \u0026\u0026     ./configure         --disable-ldap         --enable-ipv6         --enable-unix-sockets         --prefix=/usr         --with-libssh2         --with-nghttp2         --with-pic         --with-ssl         --without-libidn         --without-libidn2     \u0026\u0026     make \u0026\u0026     make DESTDIR=\"/alpine/\" install"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "registry.hub.docker.com/library/alpine:latest",
      "SourceCode": "FROM registry.hub.docker.com/library/alpine:latest",
      "Platform": "",
      "From": {
        "Image": "registry.hub.docker.com/library/alpine:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache         curl     \u0026\u0026     rm -rf \"/var/cache/apk/\"* \u0026\u0026     for curlfile in $(apk info -L curl libcurl); do         if [ -f \"/${curlfile}\" ]; then             rm \"/${curlfile:?}\";         fi     done"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "\"/alpine/usr/lib/libcurl.so.4.5.0\"",
            "\"/usr/lib/libcurl.so.4.5.0\""
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "\"/alpine/usr/lib/libcurl.so.4\"",
            "\"/usr/lib/libcurl.so.4\""
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "\"/alpine/usr/lib/libcurl.so\"",
            "\"/usr/lib/libcurl.so\""
          ]
        },
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "\"/alpine/usr/bin/curl\"",
            "\"/usr/bin/curl\""
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "\"./docker-entrypoint.sh\"",
            "\"/docker-entrypoint.sh\""
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}