MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: BUILD_TOOLS_VERSION
      Value: 28.0.3
    Name: env
  - Env:
    - Key: ANDROID_SDK_VERSION
      Value: android-28
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: BASE_DEPS
      Value: '"openjdk-8-jdk wget expect git curl s3cmd gpg build-essential imagemagick
        librsvg2-bin ruby ruby-dev wget libcurl4-openssl-dev git"'
    Name: env
  - Env:
    - Key: NODE_DEPS
      Value: nodejs
    Name: env
  - CmdLine:
    - apt-get update -qq
    Name: run
    PrependShell: true
  - CmdLine:
    - DEBIAN_FRONTEND=noninteractive apt-get install -qy $BASE_DEPS
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -u 1000 -M -s /bin/bash android
    Name: run
    PrependShell: true
  - CmdLine:
    - chown 1000 /opt
    Name: run
    PrependShell: true
  - Name: user
    User: android
  - Env:
    - Key: ANDROID_SDK_HOME
      Value: /opt/android-sdk-linux
    Name: env
  - Env:
    - Key: ANDROID_HOME
      Value: /opt/android-sdk-linux
    Name: env
  - CmdLine:
    - cd /opt && wget -q https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz
      -O android-sdk.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && tar -xvzf android-sdk.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && rm -f android-sdk.tgz
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && wget -q https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip
      -O sdk-tools.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt/android-sdk-linux && unzip -o /opt/sdk-tools.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /opt && rm -f sdk-tools.zip
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '${PATH}:${ANDROID_SDK_HOME}/tools:${ANDROID_SDK_HOME}/platform-tools:${ANDROID_SDK_HOME}/tools/bin:'
    Name: env
  - CmdLine:
    - mkdir -p /opt/android-sdk-linux/.android/ && touch /opt/android-sdk-linux/.android/repositories.cfg
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | sdkmanager --licenses
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | sdkmanager 'ndk-bundle'
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | sdkmanager 'platform-tools'
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | sdkmanager "platforms;$ANDROID_SDK_VERSION"
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | sdkmanager "build-tools;$BUILD_TOOLS_VERSION"
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | sdkmanager "extras;android;m2repository"
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | sdkmanager "extras;google;m2repository"
    Name: run
    PrependShell: true
  - CmdLine:
    - yes | sdkmanager "extras;google;google_play_services"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - tools
    - /opt/tools
  - CmdLine:
    - yes | sdkmanager --licenses
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - CmdLine:
    - "echo \"Installing Node.JS\" \t&& curl -sL https://deb.nodesource.com/setup_10.x
      | bash -"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"Installing Additional Libraries\" \t && rm -rf /var/lib/gems \t && apt-get
      update && apt-get install $NODE_DEPS -qqy --no-install-recommends"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"Installing Fastlane\" \t&& gem install fastlane badge -N \t&& gem cleanup"
    Name: run
    PrependShell: true
  - CmdLine:
    - npm i -g yarn react-native-cli
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /opt/android-sdk-linux
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
