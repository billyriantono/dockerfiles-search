{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:jessie",
      "SourceCode": "FROM debian:jessie",
      "Platform": "",
      "From": {
        "Image": "debian:jessie"
      },
      "Commands": [
        {
          "Maintainer": "l.murawski",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y upgrade \u0026\u0026     apt-get -y install build-essential     python-dev     python-pip     vim     telnet \u0026\u0026     apt-get -y install freetds-dev \u0026\u0026     apt-get update --fix-missing"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y curl grep sed dpkg \u0026\u0026     TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:'` \u0026\u0026     curl -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" \u003e tini.deb \u0026\u0026     dpkg -i tini.deb \u0026\u0026     rm tini.deb \u0026\u0026     apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "requirements.txt",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "pip install -r /tmp/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CONF_DIR",
              "Value": "/conf"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $CONF_DIR \u0026\u0026  chown 65534:65534 $CONF_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "APP_DIR",
              "Value": "/app"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $APP_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "pacman.py",
            "$APP_DIR"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "ZabbixReader.py",
            "$APP_DIR"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "ssl",
            "/ssl"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "conf",
            "/conf"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$APP_DIR"
        },
        {
          "CmdLine": [
            "/usr/bin/tini",
            "--"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "python",
            "pacman.py"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}