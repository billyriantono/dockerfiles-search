{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "gomplate",
      "BaseName": "hairyhenderson/gomplate:v3.6.0-slim",
      "SourceCode": "FROM hairyhenderson/gomplate:v3.6.0-slim AS gomplate",
      "Platform": "",
      "As": "gomplate",
      "From": {
        "Image": "hairyhenderson/gomplate:v3.6.0-slim"
      },
      "Commands": null
    },
    {
      "Name": "docker",
      "BaseName": "docker:19.03.5",
      "SourceCode": "FROM docker:19.03.5 AS docker",
      "Platform": "",
      "As": "docker",
      "From": {
        "Image": "docker:19.03.5"
      },
      "Commands": null
    },
    {
      "Name": "compose",
      "BaseName": "docker/compose:1.25.1",
      "SourceCode": "FROM docker/compose:1.25.1 AS compose",
      "Platform": "",
      "As": "compose",
      "From": {
        "Image": "docker/compose:1.25.1"
      },
      "Commands": null
    },
    {
      "Name": "vault",
      "BaseName": "vault:0.11.6",
      "SourceCode": "FROM vault:0.11.6 AS vault",
      "Platform": "",
      "As": "vault",
      "From": {
        "Image": "vault:0.11.6"
      },
      "Commands": null
    },
    {
      "Name": "terraform",
      "BaseName": "hashicorp/terraform:0.12.18",
      "SourceCode": "FROM hashicorp/terraform:0.12.18 AS terraform",
      "Platform": "",
      "As": "terraform",
      "From": {
        "Image": "hashicorp/terraform:0.12.18"
      },
      "Commands": null
    },
    {
      "Name": "packer",
      "BaseName": "hashicorp/packer:1.5.1",
      "SourceCode": "FROM hashicorp/packer:1.5.1 AS packer",
      "Platform": "",
      "As": "packer",
      "From": {
        "Image": "hashicorp/packer:1.5.1"
      },
      "Commands": null
    },
    {
      "Name": "prometheus",
      "BaseName": "prom/prometheus:v2.15.2",
      "SourceCode": "FROM prom/prometheus:v2.15.2 AS prometheus",
      "Platform": "",
      "As": "prometheus",
      "From": {
        "Image": "prom/prometheus:v2.15.2"
      },
      "Commands": null
    },
    {
      "Name": "alertmanager",
      "BaseName": "prom/alertmanager:v0.20.0",
      "SourceCode": "FROM prom/alertmanager:v0.20.0 AS alertmanager",
      "Platform": "",
      "As": "alertmanager",
      "From": {
        "Image": "prom/alertmanager:v0.20.0"
      },
      "Commands": null
    },
    {
      "Name": "yq",
      "BaseName": "mikefarah/yq:2.4.1",
      "SourceCode": "FROM mikefarah/yq:2.4.1 AS yq",
      "Platform": "",
      "As": "yq",
      "From": {
        "Image": "mikefarah/yq:2.4.1"
      },
      "Commands": null
    },
    {
      "Name": "kubectl",
      "BaseName": "lachlanevenson/k8s-kubectl:v1.17.0",
      "SourceCode": "FROM lachlanevenson/k8s-kubectl:v1.17.0 AS kubectl",
      "Platform": "",
      "As": "kubectl",
      "From": {
        "Image": "lachlanevenson/k8s-kubectl:v1.17.0"
      },
      "Commands": null
    },
    {
      "Name": "helm",
      "BaseName": "lachlanevenson/k8s-helm:v2.16.1",
      "SourceCode": "FROM lachlanevenson/k8s-helm:v2.16.1 AS helm",
      "Platform": "",
      "As": "helm",
      "From": {
        "Image": "lachlanevenson/k8s-helm:v2.16.1"
      },
      "Commands": null
    },
    {
      "Name": "cc-test-reporter",
      "BaseName": "alpine:3.11.2",
      "SourceCode": "FROM alpine:3.11.2 AS cc-test-reporter",
      "Platform": "",
      "As": "cc-test-reporter",
      "From": {
        "Image": "alpine:3.11.2"
      },
      "Commands": [
        {
          "CmdLine": [
            "wget -q -O /bin/cc-test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /bin/cc-test-reporter"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "packages",
      "BaseName": "alpine:3.11.2",
      "SourceCode": "FROM alpine:3.11.2 AS packages",
      "Platform": "",
      "As": "packages",
      "From": {
        "Image": "alpine:3.11.2"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache     make     git     libgcc     python     py2-pip     bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GLIBC",
              "Value": "2.28-r0"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "awscli-requirements.txt",
            "requirements.txt"
          ]
        },
        {
          "CmdLine": [
            "pip install -r requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf requirements.txt ~/.cache"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC/glibc-$GLIBC.apk   \u0026\u0026 apk add --no-cache glibc-$GLIBC.apk   \u0026\u0026 rm glibc-$GLIBC.apk   \u0026\u0026 ln -s /lib/libz.so.1 /usr/glibc-compat/lib   \u0026\u0026 ln -s /lib/libc.musl-x86_64.so.1 /usr/glibc-compat/lib   \u0026\u0026 ln -s /usr/lib/libgcc_s.so.1 /usr/glibc-compat/lib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir hub \u0026\u0026     wget https://github.com/github/hub/releases/download/v2.12.2/hub-linux-amd64-2.12.2.tgz -O- |     tar xz --strip-components 1 --directory hub     \u0026\u0026 ./hub/install     \u0026\u0026 rm -r hub"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "build",
      "BaseName": "alpine:3.11.2",
      "SourceCode": "FROM alpine:3.11.2 AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "alpine:3.11.2"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "gomplate",
          "Name": "copy",
          "SourcesAndDest": [
            "/gomplate",
            "/bin/gomplate"
          ]
        },
        {
          "Chown": "",
          "From": "docker",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/docker",
            "/bin/docker"
          ]
        },
        {
          "Chown": "",
          "From": "vault",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/vault",
            "/bin/vault"
          ]
        },
        {
          "Chown": "",
          "From": "terraform",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/terraform",
            "/bin/terraform"
          ]
        },
        {
          "Chown": "",
          "From": "packer",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/packer",
            "/bin/packer"
          ]
        },
        {
          "Chown": "",
          "From": "prometheus",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/promtool",
            "/bin/promtool"
          ]
        },
        {
          "Chown": "",
          "From": "alertmanager",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/amtool",
            "/bin/amtool"
          ]
        },
        {
          "Chown": "",
          "From": "yq",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/bin/yq",
            "/usr/bin/yq"
          ]
        },
        {
          "Chown": "",
          "From": "compose",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/docker-compose",
            "/bin/docker-compose"
          ]
        },
        {
          "Chown": "",
          "From": "kubectl",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/kubectl",
            "/usr/local/bin/kubectl"
          ]
        },
        {
          "Chown": "",
          "From": "helm",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local/bin/helm",
            "/usr/local/bin/helm"
          ]
        },
        {
          "Chown": "",
          "From": "cc-test-reporter",
          "Name": "copy",
          "SourcesAndDest": [
            "/bin/cc-test-reporter",
            "/bin/cc-test-reporter"
          ]
        },
        {
          "Chown": "",
          "From": "packages",
          "Name": "copy",
          "SourcesAndDest": [
            "/",
            "/"
          ]
        }
      ]
    }
  ]
}