MetaArgs: null
Stages:
- BaseName: php:7.0-fpm
  Commands:
  - Key: TIMEZONE
    Name: arg
    Value: null
  - Maintainer: Danny Bollaert <Danny.Bollaert@gmail.com>
    Name: maintainer
  - CmdLine:
    - apt-get install curl -y
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_6.x | bash - && apt-get install nodejs
      -y
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install webpack -g
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install typescript -g
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install cli -g
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install webpack-cli -g
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install --force-yes -y     openssl     git     unzip     nodejs     openjdk-7-jdk     ant     devscripts     build-essential     lintian     ruby     ruby-dev     rubygems     gcc     make
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - composer --version
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install --no-ri --no-rdoc fpm
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -snf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime && echo ${TIMEZONE} >
      /etc/timezone
    Name: run
    PrependShell: true
  - CmdLine:
    - printf '[PHP]\ndate.timezone = "%s"\n', ${TIMEZONE} > /usr/local/etc/php/conf.d/tzone.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - '"date"'
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-enable xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "error_reporting = E_ALL" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "display_startup_errors = On" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "display_errors = On" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "xdebug.remote_enable=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "xdebug.remote_connect_back=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "xdebug.idekey=\"PHPSTORM\"" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "xdebug.remote_port=9001" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias sf="php app/console"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias sf3="php bin/console"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /root/.ssh
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /root/.composer
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "Host *\n\tStrictHostKeyChecking no\n" >> /root/.ssh/config
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install libldap2-dev -y
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install ldap
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_PATH
      Value: '"/usr/local/bin/composer"'
    Name: env
  - CmdLine:
    - mkdir -p /var/www/symfony
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - package.json
    - /var/www/symfony/package.json
  - Chown: ""
    Name: add
    SourcesAndDest:
    - composer.json
    - /var/www/symfony/composer.json
  - CmdLine:
    - cd /var/www/symfony/ && npm install && composer update
    Name: run
    PrependShell: true
  - Env:
    - Key: NODE_PATH
      Value: /var/www/symfony
    Name: env
  - CmdLine:
    - rm /var/www/symfony/package.json
    Name: run
    PrependShell: true
  - CmdLine:
    - rm /var/www/symfony/composer.json
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /var/www/symfony/node_modules /opt/.
    Name: run
    PrependShell: true
  - CmdLine:
    - cp -r /var/www/symfony/vendor /opt/.
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - config.json
    - /root/.composer/config.json
  - Name: workdir
    Path: /var/www/symfony
  From:
    Image: php:7.0-fpm
  Name: ""
  Platform: ""
  SourceCode: FROM php:7.0-fpm
