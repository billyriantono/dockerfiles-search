{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "dceoy/r-tidyverse:latest",
          "Name": "copy",
          "SourcesAndDest": [
            "/usr/local",
            "/usr/local"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://bootstrap.pypa.io/get-pip.py",
            "/tmp/get-pip.py"
          ]
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 ln -sf /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 apt-get -y update       \u0026\u0026 apt-get -y install --no-install-recommends --no-install-suggests         apt-transport-https apt-utils ca-certificates gnupg       \u0026\u0026 echo \"deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/\"         \u003e /etc/apt/sources.list.d/r.list       \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com         --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9       \u0026\u0026 apt-get -y update       \u0026\u0026 apt-get -y dist-upgrade       \u0026\u0026 apt-get -y install --no-install-recommends --no-install-suggests         curl file g++ gcc gfortran git make libblas-dev libcurl4-gnutls-dev         libgit2-dev liblapack-dev libmariadb-client-lgpl-dev libpq-dev         libsqlite3-dev libssh2-1-dev libssl-dev libunwind-dev libxml2-dev         lmodern locales p7zip-full pandoc pbzip2 pigz python3.8-dev         texlive-fonts-recommended texlive-generic-recommended texlive-xetex         r-base       \u0026\u0026 apt-get -y autoremove       \u0026\u0026 apt-get clean       \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 locale-gen en_US.UTF-8       \u0026\u0026 update-locale"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 python3.8 /tmp/get-pip.py       \u0026\u0026 pip install -U --no-cache-dir         bash_kernel jupyter jupyter_contrib_nbextensions jupyterthemes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 clir update       \u0026\u0026 clir install --devt=cran dbplyr doParallel foreach ggpubr rmarkdown tidyverse       \u0026\u0026 clir validate dbplyr doParallel foreach ggpubr rmarkdown tidyverse"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/notebook"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 mkdir ${HOME}       \u0026\u0026 python3.8 -m bash_kernel.install       \u0026\u0026 clir install --devt=github IRkernel/IRkernel       \u0026\u0026 R -q -e 'IRkernel::installspec()'       \u0026\u0026 jupyter contrib nbextension install --system       \u0026\u0026 jt --theme oceans16 -f ubuntu --toolbar --nbname --vimext       \u0026\u0026 find ${HOME} -exec chmod 777 {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "jupyter"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "notebook",
            "--port=8888",
            "--ip=0.0.0.0",
            "--allow-root",
            "--no-browser"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}