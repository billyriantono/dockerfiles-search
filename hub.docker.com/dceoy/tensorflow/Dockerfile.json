{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:10.2-cudnn7-runtime",
      "SourceCode": "FROM nvidia/cuda:10.2-cudnn7-runtime",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:10.2-cudnn7-runtime"
      },
      "Commands": [
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://bootstrap.pypa.io/get-pip.py",
            "/tmp/get-pip.py"
          ]
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 ln -sf /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 apt-get -y purge python3*       \u0026\u0026 apt-get -y update       \u0026\u0026 apt-get -y dist-upgrade       \u0026\u0026 apt-get -y install --no-install-recommends --no-install-suggests         curl libfreetype6-dev libhdf5-dev libpng-dev libzmq3-dev locales         p7zip-full pandoc pbzip2 pigz pkg-config python3.7-dev         python3.7-distutils rsync texlive-fonts-recommended         texlive-generic-recommended texlive-xetex unzip       \u0026\u0026 apt-get -y autoremove       \u0026\u0026 apt-get clean       \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 locale-gen en_US.UTF-8       \u0026\u0026 update-locale"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 ln -sf /usr/bin/python3.7 /usr/bin/python       \u0026\u0026 ln -sf /usr/bin/python3.7 /usr/bin/python3       \u0026\u0026 /usr/bin/python /tmp/get-pip.py       \u0026\u0026 pip install -U         autopep8 bash_kernel cython feather-format flake8 flake8-bugbear         flake8-isort ggplot jupyter jupyter_contrib_nbextensions         jupyterthemes keras matplotlib pandas pep8-naming pip seaborn         tensorflow-gpu tqdm       \u0026\u0026 rm -f /tmp/get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/notebook"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -e       \u0026\u0026 mkdir ${HOME}       \u0026\u0026 /usr/bin/python -m bash_kernel.install       \u0026\u0026 jupyter contrib nbextension install --system       \u0026\u0026 jt --theme oceans16 --toolbar --nbname --vimext       \u0026\u0026 find ${HOME} -exec chmod 777 {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "6006"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8888"
          ]
        },
        {
          "CmdLine": [
            "jupyter"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "notebook",
            "--port=8888",
            "--ip=0.0.0.0",
            "--allow-root",
            "--no-browser"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}