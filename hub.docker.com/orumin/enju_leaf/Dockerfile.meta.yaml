MetaArgs: null
Stages:
- As: node
  BaseName: node:8.15-alpine
  Commands: null
  From:
    Image: node:8.15-alpine
  Name: node
  Platform: ""
  SourceCode: FROM node:8.15-alpine as node
- BaseName: ruby:2.6-alpine3.8
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"https://github.com/orumin/enju_leaf"'
    Name: label
  - Key: UID
    Name: arg
    Value: "991"
  - Key: GID
    Name: arg
    Value: "991"
  - Key: DB_USER
    Name: arg
    Value: enju_leaf
  - Env:
    - Key: DB_USER
      Value: ${DB_USER:-enju_leaf}
    Name: env
  - Env:
    - Key: DB_PASS
      Value: admin
    Name: env
  - Env:
    - Key: DB_NAME
      Value: enju_leaf_production
    Name: env
  - Env:
    - Key: DB_HOST
      Value: db
    Name: env
  - Env:
    - Key: RAILS_SERVE_STATIC_FILES
      Value: "true"
    Name: env
  - Env:
    - Key: REDIS_URL
      Value: redis://redis/enju_leaf
    Name: env
  - Env:
    - Key: SOLR_URL
      Value: http://solr:8983/solr/default
    Name: env
  - Env:
    - Key: RAILS_ENV
      Value: production
    Name: env
  - Name: expose
    Ports:
    - "3000"
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/node
    - /usr/local/bin/node
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /usr/local/lib/node_modules
    - /usr/local/lib/node_modules
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /usr/local/bin/npm
    - /usr/local/bin/npm
  - Chown: ""
    From: node
    Name: copy
    SourcesAndDest:
    - /opt/yarn-*
    - /opt/yarn
  - CmdLine:
    - 'apk add --no-cache --virtual .build-deps     build-base     icu-dev     libressl     libxslt-dev     postgresql-dev     zlib-dev  &&
      apk add --no-cache     busybox-suid     bash     file     git     openjdk8-jre-base     icu-libs     imagemagick     libpq     libxslt     redis     tini     tzdata     unzip  &&
      update-ca-certificates  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn  &&
      ln -s /opt/yarn/bin/yarnpkg /usr/local/bin/yarnpkg  && gem install bundler -v=1.17.2  &&
      gem install rails -v=5.1.6  && gem install foreman whenever  && rails _5.1.6_
      new enju_leaf -d postgresql --skip-bundle --skip-turbolinks     -m https://gist.github.com/nabeta/6c56f0edf5cc1c80d9c655c2660a9c59.txt  &&
      cd enju_leaf  && bundle config --local path vendor/bundle  && bundle config
      --local without test:development:doc  && bundle install -j$(getconf _NPROCESSORS_ONLN)  &&
      rm -rf /enju_leaf/vendor/bundle/ruby/2.6.0/cache  && rm -rf /root/.bundle/cache  &&
      sed -i -e "s/\(skip_after_action :verify_authorized\)/\1, raise: false/"     $(find
      . -type f -name ''*.rb'' -exec grep -H ''verify_authorized'' {} \;       | grep
      skip_after_action       | awk -F: ''{print $1}'')  && sed -i -e "s/\(skip_before_action
      :store_current_location\)/\1, raise: false/"     $(find . -type f -name ''*.rb''
      -exec grep -H ''store_current_location'' {} \;       | grep skip_before_action       |
      awk -F: ''{print $1}'')  && apk del --purge .build-deps'
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /enju_leaf
  - CmdLine:
    - addgroup -g ${GID} ${DB_USER} && adduser -h /enju_leaf -s /bin/sh -D -G ${DB_USER}
      -u ${UID} ${DB_USER}  && chown -R ${DB_USER}:${DB_USER} /enju_leaf
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache postgresql openrc  && mkdir -p /run/openrc /run/postgresql  &&
      touch /run/openrc/softlevel  && /etc/init.d/postgresql setup  && chown postgres:postgres
      /run/postgresql && chown postgres:postgres /var/lib/postgresql  && su postgres
      -c "nohup sh -c 'pg_ctl start -- --pgdata=/var/lib/postgresql/10/data'"  &&
      sleep 10  && su postgres -c "echo create user ${DB_USER} with password \'${DB_PASS}\'
      createdb\; | psql -f -"  && su postgres -c "createdb -U ${DB_USER} ${DB_NAME}"  &&
      su enju_leaf -c 'SECRET_KEY_BASE=placeholder bundle exec rails g enju_leaf:setup'  &&
      su enju_leaf -c 'SECRET_KEY_BASE=placeholder bundle exec rails g enju_leaf:quick_install'  &&
      apk del --purge postgresql openrc  && rm -rf log tmp  && rm -rf /var/lib/postgresql  &&
      cd /run  && rm -rf openrc postgresql
    Name: run
    PrependShell: true
  - Name: user
    User: ${DB_USER}
  - CmdLine:
    - whenever --update-crontab
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - resque.rb
    - config/initializers/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - database.yml
    - resque.yml
    - sunspot.yml
    - config/
  - CmdLine:
    - /sbin/tini
    - --
    Name: entrypoint
    PrependShell: false
  From:
    Image: ruby:2.6-alpine3.8
  Name: ""
  Platform: ""
  SourceCode: FROM ruby:2.6-alpine3.8
