{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "system",
      "BaseName": "ubuntu:18.10",
      "SourceCode": "FROM ubuntu:18.10 as system",
      "Platform": "",
      "As": "system",
      "From": {
        "Image": "ubuntu:18.10"
      },
      "Commands": [
        {
          "CmdLine": [
            "ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends software-properties-common curl apache2-utils     \u0026\u0026 curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor \u003e microsoft.gpg     \u0026\u0026 install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/     \u0026\u0026 sh -c 'echo \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\" \u003e /etc/apt/sources.list.d/vscode.list'     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends --allow-unauthenticated     supervisor nginx sudo vim-tiny net-tools zenity xz-utils     dbus-x11 x11-utils     mesa-utils libgl1-mesa-dri     lxde xvfb x11vnc     gtk2-engines-murrine gnome-themes-standard gtk2-engines-pixbuf gtk2-engines-murrine arc-theme     firefox     ttf-ubuntu-font-family     apt-transport-https nano git ssh rsync php7.2 php7.2-mbstring php7.2-gd     php7.2-bz2 php7.2-zip php7.2-bz2 php7.2-zip php-gmagick iputils-ping     gnupg libgconf-2-4 apache2 php-xdebug libapache2-mod-xsendfile php7.2-mysql     mysql-workbench mysql-client unzip code mongo-tools     \u0026\u0026 apt-get autoclean     \u0026\u0026 apt-get autoremove     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "TINI_VERSION",
          "Name": "arg",
          "Value": "v0.18.0"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini",
            "/bin/tini"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /bin/tini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "image/usr/local/lib/web/backend/requirements.txt",
            "/tmp/"
          ]
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 dpkg-query -W -f='${Package}\\n' \u003e /tmp/a.txt     \u0026\u0026 apt-get install -y python-pip python-dev build-essential     \u0026\u0026 pip install setuptools wheel \u0026\u0026 pip install -r /tmp/requirements.txt     \u0026\u0026 dpkg-query -W -f='${Package}\\n' \u003e /tmp/b.txt     \u0026\u0026 apt-get remove -y `diff --changed-group-format='%\u003e' --unchanged-group-format='' /tmp/a.txt /tmp/b.txt | xargs`     \u0026\u0026 apt-get autoclean -y     \u0026\u0026 apt-get autoremove -y     \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 rm -rf /var/cache/apt/* /tmp/a.txt /tmp/b.txt"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "builder",
      "BaseName": "ubuntu:16.04",
      "SourceCode": "FROM ubuntu:16.04 as builder",
      "Platform": "",
      "As": "builder",
      "From": {
        "Image": "ubuntu:16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends curl ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_8.x | bash -     \u0026\u0026 apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -     \u0026\u0026 echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y yarn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "web",
            "/src/web"
          ]
        },
        {
          "CmdLine": [
            "cd /src/web     \u0026\u0026 yarn     \u0026\u0026 npm run build"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "system",
      "SourceCode": "FROM system",
      "Platform": "",
      "From": {
        "Stage": {
          "Named": "system",
          "Index": 0
        }
      },
      "Commands": [
        {
          "Chown": "",
          "From": "builder",
          "Name": "copy",
          "SourcesAndDest": [
            "/src/web/dist/",
            "/usr/local/lib/web/frontend/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "image",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/ubuntu"
            },
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Health": {
            "Interval": 30000000000,
            "Test": [
              "CMD-SHELL",
              "curl --fail http://127.0.0.1:6079/api/health"
            ],
            "Timeout": 5000000000
          },
          "Name": "healthcheck"
        },
        {
          "CmdLine": [
            "/startup.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}