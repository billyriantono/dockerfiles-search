{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.8",
      "SourceCode": "FROM alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "alpine:3.8"
      },
      "Commands": [
        {
          "Key": "FUNKWHALE_VERSION",
          "Name": "arg",
          "Value": "0.17"
        },
        {
          "Key": "FUNKWHALE_REPO_URL",
          "Name": "arg",
          "Value": "https://dev.funkwhale.audio/funkwhale/funkwhale"
        },
        {
          "Key": "FUNKWHALE_DOWNLOAD_URL",
          "Name": "arg",
          "Value": "$FUNKWHALE_REPO_URL/-/jobs/artifacts/$FUNKWHALE_VERSION/download"
        },
        {
          "Env": [
            {
              "Key": "FUNKWHALE_PROTOCOL",
              "Value": "http"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DJANGO_SETTINGS_MODULE",
              "Value": "config.settings.production"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DJANGO_SECRET_KEY",
              "Value": "funkwhale"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DJANGO_ALLOWED_HOSTS",
              "Value": "'127.0.0.1,*'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DATABASE_URL",
              "Value": "postgresql://funkwhale@:5432/funkwhale"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MEDIA_ROOT",
              "Value": "/data/media"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MUSIC_DIRECTORY_PATH",
              "Value": "/music"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_MAX_BODY_SIZE",
              "Value": "100M"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/just-containers/s6-overlay/releases/download/v1.21.7.0/s6-overlay-amd64.tar.gz",
            "/tmp/s6-overlay.tar.gz"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://github.com/acoustid/chromaprint/releases/download/v1.4.2/chromaprint-fpcalc-1.4.2-linux-x86_64.tar.gz",
            "/tmp/fpcalc.tar.gz"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "$FUNKWHALE_DOWNLOAD_URL?job=build_api",
            "/tmp/api.zip"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "$FUNKWHALE_DOWNLOAD_URL?job=build_front",
            "/tmp/front.zip"
          ]
        },
        {
          "CmdLine": [
            "echo 'installing dependencies' \u0026\u0026 \tapk add                \t\tshadow             \t\tyoutube-dl         \t\tgettext            \t\tgit                \t\tpostgresql         \t\tpostgresql-contrib \t\tpostgresql-dev     \t\tpython3-dev        \t\tpy3-psycopg2       \t\tpy3-pillow         \t\tredis              \t\tnginx              \t\tmusl-dev           \t\tgcc                \t\tunzip              \t\tlibldap            \t\tlibsasl            \t\tffmpeg             \t\tlibpq              \t\tlibmagic           \t\tlibffi-dev         \t\tzlib-dev           \t\topenldap-dev \u0026\u0026 \t\t\techo 'creating directories' \u0026\u0026 \tmkdir -p /app /run/nginx /run/postgresql /var/log/funkwhale \u0026\u0026 \t\t\techo 'creating users' \u0026\u0026 \tadduser -s /bin/false -D -H funkwhale funkwhale \u0026\u0026 \t\t\techo 'extracting archives' \u0026\u0026 \tcd /app \u0026\u0026 \tunzip /tmp/api.zip \u0026\u0026 \tunzip /tmp/front.zip \u0026\u0026 \ttar --strip 1 -C /usr/local/bin -xzf /tmp/fpcalc.tar.gz \u0026\u0026 \ttar -C / -xzf /tmp/s6-overlay.tar.gz \u0026\u0026 \t\t\techo 'setting up nginx' \u0026\u0026 \trm /etc/nginx/conf.d/default.conf \u0026\u0026 \t\t\techo 'installing pip requirements' \u0026\u0026 \tpip3 install --upgrade pip \u0026\u0026 \tpip3 install setuptools wheel \u0026\u0026 \tpip3 install -r /app/api/requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./root",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/init"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}