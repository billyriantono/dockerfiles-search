{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "library/alpine:3.8",
      "SourceCode": "FROM library/alpine:3.8",
      "Platform": "",
      "From": {
        "Image": "library/alpine:3.8"
      },
      "Commands": [
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "build_version",
              "Value": "\"version:- ${VERSION} Build-date:- ${BUILD_DATE}\""
            }
          ],
          "Name": "label"
        },
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"thetarkus\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "echo \"**** install build packages ****\" \u0026\u0026   apk add --no-cache --virtual=build-dependencies     cmake     ffmpeg-dev     g++     gcc     git     jpeg-dev     libpng-dev     make     mpg123-dev     openjpeg-dev     libxml2-dev     libxslt-dev     python3-dev \u0026\u0026       echo \"**** install runtime packages ****\" \u0026\u0026   apk add --no-cache     curl     expat     ffmpeg     ffmpeg-libs     gdbm     gst-plugins-good     gstreamer     jpeg     lame     libffi     libpng     mpg123     nano     openjpeg     py3-gobject3     py3-pip     python3     sqlite-libs     tar     wget \u0026\u0026       echo \"**** compile mp3gain ****\" \u0026\u0026   mkdir -p /tmp/mp3gain-src \u0026\u0026   curl -o /tmp/mp3gain-src/mp3gain.zip -L https://sourceforge.net/projects/mp3gain/files/mp3gain/1.6.2/mp3gain-1_6_2-src.zip \u0026\u0026   cd /tmp/mp3gain-src \u0026\u0026   unzip -qq /tmp/mp3gain-src/mp3gain.zip \u0026\u0026   sed -i \"s#/usr/local/bin#/usr/bin#g\" /tmp/mp3gain-src/Makefile \u0026\u0026   make \u0026\u0026 make install \u0026\u0026       echo \"**** compile chromaprint ****\" \u0026\u0026   git clone https://bitbucket.org/acoustid/chromaprint.git /tmp/chromaprint \u0026\u0026   cd /tmp/chromaprint \u0026\u0026   cmake     -DBUILD_TOOLS=ON     -DCMAKE_BUILD_TYPE=Release     -DCMAKE_INSTALL_PREFIX:PATH=/usr \u0026\u0026   make \u0026\u0026 make install \u0026\u0026       echo \"**** install pip packages ****\" \u0026\u0026   pip3 install --no-cache-dir -U     beautifulsoup4     git+https://github.com/beetbox/beets     beets-copyartifacts     discogs-client     gmusicapi     flask     pillow     pip     pyacoustid     pylast     requests     unidecode \u0026\u0026       echo \"**** create user ****\" \u0026\u0026   addgroup -S beets \u0026\u0026   adduser --shell /bin/sh -S beets -G beets \u0026\u0026       echo \"**** cleanup ****\" \u0026\u0026   apk del --purge build-dependencies \u0026\u0026   rm -rf     /root/.cache     /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "BEETSDIR",
              "Value": "\"/config\""
            },
            {
              "Key": "EDITOR",
              "Value": "\"nano\""
            },
            {
              "Key": "HOME",
              "Value": "\"/config\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/",
            "/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "8337"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/downloads",
            "/music"
          ]
        },
        {
          "CmdLine": [
            "/init.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}