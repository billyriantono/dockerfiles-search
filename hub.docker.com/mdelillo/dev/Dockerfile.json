{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "mdelillo/base",
      "SourceCode": "FROM mdelillo/base",
      "Platform": "",
      "From": {
        "Image": "mdelillo/base"
      },
      "Commands": [
        {
          "Key": "golang_version",
          "Name": "arg",
          "Value": "1.8.3"
        },
        {
          "Key": "ruby_version",
          "Name": "arg",
          "Value": "2.4.1"
        },
        {
          "Key": "chruby_version",
          "Name": "arg",
          "Value": "0.3.9"
        },
        {
          "Key": "ruby_install_version",
          "Name": "arg",
          "Value": "0.6.1"
        },
        {
          "CmdLine": [
            "apt-add-repository ppa:git-core/ppa \u0026\u0026       apt-get -y update \u0026\u0026       apt-get -y install git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y       g++       gcc       libc6-dev       make       pkg-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L \"https://golang.org/dl/go${golang_version}.linux-amd64.tar.gz\" | tar -C /usr/local -xvz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" \u0026\u0026 chmod -R 755 \"$GOPATH\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get github.com/onsi/ginkgo/ginkgo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L \"https://github.com/postmodern/chruby/archive/v${chruby_version}.tar.gz\" | tar -C /tmp -xvz \u0026\u0026       cd /tmp/chruby-${chruby_version} \u0026\u0026       make install \u0026\u0026       rm -rf /tmp/chruby-${chruby_version}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L \"https://github.com/postmodern/ruby-install/archive/v${ruby_install_version}.tar.gz\" | tar -C /tmp -xvz \u0026\u0026       cd /tmp/ruby-install-${ruby_install_version} \u0026\u0026       make install \u0026\u0026       rm -rf /tmp/ruby-install-${ruby_install_version}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ruby-install ruby-${ruby_version}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"source /usr/local/share/chruby/chruby.sh\" \u003e\u003e $HOME/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"source /usr/local/share/chruby/auto.sh\" \u003e\u003e $HOME/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"ruby-${ruby_version}\" \u003e /.ruby-version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "add-apt-repository ppa:neovim-ppa/stable \u0026\u0026       apt-get -y update \u0026\u0026       apt-get -y install         neovim         python-dev         python-pip         python3-dev         python3-setuptools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "easy_install3 pip \u0026\u0026       pip2 install --user neovim \u0026\u0026       pip3 install --user neovim"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "update-alternatives --install /usr/bin/vi vi /usr/bin/nvim 60 \u0026\u0026       update-alternatives --config vi \u0026\u0026       update-alternatives --install /usr/bin/vim vim /usr/bin/nvim 60 \u0026\u0026       update-alternatives --config vim \u0026\u0026       update-alternatives --install /usr/bin/editor editor /usr/bin/nvim 60 \u0026\u0026       update-alternatives --config editor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/luan/vimfiles $HOME/.vim \u0026\u0026       $HOME/.vim/update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}