{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "vkill/protobuf:3.3",
      "SourceCode": "FROM vkill/protobuf:3.3",
      "Platform": "",
      "From": {
        "Image": "vkill/protobuf:3.3"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PROTOBUF_VERSION",
              "Value": "3.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROTOBUF_DOWNLOAD_URL",
              "Value": "https://github.com/google/protobuf/archive/v3.3.0.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROTOBUF_DOWNLOAD_SHA256",
              "Value": "94c414775f275d876e5e0e4a276527d155ab2d0da45eed6b7734301c330be36e"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_MAJOR",
              "Value": "5.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_VERSION",
              "Value": "5.3.4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_DOWNLOAD_URL",
              "Value": "https://www.lua.org/ftp/lua-5.3.4.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUA_DOWNLOAD_SHA256",
              "Value": "f681aa518233bc407e23acf0f5887c884f17436f000d453b2491a9f11a52400c"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 wget -O lua.tar.gz \"${LUA_DOWNLOAD_URL}\"   \u0026\u0026 echo \"${LUA_DOWNLOAD_SHA256} *lua.tar.gz\" | sha256sum -c -     \u0026\u0026 mkdir -p /usr/src/lua   \u0026\u0026 tar -xzf lua.tar.gz -C /usr/src/lua --strip-components=1   \u0026\u0026 rm lua.tar.gz     \u0026\u0026 cd /usr/src/lua     \u0026\u0026 make linux test MYCFLAGS=\"-x c++\" CC=\"g++\"   \u0026\u0026 make linux install MYCFLAGS=\"-x c++\" CC=\"g++\"     \u0026\u0026 cd /   \u0026\u0026 rm -r /usr/src/lua"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LUAROCKS_VERSION",
              "Value": "2.4.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAROCKS_DOWNLOAD_URL",
              "Value": "http://luarocks.github.io/luarocks/releases/luarocks-2.4.2.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAROCKS_DOWNLOAD_SHA256",
              "Value": "0e1ec34583e1b265e0fbafb64c8bd348705ad403fe85967fd05d3a659f74d2e5"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 runDeps='     unzip   '   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y --no-install-recommends $runDeps   \u0026\u0026 rm -rf /var/lib/apt/lists/*     \u0026\u0026 wget -O luarocks.tar.gz \"${LUAROCKS_DOWNLOAD_URL}\"   \u0026\u0026 echo \"${LUAROCKS_DOWNLOAD_SHA256} *luarocks.tar.gz\" | sha256sum -c -     \u0026\u0026 mkdir -p /usr/src/luarocks   \u0026\u0026 tar -xzf luarocks.tar.gz -C /usr/src/luarocks --strip-components=1   \u0026\u0026 rm luarocks.tar.gz     \u0026\u0026 cd /usr/src/luarocks     \u0026\u0026 ./configure --lua-version=${LUA_MAJOR} --with-lua=/usr/local   \u0026\u0026 make build   \u0026\u0026 make install     \u0026\u0026 cd /   \u0026\u0026 rm -r /usr/src/luarocks"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LUAINTF_DOWNLOAD_URL",
              "Value": "https://github.com/SteveKChiu/lua-intf/archive/master.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LUAPBINTF_DOWNLOAD_URL",
              "Value": "https://github.com/jinq0123/LuaPbIntf/archive/master.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 wget -O luapbintf.tar.gz \"${LUAPBINTF_DOWNLOAD_URL}\"     \u0026\u0026 mkdir -p /usr/src/luapbintf   \u0026\u0026 tar -xzf luapbintf.tar.gz -C /usr/src/luapbintf --strip-components=1   \u0026\u0026 rm luapbintf.tar.gz     \u0026\u0026 cd /usr/src/luapbintf       \u0026\u0026 mkdir -p /usr/src/luapbintf/third_party/lua   \u0026\u0026 wget -O lua.tar.gz \"${LUA_DOWNLOAD_URL}\"   \u0026\u0026 echo \"${LUA_DOWNLOAD_SHA256} *lua.tar.gz\" | sha256sum -c -   \u0026\u0026 tar -xzf lua.tar.gz -C /usr/src/luapbintf/third_party/lua --strip-components=1   \u0026\u0026 rm lua.tar.gz       \u0026\u0026 mkdir -p /usr/src/luapbintf/third_party/protobuf   \u0026\u0026 wget -O protobuf.tar.gz \"${PROTOBUF_DOWNLOAD_URL}\"   \u0026\u0026 echo \"${PROTOBUF_DOWNLOAD_SHA256} *protobuf.tar.gz\" | sha256sum -c -   \u0026\u0026 tar -xzf protobuf.tar.gz -C /usr/src/luapbintf/third_party/protobuf --strip-components=1   \u0026\u0026 rm protobuf.tar.gz       \u0026\u0026 mkdir -p /usr/src/luapbintf/third_party/lua-intf   \u0026\u0026 wget -O luaintf.tar.gz \"${LUAINTF_DOWNLOAD_URL}\"   \u0026\u0026 tar -xzf luaintf.tar.gz -C /usr/src/luapbintf/third_party/lua-intf --strip-components=1   \u0026\u0026 rm luaintf.tar.gz       \u0026\u0026 cd /usr/src/luapbintf/build   \u0026\u0026 sed -i 's!TARGETDIR = bin/Release!TARGETDIR = /usr/local/lib/lua/${LUA_MAJOR}!' LuaPbIntf.make   \u0026\u0026 make config=release   \u0026\u0026 lua -l luapbintf     \u0026\u0026 cd /   \u0026\u0026 rm -r /usr/src/luapbintf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "lua",
            "-l",
            "luapbintf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}