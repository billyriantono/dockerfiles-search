MetaArgs: null
Stages:
- BaseName: node:4-slim
  Commands:
  - CmdLine:
    - groupadd user && useradd --create-home --home-dir /home/user -g user user
    Name: run
    PrependShell: true
  - Env:
    - Key: GOSU_VERSION
      Value: "1.7"
    Name: env
  - CmdLine:
    - "set -x \t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture)\" \t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg
      --print-architecture).asc\" \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg
      --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
      \t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t&& rm
      -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t&& chmod +x /usr/local/bin/gosu
      \t&& gosu nobody true"
    Name: run
    PrependShell: true
  - Env:
    - Key: GHOST_SOURCE
      Value: /usr/src/ghost
    Name: env
  - Name: workdir
    Path: $GHOST_SOURCE
  - Env:
    - Key: GHOST_VERSION
      Value: 1.0.0-alpha.21
    Name: env
  - Env:
    - Key: CASPAR_VERSION
      Value: 1.3.6
    Name: env
  - CmdLine:
    - "set -ex; \t\tbuildDeps=' \t\tgcc \t\tmake \t\tpython \t\tunzip \t'; \tapt-get
      update; \tapt-get install -y $buildDeps --no-install-recommends; \trm -rf /var/lib/apt/lists/*;
      \t\twget -O ghost.zip \"https://github.com/Stek-io/Ghost/archive/${GHOST_VERSION}.zip\";
      \tunzip ghost.zip;         \twget -O caspar.zip \"https://github.com/Stek-io/Casper/archive/${CASPAR_VERSION}.zip\";
      \        unzip caspar.zip; \t        mv \"Ghost-${GHOST_VERSION}\"/* . && mv
      \"Ghost-${GHOST_VERSION}\"/.* . && rmdir \"Ghost-${GHOST_VERSION}\";                 mv
      \"Casper-${CASPAR_VERSION}\"/* ./content/themes/casper/. && mv \"Ghost-${CASPAR_VERSION}\"/.*
      \ ./content/themes/casper/. && rmdir \"Ghost-${CASPAR_VERSION}\";         \tnpm
      install --production; \t\tapt-get purge -y --auto-remove $buildDeps; \t\trm
      ghost.zip; \tnpm cache clean; \trm -rf /tmp/npm*"
    Name: run
    PrependShell: true
  - Env:
    - Key: GHOST_CONTENT
      Value: /var/lib/ghost
    Name: env
  - CmdLine:
    - "mkdir -p \"$GHOST_CONTENT\" \t&& chown -R user:user \"$GHOST_CONTENT\" \t&&
      ln -s \"$GHOST_CONTENT/config.js\" \"$GHOST_SOURCE/config.js\""
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $GHOST_CONTENT
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /usr/local/bin/
  - CmdLine:
    - 'ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat'
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Name: expose
    Ports:
    - "2368"
  - CmdLine:
    - npm
    - start
    Name: cmd
    PrependShell: false
  From:
    Image: node:4-slim
  Name: ""
  Platform: ""
  SourceCode: FROM node:4-slim
