{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:17.04",
      "SourceCode": "FROM ubuntu:17.04",
      "Platform": "",
      "From": {
        "Image": "ubuntu:17.04"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "python2Versions",
              "Value": "'python2.7'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "python3Versions",
              "Value": "'python3.5 python3.6'"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "pythonVersions",
              "Value": "\"$python2Versions $python3Versions\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y --no-install-recommends $pythonVersions     \u0026\u0026 apt-get install -y $(for pyver in $pythonVersions; do echo $pyver-dev; done)     \u0026\u0026 apt-get install -y $(for py3ver in $python3Versions; do echo $py3ver-venv; done)     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install time netcat gettext libjpeg-dev curl git-core build-essential          make build-essential libssl-dev zlib1g-dev libbz2-dev          libreadline-dev libsqlite3-dev -y     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "get-pip.py",
            "/tmp/get-pip.py"
          ]
        },
        {
          "CmdLine": [
            "for pybin in $pythonVersions; do $pybin /tmp/get-pip.py; done \u0026\u0026 rm -rf /tmp/get-pip.py"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y virtualenv     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s `which python2.7` /usr/bin/python2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s `which virtualenv` /usr/local/bin/virtualenv-2.7"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y          apt-transport-https          ca-certificates          software-properties-common     \u0026\u0026 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -     \u0026\u0026 add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y docker-ce     \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-compose",
            "/usr/local/bin/docker-compose"
          ]
        }
      ]
    }
  ]
}