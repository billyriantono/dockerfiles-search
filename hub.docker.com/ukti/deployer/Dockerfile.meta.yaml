MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: CF_CLI_VER
      Value: 6.47.2
    Name: env
  - Env:
    - Key: NVM_VER
      Value: 0.35.1
    Name: env
  - Env:
    - Key: JABBA_VER
      Value: 0.11.2
    Name: env
  - Env:
    - Key: RVM_VER
      Value: 1.29.9
    Name: env
  - Env:
    - Key: CF_CONDUIT_VER
      Value: 0.0.8
    Name: env
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - groupadd -g 1000 ubuntu &&     useradd -u 1000 -g 1000 -m -s /bin/bash ubuntu
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "force-unsafe-io" > /etc/dpkg/dpkg.cfg.d/02apt-speedup &&     apt-get update
      &&     apt-get install -y curl wget git apt-transport-https ca-certificates
      gnupg2 software-properties-common build-essential libpq-dev libssl-dev zlib1g-dev
      libbz2-dev libreadline-dev libsqlite3-dev llvm libncurses5-dev libncursesw5-dev
      xz-utils tk-dev postgresql-client &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&     apt-get install -y python3 python3-pip ruby-full rubygems
      bundler gettext jq &&     rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lfs https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key
      | apt-key add - &&     echo "deb https://packages.cloudfoundry.org/debian stable
      main" > /etc/apt/sources.list.d/cloudfoundry-cli.list &&     apt-get update
      &&     apt-get install -y --allow-unauthenticated cf-cli=$CF_CLI_VER &&     rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade awscli virtualenv pip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lfs https://cli-assets.heroku.com/install-ubuntu.sh | bash
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - Gemfile*
    - /tmp/
  - CmdLine:
    - gem install bundler &&     bundle check || bundle install --gemfile=/tmp/Gemfile
    Name: run
    PrependShell: true
  - Name: user
    User: ubuntu:ubuntu
  - Env:
    - Key: HOME
      Value: /home/ubuntu
    Name: env
  - CmdLine:
    - cf install-plugin -f https://github.com/alphagov/paas-cf-conduit/releases/download/v$CF_CONDUIT_VER/cf-conduit.linux.amd64
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lfs https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
      | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lfs https://github.com/creationix/nvm/raw/v$NVM_VER/install.sh | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lfs https://rvm.io/mpapis.asc | gpg2 --import - &&     curl -Lfs https://rvm.io/pkuczynski.asc
      | gpg2 --import - &&     curl -Lfs https://get.rvm.io | bash -s -- --autolibs=disable
      --version $RVM_VER
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lfs https://github.com/shyiko/jabba/raw/$JABBA_VER/install.sh | bash
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/syndbg/goenv.git ~/.goenv
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="$HOME/.pyenv/bin:$PATH"' >> $HOME/.profile &&     echo 'eval
      "$(pyenv init -)"\neval "$(pyenv virtualenv-init -)"' >> $HOME/.profile &&     echo
      'export NVM_DIR="$HOME/.nvm"\n[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"'
      >> $HOME/.profile &&     echo 'export GOENV_ROOT="$HOME/.goenv"' >> $HOME/.profile
      &&     echo 'export PATH="$GOENV_ROOT/bin:$PATH"' >> $HOME/.profile &&     echo
      'eval "$(goenv init -)"' >> $HOME/.profile &&     echo 'export PATH="$GOROOT/bin:$PATH"'
      >> $HOME/.profile &&     echo 'export PATH="$GOPATH/bin:$PATH"' >> $HOME/.profile
    Name: run
    PrependShell: true
  - CmdLine:
    - bash
    - -c
    Name: entrypoint
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
