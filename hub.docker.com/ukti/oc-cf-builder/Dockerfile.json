{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "cloudfoundry/cflinuxfs2:1.189.0",
      "SourceCode": "FROM cloudfoundry/cflinuxfs2:1.189.0",
      "Platform": "",
      "From": {
        "Image": "cloudfoundry/cflinuxfs2:1.189.0"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "io.openshift.s2i.destination",
              "Value": "\"/opt/s2i/destination\""
            },
            {
              "Key": "io.openshift.s2i.scripts-url",
              "Value": "image:///usr/libexec/s2i"
            }
          ],
          "Name": "label"
        },
        {
          "Env": [
            {
              "Key": "HEROKUISH_VERSION",
              "Value": "0.3.35"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "STATICFILE_BUILDPACK_VERSION",
              "Value": "1.4.29"
            },
            {
              "Key": "JAVA_BUILDPACK_VERSION",
              "Value": "4.12"
            },
            {
              "Key": "RUBY_BUILDPACK_VERSION",
              "Value": "1.7.21"
            },
            {
              "Key": "NODEJS_BUILDPACK_VERSION",
              "Value": "1.6.28"
            },
            {
              "Key": "GO_BUILDPACK_VERSION",
              "Value": "1.8.25"
            },
            {
              "Key": "PYTHON_BUILDPACK_VERSION",
              "Value": "1.6.18"
            },
            {
              "Key": "PHP_BUILDPACK_VERSION",
              "Value": "4.3.57"
            },
            {
              "Key": "BINARY_BUILDPACK_VERSION",
              "Value": "1.0.21"
            },
            {
              "Key": "MULTI_BUILDPACK_VERSION",
              "Value": "1.0.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CF_STACK",
              "Value": "cflinuxfs2"
            },
            {
              "Key": "MEMORY_LIMIT",
              "Value": "2G"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/vcap"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$HOME/bin:$PATH"
            },
            {
              "Key": "TMPDIR",
              "Value": "$HOME/tmp"
            },
            {
              "Key": "STI_SCRIPTS_PATH",
              "Value": "/usr/libexec/s2i"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "APP_PATH",
              "Value": "$HOME/app"
            },
            {
              "Key": "ENV_PATH",
              "Value": "$TMPDIR/env"
            },
            {
              "Key": "BUILD_PATH",
              "Value": "$TMPDIR/build"
            },
            {
              "Key": "CACHE_PATH",
              "Value": "$TMPDIR/cache"
            },
            {
              "Key": "IMPORT_PATH",
              "Value": "$TMPDIR/app"
            },
            {
              "Key": "BUILDPACK_PATH",
              "Value": "$TMPDIR/buildpacks"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "1001"
            },
            {
              "Key": "PORT",
              "Value": "8080"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir -p $HOME/.pki/nssdb \u0026\u0026     chown -R $USER:0 $HOME/.pki \u0026\u0026     useradd -u $USER -r -g 0 -d $HOME -s /sbin/nologin -c \"Default Application User\" default \u0026\u0026     mkdir -p $TMPDIR \u0026\u0026     chown -R 1001:0 $HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "$PORT"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "CmdLine": [
            "mkdir -p $STI_SCRIPTS_PATH"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/assemble",
            "bin/run",
            "bin/vcap_env",
            "/${STI_SCRIPTS_PATH}/"
          ]
        },
        {
          "CmdLine": [
            "curl -Lfs https://github.com/gliderlabs/herokuish/releases/download/v{$HEROKUISH_VERSION}/herokuish_${HEROKUISH_VERSION}_linux_x86_64.tgz | tar -xzC /bin \u0026\u0026     ln -s /bin/herokuish /build \u0026\u0026     ln -s /bin/herokuish /start \u0026\u0026     ln -s /bin/herokuish /exec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $BUILDPACK_PATH/staticfile-buildpack \u0026\u0026     wget -nv -O /tmp/staticfile-buildpack.zip \"https://github.com/cloudfoundry/staticfile-buildpack/releases/download/v${STATICFILE_BUILDPACK_VERSION}/staticfile-buildpack-v${STATICFILE_BUILDPACK_VERSION}.zip\" \u0026\u0026     unzip /tmp/staticfile-buildpack.zip -d $BUILDPACK_PATH/staticfile-buildpack \u0026\u0026     rm -f /tmp/staticfile-buildpack.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $BUILDPACK_PATH/java-buildpack \u0026\u0026     wget -nv -O /tmp/java-buildpack.zip \"https://github.com/cloudfoundry/java-buildpack/releases/download/v${JAVA_BUILDPACK_VERSION}/java-buildpack-v${JAVA_BUILDPACK_VERSION}.zip\" \u0026\u0026     unzip /tmp/java-buildpack.zip -d $BUILDPACK_PATH/java-buildpack/ \u0026\u0026     rm -f /tmp/java-buildpack.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $BUILDPACK_PATH/ruby-buildpack \u0026\u0026     wget -nv -O /tmp/ruby-buildpack.zip \"https://github.com/cloudfoundry/ruby-buildpack/releases/download/v${RUBY_BUILDPACK_VERSION}/ruby-buildpack-v${RUBY_BUILDPACK_VERSION}.zip\" \u0026\u0026     unzip /tmp/ruby-buildpack.zip -d $BUILDPACK_PATH/ruby-buildpack/ \u0026\u0026     rm -f /tmp/ruby-buildpack.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $BUILDPACK_PATH/nodejs-buildpack \u0026\u0026     wget -nv -O /tmp/nodejs-buildpack.zip \"https://github.com/cloudfoundry/nodejs-buildpack/releases/download/v${NODEJS_BUILDPACK_VERSION}/nodejs-buildpack-v${NODEJS_BUILDPACK_VERSION}.zip\" \u0026\u0026     unzip /tmp/nodejs-buildpack.zip -d $BUILDPACK_PATH/nodejs-buildpack/ \u0026\u0026     rm -f /tmp/nodejs-buildpack.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $BUILDPACK_PATH/go-buildpack \u0026\u0026     wget -nv -O /tmp/go-buildpack.zip \"https://github.com/cloudfoundry/go-buildpack/releases/download/v${GO_BUILDPACK_VERSION}/go-buildpack-v${GO_BUILDPACK_VERSION}.zip\" \u0026\u0026     unzip /tmp/go-buildpack.zip -d $BUILDPACK_PATH/go-buildpack/ \u0026\u0026     rm -f /tmp/go-buildpack.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $BUILDPACK_PATH/python-buildpack \u0026\u0026     wget -nv -O /tmp/python-buildpack.zip \"https://github.com/cloudfoundry/python-buildpack/releases/download/v${PYTHON_BUILDPACK_VERSION}/python-buildpack-v${PYTHON_BUILDPACK_VERSION}.zip\" \u0026\u0026     unzip /tmp/python-buildpack.zip -d $BUILDPACK_PATH/python-buildpack/ \u0026\u0026     rm -f /tmp/python-buildpack.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $BUILDPACK_PATH/php-buildpack \u0026\u0026     wget -nv -O /tmp/php-buildpack.zip \"https://github.com/cloudfoundry/php-buildpack/releases/download/v${PHP_BUILDPACK_VERSION}/php-buildpack-v${PHP_BUILDPACK_VERSION}.zip\" \u0026\u0026     unzip /tmp/php-buildpack.zip -d $BUILDPACK_PATH/php-buildpack/ \u0026\u0026     rm -f /tmp/php-buildpack.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $BUILDPACK_PATH/binary-buildpack \u0026\u0026     wget -nv -O /tmp/binary-buildpack.zip \"https://github.com/cloudfoundry/binary-buildpack/releases/download/v${BINARY_BUILDPACK_VERSION}/binary-buildpack-v${BINARY_BUILDPACK_VERSION}.zip\" \u0026\u0026     unzip /tmp/binary-buildpack.zip -d $BUILDPACK_PATH/binary-buildpack/ \u0026\u0026     rm -f /tmp/binary-buildpack.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $BUILDPACK_PATH/multi-buildpack \u0026\u0026     wget -nv -O /tmp/multi-buildpack.zip \"https://github.com/cloudfoundry/multi-buildpack/releases/download/v${MULTI_BUILDPACK_VERSION}/multi-buildpack-v${MULTI_BUILDPACK_VERSION}.zip\" \u0026\u0026     unzip /tmp/multi-buildpack.zip -d $BUILDPACK_PATH/multi-buildpack/ \u0026\u0026     rm -f /tmp/multi-buildpack.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /opt/s2i/destination/src \u0026\u0026     chown -R $USER:$USER /opt/s2i/destination/src \u0026\u0026     chmod -R go+rw /opt/s2i/destination \u0026\u0026     chmod +x $STI_SCRIPTS_PATH/* \u0026\u0026     mkdir -p $APP_PATH $ENV_PATH $BUILD_PATH $CACHE_PATH $TMPDIR \u0026\u0026     chown -R $USER:$USER $APP_PATH $ENV_PATH $BUILD_PATH $CACHE_PATH $TMPDIR \u0026\u0026     chmod -R go+rw $APP_PATH $ENV_PATH $BUILD_PATH $CACHE_PATH $TMPDIR \u0026\u0026     ln -snf $APP_PATH /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $HOME/bin     \u0026\u0026 echo '' \u003e $HOME/bin/usermod     \u0026\u0026 echo '' \u003e $HOME/bin/chown     \u0026\u0026 echo 'shift\\neval \"$@\"' \u003e $HOME/bin/setuidgid     \u0026\u0026 chmod +x $HOME/bin/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$USER"
        }
      ]
    }
  ]
}