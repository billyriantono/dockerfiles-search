MetaArgs: null
Stages:
- BaseName: alpine:3.10
  Commands:
  - Key: FLAVOUR
    Name: arg
    Value: null
  - Key: APP_VERSION
    Name: arg
    Value: 2018.03.28.1
  - Env:
    - Key: APP_VERSION
      Value: ${APP_VERSION}
    Name: env
  - Env:
    - Key: APP_HOME
      Value: /app
    Name: env
  - Name: workdir
    Path: ${APP_HOME}
  - CmdLine:
    - set -xe;   addgroup -S www-data   && adduser -S -D -H -h ${APP_HOME} -s /sbin/nologin
      -G www-data www-data   && case "${FLAVOUR}" in     odbc) build_deps='unixodbc-dev';
      run_deps='unixodbc'; pip_deps='pyodbc' ;;     mssql) build_deps='freetds-dev
      cython2'; run_deps='freetds'; pip_deps='pymssql' ;;     mysql) build_deps='mariadb-dev';
      run_deps='mariadb-connector-c'; pip_deps='mysqlclient' ;;     pgsql) build_deps='postgresql-dev';
      run_deps='libpq'; pip_deps='psycopg2' ;;     sqlite3) build_deps=''; run_deps='';
      pip_deps='noop' ;;     *) echo "unsupported flavour ${FLAVOUR}"; exit 1 ;;   esac   &&
      apk add --no-cache     uwsgi-python     python2     py2-pip     libressl     libldap     libxslt     xmlsec     uwsgi     curl     $run_deps   &&
      apk add --no-cache --virtual .build-deps     build-base     python2-dev     libxml2-dev     xmlsec-dev     libffi-dev     openldap-dev     $build_deps   &&
      mkdir -p     "${APP_HOME}/migrations"     "${APP_HOME}/uploads/avatar"     "${APP_HOME}/saml"   &&
      curl -sSL "https://github.com/thomasDOTde/PowerDNS-Admin/archive/${APP_VERSION}.tar.gz"   |
      tar -xzf - --strip-components 1   && find . -type f -iname '*.psd' -delete   &&
      find . -type d -name examples -exec rm -rf {} +   && pip2 install     --no-cache-dir     -r
      requirements.txt   && pip2 install     --no-cache-dir     pytz     pyOpenSSL     $pip_deps   &&
      chown -R www-data:www-data     "${APP_HOME}"   && apk del .build-deps
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9191"
    - "9393"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - create_db_user.py
    - ${APP_HOME}/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - bin/
    - /usr/local/bin/
  - Name: volume
    Volumes:
    - ${APP_HOME}/migrations
    - ${APP_HOME}/uploads
    - ${APP_HOME}/saml
  - Health:
      Interval: 60000000000
      StartPeriod: 10000000000
      Test:
      - CMD-SHELL
      - curl -sf http://127.0.0.1:9393 || exit 1
      Timeout: 3000000000
    Name: healthcheck
  - CmdLine:
    - /usr/local/bin/docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - uwsgi
    - --master
    - --processes=4
    - --threads=2
    Name: cmd
    PrependShell: false
  - Key: BUILD_DATE
    Name: arg
    Value: '"1970-01-01T00:00:00Z"'
  - Key: REVISION
    Name: arg
    Value: '"0"'
  - Key: VCS_URL
    Name: arg
    Value: '"http://localhost/"'
  - Key: VCS_REF
    Name: arg
    Value: '"master"'
  - Labels:
    - Key: org.opencontainers.image.created
      Value: $BUILD_DATE
    - Key: org.opencontainers.image.title
      Value: '"PowerDNS Admin"'
    - Key: org.opencontainers.image.description
      Value: '"PowerDNS Web-GUI"'
    - Key: org.opencontainers.image.url
      Value: '"https://github.com/thomasDOTde/PowerDNS-Admin"'
    - Key: org.opencontainers.image.source
      Value: $VCS_URL
    - Key: org.opencontainers.image.revision
      Value: $VCS_REF
    - Key: org.opencontainers.image.vendor
      Value: '"Khanh Ngo"'
    - Key: org.opencontainers.image.version
      Value: '"${APP_VERSION}-${REVISION}"'
    - Key: com.microscaling.docker.dockerfile
      Value: '"/powerdns-admin/Dockerfile"'
    - Key: org.opencontainers.image.licenses
      Value: '"MIT"'
    Name: label
  From:
    Image: alpine:3.10
  Name: ""
  Platform: ""
  SourceCode: FROM alpine:3.10
