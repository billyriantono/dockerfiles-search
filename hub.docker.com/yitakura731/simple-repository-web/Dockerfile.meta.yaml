MetaArgs: null
Stages:
- As: build-stage
  BaseName: node:lts-alpine
  Commands:
  - Key: APP_NAME
    Name: arg
    Value: null
  - Key: REPOSITORY_URL
    Name: arg
    Value: null
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - /src/
  - Name: workdir
    Path: /src/
  - CmdLine:
    - npm install &&     APP_NAME=${APP_NAME} REPOSITORY_URL=${REPOSITORY_URL} npm
      run generate
    Name: run
    PrependShell: true
  From:
    Image: node:lts-alpine
  Name: build-stage
  Platform: ""
  SourceCode: FROM node:lts-alpine as build-stage
- As: production-stage
  BaseName: nginx
  Commands:
  - Key: APP_NAME
    Name: arg
    Value: null
  - Chown: ""
    From: build-stage
    Name: copy
    SourcesAndDest:
    - ./src/dist/
    - /usr/share/nginx/html/${APP_NAME}
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./default.conf.ssl.template
    - /etc/nginx/conf.d/default.conf.template
  - CmdLine:
    - /bin/bash
    - -c
    - envsubst '$$APP_NAME$$REPOSITORY_URL$$WEB_SERVER_PORT$$SSL_CERT_PATH$$SSL_KEY_PATH'
      < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf &&
      nginx -g 'daemon off;'
    Name: cmd
    PrependShell: false
  From:
    Image: nginx
  Name: production-stage
  Platform: ""
  SourceCode: FROM nginx as production-stage
