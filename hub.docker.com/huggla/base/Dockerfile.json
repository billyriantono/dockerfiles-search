{
  "MetaArgs": [
    {
      "Key": "SaM_VERSION",
      "DefaultValue": "\"1.0\"",
      "ProvidedValue": null,
      "Value": "\"1.0\""
    },
    {
      "Key": "TAG",
      "DefaultValue": "\"20191018\"",
      "ProvidedValue": null,
      "Value": "\"20191018\""
    },
    {
      "Key": "IMAGETYPE",
      "DefaultValue": "\"secure_and_minimal\"",
      "ProvidedValue": null,
      "Value": "\"secure_and_minimal\""
    },
    {
      "Key": "BASEIMAGE",
      "DefaultValue": "\"huggla/busybox:$SaM_VERSION-$TAG\"",
      "ProvidedValue": null,
      "Value": "\"huggla/busybox:$SaM_VERSION-$TAG\""
    },
    {
      "Key": "RUNDEPS",
      "DefaultValue": "\"sudo dash argon2 libcap\"",
      "ProvidedValue": null,
      "Value": "\"sudo dash argon2 libcap\""
    },
    {
      "Key": "MAKEFILES",
      "DefaultValue": "\"/etc/sudoers.d/docker1 /etc/sudoers.d/docker2\"",
      "ProvidedValue": null,
      "Value": "\"/etc/sudoers.d/docker1 /etc/sudoers.d/docker2\""
    },
    {
      "Key": "REMOVEFILES",
      "DefaultValue": "\"/usr/sbin/visudo /usr/bin/sudoreplay /usr/bin/cvtsudoers /usr/bin/sudoedit\"",
      "ProvidedValue": null,
      "Value": "\"/usr/sbin/visudo /usr/bin/sudoreplay /usr/bin/cvtsudoers /usr/bin/sudoedit\""
    },
    {
      "Key": "EXECUTABLES",
      "DefaultValue": "\"/usr/bin/sudo /usr/bin/dash /usr/bin/argon2\"",
      "ProvidedValue": null,
      "Value": "\"/usr/bin/sudo /usr/bin/dash /usr/bin/argon2\""
    },
    {
      "Key": "FINALCMDS",
      "DefaultValue": "\"   echo 'Defaults lecture=\\\"never\\\"' \u003e ./etc/sudoers.d/docker1 \"\"\u0026\u0026 echo 'Defaults secure_path=\\\"/start:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\\\"' \u003e\u003e ./etc/sudoers.d/docker1 \"\"\u0026\u0026 echo 'Defaults env_keep = \\\"VAR_*\\\"' \u003e ./etc/sudoers.d/docker2 \"\"\u0026\u0026 echo 'Defaults !root_sudo' \u003e\u003e ./etc/sudoers.d/docker2 \"\"\u0026\u0026 echo 'starter ALL=(root) NOPASSWD: /start/start' \u003e\u003e ./etc/sudoers.d/docker2 \"\"\u0026\u0026 echo 'root ALL=(ALL) ALL' \u003e ./etc/sudoers \"\"\u0026\u0026 echo '#includedir /etc/sudoers.d' \u003e\u003e ./etc/sudoers \"\"\u0026\u0026 echo 'exec /bin/sh' \u003e ./usr/bin/script \"\"\u0026\u0026 chmod u+x ./usr/bin/script \"\"\u0026\u0026 cd ./start \"\"\u0026\u0026 ln -s stage1 start \"\"\u0026\u0026 cd ../stop \"\"\u0026\u0026 ln -s ../start/includeFunctions ./ \"\"\u0026\u0026 cd ./functions \"\"\u0026\u0026 ln -s ../../start/functions/readEnvironmentVars ../../start/functions/sourceDirs ./ \"\"\u0026\u0026 cd ../../ \"\"\u0026\u0026 chmod u=rx,g= ./start/stage1 ./start/stage2 ./start/delayedDisableStartupExecutables \"\"\u0026\u0026 chmod -R g=r ./stop \"\"\u0026\u0026 chmod g=rx ./stop ./stop/functions \"\"\u0026\u0026 chmod u=rwx,g=rx ./stop/stage1\"",
      "ProvidedValue": null,
      "Value": "\"   echo 'Defaults lecture=\\\"never\\\"' \u003e ./etc/sudoers.d/docker1 \"\"\u0026\u0026 echo 'Defaults secure_path=\\\"/start:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\\\"' \u003e\u003e ./etc/sudoers.d/docker1 \"\"\u0026\u0026 echo 'Defaults env_keep = \\\"VAR_*\\\"' \u003e ./etc/sudoers.d/docker2 \"\"\u0026\u0026 echo 'Defaults !root_sudo' \u003e\u003e ./etc/sudoers.d/docker2 \"\"\u0026\u0026 echo 'starter ALL=(root) NOPASSWD: /start/start' \u003e\u003e ./etc/sudoers.d/docker2 \"\"\u0026\u0026 echo 'root ALL=(ALL) ALL' \u003e ./etc/sudoers \"\"\u0026\u0026 echo '#includedir /etc/sudoers.d' \u003e\u003e ./etc/sudoers \"\"\u0026\u0026 echo 'exec /bin/sh' \u003e ./usr/bin/script \"\"\u0026\u0026 chmod u+x ./usr/bin/script \"\"\u0026\u0026 cd ./start \"\"\u0026\u0026 ln -s stage1 start \"\"\u0026\u0026 cd ../stop \"\"\u0026\u0026 ln -s ../start/includeFunctions ./ \"\"\u0026\u0026 cd ./functions \"\"\u0026\u0026 ln -s ../../start/functions/readEnvironmentVars ../../start/functions/sourceDirs ./ \"\"\u0026\u0026 cd ../../ \"\"\u0026\u0026 chmod u=rx,g= ./start/stage1 ./start/stage2 ./start/delayedDisableStartupExecutables \"\"\u0026\u0026 chmod -R g=r ./stop \"\"\u0026\u0026 chmod g=rx ./stop ./stop/functions \"\"\u0026\u0026 chmod u=rwx,g=rx ./stop/stage1\""
    }
  ],
  "Stages": [
    {
      "Name": "content1",
      "BaseName": "${CONTENTIMAGE1:-scratch}",
      "SourceCode": "FROM ${CONTENTIMAGE1:-scratch} as content1",
      "Platform": "",
      "As": "content1",
      "From": {
        "Image": "${CONTENTIMAGE1:-scratch}"
      },
      "Commands": null
    },
    {
      "Name": "content2",
      "BaseName": "${CONTENTIMAGE2:-scratch}",
      "SourceCode": "FROM ${CONTENTIMAGE2:-scratch} as content2",
      "Platform": "",
      "As": "content2",
      "From": {
        "Image": "${CONTENTIMAGE2:-scratch}"
      },
      "Commands": null
    },
    {
      "Name": "content3",
      "BaseName": "${CONTENTIMAGE3:-scratch}",
      "SourceCode": "FROM ${CONTENTIMAGE3:-scratch} as content3",
      "Platform": "",
      "As": "content3",
      "From": {
        "Image": "${CONTENTIMAGE3:-scratch}"
      },
      "Commands": null
    },
    {
      "Name": "content4",
      "BaseName": "${CONTENTIMAGE4:-scratch}",
      "SourceCode": "FROM ${CONTENTIMAGE4:-scratch} as content4",
      "Platform": "",
      "As": "content4",
      "From": {
        "Image": "${CONTENTIMAGE4:-scratch}"
      },
      "Commands": null
    },
    {
      "Name": "content5",
      "BaseName": "${CONTENTIMAGE5:-scratch}",
      "SourceCode": "FROM ${CONTENTIMAGE5:-scratch} as content5",
      "Platform": "",
      "As": "content5",
      "From": {
        "Image": "${CONTENTIMAGE5:-scratch}"
      },
      "Commands": null
    },
    {
      "Name": "init",
      "BaseName": "${INITIMAGE:-${BASEIMAGE:-huggla/base:$SaM_VERSION-$TAG}}",
      "SourceCode": "FROM ${INITIMAGE:-${BASEIMAGE:-huggla/base:$SaM_VERSION-$TAG}} as init",
      "Platform": "",
      "As": "init",
      "From": {
        "Image": "${INITIMAGE:-${BASEIMAGE:-huggla/base:$SaM_VERSION-$TAG}}"
      },
      "Commands": null
    },
    {
      "Name": "build",
      "BaseName": "${BUILDIMAGE:-huggla/build:$SaM_VERSION-$TAG}",
      "SourceCode": "FROM ${BUILDIMAGE:-huggla/build:$SaM_VERSION-$TAG} as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "${BUILDIMAGE:-huggla/build:$SaM_VERSION-$TAG}"
      },
      "Commands": null
    },
    {
      "Name": "final",
      "BaseName": "${BASEIMAGE:-huggla/base:$SaM_VERSION-$TAG}",
      "SourceCode": "FROM ${BASEIMAGE:-huggla/base:$SaM_VERSION-$TAG} as final",
      "Platform": "",
      "As": "final",
      "From": {
        "Image": "${BASEIMAGE:-huggla/base:$SaM_VERSION-$TAG}"
      },
      "Commands": [
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/finalfs",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chgrp -R 101 /usr/lib/sudo /usr/local/bin/sudo  \u0026\u0026 chmod u+s /usr/local/bin/sudo"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/start\""
            },
            {
              "Key": "VAR_LINUX_USER",
              "Value": "\"root\""
            },
            {
              "Key": "VAR_FINAL_COMMAND",
              "Value": "\"pause\""
            },
            {
              "Key": "VAR_ARGON2_PARAMS",
              "Value": "\"-r\""
            },
            {
              "Key": "VAR_SALT_FILE",
              "Value": "\"/proc/sys/kernel/hostname\""
            },
            {
              "Key": "HISTFILE",
              "Value": "\"/dev/null\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "starter"
        },
        {
          "Expression": "USER root",
          "Name": "onbuild"
        },
        {
          "CmdLine": [
            "sudo",
            "start"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}