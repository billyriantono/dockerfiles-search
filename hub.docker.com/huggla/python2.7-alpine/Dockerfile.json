{
  "MetaArgs": [
    {
      "Key": "EXCLUDEAPKS",
      "DefaultValue": "\"python2\"",
      "ProvidedValue": null,
      "Value": "\"python2\""
    },
    {
      "Key": "EXCLUDEDEPS",
      "DefaultValue": "\"python2\"",
      "ProvidedValue": null,
      "Value": "\"python2\""
    }
  ],
  "Stages": [
    {
      "Name": "",
      "BaseName": "huggla/alpine-official",
      "SourceCode": "FROM huggla/alpine-official",
      "Platform": "",
      "From": {
        "Image": "huggla/alpine-official"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/usr/local/bin:$PATH\""
            },
            {
              "Key": "LANG",
              "Value": "\"C.UTF-8\""
            },
            {
              "Key": "PYTHONIOENCODING",
              "Value": "\"UTF-8\""
            },
            {
              "Key": "PYTHON_VERSION",
              "Value": "\"2.7.15\""
            },
            {
              "Key": "PYTHON_PIP_VERSION",
              "Value": "\"19.0.3\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --virtual .build-deps ca-certificates bzip2-dev coreutils dpkg-dev dpkg findutils gcc gdbm-dev libc-dev libnsl-dev libressl-dev libtirpc-dev linux-headers make ncurses-dev pax-utils readline-dev sqlite-dev tcl-dev tk tk-dev zlib-dev  \u0026\u0026 wget -O /python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"  \u0026\u0026 mkdir -p /usr/src/python  \u0026\u0026 tar -xJC /usr/src/python --strip-components=1 -f /python.tar.xz  \u0026\u0026 rm /python.tar.xz  \u0026\u0026 cd /usr/src/python  \u0026\u0026 gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"  \u0026\u0026 ./configure --build=\"$gnuArch\" --enable-shared --enable-unicode=ucs4  \u0026\u0026 make -j \"$(nproc)\" EXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\"  \u0026\u0026 make install  \u0026\u0026 find /usr/local -type f -executable ! -name '*tkinter*' -exec scanelf --needed --nobanner --format '%n#p' '{}' ';' | tr ',' '\\n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' | xargs -rt apk add --virtual .python-rundeps  \u0026\u0026 find /usr/local -depth \\( -type d -a \\( -name test -o -name tests \\) \\) -o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) -exec rm -rf '{}' +  \u0026\u0026 cd /  \u0026\u0026 rm -rf /usr/src/python  \u0026\u0026 wget -O /get-pip.py \"https://bootstrap.pypa.io/get-pip.py\"  \u0026\u0026 python /get-pip.py --disable-pip-version-check --no-cache-dir \"pip==$PYTHON_PIP_VERSION\"  \u0026\u0026 find /usr/local -depth \\( -type d -a \\( -name test -o -name tests \\) \\) -o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) -exec rm -rf '{}' +  \u0026\u0026 rm -f /get-pip.py  \u0026\u0026 apk del .build-deps  \u0026\u0026 apk info -L $(apk info | xargs) | grep -v 'contains:$' | grep -v '^$' | awk '{system(\"ls -la /\"$1)}' | awk -F \" \" '{print $5\" \"$9}' | sort -u - \u003e /onbuild-exclude.filelist  \u0026\u0026 if [ -n \"$EXCLUDEDEPS\" ] || [ -n \"$EXCLUDEAPKS\" ];     then        mkdir /excludefs;        cd /excludefs;        apk --root /excludefs add --initdb;        ln -s /var/cache/apk/* /excludefs/var/cache/apk/;        if [ -n \"$EXCLUDEDEPS\" ];        then           apk --repositories-file /etc/apk/repositories --keys-dir /etc/apk/keys --root /excludefs add $EXCLUDEDEPS;           apk --root /excludefs info -R $EXCLUDEDEPS | grep -v 'depends on:$' | grep -v '^$' | sort -u - | xargs apk --root /excludefs info -L | grep -v 'contains:$' | grep -v '^$' | awk '{system(\"md5sum \\\"\"$0\"\\\"\")}' | awk '{first=$1; $1=\"\"; print $0\"\u003e\"first}' | sed 's|^ |/|' | sort -u -o /tmp/onbuild/exclude.filelist /tmp/onbuild/exclude.filelist -;        fi;        if [ -n \"$EXCLUDEAPKS\" ];        then           apk --repositories-file /etc/apk/repositories --keys-dir /etc/apk/keys --root /excludefs add $EXCLUDEAPKS;           apk --root /excludefs info -L $EXCLUDEAPKS | grep -v 'contains:$' | grep -v '^$' | awk '{system(\"md5sum \\\"\"$0\"\\\"\")}' | awk '{first=$1; $1=\"\"; print $0\"\u003e\"first}' | sed 's|^ |/|' | sort -u -o /tmp/onbuild/exclude.filelist /tmp/onbuild/exclude.filelist -;        fi;        cd /;        rm -rf /excludefs;     fi  \u0026\u0026 gzip -9 /onbuild-exclude.filelist  \u0026\u0026 chmod go= /onbuild-exclude.filelist.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "python2"
          ],
          "Name": "cmd",
          "PrependShell": false
        },
        {
          "Expression": "RUN apk update      \u0026\u0026 apk upgrade      \u0026\u0026 pip --no-cache-dir install --upgrade pip",
          "Name": "onbuild"
        }
      ]
    }
  ]
}