MetaArgs: null
Stages:
- BaseName: debian:stretch-slim
  Commands:
  - Maintainer: Vincent Gu <v@vgu.io>
    Name: maintainer
  - Env:
    - Key: OMNICORE_VER
      Value: 0.3.0
    Name: env
  - Env:
    - Key: OMNICORE_ARCH
      Value: x86_64
    Name: env
  - Env:
    - Key: RPC_USER
      Value: user
    Name: env
  - Env:
    - Key: RPC_PASSWORD
      Value: password
    Name: env
  - Env:
    - Key: RPC_ALLOWIP
      Value: '"::/0"'
    Name: env
  - Env:
    - Key: LOG_OUTPUT
      Value: /dev/stdout
    Name: env
  - Labels:
    - Key: omnicore_version
      Value: '"${OMNICORE_VER}"'
    - Key: architecture
      Value: '"x86_64"'
    Name: label
  - Env:
    - Key: APP_DIR
      Value: /app
    Name: env
  - Name: workdir
    Path: $APP_DIR
  - Env:
    - Key: APP_NAME
      Value: omnicore
    Name: env
  - Env:
    - Key: APP_USER
      Value: omnicore
    Name: env
  - Env:
    - Key: APP_GROUP
      Value: omnicore
    Name: env
  - Env:
    - Key: DATA_DIR
      Value: /data/${APP_NAME}
    Name: env
  - Env:
    - Key: GOSU_VERSION
      Value: "1.10"
    Name: env
  - Env:
    - Key: GOSU_ARCH
      Value: amd64
    Name: env
  - Env:
    - Key: DEP
      Value: curl bash
    Name: env
  - CmdLine:
    - set -ex     && apt-get update     && apt-get install -qq --no-install-recommends
      ca-certificates dirmngr gosu gpg curl     && rm -rf /var/lib/apt/lists/*     &&
      groupadd omnicore     && useradd -r -m -g ${APP_GROUP} ${APP_USER}     && curl
      -sSL "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-${GOSU_ARCH}"
      > /usr/local/bin/gosu     && chmod +x /usr/local/bin/gosu     && curl -sSL "https://github.com/OmniLayer/omnicore/releases/download/v${OMNICORE_VER}/omnicore-${OMNICORE_VER}-${OMNICORE_ARCH}-linux-gnu.tar.gz"
      | tar xz     && mv omnicore-${OMNICORE_VER} ${APP_NAME}     && chown -R ${APP_USER}:${APP_GROUP}
      ${APP_NAME}     && mkdir -p ${DATA_DIR}     && chown -R ${APP_USER}:${APP_GROUP}
      ${DATA_DIR}     && ln -sfn ${APP_NAME} /home/${APP_USER}/.bitcoin     && chown
      -R ${APP_USER}:${APP_GROUP} /home/${APP_USER}/.bitcoin
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Name: expose
    Ports:
    - "8332"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /entrypoint.sh
  - CmdLine:
    - /entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - omnicored
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stretch-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch-slim
