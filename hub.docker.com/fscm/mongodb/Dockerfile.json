{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "fscm/debian:buster",
      "SourceCode": "FROM fscm/debian:buster as build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "fscm/debian:buster"
      },
      "Commands": [
        {
          "Key": "BUSYBOX_VERSION",
          "Name": "arg",
          "Value": "\"1.31.0\""
        },
        {
          "Key": "MONGODB_VERSION",
          "Name": "arg",
          "Value": "\"4.2.1\""
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            },
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "files/",
            "/root/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "apt-get -qq update \u0026\u0026   apt-get -qq -y -o=Dpkg::Use-Pty=0 --no-install-recommends install     curl     gzip     libc6     libcurl4     libgcc1     libpcap0.8     libssl1.1     tar \u0026\u0026   for folder in bin lib lib64; do install --directory --owner=root --group=root --mode=0755 /build/usr/${folder}; ln -s usr/${folder} /build/${folder}; done \u0026\u0026   for folder in tmp data; do install --directory --owner=root --group=root --mode=1777 /build/${folder}; done \u0026\u0026   install --owner=root --group=root --mode=0755 --target-directory=/build/usr/bin /root/tests/* \u0026\u0026   install --owner=root --group=root --mode=0755 --target-directory=/build/usr/bin /root/scripts/* \u0026\u0026   curl --silent --location --insecure --retry 3 \"https://busybox.net/downloads/binaries/${BUSYBOX_VERSION}-i686-uclibc/busybox\" -o /build/usr/bin/busybox \u0026\u0026   chmod +x /build/usr/bin/busybox \u0026\u0026   for p in [ basename cat cp date dirname du env getopt grep gzip id kill less ln ls mkdir pgrep ps pwd rm sed sh tar wget; do ln /build/usr/bin/busybox /build/usr/bin/${p}; done \u0026\u0026   curl --silent --location --insecure --retry 3 \"https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-debian10-${MONGODB_VERSION}.tgz\" | tar xz --no-same-owner --strip-components=1 -C /build/ --wildcards mongodb-*/bin \u0026\u0026   rm -rf /build/bin/install_compass \u0026\u0026   install --directory --owner=root --group=root --mode=0755 /build/run/systemd \u0026\u0026   echo 'docker' \u003e /build/run/systemd/container \u0026\u0026   curl --silent --location --insecure --retry 3 \"https://raw.githubusercontent.com/fscm/tools/master/lddcp/lddcp\" -o ./lddcp \u0026\u0026   chmod +x ./lddcp \u0026\u0026   ./lddcp $(for f in `find /build/ -type f -executable`; do echo \"-p $f \"; done) $(for f in `find /lib/x86_64-linux-gnu/ \\( -name 'libnss*' -o -name 'libresolv*' \\)`; do echo \"-l $f \"; done) -d /build"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "scratch",
      "SourceCode": "FROM scratch",
      "Platform": "",
      "From": {
        "Scratch": true
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "maintainer",
              "Value": "\"Frederico Martins \u003chttps://hub.docker.com/u/fscm/\u003e\""
            }
          ],
          "Name": "label"
        },
        {
          "Name": "expose",
          "Ports": [
            "27017"
          ]
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "/build",
            "."
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/usr/bin/run"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "help"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}