{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "docker:1.12.0-dind",
      "SourceCode": "FROM docker:1.12.0-dind",
      "Platform": "",
      "From": {
        "Image": "docker:1.12.0-dind"
      },
      "Commands": [
        {
          "Maintainer": "Ovi Isai \u003covidiu.isai@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_HOME",
              "Value": "/home/jenkins"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JENKINS_REMOTNG_VERSION",
              "Value": "2.7.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_VERSION",
              "Value": "8u111"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_ALPINE_VERSION",
              "Value": "8.111.14-r0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAVEN_VERSION",
              "Value": "3.3.9"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROTOBUF_ALPINE_VERSION",
              "Value": "2.6.1-r4"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOCKER_HOST",
              "Value": "tcp://0.0.0.0:2375"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk --update add     curl     bash     git     sudo     openssh     python     py-pip     protobuf=\"$PROTOBUF_ALPINE_VERSION\" \u0026\u0026         pip install --upgrade awscli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "{         echo '#!/bin/sh';         echo 'set -e';         echo;         echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"';     } \u003e /usr/local/bin/docker-java-home     \u0026\u0026 chmod +x /usr/local/bin/docker-java-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-1.8-openjdk"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apk add --no-cache         openjdk8=\"$JAVA_ALPINE_VERSION\" \u0026\u0026 [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget http://mirror2.shellbot.com/apache/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz \u0026\u0026     tar -zxf apache-maven-${MAVEN_VERSION}-bin.tar.gz \u0026\u0026     mv apache-maven-${MAVEN_VERSION} /usr/local \u0026\u0026     rm -f apache-maven-${MAVEN_VERSION}-bin.tar.gz \u0026\u0026 ln -s /usr/local/apache-maven-${MAVEN_VERSION}/bin/mvn /usr/bin/mvn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "$JENKINS_HOME"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "adduser -D -h $JENKINS_HOME -s /bin/sh jenkins jenkins     \u0026\u0026 chmod a+rwx $JENKINS_HOME"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"jenkins ALL=(ALL) NOPASSWD: /usr/local/bin/docker\" \u003e /etc/sudoers.d/00jenkins     \u0026\u0026 chmod 440 /etc/sudoers.d/00jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --create-dirs -sSLo /usr/share/jenkins/slave.jar http://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/2.52/remoting-2.52.jar   \u0026\u0026 chmod 755 /usr/share/jenkins   \u0026\u0026 chmod 644 /usr/share/jenkins/slave.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins-slave",
            "/usr/local/bin/jenkins-slave"
          ]
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/jenkins-slave"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown root:jenkins /usr/local/bin/docker"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "jenkins"
        },
        {
          "Name": "volume",
          "Volumes": [
            "$JENKINS_HOME"
          ]
        },
        {
          "Name": "workdir",
          "Path": "$JENKINS_HOME"
        },
        {
          "CmdLine": [
            "/usr/local/bin/jenkins-slave"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}