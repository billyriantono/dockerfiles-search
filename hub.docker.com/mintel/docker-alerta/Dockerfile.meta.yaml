MetaArgs: null
Stages:
- BaseName: python:3
  Commands:
  - Env:
    - Key: PYTHONUNBUFFERED
      Value: "1"
    Name: env
  - Labels:
    - Key: maintainer
      Value: '"Nick Satterly <nick.satterly@gmail.com>"'
    Name: label
  - Key: BUILD_DATE
    Name: arg
    Value: null
  - Key: VCS_REF
    Name: arg
    Value: null
  - Key: VERSION
    Name: arg
    Value: null
  - Labels:
    - Key: org.label-schema.build-date
      Value: $BUILD_DATE
    - Key: org.label-schema.url
      Value: '"http://alerta.io"'
    - Key: org.label-schema.vcs-url
      Value: '"https://github.com/alerta/docker-alerta"'
    - Key: org.label-schema.vcs-ref
      Value: $VCS_REF
    - Key: org.label-schema.version
      Value: $VERSION
    - Key: org.label-schema.schema-version
      Value: '"1.0.0-rc.1"'
    Name: label
  - CmdLine:
    - apt-get update && apt-get install -y     git     libffi-dev     libpq-dev     mongodb-clients     nginx     postgresql-client     postgresql-client-common     python3-dev     supervisor     wget
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir virtualenv &&     virtualenv --python=python3 /venv
      &&     /venv/bin/pip install uwsgi alerta alerta-server==$VERSION
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: $PATH:/venv/bin
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://github.com/alerta/angular-alerta-webui/archive/master.tar.gz
    - /tmp/web.tar.gz
  - CmdLine:
    - tar zxvf /tmp/web.tar.gz -C /tmp &&     mv /tmp/angular-alerta-webui-master/app
      /web &&     mv /web/config.js /web/config.js.orig
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /certs
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - wsgi.py
    - /app/wsgi.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - uwsgi.ini
    - /app/uwsgi.ini
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx.conf
    - /app/nginx.conf
  - CmdLine:
    - chgrp -R 0 /app /venv /web &&     chmod -R g=u /app /venv /web
    Name: run
    PrependShell: true
  - Env:
    - Key: REQUESTS_CA_BUNDLE
      Value: /etc/ssl/certs/ca-certificates.crt
    Name: env
  - Env:
    - Key: ALERTA_SVR_CONF_FILE
      Value: /app/alertad.conf
    Name: env
  - Env:
    - Key: ALERTA_CONF_FILE
      Value: /app/alerta.conf
    Name: env
  - Env:
    - Key: ALERTA_WEB_CONF_FILE
      Value: /web/config.js
    Name: env
  - Env:
    - Key: BASE_URL
      Value: /api
    Name: env
  - Env:
    - Key: PROVIDER
      Value: basic
    Name: env
  - Env:
    - Key: INSTALL_PLUGINS
      Value: '""'
    Name: env
  - Name: expose
    Ports:
    - "8080"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisord.conf
    - /app/supervisord.conf
  - CmdLine:
    - supervisord
    - -c
    - /app/supervisord.conf
    Name: cmd
    PrependShell: false
  From:
    Image: python:3
  Name: ""
  Platform: ""
  SourceCode: FROM python:3
