MetaArgs: null
Stages:
- BaseName: python:3.6-alpine
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Francesco Ciocchetti <fciocchetti@mintel.com>"'
    - Key: version
      Value: '"0.2.1"'
    - Key: vcs-url
      Value: '"https://github.com/mintel/elastalert-docker"'
    Name: label
  - Env:
    - Key: SET_CONTAINER_TIMEZONE
      Value: "False"
    Name: env
  - Env:
    - Key: CONTAINER_TIMEZONE
      Value: Etc/UTC
    Name: env
  - Env:
    - Key: ELASTALERT_VERSION
      Value: '"0.2.1"'
    Name: env
  - Env:
    - Key: ELASTALERT_URL
      Value: https://github.com/Yelp/elastalert/archive/v${ELASTALERT_VERSION}.zip
    Name: env
  - Env:
    - Key: CONFIG_DIR
      Value: /opt/config
    Name: env
  - Env:
    - Key: RULES_DIRECTORY
      Value: /opt/rules
    Name: env
  - Env:
    - Key: ELASTALERT_CONFIG
      Value: ${CONFIG_DIR}/config.yaml
    Name: env
  - Env:
    - Key: ELASTALERT_HOME
      Value: /opt/elastalert
    Name: env
  - Env:
    - Key: ELASTICSEARCH_HOST
      Value: elasticsearchhost
    Name: env
  - Env:
    - Key: ELASTICSEARCH_PORT
      Value: "9200"
    Name: env
  - Env:
    - Key: ELASTICSEARCH_TLS
      Value: "False"
    Name: env
  - Env:
    - Key: ELASTICSEARCH_TLS_VERIFY
      Value: "True"
    Name: env
  - Env:
    - Key: ELASTALERT_INDEX
      Value: elastalert_status
    Name: env
  - Name: workdir
    Path: /opt
  - CmdLine:
    - apk update &&     apk --no-cache upgrade &&     apk --no-cache add ca-certificates
      openssl-dev openssl libffi-dev python3 python3-dev py3-pip py3-yaml gcc musl-dev
      tzdata openntpd wget libmagic &&     wget -O elastalert.zip "${ELASTALERT_URL}"
      &&     unzip elastalert.zip &&     rm elastalert.zip &&     mv elast* "${ELASTALERT_HOME}"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"${ELASTALERT_HOME}"'
  - CmdLine:
    - python3 setup.py install &&     pip3 install -e . &&     pip3 uninstall twilio
      --yes &&     pip3 install twilio==6.0.0 &&     sed -i -e 's/get_yaml(args.file)/load_yaml(args.file)/'
      /opt/elastalert/elastalert/test_rule.py &&     mkdir -p "${CONFIG_DIR}" &&     mkdir
      -p "${RULES_DIRECTORY}" &&     mkdir -p /var/empty &&     apk del python3-dev
      &&     apk del musl-dev &&     apk del gcc &&     apk del openssl-dev &&     apk
      del libffi-dev &&     rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - ./start-elastalert.sh
    - /opt/
  - CmdLine:
    - chmod +x /opt/start-elastalert.sh
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${CONFIG_DIR}
    - ${RULES_DIRECTORY}
  - CmdLine:
    - /opt/start-elastalert.sh
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.6-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-alpine
