{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "build",
      "BaseName": "alpine:3.10.0",
      "SourceCode": "FROM alpine:3.10.0 AS build",
      "Platform": "",
      "As": "build",
      "From": {
        "Image": "alpine:3.10.0"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "XMR_STAK_VERSION",
              "Value": "1.0.1-rx"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "app",
            "/app"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/usr/local/src"
        },
        {
          "CmdLine": [
            "echo \"@testing http://nl.alpinelinux.org/alpine/edge/testing\" \u003e\u003e //etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"@edge http://nl.alpinelinux.org/alpine/edge/main\" \u003e\u003e //etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache       libmicrohttpd-dev       libcrypto1.1       openssl-dev       hwloc-dev@testing       numactl@edge       build-base       cmake       coreutils       git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/fireice-uk/xmr-stak.git     \u0026\u0026 cd xmr-stak     \u0026\u0026 git checkout tags/${XMR_STAK_VERSION} -b build          \u0026\u0026 cmake . -DCUDA_ENABLE=OFF -DOpenCL_ENABLE=OFF -DHWLOC_ENABLE=ON -DXMR-STAK_COMPILE=generic     \u0026\u0026 make -j$(nproc)     \u0026\u0026 ls -la /app         \u0026\u0026 cp -t /app bin/xmr-stak-rx     \u0026\u0026 chmod 777 -R /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del --no-cache --purge       libmicrohttpd-dev       openssl-dev       hwloc-dev@testing       build-base       cmake       coreutils       git || echo \"apk purge error ignored\""
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    },
    {
      "Name": "",
      "BaseName": "alpine:3.10.0",
      "SourceCode": "FROM alpine:3.10.0",
      "Platform": "",
      "From": {
        "Image": "alpine:3.10.0"
      },
      "Commands": [
        {
          "Name": "workdir",
          "Path": "/app"
        },
        {
          "CmdLine": [
            "echo \"@testing http://nl.alpinelinux.org/alpine/edge/testing\" \u003e\u003e //etc/apk/repositories"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache       libmicrohttpd       openssl       hwloc@testing       python2       py2-pip       libstdc++       \u0026\u0026 pip install envtpl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "build",
          "Name": "copy",
          "SourcesAndDest": [
            "app",
            "."
          ]
        },
        {
          "CmdLine": [
            "/app/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "xmr-stak-cpu"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}