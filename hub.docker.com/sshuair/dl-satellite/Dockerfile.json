{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "nvidia/cuda:9.0-base-ubuntu16.04",
      "SourceCode": "FROM nvidia/cuda:9.0-base-ubuntu16.04",
      "Platform": "",
      "From": {
        "Image": "nvidia/cuda:9.0-base-ubuntu16.04"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt-get update --fix-missing \u0026\u0026 apt-get install -y --no-install-recommends        build-essential         software-properties-common         curl         cmake         cuda-command-line-tools-9-0         cuda-cublas-9-0         cuda-cufft-9-0         cuda-curand-9-0         cuda-cusolver-9-0         cuda-cusparse-9-0         libcudnn7=7.0.5.15-1+cuda9.0         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         rsync         zip         unzip         git         wget         vim         ca-certificates         python3         python3-dev         python3-pip         ipython3         graphviz         \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get --fix-missing install -y python3-mapnik \u0026\u0026     add-apt-repository -y ppa:ubuntugis/ppa \u0026\u0026     apt update \u0026\u0026     apt-get install -y --no-install-recommends gdal-bin libgdal-dev python3-gdal \u0026\u0026     apt-get clean \u0026\u0026     rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install setuptools \u0026\u0026     pip3 --no-cache-dir install --upgrade numpy \u0026\u0026     pip3 --no-cache-dir install         Pillow         ipykernel         jupyter         scipy         h5py         scikit-image         matplotlib         pandas         scikit-learn         sympy         shapely         bokeh         geopandas         hyperopt         folium         ipyleaflet         xgboost         rasterio         progressbar33         opencv-contrib-python         tifffile         tqdm         \u0026\u0026     python3 -m ipykernel.kernelspec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 --no-cache-dir install tensorflow-gpu \u0026\u0026     pip3 --no-cache-dir install keras \u0026\u0026     pip3 --no-cache-dir install mxnet-cu80==1.0.0 \u0026\u0026     pip3 --no-cache-dir install graphviz \u0026\u0026     pip3 --no-cache-dir install http://download.pytorch.org/whl/cu80/torch-0.3.1-cp35-cp35m-linux_x86_64.whl  \u0026\u0026     pip3 --no-cache-dir install torchvision"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jupyter_notebook_config.py",
            "/root/.jupyter/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run_jupyter.sh",
            "/"
          ]
        },
        {
          "Env": [
            {
              "Key": "LD_LIBRARY_PATH",
              "Value": "/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "6006",
            "8888"
          ]
        },
        {
          "CmdLine": [
            "mkdir /workdir"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"/root\""
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}