MetaArgs: null
Stages:
- BaseName: openjdk:8-jdk
  Commands:
  - Env:
    - Key: JENKINS_VERSION
      Value: 2.150.1
    Name: env
  - Env:
    - Key: JENKINS_SHA
      Value: 0da17386e514499ad77d1976019853df9af3ccba
    Name: env
  - Env:
    - Key: JENKINS_HOME
      Value: /var/jenkins_home
    Name: env
  - Env:
    - Key: JENKINS_SLAVE_AGENT_PORT
      Value: "50000"
    Name: env
  - Env:
    - Key: JENKINS_UC
      Value: https://updates.jenkins-ci.org
    Name: env
  - Env:
    - Key: TINI_SHA
      Value: 066ad710107dc7ee05d3aa6e4974f01dc98f3888
    Name: env
  - Env:
    - Key: COPY_REFERENCE_FILE_LOG
      Value: $JENKINS_HOME/copy_reference_file.log
    Name: env
  - Env:
    - Key: TZ
      Value: Europe/Berlin
    Name: env
  - CmdLine:
    - echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main" > /etc/apt/sources.list.d/ansible.list     &&
      apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367     &&
      apt-get update     && apt-get install -y apt-transport-https ca-certificates
      curl gnupg2 software-properties-common     && curl -fsSL https://download.docker.com/linux/$(.
      /etc/os-release; echo "$ID")/gpg | apt-key add -     && add-apt-repository "deb
      [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")
      $(lsb_release -cs) stable"     && apt-get update     && apt-get dist-upgrade
      -y     && apt-get install -y wget git curl zip ruby ruby-dev make gcc cron sudo
      ansible jq python-pip docker-ce     && systemctl disable docker     && echo
      manual | tee /etc/init/docker.override     && apt-get autoremove --purge -y     &&
      apt-get autoclean -y     && rm -rf /var/lib/apt/lists/*     && /usr/bin/gem
      install bundler     && echo $TZ | sudo tee /etc/timezone     && sudo dpkg-reconfigure
      --frontend noninteractive tzdata      && useradd -d "$JENKINS_HOME" -u 1000
      -m -s /bin/bash jenkins     && mkdir -p /usr/share/jenkins/ref/init.groovy.d     &&
      curl -fL https://github.com/krallin/tini/releases/download/v0.5.0/tini-static
      -o /bin/tini     && chmod +x /bin/tini     && echo "$TINI_SHA /bin/tini" | sha1sum
      -c -     && curl -fL http://mirrors.jenkins-ci.org/war-stable/$JENKINS_VERSION/jenkins.war
      -o /usr/share/jenkins/jenkins.war     && echo "$JENKINS_SHA /usr/share/jenkins/jenkins.war"
      | sha1sum -c -     && chown -R jenkins "$JENKINS_HOME" /usr/share/jenkins/ref
    Name: run
    PrependShell: true
  - CmdLine:
    - wget "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      -O /usr/local/bin/kubectl     && chmod +x /usr/local/bin/kubectl     && pip
      install awscli --upgrade --user     && wget $(curl -Ls https://releases.hashicorp.com/index.json
      | jq '{terraform}' | grep url | egrep linux_amd64 | sort -V | tail -n1 | awk
      '{print $2}' | sed 's/"*,*//g') -O /tmp/terraform.zip     && unzip /tmp/terraform.zip
      -d /usr/local/bin     && curl -s -L -o /usr/local/bin/docker-compose $(curl
      -s https://api.github.com/repos/docker/compose/releases/latest | jq -r ".assets[]
      | select(.name | test(\"$(uname -s)-$(uname -m)\")) | .browser_download_url"
      | head -n1)     && chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/jenkins_home
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - init.groovy
    - /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "50000"
  - Name: user
    User: jenkins
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins.sh
    - /usr/local/bin/jenkins.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - jenkins.sudoers
    - /etc/sudoers.d/jenkins
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - plugins.sh
    - /usr/local/bin/plugins.sh
  - CmdLine:
    - /bin/tini
    - --
    - /usr/local/bin/jenkins.sh
    Name: entrypoint
    PrependShell: false
  From:
    Image: openjdk:8-jdk
  Name: ""
  Platform: ""
  SourceCode: FROM openjdk:8-jdk
