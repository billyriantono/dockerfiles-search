MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Steve Tsang <mylagimail2004@yahoo.com>"'
    Name: label
  - Name: user
    User: root
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update && apt-get -yq dist-upgrade  && apt-get install -yq --no-install-recommends     build-essential     gcc-multilib     apt-utils     autotools-dev     autoconf     autogen     automake     zlib1g-dev     vim-common     libncurses5-dev     autotools-dev     autoconf     perl     r-base     python     python-pip     libbz2-dev     liblzma-dev     libz-dev     ncurses-dev     libcurl3     libcurl4-openssl-dev     libxml2-dev     wget     bzip2     ca-certificates     sudo     locales     fonts-liberation     python3     python3-pip     pkg-config     python-dev     graphviz     libgraphviz-dev     libtool     libgd-gd2-perl     curl  &&
      apt-get clean  && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen &&     locale-gen
    Name: run
    PrependShell: true
  - CmdLine:
    - wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini
      &&     echo "1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0
      *tini" | sha256sum -c - &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - Env:
    - Key: CONDA_DIR
      Value: /opt/conda
    - Key: SHELL
      Value: /bin/bash
    - Key: NB_USER
      Value: ubuntu
    - Key: NB_UID
      Value: "1000"
    - Key: NB_GID
      Value: "100"
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: PATH
      Value: $CONDA_DIR/bin:$PATH
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - Chown: ""
    Name: add
    SourcesAndDest:
    - scripts/fix-permissions
    - /usr/local/bin/fix-permissions
  - CmdLine:
    - useradd -m -s /bin/bash -N -u $NB_UID $NB_USER &&     mkdir -p $CONDA_DIR &&     chown
      $NB_USER:$NB_GID $CONDA_DIR &&     chmod g+w /etc/passwd /etc/group &&     fix-permissions
      $HOME &&     fix-permissions $CONDA_DIR
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - CmdLine:
    - mkdir /home/$NB_USER/work &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - Env:
    - Key: MINICONDA_VERSION
      Value: 4.4.10
    Name: env
  - CmdLine:
    - cd /tmp &&     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     echo "bec6203dbb2f53011e974e9bf4d46e93 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh"
      | md5sum -c - &&     /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      -f -b -p $CONDA_DIR &&     rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh
      &&     $CONDA_DIR/bin/conda config --system --prepend channels conda-forge &&     $CONDA_DIR/bin/conda
      config --system --set auto_update_conda false &&     $CONDA_DIR/bin/conda config
      --system --set show_channel_urls true &&     $CONDA_DIR/bin/conda update --all
      --quiet --yes &&     conda clean -tipsy &&     rm -rf /home/$NB_USER/.cache/yarn
      &&     fix-permissions $CONDA_DIR &&     fix-permissions /home/$NB_USER
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install --quiet --yes     'notebook=5.4.*'     'jupyterhub=0.8.*'     'jupyterlab=0.32.*'
      &&     conda clean -tipsy &&     jupyter labextension install @jupyterlab/hub-extension@^0.8.1
      &&     npm cache clean --force &&     rm -rf $CONDA_DIR/share/jupyter/lab/staging
      &&     rm -rf /home/$NB_USER/.cache/yarn &&     fix-permissions $CONDA_DIR &&     fix-permissions
      /home/$NB_USER
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: workdir
    Path: /opt
  - CmdLine:
    - apt-get update && apt-get install -y git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/samtools/htslib.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/htslib
  - CmdLine:
    - autoheader
    Name: run
    PrependShell: true
  - CmdLine:
    - autoconf
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure
    Name: run
    PrependShell: true
  - CmdLine:
    - make
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$PATH:/opt/htslib/"'
    Name: env
  - Name: workdir
    Path: /opt
  - CmdLine:
    - git clone https://github.com/samtools/samtools.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/samtools
  - CmdLine:
    - autoheader
    Name: run
    PrependShell: true
  - CmdLine:
    - autoconf -Wno-syntax
    Name: run
    PrependShell: true
  - CmdLine:
    - './configure    # Optional, needed for choosing optional functionality'
    Name: run
    PrependShell: true
  - CmdLine:
    - make
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: '"$PATH:/opt/samtools/"'
    Name: env
  - Name: workdir
    Path: /opt/
  - CmdLine:
    - wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.7.1+-x64-linux.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvzf ncbi-blast-2.7.1+-x64-linux.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/ncbi-blast-2.7.1+
  - Env:
    - Key: PATH
      Value: '"$PATH:/opt/ncbi-blast-2.7.1+/"'
    Name: env
  - Name: workdir
    Path: /opt/
  - CmdLine:
    - wget https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/2.9.0/sratoolkit.2.9.0-ubuntu64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvzf sratoolkit.2.9.0-ubuntu64.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/sratoolkit.2.9.0-ubuntu64
  - Env:
    - Key: PATH
      Value: '"$PATH:/opt/sratoolkit.2.9.0-ubuntu64/bin/"'
    Name: env
  - CmdLine:
    - apt-get install -y unzip
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/
  - CmdLine:
    - wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/magicblast/1.3.0/ncbi-magicblast-1.3.0-x64-linux.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvzf ncbi-magicblast-1.3.0-x64-linux.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/ncbi-magicblast-1.3.0
  - Env:
    - Key: PATH
      Value: '"$PATH:/opt/ncbi-magicblast-1.3.0/bin/"'
    Name: env
  - Name: workdir
    Path: /opt/
  - CmdLine:
    - git clone https://github.com/agordon/fastx_toolkit.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/fastx_toolkit
  - CmdLine:
    - git clone https://github.com/agordon/libgtextutils.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/fastx_toolkit/libgtextutils
  - CmdLine:
    - ./reconf
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure
    Name: run
    PrependShell: true
  - CmdLine:
    - make
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/fastx_toolkit
  - CmdLine:
    - ./reconf
    Name: run
    PrependShell: true
  - CmdLine:
    - ./configure
    Name: run
    PrependShell: true
  - CmdLine:
    - make
    Name: run
    PrependShell: true
  - CmdLine:
    - make install
    Name: run
    PrependShell: true
  - CmdLine:
    - cpan 'PerlIO::gzip'
    Name: run
    PrependShell: true
  - CmdLine:
    - cpan 'GD::Graph::bars'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git python3 python3-dev python3-pip ncbi-blast+ prodigal
      wget &&     wget http://github.com/bbuchfink/diamond/releases/download/v0.8.36/diamond-linux64.tar.gz
      &&     tar xvf diamond-linux64.tar.gz &&     mv diamond /usr/bin
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - wget https://card.mcmaster.ca/download/1/software-v4.1.0.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvf software-v4.1.0.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xvzf 4.1.0.tar.gz
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/rgi-4.1.0
  - CmdLine:
    - pip3 install -r requirements.txt &&     pip3 install . &&     bash test.sh
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /
  - CmdLine:
    - pip install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install pygraphviz
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install seaborn
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install numpy
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pandas
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install pysam
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install matplotlib
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install snakemake
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install sequana
    Name: run
    PrependShell: true
  - CmdLine:
    - conda config --add channels defaults
    Name: run
    PrependShell: true
  - CmdLine:
    - conda config --add channels conda-forge
    Name: run
    PrependShell: true
  - CmdLine:
    - conda config --add channels bioconda
    Name: run
    PrependShell: true
  - CmdLine:
    - conda install bowtie2
    Name: run
    PrependShell: true
  - Name: user
    User: root
  - Name: expose
    Ports:
    - "8888"
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - pip install qgrid
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable --py --sys-prefix qgrid
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter nbextension enable --py --sys-prefix widgetsnbextension
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter labextension install @jupyter-widgets/jupyterlab-manager
    Name: run
    PrependShell: true
  - CmdLine:
    - jupyter labextension install qgrid
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt
  - CmdLine:
    - git clone https://github.com/marbl/Krona.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/Krona/KronaTools
  - CmdLine:
    - ./install.pl --prefix /usr/local/bin --taxonomy /opt/Krona/KronaTools
    Name: run
    PrependShell: true
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - start-notebook.sh
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/start.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/start-notebook.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/start-singleuser.sh
    - /usr/local/bin/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts/jupyter_notebook_config.py
    - /etc/jupyter/
  - CmdLine:
    - fix-permissions /etc/jupyter/
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
