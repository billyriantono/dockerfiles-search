{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.9",
      "SourceCode": "FROM alpine:3.9",
      "Platform": "",
      "From": {
        "Image": "alpine:3.9"
      },
      "Commands": [
        {
          "Key": "DISABLED_APPS",
          "Name": "arg",
          "Value": "'megaco wx debugger jinterface orber reltool observer gs et'"
        },
        {
          "Key": "ERLANG_TAG",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Key": "ELIXIR_TAG",
          "Name": "arg",
          "Value": "master"
        },
        {
          "Labels": [
            {
              "Key": "erlang_version",
              "Value": "$ERLANG_TAG"
            },
            {
              "Key": "erlang_disabled_apps",
              "Value": "$DISABLED_APPS"
            },
            {
              "Key": "elixir_version",
              "Value": "$ELIXIR_TAG"
            },
            {
              "Key": "maintainer",
              "Value": "\"leif@leif.io\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk --update add --virtual run-dependencies ca-certificates ncurses openssl unixodbc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -xe     \u0026\u0026 apk --update add --virtual erlang-build-dependencies git ca-certificates build-base autoconf perl ncurses-dev openssl-dev unixodbc-dev tar     \u0026\u0026 cd /tmp     \u0026\u0026 git clone --branch $ERLANG_TAG --depth=1 --single-branch https://github.com/erlang/otp.git     \u0026\u0026 cd otp     \u0026\u0026 echo \"ERLANG_BUILD=$(git rev-parse HEAD)\" \u003e\u003e /info.txt     \u0026\u0026 echo \"ERLANG_VERSION=$(cat OTP_VERSION)\" \u003e\u003e /info.txt      \u0026\u0026 for lib in ${DISABLED_APPS} ; do touch lib/${lib}/SKIP ; done     \u0026\u0026 ./otp_build autoconf     \u0026\u0026 ./configure         --enable-smp-support         --enable-m64-build         --disable-native-libs         --enable-sctp         --enable-threads         --enable-kernel-poll         --disable-hipe     \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN)     \u0026\u0026 make install     \u0026\u0026 find /usr/local -regex '/usr/local/lib/erlang/\\(lib/\\|erts-\\).*/\\(man\\|doc\\|src\\|obj\\|c_src\\|emacs\\|info\\|examples\\)' | xargs rm -rf     \u0026\u0026 rm -rf       /usr/local/lib/erlang/erts*/lib/lib*.a       /usr/local/lib/erlang/usr/lib/lib*.a       /usr/local/lib/erlang/lib/*/lib/lib*.a     \u0026\u0026 scanelf --nobanner -E ET_EXEC -BF '%F' --recursive /usr/local | xargs -r strip --strip-all     \u0026\u0026 scanelf --nobanner -E ET_DYN -BF '%F' --recursive /usr/local | xargs -r strip --strip-unneeded     \u0026\u0026 apk del erlang-build-dependencies     \u0026\u0026 ls -d /usr/local/lib/erlang/lib/*/src | xargs rm -rf     \u0026\u0026 rm -rf       /opt       /var/cache/apk/*       /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --update add --virtual elixir-build-dependencies git build-base     \u0026\u0026 cd /tmp     \u0026\u0026 git clone --branch $ELIXIR_TAG --depth=1 --single-branch https://github.com/elixir-lang/elixir.git     \u0026\u0026 cd elixir     \u0026\u0026 echo \"ELIXIR_BUILD=$(git rev-parse HEAD)\" \u003e\u003e /info.txt     \u0026\u0026 echo \"ELIXIR_VERSION=$(cat VERSION)\" \u003e\u003e /info.txt      \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) compile     \u0026\u0026 rm -rf .git     \u0026\u0026 make install     \u0026\u0026 apk del elixir-build-dependencies     \u0026\u0026 rm -rf       /var/cache/apk/*       /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo cat /info.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo $ELIXIR_VERSION"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mix local.hex --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mix local.rebar --force"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mix hex.info"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/bin/sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}