{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "INSTALL_DEPS",
              "Value": "bazel   ca-certificates   git   make   software-properties-common   unzip   wget   maven   patch"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update   \u0026\u0026 apt-get install -y -q --no-install-recommends curl openjdk-8-jdk   \u0026\u0026 echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list   \u0026\u0026 curl https://bazel.build/bazel-release.pub.gpg | apt-key add -   \u0026\u0026 apt-get update   \u0026\u0026 apt-get install -y -q --no-install-recommends ${INSTALL_DEPS}   \u0026\u0026 apt-get clean   \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PROTOC_VER",
              "Value": "3.6.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PROTOC_REL",
              "Value": "protoc-\"${PROTOC_VER}\"-linux-x86_64.zip"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget https://github.com/google/protobuf/releases/download/v\"${PROTOC_VER}/${PROTOC_REL}\"   \u0026\u0026 unzip ${PROTOC_REL} -d protoc   \u0026\u0026 mv protoc /usr/local   \u0026\u0026 ln -s /usr/local/protoc/bin/protoc /usr/local/bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOROOT",
              "Value": "/usr/local/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:$GOROOT/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GORELEASE",
              "Value": "go1.10.3.linux-amd64.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget -q https://storage.googleapis.com/golang/$GORELEASE     \u0026\u0026 tar -C $(dirname $GOROOT) -xzf $GORELEASE     \u0026\u0026 rm $GORELEASE     \u0026\u0026 mkdir -p $GOPATH/{src,bin,pkg}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PGG_PKG",
              "Value": "\"github.com/golang/protobuf/protoc-gen-go\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGG_PATH",
              "Value": "\"${GOPATH}/src/${PGG_PKG}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PGG_VER",
              "Value": "v1.3.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "go get -d ${PGG_PKG}   \u0026\u0026 cd ${PGG_PATH}   \u0026\u0026 git checkout ${PGG_VER}   \u0026\u0026 go install   \u0026\u0026 cd -   \u0026\u0026 rm -rf ${PGG_PATH}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "go get github.com/bazelbuild/buildtools/buildozer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "${GOPATH}/src/github.com/envoyproxy/protoc-gen-validate"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "."
          ]
        },
        {
          "CmdLine": [
            "make build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "make"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "quick"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}