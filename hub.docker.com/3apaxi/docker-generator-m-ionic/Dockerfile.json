{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "manabugt/android",
      "SourceCode": "FROM manabugt/android",
      "Platform": "",
      "From": {
        "Image": "manabugt/android"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "NODEJS_VERSION",
              "Value": "5.3.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CORDOVA_VERSION",
              "Value": "5.4.1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "IONIC_CLI_VERSION",
              "Value": "1.7.12"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MIONIC_VERSION",
              "Value": "1.5.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NODE_MODULES_DIR",
              "Value": "node_modules"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BOWER_CLIENT_ID",
              "Value": "896698526080"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "BOWER_DIR",
              "Value": "app/bower_components"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/android-sdk-linux/build-tools/23.0.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "which zipalign"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update -y \u0026\u0026   apt-get install -y      git      python      unzip      build-essential      openssh-client \u0026\u0026   type git \u0026\u0026   type python \u0026\u0026   type unzip \u0026\u0026   type make \u0026\u0026   type ssh-keyscan \u0026\u0026   apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/opt/nodejs/bin"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "\"/opt\""
        },
        {
          "CmdLine": [
            "curl -O https://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-linux-x64.tar.gz \u0026\u0026     tar xf node-v${NODEJS_VERSION}-linux-x64.tar.gz \u0026\u0026     mv node-v${NODEJS_VERSION}-linux-x64 /opt/nodejs \u0026\u0026     rm node-v${NODEJS_VERSION}-linux-x64.tar.gz"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install --global   bower   generator-m-ionic@${MIONIC_VERSION}   gulp   ionic@$IONIC_CLI_VERSION   yo   cordova@${CORDOVA_VERSION}"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3001"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint-development.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build-release.sh",
            "/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/appm"
          ]
        },
        {
          "CmdLine": [
            "useradd -ms /bin/bash app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R app /opt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "app"
        },
        {
          "Name": "workdir",
          "Path": "/home/app"
        },
        {
          "CmdLine": [
            "mkdir -p .config/configstore"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '{\"clientId\": '$BOWER_CLIENT_ID',\"optOut\": true}' \u003e .config/configstore/insight-yo.json"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'clientId: '$BOWER_CLIENT_ID \u003e\u003e .config/configstore/insight-bower.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'optOut: true' \u003e\u003e .config/configstore/insight-bower.yml"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p .ssh \u0026\u0026   ssh-keyscan -H github.com \u003e\u003e .ssh/known_hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'umask 000' \u003e\u003e .bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/appm"
        },
        {
          "CmdLine": [
            "/docker-entrypoint-development.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "gulp",
            "watch",
            "--no-open"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}