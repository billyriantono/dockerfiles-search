{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "niaquinto/gradle",
      "SourceCode": "FROM niaquinto/gradle",
      "Platform": "",
      "From": {
        "Image": "niaquinto/gradle"
      },
      "Commands": [
        {
          "Maintainer": "andreevym@gmail.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "INFLUXDB_VERSION",
              "Value": "1.2.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GRAFANA_VERSION",
              "Value": "4.2.0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DOWNLOAD_URL",
              "Value": "https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana_${GRAFANA_VERSION}_amd64.deb"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get -y --no-install-recommends install libfontconfig curl ca-certificates wget gnupg software-properties-common \u0026\u0026     apt-get clean \u0026\u0026     curl ${DOWNLOAD_URL} \u003e /tmp/grafana.deb \u0026\u0026     dpkg -i /tmp/grafana.deb \u0026\u0026     rm /tmp/grafana.deb \u0026\u0026     curl -L https://github.com/tianon/gosu/releases/download/1.7/gosu-amd64 \u003e /usr/sbin/gosu \u0026\u0026     chmod +x /usr/sbin/gosu \u0026\u0026     apt-get autoremove -y \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     gpg         --keyserver hkp://ha.pool.sks-keyservers.net         --recv-keys 05CE15085FC09D18E99EFB22684A14CF2582E0C5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q https://dl.influxdata.com/influxdb/releases/influxdb_${INFLUXDB_VERSION}_amd64.deb.asc \u0026\u0026     wget -q https://dl.influxdata.com/influxdb/releases/influxdb_${INFLUXDB_VERSION}_amd64.deb \u0026\u0026     gpg --batch --verify influxdb_${INFLUXDB_VERSION}_amd64.deb.asc influxdb_${INFLUXDB_VERSION}_amd64.deb \u0026\u0026     dpkg -i influxdb_${INFLUXDB_VERSION}_amd64.deb \u0026\u0026     rm -f influxdb_${INFLUXDB_VERSION}_amd64.deb*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/",
            "/sources/src/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "build.gradle",
            "/sources/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "gradle.properties",
            "/sources/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "settings.gradle",
            "/sources/"
          ]
        },
        {
          "CmdLine": [
            "gradle --no-daemon clean build -p /sources/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/config/",
            "/etc/grafana/scripts/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/config/grafana/grafana.ini",
            "/etc/grafana/grafana.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/influxdb.conf",
            "/etc/influxdb/influxdb.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/init_influx.sh",
            "/init_influx.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/init_grafana.sh",
            "/init_grafana.sh"
          ]
        },
        {
          "CmdLine": [
            "mv /sources/build/libs/blockchain-monitoring-*.jar /blockchain-monitoring.jar"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/init.sh",
            "/init.sh"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/lib/grafana",
            "/var/log/grafana",
            "/etc/grafana",
            "/var/lib/influxdb",
            "/etc/conf/net-config.yaml"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "3000"
          ]
        },
        {
          "CmdLine": [
            "/init.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}