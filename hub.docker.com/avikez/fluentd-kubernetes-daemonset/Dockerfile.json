{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "fluent/fluentd:v0.12.33",
      "SourceCode": "FROM fluent/fluentd:v0.12.33",
      "Platform": "",
      "From": {
        "Image": "fluent/fluentd:v0.12.33"
      },
      "Commands": [
        {
          "Maintainer": "Eduardo Silva \u003ceduardo@treasure-data.com\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Name": "workdir",
          "Path": "/home/fluent"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/home/fluent/.gem/ruby/2.3.0/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex     \u0026\u0026 apk add --no-cache --virtual .build-deps         build-base         ruby-dev     \u0026\u0026 echo 'gem: --no-document' \u003e\u003e /etc/gemrc     \u0026\u0026 gem install fluent-plugin-secure-forward     \u0026\u0026 gem install fluent-plugin-record-reformer     \u0026\u0026 gem install fluent-plugin-elasticsearch     \u0026\u0026 gem install fluent-plugin-kubernetes_metadata_filter     \u0026\u0026 apk del .build-deps     \u0026\u0026 rm -rf /tmp/* /var/tmp/* /usr/lib/ruby/gems/*/cache/*.gem"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./conf/fluent.conf",
            "/fluentd/etc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "./conf/kubernetes.conf",
            "/fluentd/etc/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "plugins",
            "/fluentd/plugins/"
          ]
        },
        {
          "Env": [
            {
              "Key": "FLUENTD_OPT",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "FLUENTD_CONF",
              "Value": "\"fluent.conf\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "exec fluentd -c /fluentd/etc/$FLUENTD_CONF -p /fluentd/plugins $FLUENTD_OPT"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}