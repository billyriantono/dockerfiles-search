MetaArgs: null
Stages:
- BaseName: python:2-alpine
  Commands:
  - Maintainer: Dmitry Shmelev, https://github.com/dshmelev
    Name: maintainer
  - Env:
    - Key: CONFIG_DIR
      Value: /opt/config
    Name: env
  - Env:
    - Key: RULES_DIR
      Value: /opt/rules
    Name: env
  - Env:
    - Key: LOG_DIR
      Value: /opt/logs
    Name: env
  - Env:
    - Key: ELASTALERT_HOME
      Value: /opt/elastalert
    Name: env
  - Env:
    - Key: ELASTALERT_CONFIG
      Value: ${CONFIG_DIR}/elastalert_config.yaml
    Name: env
  - Env:
    - Key: ELASTALERT_URL
      Value: https://github.com/Yelp/elastalert/archive/master.zip
    Name: env
  - Name: workdir
    Path: /opt
  - CmdLine:
    - apk add --no-cache --update python-dev gcc ca-certificates openssl openssl-dev
      musl-dev libffi-dev &&     easy_install pip &&     wget ${ELASTALERT_URL} &&     unzip
      *.zip &&     rm *.zip &&     mv elastalert* ${ELASTALERT_HOME}
    Name: run
    PrependShell: true
  - Name: workdir
    Path: ${ELASTALERT_HOME}
  - CmdLine:
    - python setup.py install &&     pip install -e . &&     pip uninstall twilio
      --yes &&     pip install twilio==6.0.0
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p ${CONFIG_DIR} &&     mkdir -p ${RULES_DIR} &&     mkdir -p ${LOG_DIR}
      &&     cp ${ELASTALERT_HOME}/config.yaml.example ${ELASTALERT_CONFIG}
    Name: run
    PrependShell: true
  - CmdLine:
    - apk del python-dev &&     apk del musl-dev &&     apk del libffi-dev &&     apk
      del openssl-dev &&     apk del gcc
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - ${CONFIG_DIR}
    - ${RULES_DIR}
    - ${LOG_DIR}
  - CmdLine:
    - python ${ELASTALERT_HOME}/elastalert/elastalert.py --config ${ELASTALERT_CONFIG}
      --verbose
    Name: cmd
    PrependShell: true
  From:
    Image: python:2-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM python:2-alpine
