{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Maintainer": "Michael Youngblood \u003cMichael.Youngblood@parc.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "INSTANCE",
              "Value": "mavsim"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "expose",
          "Ports": [
            "10000-10001"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "14550-14559"
          ]
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026 apk add --no-cache\tgit \tlibtool \tautomake \tautoconf \texpat-dev \tgcc \tmake \tcmake \tg++ \tpython \tpy-lxml \tpy-pip \tccache \tgawk \tfreetype-dev \tlibpng-dev \tpython-dev \tlapack-dev \tgfortran \tca-certificates \topenssl \tlinux-headers"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pip matplotlib \tpyserial \tscipy \tpexpect \tfuture"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"/tmp\""
        },
        {
          "CmdLine": [
            "update-ca-certificates \u0026\u0026 \tcd /tmp \u0026\u0026 \twget -O opencv-2.4.13.4.tar.gz https://github.com/opencv/opencv/archive/2.4.13.4.tar.gz \u0026\u0026 \ttar -xzf opencv-2.4.13.4.tar.gz \u0026\u0026\tcd /tmp/opencv-2.4.13.4 \u0026\u0026 \tmkdir build \u0026\u0026 \tcd build \u0026\u0026 \tcmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_FFMPEG=NO -D WITH_IPP=NO -D WITH_OPENEXR=NO .. \u0026\u0026 \tmake VERBOSE=1 \u0026\u0026 \tmake \u0026\u0026 \tmake install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"/\""
        },
        {
          "CmdLine": [
            "git clone git://github.com/ArduPilot/ardupilot.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"/ardupilot\""
        },
        {
          "CmdLine": [
            "git submodule update --init --recursive;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"/\""
        },
        {
          "CmdLine": [
            "git clone git://github.com/tridge/jsbsim.git"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"/jsbsim\""
        },
        {
          "CmdLine": [
            "./autogen.sh --enable-libraries \u0026\u0026 make"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s /usr/include/locale.h /usr/include/xlocale.h"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i 's/, int,/, unsigned int,/' /usr/include/assert.h"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install pymavlink \tMAVProxy"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=$PATH:/jsbsim/src' \u003e\u003e /etc/profile \u0026\u0026 \techo 'export PATH=$PATH:/ardupilot/Tools/autotest' \u003e\u003e /etc/profile \u0026\u0026 \techo 'export PATH=/usr/lib/ccache:$PATH' \u003e\u003e /etc/profile \u0026\u0026 \techo 'export PYTHONPATH=/usr/local/lib/python2.7/site-packages:$PYTHONPATH' \u003e\u003e /etc/profile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "\"/ardupilot/ArduPlane\""
        },
        {
          "CmdLine": [
            "sed -i 's/feenableexcept(exceptions);/\\/\\/feenableexcept(exceptions);/' /ardupilot/libraries/AP_HAL_SITL/Scheduler.cpp  \u0026\u0026 \tsed -i 's/int old = fedisableexcept(FE_OVERFLOW);/int old = 1;/' /ardupilot/libraries/AP_Math/matrix_alg.cpp \u0026\u0026 \tsed -i 's/if (old \u003e= 0 \u0026\u0026 feenableexcept(old) \u003c 0)/if (0)/' /ardupilot/libraries/AP_Math/matrix_alg.cpp \u0026\u0026 \tsed -i \"s/#include \u003csys\\/types.h\u003e/#include \u003csys\\/types.h\u003e\\n\\n#define TCGETS2 _IOR('T', 0x2A, struct termios2)\\n#define TCSETS2 _IOW('T', 0x2B, struct termios2)/\" /ardupilot/libraries/AP_HAL_SITL/UART_utils.cpp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            ". /etc/profile \u0026\u0026 sim_vehicle.py -w"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del \tbuild-base \tcmake \tautomake \tautoconf \tccache \topenssl \tca-certificates \tgawk \u0026\u0026 \trm -rf /var/cache/apk/* \u0026\u0026 \trm -rf /tmp/opencv* \u0026\u0026 \trm -rf /root/.ccache \u0026\u0026 \trm -rf /root/.config \u0026\u0026 \trm -rf /root/.ash_history \u0026\u0026 \trm -rf /root/.tilecache \u0026\u0026 \trm -rf /jsbsim/.git \u0026\u0026 \trm -rf /ardupilot/.git/objects/pack"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "ENV",
              "Value": "\"/etc/profile\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SIM_OPTIONS",
              "Value": "\"--out=udpout:docker.for.mac.localhost:14559\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SPEEDUP",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "\"/ardupilot/ArduPlane\""
        },
        {
          "CmdLine": [
            ". /etc/profile \u0026\u0026 sim_vehicle.py --speedup=$SPEEDUP $SIM_OPTIONS"
          ],
          "Name": "entrypoint",
          "PrependShell": true
        }
      ]
    }
  ]
}