{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:edge",
      "SourceCode": "FROM alpine:edge",
      "Platform": "",
      "From": {
        "Image": "alpine:edge"
      },
      "Commands": [
        {
          "CmdLine": [
            "echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' \u003e\u003e /etc/apk/repositories \u0026\u0026   apk update \u0026\u0026   apk upgrade \u0026\u0026   apk --no-cache add     bash     gawk     sed     grep     bc     coreutils     vim     supervisor     curl     wget     openssh     git     zip     bzip2     libressl-dev     php7     php7-bcmath     php7-curl     php7-ctype     php7-dom     php7-fileinfo     php7-fpm     php7-gd     php7-iconv     php7-json     php7-mcrypt     php7-mbstring     php7-mysqlnd     php7-pdo     php7-pdo_mysql     php7-posix     php7-phar     php7-openssl     php7-session     php7-simplexml     php7-soap     php7-tokenizer     php7-xml     php7-xmlreader     php7-xmlwriter     php7-zip     php7-zlib"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php7 -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/php.ini",
            "/etc/php7/conf.d/40-custom.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/php-fpm-www.conf",
            "/etc/php7/php-fpm.d/www.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/.bashrc",
            "/root/.bashrc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/start.sh",
            "/bin/original_start.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/supervisord.conf",
            "/etc/supervisor.d/supervisord.ini"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker/nginx.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "CmdLine": [
            "ln -snf /bin/bash /bin/sh \u0026\u0026     sed -i -e 's/\\r$//' /root/.bashrc \u0026\u0026     tr -d '\\r' \u003c /bin/original_start.sh \u003e /bin/start.sh \u0026\u0026     chmod -R 700 /bin/start.sh \u0026\u0026     printf \"color desert\" \u003e /root/.vimrc \u0026\u0026     addgroup -g 82 -S www-data \u0026\u0026     adduser -u 82 -D -S -G www-data www-data \u0026\u0026     php-fpm7 \u0026\u0026     rm -fr /var/cache/apk/* \u0026\u0026     mkdir /root/.ssh \u0026\u0026     touch /root/.ssh/known_hosts \u0026\u0026     ssh-keyscan github.com \u003e\u003e ~/.ssh/known_hosts"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk --no-cache add nginx \u0026\u0026     mkdir -p /run/nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".",
            "/var/www/vito-api"
          ]
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /var/www/vito-api \u0026\u0026     composer install -n --no-dev \u0026\u0026     chown -R www-data:www-data /var/www/vito-api/bootstrap/cache \u0026\u0026     chown -R www-data:www-data /var/www/vito-api/storage"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/vito-api"
        },
        {
          "Name": "expose",
          "Ports": [
            "9000"
          ]
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "xterm-color"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sh",
            "/bin/start.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}