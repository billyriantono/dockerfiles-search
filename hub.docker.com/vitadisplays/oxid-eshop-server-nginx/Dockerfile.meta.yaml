MetaArgs: null
Stages:
- BaseName: vitadisplays/oxid-eshop-server-base:php5.6
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"oxid-eshop-server Docker Maintainers <technik@vitadisplays.com>"'
    Name: label
  - Env:
    - Key: PHP_VERSION
      Value: "5.6"
    Name: env
  - Env:
    - Key: OXID_SHOP_HOME
      Value: /srv/www/oxid
    Name: env
  - Key: SGNGX_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: SGNGX_VERSION
      Value: ${SGNGX_VERSION:-jj_nginx_pagespeed_unknown}
    Name: env
  - Key: INSTALL_NGINX_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: INSTALL_NGINX_VERSION
      Value: ${INSTALL_NGINX_VERSION:-1.14.2}
    Name: env
  - Key: INSTALL_PAGESPEED_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: INSTALL_PAGESPEED_VERSION
      Value: ${INSTALL_PAGESPEED_VERSION:-latest-stable}
    Name: env
  - CmdLine:
    - apt-get update && apt-get upgrade -y
    Name: run
    PrependShell: true
  - Expression: 'RUN apt-get update && apt-get upgrade -y '
    Name: onbuild
  - CmdLine:
    - apt-get install -y --no-install-recommends curl sudo build-essential zlib1g-dev
      libpcre3 libpcre3-dev unzip wget libssl-dev ca-certificates
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "USING NGINX: ${INSTALL_NGINX_VERSION}" &&       echo "USING PAGESPEED:
      ${INSTALL_PAGESPEED_VERSION}" &&       echo "USING brotli: master" &&       git
      clone --recursive https://github.com/google/ngx_brotli.git  &&       curl -f
      -L -sS https://ngxpagespeed.com/install | tee install_ngxpagespeed.bash &&       bash
      install_ngxpagespeed.bash       --assume-yes       --ngx-pagespeed-version ${INSTALL_PAGESPEED_VERSION}       --nginx-version
      ${INSTALL_NGINX_VERSION}       --dynamic-module       --additional-nginx-configure-arguments
      ''        --add-module=/ngx_brotli         --with-http_ssl_module         --with-http_gzip_static_module         --with-file-aio         --with-http_v2_module         --with-http_stub_status_module         --with-http_realip_module         --without-http_autoindex_module         --without-http_browser_module         --without-http_memcached_module         --without-http_userid_module         --without-mail_pop3_module         --without-mail_imap_module         --without-mail_smtp_module         --without-http_split_clients_module         --without-http_scgi_module         --without-http_referer_module         --without-http_upstream_ip_hash_module         --prefix=/etc/nginx         --conf-path=/etc/nginx/nginx.conf         --http-log-path=/var/log/nginx/access.log         --error-log-path=/var/log/nginx/error.log         --pid-path=/var/run/nginx.pid         --sbin-path=/usr/sbin         --modules-path=/usr/lib/nginx       '''
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get remove -y --auto-remove build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf /nginx-*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf /ngx_pagespeed-*
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -Rf /ngx_brotli*
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /etc/nginx/sites-available && \tmkdir -p /etc/nginx/sites-enabled
      && \tmkdir -p /etc/nginx/modules-available && \tmkdir -p /etc/nginx/modules-enabled
      && \tmkdir -p /etc/nginx/conf.d && \tmkdir -p /etc/nginx/common && \tmkdir -p
      /etc/nginx/ssl && \tmkdir -p /var/cache/nginx &&     mkdir -p /var/cache/ngx_pagespeed"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "load_module "/usr/lib/nginx/ngx_pagespeed.so";" > /etc/nginx/modules-available/pagespeed.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl req -x509 -nodes -days 3650 -newkey rsa:4096 -keyout /etc/nginx/ssl/oxid.key
      -out /etc/nginx/ssl/oxid.crt -subj "/C=DE/ST=Niedersachsen/L=Doeverden/O=VITAdisplays
      International Holding GmbH/OU=IT Department/CN=example.com"
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - nginx/
    - /etc/nginx/
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - pagespeed/
    - /etc/nginx/
  - CmdLine:
    - "sed -i \"s|<PHP_VERSION>|$PHP_VERSION|g\" /etc/nginx/sites-available/oxid.conf
      && \tsed -i \"s|<ROOT_DIR>|$OXID_SHOP_HOME|g\" /etc/nginx/sites-available/oxid.conf
      && \trm -f /etc/nginx/sites-enabled/* && \tln -s /etc/nginx/sites-available/oxid.conf
      /etc/nginx/sites-enabled/ && \tln -s /etc/nginx/modules-available/pagespeed.conf
      /etc/nginx/modules-enabled/"
    Name: run
    PrependShell: true
  - CmdLine:
    - usermod --non-unique --uid 1000 www-data   && groupmod --non-unique --gid 1000
      www-data
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p /srv/www/oxid && chown -R www-data:www-data /srv/www/oxid &&\tchown
      -R www-data:www-data /var/cache/ngx_pagespeed &&     chown -R www-data:www-data
      /var/cache/nginx &&     chown -R root:www-data /etc/nginx/* &&     find /etc/nginx
      -type d -exec chmod g+rx,g-w,o-rwx {} \\; &&     find /etc/nginx -type f -exec
      chmod g+r,g-wx,o-rwx {} \\;"
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - supervisor/
    - /etc/supervisor/
  - Name: volume
    Volumes:
    - /srv/www/oxid
  - Name: volume
    Volumes:
    - /etc/nginx
  - Name: volume
    Volumes:
    - /var/log/nginx
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "443"
  From:
    Image: vitadisplays/oxid-eshop-server-base:php5.6
  Name: ""
  Platform: ""
  SourceCode: FROM vitadisplays/oxid-eshop-server-base:php5.6
