{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "adammay/dev_machines_python:latest",
      "SourceCode": "FROM adammay/dev_machines_python:latest",
      "Platform": "",
      "From": {
        "Image": "adammay/dev_machines_python:latest"
      },
      "Commands": [
        {
          "Maintainer": "Adam May \u003cadammay@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "DNX_VERSION",
              "Value": "1.0.0-rc1-final"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DNX_USER_HOME",
              "Value": "/opt/DNX_BRANCH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DNX_RUNTIME_ID",
              "Value": "ubuntu.14.04-x64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get -qq update \u0026\u0026 apt-get -qqy install unzip curl libicu-dev libunwind8 gettext libssl-dev libcurl3-gnutls zlib1g \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/dnvminstall.sh | DNX_USER_HOME=$DNX_USER_HOME DNX_BRANCH=v$DNX_VERSION sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "bash -c \"source $DNX_USER_HOME/dnvm/dnvm.sh \t\u0026\u0026 dnvm install $DNX_VERSION -alias default -r coreclr \t\u0026\u0026 dnvm alias default | xargs -i ln -s $DNX_USER_HOME/runtimes/{} $DNX_USER_HOME/runtimes/default\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "LIBUV_VERSION=1.4.2 \t\u0026\u0026 apt-get -qq update \t\u0026\u0026 apt-get -qqy install autoconf automake build-essential libtool \t\u0026\u0026 curl -sSL https://github.com/libuv/libuv/archive/v${LIBUV_VERSION}.tar.gz | tar zxfv - -C /usr/local/src \t\u0026\u0026 cd /usr/local/src/libuv-$LIBUV_VERSION \t\u0026\u0026 sh autogen.sh \u0026\u0026 ./configure \u0026\u0026 make \u0026\u0026 make install \t\u0026\u0026 rm -rf /usr/local/src/libuv-$LIBUV_VERSION \t\u0026\u0026 ldconfig \t\u0026\u0026 apt-get -y purge autoconf automake build-essential libtool \t\u0026\u0026 apt-get -y autoremove \t\u0026\u0026 apt-get -y clean \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:$DNX_USER_HOME/runtimes/default/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "/bin/zsh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}