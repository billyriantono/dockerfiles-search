{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine",
      "SourceCode": "FROM alpine",
      "Platform": "",
      "From": {
        "Image": "alpine"
      },
      "Commands": [
        {
          "Maintainer": "Ryan Roberts \u003cryansroberts@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "JRE",
              "Value": "jre1.8.0_60"
            },
            {
              "Key": "JAVA_HOME",
              "Value": "/opt/jre"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "lib/",
            "/tmp/lib"
          ]
        },
        {
          "CmdLine": [
            "apk add --update wget ca-certificates bash \u0026\u0026     cd /tmp \u0026\u0026     apk add --allow-untrusted /tmp/lib/glibc-2.21-r2.apk /tmp/lib/glibc-bin-2.21-r2.apk \u0026\u0026     /usr/glibc/usr/bin/ldconfig /lib /usr/glibc/usr/lib \u0026\u0026     echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' \u003e\u003e /etc/nsswitch.conf \u0026\u0026     mkdir /opt \u0026\u0026     wget http://www.java.net/download/jdk8u60/archive/b18/binaries/jre-8u60-ea-bin-b18-linux-x64-02_jun_2015.tar.gz -O /tmp/${JRE}.tgz \u0026\u0026     cd /opt \u0026\u0026 tar zxvf /tmp/${JRE}.tgz \u0026\u0026     ln -s /opt/${JRE} /opt/jre \u0026\u0026     ln -s /opt/jre/bin/java /usr/bin/java \u0026\u0026     apk del wget ca-certificates \u0026\u0026     apk add --update unzip \u0026\u0026    rm -rf /tmp/* /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "STARDOG_VER",
              "Value": "4.0.1"
            },
            {
              "Key": "STARDOG_HOME",
              "Value": "/stardog"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/stardog"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/stardog-$STARDOG_VER/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "resources/stardog-${STARDOG_VER}.tar.gz",
            "/"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "resources/stardog-license-key.bin",
            "/stardog-$STARDOG_VER/"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/stardog-${STARDOG_VER}"
        },
        {
          "Name": "expose",
          "Ports": [
            "5820"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "rm /stardog/system.lock || true \u0026\u0026     cp /stardog-$STARDOG_VER/stardog-license-key.bin $STARDOG_HOME \u0026\u0026     ./bin/stardog-admin server start \u0026\u0026     sleep 1 \u0026\u0026     (tail -f $STARDOG_HOME/stardog.log \u0026) \u0026\u0026     while (pidof java \u003e /dev/null); do sleep 1; done"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}