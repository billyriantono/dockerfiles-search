{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:8",
      "SourceCode": "FROM java:8",
      "Platform": "",
      "From": {
        "Image": "java:8"
      },
      "Commands": [
        {
          "Maintainer": "Petri Sirkkala \u003csirpete@iki.fi\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DEBCONF_NONINTERACTIVE_SEEN",
              "Value": "true"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get -y install     build-essential     iceweasel     imagemagick     git     iceweasel     locales     lsb-release     maven     rsync     software-properties-common     sudo     x11vnc     Xvfb \u0026\u0026   update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get install     apt-transport-https \u0026\u0026   curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \u0026\u0026   add-apt-repository    \"deb [arch=amd64] https://download.docker.com/linux/debian    $(lsb_release -cs)    stable\" \u0026\u0026   apt-get update \u0026\u0026   apt-get -y install     ca-certificates     gnupg2     docker-ce=17.06.0~ce-0~debian \u0026\u0026   rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -   \u0026\u0026 echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" \u003e\u003e /etc/apt/sources.list.d/google-chrome.list   \u0026\u0026 apt-get update -qqy   \u0026\u0026 apt-get -qqy install     google-chrome-stable   \u0026\u0026 rm /etc/apt/sources.list.d/google-chrome.list   \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "CHROME_DRIVER_VERSION",
              "Value": "2.14"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "wget --no-verbose -O /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip   \u0026\u0026 rm -rf /opt/selenium/chromedriver   \u0026\u0026 unzip /tmp/chromedriver_linux64.zip -d /opt/selenium   \u0026\u0026 rm /tmp/chromedriver_linux64.zip   \u0026\u0026 mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION   \u0026\u0026 chmod 755 /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION   \u0026\u0026 ln -fs /opt/selenium/chromedriver-$CHROME_DRIVER_VERSION /usr/bin/chromedriver"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LEIN_ROOT",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -L -s https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein \u003e     /usr/local/bin/lein  \u0026\u0026 chmod 0755 /usr/local/bin/lein  \u0026\u0026 lein upgrade"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_4.x | bash - \u0026\u0026   apt-get -y install nodejs \u0026\u0026   npm install -g npm@2.5.1 \u0026\u0026   npm install -g bower@1.3.12 \u0026\u0026   npm install -g grunt-cli@0.1.13 \u0026\u0026   npm install -g gulp@3.8.11 \u0026\u0026   npm install -g nightwatch@0.9.16 \u0026\u0026   echo 'export PATH=\"node_modules/.bin:$PATH\"' \u003e\u003e /root/.bashrc \u0026\u0026   echo 'export PATH=\"node_modules/.bin:$PATH\"' \u003e\u003e /etc/skel/.bashrc \u0026\u0026   chmod o+w -R /usr/local # Allow write for npm installs -g"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JENKINS_SWARM_VERSION",
              "Value": "2.2"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/jenkins-slave"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -c \"Jenkins Slave user\" -d $HOME -m jenkins-slave \u0026\u0026   usermod -a -G sudo jenkins-slave \u0026\u0026   echo \"jenkins-slave ALL=(ALL) NOPASSWD:ALL\" \u003e/etc/sudoers.d/jenkins-slave \u0026\u0026   curl --create-dirs -sSLo /usr/share/jenkins/swarm-client-$JENKINS_SWARM_VERSION-jar-with-dependencies.jar     https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/$JENKINS_SWARM_VERSION/swarm-client-$JENKINS_SWARM_VERSION-jar-with-dependencies.jar \u0026\u0026   chmod 755 /usr/share/jenkins"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"LANG=en_US.UTF-8\" \u003e /etc/default/locale \u0026\u0026   echo \"en_US.UTF-8 UTF-8\" \u003e\u003e /etc/locale.gen \u0026\u0026   locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LANGUAGE",
              "Value": "en_US:en"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LC_ALL",
              "Value": "en_US.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_OPTS",
              "Value": "-Duser.country=US -Duser.language=en"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "ln -sf /usr/share/zoneinfo/Europe/Helsinki /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "TZ",
              "Value": "Europe/Helsinki"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "user",
          "User": "jenkins-slave"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "jenkins-slave.sh",
            "/usr/local/bin/jenkins-slave.sh"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bowerrc",
            "/home/jenkins-slave/.bowerrc"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/home/jenkins-slave"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/home/jenkins-slave"
        },
        {
          "CmdLine": [
            "/usr/local/bin/jenkins-slave.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}