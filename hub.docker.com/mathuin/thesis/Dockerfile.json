{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:xenial",
      "SourceCode": "FROM ubuntu:xenial",
      "Platform": "",
      "From": {
        "Image": "ubuntu:xenial"
      },
      "Commands": [
        {
          "Maintainer": "Jack Twilley \u003ctwilleyj@lifetime.oregonstate.edu\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver keyserver.ubuntu.com --recv-key E084DAB9"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'deb http://cran.rstudio.com/bin/linux/ubuntu xenial/' \u003e\u003e /etc/apt/sources.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install -y   biber   build-essential   latexmk   r-base   texlive-latex-extra   texlive-latex-recommended   texlive-science   texlive-xetex \u0026\u0026   apt clean \u0026\u0026 rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'r = getOption(\"repos\")\\nr[\"CRAN\"] = \"https://cran.bnr.berkeley.edu\"\\noptions(repos=r)\\nrm(r)\\nipak \u003c- function(pkg){\\n    new.pkg \u003c- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\\n    if (length(new.pkg) \u003e 0)\\n        install.packages(new.pkg, dependencies = TRUE)\\n    sapply(pkg, require, character.only = TRUE)\\n}' \u003e /root/.Rprofile"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '#!/bin/bash\\nsource /root/.bashrc\\nif [ \"$#\" -ne 1 ]; then\\n    \"$@\"\\nelse\\n    make realclean thesis.pdf\\nfi' \u003e /root/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /root/docker-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo '#!/bin/bash\\nchown --reference=/data -R /data\\n' \u003e /root/cleanup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /root/cleanup.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'trap /root/cleanup.sh EXIT\\n' \u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/data"
          ]
        },
        {
          "Name": "workdir",
          "Path": "\"/data\""
        },
        {
          "Key": "BUILD_DATE",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_REF",
          "Name": "arg",
          "Value": null
        },
        {
          "Key": "VCS_URL",
          "Name": "arg",
          "Value": null
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.build-date",
              "Value": "$BUILD_DATE"
            },
            {
              "Key": "org.label-schema.docker.dockerfile",
              "Value": "\"/Dockerfile\""
            },
            {
              "Key": "org.label-schema.license",
              "Value": "\"CC BY-SA 4.0\""
            },
            {
              "Key": "org.label-schema.vcs-ref",
              "Value": "$VCS_REF"
            },
            {
              "Key": "org.label-schema.vcs-type",
              "Value": "\"git\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "$VCS_URL"
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "/root/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/bin/bash"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}