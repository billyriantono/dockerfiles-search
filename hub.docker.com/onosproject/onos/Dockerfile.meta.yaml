MetaArgs:
- DefaultValue: "11"
  Key: JDK_VER
  ProvidedValue: null
  Value: "11"
- DefaultValue: 1.0.0
  Key: BAZEL_VER
  ProvidedValue: null
  Value: 1.0.0
- DefaultValue: "2"
  Key: JOBS
  ProvidedValue: null
  Value: "2"
Stages:
- As: builder
  BaseName: azul/zulu-openjdk:${JDK_VER}
  Commands:
  - Env:
    - Key: BUILD_DEPS
      Value: ca-certificates     zip     python     python3     git     bzip2     build-essential     curl     unzip
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y ${BUILD_DEPS}
    Name: run
    PrependShell: true
  - Key: BAZEL_VER
    Name: arg
    Value: null
  - CmdLine:
    - curl -L -o bazel.sh https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VER}/bazel-${BAZEL_VER}-installer-linux-x86_64.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x bazel.sh && ./bazel.sh
    Name: run
    PrependShell: true
  - Env:
    - Key: ONOS_ROOT
      Value: /src/onos
    Name: env
  - Env:
    - Key: BUILD_NUMBER
      Value: docker
    Name: env
  - Env:
    - Key: JAVA_TOOL_OPTIONS
      Value: -Dfile.encoding=UTF8
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - ${ONOS_ROOT}
  - Name: workdir
    Path: ${ONOS_ROOT}
  - Key: JOBS
    Name: arg
    Value: null
  - Key: JDK_VER
    Name: arg
    Value: null
  - CmdLine:
    - bazel build onos     --jobs ${JOBS}     --verbose_failures     --javabase=@bazel_tools//tools/jdk:absolute_javabase     --host_javabase=@bazel_tools//tools/jdk:absolute_javabase     --define=ABSOLUTE_JAVABASE=/usr/lib/jvm/zulu-${JDK_VER}-amd64
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /output
    Name: run
    PrependShell: true
  - CmdLine:
    - tar -xf bazel-bin/onos.tar.gz -C /output --strip-components=1
    Name: run
    PrependShell: true
  From:
    Image: azul/zulu-openjdk:${JDK_VER}
  Name: builder
  Platform: ""
  SourceCode: FROM azul/zulu-openjdk:${JDK_VER} as builder
- BaseName: azul/zulu-openjdk:${JDK_VER}
  Commands:
  - Labels:
    - Key: org.label-schema.name
      Value: '"ONOS"'
    - Key: org.label-schema.description
      Value: '"SDN Controller"'
    - Key: org.label-schema.usage
      Value: '"http://wiki.onosproject.org"'
    - Key: org.label-schema.url
      Value: '"http://onosproject.org"'
    - Key: org.label-scheme.vendor
      Value: '"Open Networking Foundation"'
    - Key: org.label-schema.schema-version
      Value: '"1.0"'
    - Key: maintainer
      Value: '"onos-dev@onosproject.org"'
    Name: label
  - CmdLine:
    - "apt-get update && apt-get install -y curl && \trm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - Chown: ""
    From: builder
    Name: copy
    SourcesAndDest:
    - /output/
    - /root/onos/
  - Name: workdir
    Path: /root/onos
  - Key: JDK_VER
    Name: arg
    Value: null
  - Env:
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/zulu-${JDK_VER}-amd64
    Name: env
  - Name: expose
    Ports:
    - "6640"
    - "6653"
    - "8101"
    - "8181"
    - "9876"
  - CmdLine:
    - ./bin/onos-service
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - server
    Name: cmd
    PrependShell: false
  From:
    Image: azul/zulu-openjdk:${JDK_VER}
  Name: ""
  Platform: ""
  SourceCode: FROM azul/zulu-openjdk:${JDK_VER}
