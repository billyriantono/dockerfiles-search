{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.7",
      "SourceCode": "FROM alpine:3.7",
      "Platform": "",
      "From": {
        "Image": "alpine:3.7"
      },
      "Commands": [
        {
          "Maintainer": "Jeremy Chang \u003cjeremychang@qnap.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk update \u0026\u0026     apk add --no-cache bash unzip curl wget git fakeroot ca-certificates tzdata             php5-fpm php5-json php5-zlib php5-xml php5-xmlreader php5-pdo php5-phar php5-openssl             php5-pdo_mysql php5-mysqli php5-sqlite3 php5-pdo_sqlite php5-gd php5-iconv php5-mcrypt php5-curl php5-ctype             openjdk7-jre nodejs python2             make g++"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add -u musl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \u0026\u0026      ALPINE_GLIBC_PACKAGE_VERSION=\"2.26-r0\" \u0026\u0026      ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026      ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026      ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" \u0026\u0026    apk add --no-cache --virtual=.build-dependencies wget ca-certificates \u0026\u0026    wget    \"https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub\"    -O \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026    wget    \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"    \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"    \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026    apk add --no-cache    \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"    \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"    \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" \u0026\u0026       rm \"/etc/apk/keys/sgerrand.rsa.pub\" \u0026\u0026    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true \u0026\u0026    echo \"export LANG=$LANG\" \u003e /etc/profile.d/locale.sh \u0026\u0026       apk del glibc-i18n \u0026\u0026       rm \"/root/.wget-hsts\" \u0026\u0026    apk del .build-dependencies \u0026\u0026    rm    \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\"    \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\"    \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "ln -s $(which awk) /bin/awk \u0026\u0026     ln -s $(which php5) /usr/bin/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /usr/share/zoneinfo/Asia/Taipei /etc/localtime \u0026\u0026     echo \"Asia/Taipei\" \u003e  /etc/timezone"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/memory_limit = 128M/memory_limit = 1024M/g\" /etc/php5/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /bin"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/bin"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/composer",
            "/bin"
          ]
        },
        {
          "CmdLine": [
            "composer self-update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://phar.phpunit.de/phpunit.phar -O phpunit \u0026\u0026     chmod +x phpunit"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require \"hirak/prestissimo\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "composer global require \"squizlabs/php_codesniffer\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm i -g yarn eslint babel-eslint gulp eslint-config-airbnb eslint-plugin-import eslint-plugin-react eslint-plugin-jsx-a11y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf ~/.npm \u0026\u0026 npm cache clear --force \u0026\u0026     composer global clear-cache \u0026\u0026     rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "files/entry.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/entry.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}