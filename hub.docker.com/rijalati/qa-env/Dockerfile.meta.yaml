MetaArgs: null
Stages:
- BaseName: base/arch
  Commands:
  - Maintainer: rijalati@gmail.com
    Name: maintainer
  - CmdLine:
    - '[ -d /etc/pacman.d ] || mkdir -p /etc/pacman.d'
    Name: run
    PrependShell: true
  - CmdLine:
    - pacman -Syy
    Name: run
    PrependShell: true
  - CmdLine:
    - pacman -S --noconfirm archlinux-keyring
    Name: run
    PrependShell: true
  - CmdLine:
    - pacman -Syu -y --needed --noconfirm --force
    Name: run
    PrependShell: true
  - CmdLine:
    - pacman-db-upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - pacman -Syu --noconfirm --needed     base-devel     python2     python2-pip     salt-raet     emacs-nox     vim     vim-plugins     mksh     bash     sudo     git     wget     openbsd-netcat     socat     inetutils     wxgtk2.8     wxpython2.8     xorg-xauth     xorg-fonts     xorg-fonts-75dpi     xorg-fonts-100dpi     firefox     pass     fping     hping     nmap     traceroute     tmux     docker     htop
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2 install --upgrade pip setuptools
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2 install     Paver     robotframework     robotframework-tools     robotframework-rfdoc     robotframework-selenium2library     robotframework-selenium2screenshots     robotframework-sshlibrary     robotframework-hub     robotframework-lint     robotframework-pageobjects     robotframework-pycurllibrary     robotframework-httplibrary     sphinxcontrib-robotframework     Pygments     pep8     pylint     jedi     pyvmomi     Cython
    Name: run
    PrependShell: true
  - CmdLine:
    - pip2 install robotframework-databaselibrary
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p /opt/ast/bin
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /opt/ast
  - Env:
    - Key: PATH
      Value: $HOME/.pyenv/bin:$PATH:/opt/ast/bin
    Name: env
  - CmdLine:
    - wget -O - http://www.research.att.com/sw/download/package > bin/package
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x bin/package
    Name: run
    PrependShell: true
  - CmdLine:
    - package authorize "I accept www.opensource.org/licenses/eclipse" password "."
      flat setup binary http://www.research.att.com/sw/download ast-cql
    Name: run
    PrependShell: true
  - CmdLine:
    - package flat install /opt/ast ast-cql
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd -m -G wheel -U admin
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'admin:secret' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'admin ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
    Name: run
    PrependShell: true
  - CmdLine:
    - pacman -R --noconfirm systemd-sysvcompat
    Name: run
    PrependShell: true
  - Name: user
    User: admin
  - Env:
    - Key: HOME
      Value: /home/admin
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - Name: workdir
    Path: /home/admin
  - CmdLine:
    - wget -o aur.sh aur.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - mv index.html aur.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x aur.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - /bin/sh
    - /home/admin/aur.sh
    - -si
    - --noconfirm
    - aura-bin
    Name: run
    PrependShell: false
  - CmdLine:
    - sudo aura -A --noconfirm --force tm s6 selenium-server-standalone rc.local.d
      star openssh-hpn-git docker-machine docker-swarm docker-compose flocker mawk
      scsh-git
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo pacman -S --noconfirm openntpd man lxc
    Name: run
    PrependShell: true
  - CmdLine:
    - sudo mandb --quiet
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/vmware/pyvmomi-community-samples.git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/vmware/pyvmomi-tools.git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/lamw/vghetto-scripts.git
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/robotframework/RIDE.git
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bash_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bash_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'eval "$(pyenv init -)"' >> ~/.bash_profile
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/rijalati/dotfiles.git
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer
      | /bin/bash
    Name: run
    PrependShell: true
  - CmdLine:
    - bash -c "source .bashrc && if [[ -x /home/admin/.bash_profile ]]; then source
      ./.bash_profile && pyenv update; fi;"
    Name: run
    PrependShell: true
  - CmdLine:
    - cp dotfiles/mkshrc ~/.mkshrc
    Name: run
    PrependShell: true
  - CmdLine:
    - cp dotfiles/kshrc ~/.kshrc
    Name: run
    PrependShell: true
  - CmdLine:
    - /opt/ast/bin/ksh
    Name: cmd
    PrependShell: false
  From:
    Image: base/arch
  Name: ""
  Platform: ""
  SourceCode: FROM base/arch
