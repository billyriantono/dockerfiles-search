MetaArgs: null
Stages:
- BaseName: phusion/baseimage:0.9.15
  Commands:
  - Maintainer: Shinichi Ohno
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: PORT
      Value: "8080"
    Name: env
  - Env:
    - Key: RAILS_ENV
      Value: production
    Name: env
  - CmdLine:
    - /sbin/my_init
    Name: cmd
    PrependShell: false
  - CmdLine:
    - echo "LANG=\"en_GB.UTF-8\"" > /etc/default/locale
    Name: run
    PrependShell: true
  - CmdLine:
    - locale-gen en_GB.UTF-8
    Name: run
    PrependShell: true
  - CmdLine:
    - dpkg-reconfigure locales
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential wget curl git git-core
    Name: run
    PrependShell: true
  - CmdLine:
    - echo deb http://archive.ubuntu.com/ubuntu precise universe multiverse >> /etc/apt/sources.list;
      apt-get update; apt-get -y install autoconf automake build-essential libass-dev
      libgpac-dev libtheora-dev libtool libvdpau-dev libvorbis-dev pkg-config texi2html
      zlib1g-dev libmp3lame-dev wget; apt-get clean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/src; git clone http://git.videolan.org/git/x264.git; git clone
      https://github.com/mstorsjo/fdk-aac.git; git clone https://chromium.googlesource.com/webm/libvpx;
      git clone http://git.videolan.org/git/ffmpeg.git; wget http://downloads.xiph.org/releases/opus/opus-1.0.3.tar.gz;
      wget http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz;
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/src; tar xzvf yasm-1.2.0.tar.gz; cd yasm-1.2.0; ./configure; make
      -j 4; make install; make distclean;
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/src/x264; ./configure --enable-static; make -j 4; make install;
      make distclean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/src/fdk-aac; autoreconf -fiv; ./configure --disable-shared; make
      -j 4; make install; make distclean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/src/libvpx; ./configure --disable-examples; make -j 4; make install;
      make clean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/src; tar zxvf opus-1.0.3.tar.gz; cd opus-1.0.3; ./configure --disable-shared;
      make -j 4; make install; make distclean
    Name: run
    PrependShell: true
  - CmdLine:
    - cd /usr/local/src/ffmpeg; ./configure --extra-libs="-ldl" --enable-gpl --enable-libass
      --enable-libfdk-aac --enable-libmp3lame --enable-libopus --enable-libtheora
      --enable-libvorbis --enable-libvpx --enable-libx264 --enable-nonfree; make -j
      4; make install; make distclean;
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y imagemagick
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y software-properties-common &&   apt-get update &&   add-apt-repository
      -y ppa:chris-lea/node.js &&   apt-get update &&   apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - 'apt-get -y install     libcurl4-openssl-dev     libreadline-dev     libssl-dev     libxml2-dev     libxslt1-dev     libyaml-dev     zlib1g-dev
      &&     curl -O http://cache.ruby-lang.org/pub/ruby/2.1/ruby-2.1.3.tar.gz &&     tar
      -zxvf ruby-2.1.3.tar.gz &&     cd ruby-2.1.3 &&     ./configure --disable-install-doc
      &&     make -j 4 &&     make install &&     cd .. &&     rm -r ruby-2.1.3 ruby-2.1.3.tar.gz
      &&     echo ''gem: --no-document'' > /usr/local/etc/gemrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libmysqlclient-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install libmagickcore-dev libmagickwand-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo ''gem: --no-rdoc --no-ri'' >> /.gemrc'
    Name: run
    PrependShell: true
  - CmdLine:
    - gem update --system
    Name: run
    PrependShell: true
  - CmdLine:
    - gem update
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install bundler
    Name: run
    PrependShell: true
  - CmdLine:
    - gem install jani-strip_maker
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    Name: run
    PrependShell: true
  - CmdLine:
    - hash -r
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /etc/service/puma
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - docker/puma.sh
    - /etc/service/puma/run
  - CmdLine:
    - chmod +x /etc/service/puma/run
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /tmp
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Gemfile
    - /tmp/Gemfile
  - Chown: ""
    Name: add
    SourcesAndDest:
    - Gemfile.lock
    - /tmp/Gemfile.lock
  - CmdLine:
    - bundle install --without="development test" -j 4
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /app
  - Name: workdir
    Path: /app
  - CmdLine:
    - cp config/redis.yml.sample config/redis.yml
    Name: run
    PrependShell: true
  - CmdLine:
    - cp config/secrets.yml.sample config/secrets.yml
    Name: run
    PrependShell: true
  - CmdLine:
    - cp config/storages.yml.sample config/storages.yml
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p tmp/pids
    Name: run
    PrependShell: true
  - CmdLine:
    - bundle install --without="development test" -j 4
    Name: run
    PrependShell: true
  - CmdLine:
    - bundle exec rake assets:precompile
    Name: run
    PrependShell: true
  From:
    Image: phusion/baseimage:0.9.15
  Name: ""
  Platform: ""
  SourceCode: FROM phusion/baseimage:0.9.15
