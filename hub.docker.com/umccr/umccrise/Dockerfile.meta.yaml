MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Vlad Saveliev "https://github.com/vladsaveliev"
    Name: maintainer
  - Env:
    - Key: HOSTNAME
      Value: umccrise_docker
    Name: env
  - Env:
    - Key: TEST_DATA_PATH
      Value: /umccrise/umccrise_test_data
    Name: env
  - Env:
    - Key: BCBIO_GENOMES_PATH
      Value: /genomes
    Name: env
  - Env:
    - Key: PON_PATH
      Value: /panel_of_normals
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y curl wget git unzip tar gzip bzip2
      g++ make zlib1g-dev nano
    Name: run
    PrependShell: true
  - Env:
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LANG
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: en_US.UTF-8
    Name: env
  - CmdLine:
    - apt-get update &&     apt-get install -y locales language-pack-en &&     locale-gen
      en_US.UTF-8 &&     dpkg-reconfigure locales &&     apt-get install -y tzdata
      &&     echo "Etc/UTC" > /etc/timezone &&     dpkg-reconfigure -f noninteractive
      tzdata
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -nv https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      -O miniconda.sh &&     bash miniconda.sh -b -p /miniconda
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /miniconda/bin:$PATH
    Name: env
  - Env:
    - Key: CONDA_EXE
      Value: /miniconda/bin/conda
    Name: env
  - Env:
    - Key: CONDA_ROOT
      Value: /miniconda
    Name: env
  - Env:
    - Key: CONDA_PYTHON_EXE
      Value: /miniconda/bin/python
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - environment.yml
    - .
  - CmdLine:
    - hash -r &&     conda config --set always_yes yes --set changeps1 no &&     conda
      update -q conda &&     conda env create -n umccrise --file environment.yml
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: /miniconda/envs/umccrise/bin:$PATH
    Name: env
  - Env:
    - Key: CONDA_PREFIX
      Value: /miniconda/envs/umccrise
    Name: env
  - Env:
    - Key: CONDA_DEFAULT_ENV
      Value: umccrise
    Name: env
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - umccrise
    - umccrise/umccrise
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - scripts
    - umccrise/scripts
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - vendor
    - umccrise/vendor
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - setup.py
    - umccrise/setup.py
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - VERSION.txt
    - umccrise/VERSION.txt
  - CmdLine:
    - pip install -e umccrise &&     R -e "library(devtools) ; options(unzip = '/usr/bin/unzip')
      ; devtools::install_github('umccr/rock', ref = 'umccrise')"
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/vladsaveliev/pcgr /pcgr &&     bash /pcgr/install_no_docker/install.sh
      --skip-validation
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf umccrise/.git &&     rm -rf /var/lib/apt/lists/* &&     rm -rf /var/tmp/*
      &&     conda clean --yes --tarballs &&     cd /usr/local &&     apt-get clean
      &&     rm -rf /.cpanm
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
