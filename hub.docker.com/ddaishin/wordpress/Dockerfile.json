{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.2-fpm-alpine",
      "SourceCode": "FROM php:7.2-fpm-alpine",
      "Platform": "",
      "From": {
        "Image": "php:7.2-fpm-alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache \t\tbash \t\tsed \t\tghostscript"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex; \t\tapk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\tfreetype-dev \t\timagemagick-dev \t\tlibjpeg-turbo-dev \t\tlibpng-dev \t\tlibzip-dev \t\ticu-dev \t; \t\tdocker-php-ext-configure gd \t\t--with-freetype-dir=/usr \t\t--with-jpeg-dir=/usr \t\t--with-png-dir=/usr \t; \tdocker-php-ext-install -j \"$(nproc)\" \t\tbcmath \t\texif \t\tgd \t\tmysqli \t\topcache \t\tzip \t; \tpecl install imagick-3.4.4; \tdocker-php-ext-enable imagick; \tpecl install xdebug; \tdocker-php-ext-enable xdebug; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --virtual .wordpress-phpexts-rundeps $runDeps; \tapk del .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'opcache.memory_consumption=128'; \t\techo 'opcache.interned_strings_buffer=8'; \t\techo 'opcache.max_accelerated_files=4000'; \t\techo 'opcache.revalidate_freq=2'; \t\techo 'opcache.fast_shutdown=1'; \t} \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'error_reporting = E_ERROR | E_WARNING | E_PARSE | E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_COMPILE_WARNING | E_RECOVERABLE_ERROR'; \t\techo 'display_errors = Off'; \t\techo 'display_startup_errors = Off'; \t\techo 'log_errors = On'; \t\techo 'error_log = /dev/stderr'; \t\techo 'log_errors_max_len = 1024'; \t\techo 'ignore_repeated_errors = On'; \t\techo 'ignore_repeated_source = Off'; \t\techo 'html_errors = Off'; \t} \u003e /usr/local/etc/php/conf.d/error-logging.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{ \t\techo 'xdebug.remote_enable=1'; \t\techo 'xdebug.remote_host = docker.for.mac.localhost'; \t} \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html"
          ]
        },
        {
          "Env": [
            {
              "Key": "WORDPRESS_VERSION",
              "Value": "latest-ja"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -ex; \tcurl -o wordpress.tar.gz -fSL \"https://ja.wordpress.org/$WORDPRESS_VERSION.tar.gz\"; \ttar -xzf wordpress.tar.gz -C /usr/src/; \trm wordpress.tar.gz; \tchown -R www-data:www-data /usr/src/wordpress; \tsed -i \"s/define('WP_DEBUG', false);/define('WP_DEBUG', true);\\r\\ndefine('DISABLE_WP_CRON', true);\\r\\ndefine('WP_SITEURL', 'http:\\/\\/' . \\$_SERVER['HTTP_HOST'] );/g\" /usr/src/wordpress/wp-config-sample.php;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "php-fpm"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}