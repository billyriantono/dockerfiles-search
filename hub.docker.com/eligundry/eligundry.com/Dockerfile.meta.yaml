MetaArgs: null
Stages:
- BaseName: python:2-slim
  Commands:
  - Labels:
    - Key: maintainer
      Value: '"Eli Gundry <eligundry@gmail.com>"'
    Name: label
  - CmdLine:
    - apt-get update     && apt-get install -y         cron         curl         libffi-dev         libffi6         libssl-dev         nginx         python-dev     &&
      rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - requirements.txt
    - /requirements.txt
  - CmdLine:
    - pip install -U pip cffi     && pip install -r /requirements.txt     && rm -r
      /root/.cache
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -     && apt-get install
      -y nodejs     && npm install -g node-gyp     && rm -r /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/site.conf
    - /etc/nginx/sites-enabled/eligundry.com
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/last-fm-cover-cron.sh
    - /etc/cron.daily/last-fm-cover-cron.sh
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker/crontab
    - /etc/crontab
  - Chown: ""
    Name: add
    SourcesAndDest:
    - .
    - /opt/eligundry.com
  - Name: workdir
    Path: /opt/eligundry.com
  - CmdLine:
    - lektor clean --yes -O /usr/share/nginx/html     && lektor build -f webpack -O
      /usr/share/nginx/html
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8080"
  - Name: expose
    Ports:
    - "5000"
  - CmdLine:
    - '''/opt/eligundry.com/docker/entrypoint.sh'''
    Name: entrypoint
    PrependShell: true
  From:
    Image: python:2-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:2-slim
