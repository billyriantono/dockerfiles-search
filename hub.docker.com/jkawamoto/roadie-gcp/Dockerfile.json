{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:latest",
      "SourceCode": "FROM ubuntu:latest",
      "Platform": "",
      "From": {
        "Image": "ubuntu:latest"
      },
      "Commands": [
        {
          "Maintainer": "Junpei Kawamoto \u003ckawamoto.junpei@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "TERM",
              "Value": "vt100"
            }
          ],
          "Name": "env"
        },
        {
          "Key": "APT_PROXY",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "if [ -n \"$APT_PROXY\" ]; then       echo \"Set apt proxy: $APT_PROXY\";       echo \"Acquire::http { Proxy \\\"$APT_PROXY\\\"; };\" \u003e\u003e /etc/apt/apt.conf.d/01proxy;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Key": "PIP_PROXY",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "if [ -n \"$PYPI_PROXY\" ]; then       echo \"Set pip proxy: $PYPI_PROXY\";       IPPORT=${PYPI_PROXY#*//};       mkdir -p ~/.pip/;       echo \"[global]\\nindex-url=$PIP_PROXY/root/pypi\\ntrusted-host=${IPPORT%:*}\" \u003e\u003e ~/.pip/pip.conf;       cat ~/.pip/pip.conf;     fi"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get install -y unzip libssl-dev python-pip python-dev libffi-dev \u0026\u0026     apt-get upgrade -y \u0026\u0026 apt-get clean \u0026\u0026     rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install -U pip pip-tools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "./requirements.in",
            "./"
          ]
        },
        {
          "CmdLine": [
            "pip-compile \u0026\u0026     pip install -r requirements.txt \u0026\u0026     rm requirements.in requirements.txt"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "https://storage.googleapis.com/pub/gsutil.tar.gz",
            "/tmp"
          ]
        },
        {
          "CmdLine": [
            "tar -zxvf /tmp/gsutil.tar.gz -C /usr/local"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$PATH:/usr/local/gsutil"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"[GoogleCompute]\\nservice_account = default\\n[GSUtil]\\nparallel_composite_upload_threshold = 150M\" \u003e\u003e /etc/boto.cfg"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin",
            "/root"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/data"
        },
        {
          "CmdLine": [
            "/root/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}