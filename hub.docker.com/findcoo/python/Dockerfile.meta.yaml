MetaArgs: null
Stages:
- BaseName: ubuntu:15.10
  Commands:
  - Maintainer: findcoo <powzxc@gmail.com>
    Name: maintainer
  - CmdLine:
    - "apt-get update && \t    apt-get install -y build-essential\t    \t\t\tgit curl
      wget bash-completion \t\t\t\topenssh-server gfortran sudo make \t\t\t\tcmake
      libssl-dev libreadline-dev llvm \t\t\t\tlibsqlite3-dev libmysqlclient-dev python-dev
      \t\t\t\tpython3-dev zlib1g-dev libbz2-dev language-pack-ko"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir /var/run/sshd && \tuseradd -m User -s /bin/bash && \techo 'root:root'
      | chpasswd && \techo 'User:User' | chpasswd && \techo 'User \tALL=(ALL) \tALL'
      >> /etc/sudoers.d/User && \tsed -i 's/PermitRootLogin without-password/PermitRootLogin
      yes/' /etc/ssh/sshd_config &&  \tsed -i 's@session\\s*required\\s*pam_loginuid.so@session
      optional pam_loginuid.so@g' -i /etc/pam.d/sshd && \tlocale-gen ko_KR.UTF-8"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /home/User
  - Env:
    - Key: HOME
      Value: /home/User
    Name: env
  - CmdLine:
    - git clone https://github.com/yyuu/pyenv.git $HOME/.pyenv
    Name: run
    PrependShell: true
  - Env:
    - Key: PYENV_ROOT
      Value: $HOME/.pyenv
    Name: env
  - Env:
    - Key: PATH
      Value: $PYENV_ROOT/bin:$HOME/bin:$PATH
    Name: env
  - CmdLine:
    - "echo 'export PYENV_ROOT='$PYENV_ROOT >> $HOME/.bashrc && \techo 'export PATH='$PATH
      >> $HOME/.bashrc && \techo 'eval \"$(pyenv init -)\"' >> $HOME/.bashrc && \texec
      $SHELL"
    Name: run
    PrependShell: true
  - Env:
    - Key: EXEC_PYENV
      Value: $PYENV_ROOT/bin/pyenv
    Name: env
  - CmdLine:
    - "$EXEC_PYENV install 2.7.10 && \t$EXEC_PYENV install 3.5.1 && \t$EXEC_PYENV
      global 2.7.10 3.5.1 && \t$EXEC_PYENV rehash"
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir build_vim
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME/build_vim
  - Env:
    - Key: PYENV_VERSIONS
      Value: $PYENV_ROOT/versions
    - Key: VIM_URL
      Value: https://github.com/vim/vim.git
    Name: env
  - CmdLine:
    - echo 'export PYENV_VERSIONS='$PYENV_VERSIONS >> $HOME/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone $VIM_URL
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME/build_vim/vim
  - CmdLine:
    - "./configure --with-features=huge \t\t--enable-multibyte \t\t--enable-rubyinterp
      \t\t--enable-pythoninterp=dynamic \t\t--with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu
      \t\t--enable-python3interp=dynamic \t\t--with-python3-config-dir=/usr/lib/python3.4/config-3.4m-x86_64-linux-gnu
      \t\t--disable-gui --enable-cscope --prefix=/usr"
    Name: run
    PrependShell: true
  - CmdLine:
    - "make VIMRUNTIMEDIR=/usr/share/vim/vim74 && \tmake install"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: $HOME
  - CmdLine:
    - rm -rf ./build_vim
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"\\n\\n\\\"vimrc default setting\" \t\"\\nnmap <leader>l :set list!<CR>\"
      \t\"\\nset nu\" \t\"\\nset autochdir\" \t\"\\nset ts=4\" \t\"\\nset bs=4\" \t\"\\nset
      noexpandtab\" \t\"\\nset nocompatible\" \t\"\\nsyntax on\" >> $HOME/.vimrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/vim /usr/bin/vi
    Name: run
    PrependShell: true
  - Env:
    - Key: NEOBUNDLE
      Value: https://raw.githubusercontent.com/Shougo/neobundle.vim/master/bin/install.sh
    Name: env
  - CmdLine:
    - "curl $NEOBUNDLE > install.sh && \t    sh ./install.sh && \t    rm ./install.sh"
    Name: run
    PrependShell: true
  - CmdLine:
    - "echo \"\\n\\n\\\"neobundle start\" \t    \"\\nset runtimepath+=~/.vim/bundle/neobundle.vim/\"
      \t    \"\\ncall neobundle#begin(expand('~/.vim/bundle/'))\" \t    \"\\nNeoBundleFetch
      'Shougo/neobundle.vim'\" \t    \"\\nNeoBundle 'davidhalter/jedi-vim'\" \t    \"\\nNeoBundle
      'tpope/vim-fugitive'\" \t    \"\\nNeoBundle 'scrooloose/nerdtree'\" \t    \"\\nNeoBundle
      'ervandew/supertab'\" \t    \"\\nNeoBundleLazy 'lambdalisue/vim-pyenv', {\"
      \t    \"\\n\\t\\ 'depends': ['davidhalter/jedi-vim'],\" \t    \"\\n\\t\\ 'autoload':
      {\" \t    \"\\n\\t\\t\\ 'filetypes': ['python', 'python3'],\" \t    \"\\n\\t\\
      }}\" \t    \"\\ncall neobundle#end()\" \t    \"\\nNeoBundleCheck\" >> $HOME/.vimrc
      && \techo \"\\n\\n\\\"supertab setting\" \t\t\"\\nlet g:SupperTabDefaultCompletionType
      = \\\"context\\\"\" >> $HOME/.vimrc && \techo \"\\n\\n\\\"jedi setting\" \t
      \   \t\"\\nlet g:jedi#completions_enabled = 0 \" \t\t\"\\nau FileType python
      let g:jedi#completions_enabled = 1\" >> $HOME/.vimrc && \techo \"\\n\\n\\\"vim-pyenv
      setting\" \t    \t\"\\nif jedi#init_python()\" \t\t\"\\n\\tfunction! s:jedi_auto_force_py_version()
      abort\" \t\t\"\\n\\t\\tlet major_version = pyenv#python#get_internal_major_version()
      \" \t\t\"\\n\\t\\tcall jedi#force_py_version(major_version)\" \t\t\"\\nendfunction\"
      \t\t\"\\naugroup vim-pyenv-custom-augroup\" \t\t\"\\n\\t\\tautocmd! *\" \t\t\"\\n\\t\\tautocmd
      User vim-pyenv-activate-post call s:jedi_auto_force_py_version()\" \t\t\"\\n\\t\\tautocmd
      User vim-pyenv-deactivate-post call s:jedi_auto_force_py_version()\" \t\t\"\\n\\taugroup
      END\" \t\t\"\\nendif\" >> $HOME/.vimrc"
    Name: run
    PrependShell: true
  - CmdLine:
    - "mkdir -p $HOME/src && \tchown -R User:User $HOME"
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - $HOME/src
  - Name: expose
    Ports:
    - 100-1024
    - 5000-5999
    - 8000-8999
    - 9000-9999
  - CmdLine:
    - /usr/sbin/sshd
    - -D
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:15.10
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:15.10
