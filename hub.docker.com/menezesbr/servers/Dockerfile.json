{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:18.10",
      "SourceCode": "FROM ubuntu:18.10",
      "Platform": "",
      "From": {
        "Image": "ubuntu:18.10"
      },
      "Commands": [
        {
          "Labels": [
            {
              "Key": "version",
              "Value": "\"1.0\""
            },
            {
              "Key": "maintainer",
              "Value": "\"\u003cAndr√© Menezes\u003emenezesbr@gmail.com\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y curl build-essential"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y locales curl wget unzip nano cron rsyslog supervisor python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "localedef -i pt_BR -c -f UTF-8 -A /usr/share/locale/locale.alias pt_BR.UTF-8"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y dos2unix gcc git libmcrypt4 libpcre3-dev memcached make python2.7-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y python-pip re2c unattended-upgrades whois vim libnotify-bin debconf-utils"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y software-properties-common"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026     apt-get upgrade -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install gcc make autoconf libc-dev pkg-config"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get -y install libmcrypt-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-add-repository ppa:nginx/stable -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-add-repository ppa:ondrej/php -y"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 5072E1F5"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh -c 'echo \"deb http://repo.mysql.com/apt/ubuntu/ trusty mysql-5.7\" \u003e\u003e /etc/apt/sources.list.d/mysql.list'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main\" \u003e\u003e /etc/apt/sources.list.d/postgresql.list'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -s https://packagecloud.io/gpg.key | apt-key add -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent --location https://deb.nodesource.com/setup_12.x | bash -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --force-yes nginx"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "homestead",
            "/etc/nginx/sites-available/"
          ]
        },
        {
          "CmdLine": [
            "rm -rf /etc/nginx/sites-available/default \u0026\u0026     rm -rf /etc/nginx/sites-enabled/default \u0026\u0026     ln -fs \"/etc/nginx/sites-available/homestead\" \"/etc/nginx/sites-enabled/homestead\" \u0026\u0026     sed -i -e\"s/keepalive_timeout\\s*65/keepalive_timeout 2/\" /etc/nginx/nginx.conf \u0026\u0026     sed -i -e\"s/keepalive_timeout 2/keepalive_timeout 2;\\n\\tclient_max_body_size 100m/\" /etc/nginx/nginx.conf \u0026\u0026     echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf \u0026\u0026     usermod -u 1000 www-data \u0026\u0026     chown -Rf www-data.www-data /var/www/html/ \u0026\u0026     sed -i -e\"s/worker_processes  1/worker_processes 5/\" /etc/nginx/nginx.conf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/www/html/app"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/nginx"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/nginx"
          ]
        },
        {
          "CmdLine": [
            "echo \"pt_BR.UTF-8 UTF-8\\nen_US.UTF-8 UTF-8\\nde_DE.UTF-8 UTF-8\\nfr_FR.UTF-8 UTF-8\\nit_IT.UTF-8 UTF-8\\nnl_NL.UTF-8 UTF-8\\npl_PL.UTF-8 UTF-8\\nru_RU.UTF-8 UTF-8\\ntr_TR.UTF-8 UTF-8\\n\\n\" \u003e /etc/locale.gen \u0026\u0026 locale-gen"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"LC_ALL=pt_BR.UTF-8\" \u003e\u003e /etc/default/locale  \u0026\u0026     locale-gen pt_BR.UTF-8  \u0026\u0026     ln -sf /usr/share/zoneinfo/UTC /etc/localtime"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --force-yes php7.3-fpm php7.3-cli php7.3-dev php7.3-pgsql php7.3-sqlite3 php7.3-gd     php-apcu php7.3-curl php7.3-imap php7.3-mysql php7.3-readline php-xdebug php-common     php7.3-mbstring php7.3-xml php7.3-zip php7.3-gmp php7.3-intl php7.3-soap"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y php7.3-bcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"s/error_reporting = .*/error_reporting = E_ALL/\" /etc/php/7.3/cli/php.ini \u0026\u0026     sed -i \"s/display_errors = .*/display_errors = On/\" /etc/php/7.3/cli/php.ini \u0026\u0026     sed -i \"s/;date.timezone.*/date.timezone = UTC/\" /etc/php/7.3/cli/php.ini \u0026\u0026     sed -i \"s/error_reporting = .*/error_reporting = E_ALL/\" /etc/php/7.3/fpm/php.ini \u0026\u0026     sed -i \"s/display_errors = .*/display_errors = On/\" /etc/php/7.3/fpm/php.ini \u0026\u0026     sed -i \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/\" /etc/php/7.3/fpm/php.ini \u0026\u0026     sed -i \"s/upload_max_filesize = .*/upload_max_filesize = 100M/\" /etc/php/7.3/fpm/php.ini \u0026\u0026     sed -i \"s/post_max_size = .*/post_max_size = 100M/\" /etc/php/7.3/fpm/php.ini \u0026\u0026     sed -i \"s/;date.timezone.*/date.timezone = UTC/\" /etc/php/7.3/fpm/php.ini \u0026\u0026     sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.3/fpm/php-fpm.conf \u0026\u0026     sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/7.3/fpm/pool.d/www.conf \u0026\u0026     sed -i -e \"s/pm.max_children = 5/pm.max_children = 9/g\" /etc/php/7.3/fpm/pool.d/www.conf \u0026\u0026     sed -i -e \"s/pm.start_servers = 2/pm.start_servers = 3/g\" /etc/php/7.3/fpm/pool.d/www.conf \u0026\u0026     sed -i -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" /etc/php/7.3/fpm/pool.d/www.conf \u0026\u0026     sed -i -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" /etc/php/7.3/fpm/pool.d/www.conf \u0026\u0026     sed -i -e \"s/pm.max_requests = 500/pm.max_requests = 200/g\" /etc/php/7.3/fpm/pool.d/www.conf \u0026\u0026     sed -i -e \"s/;listen.mode = 0660/listen.mode = 0750/g\" /etc/php/7.3/fpm/pool.d/www.conf \u0026\u0026     find /etc/php/7.3/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\;"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "fastcgi_params",
            "/etc/nginx/"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /run/php/ \u0026\u0026 chown -Rf www-data.www-data /run/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y sqlite3 libsqlite3-dev  php7.3-bcmath"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php \u0026\u0026     mv composer.phar /usr/local/bin/composer \u0026\u0026     printf \"\\nPATH=\\\"~/.composer/vendor/bin:\\$PATH\\\"\\n\" | tee -a ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/npm install -g gulp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/usr/bin/npm install -g bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y redis-server"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y supervisor \u0026\u0026     mkdir -p /var/log/supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "supervisord.conf",
            "/etc/supervisor/conf.d/supervisord.conf"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/log/supervisor"
          ]
        },
        {
          "CmdLine": [
            "apt-get remove --purge -y software-properties-common \u0026\u0026     apt-get autoremove -y \u0026\u0026     apt-get clean \u0026\u0026     apt-get autoclean \u0026\u0026     echo -n \u003e /var/lib/apt/extended_states \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026     rm -rf /usr/share/man/?? \u0026\u0026     rm -rf /usr/share/man/??_*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html/app"
        },
        {
          "Name": "expose",
          "Ports": [
            "3306",
            "443",
            "6379",
            "80"
          ]
        },
        {
          "CmdLine": [
            "/bin/bash",
            "-c"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/bin/supervisord"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}