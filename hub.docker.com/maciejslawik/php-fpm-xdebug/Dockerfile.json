{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "php:7.4-fpm",
      "SourceCode": "FROM php:7.4-fpm",
      "Platform": "",
      "From": {
        "Image": "php:7.4-fpm"
      },
      "Commands": [
        {
          "Maintainer": "Maciej Slawik \u003cmaciekslawik@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y     unzip wget"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer     \u0026\u0026 composer --version"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm /etc/localtime     \u0026\u0026 ln -s /usr/share/zoneinfo/Europe/Warsaw /etc/localtime     \u0026\u0026 \"date\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libpq-dev     \u0026\u0026 docker-php-ext-install pdo pdo_mysql pdo_pgsql"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng-dev         vim     \u0026\u0026 docker-php-ext-install -j$(nproc) iconv bcmath     \u0026\u0026 docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     \u0026\u0026 docker-php-ext-install -j$(nproc) gd"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y zlib1g-dev libicu-dev g++ libzip-dev \u0026\u0026     docker-php-ext-configure intl \u0026\u0026     docker-php-ext-install intl zip sockets \u0026\u0026     apt-get purge -y g++"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y libxslt-dev"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install xsl soap mysqli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install xdebug-2.8.1     \u0026\u0026 docker-php-ext-enable xdebug     \u0026\u0026 echo \"error_reporting = E_ALL\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"display_startup_errors = On\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"display_errors = On\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_enable=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_connect_back=0\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.remote_port=9000\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.profiler_enable=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.profiler_output_dir=/tmp/snapshots\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.max_nesting_level=9999\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     \u0026\u0026 echo \"xdebug.profiler_enable_trigger=1\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install -o -f redis     \u0026\u0026 rm -rf /tmp/pear     \u0026\u0026 echo \"extension=redis.so\" \u003e /usr/local/etc/php/conf.d/docker-php-ext-redis.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install mongodb     \u0026\u0026 rm -rf /tmp/pear     \u0026\u0026 echo \"extension=mongodb.so\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-mongodb.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "usermod -u 1000 www-data"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'alias xoff=\"mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.off \u0026\u0026 kill -USR2 1\"' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'alias xon=\"mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.off /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \u0026\u0026 kill -USR2 1\"' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'memory_limit = 2G ' \u003e\u003e /usr/local/etc/php/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /tmp/blackfire     \u0026\u0026 curl -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire     \u0026\u0026 mv /tmp/blackfire/blackfire /usr/bin/blackfire     \u0026\u0026 rm -Rf /tmp/blackfire"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.18.tar.gz         \u0026\u0026 tar xfvz libsodium-1.0.18.tar.gz         \u0026\u0026 cd libsodium-1.0.18         \u0026\u0026 ./configure         \u0026\u0026 make \u0026\u0026 make install         \u0026\u0026 pecl install -f libsodium"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "docker-php-ext-install sodium"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "touch /var/www/.bashrc \u0026\u0026 chown www-data /var/www/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /var/www/.composer \u0026\u0026 chown www-data /var/www/.composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x mhsendmail_linux_amd64"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv mhsendmail_linux_amd64 /usr/local/bin/mhsendmail"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"sendmail_path = \\\"/usr/local/bin/mhsendmail --smtp-addr='mailhog:1025'\\\"\" \u003e\u003e /usr/local/etc/php/conf.d/docker-php-ext-mailhog.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y curl gpgv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -sL https://deb.nodesource.com/setup_10.x | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y nodejs"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.off"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chown -R www-data:www-data /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g grunt-cli"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "www-data"
        }
      ]
    }
  ]
}