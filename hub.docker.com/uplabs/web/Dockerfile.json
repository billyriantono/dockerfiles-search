{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu:14.04.2",
      "SourceCode": "FROM ubuntu:14.04.2",
      "Platform": "",
      "From": {
        "Image": "ubuntu:14.04.2"
      },
      "Commands": [
        {
          "Maintainer": "Matthieu Aussaguel",
          "Name": "maintainer"
        },
        {
          "Labels": [
            {
              "Key": "Description",
              "Value": "\"Ruby / PhantomJS\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apt-get clean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install gcc g++ make curl zlib1g zlib1g-dev vim openssl libcurl4-openssl-dev libreadline6-dev unzip libffi-dev -y --force-yes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install libssl-dev libpcrecpp0 libpcre3-dev wget git libreadline-dev libqtwebkit-dev xvfb imagemagick libmagick++-dev -y --force-yes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install libsasl2-2 libsasl2-dev libpq-dev -y --force-yes"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir /root/src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PHANTOMJS_VERSION",
              "Value": "2.1.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026   apt-get upgrade -y \u0026\u0026   apt-get install -y vim git wget libfreetype6 libfontconfig bzip2 \u0026\u0026   mkdir -p /srv/var \u0026\u0026   wget -q --no-check-certificate -O /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 \u0026\u0026   tar -xjf /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C /tmp \u0026\u0026   rm -f /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 \u0026\u0026   mv /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/ /srv/var/phantomjs \u0026\u0026   ln -s /srv/var/phantomjs/bin/phantomjs /usr/bin/phantomjs \u0026\u0026   git clone https://github.com/n1k0/casperjs.git /srv/var/casperjs \u0026\u0026   ln -s /srv/var/casperjs/bin/casperjs /usr/bin/casperjs \u0026\u0026   apt-get autoremove -y \u0026\u0026   apt-get clean all"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get install -y --no-install-recommends postgresql-client \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root/src \u0026\u0026 wget http://nodejs.org/dist/v0.12.7/node-v0.12.7-linux-x64.tar.gz \u0026\u0026 tar -xzvf node-v0.12.7-linux-x64.tar.gz \u0026\u0026 sudo mv ./node-v0.12.7-linux-x64/lib/* /usr/lib/ \u0026\u0026 sudo mv ./node-v0.12.7-linux-x64/bin/* /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /root/src/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "npm install -g bower"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "RUBY_VERSION",
              "Value": "2.3.1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /root/src \u0026\u0026 wget http://cache.ruby-lang.org/pub/ruby/2.3/ruby-$RUBY_VERSION.tar.gz \u0026\u0026 tar xzvf ruby-*.tar.gz \u0026\u0026 cd ruby-$RUBY_VERSION \u0026\u0026 ./configure --with-readline-dir=/usr/include/readline --with-openssl-dir=/usr/include/openssl \u0026\u0026 make \u0026\u0026 make test \u0026\u0026 make install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "rm -rf /root/src/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"gem: --no-rdoc --no-ri\" \u003e\u003e /root/.gemrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "gem install bundler"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"RAILS_ENV=test\" | tee -a /etc/environment"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"RACK_ENV=test\" | tee -a /etc/environment"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install firefox -y --force-yes --fix-missing"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "DISPLAY",
              "Value": "\":99.0\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "start-stop-daemon --start --quiet --pidfile /tmp/xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1024x768x24 -ac +extension GLX +render -noreset"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}