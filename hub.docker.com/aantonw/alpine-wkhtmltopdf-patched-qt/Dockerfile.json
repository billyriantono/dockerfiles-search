{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Maintainer": "Anton Wahyu \u003cmail@anton.web.id\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" \u003e\u003e /etc/apk/repositories \t\u0026\u0026 apk update \t\u0026\u0026 apk add gtk+ openssl glib fontconfig bash vim \t\u0026\u0026 apk add --virtual .deps git patch make g++ \t\tlibc-dev gettext-dev zlib-dev bzip2-dev libffi-dev pcre-dev \t\tglib-dev atk-dev expat-dev libpng-dev freetype-dev fontconfig-dev \t\tlibxau-dev libxdmcp-dev libxcb-dev xf86bigfontproto-dev libx11-dev \t\tlibxrender-dev pixman-dev libxext-dev cairo-dev perl-dev \t\tlibxfixes-dev libxdamage-dev graphite2-dev icu-dev harfbuzz-dev \t\tlibxft-dev pango-dev gtk+-dev libdrm-dev \t\tlibxxf86vm-dev libxshmfence-dev wayland-dev mesa-dev openssl-dev \t\u0026\u0026 git clone --recursive https://github.com/wkhtmltopdf/wkhtmltopdf.git /tmp/wkhtmltopdf \t\u0026\u0026 cd /tmp/wkhtmltopdf \t\u0026\u0026 git checkout ccf91a0"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "conf/*",
            "/tmp/wkhtmltopdf/qt/"
          ]
        },
        {
          "CmdLine": [
            "cd /tmp/wkhtmltopdf/qt \u0026\u0026 \tpatch -p1 -i qt-musl.patch \u0026\u0026 \tpatch -p1 -i qt-musl-iconv-no-bom.patch \u0026\u0026 \tpatch -p1 -i qt-recursive-global-mutex.patch \u0026\u0026 \tpatch -p1 -i qt-font-pixel-size.patch \u0026\u0026 \tpatch -p1 -i qt-gcc6.patch \u0026\u0026 \tsed -i \"s|-O2|$CXXFLAGS|\" mkspecs/common/g++.conf \u0026\u0026 \tsed -i \"/^QMAKE_RPATH/s| -Wl,-rpath,||g\" mkspecs/common/g++.conf \u0026\u0026 \tsed -i \"/^QMAKE_LFLAGS\\s/s|+=|+= $LDFLAGS|g\" mkspecs/common/g++.conf \u0026\u0026 \tCFLAGS=-w CPPFLAGS=-w CXXFLAGS=-w LDFLAGS=-w \t./configure -confirm-license -opensource \t\t-prefix /usr \t\t-datadir /usr/share/qt \t\t-sysconfdir /etc \t\t-plugindir /usr/lib/qt/plugins \t\t-importdir /usr/lib/qt/imports \t\t-fast \t\t-release \t\t-static \t\t-largefile \t\t-glib \t\t-graphicssystem raster \t\t-qt-zlib \t\t-qt-libpng \t\t-qt-libmng \t\t-qt-libtiff \t\t-qt-libjpeg \t\t-svg \t\t-script \t\t-webkit \t\t-gtkstyle \t\t-xmlpatterns \t\t-script \t\t-scripttools \t\t-openssl-linked \t\t-nomake demos \t\t-nomake docs \t\t-nomake examples \t\t-nomake tools \t\t-nomake tests \t\t-nomake translations \t\t-no-qt3support \t\t-no-pch \t\t-no-icu \t\t-no-phonon \t\t-no-phonon-backend \t\t-no-rpath \t\t-no-separate-debug-info \t\t-no-dbus \t\t-no-opengl \t\t-no-openvg \u0026\u0026 \tNPROC=$(grep -c ^processor /proc/cpuinfo 2\u003e/dev/null || 1) \u0026\u0026 \texport MAKEFLAGS=-j${NPROC} \u0026\u0026 \texport MAKE_COMMAND=\"make -j${NPROC}\" \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \tcd /tmp/wkhtmltopdf \u0026\u0026 \tqmake \u0026\u0026 \tmake \u0026\u0026 \tmake install \u0026\u0026 \trm -rf /tmp/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk del .deps \t\u0026\u0026 rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}