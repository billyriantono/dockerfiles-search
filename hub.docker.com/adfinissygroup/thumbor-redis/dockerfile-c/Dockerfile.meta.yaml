MetaArgs: null
Stages:
- BaseName: debian:stretch-slim
  Commands:
  - Maintainer: NGINX Docker Maintainers "docker-maint@nginx.com"
    Name: maintainer
  - Env:
    - Key: NGINX_VERSION
      Value: 1.13.3-1~stretch
    Name: env
  - Env:
    - Key: NJS_VERSION
      Value: 1.13.3.0.1.11-1~stretch
    Name: env
  - CmdLine:
    - "apt-get update \t&& apt-get install --no-install-recommends --no-install-suggests
      -y gnupg1 \t&& \tNGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62; \tfound='';
      \tfor server in \t\tha.pool.sks-keyservers.net \t\thkp://keyserver.ubuntu.com:80
      \t\thkp://p80.pool.sks-keyservers.net:80 \t\tpgp.mit.edu \t; do \t\techo \"Fetching
      GPG key $NGINX_GPGKEY from $server\"; \t\tapt-key adv --keyserver \"$server\"
      --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes &&
      break; \tdone; \ttest -z \"$found\" && echo >&2 \"error: failed to fetch GPG
      key $NGINX_GPGKEY\" && exit 1; \tapt-get remove --purge -y gnupg1 && apt-get
      -y --purge autoremove && rm -rf /var/lib/apt/lists/* \t&& echo \"deb http://nginx.org/packages/mainline/debian/
      stretch nginx\" >> /etc/apt/sources.list \t&& apt-get update \t&& apt-get install
      --no-install-recommends --no-install-suggests -y \t\t\t\t\t\tnginx=${NGINX_VERSION}
      \t\t\t\t\t\tnginx-module-xslt=${NGINX_VERSION} \t\t\t\t\t\tnginx-module-geoip=${NGINX_VERSION}
      \t\t\t\t\t\tnginx-module-image-filter=${NGINX_VERSION} \t\t\t\t\t\tnginx-module-njs=${NJS_VERSION}
      \t\t\t\t\t\tgettext-base \t&& rm -rf /var/lib/apt/lists/*"
    Name: run
    PrependShell: true
  - CmdLine:
    - "ln -sf /dev/stdout /var/log/nginx/access.log \t&& ln -sf /dev/stderr /var/log/nginx/error.log"
    Name: run
    PrependShell: true
  - Name: stopsignal
    Signal: SIGTERM
  - CmdLine:
    - sed -i -e 's/80/8080/g' /etc/nginx/conf.d/default.conf
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Labels:
    - Key: io.k8s.description
      Value: '"jbrowse applcication"'
    - Key: io.k8s.display-name
      Value: '"JBROWSE APP"'
    - Key: io.openshift.expose-services
      Value: '"8080:http"'
    Name: label
  - CmdLine:
    - mkdir -p /usr/share/man/man1 /usr/share/man/man7
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -qq update --fix-missing
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get --no-install-recommends -y install git build-essential zlib1g-dev libxml2-dev
      libexpat-dev postgresql-client libpq-dev libpng-dev wget unzip perl-doc
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -O jbrowse.zip http://jbrowse.org/wordpress/wp-content/plugins/download-monitor/download.php?id=109
      &&     unzip jbrowse.zip &&     mv JBrowse-* jbrowse
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /jbrowse/
  - CmdLine:
    - mkdir -p /jbrowse/custom_scripts
    Name: run
    PrependShell: true
  - CmdLine:
    - ./setup.sh &&     ./bin/cpanm --notest --force JSON Digest::Crc32 Hash::Merge
      PerlIO::gzip Devel::Size     Heap::Simple Heap::Simple::XS List::MoreUtils Exception::Class
      Test::Warn Bio::Perl     Bio::DB::SeqFeature::Store File::Next Bio::DB::Das::Chado
      Bio::FeatureIO Bio::GFF3::LowLevel::Parser     DBD::SQLite File::Copy::Recursive
      JSON::XS Parse::RecDescent local::lib Digest::Crc32 Bio::GFF3::LowLevel::Parser
      &&     rm -rf /root/.cpan/
    Name: run
    PrependShell: true
  - CmdLine:
    - perl Makefile.PL && make && make install
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /usr/share/nginx/html && ln -s /jbrowse/ /usr/share/nginx/html
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "include += data/datasets.conf" >> /jbrowse/jbrowse.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /data /jbrowse/genomes
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R 1001:0 /var/cache/nginx &&     chmod -R g+w /var/cache/nginx &&     chmod
      -R g+w /run
    Name: run
    PrependShell: true
  - Name: user
    User: "1001"
  - Name: expose
    Ports:
    - "8080"
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - docker-entrypoint.sh
    - /
  - CmdLine:
    - /docker-entrypoint.sh
    Name: cmd
    PrependShell: false
  From:
    Image: debian:stretch-slim
  Name: ""
  Platform: ""
  SourceCode: FROM debian:stretch-slim
