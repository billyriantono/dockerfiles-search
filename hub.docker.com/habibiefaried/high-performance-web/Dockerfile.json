{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.4",
      "SourceCode": "FROM alpine:3.4",
      "Platform": "",
      "From": {
        "Image": "alpine:3.4"
      },
      "Commands": [
        {
          "Maintainer": "habibiefaried@gmail.com",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "MYSQL_ROOT_PASSWORD",
              "Value": "admin2017!"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPMYADMIN_DIR",
              "Value": "secretmysql"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PHPREDISADMIN_DIR",
              "Value": "secretredis"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "NGINX_VERSION",
              "Value": "1.11.2"
            },
            {
              "Key": "PAGESPEED_VERSION",
              "Value": "1.11.33.4"
            },
            {
              "Key": "LIBPNG_VERSION",
              "Value": "1.2.56"
            },
            {
              "Key": "MAKE_J",
              "Value": "4"
            },
            {
              "Key": "PAGESPEED_ENABLE",
              "Value": "on"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk upgrade --no-cache --update \u0026\u0026     apk add --no-cache --update         bash         ca-certificates         libuuid         apr         apr-util         libjpeg-turbo         icu         icu-libs         openssl         pcre         zlib         git mysql mysql-client nano"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /root \u0026\u0026 git clone https://github.com/vozlt/nginx-module-vts.git \u0026\u0026 cd /"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "adduser -D websrv \u0026\u0026 adduser -D phpfpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \u0026\u0026     apk --no-cache add -t .build-deps         apache2-dev         apr-dev         apr-util-dev         build-base         curl         icu-dev         libjpeg-turbo-dev         linux-headers         gperf         openssl-dev         pcre-dev         python         zlib-dev \u0026\u0026     cd /tmp \u0026\u0026     curl -L http://prdownloads.sourceforge.net/libpng/libpng-${LIBPNG_VERSION}.tar.gz | tar -zx \u0026\u0026     cd /tmp/libpng-${LIBPNG_VERSION} \u0026\u0026     ./configure --build=$CBUILD --host=$CHOST --prefix=/usr --enable-shared --with-libpng-compat \u0026\u0026     make -j${MAKE_J} install V=0 \u0026\u0026     cd /tmp \u0026\u0026     curl -L https://dl.google.com/dl/linux/mod-pagespeed/tar/beta/mod-pagespeed-beta-${PAGESPEED_VERSION}-r0.tar.bz2 | tar -jx \u0026\u0026     curl -L https://github.com/pagespeed/ngx_pagespeed/archive/v${PAGESPEED_VERSION}-beta.tar.gz | tar -zx \u0026\u0026     cd /tmp/modpagespeed-${PAGESPEED_VERSION} \u0026\u0026     curl -L https://raw.githubusercontent.com/lagun4ik/docker-nginx-pagespeed/master/patches/automatic_makefile.patch | patch -p1 \u0026\u0026     curl -L https://raw.githubusercontent.com/lagun4ik/docker-nginx-pagespeed/master/patches/libpng_cflags.patch | patch -p1 \u0026\u0026     curl -L https://raw.githubusercontent.com/lagun4ik/docker-nginx-pagespeed/master/patches/pthread_nonrecursive_np.patch | patch -p1 \u0026\u0026     curl -L https://raw.githubusercontent.com/lagun4ik/docker-nginx-pagespeed/master/patches/rename_c_symbols.patch | patch -p1 \u0026\u0026     curl -L https://raw.githubusercontent.com/lagun4ik/docker-nginx-pagespeed/master/patches/stack_trace_posix.patch | patch -p1 \u0026\u0026     ./generate.sh -D use_system_libs=1 -D _GLIBCXX_USE_CXX11_ABI=0 -D use_system_icu=1 \u0026\u0026     cd /tmp/modpagespeed-${PAGESPEED_VERSION}/src \u0026\u0026     make -j${MAKE_J} BUILDTYPE=Release CXXFLAGS=\" -I/usr/include/apr-1 -I/tmp/libpng-${LIBPNG_VERSION} -fPIC -D_GLIBCXX_USE_CXX11_ABI=0\" CFLAGS=\" -I/usr/include/apr-1 -I/tmp/libpng-${LIBPNG_VERSION} -fPIC -D_GLIBCXX_USE_CXX11_ABI=0\" \u0026\u0026     cd /tmp/modpagespeed-${PAGESPEED_VERSION}/src/pagespeed/automatic/ \u0026\u0026     make -j${MAKE_J} psol BUILDTYPE=Release CXXFLAGS=\" -I/usr/include/apr-1 -I/tmp/libpng-${LIBPNG_VERSION} -fPIC -D_GLIBCXX_USE_CXX11_ABI=0\" CFLAGS=\" -I/usr/include/apr-1 -I/tmp/libpng-${LIBPNG_VERSION} -fPIC -D_GLIBCXX_USE_CXX11_ABI=0\" \u0026\u0026     mkdir -p /tmp/ngx_pagespeed-${PAGESPEED_VERSION}-beta/psol \u0026\u0026     mkdir -p /tmp/ngx_pagespeed-${PAGESPEED_VERSION}-beta/psol/lib/Release/linux/x64 \u0026\u0026     mkdir -p /tmp/ngx_pagespeed-${PAGESPEED_VERSION}-beta/psol/include/out/Release \u0026\u0026     cp -r /tmp/modpagespeed-${PAGESPEED_VERSION}/src/out/Release/obj /tmp/ngx_pagespeed-${PAGESPEED_VERSION}-beta/psol/include/out/Release/ \u0026\u0026     cp -r /tmp/modpagespeed-${PAGESPEED_VERSION}/src/net /tmp/ngx_pagespeed-${PAGESPEED_VERSION}-beta/psol/include/ \u0026\u0026     cp -r /tmp/modpagespeed-${PAGESPEED_VERSION}/src/testing /tmp/ngx_pagespeed-${PAGESPEED_VERSION}-beta/psol/include/ \u0026\u0026     cp -r /tmp/modpagespeed-${PAGESPEED_VERSION}/src/pagespeed /tmp/ngx_pagespeed-${PAGESPEED_VERSION}-beta/psol/include/ \u0026\u0026     cp -r /tmp/modpagespeed-${PAGESPEED_VERSION}/src/third_party /tmp/ngx_pagespeed-${PAGESPEED_VERSION}-beta/psol/include/ \u0026\u0026     cp -r /tmp/modpagespeed-${PAGESPEED_VERSION}/src/tools /tmp/ngx_pagespeed-${PAGESPEED_VERSION}-beta/psol/include/ \u0026\u0026     cp -r /tmp/modpagespeed-${PAGESPEED_VERSION}/src/url /tmp/ngx_pagespeed-${PAGESPEED_VERSION}-beta/psol/include/ \u0026\u0026     cp -r /tmp/modpagespeed-${PAGESPEED_VERSION}/src/pagespeed/automatic/pagespeed_automatic.a /tmp/ngx_pagespeed-${PAGESPEED_VERSION}-beta/psol/lib/Release/linux/x64 \u0026\u0026     cd /tmp \u0026\u0026     curl -L http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz | tar -zx \u0026\u0026     cd /tmp/nginx-${NGINX_VERSION} \u0026\u0026     LD_LIBRARY_PATH=/tmp/modpagespeed-${PAGESPEED_VERSION}/usr/lib ./configure         --sbin-path=/usr/sbin         --modules-path=/usr/lib/nginx         --with-http_ssl_module         --with-http_gzip_static_module         --with-file-aio         --with-http_v2_module         --with-http_realip_module         --without-http_autoindex_module         --without-http_browser_module         --without-http_geo_module         --without-http_memcached_module         --without-http_userid_module         --without-mail_pop3_module         --without-mail_imap_module         --without-mail_smtp_module         --without-http_split_clients_module         --without-http_uwsgi_module         --without-http_scgi_module         --without-http_upstream_ip_hash_module         --with-http_sub_module         --with-http_gunzip_module         --with-http_secure_link_module         --with-threads         --with-stream         --with-stream_ssl_module         --prefix=/etc/nginx         --conf-path=/etc/nginx/nginx.conf         --http-log-path=/var/log/nginx/access.log         --error-log-path=/var/log/nginx/error.log         --pid-path=/var/run/nginx.pid         --add-module=/tmp/ngx_pagespeed-${PAGESPEED_VERSION}-beta         --add-module=/root/nginx-module-vts         --with-cc-opt=\"-fPIC -I /usr/include/apr-1\"         --with-ld-opt=\"-luuid -lapr-1 -laprutil-1 -licudata -licuuc -L/tmp/modpagespeed-${PAGESPEED_VERSION}/usr/lib -lpng12 -lturbojpeg -ljpeg\" \u0026\u0026     make -j${MAKE_J} install --silent \u0026\u0026     cd \u0026\u0026     apk del .build-deps \u0026\u0026     rm -rf /tmp/* \u0026\u0026     ln -sf /dev/stdout /var/log/nginx/access.log \u0026\u0026     ln -sf /dev/stderr /var/log/nginx/error.log \u0026\u0026     mkdir -p /var/cache/ngx_pagespeed /var/log/pagespeed \u0026\u0026     chmod -R 777 /var/cache/ngx_pagespeed \u0026\u0026 chmod -R 777 /var/log/pagespeed     \u0026\u0026 rm -rf /etc/nginx/html/     \u0026\u0026 mkdir -p /usr/share/nginx/html/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --update \t\tphp5-mcrypt \t\tphp5-soap \t\tphp5-openssl \t\tphp5-gmp \t\tphp5-pdo_odbc \t\tphp5-json \t\tphp5-dom \t\tphp5-pdo \t\tphp5-zip \t\tphp5-mysql         php5-mysqli \t\tphp5-sqlite3 \t\tphp5-apcu \t\tphp5-intl \t\tphp5-imagick \t\tphp5-pdo_pgsql \t\tphp5-pgsql \t\tphp5-bcmath \t\tphp5-gd \t\tphp5-xcache \t\tphp5-mcrypt \t\tphp5-ldap \t\tphp5-odbc \t\tphp5-pdo_mysql \t\tphp5-pdo_sqlite \t\tphp5-gettext \t\tphp5-xmlreader \t\tphp5-xmlrpc \t\tphp5-bz2 \t\tphp5-memcache \t\tphp5-mssql \t\tphp5-iconv \t\tphp5-pdo_dblib \t\tphp5-curl \t\tphp5-ctype \t\tphp5-dev \t\tphp5-common \t\tphp5-pear \t\tphp5-xml \t\tphp5-wddx \t\tphp5-xsl \t\tphp5-ftp \t\tphp5-phar \t\tphp5-posix \t\tphp5-shmop \t\tphp5-soap \t\tphp5-sockets \t\tphp5-sqlite3 \t\tphp5-zlib \t\tphp5-phpmailer \t\tphp5-zip \t\tphp5-exif \t\tphp5-phpdbg \t\tphp5-opcache \t\tphp5-fpm"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache bash build-base wget curl m4 autoconf libtool imagemagick imagemagick-dev zlib zlib-dev libcurl curl-dev libevent libevent-dev libidn libmemcached libmemcached-dev libidn-dev \u0026\u0026 curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i \"$ s|\\-n||g\" /usr/bin/pecl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=iconv.so\" \u003e\u003e /etc/php5/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"\\n\" | pecl install raphf-1.1.2 propro-1.0.2"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=raphf.so\" \u003e\u003e /etc/php5/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=propro.so\" \u003e\u003e /etc/php5/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"\\n\" | pecl install pecl_http-2.5.6"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"extension=http.so\" \u003e\u003e /etc/php5/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "printf \"\\n\" | pecl install redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/conf.d",
            "/etc/nginx/conf.d"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "html",
            "/usr/share/nginx/html"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init.sh",
            "/init.sh"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /init.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/var/cache/ngx_pagespeed",
            "/app"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "my.cnf",
            "/etc/mysql/my.cnf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php-fpm.conf",
            "/etc/php5/php-fpm.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "php.ini",
            "/etc/php5/php.ini"
          ]
        },
        {
          "CmdLine": [
            "chmod -R 777 /var/log/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"export TERM=xterm\" \u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'PS1=\"\\[\\033[35m\\]\\t\\[\\033[m\\]-\\[\\033[36m\\]\\u\\[\\033[m\\]@\\[\\033[32m\\]\\h:\\[\\033[33;1m\\]\\w\\[\\033[m\\]\\$ \"' \u003e\u003e /root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/tmp"
        },
        {
          "CmdLine": [
            "apk add --update redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "wget https://files.phpmyadmin.net/phpMyAdmin/4.6.6/phpMyAdmin-4.6.6-all-languages.zip \u0026\u0026 unzip phpMyAdmin-4.6.6-all-languages.zip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv phpMyAdmin-4.6.6-all-languages /usr/share/nginx/html/$PHPMYADMIN_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/ErikDubbelboer/phpRedisAdmin.git \u0026\u0026 cd phpRedisAdmin \u0026\u0026 git submodule init \u0026\u0026 git submodule update \u0026\u0026 cd .."
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mv phpRedisAdmin /usr/share/nginx/html/$PHPREDISADMIN_DIR"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd /usr/share/nginx/html/$PHPREDISADMIN_DIR \u0026\u0026 composer install"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/root"
        },
        {
          "CmdLine": [
            "/init.sh"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}