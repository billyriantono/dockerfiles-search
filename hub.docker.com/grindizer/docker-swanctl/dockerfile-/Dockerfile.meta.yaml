MetaArgs: null
Stages:
- As: python
  BaseName: debian:testing-slim
  Commands:
  - Key: NB_USER
    Name: arg
    Value: '"docker"'
  - Key: NB_UID
    Name: arg
    Value: '"1000"'
  - Key: NB_GID
    Name: arg
    Value: '"100"'
  - Name: user
    User: root
  - Key: DPKGSCONF
    Name: arg
    Value: '"wget sudo locales"'
  - CmdLine:
    - apt-get update && apt-get -y dist-upgrade &&   apt-get install -y --no-install-recommends
      ${DPKGSCONF} &&   rm -rf /tmp/downloaded_packages/ /tmp/*.rds &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen
    Name: run
    PrependShell: true
  - Env:
    - Key: SHELL
      Value: /bin/bash
    - Key: NB_USER
      Value: $NB_USER
    - Key: NB_UID
      Value: $NB_UID
    - Key: NB_GID
      Value: $NB_GID
    - Key: LC_ALL
      Value: en_US.UTF-8
    - Key: LANG
      Value: en_US.UTF-8
    - Key: LANGUAGE
      Value: en_US.UTF-8
    Name: env
  - Env:
    - Key: HOME
      Value: /home/$NB_USER
    Name: env
  - CmdLine:
    - sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "auth requisite pam_deny.so" >> /etc/pam.d/su &&   useradd -m -s /bin/bash
      -N -u $NB_UID $NB_USER &&   echo "$NB_USER ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/$NB_USER
      &&   chmod g+w /etc/passwd &&   addgroup $NB_USER staff
    Name: run
    PrependShell: true
  - Key: DPKGSPY
    Name: arg
    Value: '"python3-pip python3-setuptools nodejs npm"'
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends ${DPKGSPY} &&   ln
      -s /usr/bin/pip3 /usr/bin/pip &&   npm install npm@latest -g &&   chown -R 1000:100
      "/home/$NB_USER/.npm" &&   rm -rf /tmp/downloaded_packages/ /tmp/*.rds &&   rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - Name: workdir
    Path: $HOME/project
  - Env:
    - Key: PATH
      Value: /home/$NB_USER/.local/bin:$PATH
    Name: env
  - CmdLine:
    - pip install --no-cache-dir jupyter jupyterlab &&   npm cache clean --force &&   jupyter
      notebook --generate-config &&   rm -rf /home/$NB_USER/.cache/yarn
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - jupyter
    - lab
    - --ip=0.0.0.0
    - --port=8888
    - --no-browser
    Name: cmd
    PrependShell: false
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .jupyter
    - $HOME/.jupyter
  - Name: user
    User: root
  - Key: DPKGSR
    Name: arg
    Value: '"r-base r-base-dev"'
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends ${DPKGSR} &&   rm
      -rf /tmp/downloaded_packages/ /tmp/*.rds &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Name: user
    User: $NB_UID
  - Key: RPKGS
    Name: arg
    Value: '"IRdisplay IRkernel data.table"'
  - CmdLine:
    - Rscript -e "install.packages(commandArgs(TRUE), type = 'source')" ${RPKGS} &&   Rscript
      -e "IRkernel::installspec()"
    Name: run
    PrependShell: true
  From:
    Image: debian:testing-slim
  Name: python
  Platform: ""
  SourceCode: FROM debian:testing-slim AS python
