{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.5",
      "SourceCode": "FROM alpine:3.5",
      "Platform": "",
      "From": {
        "Image": "alpine:3.5"
      },
      "Commands": [
        {
          "CmdLine": [
            "apk add --no-cache ca-certificates"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOLANG_VERSION",
              "Value": "1.7.5"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_SRC_URL",
              "Value": "https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOLANG_SRC_SHA256",
              "Value": "4e834513a2079f8cbbd357502cccaac9507fd00a1efe672375798858ff291815"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOPATH",
              "Value": "/go"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$GOPATH/bin:/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "no-pic.patch",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "17847.patch",
            "/"
          ]
        },
        {
          "CmdLine": [
            "set -ex \u0026\u0026  apk add --no-cache --virtual .build-deps     bash     gcc     musl-dev     openssl     go     build-base     git     \u0026\u0026  export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\"     \u0026\u0026  wget -q \"$GOLANG_SRC_URL\" -O golang.tar.gz \u0026\u0026  echo \"$GOLANG_SRC_SHA256  golang.tar.gz\" | sha256sum -c - \u0026\u0026  tar -C /usr/local -xzf golang.tar.gz \u0026\u0026  rm golang.tar.gz \u0026\u0026  cd /usr/local/go/src \u0026\u0026  patch -p2 -i /no-pic.patch \u0026\u0026  patch -p2 -i /17847.patch \u0026\u0026  ./make.bash     \u0026\u0026  go get bitbucket.org/liamstask/goose/cmd/goose \u0026\u0026  cp -pr /go/bin/goose /usr/bin     \u0026\u0026  rm -rf *.patch \u0026\u0026  apk del .build-deps \u0026\u0026  rm -rf $GOPATH \u0026\u0026  mkdir $GOPATH \u0026\u0026  rm -rf /usr/local/go \u0026\u0026  rm -rf /var/cache/apk/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$GOPATH"
        }
      ]
    }
  ]
}