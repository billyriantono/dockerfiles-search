MetaArgs: null
Stages:
- BaseName: python:3.6-slim
  Commands:
  - CmdLine:
    - set -ex     && buildDeps='         gcc         libbz2-dev         libc6-dev         libgdbm-dev         liblzma-dev         libncurses-dev         libreadline-dev         libsqlite3-dev         libssl-dev         libpcre3-dev        make         tcl-dev         tk-dev         wget         xz-utils         zlib1g-dev     '     &&
      apt-get update && apt-get install -y $buildDeps --no-install-recommends  &&
      rm -rf /var/lib/apt/lists/*     && pip install uwsgi     && apt-get purge -y
      --auto-remove $buildDeps     && find /usr/local -depth     \(         \( -type
      d -a -name test -o -name tests \)         -o         \( -type f -a -name '*.pyc'
      -o -name '*.pyo' \)     \) -exec rm -rf '{}' +
    Name: run
    PrependShell: true
  - Env:
    - Key: NGINX_VERSION
      Value: 1.12.0-1~jessie
    Name: env
  - Env:
    - Key: NJS_VERSION
      Value: 1.12.0.0.1.10-1~jessie
    Name: env
  - CmdLine:
    - 'apt-get update     && apt-get install --no-install-recommends --no-install-suggests
      -y gnupg     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='''';     for
      server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ;
      do         echo "Fetching GPG key $NGINX_GPGKEY from $server";         apt-key
      adv --keyserver "$server" --keyserver-options timeout=10 --recv-keys "$NGINX_GPGKEY"
      && found=yes && break;     done;     test -z "$found" && echo >&2 "error: failed
      to fetch GPG key $NGINX_GPGKEY" && exit 1;     apt-get -y --purge autoremove
      && rm -rf /var/lib/apt/lists/*     && echo "deb http://nginx.org/packages/debian/
      jessie nginx" >> /etc/apt/sources.list     && apt-get update     && apt-get
      install --no-install-recommends --no-install-suggests -y                         nginx=${NGINX_VERSION}                         nginx-module-xslt=${NGINX_VERSION}                         nginx-module-geoip=${NGINX_VERSION}                         nginx-module-image-filter=${NGINX_VERSION}                         nginx-module-njs=${NJS_VERSION}                         gettext-base     &&
      rm -rf /var/lib/apt/lists/*'
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - Name: stopsignal
    Signal: SIGQUIT
  - CmdLine:
    - nginx
    - -g
    - daemon off;
    Name: cmd
    PrependShell: false
  From:
    Image: python:3.6-slim
  Name: ""
  Platform: ""
  SourceCode: FROM python:3.6-slim
