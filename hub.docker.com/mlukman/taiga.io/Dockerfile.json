{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "debian:stretch",
      "SourceCode": "FROM debian:stretch",
      "Platform": "",
      "From": {
        "Image": "debian:stretch"
      },
      "Commands": [
        {
          "Maintainer": "\"Andrey Arapov \u003candrey.arapov@nixaid.com\u003e\"",
          "Name": "maintainer"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Env": [
            {
              "Key": "DEBIAN_FRONTEND",
              "Value": "noninteractive"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y -- build-essential binutils-doc autoconf flex         bison libjpeg-dev libfreetype6-dev zlib1g-dev libzmq3-dev         libgdbm-dev libncurses5-dev automake libtool libffi-dev curl git         tmux gettext python3 python3-dev python3-pip libxml2-dev         libxslt-dev virtualenvwrapper libssl1.0-dev         nginx vim \u0026\u0026         rm -rf -- /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip3 install circus gunicorn"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "USER",
              "Value": "taiga"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "UID",
              "Value": "1000"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GROUP",
              "Value": "www-data"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "/home/$USER"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "DATA",
              "Value": "/opt/taiga"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "useradd -u $UID -m -d $HOME -s /usr/sbin/nologin -g $GROUP $USER"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p $DATA $DATA/media $DATA/static $DATA/logs /var/log/taiga     \u0026\u0026 chown -Rh $USER:$GROUP /var/log/taiga"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "$DATA"
        },
        {
          "CmdLine": [
            "ln -svf /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b stable https://github.com/taigaio/taiga-back.git taiga-back     \u0026\u0026 source /usr/share/virtualenvwrapper/virtualenvwrapper.sh     \u0026\u0026 mkvirtualenv -p /usr/bin/python3.5 venvtaiga     \u0026\u0026 workon venvtaiga     \u0026\u0026 cd taiga-back     \u0026\u0026 pip3 install --upgrade setuptools     \u0026\u0026 pip3 install -r requirements.txt     \u0026\u0026 pip3 install psycopg2-binary     \u0026\u0026 deactivate"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone -b stable https://github.com/taigaio/taiga-front-dist.git taiga-front-dist"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "rm -f /etc/nginx/sites-enabled/default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "tmpl/*.tmpl",
            "/tmpl/"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "$DATA/static",
            "$DATA/media"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "launch",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /launch"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/launch"
          ],
          "Name": "cmd",
          "PrependShell": true
        }
      ]
    }
  ]
}