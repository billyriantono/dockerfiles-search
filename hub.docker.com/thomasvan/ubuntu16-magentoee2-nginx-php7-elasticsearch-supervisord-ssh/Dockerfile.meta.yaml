MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Thomas Van<thomas@forixwebdesign.com>
    Name: maintainer
  - CmdLine:
    - dpkg-divert --local --rename --add /sbin/initctl
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -sf /bin/true /sbin/initctl
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /run/php
    Name: run
    PrependShell: true
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y upgrade
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install pwgen python-setuptools curl git nano sudo unzip openssh-server
      openssl
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install mysql-server nginx php-fpm php-mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install php-imagick php-intl php-curl php-xsl php-mcrypt php-mbstring
      php-bcmath php-gd php-zip
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e"s/^bind-address\s*=\s*127.0.0.1/explicit_defaults_for_timestamp =
      true\nbind-address = 0.0.0.0/" /etc/mysql/mysql.conf.d/mysqld.cnf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e"s/user\s*www-data;/user magento www-data;/" /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e"s/keepalive_timeout\s*65/keepalive_timeout 2/" /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e"s/keepalive_timeout 2/keepalive_timeout 2;\n\tclient_max_body_size
      100m/" /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "daemon off;" >> /etc/nginx/nginx.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/upload_max_filesize\s*=\s*2M/upload_max_filesize = 100M/g" /etc/php/7.0/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/post_max_size\s*=\s*8M/post_max_size = 100M/g" /etc/php/7.0/fpm/php.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/;daemonize\s*=\s*yes/daemonize = no/g" /etc/php/7.0/fpm/php-fpm.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/;catch_workers_output\s*=\s*yes/catch_workers_output = yes/g" /etc/php/7.0/fpm/pool.d/www.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i -e "s/user\s*=\s*www-data/user = magento/g" /etc/php/7.0/fpm/pool.d/www.conf
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./nginx-site.conf
    - /etc/nginx/sites-available/default
  - CmdLine:
    - mkdir /etc/nginx/ssl/
    Name: run
    PrependShell: true
  - CmdLine:
    - openssl req     -new     -newkey rsa:4096     -days 365     -nodes     -x509     -subj
      "/C=US/ST=Denial/L=Springfield/O=Dis/CN=localhost"     -keyout /etc/ssl/private/ssl-cert-snakeoil.key     -out
      /etc/ssl/certs/ssl-cert-snakeoil.pem
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
      --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://raw.github.com/colinmollenhour/modman/master/modman > /usr/sbin/modman
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod +x /usr/sbin/modman
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/easy_install supervisor
    Name: run
    PrependShell: true
  - CmdLine:
    - /usr/bin/easy_install supervisor-stdout
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./supervisord.conf
    - /etc/supervisord.conf
  - CmdLine:
    - useradd -m -d /home/magento -p $(openssl passwd -1 'magento') -G root -s /bin/bash
      magento     && usermod -a -G www-data magento     && usermod -a -G sudo magento     &&
      mkdir -p /home/magento/files/html     && chown -R magento:www-data /home/magento/files     &&
      chmod -R 775 /home/magento/files
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y install openjdk-8-jdk
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | apt-key add -
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://packages.elastic.co/elasticsearch/2.x/debian stable main" |
      tee -a /etc/apt/sources.list.d/Elasticsearch-2.x.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get -y update && apt-get -y install elasticsearch
    Name: run
    PrependShell: true
  - CmdLine:
    - curl --retry 3 https://archive.apache.org/dist/lucene/solr/4.9.1/solr-4.9.1.tgz
      | tar -C /opt --extract --gzip
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /opt/solr-4.9.1 /opt/solr
    Name: run
    PrependShell: true
  - CmdLine:
    - useradd --home-dir /opt/solr --comment "Solr Server" solr
    Name: run
    PrependShell: true
  - CmdLine:
    - chown -R solr:solr /opt/solr/example
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - ./start.sh
    - /start.sh
  - CmdLine:
    - chmod 755 /start.sh
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "9011"
  - Name: expose
    Ports:
    - "8983"
  - Name: expose
    Ports:
    - "3306"
  - Name: expose
    Ports:
    - "443"
  - Name: expose
    Ports:
    - "80"
  - Name: expose
    Ports:
    - "22"
  - Name: volume
    Volumes:
    - /var/lib/mysql
    - /home/magento/files
    - /var/run/sshd
  - CmdLine:
    - /bin/bash
    - /start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
