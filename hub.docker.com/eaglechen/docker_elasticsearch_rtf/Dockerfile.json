{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:8-jre",
      "SourceCode": "FROM java:8-jre",
      "Platform": "",
      "From": {
        "Image": "java:8-jre"
      },
      "Commands": [
        {
          "Maintainer": "Eagle Chen \u003cchygr1234@gmail.com\u003e",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "ES_VERSION",
              "Value": "\"2.2.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "\"1.8\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "cd /tmp \u0026\u0026 curl -OL https://github.com/medcl/elasticsearch-rtf/archive/${ES_VERSION}.zip \u0026\u0026   unzip ${ES_VERSION}.zip -d /usr/share \u0026\u0026 rm /tmp/${ES_VERSION}.zip \u0026\u0026   mv /usr/share/elasticsearch-rtf-${ES_VERSION} /usr/share/elasticsearch \u0026\u0026   groupadd es \u0026\u0026 useradd -g es es \u0026\u0026   for path in data config logs config/scripts; do mkdir -p \"/usr/share/elasticsearch/$path\"; done \u0026\u0026   chown -R es:es /usr/share/elasticsearch \u0026\u0026   curl -o /usr/local/bin/gosu -fsSL \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$(dpkg --print-architecture)\" \u0026\u0026   chmod +x /usr/local/bin/gosu"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/share/elasticsearch/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/share/elasticsearch/data"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/share/elasticsearch/logs"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Name": "expose",
          "Ports": [
            "9200",
            "9300"
          ]
        },
        {
          "CmdLine": [
            "elasticsearch"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}