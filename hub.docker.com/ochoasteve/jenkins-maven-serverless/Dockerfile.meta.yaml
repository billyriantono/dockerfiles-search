MetaArgs: null
Stages:
- BaseName: jenkins/jenkins:lts
  Commands:
  - Maintainer: 'Steve Ochoa (github: boostninja)'
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: maven_version
      Value: 3.5.2
    Name: env
  - Env:
    - Key: MAVEN_HOME
      Value: /opt/maven
    Name: env
  - Name: user
    User: root
  - CmdLine:
    - apt-get update           && apt-get install -y wget curl openssh-server nano
      sudo
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias nano='export TERM=xterm && nano'" >> /root/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - 'echo "jenkins ALL=NOPASSWD: ALL" >> /etc/sudoers'
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y nodejs
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g serverless@1.25.0
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install serverless-pseudo-parameters@1.6.0
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install serverless-plugin-log-retention@1.0.3
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install --save serverless-cloudformation-changesets
    Name: run
    PrependShell: true
  - CmdLine:
    - curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - unzip awscli-bundle.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
    Name: run
    PrependShell: true
  - Key: DOCKER_CLIENT
    Name: arg
    Value: docker-17.12.0-ce.tgz
  - CmdLine:
    - "cd /tmp/ \t&& curl -sSL -O https://download.docker.com/linux/static/stable/x86_64/${DOCKER_CLIENT}
      \t&& tar zxf ${DOCKER_CLIENT} \t&& mkdir -p /usr/local/bin \t&& mv ./docker/docker
      /usr/local/bin \t&& chmod +x /usr/local/bin/docker \t&& rm -rf /tmp/*"
    Name: run
    PrependShell: true
  - Key: maven_filename
    Name: arg
    Value: '"apache-maven-${maven_version}-bin.tar.gz"'
  - Key: maven_filemd5
    Name: arg
    Value: '"948110de4aab290033c23bf4894f7d9a"'
  - Key: maven_url
    Name: arg
    Value: '"http://archive.apache.org/dist/maven/maven-3/${maven_version}/binaries/${maven_filename}"'
  - Key: maven_tmp
    Name: arg
    Value: '"/tmp/${maven_filename}"'
  - CmdLine:
    - wget --no-verbose -O ${maven_tmp}  ${maven_url}
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "${maven_filemd5} ${maven_tmp}" | md5sum -c
    Name: run
    PrependShell: true
  - CmdLine:
    - tar xzf ${maven_tmp}  -C /opt/         && ln -s /opt/apache-maven-${maven_version}
      ${MAVEN_HOME}         && ln -s ${MAVEN_HOME}/bin/mvn /usr/local/bin
    Name: run
    PrependShell: true
  - Env:
    - Key: PATH
      Value: ${MAVEN_HOME}/bin:$PATH
    Name: env
  - CmdLine:
    - apt-get clean           && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man/??
      /usr/share/man/??_*
    Name: run
    PrependShell: true
  - Name: user
    User: jenkins
  - CmdLine:
    - echo "alias nano='export TERM=xterm && nano'" >> ${JENKINS_HOME}/.bash_aliases
    Name: run
    PrependShell: true
  - CmdLine:
    - mvn --version
    Name: run
    PrependShell: true
  From:
    Image: jenkins/jenkins:lts
  Name: ""
  Platform: ""
  SourceCode: FROM jenkins/jenkins:lts
