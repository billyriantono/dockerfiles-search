{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:alpine",
      "SourceCode": "FROM python:alpine",
      "Platform": "",
      "From": {
        "Image": "python:alpine"
      },
      "Commands": [
        {
          "CmdLine": [
            "/usr/bin/entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoint.sh",
            "/usr/bin/"
          ]
        },
        {
          "CmdLine": [
            "apk add --no-cache --virtual .buildDeps         build-base         git         libffi-dev         openssl-dev         shadow     \u0026\u0026 git clone --depth 1 -b stable-2.8 https://github.com/ansible/ansible.git     \u0026\u0026 cd ansible     \u0026\u0026 python setup.py install     \u0026\u0026 cd ..     \u0026\u0026 rm -rf ansible     \u0026\u0026 pip install         boto         boto3         PyVmomi         xmljson     \u0026\u0026 useradd -m ansible     \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner --format '%n#p' $(find /usr/local/lib/python*/site-packages/ -name '*.so')             | tr ',' '\\n'             | sort -u             | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }'     )\"     \u0026\u0026 apk add --no-cache --virtual .runDeps $runDeps     \u0026\u0026 apk del --no-cache .buildDeps     \u0026\u0026 ln -s /usr/local/bin/python /usr/bin/python"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "ansible"
        }
      ]
    }
  ]
}