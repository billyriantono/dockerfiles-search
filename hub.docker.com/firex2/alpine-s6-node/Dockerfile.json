{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "firex2/alpine-s6",
      "SourceCode": "FROM firex2/alpine-s6",
      "Platform": "",
      "From": {
        "Image": "firex2/alpine-s6"
      },
      "Commands": [
        {
          "Maintainer": "Fire",
          "Name": "maintainer"
        },
        {
          "Env": [
            {
              "Key": "VERSION",
              "Value": "v7.10.0"
            },
            {
              "Key": "NPM_VERSION",
              "Value": "4"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache curl make gcc g++ python linux-headers binutils-gold gnupg libstdc++ \u0026\u0026   curl -sSLO https://nodejs.org/dist/${VERSION}/node-${VERSION}.tar.xz \u0026\u0026   tar -xf node-${VERSION}.tar.xz \u0026\u0026   cd node-${VERSION} \u0026\u0026   ./configure --prefix=/usr \u0026\u0026   make -j$(getconf _NPROCESSORS_ONLN) \u0026\u0026   make install \u0026\u0026   cd / \u0026\u0026   if [ -x /usr/bin/npm ]; then     npm install -g npm@${NPM_VERSION} \u0026\u0026     find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf;   fi \u0026\u0026   apk del curl make gcc g++ python linux-headers binutils-gold gnupg \u0026\u0026   rm -rf /node-${VERSION}* /usr/share/man /tmp/* /var/cache/apk/*     /root/.npm /root/.node-gyp /root/.gnupg /usr/lib/node_modules/npm/man     /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html /usr/lib/node_modules/npm/scripts"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}