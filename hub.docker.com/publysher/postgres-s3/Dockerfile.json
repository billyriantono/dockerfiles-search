{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "python:3.5-alpine",
      "SourceCode": "FROM python:3.5-alpine",
      "Platform": "",
      "From": {
        "Image": "python:3.5-alpine"
      },
      "Commands": [
        {
          "Maintainer": "\"Yigal Duppen\" \u003cyigal@publysher.nl\u003e",
          "Name": "maintainer"
        },
        {
          "Name": "workdir",
          "Path": "/app/"
        },
        {
          "Name": "expose",
          "Ports": [
            "8000"
          ]
        },
        {
          "Name": "stopsignal",
          "Signal": "SIGINT"
        },
        {
          "Health": {
            "Test": [
              "CMD",
              "/app/check-health.sh"
            ]
          },
          "Name": "healthcheck"
        },
        {
          "Labels": [
            {
              "Key": "org.label-schema.schema-version",
              "Value": "\"1.0\""
            },
            {
              "Key": "org.label-schema.name",
              "Value": "\"Postgres/S3\""
            },
            {
              "Key": "org.label-schema.description",
              "Value": "\"A service to backup and restore postgres databases to S3\""
            },
            {
              "Key": "org.label-schema.url",
              "Value": "\"https://github.com/publysher/docker-postgres-s3/\""
            },
            {
              "Key": "org.label-schema.vcs-url",
              "Value": "\"https://github.com/publysher/docker-postgres-s3\""
            },
            {
              "Key": "org.label-schema.vendor",
              "Value": "\"Publysher BV\""
            },
            {
              "Key": "org.label-schema.docker.dockerfile",
              "Value": "\"./postgres-s3/Dockerfile\""
            }
          ],
          "Name": "label"
        },
        {
          "CmdLine": [
            "apk update     \u0026\u0026 apk add         'postgresql\u003c9.6'     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 pip3 install awscli     \u0026\u0026 adduser -S service     \u0026\u0026 mkdir -p /app/ /data/      \u0026\u0026 chown service /data/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "service"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "*",
            "/app/"
          ]
        },
        {
          "CmdLine": [
            "python",
            "app.py"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}