MetaArgs: null
Stages:
- BaseName: dawnwords/docker-alpine-jdk8-node10-yarn
  Commands:
  - Key: DOCKER_CLI_VERSION
    Name: arg
    Value: '"19.03.2"'
  - Env:
    - Key: DOWNLOAD_URL
      Value: '"https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_CLI_VERSION.tgz"'
    Name: env
  - CmdLine:
    - set -ex; apk --update add curl bash jq    && mkdir -p /tmp/download     && curl
      -L $DOWNLOAD_URL | tar -xz -C /tmp/download     && mv /tmp/download/docker/docker
      /usr/local/bin/     && rm -rf /tmp/download     && apk del curl     && rm -rf
      /var/cache/apk/*
    Name: run
    PrependShell: true
  - CmdLine:
    - set -x &&     apk add --no-cache -t .deps ca-certificates &&     wget -q -O
      /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
      &&     wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.29-r0/glibc-2.29-r0.apk
      &&     apk add glibc-2.29-r0.apk &&     rm glibc-2.29-r0.apk &&     apk del
      --purge .deps
    Name: run
    PrependShell: true
  - Env:
    - Key: LD_LIBRARY_PATH
      Value: /lib:/usr/lib
    Name: env
  - CmdLine:
    - set -x &&     apk add --no-cache -t .deps ca-certificates &&     apk add --no-cache
      zlib libgcc &&     DOCKER_COMPOSE_URL=https://github.com$(wget -q -O- https://github.com/docker/compose/releases/latest         |
      grep -Eo 'href="[^"]+docker-compose-Linux-x86_64'         | sed 's/^href="//'         |
      head -n1) &&     wget -q -O /usr/local/bin/docker-compose $DOCKER_COMPOSE_URL
      &&     chmod a+rx /usr/local/bin/docker-compose &&         apk del --purge .deps
      &&         docker-compose version
    Name: run
    PrependShell: true
  From:
    Image: dawnwords/docker-alpine-jdk8-node10-yarn
  Name: ""
  Platform: ""
  SourceCode: FROM dawnwords/docker-alpine-jdk8-node10-yarn
