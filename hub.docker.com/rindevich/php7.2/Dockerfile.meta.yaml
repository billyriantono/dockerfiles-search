MetaArgs: null
Stages:
- BaseName: php:7-apache
  Commands:
  - Maintainer: 'Rindevich version: 0.1'
    Name: maintainer
  - CmdLine:
    - apt-get update -qq && apt-get install -y -qq apt-utils && mkdir -p /usr/share/man/man1     &&
      apt-get update -qq && apt-get install -y -qq openjdk-8-jre-headless     && apt-get
      update -qq && apt-get install -y -qq  openjdk-8-jdk && dpkg --configure -a
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update -qq && apt-get install -y -qq         libicu-dev         libfreetype6-dev         libjpeg62-turbo-dev         libmcrypt-dev         libpng-dev         libcurl4-openssl-dev         software-properties-common          libcurl3
      curl         zip         unzip         inotify-tools         build-essential         libxml2-dev
      libxslt1-dev zlib1g-dev         git         mc         htop         mysql-client         sshpass         gnupg         nano         sudo         graphviz         netcat-openbsd         ant         libmagickwand-dev         imagemagick         libicu-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_10.x | bash - && apt-get install -y
      nodejs build-essential
    Name: run
    PrependShell: true
  - CmdLine:
    - docker-php-ext-install iconv mbstring opcache     && docker-php-ext-configure
      gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/     && docker-php-ext-install
      gd     && docker-php-ext-install zip     && docker-php-ext-install curl     &&
      docker-php-ext-install intl     && docker-php-ext-install pdo     && docker-php-ext-install
      pdo_mysql
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install mcrypt-1.0.1
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install apcu
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "extension=apcu.so" > /usr/local/etc/php/conf.d/apcu.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install imagick
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "extension=imagick.so" > /usr/local/etc/php/conf.d/imagick.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/ioncube &&     mkdir -p /usr/local/ioncube &&     cd /tmp/ioncube
      &&     curl -SL http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz
      -o /tmp/ioncube/ioncube_loaders_lin_x86-64.tar.gz &&     tar xvf /tmp/ioncube/ioncube_loaders_lin_x86-64.tar.gz
      &&     cd `php -i | grep extension_dir | cut -d' ' -f 5` &&     cp /tmp/ioncube/ioncube/ioncube_loader_lin_7.2.so
      /usr/local/ioncube/ioncube_loader_lin_7.2.so &&     echo zend_extension=/usr/local/ioncube/ioncube_loader_lin_7.2.so
      > /usr/local/etc/php/conf.d/00-ioncube.ini &&     rm -rf /tmp/ioncube/
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install xdebug     && docker-php-ext-enable xdebug
    Name: run
    PrependShell: true
  - CmdLine:
    - pecl install redis     && docker-php-ext-enable redis
    Name: run
    PrependShell: true
  - CmdLine:
    - npm install -g grunt-cli bower grunt jasmine
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "date.timezone=Europe/Berlin" >> /usr/local/etc/php/conf.d/timezone.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -eux; \t{ \t\techo 'xdebug.remote_enable=1'; \t\techo 'xdebug.remote_handler=dbgp';
      \t\techo 'xdebug.remote_host=172.18.0.1'; \t\techo 'xdebug.remote_port=9000';
      \t\techo 'xdebug.remote_autostart=0'; \t\techo 'xdebug.remote_connect_back=1';
      \t\techo 'xdebug.profiler_output_dir=\"/var/www/shopware/vendor/shopware/shopware/build/artifacts\"';
      \t} > /usr/local/etc/php/conf.d/xdebug.ini"
    Name: run
    PrependShell: true
  - CmdLine:
    - a2enmod rewrite && a2dismod mpm_event && a2enmod mpm_prefork
    Name: run
    PrependShell: true
  - CmdLine:
    - service apache2 restart
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "alias ll='ls -ahl'" >> /etc/bash.bashrc
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /var/www/shopware
  - CmdLine:
    - apt-get clean && rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    Name: run
    PrependShell: true
  - CmdLine:
    - php composer-setup.php --install-dir=/usr/local/bin/ --filename=composer
    Name: run
    PrependShell: true
  - CmdLine:
    - php -r "unlink('composer-setup.php');"
    Name: run
    PrependShell: true
  From:
    Image: php:7-apache
  Name: ""
  Platform: ""
  SourceCode: FROM php:7-apache
