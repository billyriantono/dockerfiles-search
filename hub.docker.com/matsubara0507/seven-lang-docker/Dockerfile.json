{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "openjdk:8",
      "SourceCode": "FROM openjdk:8",
      "Platform": "",
      "From": {
        "Image": "openjdk:8"
      },
      "Commands": [
        {
          "Env": [
            {
              "Key": "HOME",
              "Value": "\"/root\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$HOME"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends g++ gcc make  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/rbenv/rbenv.git ~/.rbenv"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cd ~/.rbenv  \u0026\u0026 src/configure  \u0026\u0026 make -C src"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'export PATH=$HOME/.rbenv/bin:$PATH' \u003e\u003e ~/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends cmake g++ gcc libyajl-dev libpython3.4-dev libgmp-dev libmemcached-dev make  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "git clone --branch 2015.11.11 --depth 1 https://github.com/stevedekorte/io.git ~/io  \u0026\u0026 mkdir -p ~/io/build  \u0026\u0026 cd ~/io/build  \u0026\u0026 cmake ..  \u0026\u0026 make install  \u0026\u0026 rm -fr ~/io"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/usr/local/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends gprolog  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SCALA_VERSION",
              "Value": "\"2.12.1\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "SBT_VERSION",
              "Value": "\"0.13.15\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -fsL \"http://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz\" | tar xfz - -C ~  \u0026\u0026 mv \"$HOME/scala-$SCALA_VERSION\" \"$HOME/.scala\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -fsL \"http://downloads.typesafe.com/sbt/$SBT_VERSION/sbt-$SBT_VERSION.tgz\" | tar xfz - -C ~  \u0026\u0026 mv \"$HOME/sbt\" \"$HOME/.sbt\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"$HOME/.sbt/bin:$HOME/.scala/bin:$PATH\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "sbt sbtVersion"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://packages.erlang-solutions.com/debian jessie contrib\" \u003e\u003e /etc/apt/sources.list  \u0026\u0026 curl -O http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc  \u0026\u0026 apt-key add erlang_solutions.asc  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends erlang  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein  \u0026\u0026 mv lein /usr/local/bin  \u0026\u0026 chmod u+x /usr/local/bin/lein"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LEIN_ROOT",
              "Value": "\"1\""
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "lein"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo \"deb http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main\" \u003e /etc/apt/sources.list.d/ghc.list  \u0026\u0026 apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends ca-certificates g++ ghc-8.0.2 libtinfo-dev  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 575159689BEFB442  \u0026\u0026 echo \"deb http://download.fpcomplete.com/debian jessie main\" | tee /etc/apt/sources.list.d/fpco.list  \u0026\u0026 apt-get update  \u0026\u0026 apt-get install -y --no-install-recommends stack  \u0026\u0026 apt-get clean  \u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "stack config set system-ghc --global true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "\"/opt/ghc/8.0.2/bin:$PATH\""
            }
          ],
          "Name": "env"
        }
      ]
    }
  ]
}