MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     apt-transport-https     ca-certificates     curl     dbus     dnsutils     dpkg     fakeroot     file     ftp     iproute2     iputils-ping     jq     libcurl4     libgconf-2-4     libsecret-1-dev     libunwind8     libxkbfile-dev     libxss1     locales     netcat     openssh-client     pkg-config     rpm     rsync    shellcheck     software-properties-common     sudo     telnet     time     tzdata     unzip     wget     xorriso     xvfb     xz-utils     zip     zsync
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: en_GB.UTF-8
    Name: env
  - Env:
    - Key: LC_ALL
      Value: $LANG
    Name: env
  - CmdLine:
    - locale-gen $LANG  && update-locale
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     build-essential
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     p7zip     p7zip-full     p7zip-rar
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:ansible/ansible &&    apt-get update &&    apt-get
      install -y --no-install-recommends      ansible &&    rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
      &&   unzip awscli-bundle.zip &&   ./awscli-bundle/install -i /usr/local/aws
      -b /usr/local/bin/aws &&   rm awscli-bundle.zip &&   rm -rf awscli-bundle
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://aka.ms/InstallAzureCLIDeb | bash &&    rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - az extension add -n   azure-devops
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sSL https://get.docker.com/ | bash &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - DOCKER_COMPOSE_VERSION=$(curl -sX GET "https://api.github.com/repos/docker/compose/releases/latest"
      | awk '/tag_name/{print $4;exit}' FS='[""]') &&   curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname
      -s)-$(uname -m)" -o /usr/local/bin/docker-compose &&   chmod +x /usr/local/bin/docker-compose
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     firefox &&   rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - add-apt-repository -y ppa:git-core/ppa &&    apt-get update &&    apt-get install
      -y --no-install-recommends      git &&    rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh
      | bash &&   apt-get install -y --no-install-recommends     git-lfs &&   rm -rf
      /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://dl.google.com/go/go1.12.14.linux-amd64.tar.gz -o go1.12.14.linux-amd64.tar.gz
      &&   mkdir -p /usr/local/go1.12.14 &&   tar -C /usr/local/go1.12.14 -xzf go1.12.14.linux-amd64.tar.gz
      --strip-components=1 go &&   rm go1.12.14.linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://dl.google.com/go/go1.13.5.linux-amd64.tar.gz -o go1.13.5.linux-amd64.tar.gz
      &&   mkdir -p /usr/local/go1.13.5 &&   tar -C /usr/local/go1.13.5 -xzf go1.13.5.linux-amd64.tar.gz
      --strip-components=1 go &&   rm go1.13.5.linux-amd64.tar.gz
    Name: run
    PrependShell: true
  - Env:
    - Key: GOROOT_1_12_X64
      Value: /usr/local/go1.12.14
    - Key: GOROOT_1_13_X64
      Value: /usr/local/go1.13.5
    - Key: GOROOT
      Value: /usr/local/go1.13.5
    Name: env
  - Env:
    - Key: PATH
      Value: $PATH:$GOROOT/bin
    Name: env
  - CmdLine:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key
      add - &&   echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable
      main" | tee /etc/apt/sources.list.d/google-chrome.list &&   apt-get update &&   apt-get
      install -y --no-install-recommends     google-chrome-stable &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: CHROME_BIN
      Value: /usr/bin/google-chrome
    Name: env
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     httpie &&   rm
      -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: DEFAULT_JDK_VERSION
      Value: "8"
    Name: env
  - CmdLine:
    - apt-add-repository -y ppa:openjdk-r/ppa
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     openjdk-8-jdk
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     openjdk-11-jdk
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     openjdk-12-jdk
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     openjdk-13-jdk
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - update-alternatives --set java /usr/lib/jvm/java-${DEFAULT_JDK_VERSION}-openjdk-amd64/jre/bin/java
    Name: run
    PrependShell: true
  - Env:
    - Key: JAVA_HOME_8_X64
      Value: /usr/lib/jvm/java-8-openjdk-amd64
    - Key: JAVA_HOME_11_X64
      Value: /usr/lib/jvm/java-11-openjdk-amd64
    - Key: JAVA_HOME_12_X64
      Value: /usr/lib/jvm/java-12-openjdk-amd64
    - Key: JAVA_HOME_13_X64
      Value: /usr/lib/jvm/java-13-openjdk-amd64
    - Key: JAVA_HOME
      Value: /usr/lib/jvm/java-${DEFAULT_JDK_VERSION}-openjdk-amd64
    - Key: JAVA_TOOL_OPTIONS
      Value: -Dfile.encoding=UTF8
    Name: env
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     ant     ant-optional
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - Env:
    - Key: DEFAULT_MVN_VERSION
      Value: 3.6.3
    Name: env
  - CmdLine:
    - curl -sL https://www-eu.apache.org/dist/maven/maven-3/"${DEFAULT_MVN_VERSION}"/binaries/apache-maven-"${DEFAULT_MVN_VERSION}"-bin.zip
      -o maven.zip &&   unzip -d /usr/share maven.zip &&   rm maven.zip &&   ln -sf
      /usr/share/apache-maven-"${DEFAULT_MVN_VERSION}"/bin/mvn /usr/bin/mvn
    Name: run
    PrependShell: true
  - Env:
    - Key: M2_HOME
      Value: /usr/share/apache-maven-${DEFAULT_MVN_VERSION}
    Name: env
  - CmdLine:
    - wget -O gradleReleases.html https://gradle.org/releases/ &&   gradleUrl=$(grep
      -m 1 -o "https:\/\/services.gradle.org\/distributions\/gradle-.*-bin\.zip" gradleReleases.html
      | head -1) &&   gradleVersion=$(echo $gradleUrl | sed -nre 's/^[^0-9]*(([0-9]+\.)*[0-9]+).*/\1/p')
      &&   rm gradleReleases.html &&   curl -sL $gradleUrl -o gradleLatest.zip &&   unzip
      -d /usr/share gradleLatest.zip &&   rm gradleLatest.zip &&   ln -fs /usr/share/gradle-"${gradleVersion}"/bin/gradle
      /usr/bin/gradle
    Name: run
    PrependShell: true
  - Env:
    - Key: GRADLE_HOME
      Value: /usr/share/gradle
    Name: env
  - CmdLine:
    - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add
      - &&   touch /etc/apt/sources.list.d/kubernetes.list &&   echo "deb http://apt.kubernetes.io/
      kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list &&   apt-get
      update &&   apt-get install -y --no-install-recommends     kubectl &&   rm -rf
      /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 |
      bash
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     mysql-client
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sL https://deb.nodesource.com/setup_12.x | bash &&   apt-get install -y
      --no-install-recommends     nodejs -y &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &&   echo
      "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      &&   apt-get update &&   apt-get install -y --no-install-recommends     yarn
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - PACKER_VERSION=$(curl -s https://checkpoint-api.hashicorp.com/v1/check/packer
      | jq -r .current_version) &&   curl -LO "https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip"
      &&   unzip -o "packer_${PACKER_VERSION}_linux_amd64.zip" -d /usr/local/bin &&   rm
      -f "packer_${PACKER_VERSION}_linux_amd64.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
      &&   dpkg -i packages-microsoft-prod.deb &&   apt-get update &&   apt-get install
      -y --no-install-recommends     powershell &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     python     python-dev     python-pip     python3     python3-dev     python3-pip
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update &&   apt-get install -y --no-install-recommends     subversion
      &&   rm -rf /var/lib/apt/lists/*
    Name: run
    PrependShell: true
  - CmdLine:
    - TERRAFORM_VERSION=$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform
      | jq -r .current_version) &&   curl -LO "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
      &&   unzip -o "terraform_${TERRAFORM_VERSION}_linux_amd64.zip" -d /usr/local/bin
      &&   rm -f "terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get clean &&   rm -rf /var/lib/apt/lists/* &&   rm -rf /etc/apt/sources.list.d/*
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - root
    - /
  - Name: workdir
    Path: /azp
  - CmdLine:
    - ./start.sh
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
