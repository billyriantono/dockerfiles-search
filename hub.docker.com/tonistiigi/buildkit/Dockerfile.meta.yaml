MetaArgs:
- DefaultValue: dd56ece8236d6d9e5bed4ea0c31fe53c7b873ff4
  Key: RUNC_VERSION
  ProvidedValue: null
  Value: dd56ece8236d6d9e5bed4ea0c31fe53c7b873ff4
- DefaultValue: v1.1.3
  Key: CONTAINERD_VERSION
  ProvidedValue: null
  Value: v1.1.3
- DefaultValue: v1.0.3
  Key: CONTAINERD10_VERSION
  ProvidedValue: null
  Value: v1.0.3
- DefaultValue: buildkitd
  Key: BUILDKIT_TARGET
  ProvidedValue: null
  Value: buildkitd
- DefaultValue: "2.6"
  Key: REGISTRY_VERSION
  ProvidedValue: null
  Value: "2.6"
- DefaultValue: d843aadf00d72082fd7a31572ef018d1e792535f
  Key: ROOTLESSKIT_VERSION
  ProvidedValue: null
  Value: d843aadf00d72082fd7a31572ef018d1e792535f
Stages:
- As: gobuild-base
  BaseName: golang:1.11-alpine
  Commands:
  - CmdLine:
    - apk add --no-cache g++ linux-headers
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache git libseccomp-dev make
    Name: run
    PrependShell: true
  From:
    Image: golang:1.11-alpine
  Name: gobuild-base
  Platform: ""
  SourceCode: FROM golang:1.11-alpine AS gobuild-base
- As: buildkit-base
  BaseName: gobuild-base
  Commands:
  - Name: workdir
    Path: /go/src/github.com/moby/buildkit
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - .
    - .
  - CmdLine:
    - mkdir .tmp;   PKG=github.com/moby/buildkit VERSION=$(git describe --match 'v[0-9]*'
      --dirty='.m' --always) REVISION=$(git rev-parse HEAD)$(if ! git diff --no-ext-diff
      --quiet --exit-code; then echo .m; fi);   echo "-X ${PKG}/version.Version=${VERSION}
      -X ${PKG}/version.Revision=${REVISION} -X ${PKG}/version.Package=${PKG}" | tee
      .tmp/ldflags
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: gobuild-base
  Name: buildkit-base
  Platform: ""
  SourceCode: FROM gobuild-base AS buildkit-base
- As: buildctl
  BaseName: buildkit-base
  Commands:
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - CmdLine:
    - go build -ldflags "$(cat .tmp/ldflags) -d" -o /usr/bin/buildctl ./cmd/buildctl
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 1
      Named: buildkit-base
  Name: buildctl
  Platform: ""
  SourceCode: FROM buildkit-base AS buildctl
- As: buildctl-darwin
  BaseName: buildkit-base
  Commands:
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - Env:
    - Key: GOOS
      Value: darwin
    Name: env
  - CmdLine:
    - go build -ldflags "$(cat .tmp/ldflags)" -o /usr/bin/buildctl-darwin ./cmd/buildctl
    Name: run
    PrependShell: true
  - Env:
    - Key: GOOS
      Value: linux
    Name: env
  From:
    Stage:
      Index: 1
      Named: buildkit-base
  Name: buildctl-darwin
  Platform: ""
  SourceCode: FROM buildkit-base AS buildctl-darwin
- As: buildkitd
  BaseName: buildkit-base
  Commands:
  - Env:
    - Key: CGO_ENABLED
      Value: "1"
    Name: env
  - CmdLine:
    - go build -installsuffix netgo -ldflags "$(cat .tmp/ldflags) -w -extldflags -static"
      -tags 'seccomp netgo cgo static_build' -o /usr/bin/buildkitd ./cmd/buildkitd
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 1
      Named: buildkit-base
  Name: buildkitd
  Platform: ""
  SourceCode: FROM buildkit-base AS buildkitd
- As: runc
  BaseName: gobuild-base
  Commands:
  - Key: RUNC_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: CGO_ENABLED
      Value: "1"
    Name: env
  - CmdLine:
    - "git clone https://github.com/opencontainers/runc.git \"$GOPATH/src/github.com/opencontainers/runc\"
      \t&& cd \"$GOPATH/src/github.com/opencontainers/runc\" \t&& git checkout -q
      \"$RUNC_VERSION\" \t&& go build -installsuffix netgo -ldflags '-w -extldflags
      -static' -tags 'seccomp netgo cgo static_build' -o /usr/bin/runc ./"
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 0
      Named: gobuild-base
  Name: runc
  Platform: ""
  SourceCode: FROM gobuild-base AS runc
- As: containerd-base
  BaseName: gobuild-base
  Commands:
  - CmdLine:
    - apk add --no-cache btrfs-progs-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/containerd/containerd.git /go/src/github.com/containerd/containerd
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /go/src/github.com/containerd/containerd
  From:
    Stage:
      Index: 0
      Named: gobuild-base
  Name: containerd-base
  Platform: ""
  SourceCode: FROM gobuild-base AS containerd-base
- As: containerd
  BaseName: containerd-base
  Commands:
  - Key: CONTAINERD_VERSION
    Name: arg
    Value: null
  - CmdLine:
    - git checkout -q "$CONTAINERD_VERSION"   && make bin/containerd   && make bin/containerd-shim   &&
      make bin/ctr
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 6
      Named: containerd-base
  Name: containerd
  Platform: ""
  SourceCode: FROM containerd-base as containerd
- As: containerd10
  BaseName: containerd-base
  Commands:
  - Key: CONTAINERD10_VERSION
    Name: arg
    Value: null
  - CmdLine:
    - git checkout -q "$CONTAINERD10_VERSION"   && make bin/containerd   && make bin/containerd-shim
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 6
      Named: containerd-base
  Name: containerd10
  Platform: ""
  SourceCode: FROM containerd-base as containerd10
- As: unit-tests
  BaseName: buildkit-base
  Commands:
  - Chown: ""
    From: runc
    Name: copy
    SourcesAndDest:
    - /usr/bin/runc
    - /usr/bin/runc
  - Chown: ""
    From: containerd
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/containerd/containerd/bin/containerd*
    - /usr/bin/
  From:
    Stage:
      Index: 1
      Named: buildkit-base
  Name: unit-tests
  Platform: ""
  SourceCode: FROM buildkit-base AS unit-tests
- As: buildkitd.oci_only
  BaseName: buildkit-base
  Commands:
  - Env:
    - Key: CGO_ENABLED
      Value: "1"
    Name: env
  - Name: workdir
    Path: /go/src/github.com/moby/buildkit
  - CmdLine:
    - go build -installsuffix netgo -ldflags "$(cat .tmp/ldflags) -w -extldflags -static"
      -tags 'no_containerd_worker seccomp netgo cgo static_build' -o /usr/bin/buildkitd.oci_only
      ./cmd/buildkitd
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 1
      Named: buildkit-base
  Name: buildkitd.oci_only
  Platform: ""
  SourceCode: FROM buildkit-base AS buildkitd.oci_only
- As: buildkitd.containerd_only
  BaseName: buildkit-base
  Commands:
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - CmdLine:
    - go build -ldflags "$(cat .tmp/ldflags) -d"  -o /usr/bin/buildkitd.containerd_only
      -tags no_oci_worker ./cmd/buildkitd
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 1
      Named: buildkit-base
  Name: buildkitd.containerd_only
  Platform: ""
  SourceCode: FROM buildkit-base AS buildkitd.containerd_only
- As: registry
  BaseName: registry:$REGISTRY_VERSION
  Commands: null
  From:
    Image: registry:$REGISTRY_VERSION
  Name: registry
  Platform: ""
  SourceCode: FROM registry:$REGISTRY_VERSION AS registry
- As: rootlesskit-base
  BaseName: gobuild-base
  Commands:
  - CmdLine:
    - git clone https://github.com/rootless-containers/rootlesskit.git /go/src/github.com/rootless-containers/rootlesskit
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /go/src/github.com/rootless-containers/rootlesskit
  From:
    Stage:
      Index: 0
      Named: gobuild-base
  Name: rootlesskit-base
  Platform: ""
  SourceCode: FROM gobuild-base AS rootlesskit-base
- As: rootlesskit
  BaseName: rootlesskit-base
  Commands:
  - Key: ROOTLESSKIT_VERSION
    Name: arg
    Value: null
  - Env:
    - Key: GOOS
      Value: linux
    Name: env
  - CmdLine:
    - git checkout -q "$ROOTLESSKIT_VERSION" && go build -o /rootlesskit ./cmd/rootlesskit
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 13
      Named: rootlesskit-base
  Name: rootlesskit
  Platform: ""
  SourceCode: FROM rootlesskit-base as rootlesskit
- As: integration-tests
  BaseName: unit-tests
  Commands:
  - Env:
    - Key: BUILDKIT_INTEGRATION_ROOTLESS_IDPAIR
      Value: '"1000:1000"'
    Name: env
  - CmdLine:
    - apk add --no-cache shadow shadow-uidmap sudo   && useradd --create-home --home-dir
      /home/user --uid 1000 -s /bin/sh user   && echo "XDG_RUNTIME_DIR=/run/user/1000;
      export XDG_RUNTIME_DIR" >> /home/user/.profile   && mkdir -m 0700 -p /run/user/1000   &&
      chown -R user /run/user/1000 /home/user
    Name: run
    PrependShell: true
  - Env:
    - Key: BUILDKIT_INTEGRATION_CONTAINERD_EXTRA
      Value: '"containerd-1.0=/opt/containerd-1.0/bin"'
    Name: env
  - Chown: ""
    From: containerd10
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/containerd/containerd/bin/containerd*
    - /opt/containerd-1.0/bin/
  - Chown: ""
    From: buildctl
    Name: copy
    SourcesAndDest:
    - /usr/bin/buildctl
    - /usr/bin/
  - Chown: ""
    From: buildkitd
    Name: copy
    SourcesAndDest:
    - /usr/bin/buildkitd
    - /usr/bin
  - Chown: ""
    From: registry
    Name: copy
    SourcesAndDest:
    - /bin/registry
    - /usr/bin
  - Chown: ""
    From: rootlesskit
    Name: copy
    SourcesAndDest:
    - /rootlesskit
    - /usr/bin/
  From:
    Stage:
      Index: 9
      Named: unit-tests
  Name: integration-tests
  Platform: ""
  SourceCode: FROM unit-tests AS integration-tests
- As: cross-windows
  BaseName: buildkit-base
  Commands:
  - Env:
    - Key: GOOS
      Value: windows
    Name: env
  From:
    Stage:
      Index: 1
      Named: buildkit-base
  Name: cross-windows
  Platform: ""
  SourceCode: FROM buildkit-base AS cross-windows
- As: buildctl.exe
  BaseName: cross-windows
  Commands:
  - CmdLine:
    - go build -ldflags "$(cat .tmp/ldflags)" -o /buildctl.exe ./cmd/buildctl
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 16
      Named: cross-windows
  Name: buildctl.exe
  Platform: ""
  SourceCode: FROM cross-windows AS buildctl.exe
- As: buildkitd.exe
  BaseName: cross-windows
  Commands:
  - Env:
    - Key: CGO_ENABLED
      Value: "0"
    Name: env
  - CmdLine:
    - go build -ldflags "$(cat .tmp/ldflags)" -o /buildkitd.exe ./cmd/buildkitd
    Name: run
    PrependShell: true
  From:
    Stage:
      Index: 16
      Named: cross-windows
  Name: buildkitd.exe
  Platform: ""
  SourceCode: FROM cross-windows AS buildkitd.exe
- As: buildkit-export
  BaseName: alpine
  Commands:
  - CmdLine:
    - apk add --no-cache git
    Name: run
    PrependShell: true
  - Name: volume
    Volumes:
    - /var/lib/buildkit
  From:
    Image: alpine
  Name: buildkit-export
  Platform: ""
  SourceCode: FROM alpine AS buildkit-export
- As: buildkit-buildkitd
  BaseName: buildkit-export
  Commands:
  - Chown: ""
    From: runc
    Name: copy
    SourcesAndDest:
    - /usr/bin/runc
    - /usr/bin/
  - Chown: ""
    From: buildkitd
    Name: copy
    SourcesAndDest:
    - /usr/bin/buildkitd
    - /usr/bin/
  - Chown: ""
    From: buildctl
    Name: copy
    SourcesAndDest:
    - /usr/bin/buildctl
    - /usr/bin/
  - CmdLine:
    - buildkitd
    Name: entrypoint
    PrependShell: false
  From:
    Stage:
      Index: 19
      Named: buildkit-export
  Name: buildkit-buildkitd
  Platform: ""
  SourceCode: FROM buildkit-export AS buildkit-buildkitd
- As: buildkit-buildkitd.oci_only
  BaseName: buildkit-export
  Commands:
  - Chown: ""
    From: buildkitd.oci_only
    Name: copy
    SourcesAndDest:
    - /usr/bin/buildkitd.oci_only
    - /usr/bin/
  - Chown: ""
    From: buildctl
    Name: copy
    SourcesAndDest:
    - /usr/bin/buildctl
    - /usr/bin/
  - CmdLine:
    - buildkitd.oci_only
    Name: entrypoint
    PrependShell: false
  From:
    Stage:
      Index: 19
      Named: buildkit-export
  Name: buildkit-buildkitd.oci_only
  Platform: ""
  SourceCode: FROM buildkit-export AS buildkit-buildkitd.oci_only
- As: buildkit-buildkitd.containerd_only
  BaseName: buildkit-export
  Commands:
  - Chown: ""
    From: runc
    Name: copy
    SourcesAndDest:
    - /usr/bin/runc
    - /usr/bin/
  - Chown: ""
    From: buildkitd.containerd_only
    Name: copy
    SourcesAndDest:
    - /usr/bin/buildkitd.containerd_only
    - /usr/bin/
  - Chown: ""
    From: buildctl
    Name: copy
    SourcesAndDest:
    - /usr/bin/buildctl
    - /usr/bin/
  - CmdLine:
    - buildkitd.containerd_only
    Name: entrypoint
    PrependShell: false
  From:
    Stage:
      Index: 19
      Named: buildkit-export
  Name: buildkit-buildkitd.containerd_only
  Platform: ""
  SourceCode: FROM buildkit-export AS buildkit-buildkitd.containerd_only
- As: containerd-runtime
  BaseName: alpine
  Commands:
  - Chown: ""
    From: runc
    Name: copy
    SourcesAndDest:
    - /usr/bin/runc
    - /usr/bin/
  - Chown: ""
    From: containerd
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/containerd/containerd/bin/containerd*
    - /usr/bin/
  - Chown: ""
    From: containerd
    Name: copy
    SourcesAndDest:
    - /go/src/github.com/containerd/containerd/bin/ctr
    - /usr/bin/
  - Name: volume
    Volumes:
    - /var/lib/containerd
  - Name: volume
    Volumes:
    - /run/containerd
  - CmdLine:
    - containerd
    Name: entrypoint
    PrependShell: false
  From:
    Image: alpine
  Name: containerd-runtime
  Platform: ""
  SourceCode: FROM alpine AS containerd-runtime
- As: rootless
  BaseName: buildkit-buildkitd
  Commands:
  - CmdLine:
    - apk add --no-cache shadow shadow-uidmap   && useradd --create-home --home-dir
      /home/user --uid 1000 user   && mkdir -p /run/user/1000 /home/user/.local/tmp
      /home/user/.local/share/buildkit   && chown -R user /run/user/1000 /home/user
    Name: run
    PrependShell: true
  - Chown: ""
    From: rootlesskit
    Name: copy
    SourcesAndDest:
    - /rootlesskit
    - /usr/bin/
  - Name: user
    User: user
  - Env:
    - Key: HOME
      Value: /home/user
    Name: env
  - Env:
    - Key: USER
      Value: user
    Name: env
  - Env:
    - Key: XDG_RUNTIME_DIR
      Value: /run/user/1000
    Name: env
  - Env:
    - Key: TMPDIR
      Value: /home/user/.local/tmp
    Name: env
  - Name: volume
    Volumes:
    - /home/user/.local/share/buildkit
  - CmdLine:
    - rootlesskit
    - buildkitd
    Name: entrypoint
    PrependShell: false
  From:
    Stage:
      Index: 20
      Named: buildkit-buildkitd
  Name: rootless
  Platform: ""
  SourceCode: FROM buildkit-buildkitd AS rootless
- BaseName: buildkit-${BUILDKIT_TARGET}
  Commands: null
  From:
    Image: buildkit-${BUILDKIT_TARGET}
  Name: ""
  Platform: ""
  SourceCode: FROM buildkit-${BUILDKIT_TARGET}
