MetaArgs: null
Stages:
- BaseName: ubuntu:17.04
  Commands:
  - Env:
    - Key: K8S_VERSION
      Value: v1.6.2
    Name: env
  - Env:
    - Key: KOMPOSE_VERSION
      Value: v0.6.0
    Name: env
  - Env:
    - Key: TF_VERSION
      Value: 0.9.4
    Name: env
  - Env:
    - Key: PACKER_VERSION
      Value: 1.0.0
    Name: env
  - Env:
    - Key: CFSSL_VERSION
      Value: "1.2"
    Name: env
  - Env:
    - Key: DOCTL_VERSION
      Value: 1.6.0
    Name: env
  - CmdLine:
    - apt-get update && apt-get install --no-install-recommends -y ca-certificates
      dirmngr curl unzip vim git openssh-server build-essential && apt-get clean &&
      rm -rf /var/lib/apt/lists
    Name: run
    PrependShell: true
  - CmdLine:
    - gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -o /usr/local/bin/gosu -SL "https://github.com/tianon/gosu/releases/download/1.4/gosu-$(dpkg
      --print-architecture)"     && curl -o /usr/local/bin/gosu.asc -SL "https://github.com/tianon/gosu/releases/download/1.4/gosu-$(dpkg
      --print-architecture).asc"     && gpg --verify /usr/local/bin/gosu.asc     &&
      rm /usr/local/bin/gosu.asc     && chmod +x /usr/local/bin/gosu
    Name: run
    PrependShell: true
  - Chown: ""
    From: ""
    Name: copy
    SourcesAndDest:
    - entrypoint.sh
    - /usr/local/bin/entrypoint.sh
  - CmdLine:
    - /usr/local/bin/entrypoint.sh
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl
      && mv kubectl /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L -o kompose.tar.gz https://github.com/kubernetes-incubator/kompose/releases/download/${KOMPOSE_VERSION}/kompose-linux-amd64.tar.gz
      && tar xvf kompose.tar.gz && mv kompose-linux-amd64 /usr/local/bin/ && rm -rf
      kompose.tar.gz
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lo tf.zip https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
      && unzip tf.zip && mv terraform /usr/local/bin/ && rm -f tf.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -Lo packer.zip https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip
      && unzip packer.zip && mv packer /usr/local/bin/ && rm -f packer.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - export GOPATH=/go &&     export GOROOT=/usr/local/go &&     export PATH=${PATH}:${GOROOT}/bin
      &&     curl -LO https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz
      &&     tar -C /usr/local -xzf go1.8.1.linux-amd64.tar.gz &&     rm -rf go1.8.1.linux-amd64.tar.gz
      &&     mkdir ${GOPATH} &&     go get -u github.com/cloudflare/cfssl/cmd/cfssl
      &&     go get -u github.com/cloudflare/cfssl/cmd/cfssljson &&     go get -u
      github.com/cloudflare/cfssl/cmd/mkbundle &&     cp ${GOPATH}/bin/* /usr/local/bin
      &&     rm -rf ${GOPATH} ${GOROOT}
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/digitalocean/doctl/releases/download/v${DOCTL_VERSION}/doctl-${DOCTL_VERSION}-linux-amd64.tar.gz  |
      tar xz && mv doctl /usr/local/bin
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod -R ugo+x /usr/local/bin
    Name: run
    PrependShell: true
  From:
    Image: ubuntu:17.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:17.04
