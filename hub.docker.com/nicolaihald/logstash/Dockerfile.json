{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "java:8-jre",
      "SourceCode": "FROM java:8-jre",
      "Platform": "",
      "From": {
        "Image": "java:8-jre"
      },
      "Commands": [
        {
          "Maintainer": "nicolaihald",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends \t\tlibzmq3 \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/lib \t\u0026\u0026 ln -s /usr/lib/*/libzmq.so.3 /usr/local/lib/libzmq.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "GOSU_VERSION",
              "Value": "1.7"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \t\u0026\u0026 wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \t\u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\" \t\u0026\u0026 gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \t\u0026\u0026 gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \t\u0026\u0026 rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \t\u0026\u0026 chmod +x /usr/local/bin/gosu \t\u0026\u0026 gosu nobody true"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 46095ACC8548582C1A2699A9D27D666CD88E42B4"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_MAJOR",
              "Value": "2.3"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_VERSION",
              "Value": "1:2.3.2-1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_HOME",
              "Value": "/opt/logstash"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "$LOGSTASH_HOME/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "echo \"deb http://packages.elastic.co/logstash/${LOGSTASH_MAJOR}/debian stable main\" \u003e /etc/apt/sources.list.d/logstash.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 apt-get update \t\u0026\u0026 apt-get install -y --no-install-recommends logstash=$LOGSTASH_VERSION \t\u0026\u0026 apt-get clean \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LOGSTASH_CFG_URL",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Name": "workdir",
          "Path": "$LOGSTASH_HOME"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "src/",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "start.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -x \t\u0026\u0026 mkdir -p /data/geoip \t\u0026\u0026 mkdir -p /config \t\u0026\u0026 wget -q -O /tmp/GeoLiteCity.dat.gz \"http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz\"  \t\u0026\u0026 gzip -d /tmp/GeoLiteCity.dat.gz \u003e /data/geoip/GeoLiteCity.dat \t\u0026\u0026 rm /tmp/GeoLiteCity.dat     \u0026\u0026 chown -hR logstash:logstash /data/geoip     \u0026\u0026 chmod -R 777 /data/geoip"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "chmod +x /start.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/config",
            "/data"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "25826",
            "5044"
          ]
        },
        {
          "CmdLine": [
            "bin/logstash-plugin install logstash-input-heartbeat logstash-input-beats"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/start.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "bin/logstash",
            "agent",
            "-f",
            "/config"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}