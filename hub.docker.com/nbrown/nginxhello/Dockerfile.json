{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:latest",
      "SourceCode": "FROM alpine:latest",
      "Platform": "",
      "From": {
        "Image": "alpine:latest"
      },
      "Commands": [
        {
          "Key": "VERSION",
          "Name": "arg",
          "Value": null
        },
        {
          "CmdLine": [
            "set -x                                                        \u0026\u0026                                                                          apk add --no-cache --virtual .build-deps                                 build-base                                                           gnupg                                                                pcre-dev                                                             wget                                                                 zlib-dev                                                  \u0026\u0026                                                                          TMP=\"$(mktemp -d)\" \u0026\u0026 cd \"$TMP\"                               \u0026\u0026     gpg --keyserver pgp.mit.edu --recv-keys                                  B0F4253373F8F6F510D42178520A9993A1C052F8                  \u0026\u0026     wget -q http://nginx.org/download/nginx-${VERSION}.tar.gz     \u0026\u0026     wget -q http://nginx.org/download/nginx-${VERSION}.tar.gz.asc \u0026\u0026     gpg --verify nginx-${VERSION}.tar.gz.asc                      \u0026\u0026     tar -xf nginx-${VERSION}.tar.gz                               \u0026\u0026                                                                          cd nginx-${VERSION}                                           \u0026\u0026     ./configure                                                              --with-ld-opt=\"-static\"                                              --with-http_sub_module                                    \u0026\u0026     make install                                                  \u0026\u0026     strip /usr/local/nginx/sbin/nginx                             \u0026\u0026                                                                          cd / \u0026\u0026 rm -rf \"$TMP\"                                         \u0026\u0026     apk del .build-deps                                           \u0026\u0026                                                                          ln -sf /dev/stdout /usr/local/nginx/logs/access.log           \u0026\u0026     ln -sf /dev/stderr /usr/local/nginx/logs/error.log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "index.html",
            "/usr/local/nginx/html/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "nginx.conf",
            "/usr/local/nginx/conf/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "docker-entrypoint.sh",
            "/"
          ]
        },
        {
          "Name": "stopsignal",
          "Signal": "SIGQUIT"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "CmdLine": [
            "/docker-entrypoint.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        },
        {
          "CmdLine": [
            "/usr/local/nginx/sbin/nginx",
            "-g",
            "daemon off;"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}