{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "alpine:3.6",
      "SourceCode": "FROM alpine:3.6",
      "Platform": "",
      "From": {
        "Image": "alpine:3.6"
      },
      "Commands": [
        {
          "Maintainer": "chaya",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk add --no-cache openjdk8-jre tini su-exec"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "STACK",
              "Value": "5.5.3"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "apk add --no-cache libzmq bash nodejs supervisor nginx apache2-utils openssl curl"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "mkdir -p /usr/local/lib \t\u0026\u0026 ln -s /usr/lib/*/libzmq.so.3 /usr/local/lib/libzmq.so"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apk add --no-cache -t .build-deps wget ca-certificates \t\u0026\u0026 set -x \t\u0026\u0026 cd /tmp \t\u0026\u0026 echo \"Download Elastic Stack ======================================================\" \t\u0026\u0026 echo \"Download Elasticsearch...\" \t\u0026\u0026 wget --progress=bar:force -O elasticsearch-$STACK.tar.gz https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$STACK.tar.gz \t\u0026\u0026 tar -xzf elasticsearch-$STACK.tar.gz \t\u0026\u0026 mv elasticsearch-$STACK /usr/share/elasticsearch \t\u0026\u0026 echo \"Download Kibana...\" \t\u0026\u0026 wget --progress=bar:force -O kibana-$STACK.tar.gz https://artifacts.elastic.co/downloads/kibana/kibana-$STACK-linux-x86_64.tar.gz \t\u0026\u0026 tar -xzf kibana-$STACK.tar.gz \t\u0026\u0026 mv kibana-$STACK-linux-x86_64 /usr/share/kibana \t\u0026\u0026 echo \"Configure [Elasticsearch] ===================================================\" \t\u0026\u0026 for path in \t\t/usr/share/elasticsearch/data \t\t/usr/share/elasticsearch/logs \t\t/usr/share/elasticsearch/config \t\t/usr/share/elasticsearch/config/scripts \t\t/usr/share/elasticsearch/plugins \t; do \tmkdir -p \"$path\"; \tdone \t\u0026\u0026 /usr/share/elasticsearch/bin/elasticsearch-plugin install ingest-user-agent \t\u0026\u0026 /usr/share/elasticsearch/bin/elasticsearch-plugin install ingest-geoip -b \t\u0026\u0026 echo \"Configure [Kibana] ==========================================================\" \t\u0026\u0026 sed -ri \"s!^(\\#\\s*)?(server\\.host:).*!\\2 '0.0.0.0'!\" /usr/share/kibana/config/kibana.yml \t\u0026\u0026 grep -q \"^server\\.host: '0.0.0.0'\\$\" /usr/share/kibana/config/kibana.yml \t\u0026\u0026 bundled='NODE=\"${DIR}/node/bin/node\"' \t\u0026\u0026 apline_node='NODE=\"/usr/bin/node\"' \t\u0026\u0026 sed -i \"s|$bundled|$apline_node|g\" /usr/share/kibana/bin/kibana-plugin \t\u0026\u0026 sed -i \"s|$bundled|$apline_node|g\" /usr/share/kibana/bin/kibana \t\u0026\u0026 rm -rf /usr/share/kibana/node \t\u0026\u0026 echo \"Make Nginx SSL directory...\" \t\u0026\u0026 mkdir -p /etc/nginx/ssl \t\u0026\u0026 rm /etc/nginx/conf.d/default.conf \t\u0026\u0026 echo \"Create elstack user...\" \t\u0026\u0026 adduser -DH -s /sbin/nologin elstack \t\u0026\u0026 chown -R elstack:elstack /usr/share/elasticsearch \t\u0026\u0026 chown -R elstack:elstack /usr/share/kibana \t\u0026\u0026 echo \"Clean Up...\" \t\u0026\u0026 rm -rf /tmp/* \t\u0026\u0026 apk del --purge .build-deps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/share/elasticsearch/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/share/kibana/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-1.8-openjdk"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/elastic",
            "/usr/share/elasticsearch/config"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/elastic/logrotate",
            "/etc/logrotate.d/elasticsearch"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/nginx/nginx.conf",
            "/etc/nginx/nginx.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/nginx/kibana.conf",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/nginx/ssl.kibana.conf",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/nginx/elastic.conf",
            "/etc/nginx/conf.d/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "config/supervisord/supervisord.conf",
            "/etc/supervisor/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoints/elastic-entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoints/kibana-entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoints/nginx-entrypoint.sh",
            "/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "entrypoints/purge-entrypoint.sh",
            "/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /*-entrypoint.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "volume",
          "Volumes": [
            "/usr/share/elasticsearch/data"
          ]
        },
        {
          "Name": "volume",
          "Volumes": [
            "/etc/nginx"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "443",
            "5601",
            "80",
            "9200",
            "9201",
            "9300"
          ]
        },
        {
          "CmdLine": [
            "/sbin/tini",
            "--",
            "/usr/bin/supervisord",
            "-c",
            "/etc/supervisor/supervisord.conf"
          ],
          "Name": "cmd",
          "PrependShell": false
        }
      ]
    }
  ]
}