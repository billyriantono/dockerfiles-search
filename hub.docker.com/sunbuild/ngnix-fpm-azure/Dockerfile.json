{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "ubuntu",
      "SourceCode": "FROM ubuntu",
      "Platform": "",
      "From": {
        "Image": "ubuntu"
      },
      "Commands": [
        {
          "Maintainer": "bartr",
          "Name": "maintainer"
        },
        {
          "Name": "expose",
          "Ports": [
            "80"
          ]
        },
        {
          "Name": "workdir",
          "Path": "/usr/local"
        },
        {
          "CmdLine": [
            "dpkg-divert --local --rename --add /sbin/initctl \u0026\u0026  ln -sf /bin/true /sbin/initctl \u0026\u0026  apt-get update \u0026\u0026  apt-get -y upgrade \u0026\u0026  apt-get -y install ca-certificates libedit2 libsqlite3-0 libxml2 xz-utils libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev nano mysql-client nginx php7.0-fpm php7.0-mysql php-apcu pwgen python-setuptools curl git unzip php7.0-curl php7.0-gd php7.0-intl php-pear php-imagick php7.0-imap php7.0-mcrypt php-memcache php7.0-pspell php7.0-recode php-sqlite3 php7.0-tidy php7.0-xmlrpc php7.0-xsl libjpeg-dev libpng12-dev supervisor"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "sed -i -e \"s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g\" /etc/php/7.0/fpm/php.ini \u0026\u0026  sed -i -e \"s/upload_max_filesize\\s*=\\s*2M/upload_max_filesize = 100M/g\" /etc/php/7.0/fpm/php.ini \u0026\u0026  sed -i -e \"s/post_max_size\\s*=\\s*8M/post_max_size = 100M/g\" /etc/php/7.0/fpm/php.ini \u0026\u0026  sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/7.0/fpm/php-fpm.conf \u0026\u0026  sed -i -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" /etc/php/7.0/fpm/pool.d/www.conf \u0026\u0026  find /etc/php/7.0/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\; \u0026\u0026  sed -i -e \"s@/run/php/php7.0-fpm.sock@127.0.0.1:9000@g\" /etc/php/7.0/fpm/pool.d/www.conf \u0026\u0026  rm -Rf /etc/nginx/nginx.conf \u0026\u0026  mkdir -p /etc/nginx/sites-available/ \u0026\u0026  mkdir -p /etc/nginx/sites-enabled/ \u0026\u0026  rm /etc/nginx/sites-available/* \u0026\u0026  rm /etc/nginx/sites-enabled/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/composer/vendor/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/php/bin/:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "curl -o /tmp/composer-setup.php https://getcomposer.org/installer   \u0026\u0026 curl -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   \u0026\u0026 php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\""
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "etc",
            "/etc/"
          ]
        },
        {
          "CmdLine": [
            "cp /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled \u0026\u0026 /usr/bin/easy_install supervisor \u0026\u0026 /usr/bin/easy_install supervisor-stdout"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "run.sh",
            "/usr/local/bin/"
          ]
        },
        {
          "CmdLine": [
            "chmod +x /usr/local/bin/run.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "run.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}