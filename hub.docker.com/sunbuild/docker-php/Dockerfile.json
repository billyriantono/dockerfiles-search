{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "richarvey/nginx-php-fpm:1.2.2",
      "SourceCode": "FROM richarvey/nginx-php-fpm:1.2.2",
      "Platform": "",
      "From": {
        "Image": "richarvey/nginx-php-fpm:1.2.2"
      },
      "Commands": [
        {
          "Maintainer": "Women's Tennis Association \u003cadmin@wtanetworks.com\u003e",
          "Name": "maintainer"
        },
        {
          "CmdLine": [
            "apk upgrade --update \u0026\u0026     apk add          autoconf          g++          make          libpng-dev          libjpeg-turbo-dev          postgresql-dev          libmcrypt-dev          openldap-dev          ldb-dev          icu-dev          gmp-dev          imagemagick-dev          pcre-dev          libtool          openssh          mysql-client          git     \u0026\u0026 echo \"root:Docker!\" | chpasswd     \u0026\u0026 pecl install imagick-beta     \u0026\u0026 yes '' | pecl install -f redis     \u0026\u0026 docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr     \u0026\u0026 docker-php-ext-install gd          json          mysqli          opcache          pdo          pdo_mysql          pdo_pgsql          pgsql          ldap          intl          mcrypt          gmp          zip          bcmath          mbstring          pcntl          ftp     \u0026\u0026 docker-php-ext-enable imagick redis"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "init_container.sh",
            "/bin/"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "hostingstart.html",
            "/home/site/wwwroot/index.html"
          ]
        },
        {
          "CmdLine": [
            "mkdir -p /home/LogFiles    \u0026\u0026 rm -rf /var/www/html    \u0026\u0026 ln -s /home/site/wwwroot /var/www/html    \u0026\u0026 chmod 755 /bin/init_container.sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{                 echo 'opcache.memory_consumption=128';                 echo 'opcache.interned_strings_buffer=8';                 echo 'opcache.max_accelerated_files=4000';                 echo 'opcache.revalidate_freq=60';                 echo 'opcache.fast_shutdown=1';                 echo 'opcache.enable_cli=1';     } \u003e /usr/local/etc/php/conf.d/opcache-recommended.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "{                 echo 'error_log=/var/log/apache2/php-error.log';                 echo 'display_errors=Off';                 echo 'log_errors=On';                 echo 'display_startup_errors=Off';                 echo 'date.timezone=UTC';     } \u003e /usr/local/etc/php/conf.d/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "sshd_config",
            "/etc/ssh/"
          ]
        },
        {
          "Name": "expose",
          "Ports": [
            "2222",
            "8080"
          ]
        },
        {
          "Env": [
            {
              "Key": "PORT",
              "Value": "8080"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEBSITE_ROLE_INSTANCE_ID",
              "Value": "localRoleInstance"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEBSITE_INSTANCE_ID",
              "Value": "localInstance"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_ALLOW_SUPERUSER",
              "Value": "1"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_HOME",
              "Value": "/home/.composer"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_VERSION",
              "Value": "\"1.5.2\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "COMPOSER_SETUP_SHA",
              "Value": "544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "${PATH}:/usr/local/php/bin"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "php -r \"readfile('https://getcomposer.org/installer');\" \u003e /tmp/composer-setup.php     \u0026\u0026 php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) === getenv('COMPOSER_SETUP_SHA')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('/tmp/composer-setup.php'); echo PHP_EOL; exit(1); } echo PHP_EOL;\"     \u0026\u0026 mkdir -p /composer/bin     \u0026\u0026 php /tmp/composer-setup.php --install-dir=/usr/local/bin/ --filename=composer --version=${COMPOSER_VERSION}     \u0026\u0026 rm /tmp/composer-setup.php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php -r \"readfile('http://files.drush.org/drush.phar');\" \u003e /usr/local/bin/drush     \u0026\u0026 chmod +x /usr/local/bin/drush"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pecl install apcu     \u0026\u0026 echo \"extension=apcu.so\" \u003e\u003e /usr/local/etc/php/conf.d/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "/bin/init_container.sh"
          ],
          "Name": "entrypoint",
          "PrependShell": false
        }
      ]
    }
  ]
}