MetaArgs: null
Stages:
- BaseName: drsdre/php-yii2:7.0-cli-alpine
  Commands:
  - Maintainer: Andre Schuurman <docker@drsdre.org>
    Name: maintainer
  - Labels:
    - Key: Description
      Value: '"This image is PHP 7.0 running on Alpine with extension needed for Yii2
        application developement"'
    - Key: Vendor
      Value: '"Andre Schuurman"'
    - Key: Version
      Value: '"7.0-cli-alpine"'
    Name: label
  - CmdLine:
    - "apk upgrade -U && apk add --update \tgit \tvim \tscreen \twget \tcurl     --repository
      http://dl-cdn.alpinelinux.org/alpine/edge/main/     --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/
      \    --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/"
    Name: run
    PrependShell: true
  - CmdLine:
    - apk add --no-cache         $PHPIZE_DEPS     && pecl install -o -f xdebug     &&  rm
      -rf /tmp/pear     && docker-php-ext-enable xdebug
    Name: run
    PrependShell: true
  - Env:
    - Key: COMPOSER_HOME
      Value: /composer
    Name: env
  - Env:
    - Key: PATH
      Value: /composer/vendor/bin:$PATH
    Name: env
  - Env:
    - Key: COMPOSER_ALLOW_SUPERUSER
      Value: "1"
    Name: env
  - CmdLine:
    - curl -o /tmp/composer-setup.php https://getcomposer.org/installer   && curl
      -o /tmp/composer-setup.sig https://composer.github.io/installer.sig   && php
      -r "if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig')))
      { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1);
      }"
    Name: run
    PrependShell: true
  - CmdLine:
    - php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer
      --snapshot && rm -rf /tmp/composer-setup.php
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require "fxp/composer-asset-plugin:^1.2.0"
    Name: run
    PrependShell: true
  - CmdLine:
    - composer global require "codeception/codeception:*"
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "error_reporting = E_ALL" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "display_startup_errors = On" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "display_errors = On" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "xdebug.default_enable=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "xdebug.remote_enable=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "xdebug.remote_connect_back=0" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "xdebug.remote_port=9001" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "xdebug.profiler_enable=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "xdebug.profiler_output_dir=/tmp/snapshots" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini     &&
      echo "xdebug.profiler_enable_trigger=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias xoff="mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.off
      && kill -USR2 1"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'alias xon="mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.off
      /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && kill -USR2 1"' >> ~/.bashrc
    Name: run
    PrependShell: true
  - CmdLine:
    - echo -e 'http://dl-cdn.alpinelinux.org/alpine/edge/main\nhttp://dl-cdn.alpinelinux.org/alpine/edge/community\nhttp://dl-cdn.alpinelinux.org/alpine/edge/testing'
      > /etc/apk/repositories     apk add --no-cache yarn
    Name: run
    PrependShell: true
  - CmdLine:
    - rm -rf /tmp/* &&   rm -rf /var/cache/apk/*
    Name: run
    PrependShell: true
  From:
    Image: drsdre/php-yii2:7.0-cli-alpine
  Name: ""
  Platform: ""
  SourceCode: FROM drsdre/php-yii2:7.0-cli-alpine
