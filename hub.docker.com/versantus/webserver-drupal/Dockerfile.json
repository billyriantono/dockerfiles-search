{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "versantus/webserver-dev:latest",
      "SourceCode": "FROM versantus/webserver-dev:latest",
      "Platform": "",
      "From": {
        "Image": "versantus/webserver-dev:latest"
      },
      "Commands": [
        {
          "CmdLine": [
            "apt update \t\u0026\u0026 apt install -y --no-install-recommends     ca-certificates     openssh-client     rsync     wget     gzip     tar     patch     perl     php-pear     libpcre3-dev     imagemagick     php-imagick     php7.3-bcmath     mysql-client    php-curl    sendmail     inetutils-ping     telnet     php-mongodb    php-ssh2    php-soap    php-memcached    memcached     \u0026\u0026 rm -r /var/lib/apt/lists/*     \u0026\u0026 ln -sf /usr/bin/php7.3 /usr/bin/php"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'error_reporting = E_ALL' \u003e\u003e /etc/php/7.3/apache2/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'display_errors = On' \u003e\u003e /etc/php/7.3/apache2/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'max_execution_time = 120' \u003e\u003e /etc/php/7.3/apache2/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'max_input_time = 120' \u003e\u003e /etc/php/7.3/apache2/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'memory_limit = 256M' \u003e\u003e /etc/php/7.3/apache2/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'upload_max_filesize = 50M' \u003e\u003e /etc/php/7.3/apache2/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'post_max_size = 50M' \u003e\u003e /etc/php/7.3/apache2/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -Lsf 'https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz' | tar -C '/usr/local' -xvzf -"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "PATH",
              "Value": "/usr/local/go/bin:$PATH"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "go get github.com/mailhog/mhsendmail"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "cp /root/go/bin/mhsendmail /usr/bin/mhsendmail"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'sendmail_path = /usr/bin/mhsendmail --smtp-addr mailhog:1025' \u003e\u003e /etc/php/7.3/cli/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'sendmail_path = /usr/bin/mhsendmail --smtp-addr mailhog:1025' \u003e\u003e /etc/php/7.3/apache2/php.ini"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            ".bash_profile",
            "/root/.bash_profile"
          ]
        },
        {
          "CmdLine": [
            "cat /root/.bash_profile \u003e\u003e/root/.bashrc"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "VERSANTUS_ENV",
              "Value": "local"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "mkdir /var/www/drush"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "drush/drushrc.php",
            "/var/www/drush/drushrc.php"
          ]
        },
        {
          "CmdLine": [
            "mkdir /var/www/drush/Commands"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "drush/versantus_global_commands.drush.inc",
            "/var/www/drush/versantus_global_commands.drush.inc"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "drush/Commands/versantus_global_commands_shared.inc",
            "/var/www/drush/Commands/versantus_global_commands_shared.inc"
          ]
        },
        {
          "CmdLine": [
            "rm /bin/sh \u0026\u0026 ln -s /bin/bash /bin/sh"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "apt-get update     \u0026\u0026 apt-get install -y curl     \u0026\u0026 apt-get -y autoclean"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl --silent -o- /usr/local/nvm https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "source /root/.nvm/nvm.sh     \u0026\u0026 nvm install --lts     \u0026\u0026 nvm alias default lts/*     \u0026\u0026 nvm use default"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "SHELL",
              "Value": "/bin/bash"
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "bin/wkhtmltopdf",
            "/usr/bin/wkhtmltopdf"
          ]
        },
        {
          "CmdLine": [
            "apt update \u0026\u0026 apt install -y libxrender1"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "groupadd -g 1000 versantus \u0026\u0026     useradd -r -u 1000 -g versantus versantus -d /var/www/html"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apache.conf",
            "/etc/apache2/sites-available/000-default.conf"
          ]
        },
        {
          "Chown": "",
          "From": "",
          "Name": "copy",
          "SourcesAndDest": [
            "apache-envvars",
            "/etc/apache2/envvars"
          ]
        },
        {
          "CmdLine": [
            "ln -sf /dev/stdout /var/log/apache2/other_vhosts_access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/apache2/default_error_log"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "set -ex \t\u0026\u0026 buildDeps=' \t\tlibpng-dev \t\tlibpq-dev \t' \t\u0026\u0026 apt update \u0026\u0026 apt install -y --no-install-recommends ca-certificates $buildDeps \u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 apt-mark manual \t\tlibpq5 \t\u0026\u0026 apt purge -y --auto-remove $buildDeps"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "workdir",
          "Path": "/var/www/html"
        },
        {
          "CmdLine": [
            "chown -R versantus:versantus /var/www"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php7.3 -r \"readfile('https://github.com/drush-ops/drush/releases/download/8.1.17/drush.phar');\" \u003e drush \u0026\u0026 chmod +x drush \u0026\u0026 mv drush /usr/bin/"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "php7.3 -r \"readfile('https://drupalconsole.com/installer');\" \u003e drupal.phar \u0026\u0026 chmod +x drupal.phar \u0026\u0026 mv drupal.phar /usr/local/bin/drupal"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \u0026\u0026 chmod +x wp-cli.phar \u0026\u0026 mv wp-cli.phar /usr/local/bin/wp"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -O -L https://github.com/mglaman/drupal-check/releases/latest/download/drupal-check.phar \u0026\u0026 mv drupal-check.phar /usr/local/bin/drupal-check \u0026\u0026 chmod +x /usr/local/bin/drupal-check"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar \u0026\u0026 curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar \u0026\u0026 mv phpcs.phar /usr/local/bin/phpcs \u0026\u0026 chmod +x /usr/local/bin/phpcs \u0026\u0026 mv phpcbf.phar /usr/local/bin/phpcbf \u0026\u0026 chmod +x /usr/local/bin/phpcbf"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -OL https://github.com/PHPCompatibility/PHPCompatibility/archive/9.3.4.tar.gz \u0026\u0026 tar -xvzf 9.3.4.tar.gz -C /opt \u0026\u0026 phpcs --config-set installed_paths /opt/PHPCompatibility-9.3.4"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}