{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "jupyter/datascience-notebook:bb222f49222e",
      "SourceCode": "FROM jupyter/datascience-notebook:bb222f49222e",
      "Platform": "",
      "From": {
        "Image": "jupyter/datascience-notebook:bb222f49222e"
      },
      "Commands": [
        {
          "CmdLine": [
            "conda install pymysql -y \u0026\u0026 pip install git+https://github.com/catherinedevlin/ipython-sql.git \u0026\u0026 conda install --quiet --yes 'tensorflow=1.1*'"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install -y graphviz \u0026\u0026 pip install graphviz pydot-ng"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install psycopg2 folium"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "conda install --yes -c conda-forge geopandas"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "pip install more-itertools"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "root"
        },
        {
          "CmdLine": [
            "apt-get update \u0026\u0026 apt-get install -y --no-install-recommends \t\tbzip2 \t\tunzip \t\txz-utils \t\u0026\u0026 rm -rf /var/lib/apt/lists/*"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "echo 'deb http://deb.debian.org/debian jessie-backports main' \u003e /etc/apt/sources.list.d/jessie-backports.list"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "LANG",
              "Value": "C.UTF-8"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "{ \t\techo '#!/bin/sh'; \t\techo 'set -e'; \t\techo; \t\techo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \t} \u003e /usr/local/bin/docker-java-home \t\u0026\u0026 chmod +x /usr/local/bin/docker-java-home"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Env": [
            {
              "Key": "JAVA_HOME",
              "Value": "/usr/lib/jvm/java-8-openjdk-amd64"
            }
          ],
          "Name": "env"
        },
        {
          "CmdLine": [
            "set -x     \u0026\u0026 apt-get update     \u0026\u0026 apt-get install -y ca-certificates-java=20161107~bpo8+1 openjdk-8-jre-headless  openjdk-8-jre openjdk-8-jdk \t\u0026\u0026 rm -rf /var/lib/apt/lists/* \t\u0026\u0026 [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "/var/lib/dpkg/info/ca-certificates-java.postinst configure"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$NB_USER"
        },
        {
          "CmdLine": [
            "curl -L -o jupyter-scala https://git.io/vzhRi     \u0026\u0026 chmod +x jupyter-scala     \u0026\u0026 ./jupyter-scala     \u0026\u0026 rm -f jupyter-scala"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "CmdLine": [
            "curl -L -o kotlin-jupyter.zip https://github.com/ligee/kotlin-jupyter/archive/master.zip      \u0026\u0026 unzip kotlin-jupyter     \u0026\u0026 cd kotlin-jupyter-master \u0026\u0026 ./gradlew install \u0026\u0026 cd ../"
          ],
          "Name": "run",
          "PrependShell": true
        }
      ]
    }
  ]
}