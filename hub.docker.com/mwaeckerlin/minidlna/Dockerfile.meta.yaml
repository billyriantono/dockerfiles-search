MetaArgs: null
Stages:
- BaseName: ubuntu
  Commands:
  - Maintainer: mwaeckerlin
    Name: maintainer
  - Env:
    - Key: TERM
      Value: xterm
    Name: env
  - Env:
    - Key: FRIENDLY_NAME
      Value: '"minidlna@docker"'
    Name: env
  - Env:
    - Key: MODEL_NAME
      Value: '"minidlna"'
    Name: env
  - Env:
    - Key: MEDIA_DIR
      Value: '"/data"'
    Name: env
  - Env:
    - Key: ROOT_CONTAINER
      Value: '"B"'
    Name: env
  - Env:
    - Key: OPTIONS
      Value: '"-R -v"'
    Name: env
  - Env:
    - Key: ALBUM_ART_NAMES
      Value: '"Cover.jpg/cover.jpg/AlbumArtSmall.jpg/albumartsmall.jpg/AlbumArt.jpg/albumart.jpg/Album.jpg/album.jpg/Folder.jpg/folder.jpg/Thumb.jpg/thumb.jpg"'
    Name: env
  - Env:
    - Key: LANG
      Value: '"en_US.UTF-8"'
    Name: env
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y minidlna language-pack-en
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /data
    Name: run
    PrependShell: true
  - CmdLine:
    - chown minidlna.minidlna /data
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /config
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - start.sh
    - /start.sh
  - CmdLine:
    - /start.sh
    Name: cmd
    PrependShell: true
  - Name: volume
    Volumes:
    - /data
  - Name: volume
    Volumes:
    - /config
  - Name: expose
    Ports:
    - "8200"
  - Name: expose
    Ports:
    - "80"
  From:
    Image: ubuntu
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu
