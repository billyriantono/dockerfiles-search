{
  "MetaArgs": null,
  "Stages": [
    {
      "Name": "",
      "BaseName": "mwaeckerlin/base",
      "SourceCode": "FROM mwaeckerlin/base",
      "Platform": "",
      "From": {
        "Image": "mwaeckerlin/base"
      },
      "Commands": [
        {
          "Maintainer": "mwaeckerlin",
          "Name": "maintainer"
        },
        {
          "Key": "wwwuser",
          "Name": "arg",
          "Value": "\"nginx\""
        },
        {
          "Env": [
            {
              "Key": "WEB_ROOT_PATH",
              "Value": "/app"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WEB_ROOT",
              "Value": "/"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "MAX_BODY_SIZE",
              "Value": "0"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "AUTOINDEX",
              "Value": "off"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "ERROR_PAGE",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LOCATION_ROOT_RULES",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LDAP_HOST",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LDAP_BASE_DN",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LDAP_BIND_DN",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LDAP_BIND_PASS",
              "Value": "\"\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "LDAP_REALM",
              "Value": "\"Restricted\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "HTTP_PORT",
              "Value": "8080"
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "WWWUSER",
              "Value": "\"${wwwuser}\""
            }
          ],
          "Name": "env"
        },
        {
          "Env": [
            {
              "Key": "CONTAINERNAME",
              "Value": "\"nginx\""
            }
          ],
          "Name": "env"
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "default.conf",
            "/etc/nginx/conf.d/default.conf"
          ]
        },
        {
          "Chown": "",
          "Name": "add",
          "SourcesAndDest": [
            "config-nginx.sh",
            "/config-nginx.sh"
          ]
        },
        {
          "CmdLine": [
            "${PKG_INSTALL} nginx  \u0026\u0026 echo \"daemon off;\" \u003e\u003e /etc/nginx/nginx.conf  \u0026\u0026 sed -i '/error_log/d' /etc/nginx/nginx.conf  \u0026\u0026 echo \"error_log stderr notice;\" \u003e\u003e /etc/nginx/nginx.conf  \u0026\u0026 sed -i 's,access_log .*,access_log /dev/stdout combined;,' /etc/nginx/nginx.conf  \u0026\u0026 touch /var/lib/nginx/logs/error.log  \u0026\u0026 mkdir -p /usr/share/nginx  \u0026\u0026 mkdir /run/nginx  \u0026\u0026 chown -R $WWWUSER /run/nginx /etc/nginx  \u0026\u0026 chgrp -R 0 /run/nginx /etc/nginx /var/tmp/nginx /var/lib/nginx  \u0026\u0026 chmod -R g=u /run/nginx /etc/nginx /var/tmp/nginx /var/lib/nginx  \u0026\u0026 rm -r /var/log/nginx  \u0026\u0026 mv /var/lib/nginx/html /app"
          ],
          "Name": "run",
          "PrependShell": true
        },
        {
          "Name": "user",
          "User": "$WWWUSER"
        },
        {
          "Name": "expose",
          "Ports": [
            "${HTTP_PORT}"
          ]
        }
      ]
    }
  ]
}