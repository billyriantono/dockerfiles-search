MetaArgs: null
Stages:
- BaseName: danielperezr88/apache2:latest
  Commands:
  - Maintainer: danielperezr88 <danielperezr88@gmail.com>
    Name: maintainer
  - CmdLine:
    - /usr/sbin/a2enmod alias && /usr/sbin/a2enmod proxy && /usr/sbin/a2enmod proxy_http
      && /usr/sbin/a2enmod proxy_wstunnel
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y curl
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -L https://github.com/krallin/tini/releases/download/v0.6.0/tini > tini
      &&     mv tini /usr/local/bin/tini &&     chmod +x /usr/local/bin/tini
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get purge -y python.*
    Name: run
    PrependShell: true
  - Env:
    - Key: LANG
      Value: C.UTF-8
    Name: env
  - CmdLine:
    - gpg --keyserver ha.pool.sks-keyservers.net --recv-keys 97FC712E4C024BBEA48A61ED3A5CA953F73C700D
    Name: run
    PrependShell: true
  - Env:
    - Key: PYTHON_VERSION
      Value: 3.4.3
    Name: env
  - Env:
    - Key: PYTHON_PIP_VERSION
      Value: 7.0.3
    Name: env
  - CmdLine:
    - apt-get update && apt-get install -y xz-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y zlib1g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \t\tg++ \t\tgcc \t\tmake"
    Name: run
    PrependShell: true
  - CmdLine:
    - "apt-get update && apt-get install -y \tlibbz2-dev \tlibssl-dev \tlibmysqlclient-dev
      \tlibsqlite3-dev"
    Name: run
    PrependShell: true
  - CmdLine:
    - "set -x \t&& mkdir -p /usr/src/python \t&& curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz\"
      -o python.tar.xz \t&& curl -SL \"https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz.asc\"
      -o python.tar.xz.asc \t&& gpg --verify python.tar.xz.asc \t&& tar -xJC /usr/src/python
      --strip-components=1 -f python.tar.xz \t&& rm python.tar.xz* \t&& cd /usr/src/python
      \t&& ./configure --enable-shared --enable-unicode=ucs4 \t&& make -j$(nproc)
      \t&& make install \t&& ldconfig \t&& curl -SL 'https://bootstrap.pypa.io/get-pip.py'
      | python3 \t&& pip3 install --no-cache-dir --upgrade pip==$PYTHON_PIP_VERSION
      \t&& find /usr/local \t\t\\( -type d -a -name test -o -name tests \\) \t\t-o
      \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \t\t-exec rm -rf '{}' + \t&&
      rm -rf /usr/src/python"
    Name: run
    PrependShell: true
  - CmdLine:
    - "cd /usr/local/bin \t&& ln -s easy_install-3.4 easy_install \t&& ln -s idle3
      idle \t&& ln -s pydoc3 pydoc \t&& ln -s python3 python \t&& ln -s python-config3
      python-config"
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir virtualenv
    Name: run
    PrependShell: true
  - CmdLine:
    - "pip install --upgrade pip && \tpip install mysqlclient && \tpip install regex
      && \tpip install numpy && \tpip install pandas && \tpip install requests &&
      \tpip install scipy && \tpip install scikit-learn && \tpip install jupyter &&
      \tpip install Flask && \tpip install bokeh && \tpip install Tornado-JSON &&
      \tpip install -U gcloud"
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "80"
  - CmdLine:
    - tini
    - --
    Name: entrypoint
    PrependShell: false
  - CmdLine:
    - /usr/local/bin/jupyter
    - notebook
    - --no-browser
    - --port=80
    - --ip=0.0.0.0
    Name: cmd
    PrependShell: false
  From:
    Image: danielperezr88/apache2:latest
  Name: ""
  Platform: ""
  SourceCode: FROM danielperezr88/apache2:latest
