MetaArgs: null
Stages:
- BaseName: nvidia/cuda:10.0-devel-ubuntu18.04
  Commands:
  - Env:
    - Key: TENSORFLOW_VERSION
      Value: 1.14.0
    Name: env
  - Env:
    - Key: PYTORCH_VERSION
      Value: 1.1.0
    Name: env
  - Env:
    - Key: TORCHVISION_VERSION
      Value: 0.3.0
    Name: env
  - Env:
    - Key: CUDNN_VERSION
      Value: 7.6.0.64-1+cuda10.0
    Name: env
  - Env:
    - Key: NCCL_VERSION
      Value: 2.4.7-1+cuda10.0
    Name: env
  - Env:
    - Key: MXNET_VERSION
      Value: 1.5.0
    Name: env
  - Key: python
    Name: arg
    Value: "2.7"
  - Env:
    - Key: PYTHON_VERSION
      Value: ${python}
    Name: env
  - Name: shell
    Shell:
    - /bin/bash
    - -cu
  - CmdLine:
    - apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages
      --no-install-recommends         build-essential         cmake         g++-4.8         git         curl         vim         wget         ca-certificates         libcudnn7=${CUDNN_VERSION}         libnccl2=${NCCL_VERSION}         libnccl-dev=${NCCL_VERSION}         libjpeg-dev         libpng-dev         python${PYTHON_VERSION}         python${PYTHON_VERSION}-dev         librdmacm1         libibverbs1         ibverbs-providers
    Name: run
    PrependShell: true
  - CmdLine:
    - if [[ "${PYTHON_VERSION}" == "3.6" ]]; then         apt-get install -y python${PYTHON_VERSION}-distutils;     fi
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm
      get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install future typing
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install numpy         tensorflow-gpu==${TENSORFLOW_VERSION}         keras         h5py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install https://download.pytorch.org/whl/cu100/torch-${PYTORCH_VERSION}-$(python
      -c "import wheel.pep425tags as w; print('-'.join(w.get_supported()[0]))").whl         https://download.pytorch.org/whl/cu100/torchvision-${TORCHVISION_VERSION}-$(python
      -c "import wheel.pep425tags as w; print('-'.join(w.get_supported()[0]))").whl
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install mxnet-cu100==${MXNET_VERSION}
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/openmpi &&     cd /tmp/openmpi &&     wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.0.tar.gz
      &&     tar zxf openmpi-4.0.0.tar.gz &&     cd openmpi-4.0.0 &&     ./configure
      --enable-orterun-prefix-by-default &&     make -j $(nproc) all &&     make install
      &&     ldconfig &&     rm -rf /tmp/openmpi
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs &&     HOROVOD_GPU_ALLREDUCE=NCCL
      HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 HOROVOD_WITH_MXNET=1          pip
      install --no-cache-dir horovod &&     ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends openssh-client openssh-server &&     mkdir
      -p /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new
      &&     echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new &&     mv
      /etc/ssh/ssh_config.new /etc/ssh/ssh_config
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends subversion &&     svn checkout https://github.com/horovod/horovod/trunk/examples
      &&     rm -rf /examples/.svn
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/examples"'
  From:
    Image: nvidia/cuda:10.0-devel-ubuntu18.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:10.0-devel-ubuntu18.04
