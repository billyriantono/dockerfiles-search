MetaArgs: null
Stages:
- BaseName: nvidia/cuda:9.0-devel-ubuntu16.04
  Commands:
  - Env:
    - Key: TENSORFLOW_VERSION
      Value: 1.6.0
    Name: env
  - Env:
    - Key: CUDNN_VERSION
      Value: 7.0.5.15-1+cuda9.0
    Name: env
  - Env:
    - Key: NCCL_VERSION
      Value: 2.1.15-1+cuda9.0
    Name: env
  - Env:
    - Key: PYTHON_VERSION
      Value: "2.7"
    Name: env
  - CmdLine:
    - echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64
      /" > /etc/apt/sources.list.d/nvidia-ml.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         git         curl         vim         wget         ca-certificates         libcudnn7=$CUDNN_VERSION         libnccl2=$NCCL_VERSION         libnccl-dev=$NCCL_VERSION         libjpeg-dev         libpng-dev         python$PYTHON_VERSION         python$PYTHON_VERSION-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - ln -s /usr/bin/python$PYTHON_VERSION /usr/bin/python
    Name: run
    PrependShell: true
  - CmdLine:
    - curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm
      get-pip.py
    Name: run
    PrependShell: true
  - CmdLine:
    - pip install --no-cache-dir tensorflow-gpu==$TENSORFLOW_VERSION keras h5py
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /tmp/openmpi &&     cd /tmp/openmpi &&     wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz
      &&     tar zxf openmpi-3.0.0.tar.gz &&     cd openmpi-3.0.0 &&     ./configure
      --enable-orterun-prefix-by-default &&     make -j $(nproc) all &&     make install
      &&     ldconfig &&     rm -rf /tmp/openmpi
    Name: run
    PrependShell: true
  - CmdLine:
    - ldconfig /usr/local/cuda-9.0/targets/x86_64-linux/lib/stubs &&     HOROVOD_GPU_ALLREDUCE=NCCL
      pip install --no-cache-dir horovod &&     ldconfig
    Name: run
    PrependShell: true
  - CmdLine:
    - mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real &&     echo '#!/bin/bash'
      > /usr/local/bin/mpirun &&     echo 'mpirun.real --allow-run-as-root "$@"' >>
      /usr/local/bin/mpirun &&     chmod a+x /usr/local/bin/mpirun
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "hwloc_base_binding_policy = none" >> /usr/local/etc/openmpi-mca-params.conf
      &&     echo "rmaps_base_mapping_policy = slot" >> /usr/local/etc/openmpi-mca-params.conf
      &&     echo "btl_tcp_if_exclude = lo,docker0" >> /usr/local/etc/openmpi-mca-params.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - echo NCCL_DEBUG=INFO >> /etc/nccl.conf &&     echo NCCL_SOCKET_IFNAME=^docker0
      >> /etc/nccl.conf
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends openssh-client openssh-server &&     mkdir
      -p /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new
      &&     echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new &&     mv
      /etc/ssh/ssh_config.new /etc/ssh/ssh_config
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y --no-install-recommends subversion &&     svn checkout https://github.com/uber/horovod/trunk/examples
      &&     rm -rf /examples/.svn
    Name: run
    PrependShell: true
  - Name: workdir
    Path: '"/examples"'
  From:
    Image: nvidia/cuda:9.0-devel-ubuntu16.04
  Name: ""
  Platform: ""
  SourceCode: FROM nvidia/cuda:9.0-devel-ubuntu16.04
