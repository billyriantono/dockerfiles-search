MetaArgs: null
Stages:
- BaseName: ubuntu:16.04
  Commands:
  - Maintainer: Alexander Niculescu <al3xander.niculescu@gmail.com>, Da Zheng <zhengda1936@gmail.com>
    Name: maintainer
  - CmdLine:
    - apt-get update && apt-get install -y openssh-server
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir /var/run/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo 'root:screencast' | chpasswd
    Name: run
    PrependShell: true
  - CmdLine:
    - sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    Name: run
    PrependShell: true
  - CmdLine:
    - sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g'
      -i /etc/pam.d/sshd
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "deb http://cran.rstudio.com/bin/linux/ubuntu xenial/" >> /etc/apt/sources.list
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y git cmake g++
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libboost-dev libboost-system-dev libboost-filesystem-dev
      libaio-dev libatlas-base-dev zlib1g-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y numactl xfsprogs
    Name: run
    PrependShell: true
  - CmdLine:
    - if [ `numactl -H | grep "nodes" | awk '{print $2}'` -gt 1 ]; then apt-get install
      -y libnuma-dev libhwloc-dev; fi
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y wget vim
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/flashxio/FlashX.git
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /FlashX
  - CmdLine:
    - mkdir build
    Name: run
    PrependShell: true
  - Name: workdir
    Path: build
  - CmdLine:
    - cmake ..
    Name: run
    PrependShell: true
  - CmdLine:
    - make -j4
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y r-base
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages('Rcpp', repos = 'http://cran.rstudio.com/')"
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages('RSpectra', repos = 'http://cran.rstudio.com/')"
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages('igraph', repos = 'http://cran.rstudio.com/')"
    Name: run
    PrependShell: true
  - Name: workdir
    Path: /FlashX
  - CmdLine:
    - ./install_FlashR.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - ./install_FlashGraphR.sh
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y python3-pip
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get install -y libcurl4-openssl-dev libssl-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install --upgrade pip
    Name: run
    PrependShell: true
  - CmdLine:
    - pip3 install jupyter
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ',
      'devtools', 'uuid', 'digest'), repos = 'http://cran.rstudio.com/')"
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "devtools::install_github('IRkernel/IRkernel')"
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "IRkernel::installspec()"
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "IRkernel::installspec(user = FALSE)"
    Name: run
    PrependShell: true
  - CmdLine:
    - R -e "devtools::install_github('flashxio/FlashR-learn')"
    Name: run
    PrependShell: true
  - Env:
    - Key: NOTVISIBLE
      Value: '"in users profile"'
    Name: env
  - CmdLine:
    - echo "export VISIBLE=now" >> /etc/profile
    Name: run
    PrependShell: true
  - Name: expose
    Ports:
    - "22"
  - CmdLine:
    - /usr/sbin/sshd
    - -D
    Name: cmd
    PrependShell: false
  - Name: expose
    Ports:
    - "8888"
  - CmdLine:
    - jupyter
    - notebook
    - --ip=0.0.0.0
    - --no-browser
    - --allow-root
    Name: cmd
    PrependShell: false
  From:
    Image: ubuntu:16.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:16.04
