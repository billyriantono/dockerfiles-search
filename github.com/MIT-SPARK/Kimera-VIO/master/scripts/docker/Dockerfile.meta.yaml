MetaArgs: null
Stages:
- BaseName: ubuntu:18.04
  Commands:
  - Maintainer: Antoni Rosinol "arosinol@mit.edu"
    Name: maintainer
  - Env:
    - Key: DEBIAN_FRONTEND
      Value: noninteractive
    Name: env
  - Env:
    - Key: DIRPATH
      Value: /root
    Name: env
  - Name: workdir
    Path: $DIRPATH
  - CmdLine:
    - apt-get update && apt-get install -y --no-install-recommends apt-utils
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y git cmake
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y xvfb
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libboost-all-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/borglab/gtsam.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd gtsam &&     git fetch &&     mkdir build &&     cd build &&     cmake -DCMAKE_INSTALL_PREFIX=/usr/local
      -DGTSAM_BUILD_TESTS=OFF -DGTSAM_BUILD_EXAMPLES_ALWAYS=OFF -DCMAKE_BUILD_TYPE=Release
      -DGTSAM_BUILD_UNSTABLE=ON .. &&     make -j$(nproc) install
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y       build-essential cmake unzip pkg-config       libjpeg-dev
      libpng-dev libtiff-dev       libvtk6-dev       libgtk-3-dev       libatlas-base-dev
      gfortran
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/opencv/opencv.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd opencv &&       git checkout tags/3.3.1 &&       mkdir build
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/opencv/opencv_contrib.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd opencv_contrib &&       git checkout tags/3.3.1
    Name: run
    PrependShell: true
  - CmdLine:
    - cd opencv/build &&       cmake -DCMAKE_BUILD_TYPE=Release       -DCMAKE_INSTALL_PREFIX=/usr/local       -D
      BUILD_opencv_python=OFF       -D BUILD_opencv_python2=OFF       -D BUILD_opencv_python3=OFF       -DOPENCV_EXTRA_MODULES_PATH=$DIRPATH/opencv_contrib/modules
      .. &&       make -j$(nproc) install
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/laurentkneip/opengv
    Name: run
    PrependShell: true
  - CmdLine:
    - cd opengv &&       mkdir build
    Name: run
    PrependShell: true
  - CmdLine:
    - cd opengv/build &&       cmake -DCMAKE_BUILD_TYPE=Release       -DCMAKE_INSTALL_PREFIX=/usr/local       -DEIGEN_INCLUDE_DIRS=$DIRPATH/gtsam/gtsam/3rdparty/Eigen       -DEIGEN_INCLUDE_DIR=$DIRPATH/gtsam/gtsam/3rdparty/Eigen
      .. &&       make -j$(nproc) install
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/dorian3d/DBoW2.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd DBoW2 &&       mkdir build &&       cd build &&       cmake .. &&       make
      -j$(nproc) install
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master
    - version.json
  - CmdLine:
    - git clone https://github.com/MIT-SPARK/Kimera-RPGO.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make
      -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y python-pip python-dev python-tk
    Name: run
    PrependShell: true
  - Chown: ""
    Name: add
    SourcesAndDest:
    - https://api.github.com/repos/ToniRV/spark_vio_evaluation/git/refs/heads/master
    - version.json
  - CmdLine:
    - git clone https://github.com/ToniRV/spark_vio_evaluation.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd spark_vio_evaluation && pip install .
    Name: run
    PrependShell: true
  - Key: SSH_PRIVATE_KEY
    Name: arg
    Value: null
  - CmdLine:
    - mkdir /root/.ssh/
    Name: run
    PrependShell: true
  - CmdLine:
    - echo "${SSH_PRIVATE_KEY}" > /root/.ssh/id_rsa
    Name: run
    PrependShell: true
  - CmdLine:
    - chmod 600 ~/.ssh/id_rsa
    Name: run
    PrependShell: true
  - CmdLine:
    - touch /root/.ssh/known_hosts
    Name: run
    PrependShell: true
  - CmdLine:
    - ssh-keyscan -t rsa github.com >> /root/.ssh/known_hosts
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y libgflags2.2 libgflags-dev libgoogle-glog0v5
      libgoogle-glog-dev
    Name: run
    PrependShell: true
  - CmdLine:
    - git clone https://github.com/MIT-SPARK/Kimera-VIO.git
    Name: run
    PrependShell: true
  - CmdLine:
    - cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)
    Name: run
    PrependShell: true
  - CmdLine:
    - apt-get update && apt-get install -y wget
    Name: run
    PrependShell: true
  - CmdLine:
    - wget http://robotics.ethz.ch/~asl-datasets/ijrr_euroc_mav_dataset/vicon_room1/V1_01_easy/V1_01_easy.zip
    Name: run
    PrependShell: true
  - CmdLine:
    - mkdir -p $DIRPATH/euroc && unzip V1_01_easy.zip -d $DIRPATH/euroc
    Name: run
    PrependShell: true
  - CmdLine:
    - bash $DIRPATH/Kimera-VIO/scripts/euroc/yamelize.bash -p $DIRPATH/euroc
    Name: run
    PrependShell: true
  - CmdLine:
    - $DIRPATH/Kimera-VIO/scripts/stereoVIOEuroc.bash -p $DIRPATH/euroc -r
    Name: cmd
    PrependShell: true
  From:
    Image: ubuntu:18.04
  Name: ""
  Platform: ""
  SourceCode: FROM ubuntu:18.04
